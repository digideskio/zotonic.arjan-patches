PubSub XMPP implementation

diff -r d551623afde5 .hgignore
--- a/.hgignore	Sun Jan 31 18:55:12 2010 +0100
+++ b/.hgignore	Sun Jan 31 23:15:26 2010 +0100
@@ -10,3 +10,9 @@
 priv/sites/*/config
 *.orig
 zotonic.tmproj
+*.o
+*.lo
+*.la
+*.lai
+*.so
+*.Plo
diff -r d551623afde5 Emakefile
--- a/Emakefile	Sun Jan 31 18:55:12 2010 +0100
+++ b/Emakefile	Sun Jan 31 23:15:26 2010 +0100
@@ -17,6 +17,7 @@
  [	{i, "include"},
 	{i, "src/dbdrivers/postgresql/include"},
 	{i, "deps/webmachine/include"},
+	{i, "deps/exmpp/include"},
   	{outdir, "ebin"},
   	debug_info
  ]
diff -r d551623afde5 Makefile
--- a/Makefile	Sun Jan 31 18:55:12 2010 +0100
+++ b/Makefile	Sun Jan 31 23:15:26 2010 +0100
@@ -4,7 +4,7 @@
 APP          := zotonic
 PARSER        =src/erlydtl/erlydtl_parser
 
-all: mochiweb webmachine erlang-oauth $(PARSER).erl erl ebin/$(APP).app 
+all: mochiweb webmachine erlang-oauth exmpp $(PARSER).erl erl ebin/$(APP).app 
 
 erl:
 	@$(ERL) -pa $(EBIN_DIRS) -pa ebin -noinput +B \
@@ -22,6 +22,9 @@
 erlang-oauth:
 	(cd deps/erlang-oauth; make)
 
+exmpp:
+	(cd deps/exmpp; make)
+
 docs:
 	@erl -noshell -run edoc_run application '$(APP)' '"."' '[]'
 
diff -r d551623afde5 deps/exmpp/ChangeLog
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/ChangeLog	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,3626 @@
+2010-01-29  ppolvorin
+
+	* examples/bosh_client.erl, src/network/exmpp_bosh.erl,
+	  src/network/exmpp_session.erl:
+	  Fix bugs and add support for specify local IP/port (BOSH
+	  connections only)
+	  
+	  API changes: exmpp_session:connect_BOSH(Session, URL, Server,
+	  Port) (where the last parameter was unused)
+	  
+	  is now: exmpp_session:connect_BOSH(Session, URL, Server, Options)
+	  where Options is a (possible empty) list of {local_ip, IP}
+	  {local_port, fun() -> integer()}
+
+2010-01-28  badlop
+
+	* include/exmpp_nss.hrl:
+	  Update NS_BOSH from Jabber's http-bind to XMPP's bosh (thanks to
+	  Karim Gemayel)
+
+2010-01-25  badlop
+
+	* src/network/exmpp_session.erl:
+	  Fix processing of presence without From attribute.
+
+	* src/network/exmpp_session.erl:
+	  Fix support for SASL ANONYMOUS auth.
+
+2010-01-12  badlop
+
+	* EPLICENCE, c_src/exmpp_compress.h, c_src/exmpp_compress_zlib.c,
+	  c_src/exmpp_driver.c, c_src/exmpp_driver.h,
+	  c_src/exmpp_stringprep.c, c_src/exmpp_tls.c, c_src/exmpp_tls.h,
+	  c_src/exmpp_tls_openssl.c, c_src/exmpp_xml.c, c_src/exmpp_xml.h,
+	  c_src/exmpp_xml_expat.c, c_src/exmpp_xml_expat_legacy.c,
+	  c_src/exmpp_xml_libxml2.c, doc/overview.edoc,
+	  examples/bosh_client.erl, examples/echo_client.erl,
+	  examples/echo_component.erl, include/exmpp.hrl,
+	  include/exmpp_client.hrl, include/exmpp_nss.hrl,
+	  include/exmpp_xml.hrl, include/exmpp_xmpp.hrl, include/jlib.hrl,
+	  src/client/exmpp_client_binding.erl,
+	  src/client/exmpp_client_compression.erl,
+	  src/client/exmpp_client_disco.erl,
+	  src/client/exmpp_client_legacy_auth.erl,
+	  src/client/exmpp_client_muc.erl,
+	  src/client/exmpp_client_privacy.erl,
+	  src/client/exmpp_client_pubsub.erl,
+	  src/client/exmpp_client_register.erl,
+	  src/client/exmpp_client_roster.erl,
+	  src/client/exmpp_client_sasl.erl,
+	  src/client/exmpp_client_session.erl,
+	  src/client/exmpp_client_tls.erl, src/compat/ejabberd_socket.erl,
+	  src/compat/ejabberd_zlib.erl, src/compat/jlib.erl,
+	  src/compat/stringprep.erl, src/compat/tls.erl,
+	  src/compat/xml.erl, src/compat/xml_stream.erl,
+	  src/core/exmpp.erl, src/core/exmpp_compress.erl,
+	  src/core/exmpp_dialback.erl, src/core/exmpp_internals.erl,
+	  src/core/exmpp_iq.erl, src/core/exmpp_jid.erl,
+	  src/core/exmpp_message.erl, src/core/exmpp_presence.erl,
+	  src/core/exmpp_stanza.erl, src/core/exmpp_stream.erl,
+	  src/core/exmpp_stringprep.erl, src/core/exmpp_sup.erl,
+	  src/core/exmpp_tls.erl, src/core/exmpp_utils.erl,
+	  src/core/exmpp_xml.erl, src/core/exmpp_xmlstream.erl,
+	  src/network/exmpp_bosh.erl, src/network/exmpp_component.erl,
+	  src/network/exmpp_session.erl, src/network/exmpp_ssl.erl,
+	  src/network/exmpp_tcp.erl, src/server/exmpp_server_binding.erl,
+	  src/server/exmpp_server_compression.erl,
+	  src/server/exmpp_server_legacy_auth.erl,
+	  src/server/exmpp_server_privacy.erl,
+	  src/server/exmpp_server_sasl.erl,
+	  src/server/exmpp_server_session.erl,
+	  src/server/exmpp_server_tls.erl, testsuite/check_coverity.erl,
+	  testsuite/check_legacy_auth.erl, testsuite/check_stream.erl,
+	  testsuite/check_xml_attribute_handlers.erl,
+	  testsuite/check_xml_cdata_handlers.erl,
+	  testsuite/check_xml_converters.erl,
+	  testsuite/check_xml_element_handlers.erl,
+	  testsuite/check_xml_path.erl, testsuite/check_xmlstream.erl,
+	  testsuite/eunit_tty.erl, testsuite/iq.erl, testsuite/jid.erl,
+	  testsuite/stanza.erl, testsuite/xml_attributes.erl,
+	  testsuite/xml_parser.erl:
+	  Update year of copyright from 2009 to 2010.
+
+2010-01-09  ppolvorin
+
+	* ebin/Makefile.am:
+	  Bug fix: exmpp_client_muc.beam was listed twice.
+
+2010-01-06  ppolvorin
+
+	* src/network/exmpp_bosh.erl:
+	  Remove uneccesary waits.
+	  
+	  The spec says that we only need to respect the polling interval
+	  if we are sending empty requests. Here we don't send empty
+	  requests, so no need to wait.
+
+2009-12-30  ppolvorin
+
+	* src/network/exmpp_bosh.erl:
+	  Fix overactivity/inactivity handling.
+	  
+	  Queue stanzas that can't be sent inmediately, either because we
+	  reach the limit on # open requests, or because we are inside the
+	  minimum polling period.
+
+2009-12-23  ppolvorin
+
+	* src/client/exmpp_client_binding.erl,
+	  src/network/exmpp_session.erl:
+	  Support for SASL ANONYMOUS.
+	  
+	  Note that the API changed, exmpp_session:login/2 returns {ok,
+	  JID} instead of only 'ok'.
+
+2009-12-18  ppolvorin
+
+	* src/network/exmpp_session.erl:
+	  Rollback #892 (see EXMPP-23).
+	  
+	  Let the workaround until we find the real reason.
+
+2009-12-15  jpcarlino
+
+	* ebin/Makefile.am, ebin/exmpp.app.in:
+	  include exmpp_client_muc module
+
+2009-12-14  ppolvorin
+
+	* examples/bosh_client.erl, src/network/exmpp_session.erl:
+	  Do not try to start inets and stringprep each time a new
+	  exmpp_session is created.
+
+2009-12-14  badlop
+
+	* configure.ac:
+	  Prepare 0.9.2 release.
+
+	* src/core/exmpp_iq.erl, src/core/exmpp_jid.erl,
+	  src/core/exmpp_message.erl, src/core/exmpp_presence.erl,
+	  src/core/exmpp_stanza.erl, src/core/exmpp_stream.erl,
+	  src/core/exmpp_stringprep.erl, src/core/exmpp_xml.erl,
+	  src/core/exmpp_xmlstream.erl:
+	  Revert a recent commit about bool and boolean because it only
+	  works with R13 (EXMPP-22)
+
+2009-12-14  kgemayel
+
+	* src/client/exmpp_client_disco.erl:
+	  exmpp_client_disco.erl : fix iq_id to iq_id()
+
+	* ebin/exmpp.app.in:
+	  ebin/exmpp.app.in : update for exmpp_client_disco.erl
+
+	* ebin/Makefile.am:
+	  ebin/Makefile.am : update for exmpp_client_disco.erl
+
+	* src/Makefile.am:
+	  src/Makefile.am : update for exmpp_client_disco.erl
+
+	* src/Emakefile.in:
+	  src/Emakefile.in : update for exmpp_client_disco.erl
+
+	* doc/Makefile.am:
+	  doc/Makefile.am : update for exmpp_client_disco.erl
+
+	* src/client/exmpp_client_disco.erl,
+	  src/client/exmpp_client_pubsub.erl:
+	  new client/exmpp_client_disco.erl module added
+
+	* src/client/exmpp_client_pubsub.erl:
+	  client/exmpp_client_pubsub.erl : remove ?IQ, ?IQ_GET and ?IQ_SET
+	  macros (now defined in include/exmpp_xmpp.hrl) ; fix indentation
+
+	* include/exmpp_xmpp.hrl:
+	  include/exmpp_xmpp.hrl : add ?IQ, ?IQ_GET and ?IQ_SET macros
+
+2009-12-11  badlop
+
+	* src/core/exmpp_iq.erl, src/core/exmpp_jid.erl,
+	  src/core/exmpp_message.erl, src/core/exmpp_presence.erl,
+	  src/core/exmpp_stanza.erl, src/core/exmpp_stream.erl,
+	  src/core/exmpp_stringprep.erl, src/core/exmpp_xml.erl,
+	  src/core/exmpp_xmlstream.erl:
+	  Fix warnings about bool() type spec renamed to boolean()
+
+2009-12-11  ppolvorin
+
+	* src/network/exmpp_bosh.erl:
+	  Bug fixes and improvements
+	  
+	  * parse the bosh URL (host, port, etc.) only once per session,
+	  not on each request * use a random initial RID * reuse the same
+	  exmpp_xmlstream instead of creating a new parser for each
+	  received response
+
+2009-12-11  badlop
+
+	* README:
+	  expat library is required; the alternative libxml2 is only
+	  experimental (EXMPP-16)
+
+	* configure.ac:
+	  Autodetect compilation parameters for Mac OS X Snow Leopard
+	  (EXMPP-18)
+
+2009-12-08  ppolvorin
+
+	* src/network/exmpp_bosh.erl:
+	  Typo fix: the terminating reason and response were in the wrong
+	  order
+
+2009-12-04  ppolvorin
+
+	* examples/bosh_client.erl, examples/echo_client.erl,
+	  src/network/exmpp_bosh.erl, src/network/exmpp_session.erl:
+	  Improve bosh client implementation.
+	  
+	  It is working, but should be considered a work in progress. It
+	  uses SASL PLAIN for authentication.
+
+2009-12-03  ppolvorin
+
+	* src/network/exmpp_session.erl:
+	  Remove comment that don't match the code anymore (we can use 1.0
+	  streams now)
+
+	* src/network/exmpp_session.erl, src/network/exmpp_ssl.erl,
+	  src/network/exmpp_tcp.erl:
+	  Adds initial support for "1.0" streams and sasl authentication.
+	  
+	  For now only the PLAIN mechanism is supported.
+
+2009-11-25  badlop
+
+	* src/network/exmpp_session.erl:
+	  Support for stream error stanzas in exmpp_session when logged in
+	  (thanks to Julien Barbot)(EXMPP-13)
+
+2009-11-24  badlop
+
+	* doc/Makefile.am, ebin/Makefile.am, src/Makefile.am:
+	  Add exmpp_component files to build scripts (thanks to Ery
+	  Lee)(EXMPP-8)
+
+2009-11-24  ppolvorin
+
+	* src/network/exmpp_session.erl, src/network/exmpp_ssl.erl,
+	  src/network/exmpp_tcp.erl:
+	  Bugfix: handling of connection shutdown and unexpected
+	  disconnections. Includes patch from (EXMPP-8).
+	  
+	  Fix the order of connection shutdown, be sure to close the stop
+	  reading from socket before closing the parser port.
+	  
+	  Notify the exmpp_session process when the tcp connection breaks,
+	  not the client process. (thanks to Ery Lee.)
+
+2009-11-23  ppolvorin
+
+	* src/core/exmpp_iq.erl:
+	  Bug fix: do not crash on get_payload_ns_as_atom/1 if there is no
+	  payload. Return 'undefined' instead.
+
+2009-11-13  ppolvorin
+
+	* doc/Makefile.am:
+	  Bug fix: exmpp_compress was listed twice in the /doc Makefile.
+
+2009-11-02  ppolvorin
+
+	* src/core/exmpp_iq.erl, src/network/exmpp_component.erl,
+	  src/network/exmpp_session.erl:
+	  Populate the querydns field for IQ packets (EXMPP-14)
+	  
+	  The field querydns of the received_packet record wasn't used.
+	  Thanks to pablo platt.
+
+2009-11-01  badlop
+
+	* c_src/exmpp_stringprep.c:
+	  Fix stringprep Bidi checking (thanks to Alexey
+	  Shchepin)(EXMPP-17)
+
+2009-10-20  ppolvorin
+
+	* src/server/exmpp_server_legacy_auth.erl:
+	  Small bug fix: fix the code that includes suplied username into
+	  legacy auth form
+
+2009-10-01  ppolvorin
+
+	* c_src/exmpp_xml_expat.c, testsuite/xml_parser.erl:
+	  Fix bug when parsing empty namespaces with expat (EXMPP-11)
+	  (thanks to Nathan Zorn)
+	  
+	  The bug causes the VM to segfault when parsing XML content that
+	  has a declaration like <b xmlns=''> . Testcase added.
+
+2009-09-21  badlop
+
+	* ebin/exmpp.app.in:
+	  Replace wrong mention of exmpp_stanzas to exmpp_stanza (thanks to
+	  Pablo Platt)(EXMPP-12)
+
+	* src/server/exmpp_server_compression.erl:
+	  Fix namespace in compression's method element.
+
+2009-09-14  ppolvorin
+
+	* src/core/exmpp_jid.erl, src/network/exmpp_component.erl,
+	  src/network/exmpp_session.erl:
+	  from field of #received_packets becomes {lnode, lomain,
+	  lresource} Thanks to Eric Cestari (EXMPP-3).
+	  
+	  Also a new function to_lower/1 was added to exmpp_jid.
+
+2009-09-09  ppolvorin
+
+	* ebin/Makefile.am, src/Emakefile.in, src/Makefile.am,
+	  src/client/exmpp_client_muc.erl:
+	  Add helper functions for MUC managment.
+	  
+	  Only kick and ban stanzas for now.
+
+2009-09-08  ppolvorin
+
+	* src/network/exmpp_component.erl:
+	  Fix #xmlcdata type (thanks dialyzer!)
+
+2009-08-28  ppolvorin
+
+	* src/core/exmpp_internals.erl, src/core/exmpp_tls.erl:
+	  Fix documented and expected type of
+	  exmpp_internals:gen_getopts/2.
+	  
+	  Correct return type is {ok, [Opt]} instead of [Opt]
+
+2009-08-23  kgemayel
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Fix exmpp_client_pubsub:get_owner_affiliations/3
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Fix exmpp_client_pubsub:set_owner_affiliations/3
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Fix exmpp_client_pubsub:set_owner_affiliations/3
+
+2009-08-20  ppolvorin
+
+	* doc/Makefile.am, ebin/Makefile.am, ebin/exmpp.app.in,
+	  examples/echo_component.erl, src/Emakefile.in, src/Makefile.am,
+	  src/network/exmpp_component.erl:
+	  External component support (EXMPP-8) thanks to Ery Lee.
+	  
+	  Helper module to write external components using exmpp.
+
+2009-08-18  ppolvorin
+
+	* src/client/exmpp_client_roster.erl:
+	  support roster groups in exmpp_client_roster:set_item/4
+
+2009-08-03  badlop
+
+	* README:
+	  Emphasize that autoconf patch is only required in old 2.62 and
+	  2.63.
+	  
+	  2.63b and the recent 2.64 are reported to be fixed: News on
+	  Erlang support in GNU Autoconf 2.64
+	  http://www.berabera.info/en/node/193
+
+2009-07-17  badlop
+
+	* include/exmpp_nss.hrl:
+	  Add NS_SERVERINFO for XEP-0157.
+
+2009-06-30  badlop
+
+	* include/exmpp_nss.hrl:
+	  Add NS_MSGOFFLINE for XEP-0160.
+
+2009-06-12  kgemayel
+
+	* src/client/exmpp_client_pubsub.erl:
+	  fix exmpp_client_pubsub:publish/4
+
+2009-06-11  kgemayel
+
+	* src/client/exmpp_client_pubsub.erl:
+	  exmpp_client_pubsubs : some fixes ; new macros added :
+	  ?PUBSUB(NS, Children), ?IQ_SET(Service, Id), ?IQ_GET(Service, Id)
+
+2009-06-10  kgemayel
+
+	* src/client/exmpp_client_pubsub.erl:
+	  fix exmpp_client_pubsub
+
+	* src/client/exmpp_client_pubsub.erl:
+	  fix exmpp_client_pubsub
+
+	* src/client/exmpp_client_pubsub.erl:
+	  fix exmpp_client_pubsub
+
+	* src/client/exmpp_client_pubsub.erl:
+	  fix exmpp_client_pubsub
+
+	* src/client/exmpp_client_pubsub.erl:
+	  fix exmpp_client_pubsub
+
+	* src/client/exmpp_client_pubsub.erl:
+	  fix exmpp_pubsub_client
+
+2009-06-08  kgemayel
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Extending 'exmpp_client_pubsub' : fix publish/2
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Extending 'exmpp_client_pubsub' : set_owner_affiliations/3,
+	  set_owner_affiliations/4
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Extending 'exmpp_client_pubsub' : publish/2 (aka as PEP)
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Extending 'exmpp_client_pubsub' : get_owner_affiliations/2,
+	  get_owner_affiliations/3
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Extending 'exmpp_client_pubsub' : set_owner_subscriptions/3,
+	  set_owner_subscriptions/4
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Extending 'exmpp_client_pubsub' : get_owner_subscriptions/2,
+	  get_owner_subscriptions/3
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Extending 'exmpp_client_pubsub' : purge_items/2, purge_items/3
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Extending 'exmpp_client_pubsub' : get_default_configuration/2,
+	  get_default_configuration/3
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Extending 'exmpp_client_pubsub' : fix @spec for
+	  set_node_configuration/3 and set_node_configuration/4
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Extending 'exmpp_client_pubsub' : set_node_configuration/3,
+	  set_node_configuration/4
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Extending 'exmpp_client_pubsub' : get_node_configuration/2,
+	  get_node_configuration/3
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Extending 'exmpp_client_pubsub' : create_and_configure_node/3,
+	  create_and_configure_node/4
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Extending 'exmpp_client_pubsub' : create_instant_node/1,
+	  create_instant_node/2
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Extending 'exmpp_client_pubsub' : retract/3, retract/4
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Extending 'exmpp_client_pubsub' : fix get_items_max/3
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Extending 'exmpp_client_pubsub' : get_items_max/3,
+	  get_items_max/4
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Extending 'exmpp_client_pubsub' : fixing get_items_by_id/3
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Extending 'exmpp_client_pubsub' : get_items_by_id/3,
+	  get_items_by_id/4
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Extending 'exmpp_client_pubsub' : get_items/2, get_items/3
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Extending 'exmpp_client_pubsub' : subscribe_and_configure/4,
+	  subscribe_and_configure/5
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Extending 'exmpp_client_pubsub' : get_subscriptions_options/3,
+	  get_subscriptions_options/4, set_subscriptions_options/4,
+	  set_subscriptions_options/5
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Extending 'exmpp_client_pubsub' : unsubscribe/3 and unsubscribe/4
+
+	* src/client/exmpp_client_pubsub.erl:
+	  Extending 'exmpp_client_pubsub' : get_affiliations/1,
+	  get_affiliations/2, get_subscriptions/1 and get_subscriptions/2
+
+2009-06-03  badlop
+
+	* src/core/exmpp_internals.erl, src/core/exmpp_stream.erl,
+	  src/core/exmpp_tls.erl, src/core/exmpp_xml.erl,
+	  src/network/exmpp_session.erl:
+	  Fix indentation
+
+	* src/network/exmpp_bosh.erl:
+	  Fix header include. Add ifdef to bosh_send_async/5 definition.
+
+	* Makefile.am:
+	  Include the ChangeLog file in released packages.
+
+	* ChangeLog, Makefile.am:
+	  No longer edit ChangeLog, will be auto generated for exmpp
+	  releases.
+	  
+	  Added new call 'make changelog' which generates a ChangeLog file
+	  by prepending to the old file obtained from SVN the new lines
+	  obtained from SVN Log and formatted with svn2cl. ChangeLog will
+	  be generated and included in exmpp releases.
+
+	* README, configure:
+	  Revert my previous idea; in SVN you need to run autoreconf to
+	  build several files.
+
+2009-06-03  mremond
+
+	* examples/Emakefile.in:
+	  Now build BOSH client in example
+
+	* configure, src/Makefile.am:
+	  Fix typo in makefile
+
+2009-06-01 Karim Gemayel <kgemayel@process-one.net>
+
+	* src/core/exmpp_jid.erl: API renaming :
+	         prepd_bare_to_binary -> prep_bare_to_binary ;
+	
+	API renaming to fix rev789 :
+	        prep_bare_jid_to_list -> prep_bare_to_list 
+
+2009-05-30  Badlop  <badlop@process-one.net>
+
+	* src/core/exmpp_jid.erl: Fix function name collision: old
+	internal function to_binary/1 renamed to storbi2bi/1. Rename
+	compare/2 to full_compare/2 and add compare/2 which just calls
+	full_compare/2.
+
+2009-05-29 Karim Gemayel <kgemayel@process-one.net>
+
+        * examples/bosh_client.erl : API renaming :
+                make_jid -> make ;
+        * examples/echo_client.erl : API renaming :
+                make_jid -> make ;
+        * include/internal/exmpp_xmpp.hrl : API renaming :
+                make_jid -> make ;
+                ldomain -> prep_domain ;
+                lnode -> prep_node ;
+                lresource -> prep_resource ;
+        * include/jlib.hrl : API renaming :
+                lresource -> prep_resource ;
+        * src/client/exmpp_client_binding.erl : API renaming :
+                parse_jid -> parse ;
+        * src/compat/jlib.erl : API renaming :
+                make_jid -> make ;
+                parse_jid -> parse ;
+                lresource -> prep_resource ;
+                jid_to_list -> to_list ;
+        * src/core/exmpp_jid.erl : API renaming :
+                make_jid -> make ;
+                jid_to_bare_jid -> bare ;
+                bare_jid_to_jid -> full ;
+                parse_jid -> parse ;
+                ldomain -> prep_domain ;
+                ldomain_as_list -> prep_domain_as_list ;
+                lnode -> prep_node ;
+                lnode_as_list -> prep_node_as_list ;
+                lresource -> prep_resource ;
+                lresource_as_list -> prep_resource_as_list ;
+                compare_jids -> compare ;
+                compare_bare_jids -> bare compare ;
+                jid_to_list -> to_list ;
+                prepd_jid_to_list -> prep_to_list ;
+                bare_jid_to_list -> bare_to_list ;
+                prepd_bare_jid_to_list -> prep_bare_to_list ;
+                jid_to_binary -> to_binary ;
+                prepd_jid_to_binary -> prep_to_binary ;
+                bare_jid_to_binary -> bare_to_binary ;
+        * src/core/exmpp_stanza.erl : API renaming :
+                parse_jid -> parse ;
+                jid_to_binary -> to_binary ;
+        * src/server/exmpp_server_binding.erl : API renaming :
+                jid_to_binary -> to_binary ;
+        * testsuite/jid.erl : API renaming :
+                make_jid -> make ;
+                jid_to_bare_jid -> bare ;
+                bare_jid_to_jid -> full ;
+                parse_jid -> parse ;
+                ldomain -> prep_domain ;
+                ldomain_as_list -> prep_domain_as_list ;
+                lnode -> prep_node ;
+                lnode_as_list -> prep_node_as_list ;
+                lresource -> prep_resource ;
+                compare_jids -> compare ;
+                compare_bare_jids -> bare compare ;
+                bare_jid_to_list -> bare_to_list ;
+                jid_to_binary -> to_binary ;
+                bare_jid_to_binary -> bare_to_binary ;
+
+2009-05-17  Mickael Remond  <mremond@process-one.net>
+
+	* src/core/exmpp_xmlstream.erl: Add option to remove enclosing Bosh tag
+	(body).
+
+	* src/network/exmpp_bosh.erl: Preliminary bosh support (XEP-0124).
+	* src/network/exmpp_session.erl: Likewise.
+
+	* examples/bosh_client.erl: Example / test bosh client.
+
+2009-04-24  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_presence.erl (set_type/2, set_show/2): Instead of
+	just checking if the argument is valid, use the 'case' to convert the
+	arguemnt to binary() too.
+
+	* src/core/exmpp_message.erl: Add contracts.
+	(set_type/2): Support binary() and string() correctly.
+	(set_subject/2, set_body/2, set_thread/2): Treat the empty_binary()
+	before the empty string() because now, binary() is the primary data
+	type in exmpp.
+
+	* src/core/exmpp_stream.erl: Fix documentation. Add contracts. Remove
+	?STREAM_NS_PREFIX in favor of ?NS_XMPP_pfx. To obtain a random ID, use
+	the 'random' atom, not 'undefined' as before.
+	(serialize_version/1): Return a binary() for consistency's sake.
+
+	* TODO, doc/overview.edoc: Update TODO to remember to rework
+	exmpp_xml:node_to_iolist/3.
+
+2009-04-23  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_presence.erl: Add contracts. Fix documentation.
+	(set_type/2, set_show/2): Support binary() and string() correctly.
+
+	* src/core/exmpp_stringprep.erl: Add contracts.
+
+2009-04-04  Mickael Remond  <mremond@process-one.net>
+
+	* src/network/exmpp_session.erl: Better handling of stream error:
+	Client now gets a proper exception.
+
+2009-04-02  Christophe Romain  <christophe.romain@process-one.net>
+
+	* src/client/exmpp_client_pubsub.erl: Pubsub delete node is now in
+	pubsub#owner namespace.
+
+2009-04-01  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/network/exmpp_session.erl, src/client/exmpp_client_register.erl:
+	Use is_pid/1, is_atom/1, is_list/1, is_tuple/1 and is_integer/1
+	instead of pid/1, atom/1, list/1, tuple/1 and integer/1 respectively.
+	The latter are marked obsolete in R13B.
+
+2009-03-30  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* include/internal/Makefile.am: Install internal headers, for
+	information purpose.
+
+	* include/exmpp_xml.hrl: Declare a real type for each record. This
+	permits to reference them in modules that do not include this header.
+
+	* src/core/exmpp_xml.erl: Types documentation is moved near the top of
+	the file, like other source files. Declare a real type for records
+	that may be used by other modules. Fix xmlparseroption() type
+	definition. Use types instead of record in contract. Fix many
+	contracts; add a command where contracts couldn't be fixed because of
+	Dialyzer limitations. Now that R12B is required, use lists:keystore/4
+	instead of the replacement function in exmpp_utils.
+
+	* src/core/exmpp_utils.erl (keystore/4): Remove this replacement
+	function now that R12B is required.
+
+	* src/core/exmpp_jid.er: Declare a jid() type so that other modules
+	can reference it.
+
+	* src/core/exmpp_stanza.erl: Rename the type jid() to jidlike(). It
+	shouldn't be confused with exmpp_jid:jid(). It still covers jid(),
+	binary() and string().
+
+	* src/core/exmpp_internals.erl: Add contracts. Fix documentation.
+
+	* src/core/exmpp_tls.erl (handshake/6): Fix a bug where a case clause
+	could never match. Spotted by Dialyzer.
+
+	* src/core/exmpp_presence.erl (get_show/1): Fix a bug where case
+	clauses could never match: the code was expecting string() from a
+	function returning binary(). Spotted by Dialyzer.
+
+	* src/core/exmpp_iq.erl: Do not include exmpp_xml.hrl anymore and use
+	the new exmpp_stanza:jidlike() type.
+
+	* src/core/exmpp_xmlstream.erl: Declare types to be used in contracts.
+	Fix documentation. Remove a useless case clause. Spotted by Dialyzer.
+
+	* c_src/exmpp_xml.c: Correct null pointer checks. Spotted by Clang
+	static analyzer.
+
+	* src/core/exmpp_iq.erl (xmlel_to_iq/1): Fix a bug where a conversion
+	of a result IQ would crash.
+	(get_payload/1): Fix contract.
+
+2009-03-06  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* include/exmpp_xml.hrl: Fix xmldefaultnss() type definition. Add
+	definitions for xmldefaultns(), xmlpathcomponent(), xmlel() and
+	xmlchild() types.
+
+	* src/core/exmpp_xml.erl: Complete addition of contracts. Fix
+	documentation. Rename xmlelement_to_xmlel_and_ns_tables/3 to
+	xmlelement_to_xmlel_and_nss_tables/3.
+	(append_cdata/2): Change API: this function now works on an XML
+	element, not on the children. For the previous behaviour, use the new
+	append_cdata_to_list/2 function.
+
+	* src/core/exmpp_stanza.erl: Fix some contracts. Remove useless
+	clauses in to_list/2, to_list/1, to_binary/2, to_binary/1, to_iolist/2
+	and to_iolist/1.
+
+	* src/core/exmpp_iq.erl: Add contracts. Fix documentation. Fix bugs
+	where exmpp_stanza:set_id_in_attrs/2 was called with the old
+	'undefined' atom, instead of the new 'random' atom to set a random
+	ID.
+	(xmlel_to_iq/1): Remove an unused case clause; get_payload/1 will
+	never return 'undefined'.
+
+2009-02-24  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* include/exmpp_xml.hrl, include/exmpp_xmpp.hrl,
+	include/internal/exmpp_xmpp.hrl: Add type declarations to records.
+	This is used by Dialyzer.
+
+	* src/core/exmpp_utils.erl (any_to_list/1, any_to_binary/1): Add new
+	functions to convert a string/binary/integer/atom to list and binary
+	respectively.
+
+	* src/core/exmpp_xml.erl: Rename some types in documentation:
+	  o  xmlelement() -> xmlel_old()
+	  o  xmlnsattribute() -> xmlattr()
+	  o  xmlattribute() -> xmlattr_old()
+	(set_attr_value/2, cdata/1): Use the new any_to_*/1 functions from
+	exmpp_utils.
+
+	* src/core/exmpp_stanza.erl: Add contracts. Fix documentation. Style.
+	(set_id/2, set_id_in_attrs/2): Change API: an empty ID or undefined
+	will remove the attribute. To have a random ID, specify 'random'.
+	(set_lang_in_attrs/2): Change API: an empty lang or undefined will
+	remove the attribute.
+	(error/3): Fix a bug where the 'Text' attribute was never used.
+
+	* src/core/exmpp_jid.erl: Add contracts. Fix documentation. Style.
+
+	* src/core/exmpp_iq.erl, src/core/exmpp_dialback.erl,
+	src/core/exmpp_xmlstream.erl: Fix documentation.
+
+	* src/network/exmpp_session.erl: Fix a misuse of gen_fsm's message's
+	From. This was not tested, though. Spotted by Dialyzer.
+
+2009-02-23  Pablo Polvorin  <pablo.polvorin@process-one.net>
+
+	* README: State R12B as minimum version.
+
+	* src/core/exmpp_stanza.erl: Use exmpp_jid:jid_to_binary/1.
+
+2009-02-23  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	Erlang R12B is now the minimum version to build and use Exmpp.
+
+	* m4/erlang.m4: Add macros to check Erlang release and ERTS version.
+
+	* configure.ac: Check the Erlang release to be R12B. With this new
+	requirement, http_base_64 and erl_ddll workarounds aren't neede
+	anymore.
+
+	* src/core/exmpp_internals.erl: Remove erl_ddll workaround.
+
+	* src/core/exmpp_utils.erl: Remove http_base_64 workaround and now
+	useless helpers.
+
+	* src/server/exmpp_server_sasl.erl, src/client/exmpp_client_sasl.erl:
+	Use 'base64' directly now.
+
+2009-02-20  Pablo Polvorin  <pablo.polvorin@process-one.net>
+
+	* src/core/exmpp_jid.erl: Fix bug when trying to extract individual
+	components from an empty (non initialized) #jid. 
+
+2009-02-17  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_compress.erl: Fix a typo in proplists module name; we
+	were using 'prolists'. Spotted by Dialyzer.
+
+	* src/core/exmpp_jid.erl: Rename as_binary_or_undefined/1 to
+	as_binary/1 and remove the clause with 'undefined' because it will
+	never happen. Spotted by Dialyzer.
+
+2009-02-11  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* configure.ac: The '-Wall' option to the compiler is GCC-specific.
+	Only use it when we're using GCC; this fixes the build with Sun Studio
+	for instance.
+
+2009-01-29  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/Emakefile.js: Renamed Emakefile.in.js to Emakefile.js.
+
+	* include/internal/exmpp_known_attrs.hrl.js,
+	include/internal/exmpp_known_nss.hrl.js,
+	include/internal/exmpp_known_elems.hrl.js,
+	src/core/exmpp_known_nss.erl.js, src/core/exmpp_known_elems.erl.js,
+	src/core/exmpp_known_attrs.erl.js, src/Emakefile.js: Declare all
+	variables.
+
+	* include/Makefile.win32, include/internal/Makefile.win32,
+	src/Makefile.win32, c_src/Makefile.win32, ebin/Makefile.win3,
+	Makefile.win3: Convert to Unix file format.
+
+	* src/Makefile.win32: Define HAVE_EXPAT, HAVE_LIBXML2, HAVE_OPENSSL
+	and/or HAVE_ZLIB if the user doesn't disable those features.
+
+2009-01-28  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* include/internal/exmpp_known_nss.hrl.js,
+	include/internal/exmpp_known_elems.hrl.js,
+	include/internal/exmpp_known_attrs.hrl.js: Style.
+
+	* src/core/exmpp_known_nss.erl.js, src/core/exmpp_known_elems.erl.js,
+	src/core/exmpp_known_attrs.erl.js: Style.
+
+	* Makefile.win32, include/Makefile.win32,
+	include/internal/Makefile.win32, src/Makefile.win32,
+	src/Emakefile.in.js, ebin/Makefile.win32, ebin/exmpp.app.js: Add
+	Makefiles for Windows environments.
+
+2009-01-20  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_iq.erl: Use correct eDoc types.
+
+	* src/server/exmpp_server_sasl.erl (next_step/1): Mechanism is
+	returned as a string() again. It may go back to binary() in a future
+	version but the response should be binary() too in this case.
+
+	* include/internal/exmpp_xmpp.hrl, src/core/exmpp_jid.erl,
+	testsuite/jid.erl: Rename full_jid to orig_jid because it may not
+	contain a full JID but a bare JID.
+
+	* include/internal/exmpp_xmpp.hrl: Style.
+
+	* src/core/exmpp_jid.erl: Remove the parse_list/2 function because
+	it's not used anymore; this fixes a warning. A lot of fixes and
+	updates to the documentation; this unbreak the build. Style and typos.
+	(jid_to_binary/3, bare_jid_to_binary/2): Fix a bug where a mix between
+	binary() and string() among arguments would cause a crash.
+
+2009-01-22  Pablo Polvorin  <pablo.polvorin@process-one.net>
+
+	* src/core/exmpp_message.erl: Use atoms for common message
+	types (normal, chat, groupchat, headline).
+
+	* include/internal/exmpp_xmpp.hrl, include/exmpp_xmpp.hrl,
+	src/core/exmpp_jid.erl, testsuite/jid.erl: Change in internal
+	JID representation. Instead of storing the three raw components
+	separately, we keep the original JID in one chunk. The
+	intention is to save some memory. Most of the time we already
+	have the raw JID (for example coming from a stanza), so we
+	avoid the need of allocating a new binary when serializing (we
+	can return the original, see make_jid/4). Also we allocate
+	less pointers by keeping the JID in one chunk instead of in
+	its three separate components. Tradeoff: we consume more CPU
+	and memory for accessing a single raw component (see
+	exmpp_jid:node/1, exmpp_jid:domain/1, exmpp_jid:resource/1),
+	but these are less frequently used than their prepared
+	versions (exmpp_jid:lnode/1, exmpp_jid:ldomain/1). Load tests
+	performed on ejabberd so far indicate an observable memory
+	win when using this representation, with no significant CPU
+	cost.
+
+2009-01-20  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_xml.erl: When converting an XML element from #xmlel
+	to #xmlelement, the added xmlns attribute must have its value as
+	binary(), not string(); this was a bug. Also add a comment to note
+	that converting #xmlattr value to string() during document_to_iolist/1
+	is a waste of time in this context.
+
+	* src/compat/xml.erl: Use exmpp_xml:get_attribute*_as_list/3 because
+	the xml module always returned string().
+
+	* src/server/exmpp_server_sasl.erl: Document that mechanism names are
+	accepted as binary() and will be returned as binary().
+
+	* src/network/exmpp_session.erl: Replace exmpp_xml:get_attribute*/3
+	calls by exmpp_xml:get_attribute*_as_list/3 to be sure nothing was
+	broken by the API changes.
+
+	* src/core/exmpp_xml.erl: Replace make_attribute/{1,2} by
+	attribute/{2,3} to handle the value. These new functions are now used
+	through the module instead of direct #xmlattr creation. Rename
+	make_element/{1,2} to element/{1,2} and add element/4. Like
+	attribute/{2,3}, cdata/1 is now used instead of direct #xmlcdata
+	creation.
+
+	* include/exmpp_xml.hrl: Add macros to ease calls to
+	exmpp_xml:attribute/2, exmpp_xml:element/{1,2,4} and
+	exmpp_xml:cdata/1.
+
+	* testsuite/jid.erl: Include internal/exmpp_xmpp.hrl.
+
+	* testsuite/xml_attributes.erl: Update to use the new
+	exmpp_xml:attribute/{2,3} functions.
+
+2009-01-19  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* include/exmpp_xmpp.hrl, include/internal/exmpp_xmpp.hrl,
+	include/internal/Makefile.am: Definition of #jid is moved to an
+	internal header.
+
+	* src/core/exmpp_jid.erl: Include internal/exmpp_xml.hrl.
+
+2009-01-14  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_stringprep.erl (control_reuse_arg/2): Treat errors
+	from control/2 as the first case; this was a regression introduced in
+	revision r692.
+
+	* src/core/exmpp_stanza.erl, src/core/exmpp_message.erl: Style.
+
+	* src/core/exmpp_xml.erl: The old attribute tuple requires that the
+	value is a string(), not a binary(). Therefore the get_attribute*
+	functions family changes:
+	  o  get_attribute_from_list/3 and get_attribute/3 will return a
+	     string() with an old-format attribute and a binary() otherwise.
+	  o  get_attribute_from_list/4 and get_attribute/4 don't change
+	     because they only work on the new format.
+	  o  get_attribute_from_list_as_list/{3,4} and
+	     get_attribute_as_list/{3,4} will always return a string().
+	  o  get_attribute_from_list_as_binary/{3,4} and
+	     get_attribute_as_binary/{3,4} will always return a binary().
+
+	* src/core/exmpp_jid.erl: When parsing a JID, the caller doesn't have
+	to care if it's a binary() or a string(). Thus, the parsing API is
+	changed to provide a single entry point:
+	  o  parse_jid/1 accepts both binary() and string() input.
+	  o  list_to_jid/1 and binary_to_jid/1 are removed.
+	At the same time, simplify exception thrown.  Remove support for bare
+	JID parsing. Remove make_bare_jid/{1,2} because make_jid/{1,2} provide
+	the same thing.
+
+	* src/compat/jlib.erl, src/core/exmpp_stanza.erl,
+	src/client/exmpp_client_binding.erl: Update to use
+	exmpp_jid:parse_jid/1.
+
+	* testsuite/jid.erl: The test works again.
+
+	* testsuite/eunit_tty.erl (format_test_error/1): Include unexpected
+	exceptions if present.
+	(beautify_expr/1): Fix to accept non-string() terms.
+
+	* testsuite/stanza.erl, testsuite/xml_attributes.erl,
+	testsuite/iq.erl, testsuite/xml_parser.erl: Update to use or expect
+	binary() values in new-format attributes.
+
+	* configure.ac, m4/colored-echo.m4: Move the code to output bold text
+	during configure to a dedicated M4 file.
+
+	* configure.ac, c_src/Makefile.am, README: Drop cross-compile support
+	because native build for Windows will be better.
+
+	* README: Explain what to do if the developer must use autoconf 2.62
+	or autoconf 2.63. Add or update informations regarding requirements
+	and how to use an alternate Erlang environment.
+
+2009-01-13  Pablo Polvorin  <pablo.polvorin@process-one.net>
+
+	* src/core/exmpp_xml.erl: Use exmpp_known_elems:elem_as_list/1 in
+	two places where atom_to_list/1 was still used.
+
+	* src/core/exmpp_stanza.erl, src/core/exmpp_message.erl: Table to
+	convert from type(atom) to the corresponding binary value (instead of
+	using atom_to_list/1 and list_to_binary/1.
+
+2009-01-13  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* c_src/xmpp_nss.h.awk, c_src/xmpp_nss.h.js, c_src/xmpp_names.h.awk,
+	c_src/xmpp_names.h.js, c_src/xmpp_attrs.h.awk, c_src/xmpp_attrs.h.js:
+	Remove unused files.
+
+	* include/exmpp_xmpp.hrl, src/core/exmpp_iq.erl,
+	src/core/exmpp_message.erl: Style.
+
+	* src/core/exmpp_stream.erl: Update documentation.
+	(set_version_in_attrs/2, set_id_in_attrs/2): Treat the empty binary
+	the same way the empty string is treated.
+	(parse_version/1): Accept string() again.
+
+	* src/core/exmpp_stringprep.erl (control_reuse_arg/2): Don't treat
+	errors from control specially. Reformulate a comment more positively.
+	Style.
+
+	* src/core/exmpp_xml.erl: Add documentation to new functions. Style.
+
+	* c_src/exmpp_xml.c (make_attribute): Fix the case where the
+	attribute's value length isn't provided.
+
+	* src/core/exmpp_jid.erl: Update documentation. Style.
+	(bare_jid_to_jid/2): Add support for an automatically generated random
+	resource.
+
+	* testsuite/jid.erl: Restore the too_long_identifiers_test_ test
+	although it may not work for now (I'm unable to test right now).
+	Style.
+
+	* include/exmpp_jid.hrl: Remove this empty header. A new one may added
+	later as an internal header.
+
+2009-01-09  Pablo Polvorin  <pablo.polvorin@process-one.net>
+
+	* src/core/exmpp_stanza.erl: get_type/1, get_lang/1 and get_id/1
+	return binary().
+
+	* src/core/exmpp_stream.erl: get_id/1, get_lang/1,
+	get_initiating_entity/1 and get_receiving_entity/1 return binary().
+
+	* src/core/exmpp_iq.erl : get_type/1 works on binary attributes.
+
+	* src/core/exmpp_message.erl: Likewise.
+
+	* src/core/exmpp_presence.erl: Likewise.
+
+	* src/networ/exmpp_session.erl: Update to newer interfaces.
+
+2009-01-08  Pablo Polvorin  <pablo.polvorin@process-one.net>
+
+	* c_src/exmpp_xml.c, src/core/exmpp_iq.erl, src/core/exmpp_jid.erl,
+	src/core/exmpp_stanza.erl, src/core/exmpp_xml.erl, testsuite/iq.erl,
+	testsuite/jid.erl, testsuite/stanza.erl: Use binary to represent
+	attribute values.
+
+	* src/core/exmpp_stringprep.erl, src/core/exmpp_jid.erl: Fix shared
+	binary managment.
+
+2009-01-03  Pablo Polvorin  <pablo.polvorin@process-one.net>
+
+	* src/core/exmpp_jid.erl: Change #jid structure to use binary()
+	storage for node, domain and resource.
+
+	* testsuite/jid.erl: Update testsuite.
+
+	* src/network/exmpp_session.erl: Update to new parser options and JID
+	API.
+
+	* include/exmpp_jid.hrl, exmpp_xmpp.hrl: Prepare to hide #jid record
+	definition. 
+
+2008-12-19  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_presence.erl: style(9).
+
+	* c_src/exmpp_stringprep.c, c_src/exmpp_xml_expat.c,
+	c_src/exmpp_xml_legacy.erl, c_src/exmpp_xml_libxml2.c: Change the way
+	structures are initialized because the previous initializing style was
+	C99 and Visual C++ (and other C++ compilers) doesn't understand this
+	standard.
+
+	* c_src/Makefile.win32: Update this makefile for Visual C++ to include
+	new port drivers and remove the old built sources.
+
+2008-12-17  Pablo Polvorin  <pablo.polvorin@process-one.net>
+
+	* src/core/exmpp_presence.erl: Bug fix in get_type/1.
+
+2008-12-10  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* include/internal/exmpp_known_nss.hrl.js,
+	include/internal/exmpp_known_elems.hrl.js,
+	include/internal/exmpp_known_attrs.hrl.js: Fixed the "usage" string.
+
+	* src/core/exmpp_known_nss.erl.awk, src/core/exmpp_known_nss.erl.js,
+	src/core/exmpp_known_elems.erl.awk, src/core/exmpp_known_elems.erl.js,
+	src/core/exmpp_known_attrs.erl.awk, src/core/exmpp_known_attrs.erl.js,
+	src/Makefile.am, src/Emakefile.in, ebin/Makefile.am: Generate Erlang
+	modules to convert known namespaces/elements/attributes to list. This
+	benefits from Erlang constants handling and decreases memory
+	footprint. Thanks to Pablo Polvorin.
+
+	* src/core/exmpp_xml.erl: Use the new modules to convert known
+	namespaces/elements/attributes. Thanks to Pablo Polvorin.
+	(node_to_list/3, node_to_binary/3): Remove specific code and use
+	node_to_iolist/3.
+
+	* src/network/exmpp_session.erl: Update parser options; they were left
+	behind after exmpp_xml updates. Thanks to Pablo Polvorin.
+
+	* src/core/exmpp_xml.erl: Restore get_name_as_atom/1; it was renamed
+	as get_names_as_atom/1 when the name_as_atom option was renamed to
+	names_as_atom.
+
+	* src/core/exmpp_tls.erl, c_src/exmpp_tls_openssl.c,
+	c_src/exmpp_tls.h: Rename COMMAND_SVN_REVISION to
+	COMMAND_PORT_REVISION.
+
+2008-12-09  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* include/internal/exmpp_known_nss.hrl.awk,
+	include/internal/exmpp_known_nss.hrl.js,
+	include/internal/exmpp_known_elems.hrl.awk,
+	include/internal/exmpp_known_elems.hrl.js,
+	include/internal/exmpp_known_attrs.hrl.awk,
+	include/internal/exmpp_known_attrs.hrl.js: Fix headers generation to
+	remove duplicates. Thanks to Pablo Polvorin.
+
+2008-12-08  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* c_src/exmpp_compress.h, c_src/exmpp_compress_zlib.c,
+	c_src/exmpp_tls.h, c_src/exmpp_tls_openssl.c, c_src/Makefile.am: Use
+	exmpp_driver.c and remove duplicate code.
+
+	* c_src/exmpp_xml_expat_legacy.c, c_src/exmpp_xml_libxml2.c,
+	c_src/exmpp_xml_expat.c: style(9).
+
+	* src/core/exmpp_stringprep.erl: When a binary() is given in argument,
+	return a binary() too. If the result of STRINGPREP is the same as the
+	original string, return the latter and throw away the former; thanks
+	to Pablo Polvorin.
+
+	* c_src/exmpp_stringprep.c, c_src/Makefile.am: Use exmpp_driver.h.
+	Remove start/stop callbacks and the private data structure as they're
+	unused. Rename commands to COMMAND_*.
+
+	* c_src/exmpp_stringprep.c: style(9).
+
+2008-12-08  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	Fixed several warnings issued by Intel C Compiler.
+
+	NOTE: With current options, code produced by this compiler is much
+	bigger for no performance gain.
+
+	* c_src/exmpp_driver.h, c_src/exmpp_xml.h: Fix "old-style" prototypes.
+
+	* c_src/exmpp_driver.c: prime_table_length must be static.
+	(exmpp_ht_dump_keys): Fix a printf(3) format string to properly handle
+	an unsigned int.
+
+	* c_src/exmpp_xml.h, c_src/exmpp_xml.c,
+	c_src/exmpp_xml_expat_legacy.c: Remove unused arguments.
+
+	* c_src/exmpp_xml.c: known_*_index must be static.
+
+	* c_src/exmpp_xml_expat.c, c_src/exmpp_xml_expat_legacy.c:
+	exmpp_xml_cb_make_attributes must be static. Expat error code is an
+	enum, not a generic integer.
+	
+	* c_src/exmpp_xml_expat.c, c_src/exmpp_xml_expat_legacy.c,
+	c_src/exmpp_xml_libxml2.c: When affecting bin->orig_bytes[0], cast the
+	original integer to char to acknowledge the loss of precision.
+
+2008-12-05  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_xmlstream.erl (start/3): Fix a bug where 'endtag' was
+	not renamed to 'emit_endtag'.
+
+	* c_src/exmpp_xml_expat.c: Fix a bug with parser reset: the context
+	was not reset.
+
+	* include/exmpp_nss.hrl: Add non-XML Publish-Subscribe namespaces.
+
+2008-12-01  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* README: Add LibXML2 as an optional dependency.
+
+	* TODO, doc/overview.edoc: Character data handling above 'root_depth'
+	is fixed.
+
+2008-11-28  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* m4/pkg.m4: Include pkg-config M4 macros because it's still needed
+	when pkg-config isn't installed.
+
+	* c_src/exmpp_xml_expat_legacy.c, c_src/exmpp_xml_libxml2.c,
+	c_src/exmpp_xml_expat.c: ERL_DRV_FLAG_USE_PORT_LOCKING was always set,
+	even when SMP support wasn't available in Erlang. This caused build
+	failure with R11B-5 for instance. The extended driver structure
+	doesn't exist in R11B-2 and earlier; fix this case.
+
+2008-11-28  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	The following changes greatly improve memory consumption but they
+	include some API changes:
+	  o  #xmlattr doesn't carry a prefix anymore (the new record
+	     is incompatible with the previous one).
+	  o  Known lists handling and API is completly new (and incompatible).
+	  o  exmpp_xml parser's options have changed:
+	       . namespace has been removed.
+	       . ns_check, names_check and attrs_check were renamed to
+	         check_nss, check_elems and check_attrs.
+	       . check_nss, check_elems and check_attrs now take the name
+	         of a known list.
+	       . endtag was renamed to emit_endtag.
+	       . maxsize was renamed to max_size.
+
+	* configure.ac: Add an option to enable/disable SMP support in port
+	drivers that use it. Check for LibXML2 presence. Take care of the new
+	include/internal/Makefile.
+
+	* include/internal/extract-known-from-specs,
+	include/internal/make-specs-list,
+	include/internal/exmpp_known_nss.in,
+	include/internal/exmpp_known_elems.in,
+	include/internal/exmpp_known_attrs.in,
+	include/internal/exmpp_known_nss.hrl.js,
+	include/internal/exmpp_known_elems.hrl.js,
+	include/internal/exmpp_known_attrs.hrl.js,
+	include/internal/exmpp_known_nss.hrl.awk,
+	include/internal/exmpp_known_elems.hrl.awk,
+	include/internal/exmpp_known_attrs.hrl.awk,
+	include/internal/Makefile.am, include/Makefile.am,
+	c_src/extract-known-from-specs, c_src/make-specs-list,
+	c_src/xmpp_nss.h.in, c_src/xmpp_names.h.in, c_src/xmpp_attrs.h.in:
+	Known lists are now Erlang headers instead of C headers.
+
+	* include/exmpp_xml.hrl, src/core/exmpp_stream.erl: Remove prefix from
+	#xmlattr and #xmlendtag.
+
+	* c_src/exmpp_driver.h, c_src/exmpp_driver.c, c_src/exmpp_xml.h,
+	c_src/exmpp_xml.c, c_src/exmpp_xml_expat.c,
+	c_src/exmpp_xml_expat_legacy.c, c_src/exmpp_xml_libxml2.c: Improve
+	memory consumption. Add support for SMP, though there's room for
+	enhancement. Add support for LibXML2.
+
+	* src/core/exmpp_xml.erl: Completly change known list handling and
+	API. Change some parser options.
+
+	* testsuite/xml_attributes.erl, testsuite/xml_parser.erl: Update
+	testsuite.
+
+	* c_src/contrib/hashtable.h, c_src/contrib/hashtable_private.h,
+	c_src/contrib/hashtable.c: A new hashtable is implemented by
+	exmpp_driver.c
+
+2008-11-28  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* testsuite/eunit_tty.erl: Rename assert_failed to assertion_failed.
+	Accept unknown failure types. Beautify returned value.
+
+	* src/core/exmpp_xmlstream.erl (process_elements/2): Ignore #xmlcdata
+	when they're direct children of the stream.
+
+2008-11-24  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	The following changes fix a few things regarding memory consumption
+	tracking. They're committed only for the record and will be deprecated
+	when the real improvements are committed.
+
+	* src/core/exmpp_xml.erl: Call to the gen_server are made without any
+	timeout.
+
+	* c_src/exmpp_xml_expat.c, c_src/contrib/hashtable_private.h: Track
+	memory used by hashtable keys. This is where this port driver uses a
+	LOT of memory.
+
+2008-11-17  Jérôme Sautret  <jerome.sautret@process-one.net>
+
+	* src/core/exmpp_utils.erl (random_id/1): Fix manual id generation for
+	iq.
+
+	* src/core/exmpp_xml.erl: Add cdata/1 and append_cdata/2 helper
+	functions.
+	(element_to_list/5): Fix empty tags serialization.
+
+	* src/network/exmpp_session.erl: Initialize random number generator
+	for id. Stop the parser after closing the stream.
+
+2008-11-12  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* c_src/contrib/hashtable.h, c_src/contrib/hashtable.c: Use
+	driver_alloc/driver_free to allocate memory so that Erlang can report
+	more accurate statistics.
+
+2008-11-07  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* include/exmpp_nss.hrl: Add a string version of NS_XML.
+
+	* src/core/exmpp_tls.erl: Rename engine_svn_revision/1 to
+	engine_port_revision/1. There still remains references to Subversion
+	in the code.
+
+	* testsuite/eunit_tty.erl: Pretty print error messages.
+
+	* doc/Makefile.am: Add $(top_builddir)/include to the include
+	directories. This is needed for future generated headers.
+
+2008-10-23  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* c_src/exmpp_xml_expat.c, c_src/Makefile.am, c_src/Makefile.unix:
+	Remove the workaround for an old libei bug with string encoding.
+
+	* c_src/exmpp_xml_expat.c: erl_interface.h is unused; remove the
+	corresponding #include directive.
+
+2008-10-20  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* include/exmpp_nss.hrl: Add string version of MUC namespaces.
+
+	* src/core/exmpp_compress.erl, src/core/exmpp_tls.erl: Follow
+	recommandation of erl_ddll regarding driver loading: drivers are
+	loaded only once in a central process. Options are now treated as
+	standard proplists; one option of exmpp_tls has a new format.
+
+	* src/core/exmpp_xml.erl: Change default options! Namespace support is
+	enabled and names are returned as atom.
+
+	* configure.ac: Define HAVE_EXPAT when the Expat XML port driver is
+	built.
+
+	* src/core/exmpp_compress.erl (get_engine_from_options),
+	src/core/exmpp_tls.erl (get_engine_from_args): Fix behaviour which was
+	broken by previous commit.
+
+	* src/core/exmpp_xml.erl: Like exmpp_tls or exmpp_compress, exmpp_xml
+	may use several port drivers, though only Expat is available right
+	now. Follow recommandations of erl_ddll regarding driver loading:
+	drivers are loaded only once in a central process.
+
+	* testsuite/xml_parser.erl: Update to take into account the default
+	options change and the fact that exmpp must be started.
+
+	* src/core/exmpp_sup.erl: Start exmpp_xml.
+
+	* src/core/exmpp_xml.erl, c_src/exmpp_xml_expat.c: Rename commands
+	from EXPAT_* to COMMAND_*, now that other port drivers may come in.
+
+	* ebin/exmpp.app.in: Fill the registered processes list.
+
+	* src/core/exmpp_xml.erl: It's now possible to serialize an XML
+	document to iolist. The use of iolists seems to bring an improvement
+	of 40 to 50% in speed over lists.
+
+	* src/core/exmpp_stream.erl, src/core/exmpp_stanza.erl: Add to_iolist
+	functions.
+
+2008-10-08  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_jid.erl: Add functions to serialize JIDs using their
+	STRINGPREP'd version.
+
+2008-10-01  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_xml.erl: Rename get_lname_as_atom/1 and
+	get_lname_as_list/1 to get_name_as_atom/1 and get_name_as_list/1
+	respectively. Add add_autoload_known_nss/1, add_autoload_known_names/1
+	and add_autoload_known_attrs/1 to populate Exmpp application
+	environment with autoloaded known lists.
+	(get_ns_as_atom, get_ns_as_list): Use the new as_atom/1 and as_list/1
+	functions.
+
+	* testsuite/check_xml_element_handlers.erl: Updated the old testsuite
+	as reference.
+
+2008-09-30  Pablo Polvorin  <pablo.polvorin@process-one.net>
+
+	* src/core/exmpp_xml: Add functions to get the local name of an
+	element.
+
+2008-09-29  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_iq.erl (error): The case where the function was
+	called with an #iq record and a condition (atom) was not implemented,
+	causing a crash.
+
+2008-09-23  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_stanza.erl, src/core/exmpp_iq.erl,
+	src/core/exmpp_presence.erl, src/core/exmpp_message.erl: Typo in
+	modules short description.
+
+	* src/core/exmpp_presence.erl: In documentation, use "presence stanza"
+	instead of "<presence/>".
+	(error): Rewrite to behave like exmpp_iq:error/2.
+	(set_show, set_status, set_priority): Always use
+	exmpp_xml:append_child/2 so the caller better controls the order of
+	the elements.
+
+	* src/core/exmpp_message.erl: Add functions to create message stanzas.
+	Add functions to set the subject, the body and the thread.
+	(get_type): When the type isn't specified or isn't recognized, return
+	'normal' as mentionned in the RFC.
+
+2008-09-18  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_xml.erl: Add functions set_attribute_in_list/2 and
+	set_attribute/2. They work like set_attribute_in_list/{3,4} and
+	set_attribute/{3,4} respectively but take an xmlattribute() or an
+	xmlnsattribute() in argument. Add a clause to set_attributes/2 to also
+	accept xmlattribute() or xmlnsattribute() arguments.
+
+2008-08-26  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_xml.erl: New function remove_whitespaces_deeply/1 to
+	operate on the entire XML tree, not only the current node (as
+	remove_whitespaces/1).
+
+2008-08-22  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_presence.erl (set_status/1): Accept an empty string
+	or an empty binary as the status. In this case, the status element is
+	removed.
+
+	* src/core/exmpp_jid.erl (make_jid/3): Accept an empty string as the
+	resource, to ease integration with Ejabberd.
+
+	* configure.ac: Rewrite again the way Erlang and its components are
+	detected. It's now possible to use --with-erlang to indicate an
+	alternate Erlang environment; much easier than filling ERL and ERLC
+	variables (EJABP-3). Regarding cross-compilation, --with-erl_interface
+	was replaced by --with-host-erlang. This new option should point to
+	the Erlang environment used by the future host. The configure script
+	will use the ERTS and erl_interface found there. Checks for the need
+	of any workarounds will also use the host Erlang. While here, fix a
+	bug with --enable-escaping-using-cdata: when not specified, it
+	disabled --enable-http_base_64 instead.
+
+	* trunk/c_src/Makefile.am: Use the new ERLANG_ERTS_DIR variable.
+
+	* README: Write more complete instructions on how to build and install
+	Exmpp.
+
+2008-08-20  Jérôme Sautret  <jerome.sautret@process-one.net>
+
+	* src/core/exmpp_presence.erl (presence/2): Add presence/2 helper
+	function in the API to create a generic presence packet.
+
+	* README: Fix path to examples.
+
+2008-08-14  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_iq.erl (get_result/1): Fix a bug where a text node
+	could be returned as a result.
+
+2008-08-12  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* include/exmpp_xmpp.hrl, src/core/exmpp_stanza.erl,
+	src/core/exmpp_iq.erl: Add #iq record support. This record ressembles
+	a lot to the one in ejabberd. His main purpose is matching, in
+	function clause espcecially. Many functions in exmpp_stanza and
+	exmpp_iq accept this new record in place of the common #xmlel but not
+	all; check the documentation. Also several bugs were fixed, thanks to
+	the new tests.
+	
+	* testsuite/stanza.erl, testsuite/iq.erl: Add tests to check
+	exmpp_stanza and exmpp_iq behaviour. These testsuites are not complete
+	yet.
+
+2008-08-07  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* testsuite/xml_attributes.erl, testsuite/Makefile.am:
+	check_xml_attributes was partly ported to the new testsuite framework.
+
+2008-08-05  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_xml.erl: It's now possible to serialize an XML
+	document to binary. The use of binaries seems to bring an improvement
+	of 15 to 20% in speed over lists.
+	(make_element/1): Fix a bug with the creation of the element; the
+	namespace was filled instead of the name.
+
+	* doc/Makefile.am: Add +B arguments to erl(1). With this, Ctrl+C will
+	halt the emulator immediatly.
+
+	* src/core/exmpp_stream.erl, src/core/exmpp_stanza.erl: Add to_binary
+	functions.
+
+	* src/core/exmpp_jid.erl: Rename *_to_string and string_to_* functions
+	to *_to_list and list_to_* respectively, for consistency's sake with
+	other modules. Add functions to serialize a JID as a binary, instead
+	of a list.
+
+	* src/compat/jlib.erl, src/server/exmpp_server_binding.erl,
+	src/core/exmpp_stanza.erl, src/client/exmpp_client_binding.erl,
+	testsuite/jid.erl: Update to take into account exmpp_jid API changes.
+
+	* src/server/exmpp_server_binding.erl (bind/2): Use the new
+	jid_to_binary/1 function in exmpp_jid.
+
+	* include/exmpp.hrl, include/exmpp_nss.hrl, include/exmpp_xml.hrl,
+	include/exmpp_xmpp.hrl, include/Makefile.am: Split the main header in
+	multiple ones.
+
+	* testsuite/Makefile.am, testsuite/eunit_tty.erl: eunit_tty only needs
+	exmpp_xml.hrl.
+
+	* c_src/xmpp_nss.h.in, c_src/xmpp_nss.h.js, c_src/xmpp_nss.h.awk,
+	c_src/Makefile.am, c_src/Makefile.win32, c_src/Makefile.unix,
+	c_src/exmpp_xml_expat.c: Rename xmpp_ns.* to xmpp_nss.* for
+	consistency's sake.
+
+	* include/exmpp_xmpp.hrl: Improve guard macros. Now they can be used
+	in 'if' statements as well.
+
+	* src/core/exmpp_message.erl, src/core/exmpp_presence.erl,
+	src/core/exmpp_iq.erl: Add guards to many functions.
+
+2008-08-04  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* configure.ac: Exmpp is not installed under $prefix/lib/exmpp-X.X.X
+	but under $prefix/exmpp-X.X.X.
+
+	* examples, src/Makefile.am, src/Emakefile.in,
+	doc/Makefile.am, ebin/Makefile.am, Makefile.am, configure.ac: Move
+	examples to a dedicated directory. They may be disabled at configure
+	time.
+
+	* src/Makefile.am, examples/Makefile.am: Add +B arguments to erl(1).
+	With this, Ctrl+C will halt the emulator immediatly.
+
+	* include/xmpp.hrl, include/Makefile.am: xmpp.hrl is unused.
+
+	* src/core/exmpp_xml.erl (get_attribute_from_list, get_attribute):
+	Function to get an attribute value now take an additional argument.
+	This new argument is returned by the functions if the specified
+	attribute isn't found. Before, those functions would always return an
+	empty string.
+
+	* src/compat/xml.erl, src/server/exmpp_server_sasl.erl,
+	src/core/exmpp_stream.erl, src/core/exmpp_stanza.erl,
+	src/network/exmpp_session.erl: Update to use the new
+	get_attribute_from_list and get_attribute functions from exmpp_xml.
+
+2008-08-01  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_stanza.erl: Add functions to set both the sender and
+	the recipient at the same time.
+
+	* c_src/make-specs-list: Historical XEPs are accepted; some are still
+	used in Ejabberd for instance.
+
+	* include/exmpp.hrl: The list of namespaces is now complete. A string
+	version is added for each namespace too; this avoids calls to
+	atom_to_list. Fix NS_ROSTER_EXCHANGE duplicated definitions.
+
+	* c_src/xmpp_ns.h.in, c_src/xmpp_names.h.in, c_src/xmpp_attrs.h.in:
+	Historical XEPs are accepted now. Also some XEPs were updated on July
+	31th.
+
+2008-07-31  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_xml.erl: Fix documentation for
+	parse_document_fragment/{1,2}. Add functions make_element/{1,2} and
+	make_attribute/{1,2} to create simple nodes without knowing the
+	records.
+
+2008-07-30  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_xml.erl: Remove *_by_name suffix from function names.
+	For example, get_element_by_name/2 is now get_element/2. For
+	get_element/{2,3} and get_elements/{2,3}, aliases are still provided
+	for backward compatibility, though they're marked as deprecated.
+	element_ns_matches/2 was renamed to element_matches_by_ns/2 for
+	consistency. Add remove_element/{2,3}, remove_elements/{2,3},
+	remove_element_by_ns/2 and remove_elements_by_ns/2 functions.
+
+	* src/core/exmpp_presence.erl (set_show): Fix by using the new
+	remove_element function instead of the non-existing remove_child
+	function.
+
+	* Makefile.am, c_src/Makefile.am, testsuite/Makefile.am: updateknown
+	and check-junit are PHONY targets.
+
+	* Makefile.am: The distdir and any tarball may take a suffix.
+
+	* configure.ac: Remove EXMPP_VERSION and relatives; they're not used
+	anywhere. Add EXMPP_SVNREV which contains the Subversion revision of
+	the checkout used by the configure script. Add EXMPP_DISTSUFFIX which
+	is set to "-r$EXMPP_SVNREV" when this is not a release (the release
+	isn't set).
+
+	* src/compat/xml.erl, src/server/exmpp_server_compression.erl,
+	src/server/exmpp_server_legacy_auth.erl,
+	src/server/exmpp_server_binding.erl, src/core/exmpp_stream.erl,
+	src/core/exmpp_stanza.erl, src/core/exmpp_message.erl,
+	src/network/exmpp_session.erl, src/client/exmpp_client_binding.erl,
+	src/client/exmpp_client_compression.erl,
+	src/client/exmpp_client_tls.erl, src/client/exmpp_client_sasl.erl,
+	src/client/exmpp_client_session.erl: Update to use the new get_element
+	and get_elements functions from exmpp_xml.
+
+	* configure.ac: Do not set EXMPP_RELEASE_DATE; it must be set in a
+	release branch. This was only for testing purpose.
+
+	* configure.ac, Makefile.am: Fix make distcheck when EXMPP_SVNREV and
+	EXMPP_DISTSUFFIX are used.
+
+2008-07-29  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/network/exmpp_session.erl: Fix compilation warnings.
+
+	* src/core/exmpp_xml.erl (document_to_list, node_to_list): It's
+	possible to give a list of elements to these functions. It allows one
+	to use them on the return value of parse_document/1 for instance. It's
+	also possible to combine an XML process instruction and an XML
+	document, or an XMPP stanza and a stream closing.
+
+	* src/core/exmpp_stream.erl (to_list), src/core/exmpp_stanza.erl
+	(to_list): Update documentation.
+
+	* src/client/exmpp_client_presence.erl, src/Makefile.am,
+	src/Emakefile.in, ebin/Makefile.am, ebin/exmpp.app.in,
+	doc/Makefile.am: Remove exmpp_client_presence. exmpp_presence is the
+	module to use.
+
+	* include/exmpp.hrl: Remove definitions used by exmpp_client_presence.
+
+	* src/examples/echo_client.erl: Use exmpp_presence instead of
+	exmpp_client_presence.
+
+2008-07-25  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_jid.erl (make_jid, jid_to_string): Add function
+	clauses that do the same thing as make_bare_jid and
+	bare_jid_to_string.
+
+	* include/exmpp.hrl: Add a macro for the namespace
+	'http://jabber.org/protocol/stats'.
+
+2008-07-23  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* include/exmpp.hrl: Add a string version of the Ad-Hoc commands
+	namespace. Other namespaces will follow as needed.
+
+	* c_src/extract-known-from-specs, c_src/make-specs-list,
+	c_src/extract-known-from-schemas, c_src/make-schemas-urls-list,
+	c_src/Makefile.am: Rewrite scripts that fetch and extract official
+	namespaces and their element and attribute names. The new scripts are
+	now based on the HTML XEP list available here:
+	http://www.xmpp.org/extensions/all.shtml
+	This list is a lot more up-to-date.
+
+	* c_src/xmpp_ns.h.in-local, c_src/xmpp_names.h.in-local,
+	c_src/xmpp_attrs.h.in-local: Removed obsolete templates, now that the
+	new scripts understand DTDs.
+
+	* c_src/xmpp_ns.h.in, c_src/xmpp_names.h.in, c_src/xmpp_attrs.h.in:
+	Update known lists using the new scripts.
+
+2008-07-21  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_xml.erl (get_path): Accept 'cdata_as_list' as a path
+	component. Character data are returned as list (instead of binary)
+	obviously.
+
+	* src/core/exmpp_presence.erl: Add functions to create subscribe,
+	subscribed, unsubscribe, unsubscribed and error presence stanzas. Add
+	a function to set the type of a presence stanza.
+
+	* src/core/exmpp_jid.erl: Export functions to make a JID string from
+	given node, domain and resource arguments.
+
+	* src/core/exmpp_iq.erl (result): Accept a list of results to put in
+	an IQ.
+
+2008-07-17  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* include/exmpp.hrl: Add XBOSH common prefix.
+
+	* src/core/exmpp_xml.erl (node_to_list): Guarantee that the returned
+	list is flat. To achieve this, lists:append/1 is used to concatenate
+	lists.
+
+	* c_src/exmpp_xml_expat.c, src/core/exmpp_xml.erl
+	(forward_declare_ns/3): Elements with xmlns="" (empty default
+	namespace) are legal. After reading "XML 1.0" and "Namespaces for XML
+	1.0" (which I'm not sure I understand very well), it means that the
+	element declaring this and child elements doesn't belong to any
+	namespace.  Informations returned by Expat sort of confirm this. The
+	port driver and node_to_list/3 were fixed accordingly: such elements
+	will have their namespace set to the atom "undefined" and serialized
+	properly. FYI, JSJaC sends elements with empty xmlns. Note that empty
+	prefixed namespace are illegal.
+
+2008-07-15  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* testsuite/eunit_tty.erl (escape_desc): Characters '_' and '-' are
+	kept in filenames.
+
+	* testsuite/xml_parser.erl, testsuite/Makefile.am: Convert XML parser
+	test to EUnit.
+
+	* testsuite/check_jid.erl, testsuite/check_xml_parser.erl: Remove
+	converted tests.
+
+	* c_src/xmpp_ns.h.in: Remove a namespace used in an example in
+	XEP-0072.
+
+	* include/exmpp.hrl: Update namespace macros to include all new
+	namespaces from xmpp_ns.h.in.
+
+	* src/server/exmpp_server_compression.erl,
+	src/client/exmpp_client_compression.erl: Use the correct namespace
+	during features negotiation.
+
+2008-07-11  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* c_src/make-schemas-urls-list, c_src/extract-known-from-schemas,
+	c_src/xmpp_ns.h.in-local, c_src/xmpp_names.h.in-local,
+	c_src/xmpp_attrs.h.in-local, c_src/Makefile.am, Makefile.am: Add Perl
+	scripts to automatically fetch XEP schemas and extract namespaces,
+	names and attributes and create the known lists used by
+	exmpp_xml_expat.
+
+	* c_src/extract-known-from-schemas: Fix the known namespaces list
+	layout.
+
+	* c_src/xmpp_ns.h.in, c_src/xmpp_attrs.h.in, c_src/xmpp_names.h.in:
+	Update known lists using the new scripts.
+
+	* c_src/Makefile.am: Distribute the new scripts and local known lists.
+	Split the lines containing Vim modelines so that they are not
+	interpreted when editing this Makefile.am.
+
+2008-07-09  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_stringprep.erl: Improved exception handling. An
+	exception is raised when exmpp isn't started. When a string isn't
+	valid, a meaningful exception is raised. Update documentation.
+
+	* src/core/exmpp_jid.erl: Handle exceptions from exmpp_stringprep
+	correctly; this was left broken.
+
+	* testsuite/jid.erl: Update testsuite.
+
+	* src/core/exmpp_xml.erl (xmlel_to_xmlement/3, node_to_list/3): It's
+	now possible to specify a list of equivalent namespaces in the default
+	namespace stack. This is useful for stanzas going from and to
+	compatible but different namespaces such as 'jabber:client',
+	'jabber:server' and 'jabber:component:accept'. In this example,
+	'Default_NS' will be set to [[?NS_JABBER_CLIENT, ?NS_JABBER_SERVER,
+	?NS_COMPONENT_ACCEPT], ...].
+
+	* include/exmpp.hrl: Add Jabber Component Protocol namespaces macros.
+
+	* src/core/exmpp_stanza.erl (to_list/2, to_list/3): Add a note about
+	equivalent namespaces in exmpp_xml:xmlel_to_xmlelemen/3. Add Server
+	Dialback to default prefixed namespace.
+	(to_list/1): Add a function which calls to_list/2 with common XMPP
+	default namespaces.
+
+	* src/core/exmpp_xml.erl: Fix an old annoyance with 'name_as_atom':
+	when functions need to match an attribute/element name or namespace,
+	new matching functions will take care of comparison between strings
+	and atoms. So now, the user doesn't have to know if a name or a
+	namespace is encoded as an atom or a string. But of course, it will be
+	faster if he knows the type.
+
+2008-07-08  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_xml.erl: Add functions to remove text nodes
+	containing only whitespaces (indentation usually). Add function to
+	indent an XML tree (for debugging purpose mostly). Add support to load
+	automatically known namespaces/names/attributes lists from exmpp
+	application environment; this is disabled by default and can be
+	enabled with the 'autoload_known' flag. Add function filter/3, fold/3,
+	foreach/2 and map/2 which are equivalent to their counterpart in
+	'lists'.
+
+	* testsuite/etest.in: Don't forgot to add $top_builddir/ebin to the
+	code path or the testsuite will check the installed exmpp.
+
+	* testsuite/eunit_tty.erl: Use the new indent facility of exmpp_xml
+	with the JUnit XML report.
+
+	* TODO, doc/overview.edoc: Update TODO.
+
+	* src/Makefile.am: exmpp_callbacks was removed.
+
+2008-07-07  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_internals.erl (gen_controlling_process): Fix API: the
+	second argument (Pid) was missing!
+
+	* src/core/exmpp_stream.erl, src/core/exmpp_compress.erl: Style.
+
+	* src/core/exmpp_xml.erl: Accept atoms and integers as attribute
+	value. They're converted to binary internally and it's not possible to
+	get them back in their original type.
+
+	* src/core/exmpp_presence.erl: Use exmpp_xml:get_cdata_as_list/1
+	instead of binary_to_list/1.
+
+	* src/core/exmpp_xmlstream.erl: A function was left behind: it now
+	uses exceptions too.
+
+	* ebin/exmpp.app.in, doc/Makefile.am: exmpp_callbacks was removed.
+
+	* Makefile.am, testsuite/Makefile.am, testsuite/etest.in,
+	testsuite/eunit_tty.erl: New testsuite based on EUnit.
+
+	* testsuite/jid.erl: First test; more to come. Old tests are still
+	there for this.
+
+	* testsuite/Emakefile.in, testsuite/test.sh, testsuite/testsuite.erl:
+	Remove old tools.
+
+	* configure.ac: Check for EUnit and escript(1).
+
+	* configure.ac, Makefile.am, doc/Makefile.am: Rename
+	BUILD_DOCUMENTATION to ENABLE_DOCUMENTATION for consistency's sake.
+
+	* src/core/exmpp_internals.erl, src/core/exmpp_xml.erl:
+	lists:keystore/4 appeared only in R12B. Use a replacement function.
+
+	* src/core/exmpp_utils.erl, src/Makefile.am, src/Emakefile.in,
+	ebin/Makefile.am, ebin/exmpp.app.in, doc/Makefile.am: Add a new module
+	to receive misc. functions.
+
+	* src/core/exmpp_internals.erl, src/server/exmpp_server_sasl.erl,
+	src/server/exmpp_server_privacy.erl, src/core/exmpp_stream.erl,
+	src/core/exmpp_xml.erl, src/core/exmpp_stanza.erl,
+	src/core/exmpp_presence.erl, src/client/exmpp_client_binding.erl,
+	src/client/exmpp_client_sasl.erl, src/client/exmpp_client_session.erl,
+	src/client/exmpp_client_legacy_auth.erl: encode_base64/1,
+	decode_base64/1, keystore/4, random_id/0, and random_id/1 have moved
+	to exmpp_utils.
+
+	* src/core/exmpp_utils.erl (strip/1, strip/2): Credits Christopher
+	Faulet.
+
+2008-07-02  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_jid.erl: Update jid() documentation.
+
+2008-07-01  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_stanza.erl, src/core/exmpp_iq.erl: Accept a standard
+	condition as 'Error'. It's much easier to make error stanza with this.
+
+	* src/core/exmpp_iq.erl (error): Fix a bug while setting ID: the
+	function to call is exmpp_stanza:set_id_in_attrs/2, not
+	exmpp_stanza:set_id/2.
+
+	* testsuite/check_xml_converters.erl: Fix testsuite after
+	exmpp_xml:document_fragment_to_list/3 was renamed.
+
+	* src/core/exmpp_iq.erl (error/2, error_without_original/2): Fix
+	copy&paste error: use exmpp_stanza:error/2, not exmpp_iq:error/2 to
+	build the <error/> element.
+
+	* src/core/exmpp_stanza.erl (set_type/2, set_type_in_attrs/2): Accept
+	an atom() as Type. It's more consistent with exmpp_iq:get_type/1 &
+	friends return values.
+
+	* src/core/exmpp_iq.erl: Add a function get_kind/1 which tells if an
+	<iq/> is a request or a response.
+
+	* src/core/exmpp_xml.erl: Add functions get_ns_as_list/1 and
+	get_ns_as_atom/1 to get the namespace of an XML element in an expected
+	encoding.
+
+2008-06-30  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* testsuite/test.sh: erl(1) is called with the +B flags so that ^C
+	interrupts the process immediately. To terminate the Erlang process,
+	we use halt() instead of init:stop(); this is a lot faster and
+	acceptable for a testsuite. Add a new 'FAIL' case for $exit_code.
+
+	* testsuite/testsuite.erl: Test modules now use the new
+	testsuite:run/1 function. It handles more cleanly the failed tests by
+	pretty printing a stack trace and the exception.
+
+	* testsuite/check_xml_attribute_handlers.erl,
+	testsuite/check_coverity.erl, testsuite/check_jid.erl,
+	testsuite/check_xml_converters.erl, testsuite/check_xmlstream.erl,
+	testsuite/check_xml_path.erl, testsuite/check_xml_parser.erl,
+	testsuite/check_xml_cdata_handlers.erl,
+	testsuite/check_legacy_auth.erl,
+	testsuite/check_xml_element_handlers.erl, testsuite/check_stream.erl:
+	Use the new testsuite:run/1 function.
+
+	* TODO: Refreshed (but not exhaustive).
+
+	* doc/overview.edoc: Add TODO to the overview.
+
+	* src/core/exmpp_xml.erl: Add functions has_element_by_name/{2,3} and
+	has_element_by_ns/2. Fix documentation.
+
+	* TODO, doc/overview.edoc: Update TODO.
+
+	* src/core/exmpp_xml.erl: Rename document_fragment_to_list/3 to
+	node_to_list/3 because the first argument is either an XML element or
+	an XML text node.
+
+	* src/core/exmpp_stanza.erl: Use the new node_to_list/3.
+
+	* src/core/exmpp_jid.erl: Add a function make_bare_jid/1 to make a JID
+	with just a domain. Remove the Ejabberd compat functions; they are
+	moved to Ejabberd itself.
+
+2008-06-27  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* include/exmpp.hrl: Add a IS_IM_STANZA guard expression. Clean up
+	namespaces list and add their prefix if any.
+
+	* src/server/exmpp_server_legacy_auth.erl,
+	src/server/exmpp_server_privacy.erl, src/core/exmpp_dialback.erl,
+	src/core/exmpp_stream.erl, src/core/exmpp_stanza.erl,
+	src/core/exmpp_xml.erl, src/client/exmpp_client_roster.erl,
+	src/client/exmpp_client_register.erl,
+	src/client/exmpp_client_legacy_auth.erl,
+	testsuite/check_legacy_auth.erl: Use new namespace macro names.
+
+	* src/core/exmpp_stream.erl, src/core/exmpp_stanza.erl: Add functions
+	to_list to wrap around exmpp_xml:document_to_list/1 and
+	exmpp_xml:document_fragment_to_list/3.
+
+	* testsuite/Makefile.am: Erlang sources depend on include/exmpp.hrl.
+
+2008-06-26  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* include/exmpp.hrl: Add server dialback namespace.
+
+	* src/core/exmpp_xml.erl: Add function declare_ns_here/3 to declare
+	additionnal namespaces in an element. Add function
+	is_ns_declared_here/2 to known if a specific namespace is declared an
+	element.
+
+	* src/core/exmpp_stream.erl: Add function set_dialback_support/1 to
+	add server dialback namespace to a stream opening.
+	(opening, opening_reply): Accept 'undefined' as the
+	receiving/initiating entity: no 'to' or 'from' will be added to the
+	opening.
+
+	* src/core/exmpp_stanza.erl: Add function reply_without_content/1 to
+	prepare a reply to a stanza without its original content. Fix
+	in the documentation.
+
+	* src/core/exmpp_dialback.erl, src/Makefile.am, src/Emakefile.in,
+	ebin/Makefile.am, ebin/exmpp.app.in, doc/Makefile.am: Add a module
+	exmpp_dialback to create server dialback stanzas.
+
+2008-06-25  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_stanza.erl: Add functions to remove the sender and
+	the recipient.
+
+2008-06-24  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_jid.erl: Remove the function to_ejabberd_short_jid/1.
+	This is really an internal format and it doesn't belong to exmpp.
+
+	* src/core/exmpp_iq.erl: Remove the function to_ejabberd_iq/1. As for
+	to_ejabberd_short_jid, this is an internal format and ejabberd's jlib
+	module is best suited for this purpose.
+
+	* include/exmpp.hrl: Add a macro to test JIDs in guard expressions.
+
+	* src/core/exmpp_stanza.erl: The functions that set the sender and the
+	recipient now accept #jid as an argument.
+
+	* src/server/exmpp_server_privacy.erl,
+	src/client/exmpp_client_privacy.erl, src/Makefile.am,
+	src/Emakefile.in, ebin/Makefile.am, ebin/exmpp.app.in,
+	doc/Makefile.am: Add modules to read and create IQ for privacy list
+	management.
+
+	* src/core/exmpp_stream.erl: Add the function opening_reply/3 which is
+	the same as opening_reply/2 but takes a language in 3rd argument.
+
+	* src/core/exmpp_xml.erl (set_cdata_in_list): Accept atoms and
+	integers as character data. The function converts them to binary.
+
+	* src/core/exmpp_presence.erl: Add functions to simply create presence
+	stanza. Add functions to change show, status or priority values. The
+	API is not frozen.
+
+	* src/server/exmpp_server_session.erl (want_establishment): Replace
+	exceptions and 'ok' by bool().
+
+	* src/server/exmpp_server_legacy_auth.erl: Add a function to tell if
+	the peer wants to know the authentication fields.
+
+	* src/core/exmpp_jid.erl: For JIDs, accept the empty string in
+	argument but still use undefined in the #jid construction.
+
+	* src/core/exmpp_presence.erl: Add a function probe/0.
+
+	* src/client/exmpp_client_legacy_auth.erl: Export hex/1.
+
+2008-06-23  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_jid.erl: Add functions to convert to and from
+	ejabberd normal and short JID forms.
+
+	* src/core/exmpp_iq.erl: Add functions to convert to the ejabberd #iq
+	record.
+
+2008-06-20  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* include/exmpp.hrl, c_src/xmpp_ns.h.in, c_src/xmpp_names.h.in: Add
+	vCard namespace. I'm not really good at reading DTD so xmpp_*.h.in
+	lists may not be correct. For example, Psi uses attributes 'version'
+	and 'prodid' but as I understand the DTD, those should be elements.
+	For the record, I used the DTD included in XEP-0054. The bottom line
+	is: all this needs a review!
+
+	* src/server/exmpp_server_compression.erl: Add a function
+	'selected_method' to get the method chosen by the peer.
+
+	* src/server/exmpp_server_sasl.erl: The 'success' function was
+	missing.
+
+	* src/server/exmpp_server_session.erl (want_setablishment): Fix
+	documentation: this function always returns 'ok' or throws an
+	exception.
+
+	* src/server/exmpp_server_legacy_auth.erl: When building the fields
+	list, include the username value if the peer provided one.
+
+	* src/core/exmpp_iq.erl: Add functions 'is_request', 'is_response',
+	'is_result' and 'is_error'. Add function 'get_payload' which returns
+	the request, the response or the error, depending on the IQ type.
+
+	* src/core/exmpp_stream.erl: Typo. The documentation at the top of the
+	module is out-dated.
+
+	* src/core/exmpp_internals.erl (random_id): Add clauses to generate an
+	ID without a prefix.
+
+	* src/core/exmpp_xml.erl: Fix a bug with list concatenation. Style.
+
+	* src/core/exmpp_stanza.erl: Change API: the get_* functions now
+	return 'undefined' when the corresponding attribute doesn't exist.
+
+2008-06-19  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* include/exmpp.hrl, src/core/exmpp_presence.erl,
+	src/core/exmpp_message.erl, src/Emakefile.in, src/Makefile.am,
+	ebin/Makefile.am, ebin/exmpp.app.in, doc/Makefile.am: Add
+	exmpp_presence and exmpp_message which provides helpers to handle
+	presence and message stanza respectively.
+
+	* src/core/exmpp_xml.erl (reset_parser/1): This function was calling
+	reset_parser2/2 directly instead of reset_parser/2. Therefore, options
+	were not merged and the parser was not actually reset.
+
+2008-06-18  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	Caution: XML parser options and exmpp_xmlstream API changed!
+
+	* src/core/exmpp_xml.erl, testsuite/check_xml_parser.erl: Options
+	handling was revised a lot:
+	    o  Options are now real "proplists". It means that all options
+	       starting with "no_" doesn't exist anymore. They're almost all
+	       replaced by a tuple '{Key, false}'.
+	    o  Previous options are kept in the #xml_parser record.
+	    o  A new function reset_parser/2 allows one to change parser
+	       options and reset its parsing state.
+	This will be useful to get exmpp_xml:start/1 out of
+	exmpp_xmlstream:start/{1,2,3}. Also, options documentation was
+	updated.
+
+	* src/core/exmpp_xml.erl, c_src/exmpp_xml_expat.c: Rename the few
+	remaining occurences of "endelement" to "endtag".
+
+	* src/core/exmpp_xmlstream.erl, testsuite/check_xmlstream.erl: From
+	now on, the XML parser must be created by the caller and passed to
+	exmpp_xmlstream:start/{2,3}. This allow the caller to control the
+	parser; for instance, he can add known names, namespaces or
+	attributes. He is responsible to stop the parser and can use the new
+	get_parser/1 to get it back. start/1 was removed and stop/1 is now a
+	NOOP (but is kept for potential future changes).
+
+	* src/network/exmpp_session.erl: Sync with last exmpp_xmlstream
+	changes.
+
+2008-06-17  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* testsuite/Makefile.am: Fix th ERL_FILES and BEAM_FILES: it was
+	missing the 'testsuite' module. Fix the command that copy test.sh to
+	the final test script: if the script didn't exist before, the copy was
+	not made.
+
+	* src/core/exmpp_xml.erl, c_src/exmpp_xml_expat.c,
+	c_src/exmpp_expat.c, c_src/Makefile.am, c_src/Makefile.unix,
+	c_src/Makefile.win32: Rename exmpp_expat to exmpp_xml_expat. The new
+	name use the same model than exmpp_tls_[engine] and
+	exmpp_compress_[engine].
+
+	* c_src/Makefile.am: Use a custom directory prefix (execdrivers) to
+	install port drivers, instead of the common libdir. This avoids
+	recursion (libdir="${libdir}/...") in some cases. Fix CPPFLAGS and
+	LDFLAGS for exmpp_compress_zlib; it was using those for OpenSSL, not
+	Zlib as it should.
+
+	* configure.ac: Resurrect the --with-erlang flag to indicate Erlang
+	root directory. It's used when cross-compiling because this directory
+	can't be guessed.
+
+	* c_src/exmpp_stringprep.c: strcat_s() exists when using Microsoft
+	Visual C++ but MingW provides the standard strcat(3) instead.
+	Therefore we test the use of Visual C++ specifically, not the Windows
+	target.
+
+2008-06-17  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	Your attention please: #xmlnselement was renamed to #xmlel!
+
+	I repeat: #xmlnselement was renamed to #xmlel!
+
+	You may now resume your daily activities. Thank you.
+
+2008-06-16  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_xml.erl, testsuite/check_xml_converters.erl: Preserve
+	attributes order when making the text version.
+
+	* testsuite/Makefile.am: Simplify this Makefile: all shell scripts are
+	'built' the same way.
+
+	* testsuite/test.sh: Specify the bar graph column width. It doesn't
+	shrink to fit the larger bar anymore.
+
+	* include/exmpp.hrl, src/core/exmpp_stream.erl,
+	src/core/exmpp_stanza.erl, src/core/exmpp_iq.erl,
+	src/server/exmpp_server_compression.erl,
+	src/server/exmpp_server_tls.erl, src/server/exmpp_server_sasl.erl,
+	src/server/exmpp_server_session.erl,
+	src/server/exmpp_server_legacy_auth.erl,
+	src/server/exmpp_server_binding.erl,
+	src/client/exmpp_client_binding.erl,
+	src/client/exmpp_client_roster.erl,
+	src/client/exmpp_client_pubsub.erl,
+	src/client/exmpp_client_compression.erl,
+	src/client/exmpp_client_tls.erl, src/client/exmpp_client_sasl.erl,
+	src/client/exmpp_client_session.erl,
+	src/client/exmpp_client_register.erl,
+	src/client/exmpp_client_legacy_auth.erl: Change the default value for
+	children in #xmlnselement &nd #xmlelement to the empty list. This is a
+	more sensible value that will spare systematic initialization.
+
+	* include/exmpp.hrl, src/core/exmpp_stream.erl,
+	src/core/exmpp_xmlstream.erl, src/core/exmpp_xml.erl,
+	src/network/exmpp_session.erl, c_src/exmpp_expat.c,
+	testsuite/check_xml_converters.erl, testsuite/check_xmlstream.erl,
+	testsuite/check_xml_parser.erl, testsuite/check_stream.erl: Merge
+	#xmlnsendelement and #xmlendelement in #xmlendtag. This is done
+	because this notion didn't exist in ejabberd and the name was wrong;
+	this record doesn't represent an element. When namespace support is
+	disabled, the members 'ns' and 'prefix' are set to 'undefined'.
+
+	* testsuite/Makefile.am: Tests depend on the .beam files AND the .erl
+	sources.
+
+	* include/exmpp.hrl: Remove the '#iq" record and the NS_DELAY define.
+	They're used by jlib and their definition is in jlib.hrl now.
+
+2008-06-12  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* include/exmpp.hrl, src/core/exmpp_xml.erl, c_src/exmpp_expat.c:
+	Rework (again) namespace forward-declaration. It now supports default
+	and prefixed namespace and, hopefulily, it works. Caution, the record
+	format is changed! Record conversion is also cleaned up. Problems are
+	probably remaining if the caller mix atoms and strings for
+	namespaces/names/attributes. Add functions to add known namespace,
+	names and attributes to the tables used by the port driver. While
+	we're at it, implement a simple prefix auto-generation. Fixed
+	documentation at several places.
+	(get_path): When the target isn't found, return something
+	corresponding to the expected data type: 'undefined' for elements, an
+	empty list for attributes and an empty binary for character data.
+
+	* testsuite/check_xml_attribute_handlers.erl,
+	testsuite/check_xml_converters.erl,
+	testsuite/check_xml_cdata_handlers.erl,
+	testsuite/check_xml_parser.erl, testsuite/check_xml_path.erl,
+	testsuite/check_xmlstream.erl, testsuite/check_legacy_auth.erl,
+	testsuite/check_xml_element_handlers.erl, testsuite/check_stream.erl:
+	Use the new #xmlnselement record.
+
+	* src/core/exmpp_stream.erl: Use the new #xmlnselement record.
+
+	* src/core/exmpp_xml.erl: Fix a bug in the documentation.
+
+2008-06-09  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	With these commits, exmpp port drivers build with Visual C++ on
+	Microsoft Windows.
+
+	* c_src/exmpp_stringprep.c: Visual C++ uses strcat_s() instead of
+	strcat().
+
+	* c_src/exmpp_tls.c: Visual C++ uses _stricmp() instead of
+	strcasecmp().
+
+	* c_src/contrib/hashtable_private.h: Visual C++ uses __inline instead
+	of inline.
+
+	* c_src/exmpp_expat.c: Visual C++ uses _strdup() instead of strdup().
+	Fix several comparisons of long with different signedness.
+
+	* c_src/Makefile.win32, c_src/xmpp_ns.h.js, c_src/xmpp_names.h.js,
+	c_src/xmpp_attrs.h.js: Add a Makefile and scripts to build port
+	drivers on Windows using Visual C++.
+
+2008-06-09  Pablo Polvorin  <pablo.polvorin@process-one.net>
+
+	* src/network/exmpp_session.erl: Use the appropriate options
+	when starting the exmpp_xmlstream ({xmlstreamstart,new}).
+
+2008-06-05  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* c_src/exmpp_tls.h, c_src/exmpp_tls_openssl.c: Add support for new
+	commands COMMAND_GET_PEER_CERTIFICATE, COMMAND_GET_VERIFY_RESULT and
+	COMMAND_QUIET_SHUTDOWN. Rewrite COMMAND_SHUTDOWN to handle uni- and
+	bidirectional shutdown.
+
+	* src/compat/ejabberd_socket.erl, src/Emakefile.in, src/Makefile.am,
+	ebin/Makefile.am, ebin/exmpp.app.in, doc/Makefile.am: Add
+	ejabberd_socket to the compat layer. This is needed to modify how
+	STARTTLS is handled in ejabberd: the <proceed/> element must be sent
+	before the call to tls:tcp_to_tls/2.
+
+	* src/core/exmpp_internals.erl: Add gen_getopts/2.
+
+	* src/core/exmpp_compress.erl: Remove the 'Length' argument to the
+	recv functions. Add recv_data/2. Add getopts/2. Multiple fixes to the
+	documentation.
+
+	* src/core/exmpp_tls.erl: Remove the 'Length' argument to the
+	recv functions. Add recv_data/2. Add getopts/2. Add
+	get_peer_certificate/1 and get_verify_result/1. Add shutdown/{1-3} and
+	quiet_shutdown/1. Multiple fixes to the documentation.
+	(handshake): The 'active' state of the underlying socket is set to
+	false and restored after the handshake. This allows the caller to set
+	the socket to {active, once} or {active, true}. Before, the handshake
+	would fail because gen_tcp:recv/{2,3} would return {error, einval}.
+	(get_engine_from_identity, get_engine_from_verification): These
+	functions were not up-to-date regarding the data structures for the
+	identity, the peer verification and the options.
+	(shutdown, quiet_shutdown, close): The port driver is closed and
+	unloaded.
+	(engine_get_decrypted_input): The port driver still wants the length
+	argument. This should be fixed!
+
+	* src/compat/tls.erl: Synchronize this compat module with the latest
+	version from ejabberd (revision 1344).
+
+	* src/core/exmpp_compress.erl (disable_compression, close): The port
+	driver is closed and unloaded.
+
+	* src/compat/ejabberd_zlib.erl: Synchronize this compat module with
+	the latest version from ejabberd (revision 1344).
+
+	* c_src/tls_drv.c, c_src/ejabberd_zlib_drv.c, c_src/Makefile.am,
+	c_src/Makefile.unix: De-orbit old port drivers because the compat
+	layer is now ready.
+
+	* src/compat/EXMPP-vendor: Add a file to track the ejabberd revision
+	the compat layer is based on.
+
+	* configure.ac: Add a line in the sumary to tell if Expat was found or
+	not.
+
+	* c_src/exmpp_tls.h, c_src/exmpp_tls_openssl.c: Move return codes
+	definition to the generic header.
+
+	* c_src/exmpp_compress.h, c_src/exmpp_compress_zlib.c,
+	c_src/Makefile.am: Add a generic header for all compression port
+	drivers. Move some definitions to it.
+
+	* c_src/Makefile.unix: Add compilation instructions for
+	exmpp_tls_openssl.so and exmpp_compress_zlib.so.
+
+	* configure.ac: Add a flag to use CDATA sections for text nodes
+	escaping.
+
+	* src/core/exmpp_xml.erl: A long standing confusion with CDATA
+	handling is now fixed: get_cdata/1 will now return binaries;
+	#xmlnselement and #xmlelment store these this way. normalize/1 is also
+	fixed to do what it is supposed to do (as specified in the DOM
+	specification). document_fragment_to_list/3 now escapes what needs to
+	be escaped and doesn't forget to normalize CDATA before. Documentation
+	is up-to-date.
+	(get_cdata_as_list, get_cdata_from_list_as_list): New functions to get
+	character data as string.
+	(escape_using_cdata): Support for escaping with CDATA sections instead
+	of entities was taken from ejabberd. It's disabled by default.
+
+	* testsuite/check_xml_converters.erl,
+	testsuite/check_xml_cdata_handlers.erl, testsuite/check_xml_path.erl:
+	Update testsuite to handle above changes.
+
+	* src/server/exmpp_server_sasl.erl,
+	src/server/exmpp_server_legacy_auth.erl,
+	src/server/exmpp_server_binding.erl, src/core/exmpp_stream.erl,
+	src/core/exmpp_stanza.erl, src/client/exmpp_client_binding.erl,
+	src/client/exmpp_client_compression.erl,
+	src/client/exmpp_client_sasl.erl: Use get_cdata_as_list/1 instead of
+	get_cdata/1.
+
+	* src/compat/xml.erl: Use new CDATA escaping support from exmpp_xml.
+	(get_cdata): Use exmpp_xml:get_cdata_from_list_as_list/1.
+
+2008-06-04  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	With these changes, ejabberd 2.0.x can run without modifications with
+	the exmpp compat layer.
+
+	* src/core/exmpp_xmlstream.erl: Add support for old xmlstreamstart
+	tuple. The format to use can be chosen by calling the new start/3
+	function. Be careful, the old format is selected by default now,
+	instead of the new one as before.
+	(start/1): Remove the clause that takes only XML parser options
+	because the API is confusing.
+
+	* testsuite/check_xmlstream.erl: Use explicitly the new xmlstreamstart
+	format.
+
+	* src/compat/xml_stream.erl, src/Emakefile.in, src/Makefile.am,
+	ebin/Makefile.am, ebin/exmpp.app.in, doc/Makefile.am: Add xml_stream
+	to the compat layer.
+
+	* src/core/exmpp_xmlstream.erl: A few style changes.
+
+2008-06-03  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_internals.erl (gen_setopts): Fixed a bug where
+	'Options' was not passed to the underlying setopts/2 function.
+
+	* src/compat/xml.erl: Synchronize this compat module with the latest
+	version from ejabberd repository (revision 1344). This time, the only
+	modifications are the calls to exmpp_xml; there's no changes to the
+	documentation or the style. It should ease future modifications
+	tracking. Also new features missing in exmpp_xml were identified.
+
+	* src/compat/stringprep.erl: Synchronize this compat module with the
+	latest version from ejabberd repository (revision 1344). As with xml,
+	the modifications are limited to the calls to exmpp_stringprep.
+
+	* include/jlib.hrl, include/Makefile.am, src/compat/jlib.erl: Again,
+	reduce diff with jlib from ejabberd repository (revision 1344). The
+	new jlib header is added for the old #jid record. It's installed only
+	when the compat layer is enabled.
+
+	* src/compat/stringprep.erl (tolower): Fixed a typo in a function
+	name.
+
+	* src/core/exmpp_jid.erl, src/compat/jlib.erl: For unspecified node or
+	resource, ejabberd expects the empty string, not 'undefined'. Also
+	fixed a bug with a call to a non-existing exmpp_jid:jid_to_string/3
+	function.
+
+2008-06-02  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_internals.erl, src/core/exmpp_tls.erl,
+	src/core/exmpp_compress.erl: Move underlying_recv/2 and
+	underlying_send/2 to exmpp_internals. exmpp_tls and exmpp_compress
+	were sharing this small piece of code.
+
+	* src/core/exmpp_internals.erl: Fixed a bug with documentation.
+
+	* src/compat/iconv.erl, src/compat/sha.erl, c_src/iconv_erl.c,
+	m4/iconv.m4, src/Emakefile.in, src/Makefile.am, c_src/Makefile.unix,
+	c_src/Makefile.am, doc/Makefile.am, ebin/Makefile.am,
+	ebin/exmpp.app.in, configure.ac: Remove 'iconv' and 'sha' from the
+	compat layer as they belong to ejabberd specificaly. Also the
+	configure script doesn't check for iconv(3) anymore.
+
+	* src/core/exmpp_compress.erl: Rename compress/2 to
+	enable_compression/2. Add function disable_compression/1.
+
+	* src/core/exmpp_internals.erl, src/core/exmpp_tls.erl,
+	src/core/exmpp_compress.erl: Add functions setopts/2, peername/1 and
+	sockname/1.
+
+2008-05-23  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* configure.ac: Reorganize the final summary and add bold titles to
+	make the output more readable.
+
+	* src/core/exmpp_compress.erl: Rename the 'mode' option to
+	'packet_mode'.
+
+	* src/core/exmpp_tls.erl: Now interpret options and run the
+	corresponding port driver commands.
+
+	* c_src/exmpp_tls.h, c_src/exmpp_tls.c, c_src/Makefile.am: Move common
+	TLS constants and functions to a separate C file.
+
+	* c_src/exmpp_tls_openssl.c: Add support for options. Fix a bug with
+	the COMMAND_SET_PEER_VERIF command where expected_id was always set to
+	the empty string when the caller specified a boolean instead. Add
+	preliminary support for certificate verification (WORK IN PROGRESS).
+	For now, it understands the basic verification made by OpenSSL and
+	check the expected_id against subjectAltName.dNSName (not exactly as
+	specified in RFC 2818 though). It still lacks the check against the
+	XMPP-specific subjectAltName extension and the commonName.
+
+2008-05-22  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	Import of the new compression layer.
+
+	* configure.ac: Always check for Zlib, not only when the compat layer
+	is enabled. Print a summary of supported engines for both TLS and
+	compression.
+
+	* src/core/exmpp_compress.erl, c_src/exmpp_compress_zlib.c,
+	src/Makefile.am, src/Emakefile.in, c_src/Makefile.am,
+	ebin/Makefile.am, ebin/exmpp.app.in, doc/Makefile.am: Add
+	exmpp_compress and its associated port driver.
+
+	* src/core/exmpp_tls.erl: Fixed some issues with documentation.
+
+	* src/core/exmpp_tls.erl, src/core/exmpp_compress.erl: Fix start/0 and
+	start_link/0 return values.
+
+	* c_src/exmpp_compress_zlib.c: Free Z streams when the driver is
+	stopped.
+
+	* src/core/exmpp_sup.erl: Remove start/0 because supervisor:start/3
+	never existed. Start exmpp_compress.
+
+2008-05-21  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	Import of the new TLS layer.
+
+	* configure.ac: Always check for OpenSSL, not only when the compat
+	layer is enabled.
+
+	* src/core/exmpp_tls.erl, c_src/exmpp_tls_openssl.c, src/Makefile.am,
+	src/Emakefile.in, c_src/Makefile.am, ebin/Makefile.am,
+	ebin/exmpp.app.in, doc/Makefile.am: Add exmpp_tls and its associated
+	port driver.
+
+	* src/core/exmpp_tls.erl, c_src/exmpp_tls_openssl.c: Add
+	controlling_process/2 and close/1 functions. Allow the underlying
+	socket to return data as lists. Allow the caller to send data as list;
+	the receive part is done but the option isn't available yet. Fix
+	handshake for the client side. When the handshake fails, the port
+	driver now returns the reason string provided by OpenSSL. Until a real
+	verify_callback is made, any certificate is accepted.
+
+	* src/core/exmpp_tls.erl: Add basic documentation. Fix $Id$ tag.
+	(recv/3): Add real timeout support.
+
+	* src/core/exmpp_sup.erl: Start exmpp_tls.
+
+2008-05-21  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* doc/Makefile.am: Fixed distributed files list.
+
+	* c_src/exmpp_expat.c, c_src/exmpp_stringprep.c: style(9).
+
+	* src/core/exmpp_internals.erl (load_driver): Add a clause to allow
+	the caller to specify the directories list where the driver should be
+	found.
+
+2008-05-20  Pablo Polvorin <pablo.polvorin@process-one.net>
+
+	* src/network/exmpp_ssl.erl: Fix compatibility bug with old OTP
+	versions that doesn't allow the reuseaddr option in ssl sockets.
+
+	* src/network/exmpp_ssl.erl: Refactor the code, using exmpp_tcp.erl as
+	a model.
+
+2008-05-13  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* c_src/exmpp_expat.c, c_src/Makefile.am, c_src/Makefile.unix,
+	src/core/exmpp_xml.erl: Rename 'exmpp_expat_drv' to 'exmpp_expat'.
+
+	* c_src/exmpp_stringprep.c, c_src/Makefile.am, c_src/Makefile.unix,
+	src/core/exmpp_stringprep.erl: Rename 'exmpp_stringprep_drv' to
+	'exmpp_stringprep'.
+
+2008-05-07  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* include/exmpp.hrl: Add a macro to test IQ in guard expressions.
+	Rename NS_JABBER_SESSION as NS_SESSION.
+
+	* src/server/exmpp_server_binding.erl,
+	src/server/exmpp_server_compression.erl,
+	src/server/exmpp_server_legacy_auth.erl,
+	src/server/exmpp_server_sasl.erl,
+	src/server/exmpp_server_session.erl,
+	src/server/exmpp_server_tls.erl: Use 'receiving entity' instead of
+	'server'. Replace references to exmpp_server_stream with
+	exmpp_stream.
+
+	* src/server/exmpp_client_binding.erl,
+	src/client/exmpp_client_compression.erl,
+	src/client/exmpp_client_legacy_auth.erl,
+	src/server/exmpp_client_sasl.erl,
+	src/server/exmpp_client_session.erl,
+	src/server/exmpp_client_tls.erl: Use 'initiating entity' instead of
+	'client'.
+
+	* src/client/exmpp_client_binding.erl,
+	src/server/exmpp_server_compression.erl,
+	src/client/exmpp_client_compression.erl: Fix exceptions documention.
+
+	* src/client/exmpp_client_compression.erl,
+	src/server/exmpp_server_sasl.erl: Avoid list concatenation when it's
+	possible.
+
+	* src/server/exmpp_server_binding.erl,
+	src/server/exmpp_server_legacy_auth.erl,
+	src/client/exmpp_client_legacy_auth.erl: Update documentation. Use the
+	new IS_IQ macro.
+
+	* src/server/exmpp_server_sasl.erl, src/server/exmpp_client_sasl.erl,
+	src/server/exmpp_server_session.erl,
+	src/server/exmpp_client_session.erl, src/server/exmpp_server_tls.erl,
+	src/client/exmpp_client_tls.erl: Use exceptions for error handling.
+	Add basic documentation.
+
+	* src/server/exmpp_server_sasl.erl (failure): Rewrite error creation.
+	(next_step): Change {auth, Mech} by {auth, Mech, none} so that the
+	'auth' tuple has always the same size.
+
+	* src/server/exmpp_server_binding.erl,
+	src/client/exmpp_client_binding.erl,
+	src/server/exmpp_server_session.erl,
+	src/client/exmpp_client_session.erl: Use exmpp_iq instead of
+	exmpp_xml.
+
+	* src/client/exmpp_client_binding.erl (announced_support): Fix a bug
+	where true was returned when the support was not announced.
+
+	* src/server/exmpp_server_session.erl: Add a function to report an
+	error.
+
+	* src/client/exmpp_client_session.erl: Add a function to check if the
+	feature was announced. Use exmpp_internals:random_id/1 for IDs.
+
+	* src/core/exmpp_iq.erl: Add a function iq_iq/1, mostly to demonstrate
+	the new IS_IQ macro.
+
+2008-04-18  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_error.erl, src/core/exmpp_stanza.erl,
+	src/core/exmpp_iq.erl, src/core/exmpp_stream.erl,
+	src/server/exmpp_server_binding.erl,
+	src/server/exmpp_server_legacy_auth.erl,
+	src/client/exmpp_client_binding.erl,
+	src/client/exmpp_client_legacy_auth.erl, src/Makefile.am,
+	src/Emakefile.in, ebin/Makefile.am, ebin/exmpp.app.in,
+	doc/Makefile.am: Rename exmpp_error to exmpp_stanza.
+
+	* src/core/exmpp_jlib.erl, src/Makefile.am, src/Emakefile.in,
+	ebin/Makefile.am, ebin/exmpp.app.in, doc/Makefile.am: Remove
+	exmpp_jlib.
+
+	* src/core/exmpp_internals.erl: Add functions to generale a random ID.
+
+	* src/core/exmpp_stream.erl, src/core/exmpp_stanza.erl,
+	src/client/exmpp_client_binding.erl: Use exmpp_internals for random
+	ID.
+
+	* src/core/exmpp_iq.erl: Add functions to access request and result
+	contained in an IQ.
+
+	* src/server/exmpp_server_legacy_auth.erl,
+	src/client/exmpp_client_legacy_auth.erl: Modify and add functions to
+	better handle legacy authentication. It's now possible to tell which
+	fields to propose from the server side and get credentials from the
+	stanza sent by the client. From the client side, the password stanza
+	is built based on the fields supported by the server.
+
+	* testsuite/check_legacy_auth.erl: Update testsuite for
+	exmpp_server_legacy_auth and exmpp_client_legacy_auth.
+
+2008-04-17  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	Second round of commits for the Big Cleanup.
+
+	* src/server/exmpp_server_binding.erl,
+	src/client/exmpp_client_binding.erl,
+	src/server/exmpp_server_compression.erl,
+	src/client/exmpp_client_compression.erl,
+	src/server/exmpp_server_legacy_auth.erl,
+	src/client/exmpp_client_legacy_auth.erl: Update to use the new
+	modules/structures. Add basic documentation. Style.
+
+	* testsuite/check_legacy_auth.erl: Update testsuite for
+	exmpp_server_legacy_auth and exmpp_client_legacy_auth.
+
+2008-04-17  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	First round of commits for the Big Cleanup.
+
+	* include/exmpp.hrl, c_src/exmpp_expat_drv.c: Add a "default_ns"
+	member to #xmlnselement; we keep the default namespace in it,
+	regardless of the namespace of the current element. Style.
+
+	* c_src/exmpp_stringprep_drv.c: Add a command to return the port
+	driver $Revision$. Style.
+
+	* src/core/exmpp_internals.erl, src/core/exmpp_stringprep.erl: Use
+	exceptions for error handling. Add basic documentation.
+
+	* src/core/exmpp_xml.erl: Use exceptions for error handling. Use
+	exmpp_internals for port driver load/unload. Add function clauses for
+	accept "undefined" as an XML element. Change several functions to
+	return "undefined" instead of an empty string. Use the new
+	"default_ns" member during serialization. Update documentation.
+	Style.
+
+	* testsuite/check_xml_parser.erl,
+	testsuite/check_xml_attribute_handlers.erl,
+	testsuite/check_xml_element_handlers.erl,
+	testsuite/check_xml_cdata_handlers.erl, testsuite/check_xml_path.erl,
+	testsuite/check_xml_converters.erl: Update testsuite for exmpp_xml.
+
+	* src/core/exmpp_jid.erl: Use exceptions for error handling. Add basic
+	documentation. Style.
+
+	* testsuite/check_jid.erl: Update testsuite for exmpp_jid.
+
+	* src/core/exmpp_xmlstream.erl: Use exceptions for error handling.
+	Style.
+
+	* testsuite/check_xmlstream.erl: Update testsuite for exmpp_xmlstream.
+
+	* src/core/exmpp_stream.erl: Now, everything at the stream-level is
+	handled here. exmpp_client_stream and exmpp_server_stream should be
+	deleted as soon as the functions to manipulate features have moved
+	here. API of existing functions has changed. Use exceptions for error
+	handling.
+
+	* testsuite/check_stream.erl: Update testsuite for exmpp_stream.
+
+	* src/core/exmpp_error.erl: Everything at the stanza-level is handled
+	here. This module will be renamed as exmpp_stanza soon. Add basic
+	documentation.
+
+	* src/core/exmpp.erl, src/core/exmpp_sup.erl: Add basic documentation.
+	Style.
+
+	* src/core/exmpp_iq.erl, src/Emakefile.in, src/Makefile.am,
+	ebin/Makefile.am, ebin/exmpp.app.in, doc/Makefile.am: Add exmpp_iq, a
+	new module to provide functions specific to IQs.
+
+	* testsuite/testsuite.erl: Be verbose when Result and Ref doesn't
+	match. Style.
+
+	* src/core/exmpp_stream.erl, src/server/exmpp_server_stream.erl,
+	src/client/exmpp_client_stream.erl, src/Makefile.am, src/Emakefile.in,
+	ebin/Makefile.am, ebin/exmpp.app.in, doc/Makefile.am: Move the
+	exmpp_server_stream:features/1 to exmpp_stream and remove
+	exmpp_server_stream and exmpp_client_stream.
+
+2008-04-17  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* doc/Makefile.am: Wildcards are voluntarily not supported by
+	automake(1). To fix the build, we list explicitly every HTML files.
+	The "-i ''" argument of BSD sed still doesn't behave like GNU sed. To
+	fix this, we use an backup extension ("-i.bak") and remove the
+	backup.
+
+	* testsuite/test.sh: Fix sed(1) usage as above.
+
+2008-04-16  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* README: Fix autotools usage.
+
+	* testsuite/test.sh, testsuite/check_coverity.erl,
+	testsuite/Makefile.am: Build an index for code coverage reports.
+
+	* doc/Makefile.am: Replace ISO-8859-1-encoded '©' by an HTML entity.
+
+2008-04-03  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/Makefile.am: Update modules list. Replace erl -make by a small
+	Erlang code snippet: if a module doesn't compile, the make process
+	will abort.
+
+	* src/Emakefile.in: Update modules list.
+
+	* ebin/Makefile.am: Update modules list. Install examples in a
+	separate directory (examples/ebin instead of ebin) to avoid namespace
+	pollution.
+
+	* doc/Makefile.am: Add the examples to the dependencies. Fix the
+	sed(1) call; with BSD sed, the -i'' argument wasn't using a
+	zero-length extension but the next argument as the backup extension.
+	Fix the distributed files list.
+
+	* src/network/exmpp_ssl.erl, src/network/exmpp_session.erl,
+	src/examples/echo_client.erl: Fix warning with unused variables. Three
+	warnings remain in exmpp_session but this requires more work.
+
+	* src/examples/echo_client.erl: Fix a malformed documentation. Fix
+	includes path.
+
+	* configure.ac: Remove the EXMPP_CONFIGURE_ARGS variable because it's
+	broken and unsued. Replace AC_PROG_CC with AC_PROG_CC_STDC and trust
+	autoconf(1) by not saving CFLAGS before. Remove -Wall and -Werror from
+	CFLAGS; they are both added later. Remove AC_HEADER_STDC and
+	AC_HEADER_MAJOR which are obsolete now. With --enable-debug, we don't
+	add -g because AC_PROG_CC_STDC already does it. Correctly use
+	--enable-* for features (documentation and workarounds), instead of
+	--with-*. Rewrite Erlang paths and applications detection to correctly
+	handle $ERL and $ERLC. Renamed the 'broken-erl_ddll' feature to
+	'erl_ddll-workaround'. Add a new 'http_base_64' detection feature,
+	because this module was removed from Erlang starting with R12B-0.
+
+	* src/core/exmpp_internals.erl, src/server/exmpp_server_sasl.erl,
+	src/client/exmpp_client_sasl.erl: Starting with Erlang R12B-0, the
+	http_base_64 module was removed, replaced by base64 from stdlib
+	1.14.4. When ENABLE_HTTP_BASE_64 if defined, we try to use
+	http_base_64 and fallback to base64 is necessary. If it's not defined,
+	we use only base64.
+
+	* ac-aux: Remove this directory. It's created and filled by
+	autoreconf(1) and doesn't belong to the exmpp repository.
+
+	* ebin/exmpp.app.in: Update modules list.
+
+	* ebin/exmpp.appup.in: Remove upgrade/downgrade instructions because
+	they are outdated.
+
+	* src/core/exmpp_internals.erl: Use base64:*code_to_string/1, because
+	http_base_64 was returning string too.
+
+2008-02-11  Mickael Remond  <mremond@process-one.net>
+
+	* src/network/exmpp_session.erl: API improvement: we can send and
+	receive packet right after connection. Developper can thus write
+	their own authentication.
+	* src/client/exmpp_client_register.erl: Added unregister packets
+	creation.
+
+	* src/core/exmpp_xml.erl: Improved API: We can now register a user
+	even if we have not set the authentication parameters
+	* src/examples/echo_client.erl: Minor typo in comment
+
+2008-02-10  Mickael Remond  <mremond@process-one.net>
+
+	* src/core/exmpp_error.erl: Improved exceptions
+	* src/core/exmpp_internals.erl: Likewise
+	* src/core/exmpp_xml.erl: Likewise
+	* src/network/exmpp_session.erl: Likewise
+
+	* src/network/exmpp_session.erl: Fixed exmpp session start in
+	debug mode
+	
+	* src/core/exmpp_xml.erl: Beautify code
+	
+2008-02-09  Mickael Remond  <mremond@process-one.net>
+
+	* src/network/exmpp_session.erl: We can now open the stream before
+	defining authentication method. In this case, we need to pass an
+	extra domain parameter.
+	* src/core/exmpp_jid.erl: Fixed indentation.
+	* src/core/exmpp_stringprep.erl: Fixed indentation.
+
+2008-01-27  Mickael Remond  <mremond@process-one.net>
+
+	* src/network/exmpp_session.erl: Now forward IQ packet to client
+	session (Thanks to Will Glozer).
+
+	* src/network/exmpp_session.erl: Support session stop (Thanks to Will
+	Glozer).
+
+2008-01-16  Mickael Remond  <mremond@process-one.net>
+
+	* src/network/exmpp_ssl.erl: SSL client connection support (Thanks
+	to Wil Glozer)
+	* src/Emakefile.in: Likewise
+	* src/Makefile.am: Likewise
+	* exmpp/src/network/exmpp_session.erl: Likewise
+	* exmpp/ebin/Makefile.am: Likewise
+	
+	* exmpp/configure.ac: Clean-up compilation process (Thanks to Will
+	Glozer)
+	* exmpp/include/exmpp.hrl: Likewise
+	* exmpp/src/Makefile.am: Likewise
+	* exmpp/ebin/Makefile.am: Likewise
+	* exmpp/ac-aux/depcomp: Likewise
+	* exmpp/ac-aux/missing: Likewise
+	* exmpp/ac-aux/config.guess: Likewise
+	* exmpp/ac-aux/config.sub: Likewise
+	* exmpp/ac-aux/ltmain.sh: Likewise
+	* exmpp/ac-aux/install-sh: Likewise	
+
+2007-07-02  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* include/Makefile.am, src/Makefile.am, src/Emakefile.in,
+	ebin/Makefile.am: Updated Makefiles to include the new modules.
+
+	* ebin/exmpp.app.in: The modules list wasn't up-to-date; it's now
+	fixed.
+
+2007-07-01  Christophe Romain  <christophe.romain@process-one.net>
+
+	* include/xmpp.hrl, src/network/exmpp_callbacks.erl,
+	src/network/exmpp_tcp.erl: Add network modules for direct client use.
+
+2007-07-01  Mickael Remond  <mremond@process-one.net>
+
+	* src/core/exmpp_jid.erl: Make jid can generate random resource when
+	asked. A new is_jid function has been added.
+
+2007-06-26  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	Branch 0.7.
+
+2007-06-20  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* c_src/Makefile.am: Moved some targets around to reorder them more
+	logically.
+
+	* Makefile.unix, c_src/Makefile.unix, src/Makefile.unix,
+	ebin/Makefile.unix: Added Makefiles to provide an alternate build
+	procedure. It's intended for Unix plateforms where the autotools are
+	not as common as under Linux/*BSD. Note that this method doesn't have
+	any option to disable the compatibility layer or to build the
+	documentation yet. They require GNU make(1).
+
+2007-06-19  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/server/exmpp_server_sasl.erl (next_step),
+	src/server/exmpp_server_session.erl (want_establishment),
+	src/server/exmpp_server_binding.erl (wished_resource): Return an error
+	if the given stanza is unexpected. If the argument isn't an
+	#xmlnselement{}, it still raises a function clause EXIT.
+
+	* src/server/exmpp_server_binding.erl (error): Add the
+	`not-authorized' case.
+
+	* src/core/exmpp_stream.erl, src/server/exmpp_server_stream.erl,
+	src/client/exmpp_client_stream.erl: Add helpers to access common
+	attributes.
+
+	* src/core/exmpp_xml.erl: Add functions to prepend one or more
+	children to a given element's children.
+
+	* m4/ax_compare_version.m4: New M4 macro to compare version numbers in
+	a configure script.
+
+	* configure.ac: Updated the required autoconf version to 2.60 (for
+	official Erlang support). Removed directives which were never used
+	and already commented out. Check Erlang kernel's version to
+	automatically enable or disable erl_ddll workaround. Check for sed(1).
+
+	* doc/Makefile.am: Documentation is now rebuilt only if one of the
+	source files is updated. Add `erlang.png' to the CLEANFILES. Add the
+	correct encoding to every HTML documents with sed(1).
+
+2007-05-15  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/server/exmpp_server_compression.erl (methods_list2),
+	src/server/exmpp_server_sasl.erl (mechanisms_list2): Verify if the
+	given argument is an authentic string.
+
+	* src/core/exmpp_sup.erl: Do not use supervisor:start/3 because it
+	never existed. Spotted by Dialyzer.
+
+2007-05-04  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_xml.erl: Unlink port before stopping it. This
+	prevents an 'EXIT' message sent to the port owner.
+
+	* doc/overview.edoc: Nano update of the application overview.
+
+2007-04-20  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* doc/Makefile.am: Fixed documentation build: the new sources layout
+	broke it. Also add `make install' support.
+
+2007-04-18  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* include/exmpp.hrl: Added resource binding namespace.
+
+	* src/client/exmpp_client_binding.erl,
+	src/server/exmpp_server_binding.erl: New modules to deal with Resource
+	Binding.
+
+	* src/client/exmpp_client_session.erl,
+	src/server/exmpp_server_session.erl: New modules to deal with Session
+	Establishment.
+
+	* src/client/exmpp_client_tls.erl: Renamed a variable to be consistent
+	with other modules.
+
+	* src/Makefile.am, src/Emakefile.in, ebin/Makefile.am: Connected new
+	modules to the build.
+
+2007-04-12  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_stream.erl, src/client/exmpp_client_stream.erl,
+	src/server/exmpp_server_stream.erl: Removed `stream_' prefix from all
+	functions.
+
+	* src/server/exmpp_server_stream.erl (features): New function to build
+	a features announcement stanza.
+
+	* testsuite/check_stream.erl, testsuite/check_legacy_auth.erl:
+	Corrected a comment.
+
+	* testsuite/check_stream.erl: Updated to use new function names in
+	`exmpp_stream'.
+
+	* src/client/exmpp_client_tls.erl, src/server/exmpp_server_tls.erl:
+	New modules to deal with TLS negotiation.
+
+	* src/client/exmpp_client_compression.erl,
+	src/server/exmpp_server_compression.erl: New modules to deal with
+	stream compression negotiation.
+
+	* src/client/exmpp_client_sasl.erl, src/server/exmpp_server_sasl.erl:
+	New modules to deal with SASL transport.
+
+	* src/Makefile.am, src/Emakefile.in, ebin/Makefile.am: Connected all
+	new modules to the build. Disconnected `exmpp_factory' for future
+	removal.
+
+	* src/core/exmpp_factory.erl: Removed because all code was moved to
+	dedicated modules.
+
+2007-04-11  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/core/exmpp_factory.erl, src/core/exmpp_stream.erl,
+	src/client/exmpp_client_stream.erl,
+	src/server/exmpp_server_stream.erl, src/Makefile.am, src/Emakefile.in,
+	ebin/Makefile.am, testsuite/check_factory_stream.erl,
+	testsuite/Makefile.am: Moved stream handling code to dedicated
+	modules.
+
+	* testsuite/check_factory_stream.erl, testsuite/check_stream.erl,
+	testsuite/Makefile.am, testsuite/Emakefile.in: Renamed test for
+	`exmpp_stream'.
+
+	* src/core/exmpp_factory.erl, src/client/exmpp_client_legacy_auth.erl,
+	src/server/exmpp_server_legacy_auth.erl, src/Makefile.am,
+	src/Emakefile.in, ebin/Makefile.am,
+	testsuite/check_factory_legacy_auth.erl: Moved legacy authentication
+	handling to dedicated modules.
+
+	* testsuite/check_factory_legacy_auth.erl,
+	testsuite/check_legacy_auth.erl, testsuite/Makefile.am,
+	testsuite/Emakefile.in: Renamed test for `exmpp_client_legacy_auth'
+	and `exmpp_server_legacy_auth'.
+
+2007-03-07  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/comp: Renamed `src/comp' to `src/compat'.
+
+	* src/exmpp_factory.erl: Move to `src/core'; some code still needs to
+	be moved in appropriate modules in `src/server' or `src/client'.
+
+	* src/Makefile.am, src/Emakefile.in, ebin/Makefile.am,
+	ebin/exmpp.app.in, testsuite/check_coverity.erl: Updates to take into
+	account new `src' layout.
+
+2007-03-06  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/exmpp_xml.erl: Restore DRIVER_NAME value. Style.
+	(get_cdata): Changed return value of the new function clause to the
+	`false', like related functions.
+
+2007-03-06  Christophe Romain  <christophe.romain@process-one.net>
+
+	* src/exmpp_factory.erl: Add functions to delete a pubsub node.
+
+	* src/*.erl: Reorganize source files in separate subdirectories.
+
+2007-03-05  Mickaël Rémond  <mickael.remond@process-one.net>
+
+	* src/exmpp_xml.erl (get_cdata): Handle a false value. This clause
+	make it possible to write code like:
+	exmpp_xml:get_cdata(exmpp_xml:get_element_by_name(XML_El, body))
+
+2007-03-04  Mickaël Rémond  <mickael.remond@process-one.net>
+
+	* src/exmpp_xml.erl: Added get_element_by_ns/2. This function is
+	useful to extract XMPP error codes (to make sure you are getting the
+	correct tag).
+
+2007-03-02  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* configure.ac: Remove checks for `kernel' and `stdlib' Erlang
+	applications. They're not used at build time.
+
+	* testsuite/test.sh: Fixed IFS variable because the TESTS variable
+	contains Tab characters.
+
+	* c_src/expat_drv.c, c_src/exmpp_expat_drv.c, c_src/Makefile.am,
+	src/exmpp_xml.erl: Renamed Expat port driver to have the `exmpp_'
+	prefix.
+
+2007-03-01  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/exmpp_internals.erl (driver_dirs): Revised port drivers search
+	path. This allows us to remove priv/lib/Makefile hack needed to run
+	the package testsuite.
+
+	* src/exmpp_xml.erl: Use exmpp_internals to load/unload its port
+	driver.
+
+	* configure.ac, Makefile.am: Disconnect priv directory from the build,
+	prior to its removal.
+
+	* priv/: Removed directory, because it's not needed anymore by the
+	testsuite.
+
+	* testsuite/Makefile.am: Do not run `check_xml_parser' and
+	`check_xmlstream' tests if Expat support isn't present.
+
+2007-02-28  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/exmpp_internals.erl, src/exmpp_xml.erl: To avoid conflicts
+	between an installed exmpp and a fresh build during testsuite runs,
+	port drivers are first checked in working subdirectories. However,
+	this is not done in modules from the compat layer (ejabberd_zlib,
+	iconv and tls).
+
+	* m4/zlib.m4: New M4 to check Zlib presence.
+
+	* m4/openssl.m4: New M4 to check OpenSSL presence.
+
+	* m4/expat.m4: Renamed AM_EXPAT to EXMPP_EXPAT to avoid Automake AM
+	namespace pollution.
+
+	* m4/iconv.m4, m4/lib-link.m4, m4/lib-prefix.m4, m4/lib-ld.m4: Rewrote
+	iconv.m4 because the one from gettext seems broken with
+	cross-compilation and win32 environment.
+
+	* configure.ac: Add support for cross-compilation and win32 platform.
+	Updated checks for Expat and libiconv. Added checks for OpenSSL.
+
+	* c_src/Makefile.am: Added more AM_CONDITIONNAL's to enable/disable
+	port drivers one by one. Fixed `tls_drv' dependencies. Added support
+	for win32.
+
+2007-02-21  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/exmpp_jid.erl: Add support for JID comparison.
+
+	* testsuite/check_jid.erl: Add JID comparison testsuite.
+
+	* include/exmpp.hrl, src/exmpp_jid.erl, src/jlib.erl,
+	testsuite/check_jid.erl: Fields of the #jid record were renamed to use
+	the names found in RFC 3920. THIS CHANGE BREAKS API (not ABI).
+
+	* ebin/Makefile.am: Because of a misuse of Automake conditionnals, the
+	`beam_DATA' variable was not correct and the compat modules were never
+	installed nor cleaned.
+
+2007-02-20  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/exmpp_stringprep.erl: Catch up with original `stringprep' level
+	of feature: a function to lowercase strings was added. Add functions
+	if an identifier is a valid node, name or resource.
+
+	* src/stringprep.erl: `stringprep' is now a simple frontend to
+	`exmpp_stringprep'.
+
+	* src/exmpp_jid.erl: Identifiers length are now checked.
+
+	* testsuite/check_jid.erl: Complete testsuite with length checks.
+
+	* src/exmpp_jlib.erl: Drop JID handling functions.
+
+	* src/jlib.erl: Use `exmpp_jid' and `exmpp_stringprep' to treat JIDs.
+
+	* configure.ac: Fixed a bug with --enable-debug option handling.
+	Disable documentation by default, because `xmerl' is broken in Erlang
+	R11B-3.
+
+	* c_src/iconv_erl.c: Fixed a warning with iconv(3): on some platforms,
+	`inbuf' is qualified by `const'. The configure script will check the
+	prototype for us.
+
+2007-02-19  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/exmpp_jid.erl: Reworked JID parsing to handle more error cases.
+	Now, the resource for a bare JID is set to `undefined', not the empty
+	string.
+
+	* testsuite/check_jid.erl: The testsuite for the current state of
+	`exmpp_jid' is complete.
+
+2007-02-15  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/exmpp_stringprep.erl: New frontend for the exmpp_stringprep_drv
+	port driver.
+
+	* src/exmpp_internals.erl: New module which provide low-level
+	functions for port drivers handling.
+
+	* src/exmpp_sup.erl: Supervisor who is responsible for
+	exmpp_stringprep startup.
+
+	* src/exmpp.erl, ebin/exmpp.app.in: This module uses the `application'
+	behaviour now. It starts `exmpp_sup'.
+
+	* src/exmpp_jid.erl: New module which provides functions to manipulate
+	JIDs.
+
+	* src/Emakefile.in, src/Makefile.am, ebin/Makefile.am: Link each new
+	modules to the build.
+
+	* testsuite/check_jid.erl, testsuite/Emakefile.in,
+	testsuite/Makefile.am: Add a first testsuite for `exmpp_jid'.
+
+2007-02-06  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* c_src/uni_data.c, c_src/uni_norm.c, c_src/stringprep_uni_data.h,
+	c_src/stringprep_uni_norm.h: Renamed as real headers.
+
+	* c_src/stringprep_drv.c: Internal name of the driver changed to
+	`exmpp_stringprep_erl'.
+
+	* c_src/exmpp_stringprep_drv.c, c_src/exmpp_stringprep_drv.c,
+	c_src/Makefile.am, src/stringprep.erl, priv/lib/Makefile.am: Prefixed
+	`stringprep_drv' with `exmpp_' to avoid conflicts with ejabberd's own
+	stringprep_drv. This permits exmpp to coexist with ejabberd.
+
+2007-01-09  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* configure.ac: Next branch will be 0.7.
+
+2007-01-09  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* configure.ac: Fixed the name of a variable.
+
+2007-01-04  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* configure.ac: Head is now the future 0.6 branch. Dropped
+	`EXMPP_BUILD_ID'. Debug is disabled by default when
+	`EXMPP_RELEASE_DATE' is set and enabled otherwise. Comments translated
+	in english.
+
+	* include/exmpp.hrl: Add `jabber:iq:privacy', `jabber:iq:roster' and
+	`urn:ietf:params:xml:ns:xmpp-session' namespaces.
+
+	* doc/Makefile.am: Clean stylesheet.css if it was copied at compile
+	time.
+
+	* src/exmpp_factory.erl: Add functions to make common pubsub stanzas.
+
+	* src/exmpp_jlib.erl: Add functions to convert #jid{} to string and
+	the other way around. Style.
+
+	* testsuite/test.sh: Fixed portability issues with sed(1) and head(1).
+
+	* c_src/xmpp_ns.h.in, c_src/xmpp_attrs.h.in, c_src/xmpp_names.h.in:
+	Added pubsub-related namespaces, element names and attribute names.
+
+	* c_src/Makefile.am: Fixed CPPFLAGS for expat_drv (EXPAT_CPPFLAS was
+	missing).
+
+2006-10-30  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* priv/lib/Makefile.am: Copies of stringprep_drv.so,
+	tls_drv.so and iconv_erl.so are useless, because they're not tested by
+	the current testsuite.
+
+	* include/exmpp.hrl: Corrections in comments.
+
+	* src/exmpp_jlib.erl, src/jlib.erl, src/Emakefile.ini,
+	src/Makefile.am: As we did with `exmpp_xml' and `xml', we split
+	`exmpp_jlib' in `exmpp_jlib' and `jlib' to separate the old code with
+	the new one. Because this module didn't received a lot of
+	modifications and testing, we took this opportunity to import the last
+	version of `jlib' from today's ejabberd repository.
+
+	* src/exmpp_xml.erl, configure.ac: Add a compile-time flag to enable a
+	workaround for `erl_ddll' reference count bug.
+
+	* configure.ac, c_src/Makefile.am, ebin/Makefile.am: Add a flag to
+	disable the compatibility modules.
+
+	* ebin/exmpp.app.in, ebin/exmpp.appup.in: Application file and upgrade
+	file update.
+
+	* configure.ac, src/Emakefile.in, ebin/exmpp.app.in: If compatibility
+	modules are disabled, don't build/list them.
+
+2006-10-12  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/exmpp_xml.erl (start_parser): Unload driver if an error occurs
+	with options handling.
+	(stop_parser): Don't catch exceptions with port_close/1; the caller is
+	responsible for catching them if he wants.
+
+2006-10-05  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* configure.ac: Préparation de la release 0.5.3.
+
+	* ebin/exmpp.appup.in: Instructions de mise à jour depuis la version
+	0.5.2.
+
+	* src/exmpp_xml.erl (stop_parser): Avant de décharger la librairie, on
+	vérifie que port_close a fonctionné (en `catch'ant l'exception). Ça
+	évite de trop décrémenter le comptage de référence sur la librairie.
+
+2006-09-28  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* configure.ac: Préparation de la release 0.5.2.
+
+	* c_src/expat_drv.c (current_tree_finished): Correction d'un autre
+	leak du même type que celui du 2006-09-25.
+
+	* ebin/exmpp.app.in: Utilisation de @VERSION@ au lieu de
+	@PACKAGE_VERSION@ pour rester cohérent.
+
+	* ebin/exmpp.appup.in: Utilisation de @VERSION@ au lieu d'une version
+	en dur. Mise à jour pour prendre en compte une upgrade/downgrade entre
+	la version 0.5.2 et la version 0.5.1.
+
+2006-09-26  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/exmpp_xml.erl (reload_driver): Suppression de la fonction, on ne
+	peut pas s'en servir en l'état.
+	(stop_parser): Après le port_close/1, on décharge la librairie.
+
+	* src/exmpp_factory.erl (legacy_auth_request_with_user): Nouvelle
+	fonction pour préciser le nom d'utilisateur dans la requête
+	d'authentification. Correction de l'exportation de la fonction.
+
+2006-09-25  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* configure.ac: Préparation de la release 0.5.1.
+
+	* c_src/expat_drv.c: Ajout d'une commande pour retourner la revision
+	du fichier.
+	(expat_drv_control): Correction d'un memory leak.
+
+	* src/exmpp_xml.erl: Ajout d'une fonction pour récupérer la revision
+	du port driver `expat_drv'.
+
+	* configure.ac, ebin/exmpp.appup, ebin/Makefile.am: Ajout du fichier
+	de mise à jour.
+
+2006-09-11  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	Release 0.5.0.
+
+	* configure.ac: Mise à jour de la version.
+
+2006-09-11  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* m4/expat.m4: Corrections de bug dans les flags passés au compilateur
+	si l'utilisateur précise --with-expat=DIR.
+
+2006-09-07  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* ebin/charon.app.in: On ajoute $Id$ pour l'id de l'application.
+
+2006-09-04  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	Release 0.4.7.
+
+	* src/exmpp_factory.erl: Correction de la documentation.
+
+	* src/exmpp_xml.erl (load_driver): Correction d'un bug avec le
+	chargement de la librairie. En fait, il faut charger la librairie
+	autant de fois que open_port est appelé car erl_ddll maintient un
+	comptage de référence. C'est pour cette raison qu'avec les version
+	précédentes de `exmpp_xml', tous les parsers instanciés étaient
+	détruits avec le premier appel à `stop_parser'.
+
+	* c_src/expat_drv.c (expat_drv_stop): Le `return' final est
+	complètement inutile.
+	(expat_drv_control): En cas de commande inconnue, on retourne `{error,
+	badarg}' au lieu de `badarg'.
+
+2006-08-31  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	Release 0.4.6.
+
+	* include/exmpp.hrl: Ajout du namespace utilisé pour les erreurs au
+	niveau stream.
+
+	* src/exmpp_factory.erl (stream_error): Nouvelle fonction pour générer
+	les erreurs au niveau stream.
+
+2006-08-29  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	Release 0.4.5.
+
+	* configure.ac: Ajout de flags de compilation Erlang pour avoir un
+	maximum de warnings.
+
+	* src/xml.erl: Correction de la documenation pour que les fonctions
+	obsolètes pointent vers `exmpp_xml'.
+	(get_cdata, remove_cdata): Rajout de deux fonctions qui avaient été
+	supprimées avec la séparation `exmpp_xml'/`xml'.
+
+	* src/exmpp_xml.erl: Correction de la documentation.
+	(replace_child): Nouvelle fonction pour remplacer le fils d'un élément
+	XML.
+	(xmlnselement_to_xmlelement, xmlnsattributes_to_xmlattributes2):
+	Correction de plusieurs warnings.
+
+	* ebin/exmpp.app.in: Mise à jour de la liste des modules ; il manquait
+	`xml'.
+
+2006-08-16  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	Release 0.4.4.
+
+	* include/exmpp.hrl, src/exmpp_xml.erl (document_fragment_to_list):
+	Support rudimentaire des Processing Instructions pour permettre à
+	l'appelant de générer `<?xml version='1.0' ?>' par exemple.
+
+	* include/exmpp.hrl: Ajout des namespaces pour les demandes de
+	compression, de TLS et de SASL.
+
+	* src/exmpp_factory.erl: Ajout de fonctions pour générer des stanzas
+	de négociations de TLS et de la compression.
+
+	* src/exmpp_xml.erl (xmlelement_to_xmlnselement,
+	xmlelement_to_xmlnselement_and_ns_tables): Ajout de fonctions pour
+	convertir les anciens tuples vers les nouveaux formats.
+	(xmlnselement_to_xmlelement): Correction d'un bug où le cas d'un
+	namespace sous forme de chaîne de caractères (au lieu d'atome) n'était
+	pas géré.
+
+	* src/exmpp.erl, src/iconv.erl, src/ejabberd_zlib.erl, src/tls.erl,
+	src/exmpp_xml.erl, src/stringprep.erl: On supprime la fonction
+	exmpp:app/0 qui n'a pas de sens et on utilise le nom `exmpp' en dur.
+	Ça permet l'utilisation d'exmpp dans une application, c'est magique.
+
+	* ebin/Makefile.am: Le fichier d'application `exmpp.app' n'était pas
+	installé, c'est corrigé.
+
+	* ebin/exmpp.app.in: Correction d'une erreur de syntaxe. Ajout des
+	modules manquants à la liste.
+
+2006-08-04  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	Release 0.4.3.
+
+	* src/ejabberd_zlib.erl, c_src/ejabberd_zlib_drv.c, configure.ac,
+	src/Makefile.am, c_src/Makefile.am, ebin/Makefile.am: Import du module
+	ejabberd_zlib d'ejabberd.
+
+	* configure.ac: La gestion de relase empruntait encore le nom de
+	libcalimero.
+
+	* src/exmpp_xmlstream.erl: Corrections de la documentation.
+
+	* testsuite/check_coverity.erl: On n'inclut pas exmpp.hrl.
+
+	* testsuite/Makefile.am: style(9).
+
+2006-07-19  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	Release 0.4.2.
+
+	* src/exmpp_xmlstream.erl: Correction de la documentation qui faisait
+	encore référence à l'option `rootdepth' du parser XML (au lieu de
+	`root_depth').
+	(parse, process_elements, process_elements2, send_events): On gère un
+	nouveau callback `none' qui indique que l'appeleur de parse/2 veut
+	récupérer le résultat directement (au lieu de l'envoyer à un autre
+	process/une autre fonction). La documentation est mise à jour en
+	conséquence.
+
+	* src/exmpp_xml.erl: New parser option `no_root_depth' to force the
+	parser to make an xmlnselement() for each tag.
+	(parser_document_fragment): New function to parse an incomplete
+	document; this takes advantage of the new `no_root_depth' option.
+
+	* testsuite/check_xmlstream.erl: Updated to test the `no_callback'
+	callback.
+
+	* testsuite/Makefile.am: Added check_xmlstrea.erl to the EXTRA_DIST
+	list.
+
+	* c_src/expat_drv.c: Updated to handle the new `no_root_depth' parser
+	option.
+
+2006-07-13  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	Release 0.4.1.
+
+	* src/exmpp_factory.erl: Wrote user guide.
+
+	* src/exmpp_jlib.erl (exchange_attrs_from_and_to_in_list,
+	rename_attr_to_to_from_in_list): Fixed a bug where those functions
+	were still calling `exmpp_xml:set_attribute_from_list' which has been
+	renamed since.
+
+	* testsuite/test/sh: Small change on coverity reports stylesheet.
+
+	* doc/stylesheet.css: Changed completly the documentation graphical
+	aspect.
+
+2006-07-12  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* include/exmpp.hrl: For #xmlstreamstart and #xmlstreamend record,
+	members are now #xmlnselement, #xmlelement, #xmlnsendelement or
+	#xmlendelement.
+
+	* configure.ac: Completly remove compatibility layer options.
+
+	* src/exmpp_xml.erl, src/xml.erl: Moved pathcomponentold()
+	documentation stub to `xml'.
+
+	* src/exmpp_xmlstream.erl: Updated #xmlstreamstart and #xmlstreamend
+	usage (members have changed).
+	(send_event/2): Callbacks of type `process' or `gen_fsm' won't return
+	an error code, remove this support.
+
+	* c_src/expat_drv.c (expat_drv_end_element): Support for prefix and
+	name as atom was never implemented for end elements; it's now done.
+
+	* testsuite/check_coverity.erl: Completly remove compatibility layer
+	options.
+	(print_coverage): Generate a plain text output, not an HTML one. Also,
+	use real newline characters in display, because testsuite/test.sh was
+	fixed.
+
+	* testsuite/Emakefile.in, testsuite/Makefile.am,
+	testsuite/check_xmlstream.erl: Added a new test for
+	`exmpp_xmlstream'.
+
+	* testsuite/test.sh: Fixed command execution to not strip newline
+	characters. Special treatment for `check_coverity' output was thus
+	removed. Added a small function to convert plain text files produced
+	by `check_coverity' in HTML files.
+
+	* testsuite/check_xml_parser.erl: Fixed a testcase, now that
+	c_src/expat_drv.c handles end element correctly.
+
+	* testsuite/testsuite.erl: Print error report with Erlang to have
+	output wrapped correctly.
+
+2006-07-11  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/exmpp_xml.erl, src/xml.erl, src/Makefile.am, src/Emakefile.in,
+	ebin/Makefile.am: Moved compatibility layer from `exmpp_xml' to
+	`xml'.
+
+	* src/xml.erl (crypt/1): Updated to reflect the original behaviour
+	with binaries (it returns a list).
+
+	* src/exmpp_xml.erl (encode_entities/1): Small optimization with
+	binaries (removed a binary_to_list/1).
+
+	* testsuite/check_xml_converters.erl: Added tests for
+	encode_enities/1 and clear_endelement_tuples/1.
+
+2006-07-10  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	Release 0.4.0.
+
+	* include/exmpp.hrl: Renamed `NS_XMPP_STANZA' to `NS_XMPP_STANZAS'.
+
+	* src/exmpp_factory.erl: Typos.
+	(legacy_auth_request/2, legacy_auth_password/4,
+	legacy_auth_password_digest/4): New functions to allow the caller to
+	provide its own id.
+	(legacy_auth_password, legacy_auth_password_digest): Added the
+	`type' attribute.
+	(legacy_auth_success): Set the element's children to the empty string.
+	Fixed the namespace.
+	(legacy_auth_failure): Fixed the namespace.
+
+	* src/exmpp_xml.erl: Use the ?NS_XML macro (defined in
+	include/exmpp.hrl) instead of a hard-coded URL.
+
+	* c_src/xmpp_names.h.in: Added the `jabber:iq:auth' namespace
+	elements.
+
+	* testsuite/check_factory_stream.erl: New testsuite for the module
+	exmpp_factory, only for the <stream> handling part.
+
+	* testsuite/check_factory_legacy_auth: New testsuite for the module
+	exmpp_factory, only for the legacy auth part.
+
+	* testsuite/check_xml_*.erl: Use the ?NS_XML macro (defined in
+	include/exmpp.hrl) instead of a hard-coded URL.
+
+	* doc/Makefile.am: Added files to CLEANFILES variable.
+
+2006-07-10  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* include/exmpp.hrl: By default, element's children are now
+	`undefined', not an empty list anymore.
+
+	* src/exmpp_xmlstream.erl: style(9).
+
+	* src/exmpp_jlib.erl: New helpers to handle common attribute
+	operations. Almost every existing functions will be deprecated by new
+	functions like those.
+
+	* src/exmpp_xml.erl: Fixed some function names. Added functions
+	`set_attributes/2', `append_children/2' and `set_children/2' to do
+	massive modifications in one call. Added functions
+	`has_attribute_in_list/2,3' and `has_attribute/2,3' to tests the
+	existence of an attribute. Added `normalize_cdata_in_list/1' and
+	`normalize_cdata/1' to clean character data. Added
+	`set_cdata_in_list/2' and `set_cdata/2' to change character data.
+	Updated documentation about the use of `undefined' for element's
+	children. Fixed a few other syntax issues with the documentation.
+	(parse_document): Simplified function clauses to avoid code
+	duplication.
+	(xmlnsattributes_to_xmlattributes2): Fixed a bug when an attribute
+	namespace is `undefined'.
+	(document_fragment_to_list): If element's children are `undefined', do
+	not close the tag.
+
+	* c_src/Makefile.am: Fixed EXTRA_DIST for contrib/.
+
+	* c_src/xmpp_ns.h.in: New namespace: `jabber:iq:auth'.
+
+	* c_src/expat_drc.c: By default, element's children are now
+	`undefined', not an empty list anymore.
+
+	* ebin/Makefile.am, src/Makefile.am, src/Emakefile.in,
+	src/exmpp_factory.erl: New module; it provides a toolbox to build
+	common stanzas.
+
+	* testsuite/Makefile.am: Coverity check for `exmpp_factory'.
+
+	* testsuite/check_xml_attribute_handlers.erl,
+	testsuite/check_xml_element_handlers.erl,
+	testsuite/check_xml_converters.erl, testsuite/check_xml_parser.erl,
+	testsuite/check_xml_cdata_handlers.erl: Updated with new function
+	names and new test cases.
+
+	* configure.ac, Makefile.am, doc/Makefile.am: Build documentation.
+
+	* configure.ac, src/exmpp_xml.erl: Don't use the WITH_DEPRECATED_API
+	preprocessor flag to avoid headaches with edoc.
+
+2006-07-04  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/exmpp_xml.erl, c_src/expat_drv.c: Before namespaces, element
+	names and attributes names are encoded as atom(), they're now checked
+	against a list of known values. If they're not recognized, they're
+	encoded as string(). Those checks can be disabled at runtime.
+
+	* src/exmpp_xml.erl (parse_document/1, parse_document/2): New
+	functions to parse a document at once.
+
+	* src/exmpp_xmlstream.erl (parse_element/1, parse_element/2): These
+	functions now use exmpp_xml:parse_document().
+
+	* c_src/xmpp_{ns,names,attrs}.h.in: New files that contains a list
+	of known namespaces, element names and attributes names, respectively.
+
+	* c_src/xmpp_{ns,names,attrs}.h.awk: Awk script to convert the lists
+	to C headers.
+
+2006-07-03  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* src/exmpp_xml.erl (start_parser/1, handle_options/2): Error sent
+	back by the port driver were ignored, it's now corrected.
+
+	* c_src/contrib/hashtable.h, c_src/contrib/hashtable_private.h,
+	c_src/hashtable.c: Imported an hashtable implementation which is used
+	by the Expat port driver.
+
+	* c_src/Makefile.am: Add hashtable sources to the Expat port driver.
+
+	* c_src/expat_drv.c: Namespace prefixes are now stored in an hash
+	table and set correctly in xmlnselement tuples.
+	(expat_drv_control): Fixed a bug where the return value of
+	create_parser() was not checked correctly.
+
+	* testsuite/check_xml_parser.erl: Updated to handle namespace prefix
+	support in the port driver. Also simplified each test cases.
+
+2006-06-29  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	* configure.ac: Fixed a bug with $EMKOPTS handling.
+	Removed two debugging messages. Fixed a typo with `debug_info'.
+
+	* src/exmpp_xml.erl: The function get_path_s/2 wasn't exported; also
+	it now handles old path component format.
+	(remove_attribute_from_list): Rewritten this completly broken
+	function.
+	(xmlnselement_to_xmlelement): Now handle properly default and prefixed
+	namespaces for elements and attributes.
+	(xmlnselement_to_xmlelement): Support for name as atom() was not
+	present in the old format, so convert them as string. Fixed a bug when
+	an element doesn't have any namespace.
+	(xmlnsattributes_to_xmlattributes2): Support for name as atom() was
+	not present in the old format, so convert them as string.
+
+	* src/iconv.erl, src/stringprep.erl: Fixed Erlang warnings.
+
+	* testsuite/: More complete testsuite, with coverage checking.
+
+	* testsuite/check_xml_converters.erl: Renamed from
+	check_xml_serializer.erl to add other tests than just
+	serialization.
+
+	* ebin/Makefile.am, testsuite/Makefile.am: Every built files were not
+	cleaned properly; fixed.
+
+2006-06-28  Jean-Sébastien Pédron  <js.pedron@meetic-corp.com>
+
+	The whole project uses the Autotools now.
+
+	* include/exmpp.hrl: Add a prefix member to xmlnselement record. Add
+	an xmlattr record to handle attribute (with namespace support).
+
+	* src/exmpp_xml.erl: New API (more consistent) with better namespace
+	support (even for attributes). There's a compatibility layer for the
+	old API, which can be enabled by defining WITH_DEPRECATED_API at
+	compile time.
+
+	* c_src/expat_drv.c: Improve namespace support, especially for
+	attributes. Add an option to put element and attribute name as
+	atom().
+
+	* c_src/tls_drv.c (tls_drv_control): Fixed a warning about different
+	types in an affectation.
+
+	* testsuite/: Add a testsuite.
diff -r d551623afde5 deps/exmpp/Makefile
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/Makefile	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,694 @@
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
+# Makefile.  Generated from Makefile.in by configure.
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+
+srcdir = .
+top_srcdir = .
+
+pkgdatadir = $(datadir)/exmpp
+pkglibdir = $(libdir)/exmpp
+pkgincludedir = $(includedir)/exmpp
+top_builddir = .
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = /usr/bin/install -c
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = i686-pc-linux-gnu
+host_triplet = i686-pc-linux-gnu
+target_triplet = i686-pc-linux-gnu
+#am__append_1 = examples
+#am__append_2 = doc
+am__append_3 = testsuite
+DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
+	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
+	$(top_srcdir)/configure ac-aux/compile ac-aux/config.guess \
+	ac-aux/config.sub ac-aux/depcomp ac-aux/install-sh \
+	ac-aux/ltmain.sh ac-aux/missing
+subdir = .
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_compare_version.m4 \
+	$(top_srcdir)/m4/colored-echo.m4 $(top_srcdir)/m4/erlang.m4 \
+	$(top_srcdir)/m4/expat.m4 $(top_srcdir)/m4/openssl.m4 \
+	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/zlib.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
+ configure.lineno configure.status.lineno
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = config.h
+CONFIG_CLEAN_FILES =
+SOURCES =
+DIST_SOURCES =
+RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
+	html-recursive info-recursive install-data-recursive \
+	install-exec-recursive install-info-recursive \
+	install-recursive installcheck-recursive installdirs-recursive \
+	pdf-recursive ps-recursive uninstall-info-recursive \
+	uninstall-recursive
+ETAGS = etags
+CTAGS = ctags
+DIST_SUBDIRS = c_src include src examples ebin doc testsuite
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+top_distdir = $(distdir)
+am__remove_distdir = \
+  { test ! -d $(distdir) \
+    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
+         && rm -fr $(distdir); }; }
+DIST_ARCHIVES = $(distdir).tar.gz
+GZIP_ENV = --best
+distuninstallcheck_listfiles = find . -type f -print
+distcleancheck_listfiles = find . -type f -print
+ACLOCAL = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run aclocal-1.9
+AMDEP_FALSE = #
+AMDEP_TRUE = 
+AMTAR = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run tar
+AR = ar
+AUTOCONF = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run autoconf
+AUTOHEADER = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run autoheader
+AUTOMAKE = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run automake-1.9
+AWK = mawk
+BUILD_COMPAT_FALSE = 
+BUILD_COMPAT_TRUE = #
+CC = gcc -std=gnu99
+CCDEPMODE = depmode=gcc3
+CFLAGS = -g -O2 -Wall -Werror
+COMPAT_MODULES = %
+COMPAT_MODULES_START =  % Compatibility modules disabled:
+CPP = gcc -std=gnu99 -E
+CPPFLAGS = 
+CXXCPP = 
+CYGPATH_W = echo
+DEFS = -DHAVE_CONFIG_H
+DEPDIR = .deps
+ECHO = echo
+ECHO_C = 
+ECHO_N = -n
+ECHO_T = 
+EGREP = /bin/grep -E
+EMKOPTS = debug_info, {d, debug}, report_warnings, {warn_format, 1}, warn_export_vars, warn_shadow_vars, warn_unused_import, {d, 'HAVE_EXPAT'}, {d, 'HAVE_LIBXML2'}, {d, 'HAVE_OPENSSL'}, {d, 'HAVE_ZLIB'}
+ENABLE_DOCUMENTATION_FALSE = 
+ENABLE_DOCUMENTATION_TRUE = #
+ENABLE_EXAMPLES_FALSE = 
+ENABLE_EXAMPLES_TRUE = #
+ENABLE_SMP_SUPPORT_FALSE = #
+ENABLE_SMP_SUPPORT_TRUE = 
+ENABLE_TESTSUITE_FALSE = #
+ENABLE_TESTSUITE_TRUE = 
+ERL = /usr/bin/erl
+ERLANG_ERTS_DIR = /usr/lib/erlang/erts-5.7.2
+ERLANG_ERTS_VER = 5.7.2
+ERLANG_INSTALL_LIB_DIR = /usr/lib/erlang/lib
+ERLANG_INSTALL_LIB_DIR_exmpp = ${ERLANG_INSTALL_LIB_DIR}/exmpp-${VERSION}
+ERLANG_LIB_DIR = /usr/lib/erlang/lib
+ERLANG_LIB_DIR_erl_interface = /usr/lib/erlang/lib/erl_interface-3.6.2
+ERLANG_LIB_DIR_eunit = 
+ERLANG_LIB_VER_erl_interface = 3.6.2
+ERLANG_LIB_VER_eunit = 
+ERLANG_RELEASE = R13B01
+ERLANG_ROOT_DIR = /usr/lib/erlang
+ERLC = /usr/bin/erlc
+ERLCFLAGS = 
+ERL_DRIVER_LDFLAGS = 
+ESCRIPT = /usr/bin/escript
+EXEEXT = 
+EXMPP_BUILD_ARCH = 
+EXMPP_DISTSUFFIX = -r903
+EXMPP_HOST_ARCH = 
+EXMPP_RELEASE_DATE = 
+EXMPP_SVNREV = 903
+EXPAT_CPPFLAGS = 
+EXPAT_LDFLAGS = 
+EXPAT_LIBS = -lexpat
+GREP = /bin/grep
+INSTALL_DATA = ${INSTALL} -m 644
+INSTALL_PROGRAM = ${INSTALL}
+INSTALL_SCRIPT = ${INSTALL}
+INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
+LDFLAGS = 
+LIBOBJS = 
+LIBS = 
+LIBTOOL = $(SHELL) $(top_builddir)/libtool
+LIBXML2_CFLAGS = -I/usr/include/libxml2  
+LIBXML2_LIBS = -lxml2  
+LN_S = ln -s
+LTLIBOBJS = 
+MAKEINFO = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run makeinfo
+OBJEXT = o
+OPENSSL_CPPFLAGS = 
+OPENSSL_LDFLAGS = 
+OPENSSL_LIBS = -lssl -lcrypto
+PACKAGE = exmpp
+PACKAGE_BUGREPORT = js.pedron@meetic-corp.com
+PACKAGE_NAME = exmpp
+PACKAGE_STRING = exmpp 0.9.2
+PACKAGE_TARNAME = exmpp
+PACKAGE_VERSION = 0.9.2
+PATH_SEPARATOR = :
+PKG_CONFIG = /usr/bin/pkg-config
+RANLIB = ranlib
+SED = /bin/sed
+SET_MAKE = 
+SHELL = /bin/bash
+STRIP = strip
+VERSION = 0.9.2
+WITH_EXPAT_FALSE = #
+WITH_EXPAT_TRUE = 
+WITH_LIBXML2_FALSE = #
+WITH_LIBXML2_TRUE = 
+WITH_OPENSSL_FALSE = #
+WITH_OPENSSL_TRUE = 
+WITH_ZLIB_FALSE = #
+WITH_ZLIB_TRUE = 
+ZLIB_CPPFLAGS = 
+ZLIB_LDFLAGS = 
+ZLIB_LIBS = -lz
+ac_ct_CC = gcc
+am__fastdepCC_FALSE = #
+am__fastdepCC_TRUE = 
+am__include = include
+am__leading_dot = .
+am__quote = 
+am__tar = ${AMTAR} chof - "$$tardir"
+am__untar = ${AMTAR} xf -
+bindir = ${exec_prefix}/bin
+build = i686-pc-linux-gnu
+build_alias = 
+build_cpu = i686
+build_os = linux-gnu
+build_vendor = pc
+datadir = ${datarootdir}
+datarootdir = ${prefix}/share
+docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
+dvidir = ${docdir}
+exec_prefix = ${prefix}
+exp_ERLANG_INSTALL_LIB_DIR_exmpp = /usr/lib/erlang/lib/exmpp-0.9.2
+host = i686-pc-linux-gnu
+host_alias = 
+host_cpu = i686
+host_os = linux-gnu
+host_vendor = pc
+htmldir = ${docdir}
+includedir = ${prefix}/include
+infodir = ${datarootdir}/info
+install_sh = /home/arjan/devel/zotonic/deps/exmpp/ac-aux/install-sh
+libdir = ${exec_prefix}/lib
+libexecdir = ${exec_prefix}/libexec
+localedir = ${datarootdir}/locale
+localstatedir = ${prefix}/var
+mandir = ${datarootdir}/man
+mkdir_p = mkdir -p --
+oldincludedir = /usr/include
+pdfdir = ${docdir}
+prefix = /usr/local
+program_transform_name = s,x,x,
+psdir = ${docdir}
+sbindir = ${exec_prefix}/sbin
+sharedstatedir = ${prefix}/com
+sysconfdir = ${prefix}/etc
+target = i686-pc-linux-gnu
+target_alias = 
+target_cpu = i686
+target_os = linux-gnu
+target_vendor = pc
+ACLOCAL_FLAGS = -I m4
+ACLOCAL_AMFLAGS = -I m4
+SUBDIRS = c_src include src $(am__append_1) ebin $(am__append_2) \
+	$(am__append_3)
+EXTRA_DIST = SVNREV ChangeLog
+distdir = $(PACKAGE)-$(VERSION)$(EXMPP_DISTSUFFIX)
+LASTSVNREVCHANGELOG = 810
+all: config.h
+	$(MAKE) $(AM_MAKEFLAGS) all-recursive
+
+.SUFFIXES:
+am--refresh:
+	@:
+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign '; \
+	      cd $(srcdir) && $(AUTOMAKE) --foreign  \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --foreign  Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    echo ' $(SHELL) ./config.status'; \
+	    $(SHELL) ./config.status;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	$(SHELL) ./config.status --recheck
+
+$(top_srcdir)/configure:  $(am__configure_deps)
+	cd $(srcdir) && $(AUTOCONF)
+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
+	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
+
+config.h: stamp-h1
+	@if test ! -f $@; then \
+	  rm -f stamp-h1; \
+	  $(MAKE) stamp-h1; \
+	else :; fi
+
+stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
+	@rm -f stamp-h1
+	cd $(top_builddir) && $(SHELL) ./config.status config.h
+$(srcdir)/config.h.in:  $(am__configure_deps) 
+	cd $(top_srcdir) && $(AUTOHEADER)
+	rm -f stamp-h1
+	touch $@
+
+distclean-hdr:
+	-rm -f config.h stamp-h1
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+distclean-libtool:
+	-rm -f libtool
+uninstall-info-am:
+
+# This directory's subdirectories are mostly independent; you can cd
+# into them and run `make' without going through this Makefile.
+# To change the values of `make' variables: instead of editing Makefiles,
+# (1) if the variable is set in `config.status', edit `config.status'
+#     (which will cause the Makefiles to be regenerated when you run `make');
+# (2) otherwise, pass the desired values on the `make' command line.
+$(RECURSIVE_TARGETS):
+	@failcom='exit 1'; \
+	for f in x $$MAKEFLAGS; do \
+	  case $$f in \
+	    *=* | --[!k]*);; \
+	    *k*) failcom='fail=yes';; \
+	  esac; \
+	done; \
+	dot_seen=no; \
+	target=`echo $@ | sed s/-recursive//`; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    dot_seen=yes; \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	  || eval $$failcom; \
+	done; \
+	if test "$$dot_seen" = "no"; then \
+	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
+	fi; test -z "$$fail"
+
+mostlyclean-recursive clean-recursive distclean-recursive \
+maintainer-clean-recursive:
+	@failcom='exit 1'; \
+	for f in x $$MAKEFLAGS; do \
+	  case $$f in \
+	    *=* | --[!k]*);; \
+	    *k*) failcom='fail=yes';; \
+	  esac; \
+	done; \
+	dot_seen=no; \
+	case "$@" in \
+	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
+	  *) list='$(SUBDIRS)' ;; \
+	esac; \
+	rev=''; for subdir in $$list; do \
+	  if test "$$subdir" = "."; then :; else \
+	    rev="$$subdir $$rev"; \
+	  fi; \
+	done; \
+	rev="$$rev ."; \
+	target=`echo $@ | sed s/-recursive//`; \
+	for subdir in $$rev; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	  || eval $$failcom; \
+	done && test -z "$$fail"
+tags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
+	done
+ctags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
+	done
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS: tags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
+	  include_option=--etags-include; \
+	  empty_fix=.; \
+	else \
+	  include_option=--include; \
+	  empty_fix=; \
+	fi; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test ! -f $$subdir/TAGS || \
+	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
+	  fi; \
+	done; \
+	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
+	  test -n "$$unique" || unique=$$empty_fix; \
+	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	    $$tags $$unique; \
+	fi
+ctags: CTAGS
+CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	$(am__remove_distdir)
+	mkdir $(distdir)
+	$(mkdir_p) $(distdir)/ac-aux $(distdir)/ebin $(distdir)/examples $(distdir)/m4 $(distdir)/src $(distdir)/testsuite
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test -d "$(distdir)/$$subdir" \
+	    || $(mkdir_p) "$(distdir)/$$subdir" \
+	    || exit 1; \
+	    distdir=`$(am__cd) $(distdir) && pwd`; \
+	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
+	    (cd $$subdir && \
+	      $(MAKE) $(AM_MAKEFLAGS) \
+	        top_distdir="$$top_distdir" \
+	        distdir="$$distdir/$$subdir" \
+	        distdir) \
+	      || exit 1; \
+	  fi; \
+	done
+	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
+	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
+	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
+	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
+	|| chmod -R a+r $(distdir)
+dist-gzip: distdir
+	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
+	$(am__remove_distdir)
+
+dist-bzip2: distdir
+	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
+	$(am__remove_distdir)
+
+dist-tarZ: distdir
+	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
+	$(am__remove_distdir)
+
+dist-shar: distdir
+	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
+	$(am__remove_distdir)
+
+dist-zip: distdir
+	-rm -f $(distdir).zip
+	zip -rq $(distdir).zip $(distdir)
+	$(am__remove_distdir)
+
+dist dist-all: distdir
+	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
+	$(am__remove_distdir)
+
+# This target untars the dist file and tries a VPATH configuration.  Then
+# it guarantees that the distribution is self-contained by making another
+# tarfile.
+distcheck: dist
+	case '$(DIST_ARCHIVES)' in \
+	*.tar.gz*) \
+	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
+	*.tar.bz2*) \
+	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
+	*.tar.Z*) \
+	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
+	*.shar.gz*) \
+	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
+	*.zip*) \
+	  unzip $(distdir).zip ;;\
+	esac
+	chmod -R a-w $(distdir); chmod a+w $(distdir)
+	mkdir $(distdir)/_build
+	mkdir $(distdir)/_inst
+	chmod a-w $(distdir)
+	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
+	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
+	  && cd $(distdir)/_build \
+	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
+	    $(DISTCHECK_CONFIGURE_FLAGS) \
+	  && $(MAKE) $(AM_MAKEFLAGS) \
+	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
+	  && $(MAKE) $(AM_MAKEFLAGS) check \
+	  && $(MAKE) $(AM_MAKEFLAGS) install \
+	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
+	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
+	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
+	        distuninstallcheck \
+	  && chmod -R a-w "$$dc_install_base" \
+	  && ({ \
+	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
+	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
+	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
+	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
+	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
+	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
+	  && rm -rf "$$dc_destdir" \
+	  && $(MAKE) $(AM_MAKEFLAGS) dist \
+	  && rm -rf $(DIST_ARCHIVES) \
+	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
+	$(am__remove_distdir)
+	@(echo "$(distdir) archives ready for distribution: "; \
+	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
+	  sed -e '1{h;s/./=/g;p;x;}' -e '$${p;x;}'
+distuninstallcheck:
+	@cd $(distuninstallcheck_dir) \
+	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
+	   || { echo "ERROR: files left after uninstall:" ; \
+	        if test -n "$(DESTDIR)"; then \
+	          echo "  (check DESTDIR support)"; \
+	        fi ; \
+	        $(distuninstallcheck_listfiles) ; \
+	        exit 1; } >&2
+distcleancheck: distclean
+	@if test '$(srcdir)' = . ; then \
+	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
+	  exit 1 ; \
+	fi
+	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
+	  || { echo "ERROR: files left in build directory after distclean:" ; \
+	       $(distcleancheck_listfiles) ; \
+	       exit 1; } >&2
+check-am: all-am
+check: check-recursive
+all-am: Makefile config.h
+installdirs: installdirs-recursive
+installdirs-am:
+install: install-recursive
+install-exec: install-exec-recursive
+install-data: install-data-recursive
+uninstall: uninstall-recursive
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-recursive
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-recursive
+
+clean-am: clean-generic clean-libtool mostlyclean-am
+
+distclean: distclean-recursive
+	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-hdr \
+	distclean-libtool distclean-tags
+
+dvi: dvi-recursive
+
+dvi-am:
+
+html: html-recursive
+
+info: info-recursive
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-recursive
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-recursive
+	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
+	-rm -rf $(top_srcdir)/autom4te.cache
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-recursive
+
+mostlyclean-am: mostlyclean-generic mostlyclean-libtool
+
+pdf: pdf-recursive
+
+pdf-am:
+
+ps: ps-recursive
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+uninstall-info: uninstall-info-recursive
+
+.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am am--refresh check \
+	check-am clean clean-generic clean-libtool clean-recursive \
+	ctags ctags-recursive dist dist-all dist-bzip2 dist-gzip \
+	dist-shar dist-tarZ dist-zip distcheck distclean \
+	distclean-generic distclean-hdr distclean-libtool \
+	distclean-recursive distclean-tags distcleancheck distdir \
+	distuninstallcheck dvi dvi-am html html-am info info-am \
+	install install-am install-data install-data-am install-exec \
+	install-exec-am install-info install-info-am install-man \
+	install-strip installcheck installcheck-am installdirs \
+	installdirs-am maintainer-clean maintainer-clean-generic \
+	maintainer-clean-recursive mostlyclean mostlyclean-generic \
+	mostlyclean-libtool mostlyclean-recursive pdf pdf-am ps ps-am \
+	tags tags-recursive uninstall uninstall-am uninstall-info-am
+
+
+check-junit: all
+	cd testsuite && $(MAKE) $(AM_MAKEFLAGS) $@ || exit 1
+#check-junit:
+
+updateknown:
+	cd c_src && $(MAKE) $(AM_MAKEFLAGS) $@ || exit 1
+
+.PHONY: check-junit updateknown
+changelog:
+	svn up -r $(LASTSVNREVCHANGELOG) ChangeLog
+	mv ChangeLog ChangeLog.old
+	svn2cl -r BASE:$(LASTSVNREVCHANGELOG) -o ChangeLog --group-by-day \
+	    --separate-daylogs --break-before-msg --reparagraph .
+	cat ChangeLog.old >> ChangeLog
+	rm ChangeLog.old
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff -r d551623afde5 deps/exmpp/Makefile.am
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/Makefile.am	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,42 @@
+ACLOCAL_FLAGS = -I m4
+ACLOCAL_AMFLAGS = -I m4
+
+SUBDIRS = c_src include src
+
+if ENABLE_EXAMPLES
+SUBDIRS += examples
+endif
+
+SUBDIRS += ebin
+
+if ENABLE_DOCUMENTATION
+SUBDIRS += doc
+endif
+
+if ENABLE_TESTSUITE
+SUBDIRS += testsuite
+endif
+
+EXTRA_DIST = SVNREV ChangeLog
+distdir = $(PACKAGE)-$(VERSION)$(EXMPP_DISTSUFFIX)
+
+if ENABLE_TESTSUITE
+check-junit: all
+	cd testsuite && $(MAKE) $(AM_MAKEFLAGS) $@ || exit 1
+else
+check-junit:
+endif
+
+updateknown:
+	cd c_src && $(MAKE) $(AM_MAKEFLAGS) $@ || exit 1
+
+.PHONY: check-junit updateknown
+
+LASTSVNREVCHANGELOG = 810
+changelog:
+	svn up -r $(LASTSVNREVCHANGELOG) ChangeLog
+	mv ChangeLog ChangeLog.old
+	svn2cl -r BASE:$(LASTSVNREVCHANGELOG) -o ChangeLog --group-by-day \
+	    --separate-daylogs --break-before-msg --reparagraph .
+	cat ChangeLog.old >> ChangeLog
+	rm ChangeLog.old
diff -r d551623afde5 deps/exmpp/Makefile.in
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/Makefile.in	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,694 @@
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = .
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = @build@
+host_triplet = @host@
+target_triplet = @target@
+@ENABLE_EXAMPLES_TRUE@am__append_1 = examples
+@ENABLE_DOCUMENTATION_TRUE@am__append_2 = doc
+@ENABLE_TESTSUITE_TRUE@am__append_3 = testsuite
+DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
+	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
+	$(top_srcdir)/configure ac-aux/compile ac-aux/config.guess \
+	ac-aux/config.sub ac-aux/depcomp ac-aux/install-sh \
+	ac-aux/ltmain.sh ac-aux/missing
+subdir = .
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_compare_version.m4 \
+	$(top_srcdir)/m4/colored-echo.m4 $(top_srcdir)/m4/erlang.m4 \
+	$(top_srcdir)/m4/expat.m4 $(top_srcdir)/m4/openssl.m4 \
+	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/zlib.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
+ configure.lineno configure.status.lineno
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = config.h
+CONFIG_CLEAN_FILES =
+SOURCES =
+DIST_SOURCES =
+RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
+	html-recursive info-recursive install-data-recursive \
+	install-exec-recursive install-info-recursive \
+	install-recursive installcheck-recursive installdirs-recursive \
+	pdf-recursive ps-recursive uninstall-info-recursive \
+	uninstall-recursive
+ETAGS = etags
+CTAGS = ctags
+DIST_SUBDIRS = c_src include src examples ebin doc testsuite
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+top_distdir = $(distdir)
+am__remove_distdir = \
+  { test ! -d $(distdir) \
+    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
+         && rm -fr $(distdir); }; }
+DIST_ARCHIVES = $(distdir).tar.gz
+GZIP_ENV = --best
+distuninstallcheck_listfiles = find . -type f -print
+distcleancheck_listfiles = find . -type f -print
+ACLOCAL = @ACLOCAL@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BUILD_COMPAT_FALSE = @BUILD_COMPAT_FALSE@
+BUILD_COMPAT_TRUE = @BUILD_COMPAT_TRUE@
+CC = @CC@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+COMPAT_MODULES = @COMPAT_MODULES@
+COMPAT_MODULES_START = @COMPAT_MODULES_START@
+CPP = @CPP@
+CPPFLAGS = @CPPFLAGS@
+CXXCPP = @CXXCPP@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+ECHO = @ECHO@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EGREP = @EGREP@
+EMKOPTS = @EMKOPTS@
+ENABLE_DOCUMENTATION_FALSE = @ENABLE_DOCUMENTATION_FALSE@
+ENABLE_DOCUMENTATION_TRUE = @ENABLE_DOCUMENTATION_TRUE@
+ENABLE_EXAMPLES_FALSE = @ENABLE_EXAMPLES_FALSE@
+ENABLE_EXAMPLES_TRUE = @ENABLE_EXAMPLES_TRUE@
+ENABLE_SMP_SUPPORT_FALSE = @ENABLE_SMP_SUPPORT_FALSE@
+ENABLE_SMP_SUPPORT_TRUE = @ENABLE_SMP_SUPPORT_TRUE@
+ENABLE_TESTSUITE_FALSE = @ENABLE_TESTSUITE_FALSE@
+ENABLE_TESTSUITE_TRUE = @ENABLE_TESTSUITE_TRUE@
+ERL = @ERL@
+ERLANG_ERTS_DIR = @ERLANG_ERTS_DIR@
+ERLANG_ERTS_VER = @ERLANG_ERTS_VER@
+ERLANG_INSTALL_LIB_DIR = @ERLANG_INSTALL_LIB_DIR@
+ERLANG_INSTALL_LIB_DIR_exmpp = @ERLANG_INSTALL_LIB_DIR_exmpp@
+ERLANG_LIB_DIR = @ERLANG_LIB_DIR@
+ERLANG_LIB_DIR_erl_interface = @ERLANG_LIB_DIR_erl_interface@
+ERLANG_LIB_DIR_eunit = @ERLANG_LIB_DIR_eunit@
+ERLANG_LIB_VER_erl_interface = @ERLANG_LIB_VER_erl_interface@
+ERLANG_LIB_VER_eunit = @ERLANG_LIB_VER_eunit@
+ERLANG_RELEASE = @ERLANG_RELEASE@
+ERLANG_ROOT_DIR = @ERLANG_ROOT_DIR@
+ERLC = @ERLC@
+ERLCFLAGS = @ERLCFLAGS@
+ERL_DRIVER_LDFLAGS = @ERL_DRIVER_LDFLAGS@
+ESCRIPT = @ESCRIPT@
+EXEEXT = @EXEEXT@
+EXMPP_BUILD_ARCH = @EXMPP_BUILD_ARCH@
+EXMPP_DISTSUFFIX = @EXMPP_DISTSUFFIX@
+EXMPP_HOST_ARCH = @EXMPP_HOST_ARCH@
+EXMPP_RELEASE_DATE = @EXMPP_RELEASE_DATE@
+EXMPP_SVNREV = @EXMPP_SVNREV@
+EXPAT_CPPFLAGS = @EXPAT_CPPFLAGS@
+EXPAT_LDFLAGS = @EXPAT_LDFLAGS@
+EXPAT_LIBS = @EXPAT_LIBS@
+GREP = @GREP@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LIBTOOL = @LIBTOOL@
+LIBXML2_CFLAGS = @LIBXML2_CFLAGS@
+LIBXML2_LIBS = @LIBXML2_LIBS@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAKEINFO = @MAKEINFO@
+OBJEXT = @OBJEXT@
+OPENSSL_CPPFLAGS = @OPENSSL_CPPFLAGS@
+OPENSSL_LDFLAGS = @OPENSSL_LDFLAGS@
+OPENSSL_LIBS = @OPENSSL_LIBS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+PKG_CONFIG = @PKG_CONFIG@
+RANLIB = @RANLIB@
+SED = @SED@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+WITH_EXPAT_FALSE = @WITH_EXPAT_FALSE@
+WITH_EXPAT_TRUE = @WITH_EXPAT_TRUE@
+WITH_LIBXML2_FALSE = @WITH_LIBXML2_FALSE@
+WITH_LIBXML2_TRUE = @WITH_LIBXML2_TRUE@
+WITH_OPENSSL_FALSE = @WITH_OPENSSL_FALSE@
+WITH_OPENSSL_TRUE = @WITH_OPENSSL_TRUE@
+WITH_ZLIB_FALSE = @WITH_ZLIB_FALSE@
+WITH_ZLIB_TRUE = @WITH_ZLIB_TRUE@
+ZLIB_CPPFLAGS = @ZLIB_CPPFLAGS@
+ZLIB_LDFLAGS = @ZLIB_LDFLAGS@
+ZLIB_LIBS = @ZLIB_LIBS@
+ac_ct_CC = @ac_ct_CC@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+am__tar = @am__tar@
+am__untar = @am__untar@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+datarootdir = @datarootdir@
+docdir = @docdir@
+dvidir = @dvidir@
+exec_prefix = @exec_prefix@
+exp_ERLANG_INSTALL_LIB_DIR_exmpp = @exp_ERLANG_INSTALL_LIB_DIR_exmpp@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+htmldir = @htmldir@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localedir = @localedir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+pdfdir = @pdfdir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+psdir = @psdir@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target = @target@
+target_alias = @target_alias@
+target_cpu = @target_cpu@
+target_os = @target_os@
+target_vendor = @target_vendor@
+ACLOCAL_FLAGS = -I m4
+ACLOCAL_AMFLAGS = -I m4
+SUBDIRS = c_src include src $(am__append_1) ebin $(am__append_2) \
+	$(am__append_3)
+EXTRA_DIST = SVNREV ChangeLog
+distdir = $(PACKAGE)-$(VERSION)$(EXMPP_DISTSUFFIX)
+LASTSVNREVCHANGELOG = 810
+all: config.h
+	$(MAKE) $(AM_MAKEFLAGS) all-recursive
+
+.SUFFIXES:
+am--refresh:
+	@:
+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign '; \
+	      cd $(srcdir) && $(AUTOMAKE) --foreign  \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --foreign  Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    echo ' $(SHELL) ./config.status'; \
+	    $(SHELL) ./config.status;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	$(SHELL) ./config.status --recheck
+
+$(top_srcdir)/configure:  $(am__configure_deps)
+	cd $(srcdir) && $(AUTOCONF)
+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
+	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
+
+config.h: stamp-h1
+	@if test ! -f $@; then \
+	  rm -f stamp-h1; \
+	  $(MAKE) stamp-h1; \
+	else :; fi
+
+stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
+	@rm -f stamp-h1
+	cd $(top_builddir) && $(SHELL) ./config.status config.h
+$(srcdir)/config.h.in:  $(am__configure_deps) 
+	cd $(top_srcdir) && $(AUTOHEADER)
+	rm -f stamp-h1
+	touch $@
+
+distclean-hdr:
+	-rm -f config.h stamp-h1
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+distclean-libtool:
+	-rm -f libtool
+uninstall-info-am:
+
+# This directory's subdirectories are mostly independent; you can cd
+# into them and run `make' without going through this Makefile.
+# To change the values of `make' variables: instead of editing Makefiles,
+# (1) if the variable is set in `config.status', edit `config.status'
+#     (which will cause the Makefiles to be regenerated when you run `make');
+# (2) otherwise, pass the desired values on the `make' command line.
+$(RECURSIVE_TARGETS):
+	@failcom='exit 1'; \
+	for f in x $$MAKEFLAGS; do \
+	  case $$f in \
+	    *=* | --[!k]*);; \
+	    *k*) failcom='fail=yes';; \
+	  esac; \
+	done; \
+	dot_seen=no; \
+	target=`echo $@ | sed s/-recursive//`; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    dot_seen=yes; \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	  || eval $$failcom; \
+	done; \
+	if test "$$dot_seen" = "no"; then \
+	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
+	fi; test -z "$$fail"
+
+mostlyclean-recursive clean-recursive distclean-recursive \
+maintainer-clean-recursive:
+	@failcom='exit 1'; \
+	for f in x $$MAKEFLAGS; do \
+	  case $$f in \
+	    *=* | --[!k]*);; \
+	    *k*) failcom='fail=yes';; \
+	  esac; \
+	done; \
+	dot_seen=no; \
+	case "$@" in \
+	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
+	  *) list='$(SUBDIRS)' ;; \
+	esac; \
+	rev=''; for subdir in $$list; do \
+	  if test "$$subdir" = "."; then :; else \
+	    rev="$$subdir $$rev"; \
+	  fi; \
+	done; \
+	rev="$$rev ."; \
+	target=`echo $@ | sed s/-recursive//`; \
+	for subdir in $$rev; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	  || eval $$failcom; \
+	done && test -z "$$fail"
+tags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
+	done
+ctags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
+	done
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS: tags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
+	  include_option=--etags-include; \
+	  empty_fix=.; \
+	else \
+	  include_option=--include; \
+	  empty_fix=; \
+	fi; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test ! -f $$subdir/TAGS || \
+	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
+	  fi; \
+	done; \
+	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
+	  test -n "$$unique" || unique=$$empty_fix; \
+	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	    $$tags $$unique; \
+	fi
+ctags: CTAGS
+CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	$(am__remove_distdir)
+	mkdir $(distdir)
+	$(mkdir_p) $(distdir)/ac-aux $(distdir)/ebin $(distdir)/examples $(distdir)/m4 $(distdir)/src $(distdir)/testsuite
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test -d "$(distdir)/$$subdir" \
+	    || $(mkdir_p) "$(distdir)/$$subdir" \
+	    || exit 1; \
+	    distdir=`$(am__cd) $(distdir) && pwd`; \
+	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
+	    (cd $$subdir && \
+	      $(MAKE) $(AM_MAKEFLAGS) \
+	        top_distdir="$$top_distdir" \
+	        distdir="$$distdir/$$subdir" \
+	        distdir) \
+	      || exit 1; \
+	  fi; \
+	done
+	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
+	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
+	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
+	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
+	|| chmod -R a+r $(distdir)
+dist-gzip: distdir
+	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
+	$(am__remove_distdir)
+
+dist-bzip2: distdir
+	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
+	$(am__remove_distdir)
+
+dist-tarZ: distdir
+	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
+	$(am__remove_distdir)
+
+dist-shar: distdir
+	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
+	$(am__remove_distdir)
+
+dist-zip: distdir
+	-rm -f $(distdir).zip
+	zip -rq $(distdir).zip $(distdir)
+	$(am__remove_distdir)
+
+dist dist-all: distdir
+	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
+	$(am__remove_distdir)
+
+# This target untars the dist file and tries a VPATH configuration.  Then
+# it guarantees that the distribution is self-contained by making another
+# tarfile.
+distcheck: dist
+	case '$(DIST_ARCHIVES)' in \
+	*.tar.gz*) \
+	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
+	*.tar.bz2*) \
+	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
+	*.tar.Z*) \
+	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
+	*.shar.gz*) \
+	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
+	*.zip*) \
+	  unzip $(distdir).zip ;;\
+	esac
+	chmod -R a-w $(distdir); chmod a+w $(distdir)
+	mkdir $(distdir)/_build
+	mkdir $(distdir)/_inst
+	chmod a-w $(distdir)
+	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
+	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
+	  && cd $(distdir)/_build \
+	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
+	    $(DISTCHECK_CONFIGURE_FLAGS) \
+	  && $(MAKE) $(AM_MAKEFLAGS) \
+	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
+	  && $(MAKE) $(AM_MAKEFLAGS) check \
+	  && $(MAKE) $(AM_MAKEFLAGS) install \
+	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
+	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
+	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
+	        distuninstallcheck \
+	  && chmod -R a-w "$$dc_install_base" \
+	  && ({ \
+	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
+	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
+	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
+	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
+	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
+	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
+	  && rm -rf "$$dc_destdir" \
+	  && $(MAKE) $(AM_MAKEFLAGS) dist \
+	  && rm -rf $(DIST_ARCHIVES) \
+	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
+	$(am__remove_distdir)
+	@(echo "$(distdir) archives ready for distribution: "; \
+	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
+	  sed -e '1{h;s/./=/g;p;x;}' -e '$${p;x;}'
+distuninstallcheck:
+	@cd $(distuninstallcheck_dir) \
+	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
+	   || { echo "ERROR: files left after uninstall:" ; \
+	        if test -n "$(DESTDIR)"; then \
+	          echo "  (check DESTDIR support)"; \
+	        fi ; \
+	        $(distuninstallcheck_listfiles) ; \
+	        exit 1; } >&2
+distcleancheck: distclean
+	@if test '$(srcdir)' = . ; then \
+	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
+	  exit 1 ; \
+	fi
+	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
+	  || { echo "ERROR: files left in build directory after distclean:" ; \
+	       $(distcleancheck_listfiles) ; \
+	       exit 1; } >&2
+check-am: all-am
+check: check-recursive
+all-am: Makefile config.h
+installdirs: installdirs-recursive
+installdirs-am:
+install: install-recursive
+install-exec: install-exec-recursive
+install-data: install-data-recursive
+uninstall: uninstall-recursive
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-recursive
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-recursive
+
+clean-am: clean-generic clean-libtool mostlyclean-am
+
+distclean: distclean-recursive
+	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-hdr \
+	distclean-libtool distclean-tags
+
+dvi: dvi-recursive
+
+dvi-am:
+
+html: html-recursive
+
+info: info-recursive
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-recursive
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-recursive
+	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
+	-rm -rf $(top_srcdir)/autom4te.cache
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-recursive
+
+mostlyclean-am: mostlyclean-generic mostlyclean-libtool
+
+pdf: pdf-recursive
+
+pdf-am:
+
+ps: ps-recursive
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+uninstall-info: uninstall-info-recursive
+
+.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am am--refresh check \
+	check-am clean clean-generic clean-libtool clean-recursive \
+	ctags ctags-recursive dist dist-all dist-bzip2 dist-gzip \
+	dist-shar dist-tarZ dist-zip distcheck distclean \
+	distclean-generic distclean-hdr distclean-libtool \
+	distclean-recursive distclean-tags distcleancheck distdir \
+	distuninstallcheck dvi dvi-am html html-am info info-am \
+	install install-am install-data install-data-am install-exec \
+	install-exec-am install-info install-info-am install-man \
+	install-strip installcheck installcheck-am installdirs \
+	installdirs-am maintainer-clean maintainer-clean-generic \
+	maintainer-clean-recursive mostlyclean mostlyclean-generic \
+	mostlyclean-libtool mostlyclean-recursive pdf pdf-am ps ps-am \
+	tags tags-recursive uninstall uninstall-am uninstall-info-am
+
+
+@ENABLE_TESTSUITE_TRUE@check-junit: all
+@ENABLE_TESTSUITE_TRUE@	cd testsuite && $(MAKE) $(AM_MAKEFLAGS) $@ || exit 1
+@ENABLE_TESTSUITE_FALSE@check-junit:
+
+updateknown:
+	cd c_src && $(MAKE) $(AM_MAKEFLAGS) $@ || exit 1
+
+.PHONY: check-junit updateknown
+changelog:
+	svn up -r $(LASTSVNREVCHANGELOG) ChangeLog
+	mv ChangeLog ChangeLog.old
+	svn2cl -r BASE:$(LASTSVNREVCHANGELOG) -o ChangeLog --group-by-day \
+	    --separate-daylogs --break-before-msg --reparagraph .
+	cat ChangeLog.old >> ChangeLog
+	rm ChangeLog.old
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff -r d551623afde5 deps/exmpp/README
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/README	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,152 @@
+Exmpp is an Erlang application which provides the modules to ease the
+development of an XMPP/Jabber server or client.
+
+== Table of contents ==
+
+    I. How to build and install
+        1. Requirements
+        2. Build and install
+        3. Building examples
+        4. Using an alternate Erlang environment
+        5. Using another C compiler
+        6. Creating Autotools files
+
+I. How to build and install
+===========================
+
+1. Requirements
+---------------
+
+    o  Erlang/OTP (REQUIRED)
+       A full Erlang environment is recommended but only ERTS and
+       erl_interface are required.
+           . Minimum version:           R12B
+
+    o  C compiler (REQUIRED)
+       Exmpp contains Erlang port drivers which are written in C.
+       Tested C compilers include:
+           . GNU Compiler Collection (gcc)
+           . Intel C++ Compiler (icc)
+           . GCC frontend for LLVM (llvm-gcc)
+           . Microsoft Visual C++ (cl)
+       C compilers known not to work:
+           . clang frontend for LLVM (ccc)
+
+    o  XML parsing library (REQUIRED)
+       Tested libraries are:
+           . Expat: recommended. Tested: 2.0.1
+           . LibXML2: only experimental support.
+
+    o  OpenSSL (optional)
+       It's the only TLS engine supported for now.
+           . Tested version:            0.9.8e
+
+    o  zlib (optional)
+       It's the only compression engine supported for now.
+           . Tested version:            1.2.3
+
+    o  eunit (optional)
+       To be able to use the testsuite, this Erlang application is required.
+           . Tested version:            2.0
+
+2. Build and install
+--------------------
+
+Exmpp uses the Autotools. Therefore the process is quite common:
+
+    $ ./configure
+    $ make
+    $ sudo make install
+
+Building outside of the source directory is supported:
+
+    $ mkdir exmpp-build
+    $ cd exmpp-build
+    exmpp-build$ /path/to/exmpp-src/configure
+    exmpp-build$ make
+    exmpp-build$ sudo make install
+
+By default, Exmpp is installed in Erlang lib directory. You may select
+another directory with the --prefix argument to the configure script:
+
+    $ ./configure --prefix=/install/exmpp/here
+
+Exmpp will be installed in "/install/exmpp/here/exmpp-$VERSION".
+
+3. Building examples
+--------------------
+
+You can find example code in the "examples" directory.
+
+These modules may be built for you with the --enable-examples configure
+argument:
+
+    $ ./configure --enable-examples
+
+For now, they're not installed.
+
+4. Using an alternate Erlang environment
+----------------------------------------
+
+If Erlang cannot be found by the configure script of if you prefer to
+use a specific Erlang environment, you may indicate an alternate Erlang
+root directory with the --with-erlang argument:
+
+    $ ./configure --with-erlang=/path/to/alternate/erlang
+
+Another way is to set the following configure variables:
+
+    $ ./configure ERL=/path/to/bin/erl ERLC=/path/to/bin/ERLC \
+      ESCRIPT=/path/to/bin/escript
+
+5. Using another C compiler
+---------------------------
+
+You may specify another C compiler to use at configure time. For
+instance, to use GCC frontend for LLVM:
+
+    $ ./configure CC=llvm-gcc
+    $ make
+
+6. Creating Autotools files
+---------------------------
+
+If you work on a Subversion checkout, you'll have to generate some files
+such as the configure script and Makefile.in. For this, you'll have to
+install the following autotools:
+    o  autoconf 2.60 or higher (read below for 2.62 and 2.63)
+    o  automake 1.9 or later
+    o  libtool 1.5 or later
+
+To generate the files, run:
+
+    $ autoreconf -vif
+
+After that, you can use the standard procedure:
+
+    $ ./configure
+    $ make
+
+WARNING: Erlang support in old autoconf 2.62 and 2.63 was broken! If you
+must stick to these versions, you must apply the following patch to
+'erlang.m4' in 'share/autoconf-2.62/autoconf' (patch taken from official
+autoconf GIT repository):
+
+----8<----
+--- erlang.m4-broken	2009-01-14 17:54:41.000000000 +0100
++++ erlang.m4	2009-01-14 16:51:57.000000000 +0100
+@@ -124,7 +124,7 @@
+ m4_define([AC_LANG(Erlang)],
+ [ac_ext=erl
+ ac_compile='$ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&AS_MESSAGE_LOG_FD'
+-ac_link='$ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&AS_MESSAGE_LOG_FD ; echo "#!/bin/sh" > conftest$ac_exeext ; AS_ECHO(["\"$ERL\" -run conftest start -run init stop -noshell"]) >> conftest$ac_exeext ; chmod +x conftest$ac_exeext'
++ac_link='$ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&AS_MESSAGE_LOG_FD ; echo "[#]!/bin/sh" > conftest$ac_exeext ; AS_ECHO(["\"$ERL\" -run conftest start -run init stop -noshell"]) >> conftest$ac_exeext ; chmod +x conftest$ac_exeext'
+ ])
+ 
+ 
+----8<----
+
+After applying the patch, you must run the following commands:
+
+    $ cd [...]/share/autoconf-2.62/autoconf
+    $ autom4te --language=autoconf --freeze --output=autoconf.m4f
diff -r d551623afde5 deps/exmpp/SVNREV
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/SVNREV	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,1 @@
+903
diff -r d551623afde5 deps/exmpp/ac-aux/compile
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/ac-aux/compile	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,142 @@
+#! /bin/sh
+# Wrapper for compilers which do not understand `-c -o'.
+
+scriptversion=2005-05-14.22
+
+# Copyright (C) 1999, 2000, 2003, 2004, 2005 Free Software Foundation, Inc.
+# Written by Tom Tromey <tromey@cygnus.com>.
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2, or (at your option)
+# any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+# This file is maintained in Automake, please report
+# bugs to <bug-automake@gnu.org> or send patches to
+# <automake-patches@gnu.org>.
+
+case $1 in
+  '')
+     echo "$0: No command.  Try \`$0 --help' for more information." 1>&2
+     exit 1;
+     ;;
+  -h | --h*)
+    cat <<\EOF
+Usage: compile [--help] [--version] PROGRAM [ARGS]
+
+Wrapper for compilers which do not understand `-c -o'.
+Remove `-o dest.o' from ARGS, run PROGRAM with the remaining
+arguments, and rename the output as expected.
+
+If you are trying to build a whole package this is not the
+right script to run: please start by reading the file `INSTALL'.
+
+Report bugs to <bug-automake@gnu.org>.
+EOF
+    exit $?
+    ;;
+  -v | --v*)
+    echo "compile $scriptversion"
+    exit $?
+    ;;
+esac
+
+ofile=
+cfile=
+eat=
+
+for arg
+do
+  if test -n "$eat"; then
+    eat=
+  else
+    case $1 in
+      -o)
+	# configure might choose to run compile as `compile cc -o foo foo.c'.
+	# So we strip `-o arg' only if arg is an object.
+	eat=1
+	case $2 in
+	  *.o | *.obj)
+	    ofile=$2
+	    ;;
+	  *)
+	    set x "$@" -o "$2"
+	    shift
+	    ;;
+	esac
+	;;
+      *.c)
+	cfile=$1
+	set x "$@" "$1"
+	shift
+	;;
+      *)
+	set x "$@" "$1"
+	shift
+	;;
+    esac
+  fi
+  shift
+done
+
+if test -z "$ofile" || test -z "$cfile"; then
+  # If no `-o' option was seen then we might have been invoked from a
+  # pattern rule where we don't need one.  That is ok -- this is a
+  # normal compilation that the losing compiler can handle.  If no
+  # `.c' file was seen then we are probably linking.  That is also
+  # ok.
+  exec "$@"
+fi
+
+# Name of file we expect compiler to create.
+cofile=`echo "$cfile" | sed -e 's|^.*/||' -e 's/\.c$/.o/'`
+
+# Create the lock directory.
+# Note: use `[/.-]' here to ensure that we don't use the same name
+# that we are using for the .o file.  Also, base the name on the expected
+# object file name, since that is what matters with a parallel build.
+lockdir=`echo "$cofile" | sed -e 's|[/.-]|_|g'`.d
+while true; do
+  if mkdir "$lockdir" >/dev/null 2>&1; then
+    break
+  fi
+  sleep 1
+done
+# FIXME: race condition here if user kills between mkdir and trap.
+trap "rmdir '$lockdir'; exit 1" 1 2 15
+
+# Run the compile.
+"$@"
+ret=$?
+
+if test -f "$cofile"; then
+  mv "$cofile" "$ofile"
+elif test -f "${cofile}bj"; then
+  mv "${cofile}bj" "$ofile"
+fi
+
+rmdir "$lockdir"
+exit $ret
+
+# Local Variables:
+# mode: shell-script
+# sh-indentation: 2
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "scriptversion="
+# time-stamp-format: "%:y-%02m-%02d.%02H"
+# time-stamp-end: "$"
+# End:
diff -r d551623afde5 deps/exmpp/ac-aux/config.guess
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/ac-aux/config.guess	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,1500 @@
+#! /bin/sh
+# Attempt to guess a canonical system name.
+#   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
+#   2000, 2001, 2002, 2003, 2004, 2005, 2006 Free Software Foundation,
+#   Inc.
+
+timestamp='2006-07-02'
+
+# This file is free software; you can redistribute it and/or modify it
+# under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA
+# 02110-1301, USA.
+#
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+
+# Originally written by Per Bothner <per@bothner.com>.
+# Please send patches to <config-patches@gnu.org>.  Submit a context
+# diff and a properly formatted ChangeLog entry.
+#
+# This script attempts to guess a canonical system name similar to
+# config.sub.  If it succeeds, it prints the system name on stdout, and
+# exits with 0.  Otherwise, it exits with 1.
+#
+# The plan is that this can be called by configure scripts if you
+# don't specify an explicit build system type.
+
+me=`echo "$0" | sed -e 's,.*/,,'`
+
+usage="\
+Usage: $0 [OPTION]
+
+Output the configuration name of the system \`$me' is run on.
+
+Operation modes:
+  -h, --help         print this help, then exit
+  -t, --time-stamp   print date of last modification, then exit
+  -v, --version      print version number, then exit
+
+Report bugs and patches to <config-patches@gnu.org>."
+
+version="\
+GNU config.guess ($timestamp)
+
+Originally written by Per Bothner.
+Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005
+Free Software Foundation, Inc.
+
+This is free software; see the source for copying conditions.  There is NO
+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
+
+help="
+Try \`$me --help' for more information."
+
+# Parse command line
+while test $# -gt 0 ; do
+  case $1 in
+    --time-stamp | --time* | -t )
+       echo "$timestamp" ; exit ;;
+    --version | -v )
+       echo "$version" ; exit ;;
+    --help | --h* | -h )
+       echo "$usage"; exit ;;
+    -- )     # Stop option processing
+       shift; break ;;
+    - )	# Use stdin as input.
+       break ;;
+    -* )
+       echo "$me: invalid option $1$help" >&2
+       exit 1 ;;
+    * )
+       break ;;
+  esac
+done
+
+if test $# != 0; then
+  echo "$me: too many arguments$help" >&2
+  exit 1
+fi
+
+trap 'exit 1' 1 2 15
+
+# CC_FOR_BUILD -- compiler used by this script. Note that the use of a
+# compiler to aid in system detection is discouraged as it requires
+# temporary files to be created and, as you can see below, it is a
+# headache to deal with in a portable fashion.
+
+# Historically, `CC_FOR_BUILD' used to be named `HOST_CC'. We still
+# use `HOST_CC' if defined, but it is deprecated.
+
+# Portable tmp directory creation inspired by the Autoconf team.
+
+set_cc_for_build='
+trap "exitcode=\$?; (rm -f \$tmpfiles 2>/dev/null; rmdir \$tmp 2>/dev/null) && exit \$exitcode" 0 ;
+trap "rm -f \$tmpfiles 2>/dev/null; rmdir \$tmp 2>/dev/null; exit 1" 1 2 13 15 ;
+: ${TMPDIR=/tmp} ;
+ { tmp=`(umask 077 && mktemp -d "$TMPDIR/cgXXXXXX") 2>/dev/null` && test -n "$tmp" && test -d "$tmp" ; } ||
+ { test -n "$RANDOM" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir $tmp) ; } ||
+ { tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir $tmp) && echo "Warning: creating insecure temp directory" >&2 ; } ||
+ { echo "$me: cannot create a temporary directory in $TMPDIR" >&2 ; exit 1 ; } ;
+dummy=$tmp/dummy ;
+tmpfiles="$dummy.c $dummy.o $dummy.rel $dummy" ;
+case $CC_FOR_BUILD,$HOST_CC,$CC in
+ ,,)    echo "int x;" > $dummy.c ;
+	for c in cc gcc c89 c99 ; do
+	  if ($c -c -o $dummy.o $dummy.c) >/dev/null 2>&1 ; then
+	     CC_FOR_BUILD="$c"; break ;
+	  fi ;
+	done ;
+	if test x"$CC_FOR_BUILD" = x ; then
+	  CC_FOR_BUILD=no_compiler_found ;
+	fi
+	;;
+ ,,*)   CC_FOR_BUILD=$CC ;;
+ ,*,*)  CC_FOR_BUILD=$HOST_CC ;;
+esac ; set_cc_for_build= ;'
+
+# This is needed to find uname on a Pyramid OSx when run in the BSD universe.
+# (ghazi@noc.rutgers.edu 1994-08-24)
+if (test -f /.attbin/uname) >/dev/null 2>&1 ; then
+	PATH=$PATH:/.attbin ; export PATH
+fi
+
+UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown
+UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown
+UNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown
+UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown
+
+# Note: order is significant - the case branches are not exclusive.
+
+case "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" in
+    *:NetBSD:*:*)
+	# NetBSD (nbsd) targets should (where applicable) match one or
+	# more of the tupples: *-*-netbsdelf*, *-*-netbsdaout*,
+	# *-*-netbsdecoff* and *-*-netbsd*.  For targets that recently
+	# switched to ELF, *-*-netbsd* would select the old
+	# object file format.  This provides both forward
+	# compatibility and a consistent mechanism for selecting the
+	# object file format.
+	#
+	# Note: NetBSD doesn't particularly care about the vendor
+	# portion of the name.  We always set it to "unknown".
+	sysctl="sysctl -n hw.machine_arch"
+	UNAME_MACHINE_ARCH=`(/sbin/$sysctl 2>/dev/null || \
+	    /usr/sbin/$sysctl 2>/dev/null || echo unknown)`
+	case "${UNAME_MACHINE_ARCH}" in
+	    armeb) machine=armeb-unknown ;;
+	    arm*) machine=arm-unknown ;;
+	    sh3el) machine=shl-unknown ;;
+	    sh3eb) machine=sh-unknown ;;
+	    *) machine=${UNAME_MACHINE_ARCH}-unknown ;;
+	esac
+	# The Operating System including object format, if it has switched
+	# to ELF recently, or will in the future.
+	case "${UNAME_MACHINE_ARCH}" in
+	    arm*|i386|m68k|ns32k|sh3*|sparc|vax)
+		eval $set_cc_for_build
+		if echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \
+			| grep __ELF__ >/dev/null
+		then
+		    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).
+		    # Return netbsd for either.  FIX?
+		    os=netbsd
+		else
+		    os=netbsdelf
+		fi
+		;;
+	    *)
+	        os=netbsd
+		;;
+	esac
+	# The OS release
+	# Debian GNU/NetBSD machines have a different userland, and
+	# thus, need a distinct triplet. However, they do not need
+	# kernel version information, so it can be replaced with a
+	# suitable tag, in the style of linux-gnu.
+	case "${UNAME_VERSION}" in
+	    Debian*)
+		release='-gnu'
+		;;
+	    *)
+		release=`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\./'`
+		;;
+	esac
+	# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:
+	# contains redundant information, the shorter form:
+	# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.
+	echo "${machine}-${os}${release}"
+	exit ;;
+    *:OpenBSD:*:*)
+	UNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`
+	echo ${UNAME_MACHINE_ARCH}-unknown-openbsd${UNAME_RELEASE}
+	exit ;;
+    *:ekkoBSD:*:*)
+	echo ${UNAME_MACHINE}-unknown-ekkobsd${UNAME_RELEASE}
+	exit ;;
+    *:SolidBSD:*:*)
+	echo ${UNAME_MACHINE}-unknown-solidbsd${UNAME_RELEASE}
+	exit ;;
+    macppc:MirBSD:*:*)
+	echo powerpc-unknown-mirbsd${UNAME_RELEASE}
+	exit ;;
+    *:MirBSD:*:*)
+	echo ${UNAME_MACHINE}-unknown-mirbsd${UNAME_RELEASE}
+	exit ;;
+    alpha:OSF1:*:*)
+	case $UNAME_RELEASE in
+	*4.0)
+		UNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`
+		;;
+	*5.*)
+	        UNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`
+		;;
+	esac
+	# According to Compaq, /usr/sbin/psrinfo has been available on
+	# OSF/1 and Tru64 systems produced since 1995.  I hope that
+	# covers most systems running today.  This code pipes the CPU
+	# types through head -n 1, so we only detect the type of CPU 0.
+	ALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \(.*\) processor.*$/\1/p' | head -n 1`
+	case "$ALPHA_CPU_TYPE" in
+	    "EV4 (21064)")
+		UNAME_MACHINE="alpha" ;;
+	    "EV4.5 (21064)")
+		UNAME_MACHINE="alpha" ;;
+	    "LCA4 (21066/21068)")
+		UNAME_MACHINE="alpha" ;;
+	    "EV5 (21164)")
+		UNAME_MACHINE="alphaev5" ;;
+	    "EV5.6 (21164A)")
+		UNAME_MACHINE="alphaev56" ;;
+	    "EV5.6 (21164PC)")
+		UNAME_MACHINE="alphapca56" ;;
+	    "EV5.7 (21164PC)")
+		UNAME_MACHINE="alphapca57" ;;
+	    "EV6 (21264)")
+		UNAME_MACHINE="alphaev6" ;;
+	    "EV6.7 (21264A)")
+		UNAME_MACHINE="alphaev67" ;;
+	    "EV6.8CB (21264C)")
+		UNAME_MACHINE="alphaev68" ;;
+	    "EV6.8AL (21264B)")
+		UNAME_MACHINE="alphaev68" ;;
+	    "EV6.8CX (21264D)")
+		UNAME_MACHINE="alphaev68" ;;
+	    "EV6.9A (21264/EV69A)")
+		UNAME_MACHINE="alphaev69" ;;
+	    "EV7 (21364)")
+		UNAME_MACHINE="alphaev7" ;;
+	    "EV7.9 (21364A)")
+		UNAME_MACHINE="alphaev79" ;;
+	esac
+	# A Pn.n version is a patched version.
+	# A Vn.n version is a released version.
+	# A Tn.n version is a released field test version.
+	# A Xn.n version is an unreleased experimental baselevel.
+	# 1.2 uses "1.2" for uname -r.
+	echo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[PVTX]//' | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`
+	exit ;;
+    Alpha\ *:Windows_NT*:*)
+	# How do we know it's Interix rather than the generic POSIX subsystem?
+	# Should we change UNAME_MACHINE based on the output of uname instead
+	# of the specific Alpha model?
+	echo alpha-pc-interix
+	exit ;;
+    21064:Windows_NT:50:3)
+	echo alpha-dec-winnt3.5
+	exit ;;
+    Amiga*:UNIX_System_V:4.0:*)
+	echo m68k-unknown-sysv4
+	exit ;;
+    *:[Aa]miga[Oo][Ss]:*:*)
+	echo ${UNAME_MACHINE}-unknown-amigaos
+	exit ;;
+    *:[Mm]orph[Oo][Ss]:*:*)
+	echo ${UNAME_MACHINE}-unknown-morphos
+	exit ;;
+    *:OS/390:*:*)
+	echo i370-ibm-openedition
+	exit ;;
+    *:z/VM:*:*)
+	echo s390-ibm-zvmoe
+	exit ;;
+    *:OS400:*:*)
+        echo powerpc-ibm-os400
+	exit ;;
+    arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)
+	echo arm-acorn-riscix${UNAME_RELEASE}
+	exit ;;
+    arm:riscos:*:*|arm:RISCOS:*:*)
+	echo arm-unknown-riscos
+	exit ;;
+    SR2?01:HI-UX/MPP:*:* | SR8000:HI-UX/MPP:*:*)
+	echo hppa1.1-hitachi-hiuxmpp
+	exit ;;
+    Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)
+	# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.
+	if test "`(/bin/universe) 2>/dev/null`" = att ; then
+		echo pyramid-pyramid-sysv3
+	else
+		echo pyramid-pyramid-bsd
+	fi
+	exit ;;
+    NILE*:*:*:dcosx)
+	echo pyramid-pyramid-svr4
+	exit ;;
+    DRS?6000:unix:4.0:6*)
+	echo sparc-icl-nx6
+	exit ;;
+    DRS?6000:UNIX_SV:4.2*:7* | DRS?6000:isis:4.2*:7*)
+	case `/usr/bin/uname -p` in
+	    sparc) echo sparc-icl-nx7; exit ;;
+	esac ;;
+    sun4H:SunOS:5.*:*)
+	echo sparc-hal-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit ;;
+    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)
+	echo sparc-sun-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit ;;
+    i86pc:SunOS:5.*:*)
+	echo i386-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit ;;
+    sun4*:SunOS:6*:*)
+	# According to config.sub, this is the proper way to canonicalize
+	# SunOS6.  Hard to guess exactly what SunOS6 will be like, but
+	# it's likely to be more like Solaris than SunOS4.
+	echo sparc-sun-solaris3`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit ;;
+    sun4*:SunOS:*:*)
+	case "`/usr/bin/arch -k`" in
+	    Series*|S4*)
+		UNAME_RELEASE=`uname -v`
+		;;
+	esac
+	# Japanese Language versions have a version number like `4.1.3-JL'.
+	echo sparc-sun-sunos`echo ${UNAME_RELEASE}|sed -e 's/-/_/'`
+	exit ;;
+    sun3*:SunOS:*:*)
+	echo m68k-sun-sunos${UNAME_RELEASE}
+	exit ;;
+    sun*:*:4.2BSD:*)
+	UNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`
+	test "x${UNAME_RELEASE}" = "x" && UNAME_RELEASE=3
+	case "`/bin/arch`" in
+	    sun3)
+		echo m68k-sun-sunos${UNAME_RELEASE}
+		;;
+	    sun4)
+		echo sparc-sun-sunos${UNAME_RELEASE}
+		;;
+	esac
+	exit ;;
+    aushp:SunOS:*:*)
+	echo sparc-auspex-sunos${UNAME_RELEASE}
+	exit ;;
+    # The situation for MiNT is a little confusing.  The machine name
+    # can be virtually everything (everything which is not
+    # "atarist" or "atariste" at least should have a processor
+    # > m68000).  The system name ranges from "MiNT" over "FreeMiNT"
+    # to the lowercase version "mint" (or "freemint").  Finally
+    # the system name "TOS" denotes a system which is actually not
+    # MiNT.  But MiNT is downward compatible to TOS, so this should
+    # be no problem.
+    atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)
+        echo m68k-atari-mint${UNAME_RELEASE}
+	exit ;;
+    atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)
+	echo m68k-atari-mint${UNAME_RELEASE}
+        exit ;;
+    *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)
+        echo m68k-atari-mint${UNAME_RELEASE}
+	exit ;;
+    milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)
+        echo m68k-milan-mint${UNAME_RELEASE}
+        exit ;;
+    hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)
+        echo m68k-hades-mint${UNAME_RELEASE}
+        exit ;;
+    *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)
+        echo m68k-unknown-mint${UNAME_RELEASE}
+        exit ;;
+    m68k:machten:*:*)
+	echo m68k-apple-machten${UNAME_RELEASE}
+	exit ;;
+    powerpc:machten:*:*)
+	echo powerpc-apple-machten${UNAME_RELEASE}
+	exit ;;
+    RISC*:Mach:*:*)
+	echo mips-dec-mach_bsd4.3
+	exit ;;
+    RISC*:ULTRIX:*:*)
+	echo mips-dec-ultrix${UNAME_RELEASE}
+	exit ;;
+    VAX*:ULTRIX*:*:*)
+	echo vax-dec-ultrix${UNAME_RELEASE}
+	exit ;;
+    2020:CLIX:*:* | 2430:CLIX:*:*)
+	echo clipper-intergraph-clix${UNAME_RELEASE}
+	exit ;;
+    mips:*:*:UMIPS | mips:*:*:RISCos)
+	eval $set_cc_for_build
+	sed 's/^	//' << EOF >$dummy.c
+#ifdef __cplusplus
+#include <stdio.h>  /* for printf() prototype */
+	int main (int argc, char *argv[]) {
+#else
+	int main (argc, argv) int argc; char *argv[]; {
+#endif
+	#if defined (host_mips) && defined (MIPSEB)
+	#if defined (SYSTYPE_SYSV)
+	  printf ("mips-mips-riscos%ssysv\n", argv[1]); exit (0);
+	#endif
+	#if defined (SYSTYPE_SVR4)
+	  printf ("mips-mips-riscos%ssvr4\n", argv[1]); exit (0);
+	#endif
+	#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)
+	  printf ("mips-mips-riscos%sbsd\n", argv[1]); exit (0);
+	#endif
+	#endif
+	  exit (-1);
+	}
+EOF
+	$CC_FOR_BUILD -o $dummy $dummy.c &&
+	  dummyarg=`echo "${UNAME_RELEASE}" | sed -n 's/\([0-9]*\).*/\1/p'` &&
+	  SYSTEM_NAME=`$dummy $dummyarg` &&
+	    { echo "$SYSTEM_NAME"; exit; }
+	echo mips-mips-riscos${UNAME_RELEASE}
+	exit ;;
+    Motorola:PowerMAX_OS:*:*)
+	echo powerpc-motorola-powermax
+	exit ;;
+    Motorola:*:4.3:PL8-*)
+	echo powerpc-harris-powermax
+	exit ;;
+    Night_Hawk:*:*:PowerMAX_OS | Synergy:PowerMAX_OS:*:*)
+	echo powerpc-harris-powermax
+	exit ;;
+    Night_Hawk:Power_UNIX:*:*)
+	echo powerpc-harris-powerunix
+	exit ;;
+    m88k:CX/UX:7*:*)
+	echo m88k-harris-cxux7
+	exit ;;
+    m88k:*:4*:R4*)
+	echo m88k-motorola-sysv4
+	exit ;;
+    m88k:*:3*:R3*)
+	echo m88k-motorola-sysv3
+	exit ;;
+    AViiON:dgux:*:*)
+        # DG/UX returns AViiON for all architectures
+        UNAME_PROCESSOR=`/usr/bin/uname -p`
+	if [ $UNAME_PROCESSOR = mc88100 ] || [ $UNAME_PROCESSOR = mc88110 ]
+	then
+	    if [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx ] || \
+	       [ ${TARGET_BINARY_INTERFACE}x = x ]
+	    then
+		echo m88k-dg-dgux${UNAME_RELEASE}
+	    else
+		echo m88k-dg-dguxbcs${UNAME_RELEASE}
+	    fi
+	else
+	    echo i586-dg-dgux${UNAME_RELEASE}
+	fi
+ 	exit ;;
+    M88*:DolphinOS:*:*)	# DolphinOS (SVR3)
+	echo m88k-dolphin-sysv3
+	exit ;;
+    M88*:*:R3*:*)
+	# Delta 88k system running SVR3
+	echo m88k-motorola-sysv3
+	exit ;;
+    XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)
+	echo m88k-tektronix-sysv3
+	exit ;;
+    Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)
+	echo m68k-tektronix-bsd
+	exit ;;
+    *:IRIX*:*:*)
+	echo mips-sgi-irix`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`
+	exit ;;
+    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.
+	echo romp-ibm-aix     # uname -m gives an 8 hex-code CPU id
+	exit ;;               # Note that: echo "'`uname -s`'" gives 'AIX '
+    i*86:AIX:*:*)
+	echo i386-ibm-aix
+	exit ;;
+    ia64:AIX:*:*)
+	if [ -x /usr/bin/oslevel ] ; then
+		IBM_REV=`/usr/bin/oslevel`
+	else
+		IBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}
+	fi
+	echo ${UNAME_MACHINE}-ibm-aix${IBM_REV}
+	exit ;;
+    *:AIX:2:3)
+	if grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then
+		eval $set_cc_for_build
+		sed 's/^		//' << EOF >$dummy.c
+		#include <sys/systemcfg.h>
+
+		main()
+			{
+			if (!__power_pc())
+				exit(1);
+			puts("powerpc-ibm-aix3.2.5");
+			exit(0);
+			}
+EOF
+		if $CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy`
+		then
+			echo "$SYSTEM_NAME"
+		else
+			echo rs6000-ibm-aix3.2.5
+		fi
+	elif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then
+		echo rs6000-ibm-aix3.2.4
+	else
+		echo rs6000-ibm-aix3.2
+	fi
+	exit ;;
+    *:AIX:*:[45])
+	IBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`
+	if /usr/sbin/lsattr -El ${IBM_CPU_ID} | grep ' POWER' >/dev/null 2>&1; then
+		IBM_ARCH=rs6000
+	else
+		IBM_ARCH=powerpc
+	fi
+	if [ -x /usr/bin/oslevel ] ; then
+		IBM_REV=`/usr/bin/oslevel`
+	else
+		IBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}
+	fi
+	echo ${IBM_ARCH}-ibm-aix${IBM_REV}
+	exit ;;
+    *:AIX:*:*)
+	echo rs6000-ibm-aix
+	exit ;;
+    ibmrt:4.4BSD:*|romp-ibm:BSD:*)
+	echo romp-ibm-bsd4.4
+	exit ;;
+    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and
+	echo romp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to
+	exit ;;                             # report: romp-ibm BSD 4.3
+    *:BOSX:*:*)
+	echo rs6000-bull-bosx
+	exit ;;
+    DPX/2?00:B.O.S.:*:*)
+	echo m68k-bull-sysv3
+	exit ;;
+    9000/[34]??:4.3bsd:1.*:*)
+	echo m68k-hp-bsd
+	exit ;;
+    hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)
+	echo m68k-hp-bsd4.4
+	exit ;;
+    9000/[34678]??:HP-UX:*:*)
+	HPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`
+	case "${UNAME_MACHINE}" in
+	    9000/31? )            HP_ARCH=m68000 ;;
+	    9000/[34]?? )         HP_ARCH=m68k ;;
+	    9000/[678][0-9][0-9])
+		if [ -x /usr/bin/getconf ]; then
+		    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`
+                    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`
+                    case "${sc_cpu_version}" in
+                      523) HP_ARCH="hppa1.0" ;; # CPU_PA_RISC1_0
+                      528) HP_ARCH="hppa1.1" ;; # CPU_PA_RISC1_1
+                      532)                      # CPU_PA_RISC2_0
+                        case "${sc_kernel_bits}" in
+                          32) HP_ARCH="hppa2.0n" ;;
+                          64) HP_ARCH="hppa2.0w" ;;
+			  '') HP_ARCH="hppa2.0" ;;   # HP-UX 10.20
+                        esac ;;
+                    esac
+		fi
+		if [ "${HP_ARCH}" = "" ]; then
+		    eval $set_cc_for_build
+		    sed 's/^              //' << EOF >$dummy.c
+
+              #define _HPUX_SOURCE
+              #include <stdlib.h>
+              #include <unistd.h>
+
+              int main ()
+              {
+              #if defined(_SC_KERNEL_BITS)
+                  long bits = sysconf(_SC_KERNEL_BITS);
+              #endif
+                  long cpu  = sysconf (_SC_CPU_VERSION);
+
+                  switch (cpu)
+              	{
+              	case CPU_PA_RISC1_0: puts ("hppa1.0"); break;
+              	case CPU_PA_RISC1_1: puts ("hppa1.1"); break;
+              	case CPU_PA_RISC2_0:
+              #if defined(_SC_KERNEL_BITS)
+              	    switch (bits)
+              		{
+              		case 64: puts ("hppa2.0w"); break;
+              		case 32: puts ("hppa2.0n"); break;
+              		default: puts ("hppa2.0"); break;
+              		} break;
+              #else  /* !defined(_SC_KERNEL_BITS) */
+              	    puts ("hppa2.0"); break;
+              #endif
+              	default: puts ("hppa1.0"); break;
+              	}
+                  exit (0);
+              }
+EOF
+		    (CCOPTS= $CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null) && HP_ARCH=`$dummy`
+		    test -z "$HP_ARCH" && HP_ARCH=hppa
+		fi ;;
+	esac
+	if [ ${HP_ARCH} = "hppa2.0w" ]
+	then
+	    eval $set_cc_for_build
+
+	    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating
+	    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler
+	    # generating 64-bit code.  GNU and HP use different nomenclature:
+	    #
+	    # $ CC_FOR_BUILD=cc ./config.guess
+	    # => hppa2.0w-hp-hpux11.23
+	    # $ CC_FOR_BUILD="cc +DA2.0w" ./config.guess
+	    # => hppa64-hp-hpux11.23
+
+	    if echo __LP64__ | (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) |
+		grep __LP64__ >/dev/null
+	    then
+		HP_ARCH="hppa2.0w"
+	    else
+		HP_ARCH="hppa64"
+	    fi
+	fi
+	echo ${HP_ARCH}-hp-hpux${HPUX_REV}
+	exit ;;
+    ia64:HP-UX:*:*)
+	HPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`
+	echo ia64-hp-hpux${HPUX_REV}
+	exit ;;
+    3050*:HI-UX:*:*)
+	eval $set_cc_for_build
+	sed 's/^	//' << EOF >$dummy.c
+	#include <unistd.h>
+	int
+	main ()
+	{
+	  long cpu = sysconf (_SC_CPU_VERSION);
+	  /* The order matters, because CPU_IS_HP_MC68K erroneously returns
+	     true for CPU_PA_RISC1_0.  CPU_IS_PA_RISC returns correct
+	     results, however.  */
+	  if (CPU_IS_PA_RISC (cpu))
+	    {
+	      switch (cpu)
+		{
+		  case CPU_PA_RISC1_0: puts ("hppa1.0-hitachi-hiuxwe2"); break;
+		  case CPU_PA_RISC1_1: puts ("hppa1.1-hitachi-hiuxwe2"); break;
+		  case CPU_PA_RISC2_0: puts ("hppa2.0-hitachi-hiuxwe2"); break;
+		  default: puts ("hppa-hitachi-hiuxwe2"); break;
+		}
+	    }
+	  else if (CPU_IS_HP_MC68K (cpu))
+	    puts ("m68k-hitachi-hiuxwe2");
+	  else puts ("unknown-hitachi-hiuxwe2");
+	  exit (0);
+	}
+EOF
+	$CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy` &&
+		{ echo "$SYSTEM_NAME"; exit; }
+	echo unknown-hitachi-hiuxwe2
+	exit ;;
+    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:* )
+	echo hppa1.1-hp-bsd
+	exit ;;
+    9000/8??:4.3bsd:*:*)
+	echo hppa1.0-hp-bsd
+	exit ;;
+    *9??*:MPE/iX:*:* | *3000*:MPE/iX:*:*)
+	echo hppa1.0-hp-mpeix
+	exit ;;
+    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:* )
+	echo hppa1.1-hp-osf
+	exit ;;
+    hp8??:OSF1:*:*)
+	echo hppa1.0-hp-osf
+	exit ;;
+    i*86:OSF1:*:*)
+	if [ -x /usr/sbin/sysversion ] ; then
+	    echo ${UNAME_MACHINE}-unknown-osf1mk
+	else
+	    echo ${UNAME_MACHINE}-unknown-osf1
+	fi
+	exit ;;
+    parisc*:Lites*:*:*)
+	echo hppa1.1-hp-lites
+	exit ;;
+    C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)
+	echo c1-convex-bsd
+        exit ;;
+    C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)
+	if getsysinfo -f scalar_acc
+	then echo c32-convex-bsd
+	else echo c2-convex-bsd
+	fi
+        exit ;;
+    C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)
+	echo c34-convex-bsd
+        exit ;;
+    C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)
+	echo c38-convex-bsd
+        exit ;;
+    C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)
+	echo c4-convex-bsd
+        exit ;;
+    CRAY*Y-MP:*:*:*)
+	echo ymp-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit ;;
+    CRAY*[A-Z]90:*:*:*)
+	echo ${UNAME_MACHINE}-cray-unicos${UNAME_RELEASE} \
+	| sed -e 's/CRAY.*\([A-Z]90\)/\1/' \
+	      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \
+	      -e 's/\.[^.]*$/.X/'
+	exit ;;
+    CRAY*TS:*:*:*)
+	echo t90-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit ;;
+    CRAY*T3E:*:*:*)
+	echo alphaev5-cray-unicosmk${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit ;;
+    CRAY*SV1:*:*:*)
+	echo sv1-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit ;;
+    *:UNICOS/mp:*:*)
+	echo craynv-cray-unicosmp${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit ;;
+    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)
+	FUJITSU_PROC=`uname -m | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`
+        FUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\///'`
+        FUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`
+        echo "${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}"
+        exit ;;
+    5000:UNIX_System_V:4.*:*)
+        FUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\///'`
+        FUJITSU_REL=`echo ${UNAME_RELEASE} | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/ /_/'`
+        echo "sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}"
+	exit ;;
+    i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\ Embedded/OS:*:*)
+	echo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}
+	exit ;;
+    sparc*:BSD/OS:*:*)
+	echo sparc-unknown-bsdi${UNAME_RELEASE}
+	exit ;;
+    *:BSD/OS:*:*)
+	echo ${UNAME_MACHINE}-unknown-bsdi${UNAME_RELEASE}
+	exit ;;
+    *:FreeBSD:*:*)
+	case ${UNAME_MACHINE} in
+	    pc98)
+		echo i386-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;
+	    amd64)
+		echo x86_64-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;
+	    *)
+		echo ${UNAME_MACHINE}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;
+	esac
+	exit ;;
+    i*:CYGWIN*:*)
+	echo ${UNAME_MACHINE}-pc-cygwin
+	exit ;;
+    i*:MINGW*:*)
+	echo ${UNAME_MACHINE}-pc-mingw32
+	exit ;;
+    i*:windows32*:*)
+    	# uname -m includes "-pc" on this system.
+    	echo ${UNAME_MACHINE}-mingw32
+	exit ;;
+    i*:PW*:*)
+	echo ${UNAME_MACHINE}-pc-pw32
+	exit ;;
+    x86:Interix*:[3456]*)
+	echo i586-pc-interix${UNAME_RELEASE}
+	exit ;;
+    EM64T:Interix*:[3456]*)
+	echo x86_64-unknown-interix${UNAME_RELEASE}
+	exit ;;
+    [345]86:Windows_95:* | [345]86:Windows_98:* | [345]86:Windows_NT:*)
+	echo i${UNAME_MACHINE}-pc-mks
+	exit ;;
+    i*:Windows_NT*:* | Pentium*:Windows_NT*:*)
+	# How do we know it's Interix rather than the generic POSIX subsystem?
+	# It also conflicts with pre-2.0 versions of AT&T UWIN. Should we
+	# UNAME_MACHINE based on the output of uname instead of i386?
+	echo i586-pc-interix
+	exit ;;
+    i*:UWIN*:*)
+	echo ${UNAME_MACHINE}-pc-uwin
+	exit ;;
+    amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)
+	echo x86_64-unknown-cygwin
+	exit ;;
+    p*:CYGWIN*:*)
+	echo powerpcle-unknown-cygwin
+	exit ;;
+    prep*:SunOS:5.*:*)
+	echo powerpcle-unknown-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit ;;
+    *:GNU:*:*)
+	# the GNU system
+	echo `echo ${UNAME_MACHINE}|sed -e 's,[-/].*$,,'`-unknown-gnu`echo ${UNAME_RELEASE}|sed -e 's,/.*$,,'`
+	exit ;;
+    *:GNU/*:*:*)
+	# other systems with GNU libc and userland
+	echo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | tr '[A-Z]' '[a-z]'``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-gnu
+	exit ;;
+    i*86:Minix:*:*)
+	echo ${UNAME_MACHINE}-pc-minix
+	exit ;;
+    arm*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    avr32*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    cris:Linux:*:*)
+	echo cris-axis-linux-gnu
+	exit ;;
+    crisv32:Linux:*:*)
+	echo crisv32-axis-linux-gnu
+	exit ;;
+    frv:Linux:*:*)
+    	echo frv-unknown-linux-gnu
+	exit ;;
+    ia64:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    m32r*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    m68*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    mips:Linux:*:*)
+	eval $set_cc_for_build
+	sed 's/^	//' << EOF >$dummy.c
+	#undef CPU
+	#undef mips
+	#undef mipsel
+	#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)
+	CPU=mipsel
+	#else
+	#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)
+	CPU=mips
+	#else
+	CPU=
+	#endif
+	#endif
+EOF
+	eval "`$CC_FOR_BUILD -E $dummy.c 2>/dev/null | sed -n '
+	    /^CPU/{
+		s: ::g
+		p
+	    }'`"
+	test x"${CPU}" != x && { echo "${CPU}-unknown-linux-gnu"; exit; }
+	;;
+    mips64:Linux:*:*)
+	eval $set_cc_for_build
+	sed 's/^	//' << EOF >$dummy.c
+	#undef CPU
+	#undef mips64
+	#undef mips64el
+	#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)
+	CPU=mips64el
+	#else
+	#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)
+	CPU=mips64
+	#else
+	CPU=
+	#endif
+	#endif
+EOF
+	eval "`$CC_FOR_BUILD -E $dummy.c 2>/dev/null | sed -n '
+	    /^CPU/{
+		s: ::g
+		p
+	    }'`"
+	test x"${CPU}" != x && { echo "${CPU}-unknown-linux-gnu"; exit; }
+	;;
+    or32:Linux:*:*)
+	echo or32-unknown-linux-gnu
+	exit ;;
+    ppc:Linux:*:*)
+	echo powerpc-unknown-linux-gnu
+	exit ;;
+    ppc64:Linux:*:*)
+	echo powerpc64-unknown-linux-gnu
+	exit ;;
+    alpha:Linux:*:*)
+	case `sed -n '/^cpu model/s/^.*: \(.*\)/\1/p' < /proc/cpuinfo` in
+	  EV5)   UNAME_MACHINE=alphaev5 ;;
+	  EV56)  UNAME_MACHINE=alphaev56 ;;
+	  PCA56) UNAME_MACHINE=alphapca56 ;;
+	  PCA57) UNAME_MACHINE=alphapca56 ;;
+	  EV6)   UNAME_MACHINE=alphaev6 ;;
+	  EV67)  UNAME_MACHINE=alphaev67 ;;
+	  EV68*) UNAME_MACHINE=alphaev68 ;;
+        esac
+	objdump --private-headers /bin/sh | grep ld.so.1 >/dev/null
+	if test "$?" = 0 ; then LIBC="libc1" ; else LIBC="" ; fi
+	echo ${UNAME_MACHINE}-unknown-linux-gnu${LIBC}
+	exit ;;
+    parisc:Linux:*:* | hppa:Linux:*:*)
+	# Look for CPU level
+	case `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in
+	  PA7*) echo hppa1.1-unknown-linux-gnu ;;
+	  PA8*) echo hppa2.0-unknown-linux-gnu ;;
+	  *)    echo hppa-unknown-linux-gnu ;;
+	esac
+	exit ;;
+    parisc64:Linux:*:* | hppa64:Linux:*:*)
+	echo hppa64-unknown-linux-gnu
+	exit ;;
+    s390:Linux:*:* | s390x:Linux:*:*)
+	echo ${UNAME_MACHINE}-ibm-linux
+	exit ;;
+    sh64*:Linux:*:*)
+    	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    sh*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    sparc:Linux:*:* | sparc64:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    vax:Linux:*:*)
+	echo ${UNAME_MACHINE}-dec-linux-gnu
+	exit ;;
+    x86_64:Linux:*:*)
+	echo x86_64-unknown-linux-gnu
+	exit ;;
+    i*86:Linux:*:*)
+	# The BFD linker knows what the default object file format is, so
+	# first see if it will tell us. cd to the root directory to prevent
+	# problems with other programs or directories called `ld' in the path.
+	# Set LC_ALL=C to ensure ld outputs messages in English.
+	ld_supported_targets=`cd /; LC_ALL=C ld --help 2>&1 \
+			 | sed -ne '/supported targets:/!d
+				    s/[ 	][ 	]*/ /g
+				    s/.*supported targets: *//
+				    s/ .*//
+				    p'`
+        case "$ld_supported_targets" in
+	  elf32-i386)
+		TENTATIVE="${UNAME_MACHINE}-pc-linux-gnu"
+		;;
+	  a.out-i386-linux)
+		echo "${UNAME_MACHINE}-pc-linux-gnuaout"
+		exit ;;
+	  coff-i386)
+		echo "${UNAME_MACHINE}-pc-linux-gnucoff"
+		exit ;;
+	  "")
+		# Either a pre-BFD a.out linker (linux-gnuoldld) or
+		# one that does not give us useful --help.
+		echo "${UNAME_MACHINE}-pc-linux-gnuoldld"
+		exit ;;
+	esac
+	# Determine whether the default compiler is a.out or elf
+	eval $set_cc_for_build
+	sed 's/^	//' << EOF >$dummy.c
+	#include <features.h>
+	#ifdef __ELF__
+	# ifdef __GLIBC__
+	#  if __GLIBC__ >= 2
+	LIBC=gnu
+	#  else
+	LIBC=gnulibc1
+	#  endif
+	# else
+	LIBC=gnulibc1
+	# endif
+	#else
+	#if defined(__INTEL_COMPILER) || defined(__PGI) || defined(__SUNPRO_C) || defined(__SUNPRO_CC)
+	LIBC=gnu
+	#else
+	LIBC=gnuaout
+	#endif
+	#endif
+	#ifdef __dietlibc__
+	LIBC=dietlibc
+	#endif
+EOF
+	eval "`$CC_FOR_BUILD -E $dummy.c 2>/dev/null | sed -n '
+	    /^LIBC/{
+		s: ::g
+		p
+	    }'`"
+	test x"${LIBC}" != x && {
+		echo "${UNAME_MACHINE}-pc-linux-${LIBC}"
+		exit
+	}
+	test x"${TENTATIVE}" != x && { echo "${TENTATIVE}"; exit; }
+	;;
+    i*86:DYNIX/ptx:4*:*)
+	# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.
+	# earlier versions are messed up and put the nodename in both
+	# sysname and nodename.
+	echo i386-sequent-sysv4
+	exit ;;
+    i*86:UNIX_SV:4.2MP:2.*)
+        # Unixware is an offshoot of SVR4, but it has its own version
+        # number series starting with 2...
+        # I am not positive that other SVR4 systems won't match this,
+	# I just have to hope.  -- rms.
+        # Use sysv4.2uw... so that sysv4* matches it.
+	echo ${UNAME_MACHINE}-pc-sysv4.2uw${UNAME_VERSION}
+	exit ;;
+    i*86:OS/2:*:*)
+	# If we were able to find `uname', then EMX Unix compatibility
+	# is probably installed.
+	echo ${UNAME_MACHINE}-pc-os2-emx
+	exit ;;
+    i*86:XTS-300:*:STOP)
+	echo ${UNAME_MACHINE}-unknown-stop
+	exit ;;
+    i*86:atheos:*:*)
+	echo ${UNAME_MACHINE}-unknown-atheos
+	exit ;;
+    i*86:syllable:*:*)
+	echo ${UNAME_MACHINE}-pc-syllable
+	exit ;;
+    i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.0*:*)
+	echo i386-unknown-lynxos${UNAME_RELEASE}
+	exit ;;
+    i*86:*DOS:*:*)
+	echo ${UNAME_MACHINE}-pc-msdosdjgpp
+	exit ;;
+    i*86:*:4.*:* | i*86:SYSTEM_V:4.*:*)
+	UNAME_REL=`echo ${UNAME_RELEASE} | sed 's/\/MP$//'`
+	if grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then
+		echo ${UNAME_MACHINE}-univel-sysv${UNAME_REL}
+	else
+		echo ${UNAME_MACHINE}-pc-sysv${UNAME_REL}
+	fi
+	exit ;;
+    i*86:*:5:[678]*)
+    	# UnixWare 7.x, OpenUNIX and OpenServer 6.
+	case `/bin/uname -X | grep "^Machine"` in
+	    *486*)	     UNAME_MACHINE=i486 ;;
+	    *Pentium)	     UNAME_MACHINE=i586 ;;
+	    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;
+	esac
+	echo ${UNAME_MACHINE}-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}
+	exit ;;
+    i*86:*:3.2:*)
+	if test -f /usr/options/cb.name; then
+		UNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`
+		echo ${UNAME_MACHINE}-pc-isc$UNAME_REL
+	elif /bin/uname -X 2>/dev/null >/dev/null ; then
+		UNAME_REL=`(/bin/uname -X|grep Release|sed -e 's/.*= //')`
+		(/bin/uname -X|grep i80486 >/dev/null) && UNAME_MACHINE=i486
+		(/bin/uname -X|grep '^Machine.*Pentium' >/dev/null) \
+			&& UNAME_MACHINE=i586
+		(/bin/uname -X|grep '^Machine.*Pent *II' >/dev/null) \
+			&& UNAME_MACHINE=i686
+		(/bin/uname -X|grep '^Machine.*Pentium Pro' >/dev/null) \
+			&& UNAME_MACHINE=i686
+		echo ${UNAME_MACHINE}-pc-sco$UNAME_REL
+	else
+		echo ${UNAME_MACHINE}-pc-sysv32
+	fi
+	exit ;;
+    pc:*:*:*)
+	# Left here for compatibility:
+        # uname -m prints for DJGPP always 'pc', but it prints nothing about
+        # the processor, so we play safe by assuming i386.
+	echo i386-pc-msdosdjgpp
+        exit ;;
+    Intel:Mach:3*:*)
+	echo i386-pc-mach3
+	exit ;;
+    paragon:*:*:*)
+	echo i860-intel-osf1
+	exit ;;
+    i860:*:4.*:*) # i860-SVR4
+	if grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then
+	  echo i860-stardent-sysv${UNAME_RELEASE} # Stardent Vistra i860-SVR4
+	else # Add other i860-SVR4 vendors below as they are discovered.
+	  echo i860-unknown-sysv${UNAME_RELEASE}  # Unknown i860-SVR4
+	fi
+	exit ;;
+    mini*:CTIX:SYS*5:*)
+	# "miniframe"
+	echo m68010-convergent-sysv
+	exit ;;
+    mc68k:UNIX:SYSTEM5:3.51m)
+	echo m68k-convergent-sysv
+	exit ;;
+    M680?0:D-NIX:5.3:*)
+	echo m68k-diab-dnix
+	exit ;;
+    M68*:*:R3V[5678]*:*)
+	test -r /sysV68 && { echo 'm68k-motorola-sysv'; exit; } ;;
+    3[345]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0 | SDS2:*:4.0:3.0 | SHG2:*:4.0:3.0 | S7501*:*:4.0:3.0)
+	OS_REL=''
+	test -r /etc/.relid \
+	&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \([0-9][0-9]\).*/\1/p' < /etc/.relid`
+	/bin/uname -p 2>/dev/null | grep 86 >/dev/null \
+	  && { echo i486-ncr-sysv4.3${OS_REL}; exit; }
+	/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \
+	  && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;
+    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)
+        /bin/uname -p 2>/dev/null | grep 86 >/dev/null \
+          && { echo i486-ncr-sysv4; exit; } ;;
+    m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)
+	echo m68k-unknown-lynxos${UNAME_RELEASE}
+	exit ;;
+    mc68030:UNIX_System_V:4.*:*)
+	echo m68k-atari-sysv4
+	exit ;;
+    TSUNAMI:LynxOS:2.*:*)
+	echo sparc-unknown-lynxos${UNAME_RELEASE}
+	exit ;;
+    rs6000:LynxOS:2.*:*)
+	echo rs6000-unknown-lynxos${UNAME_RELEASE}
+	exit ;;
+    PowerPC:LynxOS:2.*:* | PowerPC:LynxOS:3.[01]*:* | PowerPC:LynxOS:4.0*:*)
+	echo powerpc-unknown-lynxos${UNAME_RELEASE}
+	exit ;;
+    SM[BE]S:UNIX_SV:*:*)
+	echo mips-dde-sysv${UNAME_RELEASE}
+	exit ;;
+    RM*:ReliantUNIX-*:*:*)
+	echo mips-sni-sysv4
+	exit ;;
+    RM*:SINIX-*:*:*)
+	echo mips-sni-sysv4
+	exit ;;
+    *:SINIX-*:*:*)
+	if uname -p 2>/dev/null >/dev/null ; then
+		UNAME_MACHINE=`(uname -p) 2>/dev/null`
+		echo ${UNAME_MACHINE}-sni-sysv4
+	else
+		echo ns32k-sni-sysv
+	fi
+	exit ;;
+    PENTIUM:*:4.0*:*) # Unisys `ClearPath HMP IX 4000' SVR4/MP effort
+                      # says <Richard.M.Bartel@ccMail.Census.GOV>
+        echo i586-unisys-sysv4
+        exit ;;
+    *:UNIX_System_V:4*:FTX*)
+	# From Gerald Hewes <hewes@openmarket.com>.
+	# How about differentiating between stratus architectures? -djm
+	echo hppa1.1-stratus-sysv4
+	exit ;;
+    *:*:*:FTX*)
+	# From seanf@swdc.stratus.com.
+	echo i860-stratus-sysv4
+	exit ;;
+    i*86:VOS:*:*)
+	# From Paul.Green@stratus.com.
+	echo ${UNAME_MACHINE}-stratus-vos
+	exit ;;
+    *:VOS:*:*)
+	# From Paul.Green@stratus.com.
+	echo hppa1.1-stratus-vos
+	exit ;;
+    mc68*:A/UX:*:*)
+	echo m68k-apple-aux${UNAME_RELEASE}
+	exit ;;
+    news*:NEWS-OS:6*:*)
+	echo mips-sony-newsos6
+	exit ;;
+    R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)
+	if [ -d /usr/nec ]; then
+	        echo mips-nec-sysv${UNAME_RELEASE}
+	else
+	        echo mips-unknown-sysv${UNAME_RELEASE}
+	fi
+        exit ;;
+    BeBox:BeOS:*:*)	# BeOS running on hardware made by Be, PPC only.
+	echo powerpc-be-beos
+	exit ;;
+    BeMac:BeOS:*:*)	# BeOS running on Mac or Mac clone, PPC only.
+	echo powerpc-apple-beos
+	exit ;;
+    BePC:BeOS:*:*)	# BeOS running on Intel PC compatible.
+	echo i586-pc-beos
+	exit ;;
+    SX-4:SUPER-UX:*:*)
+	echo sx4-nec-superux${UNAME_RELEASE}
+	exit ;;
+    SX-5:SUPER-UX:*:*)
+	echo sx5-nec-superux${UNAME_RELEASE}
+	exit ;;
+    SX-6:SUPER-UX:*:*)
+	echo sx6-nec-superux${UNAME_RELEASE}
+	exit ;;
+    Power*:Rhapsody:*:*)
+	echo powerpc-apple-rhapsody${UNAME_RELEASE}
+	exit ;;
+    *:Rhapsody:*:*)
+	echo ${UNAME_MACHINE}-apple-rhapsody${UNAME_RELEASE}
+	exit ;;
+    *:Darwin:*:*)
+	UNAME_PROCESSOR=`uname -p` || UNAME_PROCESSOR=unknown
+	case $UNAME_PROCESSOR in
+	    unknown) UNAME_PROCESSOR=powerpc ;;
+	esac
+	echo ${UNAME_PROCESSOR}-apple-darwin${UNAME_RELEASE}
+	exit ;;
+    *:procnto*:*:* | *:QNX:[0123456789]*:*)
+	UNAME_PROCESSOR=`uname -p`
+	if test "$UNAME_PROCESSOR" = "x86"; then
+		UNAME_PROCESSOR=i386
+		UNAME_MACHINE=pc
+	fi
+	echo ${UNAME_PROCESSOR}-${UNAME_MACHINE}-nto-qnx${UNAME_RELEASE}
+	exit ;;
+    *:QNX:*:4*)
+	echo i386-pc-qnx
+	exit ;;
+    NSE-?:NONSTOP_KERNEL:*:*)
+	echo nse-tandem-nsk${UNAME_RELEASE}
+	exit ;;
+    NSR-?:NONSTOP_KERNEL:*:*)
+	echo nsr-tandem-nsk${UNAME_RELEASE}
+	exit ;;
+    *:NonStop-UX:*:*)
+	echo mips-compaq-nonstopux
+	exit ;;
+    BS2000:POSIX*:*:*)
+	echo bs2000-siemens-sysv
+	exit ;;
+    DS/*:UNIX_System_V:*:*)
+	echo ${UNAME_MACHINE}-${UNAME_SYSTEM}-${UNAME_RELEASE}
+	exit ;;
+    *:Plan9:*:*)
+	# "uname -m" is not consistent, so use $cputype instead. 386
+	# is converted to i386 for consistency with other x86
+	# operating systems.
+	if test "$cputype" = "386"; then
+	    UNAME_MACHINE=i386
+	else
+	    UNAME_MACHINE="$cputype"
+	fi
+	echo ${UNAME_MACHINE}-unknown-plan9
+	exit ;;
+    *:TOPS-10:*:*)
+	echo pdp10-unknown-tops10
+	exit ;;
+    *:TENEX:*:*)
+	echo pdp10-unknown-tenex
+	exit ;;
+    KS10:TOPS-20:*:* | KL10:TOPS-20:*:* | TYPE4:TOPS-20:*:*)
+	echo pdp10-dec-tops20
+	exit ;;
+    XKL-1:TOPS-20:*:* | TYPE5:TOPS-20:*:*)
+	echo pdp10-xkl-tops20
+	exit ;;
+    *:TOPS-20:*:*)
+	echo pdp10-unknown-tops20
+	exit ;;
+    *:ITS:*:*)
+	echo pdp10-unknown-its
+	exit ;;
+    SEI:*:*:SEIUX)
+        echo mips-sei-seiux${UNAME_RELEASE}
+	exit ;;
+    *:DragonFly:*:*)
+	echo ${UNAME_MACHINE}-unknown-dragonfly`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`
+	exit ;;
+    *:*VMS:*:*)
+    	UNAME_MACHINE=`(uname -p) 2>/dev/null`
+	case "${UNAME_MACHINE}" in
+	    A*) echo alpha-dec-vms ; exit ;;
+	    I*) echo ia64-dec-vms ; exit ;;
+	    V*) echo vax-dec-vms ; exit ;;
+	esac ;;
+    *:XENIX:*:SysV)
+	echo i386-pc-xenix
+	exit ;;
+    i*86:skyos:*:*)
+	echo ${UNAME_MACHINE}-pc-skyos`echo ${UNAME_RELEASE}` | sed -e 's/ .*$//'
+	exit ;;
+    i*86:rdos:*:*)
+	echo ${UNAME_MACHINE}-pc-rdos
+	exit ;;
+esac
+
+#echo '(No uname command or uname output not recognized.)' 1>&2
+#echo "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" 1>&2
+
+eval $set_cc_for_build
+cat >$dummy.c <<EOF
+#ifdef _SEQUENT_
+# include <sys/types.h>
+# include <sys/utsname.h>
+#endif
+main ()
+{
+#if defined (sony)
+#if defined (MIPSEB)
+  /* BFD wants "bsd" instead of "newsos".  Perhaps BFD should be changed,
+     I don't know....  */
+  printf ("mips-sony-bsd\n"); exit (0);
+#else
+#include <sys/param.h>
+  printf ("m68k-sony-newsos%s\n",
+#ifdef NEWSOS4
+          "4"
+#else
+	  ""
+#endif
+         ); exit (0);
+#endif
+#endif
+
+#if defined (__arm) && defined (__acorn) && defined (__unix)
+  printf ("arm-acorn-riscix\n"); exit (0);
+#endif
+
+#if defined (hp300) && !defined (hpux)
+  printf ("m68k-hp-bsd\n"); exit (0);
+#endif
+
+#if defined (NeXT)
+#if !defined (__ARCHITECTURE__)
+#define __ARCHITECTURE__ "m68k"
+#endif
+  int version;
+  version=`(hostinfo | sed -n 's/.*NeXT Mach \([0-9]*\).*/\1/p') 2>/dev/null`;
+  if (version < 4)
+    printf ("%s-next-nextstep%d\n", __ARCHITECTURE__, version);
+  else
+    printf ("%s-next-openstep%d\n", __ARCHITECTURE__, version);
+  exit (0);
+#endif
+
+#if defined (MULTIMAX) || defined (n16)
+#if defined (UMAXV)
+  printf ("ns32k-encore-sysv\n"); exit (0);
+#else
+#if defined (CMU)
+  printf ("ns32k-encore-mach\n"); exit (0);
+#else
+  printf ("ns32k-encore-bsd\n"); exit (0);
+#endif
+#endif
+#endif
+
+#if defined (__386BSD__)
+  printf ("i386-pc-bsd\n"); exit (0);
+#endif
+
+#if defined (sequent)
+#if defined (i386)
+  printf ("i386-sequent-dynix\n"); exit (0);
+#endif
+#if defined (ns32000)
+  printf ("ns32k-sequent-dynix\n"); exit (0);
+#endif
+#endif
+
+#if defined (_SEQUENT_)
+    struct utsname un;
+
+    uname(&un);
+
+    if (strncmp(un.version, "V2", 2) == 0) {
+	printf ("i386-sequent-ptx2\n"); exit (0);
+    }
+    if (strncmp(un.version, "V1", 2) == 0) { /* XXX is V1 correct? */
+	printf ("i386-sequent-ptx1\n"); exit (0);
+    }
+    printf ("i386-sequent-ptx\n"); exit (0);
+
+#endif
+
+#if defined (vax)
+# if !defined (ultrix)
+#  include <sys/param.h>
+#  if defined (BSD)
+#   if BSD == 43
+      printf ("vax-dec-bsd4.3\n"); exit (0);
+#   else
+#    if BSD == 199006
+      printf ("vax-dec-bsd4.3reno\n"); exit (0);
+#    else
+      printf ("vax-dec-bsd\n"); exit (0);
+#    endif
+#   endif
+#  else
+    printf ("vax-dec-bsd\n"); exit (0);
+#  endif
+# else
+    printf ("vax-dec-ultrix\n"); exit (0);
+# endif
+#endif
+
+#if defined (alliant) && defined (i860)
+  printf ("i860-alliant-bsd\n"); exit (0);
+#endif
+
+  exit (1);
+}
+EOF
+
+$CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null && SYSTEM_NAME=`$dummy` &&
+	{ echo "$SYSTEM_NAME"; exit; }
+
+# Apollos put the system type in the environment.
+
+test -d /usr/apollo && { echo ${ISP}-apollo-${SYSTYPE}; exit; }
+
+# Convex versions that predate uname can use getsysinfo(1)
+
+if [ -x /usr/convex/getsysinfo ]
+then
+    case `getsysinfo -f cpu_type` in
+    c1*)
+	echo c1-convex-bsd
+	exit ;;
+    c2*)
+	if getsysinfo -f scalar_acc
+	then echo c32-convex-bsd
+	else echo c2-convex-bsd
+	fi
+	exit ;;
+    c34*)
+	echo c34-convex-bsd
+	exit ;;
+    c38*)
+	echo c38-convex-bsd
+	exit ;;
+    c4*)
+	echo c4-convex-bsd
+	exit ;;
+    esac
+fi
+
+cat >&2 <<EOF
+$0: unable to guess system type
+
+This script, last modified $timestamp, has failed to recognize
+the operating system you are using. It is advised that you
+download the most up to date version of the config scripts from
+
+  http://savannah.gnu.org/cgi-bin/viewcvs/*checkout*/config/config/config.guess
+and
+  http://savannah.gnu.org/cgi-bin/viewcvs/*checkout*/config/config/config.sub
+
+If the version you run ($0) is already up to date, please
+send the following data and any information you think might be
+pertinent to <config-patches@gnu.org> in order to provide the needed
+information to handle your system.
+
+config.guess timestamp = $timestamp
+
+uname -m = `(uname -m) 2>/dev/null || echo unknown`
+uname -r = `(uname -r) 2>/dev/null || echo unknown`
+uname -s = `(uname -s) 2>/dev/null || echo unknown`
+uname -v = `(uname -v) 2>/dev/null || echo unknown`
+
+/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null`
+/bin/uname -X     = `(/bin/uname -X) 2>/dev/null`
+
+hostinfo               = `(hostinfo) 2>/dev/null`
+/bin/universe          = `(/bin/universe) 2>/dev/null`
+/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null`
+/bin/arch              = `(/bin/arch) 2>/dev/null`
+/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`
+/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`
+
+UNAME_MACHINE = ${UNAME_MACHINE}
+UNAME_RELEASE = ${UNAME_RELEASE}
+UNAME_SYSTEM  = ${UNAME_SYSTEM}
+UNAME_VERSION = ${UNAME_VERSION}
+EOF
+
+exit 1
+
+# Local variables:
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "timestamp='"
+# time-stamp-format: "%:y-%02m-%02d"
+# time-stamp-end: "'"
+# End:
diff -r d551623afde5 deps/exmpp/ac-aux/config.sub
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/ac-aux/config.sub	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,1608 @@
+#! /bin/sh
+# Configuration validation subroutine script.
+#   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
+#   2000, 2001, 2002, 2003, 2004, 2005, 2006 Free Software Foundation,
+#   Inc.
+
+timestamp='2006-07-02'
+
+# This file is (in principle) common to ALL GNU software.
+# The presence of a machine in this file suggests that SOME GNU software
+# can handle that machine.  It does not imply ALL GNU software can.
+#
+# This file is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA
+# 02110-1301, USA.
+#
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+
+# Please send patches to <config-patches@gnu.org>.  Submit a context
+# diff and a properly formatted ChangeLog entry.
+#
+# Configuration subroutine to validate and canonicalize a configuration type.
+# Supply the specified configuration type as an argument.
+# If it is invalid, we print an error message on stderr and exit with code 1.
+# Otherwise, we print the canonical config type on stdout and succeed.
+
+# This file is supposed to be the same for all GNU packages
+# and recognize all the CPU types, system types and aliases
+# that are meaningful with *any* GNU software.
+# Each package is responsible for reporting which valid configurations
+# it does not support.  The user should be able to distinguish
+# a failure to support a valid configuration from a meaningless
+# configuration.
+
+# The goal of this file is to map all the various variations of a given
+# machine specification into a single specification in the form:
+#	CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM
+# or in some cases, the newer four-part form:
+#	CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM
+# It is wrong to echo any other type of specification.
+
+me=`echo "$0" | sed -e 's,.*/,,'`
+
+usage="\
+Usage: $0 [OPTION] CPU-MFR-OPSYS
+       $0 [OPTION] ALIAS
+
+Canonicalize a configuration name.
+
+Operation modes:
+  -h, --help         print this help, then exit
+  -t, --time-stamp   print date of last modification, then exit
+  -v, --version      print version number, then exit
+
+Report bugs and patches to <config-patches@gnu.org>."
+
+version="\
+GNU config.sub ($timestamp)
+
+Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005
+Free Software Foundation, Inc.
+
+This is free software; see the source for copying conditions.  There is NO
+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
+
+help="
+Try \`$me --help' for more information."
+
+# Parse command line
+while test $# -gt 0 ; do
+  case $1 in
+    --time-stamp | --time* | -t )
+       echo "$timestamp" ; exit ;;
+    --version | -v )
+       echo "$version" ; exit ;;
+    --help | --h* | -h )
+       echo "$usage"; exit ;;
+    -- )     # Stop option processing
+       shift; break ;;
+    - )	# Use stdin as input.
+       break ;;
+    -* )
+       echo "$me: invalid option $1$help"
+       exit 1 ;;
+
+    *local*)
+       # First pass through any local machine types.
+       echo $1
+       exit ;;
+
+    * )
+       break ;;
+  esac
+done
+
+case $# in
+ 0) echo "$me: missing argument$help" >&2
+    exit 1;;
+ 1) ;;
+ *) echo "$me: too many arguments$help" >&2
+    exit 1;;
+esac
+
+# Separate what the user gave into CPU-COMPANY and OS or KERNEL-OS (if any).
+# Here we must recognize all the valid KERNEL-OS combinations.
+maybe_os=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\2/'`
+case $maybe_os in
+  nto-qnx* | linux-gnu* | linux-dietlibc | linux-newlib* | linux-uclibc* | \
+  uclinux-uclibc* | uclinux-gnu* | kfreebsd*-gnu* | knetbsd*-gnu* | netbsd*-gnu* | \
+  storm-chaos* | os2-emx* | rtmk-nova*)
+    os=-$maybe_os
+    basic_machine=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\1/'`
+    ;;
+  *)
+    basic_machine=`echo $1 | sed 's/-[^-]*$//'`
+    if [ $basic_machine != $1 ]
+    then os=`echo $1 | sed 's/.*-/-/'`
+    else os=; fi
+    ;;
+esac
+
+### Let's recognize common machines as not being operating systems so
+### that things like config.sub decstation-3100 work.  We also
+### recognize some manufacturers as not being operating systems, so we
+### can provide default operating systems below.
+case $os in
+	-sun*os*)
+		# Prevent following clause from handling this invalid input.
+		;;
+	-dec* | -mips* | -sequent* | -encore* | -pc532* | -sgi* | -sony* | \
+	-att* | -7300* | -3300* | -delta* | -motorola* | -sun[234]* | \
+	-unicom* | -ibm* | -next | -hp | -isi* | -apollo | -altos* | \
+	-convergent* | -ncr* | -news | -32* | -3600* | -3100* | -hitachi* |\
+	-c[123]* | -convex* | -sun | -crds | -omron* | -dg | -ultra | -tti* | \
+	-harris | -dolphin | -highlevel | -gould | -cbm | -ns | -masscomp | \
+	-apple | -axis | -knuth | -cray)
+		os=
+		basic_machine=$1
+		;;
+	-sim | -cisco | -oki | -wec | -winbond)
+		os=
+		basic_machine=$1
+		;;
+	-scout)
+		;;
+	-wrs)
+		os=-vxworks
+		basic_machine=$1
+		;;
+	-chorusos*)
+		os=-chorusos
+		basic_machine=$1
+		;;
+ 	-chorusrdb)
+ 		os=-chorusrdb
+		basic_machine=$1
+ 		;;
+	-hiux*)
+		os=-hiuxwe2
+		;;
+	-sco6)
+		os=-sco5v6
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco5)
+		os=-sco3.2v5
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco4)
+		os=-sco3.2v4
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco3.2.[4-9]*)
+		os=`echo $os | sed -e 's/sco3.2./sco3.2v/'`
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco3.2v[4-9]*)
+		# Don't forget version if it is 3.2v4 or newer.
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco5v6*)
+		# Don't forget version if it is 3.2v4 or newer.
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco*)
+		os=-sco3.2v2
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-udk*)
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-isc)
+		os=-isc2.2
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-clix*)
+		basic_machine=clipper-intergraph
+		;;
+	-isc*)
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-lynx*)
+		os=-lynxos
+		;;
+	-ptx*)
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-sequent/'`
+		;;
+	-windowsnt*)
+		os=`echo $os | sed -e 's/windowsnt/winnt/'`
+		;;
+	-psos*)
+		os=-psos
+		;;
+	-mint | -mint[0-9]*)
+		basic_machine=m68k-atari
+		os=-mint
+		;;
+esac
+
+# Decode aliases for certain CPU-COMPANY combinations.
+case $basic_machine in
+	# Recognize the basic CPU types without company name.
+	# Some are omitted here because they have special meanings below.
+	1750a | 580 \
+	| a29k \
+	| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] | alphapca5[67] \
+	| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] | alpha64pca5[67] \
+	| am33_2.0 \
+	| arc | arm | arm[bl]e | arme[lb] | armv[2345] | armv[345][lb] | avr | avr32 \
+	| bfin \
+	| c4x | clipper \
+	| d10v | d30v | dlx | dsp16xx \
+	| fr30 | frv \
+	| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \
+	| i370 | i860 | i960 | ia64 \
+	| ip2k | iq2000 \
+	| m32c | m32r | m32rle | m68000 | m68k | m88k \
+	| maxq | mb | microblaze | mcore \
+	| mips | mipsbe | mipseb | mipsel | mipsle \
+	| mips16 \
+	| mips64 | mips64el \
+	| mips64vr | mips64vrel \
+	| mips64orion | mips64orionel \
+	| mips64vr4100 | mips64vr4100el \
+	| mips64vr4300 | mips64vr4300el \
+	| mips64vr5000 | mips64vr5000el \
+	| mips64vr5900 | mips64vr5900el \
+	| mipsisa32 | mipsisa32el \
+	| mipsisa32r2 | mipsisa32r2el \
+	| mipsisa64 | mipsisa64el \
+	| mipsisa64r2 | mipsisa64r2el \
+	| mipsisa64sb1 | mipsisa64sb1el \
+	| mipsisa64sr71k | mipsisa64sr71kel \
+	| mipstx39 | mipstx39el \
+	| mn10200 | mn10300 \
+	| mt \
+	| msp430 \
+	| nios | nios2 \
+	| ns16k | ns32k \
+	| or32 \
+	| pdp10 | pdp11 | pj | pjl \
+	| powerpc | powerpc64 | powerpc64le | powerpcle | ppcbe \
+	| pyramid \
+	| sh | sh[1234] | sh[24]a | sh[23]e | sh[34]eb | sheb | shbe | shle | sh[1234]le | sh3ele \
+	| sh64 | sh64le \
+	| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet | sparclite \
+	| sparcv8 | sparcv9 | sparcv9b | sparcv9v \
+	| spu | strongarm \
+	| tahoe | thumb | tic4x | tic80 | tron \
+	| v850 | v850e \
+	| we32k \
+	| x86 | xscale | xscalee[bl] | xstormy16 | xtensa \
+	| z8k)
+		basic_machine=$basic_machine-unknown
+		;;
+	m6811 | m68hc11 | m6812 | m68hc12)
+		# Motorola 68HC11/12.
+		basic_machine=$basic_machine-unknown
+		os=-none
+		;;
+	m88110 | m680[12346]0 | m683?2 | m68360 | m5200 | v70 | w65 | z8k)
+		;;
+	ms1)
+		basic_machine=mt-unknown
+		;;
+
+	# We use `pc' rather than `unknown'
+	# because (1) that's what they normally are, and
+	# (2) the word "unknown" tends to confuse beginning users.
+	i*86 | x86_64)
+	  basic_machine=$basic_machine-pc
+	  ;;
+	# Object if more than one company name word.
+	*-*-*)
+		echo Invalid configuration \`$1\': machine \`$basic_machine\' not recognized 1>&2
+		exit 1
+		;;
+	# Recognize the basic CPU types with company name.
+	580-* \
+	| a29k-* \
+	| alpha-* | alphaev[4-8]-* | alphaev56-* | alphaev6[78]-* \
+	| alpha64-* | alpha64ev[4-8]-* | alpha64ev56-* | alpha64ev6[78]-* \
+	| alphapca5[67]-* | alpha64pca5[67]-* | arc-* \
+	| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \
+	| avr-* | avr32-* \
+	| bfin-* | bs2000-* \
+	| c[123]* | c30-* | [cjt]90-* | c4x-* | c54x-* | c55x-* | c6x-* \
+	| clipper-* | craynv-* | cydra-* \
+	| d10v-* | d30v-* | dlx-* \
+	| elxsi-* \
+	| f30[01]-* | f700-* | fr30-* | frv-* | fx80-* \
+	| h8300-* | h8500-* \
+	| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \
+	| i*86-* | i860-* | i960-* | ia64-* \
+	| ip2k-* | iq2000-* \
+	| m32c-* | m32r-* | m32rle-* \
+	| m68000-* | m680[012346]0-* | m68360-* | m683?2-* | m68k-* \
+	| m88110-* | m88k-* | maxq-* | mcore-* \
+	| mips-* | mipsbe-* | mipseb-* | mipsel-* | mipsle-* \
+	| mips16-* \
+	| mips64-* | mips64el-* \
+	| mips64vr-* | mips64vrel-* \
+	| mips64orion-* | mips64orionel-* \
+	| mips64vr4100-* | mips64vr4100el-* \
+	| mips64vr4300-* | mips64vr4300el-* \
+	| mips64vr5000-* | mips64vr5000el-* \
+	| mips64vr5900-* | mips64vr5900el-* \
+	| mipsisa32-* | mipsisa32el-* \
+	| mipsisa32r2-* | mipsisa32r2el-* \
+	| mipsisa64-* | mipsisa64el-* \
+	| mipsisa64r2-* | mipsisa64r2el-* \
+	| mipsisa64sb1-* | mipsisa64sb1el-* \
+	| mipsisa64sr71k-* | mipsisa64sr71kel-* \
+	| mipstx39-* | mipstx39el-* \
+	| mmix-* \
+	| mt-* \
+	| msp430-* \
+	| nios-* | nios2-* \
+	| none-* | np1-* | ns16k-* | ns32k-* \
+	| orion-* \
+	| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \
+	| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* | ppcbe-* \
+	| pyramid-* \
+	| romp-* | rs6000-* \
+	| sh-* | sh[1234]-* | sh[24]a-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \
+	| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \
+	| sparc-* | sparc64-* | sparc64b-* | sparc64v-* | sparc86x-* | sparclet-* \
+	| sparclite-* \
+	| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | strongarm-* | sv1-* | sx?-* \
+	| tahoe-* | thumb-* \
+	| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \
+	| tron-* \
+	| v850-* | v850e-* | vax-* \
+	| we32k-* \
+	| x86-* | x86_64-* | xps100-* | xscale-* | xscalee[bl]-* \
+	| xstormy16-* | xtensa-* \
+	| ymp-* \
+	| z8k-*)
+		;;
+	# Recognize the various machine names and aliases which stand
+	# for a CPU type and a company and sometimes even an OS.
+	386bsd)
+		basic_machine=i386-unknown
+		os=-bsd
+		;;
+	3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)
+		basic_machine=m68000-att
+		;;
+	3b*)
+		basic_machine=we32k-att
+		;;
+	a29khif)
+		basic_machine=a29k-amd
+		os=-udi
+		;;
+    	abacus)
+		basic_machine=abacus-unknown
+		;;
+	adobe68k)
+		basic_machine=m68010-adobe
+		os=-scout
+		;;
+	alliant | fx80)
+		basic_machine=fx80-alliant
+		;;
+	altos | altos3068)
+		basic_machine=m68k-altos
+		;;
+	am29k)
+		basic_machine=a29k-none
+		os=-bsd
+		;;
+	amd64)
+		basic_machine=x86_64-pc
+		;;
+	amd64-*)
+		basic_machine=x86_64-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	amdahl)
+		basic_machine=580-amdahl
+		os=-sysv
+		;;
+	amiga | amiga-*)
+		basic_machine=m68k-unknown
+		;;
+	amigaos | amigados)
+		basic_machine=m68k-unknown
+		os=-amigaos
+		;;
+	amigaunix | amix)
+		basic_machine=m68k-unknown
+		os=-sysv4
+		;;
+	apollo68)
+		basic_machine=m68k-apollo
+		os=-sysv
+		;;
+	apollo68bsd)
+		basic_machine=m68k-apollo
+		os=-bsd
+		;;
+	aux)
+		basic_machine=m68k-apple
+		os=-aux
+		;;
+	balance)
+		basic_machine=ns32k-sequent
+		os=-dynix
+		;;
+	c90)
+		basic_machine=c90-cray
+		os=-unicos
+		;;
+	convex-c1)
+		basic_machine=c1-convex
+		os=-bsd
+		;;
+	convex-c2)
+		basic_machine=c2-convex
+		os=-bsd
+		;;
+	convex-c32)
+		basic_machine=c32-convex
+		os=-bsd
+		;;
+	convex-c34)
+		basic_machine=c34-convex
+		os=-bsd
+		;;
+	convex-c38)
+		basic_machine=c38-convex
+		os=-bsd
+		;;
+	cray | j90)
+		basic_machine=j90-cray
+		os=-unicos
+		;;
+	craynv)
+		basic_machine=craynv-cray
+		os=-unicosmp
+		;;
+	cr16c)
+		basic_machine=cr16c-unknown
+		os=-elf
+		;;
+	crds | unos)
+		basic_machine=m68k-crds
+		;;
+	crisv32 | crisv32-* | etraxfs*)
+		basic_machine=crisv32-axis
+		;;
+	cris | cris-* | etrax*)
+		basic_machine=cris-axis
+		;;
+	crx)
+		basic_machine=crx-unknown
+		os=-elf
+		;;
+	da30 | da30-*)
+		basic_machine=m68k-da30
+		;;
+	decstation | decstation-3100 | pmax | pmax-* | pmin | dec3100 | decstatn)
+		basic_machine=mips-dec
+		;;
+	decsystem10* | dec10*)
+		basic_machine=pdp10-dec
+		os=-tops10
+		;;
+	decsystem20* | dec20*)
+		basic_machine=pdp10-dec
+		os=-tops20
+		;;
+	delta | 3300 | motorola-3300 | motorola-delta \
+	      | 3300-motorola | delta-motorola)
+		basic_machine=m68k-motorola
+		;;
+	delta88)
+		basic_machine=m88k-motorola
+		os=-sysv3
+		;;
+	djgpp)
+		basic_machine=i586-pc
+		os=-msdosdjgpp
+		;;
+	dpx20 | dpx20-*)
+		basic_machine=rs6000-bull
+		os=-bosx
+		;;
+	dpx2* | dpx2*-bull)
+		basic_machine=m68k-bull
+		os=-sysv3
+		;;
+	ebmon29k)
+		basic_machine=a29k-amd
+		os=-ebmon
+		;;
+	elxsi)
+		basic_machine=elxsi-elxsi
+		os=-bsd
+		;;
+	encore | umax | mmax)
+		basic_machine=ns32k-encore
+		;;
+	es1800 | OSE68k | ose68k | ose | OSE)
+		basic_machine=m68k-ericsson
+		os=-ose
+		;;
+	fx2800)
+		basic_machine=i860-alliant
+		;;
+	genix)
+		basic_machine=ns32k-ns
+		;;
+	gmicro)
+		basic_machine=tron-gmicro
+		os=-sysv
+		;;
+	go32)
+		basic_machine=i386-pc
+		os=-go32
+		;;
+	h3050r* | hiux*)
+		basic_machine=hppa1.1-hitachi
+		os=-hiuxwe2
+		;;
+	h8300hms)
+		basic_machine=h8300-hitachi
+		os=-hms
+		;;
+	h8300xray)
+		basic_machine=h8300-hitachi
+		os=-xray
+		;;
+	h8500hms)
+		basic_machine=h8500-hitachi
+		os=-hms
+		;;
+	harris)
+		basic_machine=m88k-harris
+		os=-sysv3
+		;;
+	hp300-*)
+		basic_machine=m68k-hp
+		;;
+	hp300bsd)
+		basic_machine=m68k-hp
+		os=-bsd
+		;;
+	hp300hpux)
+		basic_machine=m68k-hp
+		os=-hpux
+		;;
+	hp3k9[0-9][0-9] | hp9[0-9][0-9])
+		basic_machine=hppa1.0-hp
+		;;
+	hp9k2[0-9][0-9] | hp9k31[0-9])
+		basic_machine=m68000-hp
+		;;
+	hp9k3[2-9][0-9])
+		basic_machine=m68k-hp
+		;;
+	hp9k6[0-9][0-9] | hp6[0-9][0-9])
+		basic_machine=hppa1.0-hp
+		;;
+	hp9k7[0-79][0-9] | hp7[0-79][0-9])
+		basic_machine=hppa1.1-hp
+		;;
+	hp9k78[0-9] | hp78[0-9])
+		# FIXME: really hppa2.0-hp
+		basic_machine=hppa1.1-hp
+		;;
+	hp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)
+		# FIXME: really hppa2.0-hp
+		basic_machine=hppa1.1-hp
+		;;
+	hp9k8[0-9][13679] | hp8[0-9][13679])
+		basic_machine=hppa1.1-hp
+		;;
+	hp9k8[0-9][0-9] | hp8[0-9][0-9])
+		basic_machine=hppa1.0-hp
+		;;
+	hppa-next)
+		os=-nextstep3
+		;;
+	hppaosf)
+		basic_machine=hppa1.1-hp
+		os=-osf
+		;;
+	hppro)
+		basic_machine=hppa1.1-hp
+		os=-proelf
+		;;
+	i370-ibm* | ibm*)
+		basic_machine=i370-ibm
+		;;
+# I'm not sure what "Sysv32" means.  Should this be sysv3.2?
+	i*86v32)
+		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
+		os=-sysv32
+		;;
+	i*86v4*)
+		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
+		os=-sysv4
+		;;
+	i*86v)
+		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
+		os=-sysv
+		;;
+	i*86sol2)
+		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
+		os=-solaris2
+		;;
+	i386mach)
+		basic_machine=i386-mach
+		os=-mach
+		;;
+	i386-vsta | vsta)
+		basic_machine=i386-unknown
+		os=-vsta
+		;;
+	iris | iris4d)
+		basic_machine=mips-sgi
+		case $os in
+		    -irix*)
+			;;
+		    *)
+			os=-irix4
+			;;
+		esac
+		;;
+	isi68 | isi)
+		basic_machine=m68k-isi
+		os=-sysv
+		;;
+	m88k-omron*)
+		basic_machine=m88k-omron
+		;;
+	magnum | m3230)
+		basic_machine=mips-mips
+		os=-sysv
+		;;
+	merlin)
+		basic_machine=ns32k-utek
+		os=-sysv
+		;;
+	mingw32)
+		basic_machine=i386-pc
+		os=-mingw32
+		;;
+	miniframe)
+		basic_machine=m68000-convergent
+		;;
+	*mint | -mint[0-9]* | *MiNT | *MiNT[0-9]*)
+		basic_machine=m68k-atari
+		os=-mint
+		;;
+	mips3*-*)
+		basic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`
+		;;
+	mips3*)
+		basic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`-unknown
+		;;
+	monitor)
+		basic_machine=m68k-rom68k
+		os=-coff
+		;;
+	morphos)
+		basic_machine=powerpc-unknown
+		os=-morphos
+		;;
+	msdos)
+		basic_machine=i386-pc
+		os=-msdos
+		;;
+	ms1-*)
+		basic_machine=`echo $basic_machine | sed -e 's/ms1-/mt-/'`
+		;;
+	mvs)
+		basic_machine=i370-ibm
+		os=-mvs
+		;;
+	ncr3000)
+		basic_machine=i486-ncr
+		os=-sysv4
+		;;
+	netbsd386)
+		basic_machine=i386-unknown
+		os=-netbsd
+		;;
+	netwinder)
+		basic_machine=armv4l-rebel
+		os=-linux
+		;;
+	news | news700 | news800 | news900)
+		basic_machine=m68k-sony
+		os=-newsos
+		;;
+	news1000)
+		basic_machine=m68030-sony
+		os=-newsos
+		;;
+	news-3600 | risc-news)
+		basic_machine=mips-sony
+		os=-newsos
+		;;
+	necv70)
+		basic_machine=v70-nec
+		os=-sysv
+		;;
+	next | m*-next )
+		basic_machine=m68k-next
+		case $os in
+		    -nextstep* )
+			;;
+		    -ns2*)
+		      os=-nextstep2
+			;;
+		    *)
+		      os=-nextstep3
+			;;
+		esac
+		;;
+	nh3000)
+		basic_machine=m68k-harris
+		os=-cxux
+		;;
+	nh[45]000)
+		basic_machine=m88k-harris
+		os=-cxux
+		;;
+	nindy960)
+		basic_machine=i960-intel
+		os=-nindy
+		;;
+	mon960)
+		basic_machine=i960-intel
+		os=-mon960
+		;;
+	nonstopux)
+		basic_machine=mips-compaq
+		os=-nonstopux
+		;;
+	np1)
+		basic_machine=np1-gould
+		;;
+	nsr-tandem)
+		basic_machine=nsr-tandem
+		;;
+	op50n-* | op60c-*)
+		basic_machine=hppa1.1-oki
+		os=-proelf
+		;;
+	openrisc | openrisc-*)
+		basic_machine=or32-unknown
+		;;
+	os400)
+		basic_machine=powerpc-ibm
+		os=-os400
+		;;
+	OSE68000 | ose68000)
+		basic_machine=m68000-ericsson
+		os=-ose
+		;;
+	os68k)
+		basic_machine=m68k-none
+		os=-os68k
+		;;
+	pa-hitachi)
+		basic_machine=hppa1.1-hitachi
+		os=-hiuxwe2
+		;;
+	paragon)
+		basic_machine=i860-intel
+		os=-osf
+		;;
+	pbd)
+		basic_machine=sparc-tti
+		;;
+	pbb)
+		basic_machine=m68k-tti
+		;;
+	pc532 | pc532-*)
+		basic_machine=ns32k-pc532
+		;;
+	pc98)
+		basic_machine=i386-pc
+		;;
+	pc98-*)
+		basic_machine=i386-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pentium | p5 | k5 | k6 | nexgen | viac3)
+		basic_machine=i586-pc
+		;;
+	pentiumpro | p6 | 6x86 | athlon | athlon_*)
+		basic_machine=i686-pc
+		;;
+	pentiumii | pentium2 | pentiumiii | pentium3)
+		basic_machine=i686-pc
+		;;
+	pentium4)
+		basic_machine=i786-pc
+		;;
+	pentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)
+		basic_machine=i586-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pentiumpro-* | p6-* | 6x86-* | athlon-*)
+		basic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)
+		basic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pentium4-*)
+		basic_machine=i786-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pn)
+		basic_machine=pn-gould
+		;;
+	power)	basic_machine=power-ibm
+		;;
+	ppc)	basic_machine=powerpc-unknown
+		;;
+	ppc-*)	basic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	ppcle | powerpclittle | ppc-le | powerpc-little)
+		basic_machine=powerpcle-unknown
+		;;
+	ppcle-* | powerpclittle-*)
+		basic_machine=powerpcle-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	ppc64)	basic_machine=powerpc64-unknown
+		;;
+	ppc64-*) basic_machine=powerpc64-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	ppc64le | powerpc64little | ppc64-le | powerpc64-little)
+		basic_machine=powerpc64le-unknown
+		;;
+	ppc64le-* | powerpc64little-*)
+		basic_machine=powerpc64le-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	ps2)
+		basic_machine=i386-ibm
+		;;
+	pw32)
+		basic_machine=i586-unknown
+		os=-pw32
+		;;
+	rdos)
+		basic_machine=i386-pc
+		os=-rdos
+		;;
+	rom68k)
+		basic_machine=m68k-rom68k
+		os=-coff
+		;;
+	rm[46]00)
+		basic_machine=mips-siemens
+		;;
+	rtpc | rtpc-*)
+		basic_machine=romp-ibm
+		;;
+	s390 | s390-*)
+		basic_machine=s390-ibm
+		;;
+	s390x | s390x-*)
+		basic_machine=s390x-ibm
+		;;
+	sa29200)
+		basic_machine=a29k-amd
+		os=-udi
+		;;
+	sb1)
+		basic_machine=mipsisa64sb1-unknown
+		;;
+	sb1el)
+		basic_machine=mipsisa64sb1el-unknown
+		;;
+	sei)
+		basic_machine=mips-sei
+		os=-seiux
+		;;
+	sequent)
+		basic_machine=i386-sequent
+		;;
+	sh)
+		basic_machine=sh-hitachi
+		os=-hms
+		;;
+	sh64)
+		basic_machine=sh64-unknown
+		;;
+	sparclite-wrs | simso-wrs)
+		basic_machine=sparclite-wrs
+		os=-vxworks
+		;;
+	sps7)
+		basic_machine=m68k-bull
+		os=-sysv2
+		;;
+	spur)
+		basic_machine=spur-unknown
+		;;
+	st2000)
+		basic_machine=m68k-tandem
+		;;
+	stratus)
+		basic_machine=i860-stratus
+		os=-sysv4
+		;;
+	sun2)
+		basic_machine=m68000-sun
+		;;
+	sun2os3)
+		basic_machine=m68000-sun
+		os=-sunos3
+		;;
+	sun2os4)
+		basic_machine=m68000-sun
+		os=-sunos4
+		;;
+	sun3os3)
+		basic_machine=m68k-sun
+		os=-sunos3
+		;;
+	sun3os4)
+		basic_machine=m68k-sun
+		os=-sunos4
+		;;
+	sun4os3)
+		basic_machine=sparc-sun
+		os=-sunos3
+		;;
+	sun4os4)
+		basic_machine=sparc-sun
+		os=-sunos4
+		;;
+	sun4sol2)
+		basic_machine=sparc-sun
+		os=-solaris2
+		;;
+	sun3 | sun3-*)
+		basic_machine=m68k-sun
+		;;
+	sun4)
+		basic_machine=sparc-sun
+		;;
+	sun386 | sun386i | roadrunner)
+		basic_machine=i386-sun
+		;;
+	sv1)
+		basic_machine=sv1-cray
+		os=-unicos
+		;;
+	symmetry)
+		basic_machine=i386-sequent
+		os=-dynix
+		;;
+	t3e)
+		basic_machine=alphaev5-cray
+		os=-unicos
+		;;
+	t90)
+		basic_machine=t90-cray
+		os=-unicos
+		;;
+	tic54x | c54x*)
+		basic_machine=tic54x-unknown
+		os=-coff
+		;;
+	tic55x | c55x*)
+		basic_machine=tic55x-unknown
+		os=-coff
+		;;
+	tic6x | c6x*)
+		basic_machine=tic6x-unknown
+		os=-coff
+		;;
+	tx39)
+		basic_machine=mipstx39-unknown
+		;;
+	tx39el)
+		basic_machine=mipstx39el-unknown
+		;;
+	toad1)
+		basic_machine=pdp10-xkl
+		os=-tops20
+		;;
+	tower | tower-32)
+		basic_machine=m68k-ncr
+		;;
+	tpf)
+		basic_machine=s390x-ibm
+		os=-tpf
+		;;
+	udi29k)
+		basic_machine=a29k-amd
+		os=-udi
+		;;
+	ultra3)
+		basic_machine=a29k-nyu
+		os=-sym1
+		;;
+	v810 | necv810)
+		basic_machine=v810-nec
+		os=-none
+		;;
+	vaxv)
+		basic_machine=vax-dec
+		os=-sysv
+		;;
+	vms)
+		basic_machine=vax-dec
+		os=-vms
+		;;
+	vpp*|vx|vx-*)
+		basic_machine=f301-fujitsu
+		;;
+	vxworks960)
+		basic_machine=i960-wrs
+		os=-vxworks
+		;;
+	vxworks68)
+		basic_machine=m68k-wrs
+		os=-vxworks
+		;;
+	vxworks29k)
+		basic_machine=a29k-wrs
+		os=-vxworks
+		;;
+	w65*)
+		basic_machine=w65-wdc
+		os=-none
+		;;
+	w89k-*)
+		basic_machine=hppa1.1-winbond
+		os=-proelf
+		;;
+	xbox)
+		basic_machine=i686-pc
+		os=-mingw32
+		;;
+	xps | xps100)
+		basic_machine=xps100-honeywell
+		;;
+	ymp)
+		basic_machine=ymp-cray
+		os=-unicos
+		;;
+	z8k-*-coff)
+		basic_machine=z8k-unknown
+		os=-sim
+		;;
+	none)
+		basic_machine=none-none
+		os=-none
+		;;
+
+# Here we handle the default manufacturer of certain CPU types.  It is in
+# some cases the only manufacturer, in others, it is the most popular.
+	w89k)
+		basic_machine=hppa1.1-winbond
+		;;
+	op50n)
+		basic_machine=hppa1.1-oki
+		;;
+	op60c)
+		basic_machine=hppa1.1-oki
+		;;
+	romp)
+		basic_machine=romp-ibm
+		;;
+	mmix)
+		basic_machine=mmix-knuth
+		;;
+	rs6000)
+		basic_machine=rs6000-ibm
+		;;
+	vax)
+		basic_machine=vax-dec
+		;;
+	pdp10)
+		# there are many clones, so DEC is not a safe bet
+		basic_machine=pdp10-unknown
+		;;
+	pdp11)
+		basic_machine=pdp11-dec
+		;;
+	we32k)
+		basic_machine=we32k-att
+		;;
+	sh[1234] | sh[24]a | sh[34]eb | sh[1234]le | sh[23]ele)
+		basic_machine=sh-unknown
+		;;
+	sparc | sparcv8 | sparcv9 | sparcv9b | sparcv9v)
+		basic_machine=sparc-sun
+		;;
+	cydra)
+		basic_machine=cydra-cydrome
+		;;
+	orion)
+		basic_machine=orion-highlevel
+		;;
+	orion105)
+		basic_machine=clipper-highlevel
+		;;
+	mac | mpw | mac-mpw)
+		basic_machine=m68k-apple
+		;;
+	pmac | pmac-mpw)
+		basic_machine=powerpc-apple
+		;;
+	*-unknown)
+		# Make sure to match an already-canonicalized machine name.
+		;;
+	*)
+		echo Invalid configuration \`$1\': machine \`$basic_machine\' not recognized 1>&2
+		exit 1
+		;;
+esac
+
+# Here we canonicalize certain aliases for manufacturers.
+case $basic_machine in
+	*-digital*)
+		basic_machine=`echo $basic_machine | sed 's/digital.*/dec/'`
+		;;
+	*-commodore*)
+		basic_machine=`echo $basic_machine | sed 's/commodore.*/cbm/'`
+		;;
+	*)
+		;;
+esac
+
+# Decode manufacturer-specific aliases for certain operating systems.
+
+if [ x"$os" != x"" ]
+then
+case $os in
+        # First match some system type aliases
+        # that might get confused with valid system types.
+	# -solaris* is a basic system type, with this one exception.
+	-solaris1 | -solaris1.*)
+		os=`echo $os | sed -e 's|solaris1|sunos4|'`
+		;;
+	-solaris)
+		os=-solaris2
+		;;
+	-svr4*)
+		os=-sysv4
+		;;
+	-unixware*)
+		os=-sysv4.2uw
+		;;
+	-gnu/linux*)
+		os=`echo $os | sed -e 's|gnu/linux|linux-gnu|'`
+		;;
+	# First accept the basic system types.
+	# The portable systems comes first.
+	# Each alternative MUST END IN A *, to match a version number.
+	# -sysv* is not here because it comes later, after sysvr4.
+	-gnu* | -bsd* | -mach* | -minix* | -genix* | -ultrix* | -irix* \
+	      | -*vms* | -sco* | -esix* | -isc* | -aix* | -sunos | -sunos[34]*\
+	      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -solaris* | -sym* \
+	      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \
+	      | -aos* \
+	      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \
+	      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \
+	      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* \
+	      | -openbsd* | -solidbsd* \
+	      | -ekkobsd* | -kfreebsd* | -freebsd* | -riscix* | -lynxos* \
+	      | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \
+	      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \
+	      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \
+	      | -chorusos* | -chorusrdb* \
+	      | -cygwin* | -pe* | -psos* | -moss* | -proelf* | -rtems* \
+	      | -mingw32* | -linux-gnu* | -linux-newlib* | -linux-uclibc* \
+	      | -uxpv* | -beos* | -mpeix* | -udk* \
+	      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* | -opened* \
+	      | -openstep* | -oskit* | -conix* | -pw32* | -nonstopux* \
+	      | -storm-chaos* | -tops10* | -tenex* | -tops20* | -its* \
+	      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \
+	      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \
+	      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \
+	      | -skyos* | -haiku* | -rdos* | -toppers*)
+	# Remember, each alternative MUST END IN *, to match a version number.
+		;;
+	-qnx*)
+		case $basic_machine in
+		    x86-* | i*86-*)
+			;;
+		    *)
+			os=-nto$os
+			;;
+		esac
+		;;
+	-nto-qnx*)
+		;;
+	-nto*)
+		os=`echo $os | sed -e 's|nto|nto-qnx|'`
+		;;
+	-sim | -es1800* | -hms* | -xray | -os68k* | -none* | -v88r* \
+	      | -windows* | -osx | -abug | -netware* | -os9* | -beos* | -haiku* \
+	      | -macos* | -mpw* | -magic* | -mmixware* | -mon960* | -lnews*)
+		;;
+	-mac*)
+		os=`echo $os | sed -e 's|mac|macos|'`
+		;;
+	-linux-dietlibc)
+		os=-linux-dietlibc
+		;;
+	-linux*)
+		os=`echo $os | sed -e 's|linux|linux-gnu|'`
+		;;
+	-sunos5*)
+		os=`echo $os | sed -e 's|sunos5|solaris2|'`
+		;;
+	-sunos6*)
+		os=`echo $os | sed -e 's|sunos6|solaris3|'`
+		;;
+	-opened*)
+		os=-openedition
+		;;
+        -os400*)
+		os=-os400
+		;;
+	-wince*)
+		os=-wince
+		;;
+	-osfrose*)
+		os=-osfrose
+		;;
+	-osf*)
+		os=-osf
+		;;
+	-utek*)
+		os=-bsd
+		;;
+	-dynix*)
+		os=-bsd
+		;;
+	-acis*)
+		os=-aos
+		;;
+	-atheos*)
+		os=-atheos
+		;;
+	-syllable*)
+		os=-syllable
+		;;
+	-386bsd)
+		os=-bsd
+		;;
+	-ctix* | -uts*)
+		os=-sysv
+		;;
+	-nova*)
+		os=-rtmk-nova
+		;;
+	-ns2 )
+		os=-nextstep2
+		;;
+	-nsk*)
+		os=-nsk
+		;;
+	# Preserve the version number of sinix5.
+	-sinix5.*)
+		os=`echo $os | sed -e 's|sinix|sysv|'`
+		;;
+	-sinix*)
+		os=-sysv4
+		;;
+        -tpf*)
+		os=-tpf
+		;;
+	-triton*)
+		os=-sysv3
+		;;
+	-oss*)
+		os=-sysv3
+		;;
+	-svr4)
+		os=-sysv4
+		;;
+	-svr3)
+		os=-sysv3
+		;;
+	-sysvr4)
+		os=-sysv4
+		;;
+	# This must come after -sysvr4.
+	-sysv*)
+		;;
+	-ose*)
+		os=-ose
+		;;
+	-es1800*)
+		os=-ose
+		;;
+	-xenix)
+		os=-xenix
+		;;
+	-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)
+		os=-mint
+		;;
+	-aros*)
+		os=-aros
+		;;
+	-kaos*)
+		os=-kaos
+		;;
+	-zvmoe)
+		os=-zvmoe
+		;;
+	-none)
+		;;
+	*)
+		# Get rid of the `-' at the beginning of $os.
+		os=`echo $os | sed 's/[^-]*-//'`
+		echo Invalid configuration \`$1\': system \`$os\' not recognized 1>&2
+		exit 1
+		;;
+esac
+else
+
+# Here we handle the default operating systems that come with various machines.
+# The value should be what the vendor currently ships out the door with their
+# machine or put another way, the most popular os provided with the machine.
+
+# Note that if you're going to try to match "-MANUFACTURER" here (say,
+# "-sun"), then you have to tell the case statement up towards the top
+# that MANUFACTURER isn't an operating system.  Otherwise, code above
+# will signal an error saying that MANUFACTURER isn't an operating
+# system, and we'll never get to this point.
+
+case $basic_machine in
+        spu-*)
+		os=-elf
+		;;
+	*-acorn)
+		os=-riscix1.2
+		;;
+	arm*-rebel)
+		os=-linux
+		;;
+	arm*-semi)
+		os=-aout
+		;;
+        c4x-* | tic4x-*)
+        	os=-coff
+		;;
+	# This must come before the *-dec entry.
+	pdp10-*)
+		os=-tops20
+		;;
+	pdp11-*)
+		os=-none
+		;;
+	*-dec | vax-*)
+		os=-ultrix4.2
+		;;
+	m68*-apollo)
+		os=-domain
+		;;
+	i386-sun)
+		os=-sunos4.0.2
+		;;
+	m68000-sun)
+		os=-sunos3
+		# This also exists in the configure program, but was not the
+		# default.
+		# os=-sunos4
+		;;
+	m68*-cisco)
+		os=-aout
+		;;
+	mips*-cisco)
+		os=-elf
+		;;
+	mips*-*)
+		os=-elf
+		;;
+	or32-*)
+		os=-coff
+		;;
+	*-tti)	# must be before sparc entry or we get the wrong os.
+		os=-sysv3
+		;;
+	sparc-* | *-sun)
+		os=-sunos4.1.1
+		;;
+	*-be)
+		os=-beos
+		;;
+	*-haiku)
+		os=-haiku
+		;;
+	*-ibm)
+		os=-aix
+		;;
+    	*-knuth)
+		os=-mmixware
+		;;
+	*-wec)
+		os=-proelf
+		;;
+	*-winbond)
+		os=-proelf
+		;;
+	*-oki)
+		os=-proelf
+		;;
+	*-hp)
+		os=-hpux
+		;;
+	*-hitachi)
+		os=-hiux
+		;;
+	i860-* | *-att | *-ncr | *-altos | *-motorola | *-convergent)
+		os=-sysv
+		;;
+	*-cbm)
+		os=-amigaos
+		;;
+	*-dg)
+		os=-dgux
+		;;
+	*-dolphin)
+		os=-sysv3
+		;;
+	m68k-ccur)
+		os=-rtu
+		;;
+	m88k-omron*)
+		os=-luna
+		;;
+	*-next )
+		os=-nextstep
+		;;
+	*-sequent)
+		os=-ptx
+		;;
+	*-crds)
+		os=-unos
+		;;
+	*-ns)
+		os=-genix
+		;;
+	i370-*)
+		os=-mvs
+		;;
+	*-next)
+		os=-nextstep3
+		;;
+	*-gould)
+		os=-sysv
+		;;
+	*-highlevel)
+		os=-bsd
+		;;
+	*-encore)
+		os=-bsd
+		;;
+	*-sgi)
+		os=-irix
+		;;
+	*-siemens)
+		os=-sysv4
+		;;
+	*-masscomp)
+		os=-rtu
+		;;
+	f30[01]-fujitsu | f700-fujitsu)
+		os=-uxpv
+		;;
+	*-rom68k)
+		os=-coff
+		;;
+	*-*bug)
+		os=-coff
+		;;
+	*-apple)
+		os=-macos
+		;;
+	*-atari*)
+		os=-mint
+		;;
+	*)
+		os=-none
+		;;
+esac
+fi
+
+# Here we handle the case where we know the os, and the CPU type, but not the
+# manufacturer.  We pick the logical manufacturer.
+vendor=unknown
+case $basic_machine in
+	*-unknown)
+		case $os in
+			-riscix*)
+				vendor=acorn
+				;;
+			-sunos*)
+				vendor=sun
+				;;
+			-aix*)
+				vendor=ibm
+				;;
+			-beos*)
+				vendor=be
+				;;
+			-hpux*)
+				vendor=hp
+				;;
+			-mpeix*)
+				vendor=hp
+				;;
+			-hiux*)
+				vendor=hitachi
+				;;
+			-unos*)
+				vendor=crds
+				;;
+			-dgux*)
+				vendor=dg
+				;;
+			-luna*)
+				vendor=omron
+				;;
+			-genix*)
+				vendor=ns
+				;;
+			-mvs* | -opened*)
+				vendor=ibm
+				;;
+			-os400*)
+				vendor=ibm
+				;;
+			-ptx*)
+				vendor=sequent
+				;;
+			-tpf*)
+				vendor=ibm
+				;;
+			-vxsim* | -vxworks* | -windiss*)
+				vendor=wrs
+				;;
+			-aux*)
+				vendor=apple
+				;;
+			-hms*)
+				vendor=hitachi
+				;;
+			-mpw* | -macos*)
+				vendor=apple
+				;;
+			-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)
+				vendor=atari
+				;;
+			-vos*)
+				vendor=stratus
+				;;
+		esac
+		basic_machine=`echo $basic_machine | sed "s/unknown/$vendor/"`
+		;;
+esac
+
+echo $basic_machine$os
+exit
+
+# Local variables:
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "timestamp='"
+# time-stamp-format: "%:y-%02m-%02d"
+# time-stamp-end: "'"
+# End:
diff -r d551623afde5 deps/exmpp/ac-aux/depcomp
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/ac-aux/depcomp	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,530 @@
+#! /bin/sh
+# depcomp - compile a program generating dependencies as side-effects
+
+scriptversion=2005-07-09.11
+
+# Copyright (C) 1999, 2000, 2003, 2004, 2005 Free Software Foundation, Inc.
+
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2, or (at your option)
+# any later version.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+# 02110-1301, USA.
+
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+# Originally written by Alexandre Oliva <oliva@dcc.unicamp.br>.
+
+case $1 in
+  '')
+     echo "$0: No command.  Try \`$0 --help' for more information." 1>&2
+     exit 1;
+     ;;
+  -h | --h*)
+    cat <<\EOF
+Usage: depcomp [--help] [--version] PROGRAM [ARGS]
+
+Run PROGRAMS ARGS to compile a file, generating dependencies
+as side-effects.
+
+Environment variables:
+  depmode     Dependency tracking mode.
+  source      Source file read by `PROGRAMS ARGS'.
+  object      Object file output by `PROGRAMS ARGS'.
+  DEPDIR      directory where to store dependencies.
+  depfile     Dependency file to output.
+  tmpdepfile  Temporary file to use when outputing dependencies.
+  libtool     Whether libtool is used (yes/no).
+
+Report bugs to <bug-automake@gnu.org>.
+EOF
+    exit $?
+    ;;
+  -v | --v*)
+    echo "depcomp $scriptversion"
+    exit $?
+    ;;
+esac
+
+if test -z "$depmode" || test -z "$source" || test -z "$object"; then
+  echo "depcomp: Variables source, object and depmode must be set" 1>&2
+  exit 1
+fi
+
+# Dependencies for sub/bar.o or sub/bar.obj go into sub/.deps/bar.Po.
+depfile=${depfile-`echo "$object" |
+  sed 's|[^\\/]*$|'${DEPDIR-.deps}'/&|;s|\.\([^.]*\)$|.P\1|;s|Pobj$|Po|'`}
+tmpdepfile=${tmpdepfile-`echo "$depfile" | sed 's/\.\([^.]*\)$/.T\1/'`}
+
+rm -f "$tmpdepfile"
+
+# Some modes work just like other modes, but use different flags.  We
+# parameterize here, but still list the modes in the big case below,
+# to make depend.m4 easier to write.  Note that we *cannot* use a case
+# here, because this file can only contain one case statement.
+if test "$depmode" = hp; then
+  # HP compiler uses -M and no extra arg.
+  gccflag=-M
+  depmode=gcc
+fi
+
+if test "$depmode" = dashXmstdout; then
+   # This is just like dashmstdout with a different argument.
+   dashmflag=-xM
+   depmode=dashmstdout
+fi
+
+case "$depmode" in
+gcc3)
+## gcc 3 implements dependency tracking that does exactly what
+## we want.  Yay!  Note: for some reason libtool 1.4 doesn't like
+## it if -MD -MP comes after the -MF stuff.  Hmm.
+  "$@" -MT "$object" -MD -MP -MF "$tmpdepfile"
+  stat=$?
+  if test $stat -eq 0; then :
+  else
+    rm -f "$tmpdepfile"
+    exit $stat
+  fi
+  mv "$tmpdepfile" "$depfile"
+  ;;
+
+gcc)
+## There are various ways to get dependency output from gcc.  Here's
+## why we pick this rather obscure method:
+## - Don't want to use -MD because we'd like the dependencies to end
+##   up in a subdir.  Having to rename by hand is ugly.
+##   (We might end up doing this anyway to support other compilers.)
+## - The DEPENDENCIES_OUTPUT environment variable makes gcc act like
+##   -MM, not -M (despite what the docs say).
+## - Using -M directly means running the compiler twice (even worse
+##   than renaming).
+  if test -z "$gccflag"; then
+    gccflag=-MD,
+  fi
+  "$@" -Wp,"$gccflag$tmpdepfile"
+  stat=$?
+  if test $stat -eq 0; then :
+  else
+    rm -f "$tmpdepfile"
+    exit $stat
+  fi
+  rm -f "$depfile"
+  echo "$object : \\" > "$depfile"
+  alpha=ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
+## The second -e expression handles DOS-style file names with drive letters.
+  sed -e 's/^[^:]*: / /' \
+      -e 's/^['$alpha']:\/[^:]*: / /' < "$tmpdepfile" >> "$depfile"
+## This next piece of magic avoids the `deleted header file' problem.
+## The problem is that when a header file which appears in a .P file
+## is deleted, the dependency causes make to die (because there is
+## typically no way to rebuild the header).  We avoid this by adding
+## dummy dependencies for each header file.  Too bad gcc doesn't do
+## this for us directly.
+  tr ' ' '
+' < "$tmpdepfile" |
+## Some versions of gcc put a space before the `:'.  On the theory
+## that the space means something, we add a space to the output as
+## well.
+## Some versions of the HPUX 10.20 sed can't process this invocation
+## correctly.  Breaking it into two sed invocations is a workaround.
+    sed -e 's/^\\$//' -e '/^$/d' -e '/:$/d' | sed -e 's/$/ :/' >> "$depfile"
+  rm -f "$tmpdepfile"
+  ;;
+
+hp)
+  # This case exists only to let depend.m4 do its work.  It works by
+  # looking at the text of this script.  This case will never be run,
+  # since it is checked for above.
+  exit 1
+  ;;
+
+sgi)
+  if test "$libtool" = yes; then
+    "$@" "-Wp,-MDupdate,$tmpdepfile"
+  else
+    "$@" -MDupdate "$tmpdepfile"
+  fi
+  stat=$?
+  if test $stat -eq 0; then :
+  else
+    rm -f "$tmpdepfile"
+    exit $stat
+  fi
+  rm -f "$depfile"
+
+  if test -f "$tmpdepfile"; then  # yes, the sourcefile depend on other files
+    echo "$object : \\" > "$depfile"
+
+    # Clip off the initial element (the dependent).  Don't try to be
+    # clever and replace this with sed code, as IRIX sed won't handle
+    # lines with more than a fixed number of characters (4096 in
+    # IRIX 6.2 sed, 8192 in IRIX 6.5).  We also remove comment lines;
+    # the IRIX cc adds comments like `#:fec' to the end of the
+    # dependency line.
+    tr ' ' '
+' < "$tmpdepfile" \
+    | sed -e 's/^.*\.o://' -e 's/#.*$//' -e '/^$/ d' | \
+    tr '
+' ' ' >> $depfile
+    echo >> $depfile
+
+    # The second pass generates a dummy entry for each header file.
+    tr ' ' '
+' < "$tmpdepfile" \
+   | sed -e 's/^.*\.o://' -e 's/#.*$//' -e '/^$/ d' -e 's/$/:/' \
+   >> $depfile
+  else
+    # The sourcefile does not contain any dependencies, so just
+    # store a dummy comment line, to avoid errors with the Makefile
+    # "include basename.Plo" scheme.
+    echo "#dummy" > "$depfile"
+  fi
+  rm -f "$tmpdepfile"
+  ;;
+
+aix)
+  # The C for AIX Compiler uses -M and outputs the dependencies
+  # in a .u file.  In older versions, this file always lives in the
+  # current directory.  Also, the AIX compiler puts `$object:' at the
+  # start of each line; $object doesn't have directory information.
+  # Version 6 uses the directory in both cases.
+  stripped=`echo "$object" | sed 's/\(.*\)\..*$/\1/'`
+  tmpdepfile="$stripped.u"
+  if test "$libtool" = yes; then
+    "$@" -Wc,-M
+  else
+    "$@" -M
+  fi
+  stat=$?
+
+  if test -f "$tmpdepfile"; then :
+  else
+    stripped=`echo "$stripped" | sed 's,^.*/,,'`
+    tmpdepfile="$stripped.u"
+  fi
+
+  if test $stat -eq 0; then :
+  else
+    rm -f "$tmpdepfile"
+    exit $stat
+  fi
+
+  if test -f "$tmpdepfile"; then
+    outname="$stripped.o"
+    # Each line is of the form `foo.o: dependent.h'.
+    # Do two passes, one to just change these to
+    # `$object: dependent.h' and one to simply `dependent.h:'.
+    sed -e "s,^$outname:,$object :," < "$tmpdepfile" > "$depfile"
+    sed -e "s,^$outname: \(.*\)$,\1:," < "$tmpdepfile" >> "$depfile"
+  else
+    # The sourcefile does not contain any dependencies, so just
+    # store a dummy comment line, to avoid errors with the Makefile
+    # "include basename.Plo" scheme.
+    echo "#dummy" > "$depfile"
+  fi
+  rm -f "$tmpdepfile"
+  ;;
+
+icc)
+  # Intel's C compiler understands `-MD -MF file'.  However on
+  #    icc -MD -MF foo.d -c -o sub/foo.o sub/foo.c
+  # ICC 7.0 will fill foo.d with something like
+  #    foo.o: sub/foo.c
+  #    foo.o: sub/foo.h
+  # which is wrong.  We want:
+  #    sub/foo.o: sub/foo.c
+  #    sub/foo.o: sub/foo.h
+  #    sub/foo.c:
+  #    sub/foo.h:
+  # ICC 7.1 will output
+  #    foo.o: sub/foo.c sub/foo.h
+  # and will wrap long lines using \ :
+  #    foo.o: sub/foo.c ... \
+  #     sub/foo.h ... \
+  #     ...
+
+  "$@" -MD -MF "$tmpdepfile"
+  stat=$?
+  if test $stat -eq 0; then :
+  else
+    rm -f "$tmpdepfile"
+    exit $stat
+  fi
+  rm -f "$depfile"
+  # Each line is of the form `foo.o: dependent.h',
+  # or `foo.o: dep1.h dep2.h \', or ` dep3.h dep4.h \'.
+  # Do two passes, one to just change these to
+  # `$object: dependent.h' and one to simply `dependent.h:'.
+  sed "s,^[^:]*:,$object :," < "$tmpdepfile" > "$depfile"
+  # Some versions of the HPUX 10.20 sed can't process this invocation
+  # correctly.  Breaking it into two sed invocations is a workaround.
+  sed 's,^[^:]*: \(.*\)$,\1,;s/^\\$//;/^$/d;/:$/d' < "$tmpdepfile" |
+    sed -e 's/$/ :/' >> "$depfile"
+  rm -f "$tmpdepfile"
+  ;;
+
+tru64)
+   # The Tru64 compiler uses -MD to generate dependencies as a side
+   # effect.  `cc -MD -o foo.o ...' puts the dependencies into `foo.o.d'.
+   # At least on Alpha/Redhat 6.1, Compaq CCC V6.2-504 seems to put
+   # dependencies in `foo.d' instead, so we check for that too.
+   # Subdirectories are respected.
+   dir=`echo "$object" | sed -e 's|/[^/]*$|/|'`
+   test "x$dir" = "x$object" && dir=
+   base=`echo "$object" | sed -e 's|^.*/||' -e 's/\.o$//' -e 's/\.lo$//'`
+
+   if test "$libtool" = yes; then
+      # With Tru64 cc, shared objects can also be used to make a
+      # static library.  This mecanism is used in libtool 1.4 series to
+      # handle both shared and static libraries in a single compilation.
+      # With libtool 1.4, dependencies were output in $dir.libs/$base.lo.d.
+      #
+      # With libtool 1.5 this exception was removed, and libtool now
+      # generates 2 separate objects for the 2 libraries.  These two
+      # compilations output dependencies in in $dir.libs/$base.o.d and
+      # in $dir$base.o.d.  We have to check for both files, because
+      # one of the two compilations can be disabled.  We should prefer
+      # $dir$base.o.d over $dir.libs/$base.o.d because the latter is
+      # automatically cleaned when .libs/ is deleted, while ignoring
+      # the former would cause a distcleancheck panic.
+      tmpdepfile1=$dir.libs/$base.lo.d   # libtool 1.4
+      tmpdepfile2=$dir$base.o.d          # libtool 1.5
+      tmpdepfile3=$dir.libs/$base.o.d    # libtool 1.5
+      tmpdepfile4=$dir.libs/$base.d      # Compaq CCC V6.2-504
+      "$@" -Wc,-MD
+   else
+      tmpdepfile1=$dir$base.o.d
+      tmpdepfile2=$dir$base.d
+      tmpdepfile3=$dir$base.d
+      tmpdepfile4=$dir$base.d
+      "$@" -MD
+   fi
+
+   stat=$?
+   if test $stat -eq 0; then :
+   else
+      rm -f "$tmpdepfile1" "$tmpdepfile2" "$tmpdepfile3" "$tmpdepfile4"
+      exit $stat
+   fi
+
+   for tmpdepfile in "$tmpdepfile1" "$tmpdepfile2" "$tmpdepfile3" "$tmpdepfile4"
+   do
+     test -f "$tmpdepfile" && break
+   done
+   if test -f "$tmpdepfile"; then
+      sed -e "s,^.*\.[a-z]*:,$object:," < "$tmpdepfile" > "$depfile"
+      # That's a tab and a space in the [].
+      sed -e 's,^.*\.[a-z]*:[	 ]*,,' -e 's,$,:,' < "$tmpdepfile" >> "$depfile"
+   else
+      echo "#dummy" > "$depfile"
+   fi
+   rm -f "$tmpdepfile"
+   ;;
+
+#nosideeffect)
+  # This comment above is used by automake to tell side-effect
+  # dependency tracking mechanisms from slower ones.
+
+dashmstdout)
+  # Important note: in order to support this mode, a compiler *must*
+  # always write the preprocessed file to stdout, regardless of -o.
+  "$@" || exit $?
+
+  # Remove the call to Libtool.
+  if test "$libtool" = yes; then
+    while test $1 != '--mode=compile'; do
+      shift
+    done
+    shift
+  fi
+
+  # Remove `-o $object'.
+  IFS=" "
+  for arg
+  do
+    case $arg in
+    -o)
+      shift
+      ;;
+    $object)
+      shift
+      ;;
+    *)
+      set fnord "$@" "$arg"
+      shift # fnord
+      shift # $arg
+      ;;
+    esac
+  done
+
+  test -z "$dashmflag" && dashmflag=-M
+  # Require at least two characters before searching for `:'
+  # in the target name.  This is to cope with DOS-style filenames:
+  # a dependency such as `c:/foo/bar' could be seen as target `c' otherwise.
+  "$@" $dashmflag |
+    sed 's:^[  ]*[^: ][^:][^:]*\:[    ]*:'"$object"'\: :' > "$tmpdepfile"
+  rm -f "$depfile"
+  cat < "$tmpdepfile" > "$depfile"
+  tr ' ' '
+' < "$tmpdepfile" | \
+## Some versions of the HPUX 10.20 sed can't process this invocation
+## correctly.  Breaking it into two sed invocations is a workaround.
+    sed -e 's/^\\$//' -e '/^$/d' -e '/:$/d' | sed -e 's/$/ :/' >> "$depfile"
+  rm -f "$tmpdepfile"
+  ;;
+
+dashXmstdout)
+  # This case only exists to satisfy depend.m4.  It is never actually
+  # run, as this mode is specially recognized in the preamble.
+  exit 1
+  ;;
+
+makedepend)
+  "$@" || exit $?
+  # Remove any Libtool call
+  if test "$libtool" = yes; then
+    while test $1 != '--mode=compile'; do
+      shift
+    done
+    shift
+  fi
+  # X makedepend
+  shift
+  cleared=no
+  for arg in "$@"; do
+    case $cleared in
+    no)
+      set ""; shift
+      cleared=yes ;;
+    esac
+    case "$arg" in
+    -D*|-I*)
+      set fnord "$@" "$arg"; shift ;;
+    # Strip any option that makedepend may not understand.  Remove
+    # the object too, otherwise makedepend will parse it as a source file.
+    -*|$object)
+      ;;
+    *)
+      set fnord "$@" "$arg"; shift ;;
+    esac
+  done
+  obj_suffix="`echo $object | sed 's/^.*\././'`"
+  touch "$tmpdepfile"
+  ${MAKEDEPEND-makedepend} -o"$obj_suffix" -f"$tmpdepfile" "$@"
+  rm -f "$depfile"
+  cat < "$tmpdepfile" > "$depfile"
+  sed '1,2d' "$tmpdepfile" | tr ' ' '
+' | \
+## Some versions of the HPUX 10.20 sed can't process this invocation
+## correctly.  Breaking it into two sed invocations is a workaround.
+    sed -e 's/^\\$//' -e '/^$/d' -e '/:$/d' | sed -e 's/$/ :/' >> "$depfile"
+  rm -f "$tmpdepfile" "$tmpdepfile".bak
+  ;;
+
+cpp)
+  # Important note: in order to support this mode, a compiler *must*
+  # always write the preprocessed file to stdout.
+  "$@" || exit $?
+
+  # Remove the call to Libtool.
+  if test "$libtool" = yes; then
+    while test $1 != '--mode=compile'; do
+      shift
+    done
+    shift
+  fi
+
+  # Remove `-o $object'.
+  IFS=" "
+  for arg
+  do
+    case $arg in
+    -o)
+      shift
+      ;;
+    $object)
+      shift
+      ;;
+    *)
+      set fnord "$@" "$arg"
+      shift # fnord
+      shift # $arg
+      ;;
+    esac
+  done
+
+  "$@" -E |
+    sed -n -e '/^# [0-9][0-9]* "\([^"]*\)".*/ s:: \1 \\:p' \
+       -e '/^#line [0-9][0-9]* "\([^"]*\)".*/ s:: \1 \\:p' |
+    sed '$ s: \\$::' > "$tmpdepfile"
+  rm -f "$depfile"
+  echo "$object : \\" > "$depfile"
+  cat < "$tmpdepfile" >> "$depfile"
+  sed < "$tmpdepfile" '/^$/d;s/^ //;s/ \\$//;s/$/ :/' >> "$depfile"
+  rm -f "$tmpdepfile"
+  ;;
+
+msvisualcpp)
+  # Important note: in order to support this mode, a compiler *must*
+  # always write the preprocessed file to stdout, regardless of -o,
+  # because we must use -o when running libtool.
+  "$@" || exit $?
+  IFS=" "
+  for arg
+  do
+    case "$arg" in
+    "-Gm"|"/Gm"|"-Gi"|"/Gi"|"-ZI"|"/ZI")
+	set fnord "$@"
+	shift
+	shift
+	;;
+    *)
+	set fnord "$@" "$arg"
+	shift
+	shift
+	;;
+    esac
+  done
+  "$@" -E |
+  sed -n '/^#line [0-9][0-9]* "\([^"]*\)"/ s::echo "`cygpath -u \\"\1\\"`":p' | sort | uniq > "$tmpdepfile"
+  rm -f "$depfile"
+  echo "$object : \\" > "$depfile"
+  . "$tmpdepfile" | sed 's% %\\ %g' | sed -n '/^\(.*\)$/ s::	\1 \\:p' >> "$depfile"
+  echo "	" >> "$depfile"
+  . "$tmpdepfile" | sed 's% %\\ %g' | sed -n '/^\(.*\)$/ s::\1\::p' >> "$depfile"
+  rm -f "$tmpdepfile"
+  ;;
+
+none)
+  exec "$@"
+  ;;
+
+*)
+  echo "Unknown depmode $depmode" 1>&2
+  exit 1
+  ;;
+esac
+
+exit 0
+
+# Local Variables:
+# mode: shell-script
+# sh-indentation: 2
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "scriptversion="
+# time-stamp-format: "%:y-%02m-%02d.%02H"
+# time-stamp-end: "$"
+# End:
diff -r d551623afde5 deps/exmpp/ac-aux/install-sh
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/ac-aux/install-sh	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,323 @@
+#!/bin/sh
+# install - install a program, script, or datafile
+
+scriptversion=2005-05-14.22
+
+# This originates from X11R5 (mit/util/scripts/install.sh), which was
+# later released in X11R6 (xc/config/util/install.sh) with the
+# following copyright and license.
+#
+# Copyright (C) 1994 X Consortium
+#
+# Permission is hereby granted, free of charge, to any person obtaining a copy
+# of this software and associated documentation files (the "Software"), to
+# deal in the Software without restriction, including without limitation the
+# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
+# sell copies of the Software, and to permit persons to whom the Software is
+# furnished to do so, subject to the following conditions:
+#
+# The above copyright notice and this permission notice shall be included in
+# all copies or substantial portions of the Software.
+#
+# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
+# X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
+# AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNEC-
+# TION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+#
+# Except as contained in this notice, the name of the X Consortium shall not
+# be used in advertising or otherwise to promote the sale, use or other deal-
+# ings in this Software without prior written authorization from the X Consor-
+# tium.
+#
+#
+# FSF changes to this file are in the public domain.
+#
+# Calling this script install-sh is preferred over install.sh, to prevent
+# `make' implicit rules from creating a file called install from it
+# when there is no Makefile.
+#
+# This script is compatible with the BSD install script, but was written
+# from scratch.  It can only install one file at a time, a restriction
+# shared with many OS's install programs.
+
+# set DOITPROG to echo to test this script
+
+# Don't use :- since 4.3BSD and earlier shells don't like it.
+doit="${DOITPROG-}"
+
+# put in absolute paths if you don't have them in your path; or use env. vars.
+
+mvprog="${MVPROG-mv}"
+cpprog="${CPPROG-cp}"
+chmodprog="${CHMODPROG-chmod}"
+chownprog="${CHOWNPROG-chown}"
+chgrpprog="${CHGRPPROG-chgrp}"
+stripprog="${STRIPPROG-strip}"
+rmprog="${RMPROG-rm}"
+mkdirprog="${MKDIRPROG-mkdir}"
+
+chmodcmd="$chmodprog 0755"
+chowncmd=
+chgrpcmd=
+stripcmd=
+rmcmd="$rmprog -f"
+mvcmd="$mvprog"
+src=
+dst=
+dir_arg=
+dstarg=
+no_target_directory=
+
+usage="Usage: $0 [OPTION]... [-T] SRCFILE DSTFILE
+   or: $0 [OPTION]... SRCFILES... DIRECTORY
+   or: $0 [OPTION]... -t DIRECTORY SRCFILES...
+   or: $0 [OPTION]... -d DIRECTORIES...
+
+In the 1st form, copy SRCFILE to DSTFILE.
+In the 2nd and 3rd, copy all SRCFILES to DIRECTORY.
+In the 4th, create DIRECTORIES.
+
+Options:
+-c         (ignored)
+-d         create directories instead of installing files.
+-g GROUP   $chgrpprog installed files to GROUP.
+-m MODE    $chmodprog installed files to MODE.
+-o USER    $chownprog installed files to USER.
+-s         $stripprog installed files.
+-t DIRECTORY  install into DIRECTORY.
+-T         report an error if DSTFILE is a directory.
+--help     display this help and exit.
+--version  display version info and exit.
+
+Environment variables override the default commands:
+  CHGRPPROG CHMODPROG CHOWNPROG CPPROG MKDIRPROG MVPROG RMPROG STRIPPROG
+"
+
+while test -n "$1"; do
+  case $1 in
+    -c) shift
+        continue;;
+
+    -d) dir_arg=true
+        shift
+        continue;;
+
+    -g) chgrpcmd="$chgrpprog $2"
+        shift
+        shift
+        continue;;
+
+    --help) echo "$usage"; exit $?;;
+
+    -m) chmodcmd="$chmodprog $2"
+        shift
+        shift
+        continue;;
+
+    -o) chowncmd="$chownprog $2"
+        shift
+        shift
+        continue;;
+
+    -s) stripcmd=$stripprog
+        shift
+        continue;;
+
+    -t) dstarg=$2
+	shift
+	shift
+	continue;;
+
+    -T) no_target_directory=true
+	shift
+	continue;;
+
+    --version) echo "$0 $scriptversion"; exit $?;;
+
+    *)  # When -d is used, all remaining arguments are directories to create.
+	# When -t is used, the destination is already specified.
+	test -n "$dir_arg$dstarg" && break
+        # Otherwise, the last argument is the destination.  Remove it from $@.
+	for arg
+	do
+          if test -n "$dstarg"; then
+	    # $@ is not empty: it contains at least $arg.
+	    set fnord "$@" "$dstarg"
+	    shift # fnord
+	  fi
+	  shift # arg
+	  dstarg=$arg
+	done
+	break;;
+  esac
+done
+
+if test -z "$1"; then
+  if test -z "$dir_arg"; then
+    echo "$0: no input file specified." >&2
+    exit 1
+  fi
+  # It's OK to call `install-sh -d' without argument.
+  # This can happen when creating conditional directories.
+  exit 0
+fi
+
+for src
+do
+  # Protect names starting with `-'.
+  case $src in
+    -*) src=./$src ;;
+  esac
+
+  if test -n "$dir_arg"; then
+    dst=$src
+    src=
+
+    if test -d "$dst"; then
+      mkdircmd=:
+      chmodcmd=
+    else
+      mkdircmd=$mkdirprog
+    fi
+  else
+    # Waiting for this to be detected by the "$cpprog $src $dsttmp" command
+    # might cause directories to be created, which would be especially bad
+    # if $src (and thus $dsttmp) contains '*'.
+    if test ! -f "$src" && test ! -d "$src"; then
+      echo "$0: $src does not exist." >&2
+      exit 1
+    fi
+
+    if test -z "$dstarg"; then
+      echo "$0: no destination specified." >&2
+      exit 1
+    fi
+
+    dst=$dstarg
+    # Protect names starting with `-'.
+    case $dst in
+      -*) dst=./$dst ;;
+    esac
+
+    # If destination is a directory, append the input filename; won't work
+    # if double slashes aren't ignored.
+    if test -d "$dst"; then
+      if test -n "$no_target_directory"; then
+	echo "$0: $dstarg: Is a directory" >&2
+	exit 1
+      fi
+      dst=$dst/`basename "$src"`
+    fi
+  fi
+
+  # This sed command emulates the dirname command.
+  dstdir=`echo "$dst" | sed -e 's,/*$,,;s,[^/]*$,,;s,/*$,,;s,^$,.,'`
+
+  # Make sure that the destination directory exists.
+
+  # Skip lots of stat calls in the usual case.
+  if test ! -d "$dstdir"; then
+    defaultIFS='
+	 '
+    IFS="${IFS-$defaultIFS}"
+
+    oIFS=$IFS
+    # Some sh's can't handle IFS=/ for some reason.
+    IFS='%'
+    set x `echo "$dstdir" | sed -e 's@/@%@g' -e 's@^%@/@'`
+    shift
+    IFS=$oIFS
+
+    pathcomp=
+
+    while test $# -ne 0 ; do
+      pathcomp=$pathcomp$1
+      shift
+      if test ! -d "$pathcomp"; then
+        $mkdirprog "$pathcomp"
+	# mkdir can fail with a `File exist' error in case several
+	# install-sh are creating the directory concurrently.  This
+	# is OK.
+	test -d "$pathcomp" || exit
+      fi
+      pathcomp=$pathcomp/
+    done
+  fi
+
+  if test -n "$dir_arg"; then
+    $doit $mkdircmd "$dst" \
+      && { test -z "$chowncmd" || $doit $chowncmd "$dst"; } \
+      && { test -z "$chgrpcmd" || $doit $chgrpcmd "$dst"; } \
+      && { test -z "$stripcmd" || $doit $stripcmd "$dst"; } \
+      && { test -z "$chmodcmd" || $doit $chmodcmd "$dst"; }
+
+  else
+    dstfile=`basename "$dst"`
+
+    # Make a couple of temp file names in the proper directory.
+    dsttmp=$dstdir/_inst.$$_
+    rmtmp=$dstdir/_rm.$$_
+
+    # Trap to clean up those temp files at exit.
+    trap 'ret=$?; rm -f "$dsttmp" "$rmtmp" && exit $ret' 0
+    trap '(exit $?); exit' 1 2 13 15
+
+    # Copy the file name to the temp name.
+    $doit $cpprog "$src" "$dsttmp" &&
+
+    # and set any options; do chmod last to preserve setuid bits.
+    #
+    # If any of these fail, we abort the whole thing.  If we want to
+    # ignore errors from any of these, just make sure not to ignore
+    # errors from the above "$doit $cpprog $src $dsttmp" command.
+    #
+    { test -z "$chowncmd" || $doit $chowncmd "$dsttmp"; } \
+      && { test -z "$chgrpcmd" || $doit $chgrpcmd "$dsttmp"; } \
+      && { test -z "$stripcmd" || $doit $stripcmd "$dsttmp"; } \
+      && { test -z "$chmodcmd" || $doit $chmodcmd "$dsttmp"; } &&
+
+    # Now rename the file to the real destination.
+    { $doit $mvcmd -f "$dsttmp" "$dstdir/$dstfile" 2>/dev/null \
+      || {
+	   # The rename failed, perhaps because mv can't rename something else
+	   # to itself, or perhaps because mv is so ancient that it does not
+	   # support -f.
+
+	   # Now remove or move aside any old file at destination location.
+	   # We try this two ways since rm can't unlink itself on some
+	   # systems and the destination file might be busy for other
+	   # reasons.  In this case, the final cleanup might fail but the new
+	   # file should still install successfully.
+	   {
+	     if test -f "$dstdir/$dstfile"; then
+	       $doit $rmcmd -f "$dstdir/$dstfile" 2>/dev/null \
+	       || $doit $mvcmd -f "$dstdir/$dstfile" "$rmtmp" 2>/dev/null \
+	       || {
+		 echo "$0: cannot unlink or rename $dstdir/$dstfile" >&2
+		 (exit 1); exit 1
+	       }
+	     else
+	       :
+	     fi
+	   } &&
+
+	   # Now rename the file to the real destination.
+	   $doit $mvcmd "$dsttmp" "$dstdir/$dstfile"
+	 }
+    }
+  fi || { (exit 1); exit 1; }
+done
+
+# The final little trick to "correctly" pass the exit status to the exit trap.
+{
+  (exit 0); exit 0
+}
+
+# Local variables:
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "scriptversion="
+# time-stamp-format: "%:y-%02m-%02d.%02H"
+# time-stamp-end: "$"
+# End:
diff -r d551623afde5 deps/exmpp/ac-aux/ltmain.sh
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/ac-aux/ltmain.sh	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,6871 @@
+# ltmain.sh - Provide generalized library-building support services.
+# NOTE: Changing this file will not affect anything until you rerun configure.
+#
+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005
+# Free Software Foundation, Inc.
+# Originally by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+#
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+basename="s,^.*/,,g"
+
+# Work around backward compatibility issue on IRIX 6.5. On IRIX 6.4+, sh
+# is ksh but when the shell is invoked as "sh" and the current value of
+# the _XPG environment variable is not equal to 1 (one), the special
+# positional parameter $0, within a function call, is the name of the
+# function.
+progpath="$0"
+
+# The name of this program:
+progname=`echo "$progpath" | $SED $basename`
+modename="$progname"
+
+# Global variables:
+EXIT_SUCCESS=0
+EXIT_FAILURE=1
+
+PROGRAM=ltmain.sh
+PACKAGE=libtool
+VERSION="1.5.22 Debian 1.5.22-4+etch1"
+TIMESTAMP=" (1.1220.2.365 2005/12/18 22:14:06)"
+
+# See if we are running on zsh, and set the options which allow our
+# commands through without removal of \ escapes.
+if test -n "${ZSH_VERSION+set}" ; then
+  setopt NO_GLOB_SUBST
+fi
+
+# Check that we have a working $echo.
+if test "X$1" = X--no-reexec; then
+  # Discard the --no-reexec flag, and continue.
+  shift
+elif test "X$1" = X--fallback-echo; then
+  # Avoid inline document here, it may be left over
+  :
+elif test "X`($echo '\t') 2>/dev/null`" = 'X\t'; then
+  # Yippee, $echo works!
+  :
+else
+  # Restart under the correct shell, and then maybe $echo will work.
+  exec $SHELL "$progpath" --no-reexec ${1+"$@"}
+fi
+
+if test "X$1" = X--fallback-echo; then
+  # used as fallback echo
+  shift
+  cat <<EOF
+$*
+EOF
+  exit $EXIT_SUCCESS
+fi
+
+default_mode=
+help="Try \`$progname --help' for more information."
+magic="%%%MAGIC variable%%%"
+mkdir="mkdir"
+mv="mv -f"
+rm="rm -f"
+
+# Sed substitution that helps us do robust quoting.  It backslashifies
+# metacharacters that are still active within double-quoted strings.
+Xsed="${SED}"' -e 1s/^X//'
+sed_quote_subst='s/\([\\`\\"$\\\\]\)/\\\1/g'
+# test EBCDIC or ASCII
+case `echo X|tr X '\101'` in
+ A) # ASCII based system
+    # \n is not interpreted correctly by Solaris 8 /usr/ucb/tr
+  SP2NL='tr \040 \012'
+  NL2SP='tr \015\012 \040\040'
+  ;;
+ *) # EBCDIC based system
+  SP2NL='tr \100 \n'
+  NL2SP='tr \r\n \100\100'
+  ;;
+esac
+
+# NLS nuisances.
+# Only set LANG and LC_ALL to C if already set.
+# These must not be set unconditionally because not all systems understand
+# e.g. LANG=C (notably SCO).
+# We save the old values to restore during execute mode.
+if test "${LC_ALL+set}" = set; then
+  save_LC_ALL="$LC_ALL"; LC_ALL=C; export LC_ALL
+fi
+if test "${LANG+set}" = set; then
+  save_LANG="$LANG"; LANG=C; export LANG
+fi
+
+# Make sure IFS has a sensible default
+lt_nl='
+'
+IFS=" 	$lt_nl"
+
+if test "$build_libtool_libs" != yes && test "$build_old_libs" != yes; then
+  $echo "$modename: not configured to build any kind of library" 1>&2
+  $echo "Fatal configuration error.  See the $PACKAGE docs for more information." 1>&2
+  exit $EXIT_FAILURE
+fi
+
+# Global variables.
+mode=$default_mode
+nonopt=
+prev=
+prevopt=
+run=
+show="$echo"
+show_help=
+execute_dlfiles=
+duplicate_deps=no
+preserve_args=
+lo2o="s/\\.lo\$/.${objext}/"
+o2lo="s/\\.${objext}\$/.lo/"
+
+#####################################
+# Shell function definitions:
+# This seems to be the best place for them
+
+# func_mktempdir [string]
+# Make a temporary directory that won't clash with other running
+# libtool processes, and avoids race conditions if possible.  If
+# given, STRING is the basename for that directory.
+func_mktempdir ()
+{
+    my_template="${TMPDIR-/tmp}/${1-$progname}"
+
+    if test "$run" = ":"; then
+      # Return a directory name, but don't create it in dry-run mode
+      my_tmpdir="${my_template}-$$"
+    else
+
+      # If mktemp works, use that first and foremost
+      my_tmpdir=`mktemp -d "${my_template}-XXXXXXXX" 2>/dev/null`
+
+      if test ! -d "$my_tmpdir"; then
+	# Failing that, at least try and use $RANDOM to avoid a race
+	my_tmpdir="${my_template}-${RANDOM-0}$$"
+
+	save_mktempdir_umask=`umask`
+	umask 0077
+	$mkdir "$my_tmpdir"
+	umask $save_mktempdir_umask
+      fi
+
+      # If we're not in dry-run mode, bomb out on failure
+      test -d "$my_tmpdir" || {
+        $echo "cannot create temporary directory \`$my_tmpdir'" 1>&2
+	exit $EXIT_FAILURE
+      }
+    fi
+
+    $echo "X$my_tmpdir" | $Xsed
+}
+
+
+# func_win32_libid arg
+# return the library type of file 'arg'
+#
+# Need a lot of goo to handle *both* DLLs and import libs
+# Has to be a shell function in order to 'eat' the argument
+# that is supplied when $file_magic_command is called.
+func_win32_libid ()
+{
+  win32_libid_type="unknown"
+  win32_fileres=`file -L $1 2>/dev/null`
+  case $win32_fileres in
+  *ar\ archive\ import\ library*) # definitely import
+    win32_libid_type="x86 archive import"
+    ;;
+  *ar\ archive*) # could be an import, or static
+    if eval $OBJDUMP -f $1 | $SED -e '10q' 2>/dev/null | \
+      $EGREP -e 'file format pe-i386(.*architecture: i386)?' >/dev/null ; then
+      win32_nmres=`eval $NM -f posix -A $1 | \
+	$SED -n -e '1,100{/ I /{s,.*,import,;p;q;};}'`
+      case $win32_nmres in
+      import*)  win32_libid_type="x86 archive import";;
+      *)        win32_libid_type="x86 archive static";;
+      esac
+    fi
+    ;;
+  *DLL*)
+    win32_libid_type="x86 DLL"
+    ;;
+  *executable*) # but shell scripts are "executable" too...
+    case $win32_fileres in
+    *MS\ Windows\ PE\ Intel*)
+      win32_libid_type="x86 DLL"
+      ;;
+    esac
+    ;;
+  esac
+  $echo $win32_libid_type
+}
+
+
+# func_infer_tag arg
+# Infer tagged configuration to use if any are available and
+# if one wasn't chosen via the "--tag" command line option.
+# Only attempt this if the compiler in the base compile
+# command doesn't match the default compiler.
+# arg is usually of the form 'gcc ...'
+func_infer_tag ()
+{
+    if test -n "$available_tags" && test -z "$tagname"; then
+      CC_quoted=
+      for arg in $CC; do
+	case $arg in
+	  *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	  arg="\"$arg\""
+	  ;;
+	esac
+	CC_quoted="$CC_quoted $arg"
+      done
+      case $@ in
+      # Blanks in the command may have been stripped by the calling shell,
+      # but not from the CC environment variable when configure was run.
+      " $CC "* | "$CC "* | " `$echo $CC` "* | "`$echo $CC` "* | " $CC_quoted"* | "$CC_quoted "* | " `$echo $CC_quoted` "* | "`$echo $CC_quoted` "*) ;;
+      # Blanks at the start of $base_compile will cause this to fail
+      # if we don't check for them as well.
+      *)
+	for z in $available_tags; do
+	  if grep "^# ### BEGIN LIBTOOL TAG CONFIG: $z$" < "$progpath" > /dev/null; then
+	    # Evaluate the configuration.
+	    eval "`${SED} -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^# ### END LIBTOOL TAG CONFIG: '$z'$/p' < $progpath`"
+	    CC_quoted=
+	    for arg in $CC; do
+	    # Double-quote args containing other shell metacharacters.
+	    case $arg in
+	      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	      arg="\"$arg\""
+	      ;;
+	    esac
+	    CC_quoted="$CC_quoted $arg"
+	  done
+	    case "$@ " in
+	      " $CC "* | "$CC "* | " `$echo $CC` "* | "`$echo $CC` "* | " $CC_quoted"* | "$CC_quoted "* | " `$echo $CC_quoted` "* | "`$echo $CC_quoted` "*)
+	      # The compiler in the base compile command matches
+	      # the one in the tagged configuration.
+	      # Assume this is the tagged configuration we want.
+	      tagname=$z
+	      break
+	      ;;
+	    esac
+	  fi
+	done
+	# If $tagname still isn't set, then no tagged configuration
+	# was found and let the user know that the "--tag" command
+	# line option must be used.
+	if test -z "$tagname"; then
+	  $echo "$modename: unable to infer tagged configuration"
+	  $echo "$modename: specify a tag with \`--tag'" 1>&2
+	  exit $EXIT_FAILURE
+#        else
+#          $echo "$modename: using $tagname tagged configuration"
+	fi
+	;;
+      esac
+    fi
+}
+
+
+# func_extract_an_archive dir oldlib
+func_extract_an_archive ()
+{
+    f_ex_an_ar_dir="$1"; shift
+    f_ex_an_ar_oldlib="$1"
+
+    $show "(cd $f_ex_an_ar_dir && $AR x $f_ex_an_ar_oldlib)"
+    $run eval "(cd \$f_ex_an_ar_dir && $AR x \$f_ex_an_ar_oldlib)" || exit $?
+    if ($AR t "$f_ex_an_ar_oldlib" | sort | sort -uc >/dev/null 2>&1); then
+     :
+    else
+      $echo "$modename: ERROR: object name conflicts: $f_ex_an_ar_dir/$f_ex_an_ar_oldlib" 1>&2
+      exit $EXIT_FAILURE
+    fi
+}
+
+# func_extract_archives gentop oldlib ...
+func_extract_archives ()
+{
+    my_gentop="$1"; shift
+    my_oldlibs=${1+"$@"}
+    my_oldobjs=""
+    my_xlib=""
+    my_xabs=""
+    my_xdir=""
+    my_status=""
+
+    $show "${rm}r $my_gentop"
+    $run ${rm}r "$my_gentop"
+    $show "$mkdir $my_gentop"
+    $run $mkdir "$my_gentop"
+    my_status=$?
+    if test "$my_status" -ne 0 && test ! -d "$my_gentop"; then
+      exit $my_status
+    fi
+
+    for my_xlib in $my_oldlibs; do
+      # Extract the objects.
+      case $my_xlib in
+	[\\/]* | [A-Za-z]:[\\/]*) my_xabs="$my_xlib" ;;
+	*) my_xabs=`pwd`"/$my_xlib" ;;
+      esac
+      my_xlib=`$echo "X$my_xlib" | $Xsed -e 's%^.*/%%'`
+      my_xdir="$my_gentop/$my_xlib"
+
+      $show "${rm}r $my_xdir"
+      $run ${rm}r "$my_xdir"
+      $show "$mkdir $my_xdir"
+      $run $mkdir "$my_xdir"
+      exit_status=$?
+      if test "$exit_status" -ne 0 && test ! -d "$my_xdir"; then
+	exit $exit_status
+      fi
+      case $host in
+      *-darwin*)
+	$show "Extracting $my_xabs"
+	# Do not bother doing anything if just a dry run
+	if test -z "$run"; then
+	  darwin_orig_dir=`pwd`
+	  cd $my_xdir || exit $?
+	  darwin_archive=$my_xabs
+	  darwin_curdir=`pwd`
+	  darwin_base_archive=`$echo "X$darwin_archive" | $Xsed -e 's%^.*/%%'`
+	  darwin_arches=`lipo -info "$darwin_archive" 2>/dev/null | $EGREP Architectures 2>/dev/null`
+	  if test -n "$darwin_arches"; then 
+	    darwin_arches=`echo "$darwin_arches" | $SED -e 's/.*are://'`
+	    darwin_arch=
+	    $show "$darwin_base_archive has multiple architectures $darwin_arches"
+	    for darwin_arch in  $darwin_arches ; do
+	      mkdir -p "unfat-$$/${darwin_base_archive}-${darwin_arch}"
+	      lipo -thin $darwin_arch -output "unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}" "${darwin_archive}"
+	      cd "unfat-$$/${darwin_base_archive}-${darwin_arch}"
+	      func_extract_an_archive "`pwd`" "${darwin_base_archive}"
+	      cd "$darwin_curdir"
+	      $rm "unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}"
+	    done # $darwin_arches
+      ## Okay now we have a bunch of thin objects, gotta fatten them up :)
+	    darwin_filelist=`find unfat-$$ -type f -name \*.o -print -o -name \*.lo -print| xargs basename | sort -u | $NL2SP`
+	    darwin_file=
+	    darwin_files=
+	    for darwin_file in $darwin_filelist; do
+	      darwin_files=`find unfat-$$ -name $darwin_file -print | $NL2SP`
+	      lipo -create -output "$darwin_file" $darwin_files
+	    done # $darwin_filelist
+	    ${rm}r unfat-$$
+	    cd "$darwin_orig_dir"
+	  else
+	    cd "$darwin_orig_dir"
+ 	    func_extract_an_archive "$my_xdir" "$my_xabs"
+	  fi # $darwin_arches
+	fi # $run
+	;;
+      *)
+        func_extract_an_archive "$my_xdir" "$my_xabs"
+        ;;
+      esac
+      my_oldobjs="$my_oldobjs "`find $my_xdir -name \*.$objext -print -o -name \*.lo -print | $NL2SP`
+    done
+    func_extract_archives_result="$my_oldobjs"
+}
+# End of Shell function definitions
+#####################################
+
+# Darwin sucks
+eval std_shrext=\"$shrext_cmds\"
+
+disable_libs=no
+
+# Parse our command line options once, thoroughly.
+while test "$#" -gt 0
+do
+  arg="$1"
+  shift
+
+  case $arg in
+  -*=*) optarg=`$echo "X$arg" | $Xsed -e 's/[-_a-zA-Z0-9]*=//'` ;;
+  *) optarg= ;;
+  esac
+
+  # If the previous option needs an argument, assign it.
+  if test -n "$prev"; then
+    case $prev in
+    execute_dlfiles)
+      execute_dlfiles="$execute_dlfiles $arg"
+      ;;
+    tag)
+      tagname="$arg"
+      preserve_args="${preserve_args}=$arg"
+
+      # Check whether tagname contains only valid characters
+      case $tagname in
+      *[!-_A-Za-z0-9,/]*)
+	$echo "$progname: invalid tag name: $tagname" 1>&2
+	exit $EXIT_FAILURE
+	;;
+      esac
+
+      case $tagname in
+      CC)
+	# Don't test for the "default" C tag, as we know, it's there, but
+	# not specially marked.
+	;;
+      *)
+	if grep "^# ### BEGIN LIBTOOL TAG CONFIG: $tagname$" < "$progpath" > /dev/null; then
+	  taglist="$taglist $tagname"
+	  # Evaluate the configuration.
+	  eval "`${SED} -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$tagname'$/,/^# ### END LIBTOOL TAG CONFIG: '$tagname'$/p' < $progpath`"
+	else
+	  $echo "$progname: ignoring unknown tag $tagname" 1>&2
+	fi
+	;;
+      esac
+      ;;
+    *)
+      eval "$prev=\$arg"
+      ;;
+    esac
+
+    prev=
+    prevopt=
+    continue
+  fi
+
+  # Have we seen a non-optional argument yet?
+  case $arg in
+  --help)
+    show_help=yes
+    ;;
+
+  --version)
+    $echo "$PROGRAM (GNU $PACKAGE) $VERSION$TIMESTAMP"
+    $echo
+    $echo "Copyright (C) 2005  Free Software Foundation, Inc."
+    $echo "This is free software; see the source for copying conditions.  There is NO"
+    $echo "warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
+    exit $?
+    ;;
+
+  --config)
+    ${SED} -e '1,/^# ### BEGIN LIBTOOL CONFIG/d' -e '/^# ### END LIBTOOL CONFIG/,$d' $progpath
+    # Now print the configurations for the tags.
+    for tagname in $taglist; do
+      ${SED} -n -e "/^# ### BEGIN LIBTOOL TAG CONFIG: $tagname$/,/^# ### END LIBTOOL TAG CONFIG: $tagname$/p" < "$progpath"
+    done
+    exit $?
+    ;;
+
+  --debug)
+    $echo "$progname: enabling shell trace mode"
+    set -x
+    preserve_args="$preserve_args $arg"
+    ;;
+
+  --dry-run | -n)
+    run=:
+    ;;
+
+  --features)
+    $echo "host: $host"
+    if test "$build_libtool_libs" = yes; then
+      $echo "enable shared libraries"
+    else
+      $echo "disable shared libraries"
+    fi
+    if test "$build_old_libs" = yes; then
+      $echo "enable static libraries"
+    else
+      $echo "disable static libraries"
+    fi
+    exit $?
+    ;;
+
+  --finish) mode="finish" ;;
+
+  --mode) prevopt="--mode" prev=mode ;;
+  --mode=*) mode="$optarg" ;;
+
+  --preserve-dup-deps) duplicate_deps="yes" ;;
+
+  --quiet | --silent)
+    show=:
+    preserve_args="$preserve_args $arg"
+    ;;
+
+  --tag)
+    prevopt="--tag"
+    prev=tag
+    preserve_args="$preserve_args --tag"
+    ;;
+  --tag=*)
+    set tag "$optarg" ${1+"$@"}
+    shift
+    prev=tag
+    preserve_args="$preserve_args --tag"
+    ;;
+
+  -dlopen)
+    prevopt="-dlopen"
+    prev=execute_dlfiles
+    ;;
+
+  -*)
+    $echo "$modename: unrecognized option \`$arg'" 1>&2
+    $echo "$help" 1>&2
+    exit $EXIT_FAILURE
+    ;;
+
+  *)
+    nonopt="$arg"
+    break
+    ;;
+  esac
+done
+
+if test -n "$prevopt"; then
+  $echo "$modename: option \`$prevopt' requires an argument" 1>&2
+  $echo "$help" 1>&2
+  exit $EXIT_FAILURE
+fi
+
+case $disable_libs in
+no) 
+  ;;
+shared)
+  build_libtool_libs=no
+  build_old_libs=yes
+  ;;
+static)
+  build_old_libs=`case $build_libtool_libs in yes) echo no;; *) echo yes;; esac`
+  ;;
+esac
+
+# If this variable is set in any of the actions, the command in it
+# will be execed at the end.  This prevents here-documents from being
+# left over by shells.
+exec_cmd=
+
+if test -z "$show_help"; then
+
+  # Infer the operation mode.
+  if test -z "$mode"; then
+    $echo "*** Warning: inferring the mode of operation is deprecated." 1>&2
+    $echo "*** Future versions of Libtool will require --mode=MODE be specified." 1>&2
+    case $nonopt in
+    *cc | cc* | *++ | gcc* | *-gcc* | g++* | xlc*)
+      mode=link
+      for arg
+      do
+	case $arg in
+	-c)
+	   mode=compile
+	   break
+	   ;;
+	esac
+      done
+      ;;
+    *db | *dbx | *strace | *truss)
+      mode=execute
+      ;;
+    *install*|cp|mv)
+      mode=install
+      ;;
+    *rm)
+      mode=uninstall
+      ;;
+    *)
+      # If we have no mode, but dlfiles were specified, then do execute mode.
+      test -n "$execute_dlfiles" && mode=execute
+
+      # Just use the default operation mode.
+      if test -z "$mode"; then
+	if test -n "$nonopt"; then
+	  $echo "$modename: warning: cannot infer operation mode from \`$nonopt'" 1>&2
+	else
+	  $echo "$modename: warning: cannot infer operation mode without MODE-ARGS" 1>&2
+	fi
+      fi
+      ;;
+    esac
+  fi
+
+  # Only execute mode is allowed to have -dlopen flags.
+  if test -n "$execute_dlfiles" && test "$mode" != execute; then
+    $echo "$modename: unrecognized option \`-dlopen'" 1>&2
+    $echo "$help" 1>&2
+    exit $EXIT_FAILURE
+  fi
+
+  # Change the help message to a mode-specific one.
+  generic_help="$help"
+  help="Try \`$modename --help --mode=$mode' for more information."
+
+  # These modes are in order of execution frequency so that they run quickly.
+  case $mode in
+  # libtool compile mode
+  compile)
+    modename="$modename: compile"
+    # Get the compilation command and the source file.
+    base_compile=
+    srcfile="$nonopt"  #  always keep a non-empty value in "srcfile"
+    suppress_opt=yes
+    suppress_output=
+    arg_mode=normal
+    libobj=
+    later=
+
+    for arg
+    do
+      case $arg_mode in
+      arg  )
+	# do not "continue".  Instead, add this to base_compile
+	lastarg="$arg"
+	arg_mode=normal
+	;;
+
+      target )
+	libobj="$arg"
+	arg_mode=normal
+	continue
+	;;
+
+      normal )
+	# Accept any command-line options.
+	case $arg in
+	-o)
+	  if test -n "$libobj" ; then
+	    $echo "$modename: you cannot specify \`-o' more than once" 1>&2
+	    exit $EXIT_FAILURE
+	  fi
+	  arg_mode=target
+	  continue
+	  ;;
+
+	-static | -prefer-pic | -prefer-non-pic)
+	  later="$later $arg"
+	  continue
+	  ;;
+
+	-no-suppress)
+	  suppress_opt=no
+	  continue
+	  ;;
+
+	-Xcompiler)
+	  arg_mode=arg  #  the next one goes into the "base_compile" arg list
+	  continue      #  The current "srcfile" will either be retained or
+	  ;;            #  replaced later.  I would guess that would be a bug.
+
+	-Wc,*)
+	  args=`$echo "X$arg" | $Xsed -e "s/^-Wc,//"`
+	  lastarg=
+	  save_ifs="$IFS"; IFS=','
+ 	  for arg in $args; do
+	    IFS="$save_ifs"
+
+	    # Double-quote args containing other shell metacharacters.
+	    # Many Bourne shells cannot handle close brackets correctly
+	    # in scan sets, so we specify it separately.
+	    case $arg in
+	      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	      arg="\"$arg\""
+	      ;;
+	    esac
+	    lastarg="$lastarg $arg"
+	  done
+	  IFS="$save_ifs"
+	  lastarg=`$echo "X$lastarg" | $Xsed -e "s/^ //"`
+
+	  # Add the arguments to base_compile.
+	  base_compile="$base_compile $lastarg"
+	  continue
+	  ;;
+
+	* )
+	  # Accept the current argument as the source file.
+	  # The previous "srcfile" becomes the current argument.
+	  #
+	  lastarg="$srcfile"
+	  srcfile="$arg"
+	  ;;
+	esac  #  case $arg
+	;;
+      esac    #  case $arg_mode
+
+      # Aesthetically quote the previous argument.
+      lastarg=`$echo "X$lastarg" | $Xsed -e "$sed_quote_subst"`
+
+      case $lastarg in
+      # Double-quote args containing other shell metacharacters.
+      # Many Bourne shells cannot handle close brackets correctly
+      # in scan sets, and some SunOS ksh mistreat backslash-escaping
+      # in scan sets (worked around with variable expansion),
+      # and furthermore cannot handle '|' '&' '(' ')' in scan sets 
+      # at all, so we specify them separately.
+      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	lastarg="\"$lastarg\""
+	;;
+      esac
+
+      base_compile="$base_compile $lastarg"
+    done # for arg
+
+    case $arg_mode in
+    arg)
+      $echo "$modename: you must specify an argument for -Xcompile"
+      exit $EXIT_FAILURE
+      ;;
+    target)
+      $echo "$modename: you must specify a target with \`-o'" 1>&2
+      exit $EXIT_FAILURE
+      ;;
+    *)
+      # Get the name of the library object.
+      [ -z "$libobj" ] && libobj=`$echo "X$srcfile" | $Xsed -e 's%^.*/%%'`
+      ;;
+    esac
+
+    # Recognize several different file suffixes.
+    # If the user specifies -o file.o, it is replaced with file.lo
+    xform='[cCFSifmso]'
+    case $libobj in
+    *.ada) xform=ada ;;
+    *.adb) xform=adb ;;
+    *.ads) xform=ads ;;
+    *.asm) xform=asm ;;
+    *.c++) xform=c++ ;;
+    *.cc) xform=cc ;;
+    *.ii) xform=ii ;;
+    *.class) xform=class ;;
+    *.cpp) xform=cpp ;;
+    *.cxx) xform=cxx ;;
+    *.f90) xform=f90 ;;
+    *.for) xform=for ;;
+    *.java) xform=java ;;
+    esac
+
+    libobj=`$echo "X$libobj" | $Xsed -e "s/\.$xform$/.lo/"`
+
+    case $libobj in
+    *.lo) obj=`$echo "X$libobj" | $Xsed -e "$lo2o"` ;;
+    *)
+      $echo "$modename: cannot determine name of library object from \`$libobj'" 1>&2
+      exit $EXIT_FAILURE
+      ;;
+    esac
+
+    func_infer_tag $base_compile
+
+    for arg in $later; do
+      case $arg in
+      -static)
+	build_old_libs=yes
+	continue
+	;;
+
+      -prefer-pic)
+	pic_mode=yes
+	continue
+	;;
+
+      -prefer-non-pic)
+	pic_mode=no
+	continue
+	;;
+      esac
+    done
+
+    qlibobj=`$echo "X$libobj" | $Xsed -e "$sed_quote_subst"`
+    case $qlibobj in
+      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	qlibobj="\"$qlibobj\"" ;;
+    esac
+    test "X$libobj" != "X$qlibobj" \
+	&& $echo "X$libobj" | grep '[]~#^*{};<>?"'"'"' 	&()|`$[]' \
+	&& $echo "$modename: libobj name \`$libobj' may not contain shell special characters."
+    objname=`$echo "X$obj" | $Xsed -e 's%^.*/%%'`
+    xdir=`$echo "X$obj" | $Xsed -e 's%/[^/]*$%%'`
+    if test "X$xdir" = "X$obj"; then
+      xdir=
+    else
+      xdir=$xdir/
+    fi
+    lobj=${xdir}$objdir/$objname
+
+    if test -z "$base_compile"; then
+      $echo "$modename: you must specify a compilation command" 1>&2
+      $echo "$help" 1>&2
+      exit $EXIT_FAILURE
+    fi
+
+    # Delete any leftover library objects.
+    if test "$build_old_libs" = yes; then
+      removelist="$obj $lobj $libobj ${libobj}T"
+    else
+      removelist="$lobj $libobj ${libobj}T"
+    fi
+
+    $run $rm $removelist
+    trap "$run $rm $removelist; exit $EXIT_FAILURE" 1 2 15
+
+    # On Cygwin there's no "real" PIC flag so we must build both object types
+    case $host_os in
+    cygwin* | mingw* | pw32* | os2*)
+      pic_mode=default
+      ;;
+    esac
+    if test "$pic_mode" = no && test "$deplibs_check_method" != pass_all; then
+      # non-PIC code in shared libraries is not supported
+      pic_mode=default
+    fi
+
+    # Calculate the filename of the output object if compiler does
+    # not support -o with -c
+    if test "$compiler_c_o" = no; then
+      output_obj=`$echo "X$srcfile" | $Xsed -e 's%^.*/%%' -e 's%\.[^.]*$%%'`.${objext}
+      lockfile="$output_obj.lock"
+      removelist="$removelist $output_obj $lockfile"
+      trap "$run $rm $removelist; exit $EXIT_FAILURE" 1 2 15
+    else
+      output_obj=
+      need_locks=no
+      lockfile=
+    fi
+
+    # Lock this critical section if it is needed
+    # We use this script file to make the link, it avoids creating a new file
+    if test "$need_locks" = yes; then
+      until $run ln "$progpath" "$lockfile" 2>/dev/null; do
+	$show "Waiting for $lockfile to be removed"
+	sleep 2
+      done
+    elif test "$need_locks" = warn; then
+      if test -f "$lockfile"; then
+	$echo "\
+*** ERROR, $lockfile exists and contains:
+`cat $lockfile 2>/dev/null`
+
+This indicates that another process is trying to use the same
+temporary object file, and libtool could not work around it because
+your compiler does not support \`-c' and \`-o' together.  If you
+repeat this compilation, it may succeed, by chance, but you had better
+avoid parallel builds (make -j) in this platform, or get a better
+compiler."
+
+	$run $rm $removelist
+	exit $EXIT_FAILURE
+      fi
+      $echo "$srcfile" > "$lockfile"
+    fi
+
+    if test -n "$fix_srcfile_path"; then
+      eval srcfile=\"$fix_srcfile_path\"
+    fi
+    qsrcfile=`$echo "X$srcfile" | $Xsed -e "$sed_quote_subst"`
+    case $qsrcfile in
+      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+      qsrcfile="\"$qsrcfile\"" ;;
+    esac
+
+    $run $rm "$libobj" "${libobj}T"
+
+    # Create a libtool object file (analogous to a ".la" file),
+    # but don't create it if we're doing a dry run.
+    test -z "$run" && cat > ${libobj}T <<EOF
+# $libobj - a libtool object file
+# Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP
+#
+# Please DO NOT delete this file!
+# It is necessary for linking the library.
+
+# Name of the PIC object.
+EOF
+
+    # Only build a PIC object if we are building libtool libraries.
+    if test "$build_libtool_libs" = yes; then
+      # Without this assignment, base_compile gets emptied.
+      fbsd_hideous_sh_bug=$base_compile
+
+      if test "$pic_mode" != no; then
+	command="$base_compile $qsrcfile $pic_flag"
+      else
+	# Don't build PIC code
+	command="$base_compile $qsrcfile"
+      fi
+
+      if test ! -d "${xdir}$objdir"; then
+	$show "$mkdir ${xdir}$objdir"
+	$run $mkdir ${xdir}$objdir
+	exit_status=$?
+	if test "$exit_status" -ne 0 && test ! -d "${xdir}$objdir"; then
+	  exit $exit_status
+	fi
+      fi
+
+      if test -z "$output_obj"; then
+	# Place PIC objects in $objdir
+	command="$command -o $lobj"
+      fi
+
+      $run $rm "$lobj" "$output_obj"
+
+      $show "$command"
+      if $run eval "$command"; then :
+      else
+	test -n "$output_obj" && $run $rm $removelist
+	exit $EXIT_FAILURE
+      fi
+
+      if test "$need_locks" = warn &&
+	 test "X`cat $lockfile 2>/dev/null`" != "X$srcfile"; then
+	$echo "\
+*** ERROR, $lockfile contains:
+`cat $lockfile 2>/dev/null`
+
+but it should contain:
+$srcfile
+
+This indicates that another process is trying to use the same
+temporary object file, and libtool could not work around it because
+your compiler does not support \`-c' and \`-o' together.  If you
+repeat this compilation, it may succeed, by chance, but you had better
+avoid parallel builds (make -j) in this platform, or get a better
+compiler."
+
+	$run $rm $removelist
+	exit $EXIT_FAILURE
+      fi
+
+      # Just move the object if needed, then go on to compile the next one
+      if test -n "$output_obj" && test "X$output_obj" != "X$lobj"; then
+	$show "$mv $output_obj $lobj"
+	if $run $mv $output_obj $lobj; then :
+	else
+	  error=$?
+	  $run $rm $removelist
+	  exit $error
+	fi
+      fi
+
+      # Append the name of the PIC object to the libtool object file.
+      test -z "$run" && cat >> ${libobj}T <<EOF
+pic_object='$objdir/$objname'
+
+EOF
+
+      # Allow error messages only from the first compilation.
+      if test "$suppress_opt" = yes; then
+        suppress_output=' >/dev/null 2>&1'
+      fi
+    else
+      # No PIC object so indicate it doesn't exist in the libtool
+      # object file.
+      test -z "$run" && cat >> ${libobj}T <<EOF
+pic_object=none
+
+EOF
+    fi
+
+    # Only build a position-dependent object if we build old libraries.
+    if test "$build_old_libs" = yes; then
+      if test "$pic_mode" != yes; then
+	# Don't build PIC code
+	command="$base_compile $qsrcfile"
+      else
+	command="$base_compile $qsrcfile $pic_flag"
+      fi
+      if test "$compiler_c_o" = yes; then
+	command="$command -o $obj"
+      fi
+
+      # Suppress compiler output if we already did a PIC compilation.
+      command="$command$suppress_output"
+      $run $rm "$obj" "$output_obj"
+      $show "$command"
+      if $run eval "$command"; then :
+      else
+	$run $rm $removelist
+	exit $EXIT_FAILURE
+      fi
+
+      if test "$need_locks" = warn &&
+	 test "X`cat $lockfile 2>/dev/null`" != "X$srcfile"; then
+	$echo "\
+*** ERROR, $lockfile contains:
+`cat $lockfile 2>/dev/null`
+
+but it should contain:
+$srcfile
+
+This indicates that another process is trying to use the same
+temporary object file, and libtool could not work around it because
+your compiler does not support \`-c' and \`-o' together.  If you
+repeat this compilation, it may succeed, by chance, but you had better
+avoid parallel builds (make -j) in this platform, or get a better
+compiler."
+
+	$run $rm $removelist
+	exit $EXIT_FAILURE
+      fi
+
+      # Just move the object if needed
+      if test -n "$output_obj" && test "X$output_obj" != "X$obj"; then
+	$show "$mv $output_obj $obj"
+	if $run $mv $output_obj $obj; then :
+	else
+	  error=$?
+	  $run $rm $removelist
+	  exit $error
+	fi
+      fi
+
+      # Append the name of the non-PIC object the libtool object file.
+      # Only append if the libtool object file exists.
+      test -z "$run" && cat >> ${libobj}T <<EOF
+# Name of the non-PIC object.
+non_pic_object='$objname'
+
+EOF
+    else
+      # Append the name of the non-PIC object the libtool object file.
+      # Only append if the libtool object file exists.
+      test -z "$run" && cat >> ${libobj}T <<EOF
+# Name of the non-PIC object.
+non_pic_object=none
+
+EOF
+    fi
+
+    $run $mv "${libobj}T" "${libobj}"
+
+    # Unlock the critical section if it was locked
+    if test "$need_locks" != no; then
+      $run $rm "$lockfile"
+    fi
+
+    exit $EXIT_SUCCESS
+    ;;
+
+  # libtool link mode
+  link | relink)
+    modename="$modename: link"
+    case $host in
+    *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2*)
+      # It is impossible to link a dll without this setting, and
+      # we shouldn't force the makefile maintainer to figure out
+      # which system we are compiling for in order to pass an extra
+      # flag for every libtool invocation.
+      # allow_undefined=no
+
+      # FIXME: Unfortunately, there are problems with the above when trying
+      # to make a dll which has undefined symbols, in which case not
+      # even a static library is built.  For now, we need to specify
+      # -no-undefined on the libtool link line when we can be certain
+      # that all symbols are satisfied, otherwise we get a static library.
+      allow_undefined=yes
+      ;;
+    *)
+      allow_undefined=yes
+      ;;
+    esac
+    libtool_args="$nonopt"
+    base_compile="$nonopt $@"
+    compile_command="$nonopt"
+    finalize_command="$nonopt"
+
+    compile_rpath=
+    finalize_rpath=
+    compile_shlibpath=
+    finalize_shlibpath=
+    convenience=
+    old_convenience=
+    deplibs=
+    old_deplibs=
+    compiler_flags=
+    linker_flags=
+    dllsearchpath=
+    lib_search_path=`pwd`
+    inst_prefix_dir=
+
+    avoid_version=no
+    dlfiles=
+    dlprefiles=
+    dlself=no
+    export_dynamic=no
+    export_symbols=
+    export_symbols_regex=
+    generated=
+    libobjs=
+    ltlibs=
+    module=no
+    no_install=no
+    objs=
+    non_pic_objects=
+    notinst_path= # paths that contain not-installed libtool libraries
+    precious_files_regex=
+    prefer_static_libs=no
+    preload=no
+    prev=
+    prevarg=
+    release=
+    rpath=
+    xrpath=
+    perm_rpath=
+    temp_rpath=
+    thread_safe=no
+    vinfo=
+    vinfo_number=no
+
+    func_infer_tag $base_compile
+
+    # We need to know -static, to get the right output filenames.
+    for arg
+    do
+      case $arg in
+      -all-static | -static)
+	if test "X$arg" = "X-all-static"; then
+	  if test "$build_libtool_libs" = yes && test -z "$link_static_flag"; then
+	    $echo "$modename: warning: complete static linking is impossible in this configuration" 1>&2
+	  fi
+	  if test -n "$link_static_flag"; then
+	    dlopen_self=$dlopen_self_static
+	  fi
+	  prefer_static_libs=yes
+	else
+	  if test -z "$pic_flag" && test -n "$link_static_flag"; then
+	    dlopen_self=$dlopen_self_static
+	  fi
+	  prefer_static_libs=built
+	fi
+	build_libtool_libs=no
+	build_old_libs=yes
+	break
+	;;
+      esac
+    done
+
+    # See if our shared archives depend on static archives.
+    test -n "$old_archive_from_new_cmds" && build_old_libs=yes
+
+    # Go through the arguments, transforming them on the way.
+    while test "$#" -gt 0; do
+      arg="$1"
+      shift
+      case $arg in
+      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	qarg=\"`$echo "X$arg" | $Xsed -e "$sed_quote_subst"`\" ### testsuite: skip nested quoting test
+	;;
+      *) qarg=$arg ;;
+      esac
+      libtool_args="$libtool_args $qarg"
+
+      # If the previous option needs an argument, assign it.
+      if test -n "$prev"; then
+	case $prev in
+	output)
+	  compile_command="$compile_command @OUTPUT@"
+	  finalize_command="$finalize_command @OUTPUT@"
+	  ;;
+	esac
+
+	case $prev in
+	dlfiles|dlprefiles)
+	  if test "$preload" = no; then
+	    # Add the symbol object into the linking commands.
+	    compile_command="$compile_command @SYMFILE@"
+	    finalize_command="$finalize_command @SYMFILE@"
+	    preload=yes
+	  fi
+	  case $arg in
+	  *.la | *.lo) ;;  # We handle these cases below.
+	  force)
+	    if test "$dlself" = no; then
+	      dlself=needless
+	      export_dynamic=yes
+	    fi
+	    prev=
+	    continue
+	    ;;
+	  self)
+	    if test "$prev" = dlprefiles; then
+	      dlself=yes
+	    elif test "$prev" = dlfiles && test "$dlopen_self" != yes; then
+	      dlself=yes
+	    else
+	      dlself=needless
+	      export_dynamic=yes
+	    fi
+	    prev=
+	    continue
+	    ;;
+	  *)
+	    if test "$prev" = dlfiles; then
+	      dlfiles="$dlfiles $arg"
+	    else
+	      dlprefiles="$dlprefiles $arg"
+	    fi
+	    prev=
+	    continue
+	    ;;
+	  esac
+	  ;;
+	expsyms)
+	  export_symbols="$arg"
+	  if test ! -f "$arg"; then
+	    $echo "$modename: symbol file \`$arg' does not exist"
+	    exit $EXIT_FAILURE
+	  fi
+	  prev=
+	  continue
+	  ;;
+	expsyms_regex)
+	  export_symbols_regex="$arg"
+	  prev=
+	  continue
+	  ;;
+	inst_prefix)
+	  inst_prefix_dir="$arg"
+	  prev=
+	  continue
+	  ;;
+	precious_regex)
+	  precious_files_regex="$arg"
+	  prev=
+	  continue
+	  ;;
+	release)
+	  release="-$arg"
+	  prev=
+	  continue
+	  ;;
+	objectlist)
+	  if test -f "$arg"; then
+	    save_arg=$arg
+	    moreargs=
+	    for fil in `cat $save_arg`
+	    do
+#	      moreargs="$moreargs $fil"
+	      arg=$fil
+	      # A libtool-controlled object.
+
+	      # Check to see that this really is a libtool object.
+	      if (${SED} -e '2q' $arg | grep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+		pic_object=
+		non_pic_object=
+
+		# Read the .lo file
+		# If there is no directory component, then add one.
+		case $arg in
+		*/* | *\\*) . $arg ;;
+		*) . ./$arg ;;
+		esac
+
+		if test -z "$pic_object" || \
+		   test -z "$non_pic_object" ||
+		   test "$pic_object" = none && \
+		   test "$non_pic_object" = none; then
+		  $echo "$modename: cannot find name of object for \`$arg'" 1>&2
+		  exit $EXIT_FAILURE
+		fi
+
+		# Extract subdirectory from the argument.
+		xdir=`$echo "X$arg" | $Xsed -e 's%/[^/]*$%%'`
+		if test "X$xdir" = "X$arg"; then
+		  xdir=
+		else
+		  xdir="$xdir/"
+		fi
+
+		if test "$pic_object" != none; then
+		  # Prepend the subdirectory the object is found in.
+		  pic_object="$xdir$pic_object"
+
+		  if test "$prev" = dlfiles; then
+		    if test "$build_libtool_libs" = yes && test "$dlopen_support" = yes; then
+		      dlfiles="$dlfiles $pic_object"
+		      prev=
+		      continue
+		    else
+		      # If libtool objects are unsupported, then we need to preload.
+		      prev=dlprefiles
+		    fi
+		  fi
+
+		  # CHECK ME:  I think I busted this.  -Ossama
+		  if test "$prev" = dlprefiles; then
+		    # Preload the old-style object.
+		    dlprefiles="$dlprefiles $pic_object"
+		    prev=
+		  fi
+
+		  # A PIC object.
+		  libobjs="$libobjs $pic_object"
+		  arg="$pic_object"
+		fi
+
+		# Non-PIC object.
+		if test "$non_pic_object" != none; then
+		  # Prepend the subdirectory the object is found in.
+		  non_pic_object="$xdir$non_pic_object"
+
+		  # A standard non-PIC object
+		  non_pic_objects="$non_pic_objects $non_pic_object"
+		  if test -z "$pic_object" || test "$pic_object" = none ; then
+		    arg="$non_pic_object"
+		  fi
+		else
+		  # If the PIC object exists, use it instead.
+		  # $xdir was prepended to $pic_object above.
+		  non_pic_object="$pic_object"
+		  non_pic_objects="$non_pic_objects $non_pic_object"
+		fi
+	      else
+		# Only an error if not doing a dry-run.
+		if test -z "$run"; then
+		  $echo "$modename: \`$arg' is not a valid libtool object" 1>&2
+		  exit $EXIT_FAILURE
+		else
+		  # Dry-run case.
+
+		  # Extract subdirectory from the argument.
+		  xdir=`$echo "X$arg" | $Xsed -e 's%/[^/]*$%%'`
+		  if test "X$xdir" = "X$arg"; then
+		    xdir=
+		  else
+		    xdir="$xdir/"
+		  fi
+
+		  pic_object=`$echo "X${xdir}${objdir}/${arg}" | $Xsed -e "$lo2o"`
+		  non_pic_object=`$echo "X${xdir}${arg}" | $Xsed -e "$lo2o"`
+		  libobjs="$libobjs $pic_object"
+		  non_pic_objects="$non_pic_objects $non_pic_object"
+		fi
+	      fi
+	    done
+	  else
+	    $echo "$modename: link input file \`$save_arg' does not exist"
+	    exit $EXIT_FAILURE
+	  fi
+	  arg=$save_arg
+	  prev=
+	  continue
+	  ;;
+	rpath | xrpath)
+	  # We need an absolute path.
+	  case $arg in
+	  [\\/]* | [A-Za-z]:[\\/]*) ;;
+	  *)
+	    $echo "$modename: only absolute run-paths are allowed" 1>&2
+	    exit $EXIT_FAILURE
+	    ;;
+	  esac
+	  if test "$prev" = rpath; then
+	    case "$rpath " in
+	    *" $arg "*) ;;
+	    *) rpath="$rpath $arg" ;;
+	    esac
+	  else
+	    case "$xrpath " in
+	    *" $arg "*) ;;
+	    *) xrpath="$xrpath $arg" ;;
+	    esac
+	  fi
+	  prev=
+	  continue
+	  ;;
+	xcompiler)
+	  compiler_flags="$compiler_flags $qarg"
+	  prev=
+	  compile_command="$compile_command $qarg"
+	  finalize_command="$finalize_command $qarg"
+	  continue
+	  ;;
+	xlinker)
+	  linker_flags="$linker_flags $qarg"
+	  compiler_flags="$compiler_flags $wl$qarg"
+	  prev=
+	  compile_command="$compile_command $wl$qarg"
+	  finalize_command="$finalize_command $wl$qarg"
+	  continue
+	  ;;
+	xcclinker)
+	  linker_flags="$linker_flags $qarg"
+	  compiler_flags="$compiler_flags $qarg"
+	  prev=
+	  compile_command="$compile_command $qarg"
+	  finalize_command="$finalize_command $qarg"
+	  continue
+	  ;;
+	shrext)
+  	  shrext_cmds="$arg"
+	  prev=
+	  continue
+	  ;;
+	darwin_framework|darwin_framework_skip)
+	  test "$prev" = "darwin_framework" && compiler_flags="$compiler_flags $arg"
+	  compile_command="$compile_command $arg"
+	  finalize_command="$finalize_command $arg"
+	  prev=
+	  continue
+	  ;;
+	*)
+	  eval "$prev=\"\$arg\""
+	  prev=
+	  continue
+	  ;;
+	esac
+      fi # test -n "$prev"
+
+      prevarg="$arg"
+
+      case $arg in
+      -all-static)
+	if test -n "$link_static_flag"; then
+	  compile_command="$compile_command $link_static_flag"
+	  finalize_command="$finalize_command $link_static_flag"
+	fi
+	continue
+	;;
+
+      -allow-undefined)
+	# FIXME: remove this flag sometime in the future.
+	$echo "$modename: \`-allow-undefined' is deprecated because it is the default" 1>&2
+	continue
+	;;
+
+      -avoid-version)
+	avoid_version=yes
+	continue
+	;;
+
+      -dlopen)
+	prev=dlfiles
+	continue
+	;;
+
+      -dlpreopen)
+	prev=dlprefiles
+	continue
+	;;
+
+      -export-dynamic)
+	export_dynamic=yes
+	continue
+	;;
+
+      -export-symbols | -export-symbols-regex)
+	if test -n "$export_symbols" || test -n "$export_symbols_regex"; then
+	  $echo "$modename: more than one -exported-symbols argument is not allowed"
+	  exit $EXIT_FAILURE
+	fi
+	if test "X$arg" = "X-export-symbols"; then
+	  prev=expsyms
+	else
+	  prev=expsyms_regex
+	fi
+	continue
+	;;
+
+      -framework|-arch|-isysroot)
+	case " $CC " in
+	  *" ${arg} ${1} "* | *" ${arg}	${1} "*) 
+		prev=darwin_framework_skip ;;
+	  *) compiler_flags="$compiler_flags $arg"
+	     prev=darwin_framework ;;
+	esac
+	compile_command="$compile_command $arg"
+	finalize_command="$finalize_command $arg"
+	continue
+	;;
+
+      -inst-prefix-dir)
+	prev=inst_prefix
+	continue
+	;;
+
+      # The native IRIX linker understands -LANG:*, -LIST:* and -LNO:*
+      # so, if we see these flags be careful not to treat them like -L
+      -L[A-Z][A-Z]*:*)
+	case $with_gcc/$host in
+	no/*-*-irix* | /*-*-irix*)
+	  compile_command="$compile_command $arg"
+	  finalize_command="$finalize_command $arg"
+	  ;;
+	esac
+	continue
+	;;
+
+      -L*)
+	dir=`$echo "X$arg" | $Xsed -e 's/^-L//'`
+	# We need an absolute path.
+	case $dir in
+	[\\/]* | [A-Za-z]:[\\/]*) ;;
+	*)
+	  absdir=`cd "$dir" && pwd`
+	  if test -z "$absdir"; then
+	    $echo "$modename: cannot determine absolute directory name of \`$dir'" 1>&2
+	    absdir="$dir"
+	    notinst_path="$notinst_path $dir"
+	  fi
+	  dir="$absdir"
+	  ;;
+	esac
+	case "$deplibs " in
+	*" -L$dir "*) ;;
+	*)
+	  deplibs="$deplibs -L$dir"
+	  lib_search_path="$lib_search_path $dir"
+	  ;;
+	esac
+	case $host in
+	*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2*)
+	  testbindir=`$echo "X$dir" | $Xsed -e 's*/lib$*/bin*'`
+	  case :$dllsearchpath: in
+	  *":$dir:"*) ;;
+	  *) dllsearchpath="$dllsearchpath:$dir";;
+	  esac
+	  case :$dllsearchpath: in
+	  *":$testbindir:"*) ;;
+	  *) dllsearchpath="$dllsearchpath:$testbindir";;
+	  esac
+	  ;;
+	esac
+	continue
+	;;
+
+      -l*)
+	if test "X$arg" = "X-lc" || test "X$arg" = "X-lm"; then
+	  case $host in
+	  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-beos*)
+	    # These systems don't actually have a C or math library (as such)
+	    continue
+	    ;;
+	  *-*-os2*)
+	    # These systems don't actually have a C library (as such)
+	    test "X$arg" = "X-lc" && continue
+	    ;;
+	  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)
+	    # Do not include libc due to us having libc/libc_r.
+	    test "X$arg" = "X-lc" && continue
+	    ;;
+	  *-*-rhapsody* | *-*-darwin1.[012])
+	    # Rhapsody C and math libraries are in the System framework
+	    deplibs="$deplibs -framework System"
+	    continue
+	    ;;
+	  *-*-sco3.2v5* | *-*-sco5v6*)
+	    # Causes problems with __ctype
+	    test "X$arg" = "X-lc" && continue
+	    ;;
+	  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)
+	    # Compiler inserts libc in the correct place for threads to work
+	    test "X$arg" = "X-lc" && continue
+	    ;;
+	  esac
+	elif test "X$arg" = "X-lc_r"; then
+	 case $host in
+	 *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)
+	   # Do not include libc_r directly, use -pthread flag.
+	   continue
+	   ;;
+	 esac
+	fi
+	deplibs="$deplibs $arg"
+	continue
+	;;
+
+      # Tru64 UNIX uses -model [arg] to determine the layout of C++
+      # classes, name mangling, and exception handling.
+      -model)
+	compile_command="$compile_command $arg"
+	compiler_flags="$compiler_flags $arg"
+	finalize_command="$finalize_command $arg"
+	prev=xcompiler
+	continue
+	;;
+
+     -mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe)
+	compiler_flags="$compiler_flags $arg"
+	compile_command="$compile_command $arg"
+	finalize_command="$finalize_command $arg"
+	continue
+	;;
+
+      -module)
+	module=yes
+	continue
+	;;
+
+      # -64, -mips[0-9] enable 64-bit mode on the SGI compiler
+      # -r[0-9][0-9]* specifies the processor on the SGI compiler
+      # -xarch=*, -xtarget=* enable 64-bit mode on the Sun compiler
+      # +DA*, +DD* enable 64-bit mode on the HP compiler
+      # -q* pass through compiler args for the IBM compiler
+      # -m* pass through architecture-specific compiler args for GCC
+      # -m*, -t[45]*, -txscale* pass through architecture-specific
+      # compiler args for GCC
+      # -pg pass through profiling flag for GCC
+      # @file GCC response files
+      -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*|-pg| \
+      -t[45]*|-txscale*|@*)
+
+	# Unknown arguments in both finalize_command and compile_command need
+	# to be aesthetically quoted because they are evaled later.
+	arg=`$echo "X$arg" | $Xsed -e "$sed_quote_subst"`
+	case $arg in
+	*[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	  arg="\"$arg\""
+	  ;;
+	esac
+        compile_command="$compile_command $arg"
+        finalize_command="$finalize_command $arg"
+        compiler_flags="$compiler_flags $arg"
+        continue
+        ;;
+
+      -shrext)
+	prev=shrext
+	continue
+	;;
+
+      -no-fast-install)
+	fast_install=no
+	continue
+	;;
+
+      -no-install)
+	case $host in
+	*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2*)
+	  # The PATH hackery in wrapper scripts is required on Windows
+	  # in order for the loader to find any dlls it needs.
+	  $echo "$modename: warning: \`-no-install' is ignored for $host" 1>&2
+	  $echo "$modename: warning: assuming \`-no-fast-install' instead" 1>&2
+	  fast_install=no
+	  ;;
+	*) no_install=yes ;;
+	esac
+	continue
+	;;
+
+      -no-undefined)
+	allow_undefined=no
+	continue
+	;;
+
+      -objectlist)
+	prev=objectlist
+	continue
+	;;
+
+      -o) prev=output ;;
+
+      -precious-files-regex)
+	prev=precious_regex
+	continue
+	;;
+
+      -release)
+	prev=release
+	continue
+	;;
+
+      -rpath)
+	prev=rpath
+	continue
+	;;
+
+      -R)
+	prev=xrpath
+	continue
+	;;
+
+      -R*)
+	dir=`$echo "X$arg" | $Xsed -e 's/^-R//'`
+	# We need an absolute path.
+	case $dir in
+	[\\/]* | [A-Za-z]:[\\/]*) ;;
+	*)
+	  $echo "$modename: only absolute run-paths are allowed" 1>&2
+	  exit $EXIT_FAILURE
+	  ;;
+	esac
+	case "$xrpath " in
+	*" $dir "*) ;;
+	*) xrpath="$xrpath $dir" ;;
+	esac
+	continue
+	;;
+
+      -static)
+	# The effects of -static are defined in a previous loop.
+	# We used to do the same as -all-static on platforms that
+	# didn't have a PIC flag, but the assumption that the effects
+	# would be equivalent was wrong.  It would break on at least
+	# Digital Unix and AIX.
+	continue
+	;;
+
+      -thread-safe)
+	thread_safe=yes
+	continue
+	;;
+
+      -version-info)
+	prev=vinfo
+	continue
+	;;
+      -version-number)
+	prev=vinfo
+	vinfo_number=yes
+	continue
+	;;
+
+      -Wc,*)
+	args=`$echo "X$arg" | $Xsed -e "$sed_quote_subst" -e 's/^-Wc,//'`
+	arg=
+	save_ifs="$IFS"; IFS=','
+	for flag in $args; do
+	  IFS="$save_ifs"
+	  case $flag in
+	    *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	    flag="\"$flag\""
+	    ;;
+	  esac
+	  arg="$arg $wl$flag"
+	  compiler_flags="$compiler_flags $flag"
+	done
+	IFS="$save_ifs"
+	arg=`$echo "X$arg" | $Xsed -e "s/^ //"`
+	;;
+
+      -Wl,*)
+	args=`$echo "X$arg" | $Xsed -e "$sed_quote_subst" -e 's/^-Wl,//'`
+	arg=
+	save_ifs="$IFS"; IFS=','
+	for flag in $args; do
+	  IFS="$save_ifs"
+	  case $flag in
+	    *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	    flag="\"$flag\""
+	    ;;
+	  esac
+	  arg="$arg $wl$flag"
+	  compiler_flags="$compiler_flags $wl$flag"
+	  linker_flags="$linker_flags $flag"
+	done
+	IFS="$save_ifs"
+	arg=`$echo "X$arg" | $Xsed -e "s/^ //"`
+	;;
+
+      -Xcompiler)
+	prev=xcompiler
+	continue
+	;;
+
+      -Xlinker)
+	prev=xlinker
+	continue
+	;;
+
+      -XCClinker)
+	prev=xcclinker
+	continue
+	;;
+
+      # Some other compiler flag.
+      -* | +*)
+	# Unknown arguments in both finalize_command and compile_command need
+	# to be aesthetically quoted because they are evaled later.
+	arg=`$echo "X$arg" | $Xsed -e "$sed_quote_subst"`
+	case $arg in
+	*[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	  arg="\"$arg\""
+	  ;;
+	esac
+	;;
+
+      *.$objext)
+	# A standard object.
+	objs="$objs $arg"
+	;;
+
+      *.lo)
+	# A libtool-controlled object.
+
+	# Check to see that this really is a libtool object.
+	if (${SED} -e '2q' $arg | grep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+	  pic_object=
+	  non_pic_object=
+
+	  # Read the .lo file
+	  # If there is no directory component, then add one.
+	  case $arg in
+	  */* | *\\*) . $arg ;;
+	  *) . ./$arg ;;
+	  esac
+
+	  if test -z "$pic_object" || \
+	     test -z "$non_pic_object" ||
+	     test "$pic_object" = none && \
+	     test "$non_pic_object" = none; then
+	    $echo "$modename: cannot find name of object for \`$arg'" 1>&2
+	    exit $EXIT_FAILURE
+	  fi
+
+	  # Extract subdirectory from the argument.
+	  xdir=`$echo "X$arg" | $Xsed -e 's%/[^/]*$%%'`
+	  if test "X$xdir" = "X$arg"; then
+	    xdir=
+ 	  else
+	    xdir="$xdir/"
+	  fi
+
+	  if test "$pic_object" != none; then
+	    # Prepend the subdirectory the object is found in.
+	    pic_object="$xdir$pic_object"
+
+	    if test "$prev" = dlfiles; then
+	      if test "$build_libtool_libs" = yes && test "$dlopen_support" = yes; then
+		dlfiles="$dlfiles $pic_object"
+		prev=
+		continue
+	      else
+		# If libtool objects are unsupported, then we need to preload.
+		prev=dlprefiles
+	      fi
+	    fi
+
+	    # CHECK ME:  I think I busted this.  -Ossama
+	    if test "$prev" = dlprefiles; then
+	      # Preload the old-style object.
+	      dlprefiles="$dlprefiles $pic_object"
+	      prev=
+	    fi
+
+	    # A PIC object.
+	    libobjs="$libobjs $pic_object"
+	    arg="$pic_object"
+	  fi
+
+	  # Non-PIC object.
+	  if test "$non_pic_object" != none; then
+	    # Prepend the subdirectory the object is found in.
+	    non_pic_object="$xdir$non_pic_object"
+
+	    # A standard non-PIC object
+	    non_pic_objects="$non_pic_objects $non_pic_object"
+	    if test -z "$pic_object" || test "$pic_object" = none ; then
+	      arg="$non_pic_object"
+	    fi
+	  else
+	    # If the PIC object exists, use it instead.
+	    # $xdir was prepended to $pic_object above.
+	    non_pic_object="$pic_object"
+	    non_pic_objects="$non_pic_objects $non_pic_object"
+	  fi
+	else
+	  # Only an error if not doing a dry-run.
+	  if test -z "$run"; then
+	    $echo "$modename: \`$arg' is not a valid libtool object" 1>&2
+	    exit $EXIT_FAILURE
+	  else
+	    # Dry-run case.
+
+	    # Extract subdirectory from the argument.
+	    xdir=`$echo "X$arg" | $Xsed -e 's%/[^/]*$%%'`
+	    if test "X$xdir" = "X$arg"; then
+	      xdir=
+	    else
+	      xdir="$xdir/"
+	    fi
+
+	    pic_object=`$echo "X${xdir}${objdir}/${arg}" | $Xsed -e "$lo2o"`
+	    non_pic_object=`$echo "X${xdir}${arg}" | $Xsed -e "$lo2o"`
+	    libobjs="$libobjs $pic_object"
+	    non_pic_objects="$non_pic_objects $non_pic_object"
+	  fi
+	fi
+	;;
+
+      *.$libext)
+	# An archive.
+	deplibs="$deplibs $arg"
+	old_deplibs="$old_deplibs $arg"
+	continue
+	;;
+
+      *.la)
+	# A libtool-controlled library.
+
+	if test "$prev" = dlfiles; then
+	  # This library was specified with -dlopen.
+	  dlfiles="$dlfiles $arg"
+	  prev=
+	elif test "$prev" = dlprefiles; then
+	  # The library was specified with -dlpreopen.
+	  dlprefiles="$dlprefiles $arg"
+	  prev=
+	else
+	  deplibs="$deplibs $arg"
+	fi
+	continue
+	;;
+
+      # Some other compiler argument.
+      *)
+	# Unknown arguments in both finalize_command and compile_command need
+	# to be aesthetically quoted because they are evaled later.
+	arg=`$echo "X$arg" | $Xsed -e "$sed_quote_subst"`
+	case $arg in
+	*[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	  arg="\"$arg\""
+	  ;;
+	esac
+	;;
+      esac # arg
+
+      # Now actually substitute the argument into the commands.
+      if test -n "$arg"; then
+	compile_command="$compile_command $arg"
+	finalize_command="$finalize_command $arg"
+      fi
+    done # argument parsing loop
+
+    if test -n "$prev"; then
+      $echo "$modename: the \`$prevarg' option requires an argument" 1>&2
+      $echo "$help" 1>&2
+      exit $EXIT_FAILURE
+    fi
+
+    if test "$export_dynamic" = yes && test -n "$export_dynamic_flag_spec"; then
+      eval arg=\"$export_dynamic_flag_spec\"
+      compile_command="$compile_command $arg"
+      finalize_command="$finalize_command $arg"
+    fi
+
+    oldlibs=
+    # calculate the name of the file, without its directory
+    outputname=`$echo "X$output" | $Xsed -e 's%^.*/%%'`
+    libobjs_save="$libobjs"
+
+    if test -n "$shlibpath_var"; then
+      # get the directories listed in $shlibpath_var
+      eval shlib_search_path=\`\$echo \"X\${$shlibpath_var}\" \| \$Xsed -e \'s/:/ /g\'\`
+    else
+      shlib_search_path=
+    fi
+    eval sys_lib_search_path=\"$sys_lib_search_path_spec\"
+    eval sys_lib_dlsearch_path=\"$sys_lib_dlsearch_path_spec\"
+
+    output_objdir=`$echo "X$output" | $Xsed -e 's%/[^/]*$%%'`
+    if test "X$output_objdir" = "X$output"; then
+      output_objdir="$objdir"
+    else
+      output_objdir="$output_objdir/$objdir"
+    fi
+    # Create the object directory.
+    if test ! -d "$output_objdir"; then
+      $show "$mkdir $output_objdir"
+      $run $mkdir $output_objdir
+      exit_status=$?
+      if test "$exit_status" -ne 0 && test ! -d "$output_objdir"; then
+	exit $exit_status
+      fi
+    fi
+
+    # Determine the type of output
+    case $output in
+    "")
+      $echo "$modename: you must specify an output file" 1>&2
+      $echo "$help" 1>&2
+      exit $EXIT_FAILURE
+      ;;
+    *.$libext) linkmode=oldlib ;;
+    *.lo | *.$objext) linkmode=obj ;;
+    *.la) linkmode=lib ;;
+    *) linkmode=prog ;; # Anything else should be a program.
+    esac
+
+    case $host in
+    *cygwin* | *mingw* | *pw32*)
+      # don't eliminate duplications in $postdeps and $predeps
+      duplicate_compiler_generated_deps=yes
+      ;;
+    *)
+      duplicate_compiler_generated_deps=$duplicate_deps
+      ;;
+    esac
+    specialdeplibs=
+
+    libs=
+    # Find all interdependent deplibs by searching for libraries
+    # that are linked more than once (e.g. -la -lb -la)
+    for deplib in $deplibs; do
+      if test "X$duplicate_deps" = "Xyes" ; then
+	case "$libs " in
+	*" $deplib "*) specialdeplibs="$specialdeplibs $deplib" ;;
+	esac
+      fi
+      libs="$libs $deplib"
+    done
+
+    if test "$linkmode" = lib; then
+      libs="$predeps $libs $compiler_lib_search_path $postdeps"
+
+      # Compute libraries that are listed more than once in $predeps
+      # $postdeps and mark them as special (i.e., whose duplicates are
+      # not to be eliminated).
+      pre_post_deps=
+      if test "X$duplicate_compiler_generated_deps" = "Xyes" ; then
+	for pre_post_dep in $predeps $postdeps; do
+	  case "$pre_post_deps " in
+	  *" $pre_post_dep "*) specialdeplibs="$specialdeplibs $pre_post_deps" ;;
+	  esac
+	  pre_post_deps="$pre_post_deps $pre_post_dep"
+	done
+      fi
+      pre_post_deps=
+    fi
+
+    deplibs=
+    newdependency_libs=
+    newlib_search_path=
+    need_relink=no # whether we're linking any uninstalled libtool libraries
+    notinst_deplibs= # not-installed libtool libraries
+    case $linkmode in
+    lib)
+	passes="conv link"
+	for file in $dlfiles $dlprefiles; do
+	  case $file in
+	  *.la) ;;
+	  *)
+	    $echo "$modename: libraries can \`-dlopen' only libtool libraries: $file" 1>&2
+	    exit $EXIT_FAILURE
+	    ;;
+	  esac
+	done
+	;;
+    prog)
+	compile_deplibs=
+	finalize_deplibs=
+	alldeplibs=no
+	newdlfiles=
+	newdlprefiles=
+	passes="conv scan dlopen dlpreopen link"
+	;;
+    *)  passes="conv"
+	;;
+    esac
+    for pass in $passes; do
+      if test "$linkmode,$pass" = "lib,link" ||
+	 test "$linkmode,$pass" = "prog,scan"; then
+	libs="$deplibs"
+	deplibs=
+      fi
+      if test "$linkmode" = prog; then
+	case $pass in
+	dlopen) libs="$dlfiles" ;;
+	dlpreopen) libs="$dlprefiles" ;;
+	link)
+	  libs="$deplibs %DEPLIBS%"
+	  test "X$link_all_deplibs" != Xno && libs="$libs $dependency_libs"
+	  ;;
+	esac
+      fi
+      if test "$pass" = dlopen; then
+	# Collect dlpreopened libraries
+	save_deplibs="$deplibs"
+	deplibs=
+      fi
+      for deplib in $libs; do
+	lib=
+	found=no
+	case $deplib in
+	-mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe)
+	  if test "$linkmode,$pass" = "prog,link"; then
+	    compile_deplibs="$deplib $compile_deplibs"
+	    finalize_deplibs="$deplib $finalize_deplibs"
+	  else
+	    compiler_flags="$compiler_flags $deplib"
+	  fi
+	  continue
+	  ;;
+	-l*)
+	  if test "$linkmode" != lib && test "$linkmode" != prog; then
+	    $echo "$modename: warning: \`-l' is ignored for archives/objects" 1>&2
+	    continue
+	  fi
+	  name=`$echo "X$deplib" | $Xsed -e 's/^-l//'`
+	  for searchdir in $newlib_search_path $lib_search_path $sys_lib_search_path $shlib_search_path; do
+	    for search_ext in .la $std_shrext .so .a; do
+	      # Search the libtool library
+	      lib="$searchdir/lib${name}${search_ext}"
+	      if test -f "$lib"; then
+		if test "$search_ext" = ".la"; then
+		  found=yes
+		else
+		  found=no
+		fi
+		break 2
+	      fi
+	    done
+	  done
+	  if test "$found" != yes; then
+	    # deplib doesn't seem to be a libtool library
+	    if test "$linkmode,$pass" = "prog,link"; then
+	      compile_deplibs="$deplib $compile_deplibs"
+	      finalize_deplibs="$deplib $finalize_deplibs"
+	    else
+	      deplibs="$deplib $deplibs"
+	      test "$linkmode" = lib && newdependency_libs="$deplib $newdependency_libs"
+	    fi
+	    continue
+	  else # deplib is a libtool library
+	    # If $allow_libtool_libs_with_static_runtimes && $deplib is a stdlib,
+	    # We need to do some special things here, and not later.
+	    if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
+	      case " $predeps $postdeps " in
+	      *" $deplib "*)
+		if (${SED} -e '2q' $lib |
+                    grep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+		  library_names=
+		  old_library=
+		  case $lib in
+		  */* | *\\*) . $lib ;;
+		  *) . ./$lib ;;
+		  esac
+		  for l in $old_library $library_names; do
+		    ll="$l"
+		  done
+		  if test "X$ll" = "X$old_library" ; then # only static version available
+		    found=no
+		    ladir=`$echo "X$lib" | $Xsed -e 's%/[^/]*$%%'`
+		    test "X$ladir" = "X$lib" && ladir="."
+		    lib=$ladir/$old_library
+		    if test "$linkmode,$pass" = "prog,link"; then
+		      compile_deplibs="$deplib $compile_deplibs"
+		      finalize_deplibs="$deplib $finalize_deplibs"
+		    else
+		      deplibs="$deplib $deplibs"
+		      test "$linkmode" = lib && newdependency_libs="$deplib $newdependency_libs"
+		    fi
+		    continue
+		  fi
+		fi
+	        ;;
+	      *) ;;
+	      esac
+	    fi
+	  fi
+	  ;; # -l
+	-L*)
+	  case $linkmode in
+	  lib)
+	    deplibs="$deplib $deplibs"
+	    test "$pass" = conv && continue
+	    newdependency_libs="$deplib $newdependency_libs"
+	    newlib_search_path="$newlib_search_path "`$echo "X$deplib" | $Xsed -e 's/^-L//'`
+	    ;;
+	  prog)
+	    if test "$pass" = conv; then
+	      deplibs="$deplib $deplibs"
+	      continue
+	    fi
+	    if test "$pass" = scan; then
+	      deplibs="$deplib $deplibs"
+	    else
+	      compile_deplibs="$deplib $compile_deplibs"
+	      finalize_deplibs="$deplib $finalize_deplibs"
+	    fi
+	    newlib_search_path="$newlib_search_path "`$echo "X$deplib" | $Xsed -e 's/^-L//'`
+	    ;;
+	  *)
+	    $echo "$modename: warning: \`-L' is ignored for archives/objects" 1>&2
+	    ;;
+	  esac # linkmode
+	  continue
+	  ;; # -L
+	-R*)
+	  if test "$pass" = link; then
+	    dir=`$echo "X$deplib" | $Xsed -e 's/^-R//'`
+	    # Make sure the xrpath contains only unique directories.
+	    case "$xrpath " in
+	    *" $dir "*) ;;
+	    *) xrpath="$xrpath $dir" ;;
+	    esac
+	  fi
+	  deplibs="$deplib $deplibs"
+	  continue
+	  ;;
+	*.la) lib="$deplib" ;;
+	*.$libext)
+	  if test "$pass" = conv; then
+	    deplibs="$deplib $deplibs"
+	    continue
+	  fi
+	  case $linkmode in
+	  lib)
+	    valid_a_lib=no
+	    case $deplibs_check_method in
+	      match_pattern*)
+		set dummy $deplibs_check_method
+	        match_pattern_regex=`expr "$deplibs_check_method" : "$2 \(.*\)"`
+		if eval $echo \"$deplib\" 2>/dev/null \
+		    | $SED 10q \
+		    | $EGREP "$match_pattern_regex" > /dev/null; then
+		  valid_a_lib=yes
+		fi
+		;;
+	      pass_all)
+		valid_a_lib=yes
+		;;
+            esac
+	    if test "$valid_a_lib" != yes; then
+	      $echo
+	      $echo "*** Warning: Trying to link with static lib archive $deplib."
+	      $echo "*** I have the capability to make that library automatically link in when"
+	      $echo "*** you link to this library.  But I can only do this if you have a"
+	      $echo "*** shared version of the library, which you do not appear to have"
+	      $echo "*** because the file extensions .$libext of this argument makes me believe"
+	      $echo "*** that it is just a static archive that I should not used here."
+	    else
+	      $echo
+	      $echo "*** Warning: Linking the shared library $output against the"
+	      $echo "*** static library $deplib is not portable!"
+	      deplibs="$deplib $deplibs"
+	    fi
+	    continue
+	    ;;
+	  prog)
+	    if test "$pass" != link; then
+	      deplibs="$deplib $deplibs"
+	    else
+	      compile_deplibs="$deplib $compile_deplibs"
+	      finalize_deplibs="$deplib $finalize_deplibs"
+	    fi
+	    continue
+	    ;;
+	  esac # linkmode
+	  ;; # *.$libext
+	*.lo | *.$objext)
+	  if test "$pass" = conv; then
+	    deplibs="$deplib $deplibs"
+	  elif test "$linkmode" = prog; then
+	    if test "$pass" = dlpreopen || test "$dlopen_support" != yes || test "$build_libtool_libs" = no; then
+	      # If there is no dlopen support or we're linking statically,
+	      # we need to preload.
+	      newdlprefiles="$newdlprefiles $deplib"
+	      compile_deplibs="$deplib $compile_deplibs"
+	      finalize_deplibs="$deplib $finalize_deplibs"
+	    else
+	      newdlfiles="$newdlfiles $deplib"
+	    fi
+	  fi
+	  continue
+	  ;;
+	%DEPLIBS%)
+	  alldeplibs=yes
+	  continue
+	  ;;
+	esac # case $deplib
+	if test "$found" = yes || test -f "$lib"; then :
+	else
+	  $echo "$modename: cannot find the library \`$lib' or unhandled argument \`$deplib'" 1>&2
+	  exit $EXIT_FAILURE
+	fi
+
+	# Check to see that this really is a libtool archive.
+	if (${SED} -e '2q' $lib | grep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then :
+	else
+	  $echo "$modename: \`$lib' is not a valid libtool archive" 1>&2
+	  exit $EXIT_FAILURE
+	fi
+
+	ladir=`$echo "X$lib" | $Xsed -e 's%/[^/]*$%%'`
+	test "X$ladir" = "X$lib" && ladir="."
+
+	dlname=
+	dlopen=
+	dlpreopen=
+	libdir=
+	library_names=
+	old_library=
+	# If the library was installed with an old release of libtool,
+	# it will not redefine variables installed, or shouldnotlink
+	installed=yes
+	shouldnotlink=no
+	avoidtemprpath=
+
+
+	# Read the .la file
+	case $lib in
+	*/* | *\\*) . $lib ;;
+	*) . ./$lib ;;
+	esac
+
+	if test "$linkmode,$pass" = "lib,link" ||
+	   test "$linkmode,$pass" = "prog,scan" ||
+	   { test "$linkmode" != prog && test "$linkmode" != lib; }; then
+	  test -n "$dlopen" && dlfiles="$dlfiles $dlopen"
+	  test -n "$dlpreopen" && dlprefiles="$dlprefiles $dlpreopen"
+	fi
+
+	if test "$pass" = conv; then
+	  # Only check for convenience libraries
+	  deplibs="$lib $deplibs"
+	  if test -z "$libdir"; then
+	    if test -z "$old_library"; then
+	      $echo "$modename: cannot find name of link library for \`$lib'" 1>&2
+	      exit $EXIT_FAILURE
+	    fi
+	    # It is a libtool convenience library, so add in its objects.
+	    convenience="$convenience $ladir/$objdir/$old_library"
+	    old_convenience="$old_convenience $ladir/$objdir/$old_library"
+	    tmp_libs=
+	    for deplib in $dependency_libs; do
+	      deplibs="$deplib $deplibs"
+              if test "X$duplicate_deps" = "Xyes" ; then
+	        case "$tmp_libs " in
+	        *" $deplib "*) specialdeplibs="$specialdeplibs $deplib" ;;
+	        esac
+              fi
+	      tmp_libs="$tmp_libs $deplib"
+	    done
+	  elif test "$linkmode" != prog && test "$linkmode" != lib; then
+	    $echo "$modename: \`$lib' is not a convenience library" 1>&2
+	    exit $EXIT_FAILURE
+	  fi
+	  continue
+	fi # $pass = conv
+
+
+	# Get the name of the library we link against.
+	linklib=
+	for l in $old_library $library_names; do
+	  linklib="$l"
+	done
+	if test -z "$linklib"; then
+	  $echo "$modename: cannot find name of link library for \`$lib'" 1>&2
+	  exit $EXIT_FAILURE
+	fi
+
+	# This library was specified with -dlopen.
+	if test "$pass" = dlopen; then
+	  if test -z "$libdir"; then
+	    $echo "$modename: cannot -dlopen a convenience library: \`$lib'" 1>&2
+	    exit $EXIT_FAILURE
+	  fi
+	  if test -z "$dlname" ||
+	     test "$dlopen_support" != yes ||
+	     test "$build_libtool_libs" = no; then
+	    # If there is no dlname, no dlopen support or we're linking
+	    # statically, we need to preload.  We also need to preload any
+	    # dependent libraries so libltdl's deplib preloader doesn't
+	    # bomb out in the load deplibs phase.
+	    dlprefiles="$dlprefiles $lib $dependency_libs"
+	  else
+	    newdlfiles="$newdlfiles $lib"
+	  fi
+	  continue
+	fi # $pass = dlopen
+
+	# We need an absolute path.
+	case $ladir in
+	[\\/]* | [A-Za-z]:[\\/]*) abs_ladir="$ladir" ;;
+	*)
+	  abs_ladir=`cd "$ladir" && pwd`
+	  if test -z "$abs_ladir"; then
+	    $echo "$modename: warning: cannot determine absolute directory name of \`$ladir'" 1>&2
+	    $echo "$modename: passing it literally to the linker, although it might fail" 1>&2
+	    abs_ladir="$ladir"
+	  fi
+	  ;;
+	esac
+	laname=`$echo "X$lib" | $Xsed -e 's%^.*/%%'`
+
+	# Find the relevant object directory and library name.
+	if test "X$installed" = Xyes; then
+	  if test ! -f "$libdir/$linklib" && test -f "$abs_ladir/$linklib"; then
+	    $echo "$modename: warning: library \`$lib' was moved." 1>&2
+	    dir="$ladir"
+	    absdir="$abs_ladir"
+	    libdir="$abs_ladir"
+	  else
+	    dir="$libdir"
+	    absdir="$libdir"
+	  fi
+	  test "X$hardcode_automatic" = Xyes && avoidtemprpath=yes
+	else
+	  if test ! -f "$ladir/$objdir/$linklib" && test -f "$abs_ladir/$linklib"; then
+	    dir="$ladir"
+	    absdir="$abs_ladir"
+	    # Remove this search path later
+	    notinst_path="$notinst_path $abs_ladir"
+	  else
+	    dir="$ladir/$objdir"
+	    absdir="$abs_ladir/$objdir"
+	    # Remove this search path later
+	    notinst_path="$notinst_path $abs_ladir"
+	  fi
+	fi # $installed = yes
+	name=`$echo "X$laname" | $Xsed -e 's/\.la$//' -e 's/^lib//'`
+
+	# This library was specified with -dlpreopen.
+	if test "$pass" = dlpreopen; then
+	  if test -z "$libdir"; then
+	    $echo "$modename: cannot -dlpreopen a convenience library: \`$lib'" 1>&2
+	    exit $EXIT_FAILURE
+	  fi
+	  # Prefer using a static library (so that no silly _DYNAMIC symbols
+	  # are required to link).
+	  if test -n "$old_library"; then
+	    newdlprefiles="$newdlprefiles $dir/$old_library"
+	  # Otherwise, use the dlname, so that lt_dlopen finds it.
+	  elif test -n "$dlname"; then
+	    newdlprefiles="$newdlprefiles $dir/$dlname"
+	  else
+	    newdlprefiles="$newdlprefiles $dir/$linklib"
+	  fi
+	fi # $pass = dlpreopen
+
+	if test -z "$libdir"; then
+	  # Link the convenience library
+	  if test "$linkmode" = lib; then
+	    deplibs="$dir/$old_library $deplibs"
+	  elif test "$linkmode,$pass" = "prog,link"; then
+	    compile_deplibs="$dir/$old_library $compile_deplibs"
+	    finalize_deplibs="$dir/$old_library $finalize_deplibs"
+	  else
+	    deplibs="$lib $deplibs" # used for prog,scan pass
+	  fi
+	  continue
+	fi
+
+
+	if test "$linkmode" = prog && test "$pass" != link; then
+	  newlib_search_path="$newlib_search_path $ladir"
+	  deplibs="$lib $deplibs"
+
+	  linkalldeplibs=no
+	  if test "$link_all_deplibs" != no || test -z "$library_names" ||
+	     test "$build_libtool_libs" = no; then
+	    linkalldeplibs=yes
+	  fi
+
+	  tmp_libs=
+	  for deplib in $dependency_libs; do
+	    case $deplib in
+	    -L*) newlib_search_path="$newlib_search_path "`$echo "X$deplib" | $Xsed -e 's/^-L//'`;; ### testsuite: skip nested quoting test
+	    esac
+	    # Need to link against all dependency_libs?
+	    if test "$linkalldeplibs" = yes; then
+	      deplibs="$deplib $deplibs"
+	    else
+	      # Need to hardcode shared library paths
+	      # or/and link against static libraries
+	      newdependency_libs="$deplib $newdependency_libs"
+	    fi
+	    if test "X$duplicate_deps" = "Xyes" ; then
+	      case "$tmp_libs " in
+	      *" $deplib "*) specialdeplibs="$specialdeplibs $deplib" ;;
+	      esac
+	    fi
+	    tmp_libs="$tmp_libs $deplib"
+	  done # for deplib
+	  continue
+	fi # $linkmode = prog...
+
+	if test "$linkmode,$pass" = "prog,link"; then
+	  if test -n "$library_names" &&
+	     { test "$prefer_static_libs" = no || test -z "$old_library"; }; then
+	    # We need to hardcode the library path
+	    if test -n "$shlibpath_var" && test -z "$avoidtemprpath" ; then
+	      # Make sure the rpath contains only unique directories.
+	      case "$temp_rpath " in
+	      *" $dir "*) ;;
+	      *" $absdir "*) ;;
+	      *) temp_rpath="$temp_rpath $absdir" ;;
+	      esac
+	    fi
+
+	    # Hardcode the library path.
+	    # Skip directories that are in the system default run-time
+	    # search path.
+	    case " $sys_lib_dlsearch_path " in
+	    *" $absdir "*) ;;
+	    *)
+	      case "$compile_rpath " in
+	      *" $absdir "*) ;;
+	      *) compile_rpath="$compile_rpath $absdir"
+	      esac
+	      ;;
+	    esac
+	    case " $sys_lib_dlsearch_path " in
+	    *" $libdir "*) ;;
+	    *)
+	      case "$finalize_rpath " in
+	      *" $libdir "*) ;;
+	      *) finalize_rpath="$finalize_rpath $libdir"
+	      esac
+	      ;;
+	    esac
+	  fi # $linkmode,$pass = prog,link...
+
+	  if test "$alldeplibs" = yes &&
+	     { test "$deplibs_check_method" = pass_all ||
+	       { test "$build_libtool_libs" = yes &&
+		 test -n "$library_names"; }; }; then
+	    # We only need to search for static libraries
+	    continue
+	  fi
+	fi
+
+	link_static=no # Whether the deplib will be linked statically
+	use_static_libs=$prefer_static_libs
+	if test "$use_static_libs" = built && test "$installed" = yes ; then
+	  use_static_libs=no
+	fi
+	if test -n "$library_names" &&
+	   { test "$use_static_libs" = no || test -z "$old_library"; }; then
+	  if test "$installed" = no; then
+	    notinst_deplibs="$notinst_deplibs $lib"
+	    need_relink=yes
+	  fi
+	  # This is a shared library
+
+	  # Warn about portability, can't link against -module's on
+	  # some systems (darwin)
+	  if test "$shouldnotlink" = yes && test "$pass" = link ; then
+	    $echo
+	    if test "$linkmode" = prog; then
+	      $echo "*** Warning: Linking the executable $output against the loadable module"
+	    else
+	      $echo "*** Warning: Linking the shared library $output against the loadable module"
+	    fi
+	    $echo "*** $linklib is not portable!"
+	  fi
+	  if test "$linkmode" = lib &&
+	     test "$hardcode_into_libs" = yes; then
+	    # Hardcode the library path.
+	    # Skip directories that are in the system default run-time
+	    # search path.
+	    case " $sys_lib_dlsearch_path " in
+	    *" $absdir "*) ;;
+	    *)
+	      case "$compile_rpath " in
+	      *" $absdir "*) ;;
+	      *) compile_rpath="$compile_rpath $absdir"
+	      esac
+	      ;;
+	    esac
+	    case " $sys_lib_dlsearch_path " in
+	    *" $libdir "*) ;;
+	    *)
+	      case "$finalize_rpath " in
+	      *" $libdir "*) ;;
+	      *) finalize_rpath="$finalize_rpath $libdir"
+	      esac
+	      ;;
+	    esac
+	  fi
+
+	  if test -n "$old_archive_from_expsyms_cmds"; then
+	    # figure out the soname
+	    set dummy $library_names
+	    realname="$2"
+	    shift; shift
+	    libname=`eval \\$echo \"$libname_spec\"`
+	    # use dlname if we got it. it's perfectly good, no?
+	    if test -n "$dlname"; then
+	      soname="$dlname"
+	    elif test -n "$soname_spec"; then
+	      # bleh windows
+	      case $host in
+	      *cygwin* | mingw*)
+		major=`expr $current - $age`
+		versuffix="-$major"
+		;;
+	      esac
+	      eval soname=\"$soname_spec\"
+	    else
+	      soname="$realname"
+	    fi
+
+	    # Make a new name for the extract_expsyms_cmds to use
+	    soroot="$soname"
+	    soname=`$echo $soroot | ${SED} -e 's/^.*\///'`
+	    newlib="libimp-`$echo $soname | ${SED} 's/^lib//;s/\.dll$//'`.a"
+
+	    # If the library has no export list, then create one now
+	    if test -f "$output_objdir/$soname-def"; then :
+	    else
+	      $show "extracting exported symbol list from \`$soname'"
+	      save_ifs="$IFS"; IFS='~'
+	      cmds=$extract_expsyms_cmds
+	      for cmd in $cmds; do
+		IFS="$save_ifs"
+		eval cmd=\"$cmd\"
+		$show "$cmd"
+		$run eval "$cmd" || exit $?
+	      done
+	      IFS="$save_ifs"
+	    fi
+
+	    # Create $newlib
+	    if test -f "$output_objdir/$newlib"; then :; else
+	      $show "generating import library for \`$soname'"
+	      save_ifs="$IFS"; IFS='~'
+	      cmds=$old_archive_from_expsyms_cmds
+	      for cmd in $cmds; do
+		IFS="$save_ifs"
+		eval cmd=\"$cmd\"
+		$show "$cmd"
+		$run eval "$cmd" || exit $?
+	      done
+	      IFS="$save_ifs"
+	    fi
+	    # make sure the library variables are pointing to the new library
+	    dir=$output_objdir
+	    linklib=$newlib
+	  fi # test -n "$old_archive_from_expsyms_cmds"
+
+	  if test "$linkmode" = prog || test "$mode" != relink; then
+	    add_shlibpath=
+	    add_dir=
+	    add=
+	    lib_linked=yes
+	    case $hardcode_action in
+	    immediate | unsupported)
+	      if test "$hardcode_direct" = no; then
+		add="$dir/$linklib"
+		case $host in
+		  *-*-sco3.2v5.0.[024]*) add_dir="-L$dir" ;;
+		  *-*-sysv4*uw2*) add_dir="-L$dir" ;;
+		  *-*-sysv5OpenUNIX* | *-*-sysv5UnixWare7.[01].[10]* | \
+		    *-*-unixware7*) add_dir="-L$dir" ;;
+		  *-*-darwin* )
+		    # if the lib is a module then we can not link against
+		    # it, someone is ignoring the new warnings I added
+		    if /usr/bin/file -L $add 2> /dev/null |
+                      $EGREP ": [^:]* bundle" >/dev/null ; then
+		      $echo "** Warning, lib $linklib is a module, not a shared library"
+		      if test -z "$old_library" ; then
+		        $echo
+		        $echo "** And there doesn't seem to be a static archive available"
+		        $echo "** The link will probably fail, sorry"
+		      else
+		        add="$dir/$old_library"
+		      fi
+		    fi
+		esac
+	      elif test "$hardcode_minus_L" = no; then
+		case $host in
+		*-*-sunos*) add_shlibpath="$dir" ;;
+		esac
+		add_dir="-L$dir"
+		add="-l$name"
+	      elif test "$hardcode_shlibpath_var" = no; then
+		add_shlibpath="$dir"
+		add="-l$name"
+	      else
+		lib_linked=no
+	      fi
+	      ;;
+	    relink)
+	      if test "$hardcode_direct" = yes; then
+		add="$dir/$linklib"
+	      elif test "$hardcode_minus_L" = yes; then
+		add_dir="-L$dir"
+		# Try looking first in the location we're being installed to.
+		if test -n "$inst_prefix_dir"; then
+		  case $libdir in
+		    [\\/]*)
+		      add_dir="$add_dir -L$inst_prefix_dir$libdir"
+		      ;;
+		  esac
+		fi
+		add="-l$name"
+	      elif test "$hardcode_shlibpath_var" = yes; then
+		add_shlibpath="$dir"
+		add="-l$name"
+	      else
+		lib_linked=no
+	      fi
+	      ;;
+	    *) lib_linked=no ;;
+	    esac
+
+	    if test "$lib_linked" != yes; then
+	      $echo "$modename: configuration error: unsupported hardcode properties"
+	      exit $EXIT_FAILURE
+	    fi
+
+	    if test -n "$add_shlibpath"; then
+	      case :$compile_shlibpath: in
+	      *":$add_shlibpath:"*) ;;
+	      *) compile_shlibpath="$compile_shlibpath$add_shlibpath:" ;;
+	      esac
+	    fi
+	    if test "$linkmode" = prog; then
+	      test -n "$add_dir" && compile_deplibs="$add_dir $compile_deplibs"
+	      test -n "$add" && compile_deplibs="$add $compile_deplibs"
+	    else
+	      test -n "$add_dir" && deplibs="$add_dir $deplibs"
+	      test -n "$add" && deplibs="$add $deplibs"
+	      if test "$hardcode_direct" != yes && \
+		 test "$hardcode_minus_L" != yes && \
+		 test "$hardcode_shlibpath_var" = yes; then
+		case :$finalize_shlibpath: in
+		*":$libdir:"*) ;;
+		*) finalize_shlibpath="$finalize_shlibpath$libdir:" ;;
+		esac
+	      fi
+	    fi
+	  fi
+
+	  if test "$linkmode" = prog || test "$mode" = relink; then
+	    add_shlibpath=
+	    add_dir=
+	    add=
+	    # Finalize command for both is simple: just hardcode it.
+	    if test "$hardcode_direct" = yes; then
+	      add="$libdir/$linklib"
+	    elif test "$hardcode_minus_L" = yes; then
+	      add_dir="-L$libdir"
+	      add="-l$name"
+	    elif test "$hardcode_shlibpath_var" = yes; then
+	      case :$finalize_shlibpath: in
+	      *":$libdir:"*) ;;
+	      *) finalize_shlibpath="$finalize_shlibpath$libdir:" ;;
+	      esac
+	      add="-l$name"
+	    elif test "$hardcode_automatic" = yes; then
+	      if test -n "$inst_prefix_dir" &&
+		 test -f "$inst_prefix_dir$libdir/$linklib" ; then
+	        add="$inst_prefix_dir$libdir/$linklib"
+	      else
+	        add="$libdir/$linklib"
+	      fi
+	    else
+	      # We cannot seem to hardcode it, guess we'll fake it.
+	      add_dir="-L$libdir"
+	      # Try looking first in the location we're being installed to.
+	      if test -n "$inst_prefix_dir"; then
+		case $libdir in
+		  [\\/]*)
+		    add_dir="$add_dir -L$inst_prefix_dir$libdir"
+		    ;;
+		esac
+	      fi
+	      add="-l$name"
+	    fi
+
+	    if test "$linkmode" = prog; then
+	      test -n "$add_dir" && finalize_deplibs="$add_dir $finalize_deplibs"
+	      test -n "$add" && finalize_deplibs="$add $finalize_deplibs"
+	    else
+	      test -n "$add_dir" && deplibs="$add_dir $deplibs"
+	      test -n "$add" && deplibs="$add $deplibs"
+	    fi
+	  fi
+	elif test "$linkmode" = prog; then
+	  # Here we assume that one of hardcode_direct or hardcode_minus_L
+	  # is not unsupported.  This is valid on all known static and
+	  # shared platforms.
+	  if test "$hardcode_direct" != unsupported; then
+	    test -n "$old_library" && linklib="$old_library"
+	    compile_deplibs="$dir/$linklib $compile_deplibs"
+	    finalize_deplibs="$dir/$linklib $finalize_deplibs"
+	  else
+	    compile_deplibs="-l$name -L$dir $compile_deplibs"
+	    finalize_deplibs="-l$name -L$dir $finalize_deplibs"
+	  fi
+	elif test "$build_libtool_libs" = yes; then
+	  # Not a shared library
+	  if test "$deplibs_check_method" != pass_all; then
+	    # We're trying link a shared library against a static one
+	    # but the system doesn't support it.
+
+	    # Just print a warning and add the library to dependency_libs so
+	    # that the program can be linked against the static library.
+	    $echo
+	    $echo "*** Warning: This system can not link to static lib archive $lib."
+	    $echo "*** I have the capability to make that library automatically link in when"
+	    $echo "*** you link to this library.  But I can only do this if you have a"
+	    $echo "*** shared version of the library, which you do not appear to have."
+	    if test "$module" = yes; then
+	      $echo "*** But as you try to build a module library, libtool will still create "
+	      $echo "*** a static module, that should work as long as the dlopening application"
+	      $echo "*** is linked with the -dlopen flag to resolve symbols at runtime."
+	      if test -z "$global_symbol_pipe"; then
+		$echo
+		$echo "*** However, this would only work if libtool was able to extract symbol"
+		$echo "*** lists from a program, using \`nm' or equivalent, but libtool could"
+		$echo "*** not find such a program.  So, this module is probably useless."
+		$echo "*** \`nm' from GNU binutils and a full rebuild may help."
+	      fi
+	      if test "$build_old_libs" = no; then
+		build_libtool_libs=module
+		build_old_libs=yes
+	      else
+		build_libtool_libs=no
+	      fi
+	    fi
+	  else
+	    deplibs="$dir/$old_library $deplibs"
+	    link_static=yes
+	  fi
+	fi # link shared/static library?
+
+	if test "$linkmode" = lib; then
+	  if test -n "$dependency_libs" &&
+	     { test "$hardcode_into_libs" != yes ||
+	       test "$build_old_libs" = yes ||
+	       test "$link_static" = yes; }; then
+	    # Extract -R from dependency_libs
+	    temp_deplibs=
+	    for libdir in $dependency_libs; do
+	      case $libdir in
+	      -R*) temp_xrpath=`$echo "X$libdir" | $Xsed -e 's/^-R//'`
+		   case " $xrpath " in
+		   *" $temp_xrpath "*) ;;
+		   *) xrpath="$xrpath $temp_xrpath";;
+		   esac;;
+	      *) temp_deplibs="$temp_deplibs $libdir";;
+	      esac
+	    done
+	    dependency_libs="$temp_deplibs"
+	  fi
+
+	  newlib_search_path="$newlib_search_path $absdir"
+	  # Link against this library
+	  test "$link_static" = no && newdependency_libs="$abs_ladir/$laname $newdependency_libs"
+	  # ... and its dependency_libs
+	  tmp_libs=
+	  for deplib in $dependency_libs; do
+	    newdependency_libs="$deplib $newdependency_libs"
+	    if test "X$duplicate_deps" = "Xyes" ; then
+	      case "$tmp_libs " in
+	      *" $deplib "*) specialdeplibs="$specialdeplibs $deplib" ;;
+	      esac
+	    fi
+	    tmp_libs="$tmp_libs $deplib"
+	  done
+
+	  if test "$link_all_deplibs" != no; then
+	    # Add the search paths of all dependency libraries
+	    for deplib in $dependency_libs; do
+	      case $deplib in
+	      -L*) path="$deplib" ;;
+	      *.la)
+		dir=`$echo "X$deplib" | $Xsed -e 's%/[^/]*$%%'`
+		test "X$dir" = "X$deplib" && dir="."
+		# We need an absolute path.
+		case $dir in
+		[\\/]* | [A-Za-z]:[\\/]*) absdir="$dir" ;;
+		*)
+		  absdir=`cd "$dir" && pwd`
+		  if test -z "$absdir"; then
+		    $echo "$modename: warning: cannot determine absolute directory name of \`$dir'" 1>&2
+		    absdir="$dir"
+		  fi
+		  ;;
+		esac
+		if grep "^installed=no" $deplib > /dev/null; then
+		  path="$absdir/$objdir"
+		else
+		  eval libdir=`${SED} -n -e 's/^libdir=\(.*\)$/\1/p' $deplib`
+		  if test -z "$libdir"; then
+		    $echo "$modename: \`$deplib' is not a valid libtool archive" 1>&2
+		    exit $EXIT_FAILURE
+		  fi
+		  if test "$absdir" != "$libdir"; then
+		    $echo "$modename: warning: \`$deplib' seems to be moved" 1>&2
+		  fi
+		  path="$absdir"
+		fi
+		depdepl=
+		case $host in
+		*-*-darwin*)
+		  # we do not want to link against static libs,
+		  # but need to link against shared
+		  eval deplibrary_names=`${SED} -n -e 's/^library_names=\(.*\)$/\1/p' $deplib`
+		  if test -n "$deplibrary_names" ; then
+		    for tmp in $deplibrary_names ; do
+		      depdepl=$tmp
+		    done
+		    if test -f "$path/$depdepl" ; then
+		      depdepl="$path/$depdepl"
+		    fi
+		    # do not add paths which are already there
+		    case " $newlib_search_path " in
+		    *" $path "*) ;;
+		    *) newlib_search_path="$newlib_search_path $path";;
+		    esac
+		  fi
+		  path=""
+		  ;;
+		*)
+		  path="-L$path"
+		  ;;
+		esac
+		;;
+	      -l*)
+		case $host in
+		*-*-darwin*)
+		  # Again, we only want to link against shared libraries
+		  eval tmp_libs=`$echo "X$deplib" | $Xsed -e "s,^\-l,,"`
+		  for tmp in $newlib_search_path ; do
+		    if test -f "$tmp/lib$tmp_libs.dylib" ; then
+		      eval depdepl="$tmp/lib$tmp_libs.dylib"
+		      break
+		    fi
+		  done
+		  path=""
+		  ;;
+		*) continue ;;
+		esac
+		;;
+	      *) continue ;;
+	      esac
+	      case " $deplibs " in
+	      *" $path "*) ;;
+	      *) deplibs="$path $deplibs" ;;
+	      esac
+	      case " $deplibs " in
+	      *" $depdepl "*) ;;
+	      *) deplibs="$depdepl $deplibs" ;;
+	      esac
+	    done
+	  fi # link_all_deplibs != no
+	fi # linkmode = lib
+      done # for deplib in $libs
+      dependency_libs="$newdependency_libs"
+      if test "$pass" = dlpreopen; then
+	# Link the dlpreopened libraries before other libraries
+	for deplib in $save_deplibs; do
+	  deplibs="$deplib $deplibs"
+	done
+      fi
+      if test "$pass" != dlopen; then
+	if test "$pass" != conv; then
+	  # Make sure lib_search_path contains only unique directories.
+	  lib_search_path=
+	  for dir in $newlib_search_path; do
+	    case "$lib_search_path " in
+	    *" $dir "*) ;;
+	    *) lib_search_path="$lib_search_path $dir" ;;
+	    esac
+	  done
+	  newlib_search_path=
+	fi
+
+	if test "$linkmode,$pass" != "prog,link"; then
+	  vars="deplibs"
+	else
+	  vars="compile_deplibs finalize_deplibs"
+	fi
+	for var in $vars dependency_libs; do
+	  # Add libraries to $var in reverse order
+	  eval tmp_libs=\"\$$var\"
+	  new_libs=
+	  for deplib in $tmp_libs; do
+	    # FIXME: Pedantically, this is the right thing to do, so
+	    #        that some nasty dependency loop isn't accidentally
+	    #        broken:
+	    #new_libs="$deplib $new_libs"
+	    # Pragmatically, this seems to cause very few problems in
+	    # practice:
+	    case $deplib in
+	    -L*) new_libs="$deplib $new_libs" ;;
+	    -R*) ;;
+	    *)
+	      # And here is the reason: when a library appears more
+	      # than once as an explicit dependence of a library, or
+	      # is implicitly linked in more than once by the
+	      # compiler, it is considered special, and multiple
+	      # occurrences thereof are not removed.  Compare this
+	      # with having the same library being listed as a
+	      # dependency of multiple other libraries: in this case,
+	      # we know (pedantically, we assume) the library does not
+	      # need to be listed more than once, so we keep only the
+	      # last copy.  This is not always right, but it is rare
+	      # enough that we require users that really mean to play
+	      # such unportable linking tricks to link the library
+	      # using -Wl,-lname, so that libtool does not consider it
+	      # for duplicate removal.
+	      case " $specialdeplibs " in
+	      *" $deplib "*) new_libs="$deplib $new_libs" ;;
+	      *)
+		case " $new_libs " in
+		*" $deplib "*) ;;
+		*) new_libs="$deplib $new_libs" ;;
+		esac
+		;;
+	      esac
+	      ;;
+	    esac
+	  done
+	  tmp_libs=
+	  for deplib in $new_libs; do
+	    case $deplib in
+	    -L*)
+	      case " $tmp_libs " in
+	      *" $deplib "*) ;;
+	      *) tmp_libs="$tmp_libs $deplib" ;;
+	      esac
+	      ;;
+	    *) tmp_libs="$tmp_libs $deplib" ;;
+	    esac
+	  done
+	  eval $var=\"$tmp_libs\"
+	done # for var
+      fi
+      # Last step: remove runtime libs from dependency_libs
+      # (they stay in deplibs)
+      tmp_libs=
+      for i in $dependency_libs ; do
+	case " $predeps $postdeps $compiler_lib_search_path " in
+	*" $i "*)
+	  i=""
+	  ;;
+	esac
+	if test -n "$i" ; then
+	  tmp_libs="$tmp_libs $i"
+	fi
+      done
+      dependency_libs=$tmp_libs
+    done # for pass
+    if test "$linkmode" = prog; then
+      dlfiles="$newdlfiles"
+      dlprefiles="$newdlprefiles"
+    fi
+
+    case $linkmode in
+    oldlib)
+      if test -n "$deplibs"; then
+	$echo "$modename: warning: \`-l' and \`-L' are ignored for archives" 1>&2
+      fi
+
+      if test -n "$dlfiles$dlprefiles" || test "$dlself" != no; then
+	$echo "$modename: warning: \`-dlopen' is ignored for archives" 1>&2
+      fi
+
+      if test -n "$rpath"; then
+	$echo "$modename: warning: \`-rpath' is ignored for archives" 1>&2
+      fi
+
+      if test -n "$xrpath"; then
+	$echo "$modename: warning: \`-R' is ignored for archives" 1>&2
+      fi
+
+      if test -n "$vinfo"; then
+	$echo "$modename: warning: \`-version-info/-version-number' is ignored for archives" 1>&2
+      fi
+
+      if test -n "$release"; then
+	$echo "$modename: warning: \`-release' is ignored for archives" 1>&2
+      fi
+
+      if test -n "$export_symbols" || test -n "$export_symbols_regex"; then
+	$echo "$modename: warning: \`-export-symbols' is ignored for archives" 1>&2
+      fi
+
+      # Now set the variables for building old libraries.
+      build_libtool_libs=no
+      oldlibs="$output"
+      objs="$objs$old_deplibs"
+      ;;
+
+    lib)
+      # Make sure we only generate libraries of the form `libNAME.la'.
+      case $outputname in
+      lib*)
+	name=`$echo "X$outputname" | $Xsed -e 's/\.la$//' -e 's/^lib//'`
+	eval shared_ext=\"$shrext_cmds\"
+	eval libname=\"$libname_spec\"
+	;;
+      *)
+	if test "$module" = no; then
+	  $echo "$modename: libtool library \`$output' must begin with \`lib'" 1>&2
+	  $echo "$help" 1>&2
+	  exit $EXIT_FAILURE
+	fi
+	if test "$need_lib_prefix" != no; then
+	  # Add the "lib" prefix for modules if required
+	  name=`$echo "X$outputname" | $Xsed -e 's/\.la$//'`
+	  eval shared_ext=\"$shrext_cmds\"
+	  eval libname=\"$libname_spec\"
+	else
+	  libname=`$echo "X$outputname" | $Xsed -e 's/\.la$//'`
+	fi
+	;;
+      esac
+
+      if test -n "$objs"; then
+	if test "$deplibs_check_method" != pass_all; then
+	  $echo "$modename: cannot build libtool library \`$output' from non-libtool objects on this host:$objs" 2>&1
+	  exit $EXIT_FAILURE
+	else
+	  $echo
+	  $echo "*** Warning: Linking the shared library $output against the non-libtool"
+	  $echo "*** objects $objs is not portable!"
+	  libobjs="$libobjs $objs"
+	fi
+      fi
+
+      if test "$dlself" != no; then
+	$echo "$modename: warning: \`-dlopen self' is ignored for libtool libraries" 1>&2
+      fi
+
+      set dummy $rpath
+      if test "$#" -gt 2; then
+	$echo "$modename: warning: ignoring multiple \`-rpath's for a libtool library" 1>&2
+      fi
+      install_libdir="$2"
+
+      oldlibs=
+      if test -z "$rpath"; then
+	if test "$build_libtool_libs" = yes; then
+	  # Building a libtool convenience library.
+	  # Some compilers have problems with a `.al' extension so
+	  # convenience libraries should have the same extension an
+	  # archive normally would.
+	  oldlibs="$output_objdir/$libname.$libext $oldlibs"
+	  build_libtool_libs=convenience
+	  build_old_libs=yes
+	fi
+
+	if test -n "$vinfo"; then
+	  $echo "$modename: warning: \`-version-info/-version-number' is ignored for convenience libraries" 1>&2
+	fi
+
+	if test -n "$release"; then
+	  $echo "$modename: warning: \`-release' is ignored for convenience libraries" 1>&2
+	fi
+      else
+
+	# Parse the version information argument.
+	save_ifs="$IFS"; IFS=':'
+	set dummy $vinfo 0 0 0
+	IFS="$save_ifs"
+
+	if test -n "$8"; then
+	  $echo "$modename: too many parameters to \`-version-info'" 1>&2
+	  $echo "$help" 1>&2
+	  exit $EXIT_FAILURE
+	fi
+
+	# convert absolute version numbers to libtool ages
+	# this retains compatibility with .la files and attempts
+	# to make the code below a bit more comprehensible
+
+	case $vinfo_number in
+	yes)
+	  number_major="$2"
+	  number_minor="$3"
+	  number_revision="$4"
+	  #
+	  # There are really only two kinds -- those that
+	  # use the current revision as the major version
+	  # and those that subtract age and use age as
+	  # a minor version.  But, then there is irix
+	  # which has an extra 1 added just for fun
+	  #
+	  case $version_type in
+	  darwin|linux|osf|windows)
+	    current=`expr $number_major + $number_minor`
+	    age="$number_minor"
+	    revision="$number_revision"
+	    ;;
+	  freebsd-aout|freebsd-elf|sunos)
+	    current="$number_major"
+	    revision="$number_minor"
+	    age="0"
+	    ;;
+	  irix|nonstopux)
+	    current=`expr $number_major + $number_minor - 1`
+	    age="$number_minor"
+	    revision="$number_minor"
+	    ;;
+	  *)
+	    $echo "$modename: unknown library version type \`$version_type'" 1>&2
+	    $echo "Fatal configuration error.  See the $PACKAGE docs for more information." 1>&2
+	    exit $EXIT_FAILURE
+	    ;;
+	  esac
+	  ;;
+	no)
+	  current="$2"
+	  revision="$3"
+	  age="$4"
+	  ;;
+	esac
+
+	# Check that each of the things are valid numbers.
+	case $current in
+	0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;
+	*)
+	  $echo "$modename: CURRENT \`$current' must be a nonnegative integer" 1>&2
+	  $echo "$modename: \`$vinfo' is not valid version information" 1>&2
+	  exit $EXIT_FAILURE
+	  ;;
+	esac
+
+	case $revision in
+	0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;
+	*)
+	  $echo "$modename: REVISION \`$revision' must be a nonnegative integer" 1>&2
+	  $echo "$modename: \`$vinfo' is not valid version information" 1>&2
+	  exit $EXIT_FAILURE
+	  ;;
+	esac
+
+	case $age in
+	0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;
+	*)
+	  $echo "$modename: AGE \`$age' must be a nonnegative integer" 1>&2
+	  $echo "$modename: \`$vinfo' is not valid version information" 1>&2
+	  exit $EXIT_FAILURE
+	  ;;
+	esac
+
+	if test "$age" -gt "$current"; then
+	  $echo "$modename: AGE \`$age' is greater than the current interface number \`$current'" 1>&2
+	  $echo "$modename: \`$vinfo' is not valid version information" 1>&2
+	  exit $EXIT_FAILURE
+	fi
+
+	# Calculate the version variables.
+	major=
+	versuffix=
+	verstring=
+	case $version_type in
+	none) ;;
+
+	darwin)
+	  # Like Linux, but with the current version available in
+	  # verstring for coding it into the library header
+	  major=.`expr $current - $age`
+	  versuffix="$major.$age.$revision"
+	  # Darwin ld doesn't like 0 for these options...
+	  minor_current=`expr $current + 1`
+	  verstring="${wl}-compatibility_version ${wl}$minor_current ${wl}-current_version ${wl}$minor_current.$revision"
+	  ;;
+
+	freebsd-aout)
+	  major=".$current"
+	  versuffix=".$current.$revision";
+	  ;;
+
+	freebsd-elf)
+	  major=".$current"
+	  versuffix=".$current";
+	  ;;
+
+	irix | nonstopux)
+	  major=`expr $current - $age + 1`
+
+	  case $version_type in
+	    nonstopux) verstring_prefix=nonstopux ;;
+	    *)         verstring_prefix=sgi ;;
+	  esac
+	  verstring="$verstring_prefix$major.$revision"
+
+	  # Add in all the interfaces that we are compatible with.
+	  loop=$revision
+	  while test "$loop" -ne 0; do
+	    iface=`expr $revision - $loop`
+	    loop=`expr $loop - 1`
+	    verstring="$verstring_prefix$major.$iface:$verstring"
+	  done
+
+	  # Before this point, $major must not contain `.'.
+	  major=.$major
+	  versuffix="$major.$revision"
+	  ;;
+
+	linux)
+	  major=.`expr $current - $age`
+	  versuffix="$major.$age.$revision"
+	  ;;
+
+	osf)
+	  major=.`expr $current - $age`
+	  versuffix=".$current.$age.$revision"
+	  verstring="$current.$age.$revision"
+
+	  # Add in all the interfaces that we are compatible with.
+	  loop=$age
+	  while test "$loop" -ne 0; do
+	    iface=`expr $current - $loop`
+	    loop=`expr $loop - 1`
+	    verstring="$verstring:${iface}.0"
+	  done
+
+	  # Make executables depend on our current version.
+	  verstring="$verstring:${current}.0"
+	  ;;
+
+	sunos)
+	  major=".$current"
+	  versuffix=".$current.$revision"
+	  ;;
+
+	windows)
+	  # Use '-' rather than '.', since we only want one
+	  # extension on DOS 8.3 filesystems.
+	  major=`expr $current - $age`
+	  versuffix="-$major"
+	  ;;
+
+	*)
+	  $echo "$modename: unknown library version type \`$version_type'" 1>&2
+	  $echo "Fatal configuration error.  See the $PACKAGE docs for more information." 1>&2
+	  exit $EXIT_FAILURE
+	  ;;
+	esac
+
+	# Clear the version info if we defaulted, and they specified a release.
+	if test -z "$vinfo" && test -n "$release"; then
+	  major=
+	  case $version_type in
+	  darwin)
+	    # we can't check for "0.0" in archive_cmds due to quoting
+	    # problems, so we reset it completely
+	    verstring=
+	    ;;
+	  *)
+	    verstring="0.0"
+	    ;;
+	  esac
+	  if test "$need_version" = no; then
+	    versuffix=
+	  else
+	    versuffix=".0.0"
+	  fi
+	fi
+
+	# Remove version info from name if versioning should be avoided
+	if test "$avoid_version" = yes && test "$need_version" = no; then
+	  major=
+	  versuffix=
+	  verstring=""
+	fi
+
+	# Check to see if the archive will have undefined symbols.
+	if test "$allow_undefined" = yes; then
+	  if test "$allow_undefined_flag" = unsupported; then
+	    $echo "$modename: warning: undefined symbols not allowed in $host shared libraries" 1>&2
+	    build_libtool_libs=no
+	    build_old_libs=yes
+	  fi
+	else
+	  # Don't allow undefined symbols.
+	  allow_undefined_flag="$no_undefined_flag"
+	fi
+      fi
+
+      if test "$mode" != relink; then
+	# Remove our outputs, but don't remove object files since they
+	# may have been created when compiling PIC objects.
+	removelist=
+	tempremovelist=`$echo "$output_objdir/*"`
+	for p in $tempremovelist; do
+	  case $p in
+	    *.$objext)
+	       ;;
+	    $output_objdir/$outputname | $output_objdir/$libname.* | $output_objdir/${libname}${release}.*)
+	       if test "X$precious_files_regex" != "X"; then
+	         if echo $p | $EGREP -e "$precious_files_regex" >/dev/null 2>&1
+	         then
+		   continue
+		 fi
+	       fi
+	       removelist="$removelist $p"
+	       ;;
+	    *) ;;
+	  esac
+	done
+	if test -n "$removelist"; then
+	  $show "${rm}r $removelist"
+	  $run ${rm}r $removelist
+	fi
+      fi
+
+      # Now set the variables for building old libraries.
+      if test "$build_old_libs" = yes && test "$build_libtool_libs" != convenience ; then
+	oldlibs="$oldlibs $output_objdir/$libname.$libext"
+
+	# Transform .lo files to .o files.
+	oldobjs="$objs "`$echo "X$libobjs" | $SP2NL | $Xsed -e '/\.'${libext}'$/d' -e "$lo2o" | $NL2SP`
+      fi
+
+      # Eliminate all temporary directories.
+      for path in $notinst_path; do
+	lib_search_path=`$echo "$lib_search_path " | ${SED} -e "s% $path % %g"`
+	deplibs=`$echo "$deplibs " | ${SED} -e "s% -L$path % %g"`
+	dependency_libs=`$echo "$dependency_libs " | ${SED} -e "s% -L$path % %g"`
+      done
+
+      if test -n "$xrpath"; then
+	# If the user specified any rpath flags, then add them.
+	temp_xrpath=
+	for libdir in $xrpath; do
+	  temp_xrpath="$temp_xrpath -R$libdir"
+	  case "$finalize_rpath " in
+	  *" $libdir "*) ;;
+	  *) finalize_rpath="$finalize_rpath $libdir" ;;
+	  esac
+	done
+	if test "$hardcode_into_libs" != yes || test "$build_old_libs" = yes; then
+	  dependency_libs="$temp_xrpath $dependency_libs"
+	fi
+      fi
+
+      # Make sure dlfiles contains only unique files that won't be dlpreopened
+      old_dlfiles="$dlfiles"
+      dlfiles=
+      for lib in $old_dlfiles; do
+	case " $dlprefiles $dlfiles " in
+	*" $lib "*) ;;
+	*) dlfiles="$dlfiles $lib" ;;
+	esac
+      done
+
+      # Make sure dlprefiles contains only unique files
+      old_dlprefiles="$dlprefiles"
+      dlprefiles=
+      for lib in $old_dlprefiles; do
+	case "$dlprefiles " in
+	*" $lib "*) ;;
+	*) dlprefiles="$dlprefiles $lib" ;;
+	esac
+      done
+
+      if test "$build_libtool_libs" = yes; then
+	if test -n "$rpath"; then
+	  case $host in
+	  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-beos*)
+	    # these systems don't actually have a c library (as such)!
+	    ;;
+	  *-*-rhapsody* | *-*-darwin1.[012])
+	    # Rhapsody C library is in the System framework
+	    deplibs="$deplibs -framework System"
+	    ;;
+	  *-*-netbsd*)
+	    # Don't link with libc until the a.out ld.so is fixed.
+	    ;;
+	  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)
+	    # Do not include libc due to us having libc/libc_r.
+	    ;;
+	  *-*-sco3.2v5* | *-*-sco5v6*)
+	    # Causes problems with __ctype
+	    ;;
+	  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)
+	    # Compiler inserts libc in the correct place for threads to work
+	    ;;
+ 	  *)
+	    # Add libc to deplibs on all other systems if necessary.
+	    if test "$build_libtool_need_lc" = "yes"; then
+	      deplibs="$deplibs -lc"
+	    fi
+	    ;;
+	  esac
+	fi
+
+	# Transform deplibs into only deplibs that can be linked in shared.
+	name_save=$name
+	libname_save=$libname
+	release_save=$release
+	versuffix_save=$versuffix
+	major_save=$major
+	# I'm not sure if I'm treating the release correctly.  I think
+	# release should show up in the -l (ie -lgmp5) so we don't want to
+	# add it in twice.  Is that correct?
+	release=""
+	versuffix=""
+	major=""
+	newdeplibs=
+	droppeddeps=no
+	case $deplibs_check_method in
+	pass_all)
+	  # Don't check for shared/static.  Everything works.
+	  # This might be a little naive.  We might want to check
+	  # whether the library exists or not.  But this is on
+	  # osf3 & osf4 and I'm not really sure... Just
+	  # implementing what was already the behavior.
+	  newdeplibs=$deplibs
+	  ;;
+	test_compile)
+	  # This code stresses the "libraries are programs" paradigm to its
+	  # limits. Maybe even breaks it.  We compile a program, linking it
+	  # against the deplibs as a proxy for the library.  Then we can check
+	  # whether they linked in statically or dynamically with ldd.
+	  $rm conftest.c
+	  cat > conftest.c <<EOF
+	  int main() { return 0; }
+EOF
+	  $rm conftest
+	  $LTCC $LTCFLAGS -o conftest conftest.c $deplibs
+	  if test "$?" -eq 0 ; then
+	    ldd_output=`ldd conftest`
+	    for i in $deplibs; do
+	      name=`expr $i : '-l\(.*\)'`
+	      # If $name is empty we are operating on a -L argument.
+              if test "$name" != "" && test "$name" -ne "0"; then
+		if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
+		  case " $predeps $postdeps " in
+		  *" $i "*)
+		    newdeplibs="$newdeplibs $i"
+		    i=""
+		    ;;
+		  esac
+	        fi
+		if test -n "$i" ; then
+		  libname=`eval \\$echo \"$libname_spec\"`
+		  deplib_matches=`eval \\$echo \"$library_names_spec\"`
+		  set dummy $deplib_matches
+		  deplib_match=$2
+		  if test `expr "$ldd_output" : ".*$deplib_match"` -ne 0 ; then
+		    newdeplibs="$newdeplibs $i"
+		  else
+		    droppeddeps=yes
+		    $echo
+		    $echo "*** Warning: dynamic linker does not accept needed library $i."
+		    $echo "*** I have the capability to make that library automatically link in when"
+		    $echo "*** you link to this library.  But I can only do this if you have a"
+		    $echo "*** shared version of the library, which I believe you do not have"
+		    $echo "*** because a test_compile did reveal that the linker did not use it for"
+		    $echo "*** its dynamic dependency list that programs get resolved with at runtime."
+		  fi
+		fi
+	      else
+		newdeplibs="$newdeplibs $i"
+	      fi
+	    done
+	  else
+	    # Error occurred in the first compile.  Let's try to salvage
+	    # the situation: Compile a separate program for each library.
+	    for i in $deplibs; do
+	      name=`expr $i : '-l\(.*\)'`
+	      # If $name is empty we are operating on a -L argument.
+              if test "$name" != "" && test "$name" != "0"; then
+		$rm conftest
+		$LTCC $LTCFLAGS -o conftest conftest.c $i
+		# Did it work?
+		if test "$?" -eq 0 ; then
+		  ldd_output=`ldd conftest`
+		  if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
+		    case " $predeps $postdeps " in
+		    *" $i "*)
+		      newdeplibs="$newdeplibs $i"
+		      i=""
+		      ;;
+		    esac
+		  fi
+		  if test -n "$i" ; then
+		    libname=`eval \\$echo \"$libname_spec\"`
+		    deplib_matches=`eval \\$echo \"$library_names_spec\"`
+		    set dummy $deplib_matches
+		    deplib_match=$2
+		    if test `expr "$ldd_output" : ".*$deplib_match"` -ne 0 ; then
+		      newdeplibs="$newdeplibs $i"
+		    else
+		      droppeddeps=yes
+		      $echo
+		      $echo "*** Warning: dynamic linker does not accept needed library $i."
+		      $echo "*** I have the capability to make that library automatically link in when"
+		      $echo "*** you link to this library.  But I can only do this if you have a"
+		      $echo "*** shared version of the library, which you do not appear to have"
+		      $echo "*** because a test_compile did reveal that the linker did not use this one"
+		      $echo "*** as a dynamic dependency that programs can get resolved with at runtime."
+		    fi
+		  fi
+		else
+		  droppeddeps=yes
+		  $echo
+		  $echo "*** Warning!  Library $i is needed by this library but I was not able to"
+		  $echo "***  make it link in!  You will probably need to install it or some"
+		  $echo "*** library that it depends on before this library will be fully"
+		  $echo "*** functional.  Installing it before continuing would be even better."
+		fi
+	      else
+		newdeplibs="$newdeplibs $i"
+	      fi
+	    done
+	  fi
+	  ;;
+	file_magic*)
+	  set dummy $deplibs_check_method
+	  file_magic_regex=`expr "$deplibs_check_method" : "$2 \(.*\)"`
+	  for a_deplib in $deplibs; do
+	    name=`expr $a_deplib : '-l\(.*\)'`
+	    # If $name is empty we are operating on a -L argument.
+            if test "$name" != "" && test  "$name" != "0"; then
+	      if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
+		case " $predeps $postdeps " in
+		*" $a_deplib "*)
+		  newdeplibs="$newdeplibs $a_deplib"
+		  a_deplib=""
+		  ;;
+		esac
+	      fi
+	      if test -n "$a_deplib" ; then
+		libname=`eval \\$echo \"$libname_spec\"`
+		for i in $lib_search_path $sys_lib_search_path $shlib_search_path; do
+		  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`
+		  for potent_lib in $potential_libs; do
+		      # Follow soft links.
+		      if ls -lLd "$potent_lib" 2>/dev/null \
+			 | grep " -> " >/dev/null; then
+			continue
+		      fi
+		      # The statement above tries to avoid entering an
+		      # endless loop below, in case of cyclic links.
+		      # We might still enter an endless loop, since a link
+		      # loop can be closed while we follow links,
+		      # but so what?
+		      potlib="$potent_lib"
+		      while test -h "$potlib" 2>/dev/null; do
+			potliblink=`ls -ld $potlib | ${SED} 's/.* -> //'`
+			case $potliblink in
+			[\\/]* | [A-Za-z]:[\\/]*) potlib="$potliblink";;
+			*) potlib=`$echo "X$potlib" | $Xsed -e 's,[^/]*$,,'`"$potliblink";;
+			esac
+		      done
+		      if eval $file_magic_cmd \"\$potlib\" 2>/dev/null \
+			 | ${SED} 10q \
+			 | $EGREP "$file_magic_regex" > /dev/null; then
+			newdeplibs="$newdeplibs $a_deplib"
+			a_deplib=""
+			break 2
+		      fi
+		  done
+		done
+	      fi
+	      if test -n "$a_deplib" ; then
+		droppeddeps=yes
+		$echo
+		$echo "*** Warning: linker path does not have real file for library $a_deplib."
+		$echo "*** I have the capability to make that library automatically link in when"
+		$echo "*** you link to this library.  But I can only do this if you have a"
+		$echo "*** shared version of the library, which you do not appear to have"
+		$echo "*** because I did check the linker path looking for a file starting"
+		if test -z "$potlib" ; then
+		  $echo "*** with $libname but no candidates were found. (...for file magic test)"
+		else
+		  $echo "*** with $libname and none of the candidates passed a file format test"
+		  $echo "*** using a file magic. Last file checked: $potlib"
+		fi
+	      fi
+	    else
+	      # Add a -L argument.
+	      newdeplibs="$newdeplibs $a_deplib"
+	    fi
+	  done # Gone through all deplibs.
+	  ;;
+	match_pattern*)
+	  set dummy $deplibs_check_method
+	  match_pattern_regex=`expr "$deplibs_check_method" : "$2 \(.*\)"`
+	  for a_deplib in $deplibs; do
+	    name=`expr $a_deplib : '-l\(.*\)'`
+	    # If $name is empty we are operating on a -L argument.
+	    if test -n "$name" && test "$name" != "0"; then
+	      if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
+		case " $predeps $postdeps " in
+		*" $a_deplib "*)
+		  newdeplibs="$newdeplibs $a_deplib"
+		  a_deplib=""
+		  ;;
+		esac
+	      fi
+	      if test -n "$a_deplib" ; then
+		libname=`eval \\$echo \"$libname_spec\"`
+		for i in $lib_search_path $sys_lib_search_path $shlib_search_path; do
+		  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`
+		  for potent_lib in $potential_libs; do
+		    potlib="$potent_lib" # see symlink-check above in file_magic test
+		    if eval $echo \"$potent_lib\" 2>/dev/null \
+		        | ${SED} 10q \
+		        | $EGREP "$match_pattern_regex" > /dev/null; then
+		      newdeplibs="$newdeplibs $a_deplib"
+		      a_deplib=""
+		      break 2
+		    fi
+		  done
+		done
+	      fi
+	      if test -n "$a_deplib" ; then
+		droppeddeps=yes
+		$echo
+		$echo "*** Warning: linker path does not have real file for library $a_deplib."
+		$echo "*** I have the capability to make that library automatically link in when"
+		$echo "*** you link to this library.  But I can only do this if you have a"
+		$echo "*** shared version of the library, which you do not appear to have"
+		$echo "*** because I did check the linker path looking for a file starting"
+		if test -z "$potlib" ; then
+		  $echo "*** with $libname but no candidates were found. (...for regex pattern test)"
+		else
+		  $echo "*** with $libname and none of the candidates passed a file format test"
+		  $echo "*** using a regex pattern. Last file checked: $potlib"
+		fi
+	      fi
+	    else
+	      # Add a -L argument.
+	      newdeplibs="$newdeplibs $a_deplib"
+	    fi
+	  done # Gone through all deplibs.
+	  ;;
+	none | unknown | *)
+	  newdeplibs=""
+	  tmp_deplibs=`$echo "X $deplibs" | $Xsed -e 's/ -lc$//' \
+	    -e 's/ -[LR][^ ]*//g'`
+	  if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
+	    for i in $predeps $postdeps ; do
+	      # can't use Xsed below, because $i might contain '/'
+	      tmp_deplibs=`$echo "X $tmp_deplibs" | ${SED} -e "1s,^X,," -e "s,$i,,"`
+	    done
+	  fi
+	  if $echo "X $tmp_deplibs" | $Xsed -e 's/[ 	]//g' \
+	    | grep . >/dev/null; then
+	    $echo
+	    if test "X$deplibs_check_method" = "Xnone"; then
+	      $echo "*** Warning: inter-library dependencies are not supported in this platform."
+	    else
+	      $echo "*** Warning: inter-library dependencies are not known to be supported."
+	    fi
+	    $echo "*** All declared inter-library dependencies are being dropped."
+	    droppeddeps=yes
+	  fi
+	  ;;
+	esac
+	versuffix=$versuffix_save
+	major=$major_save
+	release=$release_save
+	libname=$libname_save
+	name=$name_save
+
+	case $host in
+	*-*-rhapsody* | *-*-darwin1.[012])
+	  # On Rhapsody replace the C library is the System framework
+	  newdeplibs=`$echo "X $newdeplibs" | $Xsed -e 's/ -lc / -framework System /'`
+	  ;;
+	esac
+
+	if test "$droppeddeps" = yes; then
+	  if test "$module" = yes; then
+	    $echo
+	    $echo "*** Warning: libtool could not satisfy all declared inter-library"
+	    $echo "*** dependencies of module $libname.  Therefore, libtool will create"
+	    $echo "*** a static module, that should work as long as the dlopening"
+	    $echo "*** application is linked with the -dlopen flag."
+	    if test -z "$global_symbol_pipe"; then
+	      $echo
+	      $echo "*** However, this would only work if libtool was able to extract symbol"
+	      $echo "*** lists from a program, using \`nm' or equivalent, but libtool could"
+	      $echo "*** not find such a program.  So, this module is probably useless."
+	      $echo "*** \`nm' from GNU binutils and a full rebuild may help."
+	    fi
+	    if test "$build_old_libs" = no; then
+	      oldlibs="$output_objdir/$libname.$libext"
+	      build_libtool_libs=module
+	      build_old_libs=yes
+	    else
+	      build_libtool_libs=no
+	    fi
+	  else
+	    $echo "*** The inter-library dependencies that have been dropped here will be"
+	    $echo "*** automatically added whenever a program is linked with this library"
+	    $echo "*** or is declared to -dlopen it."
+
+	    if test "$allow_undefined" = no; then
+	      $echo
+	      $echo "*** Since this library must not contain undefined symbols,"
+	      $echo "*** because either the platform does not support them or"
+	      $echo "*** it was explicitly requested with -no-undefined,"
+	      $echo "*** libtool will only create a static version of it."
+	      if test "$build_old_libs" = no; then
+		oldlibs="$output_objdir/$libname.$libext"
+		build_libtool_libs=module
+		build_old_libs=yes
+	      else
+		build_libtool_libs=no
+	      fi
+	    fi
+	  fi
+	fi
+	# Done checking deplibs!
+	deplibs=$newdeplibs
+      fi
+
+
+      # move library search paths that coincide with paths to not yet
+      # installed libraries to the beginning of the library search list
+      new_libs=
+      for path in $notinst_path; do
+	case " $new_libs " in
+	*" -L$path/$objdir "*) ;;
+	*)
+	  case " $deplibs " in
+	  *" -L$path/$objdir "*)
+	    new_libs="$new_libs -L$path/$objdir" ;;
+	  esac
+	  ;;
+	esac
+      done
+      for deplib in $deplibs; do
+	case $deplib in
+	-L*)
+	  case " $new_libs " in
+	  *" $deplib "*) ;;
+	  *) new_libs="$new_libs $deplib" ;;
+	  esac
+	  ;;
+	*) new_libs="$new_libs $deplib" ;;
+	esac
+      done
+      deplibs="$new_libs"
+
+
+      # All the library-specific variables (install_libdir is set above).
+      library_names=
+      old_library=
+      dlname=
+
+      # Test again, we may have decided not to build it any more
+      if test "$build_libtool_libs" = yes; then
+	if test "$hardcode_into_libs" = yes; then
+	  # Hardcode the library paths
+	  hardcode_libdirs=
+	  dep_rpath=
+	  rpath="$finalize_rpath"
+	  test "$mode" != relink && rpath="$compile_rpath$rpath"
+	  for libdir in $rpath; do
+	    if test -n "$hardcode_libdir_flag_spec"; then
+	      if test -n "$hardcode_libdir_separator"; then
+		if test -z "$hardcode_libdirs"; then
+		  hardcode_libdirs="$libdir"
+		else
+		  # Just accumulate the unique libdirs.
+		  case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in
+		  *"$hardcode_libdir_separator$libdir$hardcode_libdir_separator"*)
+		    ;;
+		  *)
+		    hardcode_libdirs="$hardcode_libdirs$hardcode_libdir_separator$libdir"
+		    ;;
+		  esac
+		fi
+	      else
+		eval flag=\"$hardcode_libdir_flag_spec\"
+		dep_rpath="$dep_rpath $flag"
+	      fi
+	    elif test -n "$runpath_var"; then
+	      case "$perm_rpath " in
+	      *" $libdir "*) ;;
+	      *) perm_rpath="$perm_rpath $libdir" ;;
+	      esac
+	    fi
+	  done
+	  # Substitute the hardcoded libdirs into the rpath.
+	  if test -n "$hardcode_libdir_separator" &&
+	     test -n "$hardcode_libdirs"; then
+	    libdir="$hardcode_libdirs"
+	    if test -n "$hardcode_libdir_flag_spec_ld"; then
+	      eval dep_rpath=\"$hardcode_libdir_flag_spec_ld\"
+	    else
+	      eval dep_rpath=\"$hardcode_libdir_flag_spec\"
+	    fi
+	  fi
+	  if test -n "$runpath_var" && test -n "$perm_rpath"; then
+	    # We should set the runpath_var.
+	    rpath=
+	    for dir in $perm_rpath; do
+	      rpath="$rpath$dir:"
+	    done
+	    eval "$runpath_var='$rpath\$$runpath_var'; export $runpath_var"
+	  fi
+	  test -n "$dep_rpath" && deplibs="$dep_rpath $deplibs"
+	fi
+
+	shlibpath="$finalize_shlibpath"
+	test "$mode" != relink && shlibpath="$compile_shlibpath$shlibpath"
+	if test -n "$shlibpath"; then
+	  eval "$shlibpath_var='$shlibpath\$$shlibpath_var'; export $shlibpath_var"
+	fi
+
+	# Get the real and link names of the library.
+	eval shared_ext=\"$shrext_cmds\"
+	eval library_names=\"$library_names_spec\"
+	set dummy $library_names
+	realname="$2"
+	shift; shift
+
+	if test -n "$soname_spec"; then
+	  eval soname=\"$soname_spec\"
+	else
+	  soname="$realname"
+	fi
+	if test -z "$dlname"; then
+	  dlname=$soname
+	fi
+
+	lib="$output_objdir/$realname"
+	linknames=
+	for link
+	do
+	  linknames="$linknames $link"
+	done
+
+	# Use standard objects if they are pic
+	test -z "$pic_flag" && libobjs=`$echo "X$libobjs" | $SP2NL | $Xsed -e "$lo2o" | $NL2SP`
+
+	# Prepare the list of exported symbols
+	if test -z "$export_symbols"; then
+	  if test "$always_export_symbols" = yes || test -n "$export_symbols_regex"; then
+	    $show "generating symbol list for \`$libname.la'"
+	    export_symbols="$output_objdir/$libname.exp"
+	    $run $rm $export_symbols
+	    cmds=$export_symbols_cmds
+	    save_ifs="$IFS"; IFS='~'
+	    for cmd in $cmds; do
+	      IFS="$save_ifs"
+	      eval cmd=\"$cmd\"
+	      if len=`expr "X$cmd" : ".*"` &&
+	       test "$len" -le "$max_cmd_len" || test "$max_cmd_len" -le -1; then
+	        $show "$cmd"
+	        $run eval "$cmd" || exit $?
+	        skipped_export=false
+	      else
+	        # The command line is too long to execute in one step.
+	        $show "using reloadable object file for export list..."
+	        skipped_export=:
+		# Break out early, otherwise skipped_export may be
+		# set to false by a later but shorter cmd.
+		break
+	      fi
+	    done
+	    IFS="$save_ifs"
+	    if test -n "$export_symbols_regex"; then
+	      $show "$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\""
+	      $run eval '$EGREP -e "$export_symbols_regex" "$export_symbols" > "${export_symbols}T"'
+	      $show "$mv \"${export_symbols}T\" \"$export_symbols\""
+	      $run eval '$mv "${export_symbols}T" "$export_symbols"'
+	    fi
+	  fi
+	fi
+
+	if test -n "$export_symbols" && test -n "$include_expsyms"; then
+	  $run eval '$echo "X$include_expsyms" | $SP2NL >> "$export_symbols"'
+	fi
+
+	tmp_deplibs=
+	for test_deplib in $deplibs; do
+		case " $convenience " in
+		*" $test_deplib "*) ;;
+		*)
+			tmp_deplibs="$tmp_deplibs $test_deplib"
+			;;
+		esac
+	done
+	deplibs="$tmp_deplibs"
+
+	if test -n "$convenience"; then
+	  if test -n "$whole_archive_flag_spec"; then
+	    save_libobjs=$libobjs
+	    eval libobjs=\"\$libobjs $whole_archive_flag_spec\"
+	  else
+	    gentop="$output_objdir/${outputname}x"
+	    generated="$generated $gentop"
+
+	    func_extract_archives $gentop $convenience
+	    libobjs="$libobjs $func_extract_archives_result"
+	  fi
+	fi
+	
+	if test "$thread_safe" = yes && test -n "$thread_safe_flag_spec"; then
+	  eval flag=\"$thread_safe_flag_spec\"
+	  linker_flags="$linker_flags $flag"
+	fi
+
+	# Make a backup of the uninstalled library when relinking
+	if test "$mode" = relink; then
+	  $run eval '(cd $output_objdir && $rm ${realname}U && $mv $realname ${realname}U)' || exit $?
+	fi
+
+	# Do each of the archive commands.
+	if test "$module" = yes && test -n "$module_cmds" ; then
+	  if test -n "$export_symbols" && test -n "$module_expsym_cmds"; then
+	    eval test_cmds=\"$module_expsym_cmds\"
+	    cmds=$module_expsym_cmds
+	  else
+	    eval test_cmds=\"$module_cmds\"
+	    cmds=$module_cmds
+	  fi
+	else
+	if test -n "$export_symbols" && test -n "$archive_expsym_cmds"; then
+	  eval test_cmds=\"$archive_expsym_cmds\"
+	  cmds=$archive_expsym_cmds
+	else
+	  eval test_cmds=\"$archive_cmds\"
+	  cmds=$archive_cmds
+	  fi
+	fi
+
+	if test "X$skipped_export" != "X:" &&
+	   len=`expr "X$test_cmds" : ".*" 2>/dev/null` &&
+	   test "$len" -le "$max_cmd_len" || test "$max_cmd_len" -le -1; then
+	  :
+	else
+	  # The command line is too long to link in one step, link piecewise.
+	  $echo "creating reloadable object files..."
+
+	  # Save the value of $output and $libobjs because we want to
+	  # use them later.  If we have whole_archive_flag_spec, we
+	  # want to use save_libobjs as it was before
+	  # whole_archive_flag_spec was expanded, because we can't
+	  # assume the linker understands whole_archive_flag_spec.
+	  # This may have to be revisited, in case too many
+	  # convenience libraries get linked in and end up exceeding
+	  # the spec.
+	  if test -z "$convenience" || test -z "$whole_archive_flag_spec"; then
+	    save_libobjs=$libobjs
+	  fi
+	  save_output=$output
+	  output_la=`$echo "X$output" | $Xsed -e "$basename"`
+
+	  # Clear the reloadable object creation command queue and
+	  # initialize k to one.
+	  test_cmds=
+	  concat_cmds=
+	  objlist=
+	  delfiles=
+	  last_robj=
+	  k=1
+	  output=$output_objdir/$output_la-${k}.$objext
+	  # Loop over the list of objects to be linked.
+	  for obj in $save_libobjs
+	  do
+	    eval test_cmds=\"$reload_cmds $objlist $last_robj\"
+	    if test "X$objlist" = X ||
+	       { len=`expr "X$test_cmds" : ".*" 2>/dev/null` &&
+		 test "$len" -le "$max_cmd_len"; }; then
+	      objlist="$objlist $obj"
+	    else
+	      # The command $test_cmds is almost too long, add a
+	      # command to the queue.
+	      if test "$k" -eq 1 ; then
+		# The first file doesn't have a previous command to add.
+		eval concat_cmds=\"$reload_cmds $objlist $last_robj\"
+	      else
+		# All subsequent reloadable object files will link in
+		# the last one created.
+		eval concat_cmds=\"\$concat_cmds~$reload_cmds $objlist $last_robj\"
+	      fi
+	      last_robj=$output_objdir/$output_la-${k}.$objext
+	      k=`expr $k + 1`
+	      output=$output_objdir/$output_la-${k}.$objext
+	      objlist=$obj
+	      len=1
+	    fi
+	  done
+	  # Handle the remaining objects by creating one last
+	  # reloadable object file.  All subsequent reloadable object
+	  # files will link in the last one created.
+	  test -z "$concat_cmds" || concat_cmds=$concat_cmds~
+	  eval concat_cmds=\"\${concat_cmds}$reload_cmds $objlist $last_robj\"
+
+	  if ${skipped_export-false}; then
+	    $show "generating symbol list for \`$libname.la'"
+	    export_symbols="$output_objdir/$libname.exp"
+	    $run $rm $export_symbols
+	    libobjs=$output
+	    # Append the command to create the export file.
+	    eval concat_cmds=\"\$concat_cmds~$export_symbols_cmds\"
+          fi
+
+	  # Set up a command to remove the reloadable object files
+	  # after they are used.
+	  i=0
+	  while test "$i" -lt "$k"
+	  do
+	    i=`expr $i + 1`
+	    delfiles="$delfiles $output_objdir/$output_la-${i}.$objext"
+	  done
+
+	  $echo "creating a temporary reloadable object file: $output"
+
+	  # Loop through the commands generated above and execute them.
+	  save_ifs="$IFS"; IFS='~'
+	  for cmd in $concat_cmds; do
+	    IFS="$save_ifs"
+	    $show "$cmd"
+	    $run eval "$cmd" || exit $?
+	  done
+	  IFS="$save_ifs"
+
+	  libobjs=$output
+	  # Restore the value of output.
+	  output=$save_output
+
+	  if test -n "$convenience" && test -n "$whole_archive_flag_spec"; then
+	    eval libobjs=\"\$libobjs $whole_archive_flag_spec\"
+	  fi
+	  # Expand the library linking commands again to reset the
+	  # value of $libobjs for piecewise linking.
+
+	  # Do each of the archive commands.
+	  if test "$module" = yes && test -n "$module_cmds" ; then
+	    if test -n "$export_symbols" && test -n "$module_expsym_cmds"; then
+	      cmds=$module_expsym_cmds
+	    else
+	      cmds=$module_cmds
+	    fi
+	  else
+	  if test -n "$export_symbols" && test -n "$archive_expsym_cmds"; then
+	    cmds=$archive_expsym_cmds
+	  else
+	    cmds=$archive_cmds
+	    fi
+	  fi
+
+	  # Append the command to remove the reloadable object files
+	  # to the just-reset $cmds.
+	  eval cmds=\"\$cmds~\$rm $delfiles\"
+	fi
+	save_ifs="$IFS"; IFS='~'
+	for cmd in $cmds; do
+	  IFS="$save_ifs"
+	  eval cmd=\"$cmd\"
+	  $show "$cmd"
+	  $run eval "$cmd" || {
+	    lt_exit=$?
+
+	    # Restore the uninstalled library and exit
+	    if test "$mode" = relink; then
+	      $run eval '(cd $output_objdir && $rm ${realname}T && $mv ${realname}U $realname)'
+	    fi
+
+	    exit $lt_exit
+	  }
+	done
+	IFS="$save_ifs"
+
+	# Restore the uninstalled library and exit
+	if test "$mode" = relink; then
+	  $run eval '(cd $output_objdir && $rm ${realname}T && $mv $realname ${realname}T && $mv "$realname"U $realname)' || exit $?
+
+	  if test -n "$convenience"; then
+	    if test -z "$whole_archive_flag_spec"; then
+	      $show "${rm}r $gentop"
+	      $run ${rm}r "$gentop"
+	    fi
+	  fi
+
+	  exit $EXIT_SUCCESS
+	fi
+
+	# Create links to the real library.
+	for linkname in $linknames; do
+	  if test "$realname" != "$linkname"; then
+	    $show "(cd $output_objdir && $rm $linkname && $LN_S $realname $linkname)"
+	    $run eval '(cd $output_objdir && $rm $linkname && $LN_S $realname $linkname)' || exit $?
+	  fi
+	done
+
+	# If -module or -export-dynamic was specified, set the dlname.
+	if test "$module" = yes || test "$export_dynamic" = yes; then
+	  # On all known operating systems, these are identical.
+	  dlname="$soname"
+	fi
+      fi
+      ;;
+
+    obj)
+      if test -n "$deplibs"; then
+	$echo "$modename: warning: \`-l' and \`-L' are ignored for objects" 1>&2
+      fi
+
+      if test -n "$dlfiles$dlprefiles" || test "$dlself" != no; then
+	$echo "$modename: warning: \`-dlopen' is ignored for objects" 1>&2
+      fi
+
+      if test -n "$rpath"; then
+	$echo "$modename: warning: \`-rpath' is ignored for objects" 1>&2
+      fi
+
+      if test -n "$xrpath"; then
+	$echo "$modename: warning: \`-R' is ignored for objects" 1>&2
+      fi
+
+      if test -n "$vinfo"; then
+	$echo "$modename: warning: \`-version-info' is ignored for objects" 1>&2
+      fi
+
+      if test -n "$release"; then
+	$echo "$modename: warning: \`-release' is ignored for objects" 1>&2
+      fi
+
+      case $output in
+      *.lo)
+	if test -n "$objs$old_deplibs"; then
+	  $echo "$modename: cannot build library object \`$output' from non-libtool objects" 1>&2
+	  exit $EXIT_FAILURE
+	fi
+	libobj="$output"
+	obj=`$echo "X$output" | $Xsed -e "$lo2o"`
+	;;
+      *)
+	libobj=
+	obj="$output"
+	;;
+      esac
+
+      # Delete the old objects.
+      $run $rm $obj $libobj
+
+      # Objects from convenience libraries.  This assumes
+      # single-version convenience libraries.  Whenever we create
+      # different ones for PIC/non-PIC, this we'll have to duplicate
+      # the extraction.
+      reload_conv_objs=
+      gentop=
+      # reload_cmds runs $LD directly, so let us get rid of
+      # -Wl from whole_archive_flag_spec
+      wl=
+
+      if test -n "$convenience"; then
+	if test -n "$whole_archive_flag_spec"; then
+	  eval reload_conv_objs=\"\$reload_objs $whole_archive_flag_spec\"
+	else
+	  gentop="$output_objdir/${obj}x"
+	  generated="$generated $gentop"
+
+	  func_extract_archives $gentop $convenience
+	  reload_conv_objs="$reload_objs $func_extract_archives_result"
+	fi
+      fi
+
+      # Create the old-style object.
+      reload_objs="$objs$old_deplibs "`$echo "X$libobjs" | $SP2NL | $Xsed -e '/\.'${libext}$'/d' -e '/\.lib$/d' -e "$lo2o" | $NL2SP`" $reload_conv_objs" ### testsuite: skip nested quoting test
+
+      output="$obj"
+      cmds=$reload_cmds
+      save_ifs="$IFS"; IFS='~'
+      for cmd in $cmds; do
+	IFS="$save_ifs"
+	eval cmd=\"$cmd\"
+	$show "$cmd"
+	$run eval "$cmd" || exit $?
+      done
+      IFS="$save_ifs"
+
+      # Exit if we aren't doing a library object file.
+      if test -z "$libobj"; then
+	if test -n "$gentop"; then
+	  $show "${rm}r $gentop"
+	  $run ${rm}r $gentop
+	fi
+
+	exit $EXIT_SUCCESS
+      fi
+
+      if test "$build_libtool_libs" != yes; then
+	if test -n "$gentop"; then
+	  $show "${rm}r $gentop"
+	  $run ${rm}r $gentop
+	fi
+
+	# Create an invalid libtool object if no PIC, so that we don't
+	# accidentally link it into a program.
+	# $show "echo timestamp > $libobj"
+	# $run eval "echo timestamp > $libobj" || exit $?
+	exit $EXIT_SUCCESS
+      fi
+
+      if test -n "$pic_flag" || test "$pic_mode" != default; then
+	# Only do commands if we really have different PIC objects.
+	reload_objs="$libobjs $reload_conv_objs"
+	output="$libobj"
+	cmds=$reload_cmds
+	save_ifs="$IFS"; IFS='~'
+	for cmd in $cmds; do
+	  IFS="$save_ifs"
+	  eval cmd=\"$cmd\"
+	  $show "$cmd"
+	  $run eval "$cmd" || exit $?
+	done
+	IFS="$save_ifs"
+      fi
+
+      if test -n "$gentop"; then
+	$show "${rm}r $gentop"
+	$run ${rm}r $gentop
+      fi
+
+      exit $EXIT_SUCCESS
+      ;;
+
+    prog)
+      case $host in
+	*cygwin*) output=`$echo $output | ${SED} -e 's,.exe$,,;s,$,.exe,'` ;;
+      esac
+      if test -n "$vinfo"; then
+	$echo "$modename: warning: \`-version-info' is ignored for programs" 1>&2
+      fi
+
+      if test -n "$release"; then
+	$echo "$modename: warning: \`-release' is ignored for programs" 1>&2
+      fi
+
+      if test "$preload" = yes; then
+	if test "$dlopen_support" = unknown && test "$dlopen_self" = unknown &&
+	   test "$dlopen_self_static" = unknown; then
+	  $echo "$modename: warning: \`AC_LIBTOOL_DLOPEN' not used. Assuming no dlopen support."
+	fi
+      fi
+
+      case $host in
+      *-*-rhapsody* | *-*-darwin1.[012])
+	# On Rhapsody replace the C library is the System framework
+	compile_deplibs=`$echo "X $compile_deplibs" | $Xsed -e 's/ -lc / -framework System /'`
+	finalize_deplibs=`$echo "X $finalize_deplibs" | $Xsed -e 's/ -lc / -framework System /'`
+	;;
+      esac
+
+      case $host in
+      *darwin*)
+        # Don't allow lazy linking, it breaks C++ global constructors
+        if test "$tagname" = CXX ; then
+        compile_command="$compile_command ${wl}-bind_at_load"
+        finalize_command="$finalize_command ${wl}-bind_at_load"
+        fi
+        ;;
+      esac
+
+
+      # move library search paths that coincide with paths to not yet
+      # installed libraries to the beginning of the library search list
+      new_libs=
+      for path in $notinst_path; do
+	case " $new_libs " in
+	*" -L$path/$objdir "*) ;;
+	*)
+	  case " $compile_deplibs " in
+	  *" -L$path/$objdir "*)
+	    new_libs="$new_libs -L$path/$objdir" ;;
+	  esac
+	  ;;
+	esac
+      done
+      for deplib in $compile_deplibs; do
+	case $deplib in
+	-L*)
+	  case " $new_libs " in
+	  *" $deplib "*) ;;
+	  *) new_libs="$new_libs $deplib" ;;
+	  esac
+	  ;;
+	*) new_libs="$new_libs $deplib" ;;
+	esac
+      done
+      compile_deplibs="$new_libs"
+
+
+      compile_command="$compile_command $compile_deplibs"
+      finalize_command="$finalize_command $finalize_deplibs"
+
+      if test -n "$rpath$xrpath"; then
+	# If the user specified any rpath flags, then add them.
+	for libdir in $rpath $xrpath; do
+	  # This is the magic to use -rpath.
+	  case "$finalize_rpath " in
+	  *" $libdir "*) ;;
+	  *) finalize_rpath="$finalize_rpath $libdir" ;;
+	  esac
+	done
+      fi
+
+      # Now hardcode the library paths
+      rpath=
+      hardcode_libdirs=
+      for libdir in $compile_rpath $finalize_rpath; do
+	if test -n "$hardcode_libdir_flag_spec"; then
+	  if test -n "$hardcode_libdir_separator"; then
+	    if test -z "$hardcode_libdirs"; then
+	      hardcode_libdirs="$libdir"
+	    else
+	      # Just accumulate the unique libdirs.
+	      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in
+	      *"$hardcode_libdir_separator$libdir$hardcode_libdir_separator"*)
+		;;
+	      *)
+		hardcode_libdirs="$hardcode_libdirs$hardcode_libdir_separator$libdir"
+		;;
+	      esac
+	    fi
+	  else
+	    eval flag=\"$hardcode_libdir_flag_spec\"
+	    rpath="$rpath $flag"
+	  fi
+	elif test -n "$runpath_var"; then
+	  case "$perm_rpath " in
+	  *" $libdir "*) ;;
+	  *) perm_rpath="$perm_rpath $libdir" ;;
+	  esac
+	fi
+	case $host in
+	*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2*)
+	  testbindir=`$echo "X$libdir" | $Xsed -e 's*/lib$*/bin*'`
+	  case :$dllsearchpath: in
+	  *":$libdir:"*) ;;
+	  *) dllsearchpath="$dllsearchpath:$libdir";;
+	  esac
+	  case :$dllsearchpath: in
+	  *":$testbindir:"*) ;;
+	  *) dllsearchpath="$dllsearchpath:$testbindir";;
+	  esac
+	  ;;
+	esac
+      done
+      # Substitute the hardcoded libdirs into the rpath.
+      if test -n "$hardcode_libdir_separator" &&
+	 test -n "$hardcode_libdirs"; then
+	libdir="$hardcode_libdirs"
+	eval rpath=\" $hardcode_libdir_flag_spec\"
+      fi
+      compile_rpath="$rpath"
+
+      rpath=
+      hardcode_libdirs=
+      for libdir in $finalize_rpath; do
+	if test -n "$hardcode_libdir_flag_spec"; then
+	  if test -n "$hardcode_libdir_separator"; then
+	    if test -z "$hardcode_libdirs"; then
+	      hardcode_libdirs="$libdir"
+	    else
+	      # Just accumulate the unique libdirs.
+	      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in
+	      *"$hardcode_libdir_separator$libdir$hardcode_libdir_separator"*)
+		;;
+	      *)
+		hardcode_libdirs="$hardcode_libdirs$hardcode_libdir_separator$libdir"
+		;;
+	      esac
+	    fi
+	  else
+	    eval flag=\"$hardcode_libdir_flag_spec\"
+	    rpath="$rpath $flag"
+	  fi
+	elif test -n "$runpath_var"; then
+	  case "$finalize_perm_rpath " in
+	  *" $libdir "*) ;;
+	  *) finalize_perm_rpath="$finalize_perm_rpath $libdir" ;;
+	  esac
+	fi
+      done
+      # Substitute the hardcoded libdirs into the rpath.
+      if test -n "$hardcode_libdir_separator" &&
+	 test -n "$hardcode_libdirs"; then
+	libdir="$hardcode_libdirs"
+	eval rpath=\" $hardcode_libdir_flag_spec\"
+      fi
+      finalize_rpath="$rpath"
+
+      if test -n "$libobjs" && test "$build_old_libs" = yes; then
+	# Transform all the library objects into standard objects.
+	compile_command=`$echo "X$compile_command" | $SP2NL | $Xsed -e "$lo2o" | $NL2SP`
+	finalize_command=`$echo "X$finalize_command" | $SP2NL | $Xsed -e "$lo2o" | $NL2SP`
+      fi
+
+      dlsyms=
+      if test -n "$dlfiles$dlprefiles" || test "$dlself" != no; then
+	if test -n "$NM" && test -n "$global_symbol_pipe"; then
+	  dlsyms="${outputname}S.c"
+	else
+	  $echo "$modename: not configured to extract global symbols from dlpreopened files" 1>&2
+	fi
+      fi
+
+      if test -n "$dlsyms"; then
+	case $dlsyms in
+	"") ;;
+	*.c)
+	  # Discover the nlist of each of the dlfiles.
+	  nlist="$output_objdir/${outputname}.nm"
+
+	  $show "$rm $nlist ${nlist}S ${nlist}T"
+	  $run $rm "$nlist" "${nlist}S" "${nlist}T"
+
+	  # Parse the name list into a source file.
+	  $show "creating $output_objdir/$dlsyms"
+
+	  test -z "$run" && $echo > "$output_objdir/$dlsyms" "\
+/* $dlsyms - symbol resolution table for \`$outputname' dlsym emulation. */
+/* Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP */
+
+#ifdef __cplusplus
+extern \"C\" {
+#endif
+
+/* Prevent the only kind of declaration conflicts we can make. */
+#define lt_preloaded_symbols some_other_symbol
+
+/* External symbol declarations for the compiler. */\
+"
+
+	  if test "$dlself" = yes; then
+	    $show "generating symbol list for \`$output'"
+
+	    test -z "$run" && $echo ': @PROGRAM@ ' > "$nlist"
+
+	    # Add our own program objects to the symbol list.
+	    progfiles=`$echo "X$objs$old_deplibs" | $SP2NL | $Xsed -e "$lo2o" | $NL2SP`
+	    for arg in $progfiles; do
+	      $show "extracting global C symbols from \`$arg'"
+	      $run eval "$NM $arg | $global_symbol_pipe >> '$nlist'"
+	    done
+
+	    if test -n "$exclude_expsyms"; then
+	      $run eval '$EGREP -v " ($exclude_expsyms)$" "$nlist" > "$nlist"T'
+	      $run eval '$mv "$nlist"T "$nlist"'
+	    fi
+
+	    if test -n "$export_symbols_regex"; then
+	      $run eval '$EGREP -e "$export_symbols_regex" "$nlist" > "$nlist"T'
+	      $run eval '$mv "$nlist"T "$nlist"'
+	    fi
+
+	    # Prepare the list of exported symbols
+	    if test -z "$export_symbols"; then
+	      export_symbols="$output_objdir/$outputname.exp"
+	      $run $rm $export_symbols
+	      $run eval "${SED} -n -e '/^: @PROGRAM@ $/d' -e 's/^.* \(.*\)$/\1/p' "'< "$nlist" > "$export_symbols"'
+              case $host in
+              *cygwin* | *mingw* )
+	        $run eval "echo EXPORTS "'> "$output_objdir/$outputname.def"'
+		$run eval 'cat "$export_symbols" >> "$output_objdir/$outputname.def"'
+                ;;
+              esac
+	    else
+	      $run eval "${SED} -e 's/\([].[*^$]\)/\\\\\1/g' -e 's/^/ /' -e 's/$/$/'"' < "$export_symbols" > "$output_objdir/$outputname.exp"'
+	      $run eval 'grep -f "$output_objdir/$outputname.exp" < "$nlist" > "$nlist"T'
+	      $run eval 'mv "$nlist"T "$nlist"'
+              case $host in
+              *cygwin* | *mingw* )
+	        $run eval "echo EXPORTS "'> "$output_objdir/$outputname.def"'
+		$run eval 'cat "$nlist" >> "$output_objdir/$outputname.def"'
+                ;;
+              esac
+	    fi
+	  fi
+
+	  for arg in $dlprefiles; do
+	    $show "extracting global C symbols from \`$arg'"
+	    name=`$echo "$arg" | ${SED} -e 's%^.*/%%'`
+	    $run eval '$echo ": $name " >> "$nlist"'
+	    $run eval "$NM $arg | $global_symbol_pipe >> '$nlist'"
+	  done
+
+	  if test -z "$run"; then
+	    # Make sure we have at least an empty file.
+	    test -f "$nlist" || : > "$nlist"
+
+	    if test -n "$exclude_expsyms"; then
+	      $EGREP -v " ($exclude_expsyms)$" "$nlist" > "$nlist"T
+	      $mv "$nlist"T "$nlist"
+	    fi
+
+	    # Try sorting and uniquifying the output.
+	    if grep -v "^: " < "$nlist" |
+		if sort -k 3 </dev/null >/dev/null 2>&1; then
+		  sort -k 3
+		else
+		  sort +2
+		fi |
+		uniq > "$nlist"S; then
+	      :
+	    else
+	      grep -v "^: " < "$nlist" > "$nlist"S
+	    fi
+
+	    if test -f "$nlist"S; then
+	      eval "$global_symbol_to_cdecl"' < "$nlist"S >> "$output_objdir/$dlsyms"'
+	    else
+	      $echo '/* NONE */' >> "$output_objdir/$dlsyms"
+	    fi
+
+	    $echo >> "$output_objdir/$dlsyms" "\
+
+#undef lt_preloaded_symbols
+
+#if defined (__STDC__) && __STDC__
+# define lt_ptr void *
+#else
+# define lt_ptr char *
+# define const
+#endif
+
+/* The mapping between symbol names and symbols. */
+"
+
+	    case $host in
+	    *cygwin* | *mingw* )
+	  $echo >> "$output_objdir/$dlsyms" "\
+/* DATA imports from DLLs on WIN32 can't be const, because
+   runtime relocations are performed -- see ld's documentation
+   on pseudo-relocs */
+struct {
+"
+	      ;;
+	    * )
+	  $echo >> "$output_objdir/$dlsyms" "\
+const struct {
+"
+	      ;;
+	    esac
+
+
+	  $echo >> "$output_objdir/$dlsyms" "\
+  const char *name;
+  lt_ptr address;
+}
+lt_preloaded_symbols[] =
+{\
+"
+
+	    eval "$global_symbol_to_c_name_address" < "$nlist" >> "$output_objdir/$dlsyms"
+
+	    $echo >> "$output_objdir/$dlsyms" "\
+  {0, (lt_ptr) 0}
+};
+
+/* This works around a problem in FreeBSD linker */
+#ifdef FREEBSD_WORKAROUND
+static const void *lt_preloaded_setup() {
+  return lt_preloaded_symbols;
+}
+#endif
+
+#ifdef __cplusplus
+}
+#endif\
+"
+	  fi
+
+	  pic_flag_for_symtable=
+	  case $host in
+	  # compiling the symbol table file with pic_flag works around
+	  # a FreeBSD bug that causes programs to crash when -lm is
+	  # linked before any other PIC object.  But we must not use
+	  # pic_flag when linking with -static.  The problem exists in
+	  # FreeBSD 2.2.6 and is fixed in FreeBSD 3.1.
+	  *-*-freebsd2*|*-*-freebsd3.0*|*-*-freebsdelf3.0*)
+	    case "$compile_command " in
+	    *" -static "*) ;;
+	    *) pic_flag_for_symtable=" $pic_flag -DFREEBSD_WORKAROUND";;
+	    esac;;
+	  *-*-hpux*)
+	    case "$compile_command " in
+	    *" -static "*) ;;
+	    *) pic_flag_for_symtable=" $pic_flag";;
+	    esac
+	  esac
+
+	  # Now compile the dynamic symbol file.
+	  $show "(cd $output_objdir && $LTCC  $LTCFLAGS -c$no_builtin_flag$pic_flag_for_symtable \"$dlsyms\")"
+	  $run eval '(cd $output_objdir && $LTCC  $LTCFLAGS -c$no_builtin_flag$pic_flag_for_symtable "$dlsyms")' || exit $?
+
+	  # Clean up the generated files.
+	  $show "$rm $output_objdir/$dlsyms $nlist ${nlist}S ${nlist}T"
+	  $run $rm "$output_objdir/$dlsyms" "$nlist" "${nlist}S" "${nlist}T"
+
+	  # Transform the symbol file into the correct name.
+          case $host in
+          *cygwin* | *mingw* )
+            if test -f "$output_objdir/${outputname}.def" ; then
+              compile_command=`$echo "X$compile_command" | $Xsed -e "s%@SYMFILE@%$output_objdir/${outputname}.def $output_objdir/${outputname}S.${objext}%"`
+              finalize_command=`$echo "X$finalize_command" | $Xsed -e "s%@SYMFILE@%$output_objdir/${outputname}.def $output_objdir/${outputname}S.${objext}%"`
+            else
+              compile_command=`$echo "X$compile_command" | $Xsed -e "s%@SYMFILE@%$output_objdir/${outputname}S.${objext}%"`
+              finalize_command=`$echo "X$finalize_command" | $Xsed -e "s%@SYMFILE@%$output_objdir/${outputname}S.${objext}%"`
+             fi
+            ;;
+          * )
+            compile_command=`$echo "X$compile_command" | $Xsed -e "s%@SYMFILE@%$output_objdir/${outputname}S.${objext}%"`
+            finalize_command=`$echo "X$finalize_command" | $Xsed -e "s%@SYMFILE@%$output_objdir/${outputname}S.${objext}%"`
+            ;;
+          esac
+	  ;;
+	*)
+	  $echo "$modename: unknown suffix for \`$dlsyms'" 1>&2
+	  exit $EXIT_FAILURE
+	  ;;
+	esac
+      else
+	# We keep going just in case the user didn't refer to
+	# lt_preloaded_symbols.  The linker will fail if global_symbol_pipe
+	# really was required.
+
+	# Nullify the symbol file.
+	compile_command=`$echo "X$compile_command" | $Xsed -e "s% @SYMFILE@%%"`
+	finalize_command=`$echo "X$finalize_command" | $Xsed -e "s% @SYMFILE@%%"`
+      fi
+
+      if test "$need_relink" = no || test "$build_libtool_libs" != yes; then
+	# Replace the output file specification.
+	compile_command=`$echo "X$compile_command" | $Xsed -e 's%@OUTPUT@%'"$output"'%g'`
+	link_command="$compile_command$compile_rpath"
+
+	# We have no uninstalled library dependencies, so finalize right now.
+	$show "$link_command"
+	$run eval "$link_command"
+	exit_status=$?
+
+	# Delete the generated files.
+	if test -n "$dlsyms"; then
+	  $show "$rm $output_objdir/${outputname}S.${objext}"
+	  $run $rm "$output_objdir/${outputname}S.${objext}"
+	fi
+
+	exit $exit_status
+      fi
+
+      if test -n "$shlibpath_var"; then
+	# We should set the shlibpath_var
+	rpath=
+	for dir in $temp_rpath; do
+	  case $dir in
+	  [\\/]* | [A-Za-z]:[\\/]*)
+	    # Absolute path.
+	    rpath="$rpath$dir:"
+	    ;;
+	  *)
+	    # Relative path: add a thisdir entry.
+	    rpath="$rpath\$thisdir/$dir:"
+	    ;;
+	  esac
+	done
+	temp_rpath="$rpath"
+      fi
+
+      if test -n "$compile_shlibpath$finalize_shlibpath"; then
+	compile_command="$shlibpath_var=\"$compile_shlibpath$finalize_shlibpath\$$shlibpath_var\" $compile_command"
+      fi
+      if test -n "$finalize_shlibpath"; then
+	finalize_command="$shlibpath_var=\"$finalize_shlibpath\$$shlibpath_var\" $finalize_command"
+      fi
+
+      compile_var=
+      finalize_var=
+      if test -n "$runpath_var"; then
+	if test -n "$perm_rpath"; then
+	  # We should set the runpath_var.
+	  rpath=
+	  for dir in $perm_rpath; do
+	    rpath="$rpath$dir:"
+	  done
+	  compile_var="$runpath_var=\"$rpath\$$runpath_var\" "
+	fi
+	if test -n "$finalize_perm_rpath"; then
+	  # We should set the runpath_var.
+	  rpath=
+	  for dir in $finalize_perm_rpath; do
+	    rpath="$rpath$dir:"
+	  done
+	  finalize_var="$runpath_var=\"$rpath\$$runpath_var\" "
+	fi
+      fi
+
+      if test "$no_install" = yes; then
+	# We don't need to create a wrapper script.
+	link_command="$compile_var$compile_command$compile_rpath"
+	# Replace the output file specification.
+	link_command=`$echo "X$link_command" | $Xsed -e 's%@OUTPUT@%'"$output"'%g'`
+	# Delete the old output file.
+	$run $rm $output
+	# Link the executable and exit
+	$show "$link_command"
+	$run eval "$link_command" || exit $?
+	exit $EXIT_SUCCESS
+      fi
+
+      if test "$hardcode_action" = relink; then
+	# Fast installation is not supported
+	link_command="$compile_var$compile_command$compile_rpath"
+	relink_command="$finalize_var$finalize_command$finalize_rpath"
+
+	$echo "$modename: warning: this platform does not like uninstalled shared libraries" 1>&2
+	$echo "$modename: \`$output' will be relinked during installation" 1>&2
+      else
+	if test "$fast_install" != no; then
+	  link_command="$finalize_var$compile_command$finalize_rpath"
+	  if test "$fast_install" = yes; then
+	    relink_command=`$echo "X$compile_var$compile_command$compile_rpath" | $Xsed -e 's%@OUTPUT@%\$progdir/\$file%g'`
+	  else
+	    # fast_install is set to needless
+	    relink_command=
+	  fi
+	else
+	  link_command="$compile_var$compile_command$compile_rpath"
+	  relink_command="$finalize_var$finalize_command$finalize_rpath"
+	fi
+      fi
+
+      # Replace the output file specification.
+      link_command=`$echo "X$link_command" | $Xsed -e 's%@OUTPUT@%'"$output_objdir/$outputname"'%g'`
+
+      # Delete the old output files.
+      $run $rm $output $output_objdir/$outputname $output_objdir/lt-$outputname
+
+      $show "$link_command"
+      $run eval "$link_command" || exit $?
+
+      # Now create the wrapper script.
+      $show "creating $output"
+
+      # Quote the relink command for shipping.
+      if test -n "$relink_command"; then
+	# Preserve any variables that may affect compiler behavior
+	for var in $variables_saved_for_relink; do
+	  if eval test -z \"\${$var+set}\"; then
+	    relink_command="{ test -z \"\${$var+set}\" || unset $var || { $var=; export $var; }; }; $relink_command"
+	  elif eval var_value=\$$var; test -z "$var_value"; then
+	    relink_command="$var=; export $var; $relink_command"
+	  else
+	    var_value=`$echo "X$var_value" | $Xsed -e "$sed_quote_subst"`
+	    relink_command="$var=\"$var_value\"; export $var; $relink_command"
+	  fi
+	done
+	relink_command="(cd `pwd`; $relink_command)"
+	relink_command=`$echo "X$relink_command" | $Xsed -e "$sed_quote_subst"`
+      fi
+
+      # Quote $echo for shipping.
+      if test "X$echo" = "X$SHELL $progpath --fallback-echo"; then
+	case $progpath in
+	[\\/]* | [A-Za-z]:[\\/]*) qecho="$SHELL $progpath --fallback-echo";;
+	*) qecho="$SHELL `pwd`/$progpath --fallback-echo";;
+	esac
+	qecho=`$echo "X$qecho" | $Xsed -e "$sed_quote_subst"`
+      else
+	qecho=`$echo "X$echo" | $Xsed -e "$sed_quote_subst"`
+      fi
+
+      # Only actually do things if our run command is non-null.
+      if test -z "$run"; then
+	# win32 will think the script is a binary if it has
+	# a .exe suffix, so we strip it off here.
+	case $output in
+	  *.exe) output=`$echo $output|${SED} 's,.exe$,,'` ;;
+	esac
+	# test for cygwin because mv fails w/o .exe extensions
+	case $host in
+	  *cygwin*)
+	    exeext=.exe
+	    outputname=`$echo $outputname|${SED} 's,.exe$,,'` ;;
+	  *) exeext= ;;
+	esac
+	case $host in
+	  *cygwin* | *mingw* )
+            output_name=`basename $output`
+            output_path=`dirname $output`
+            cwrappersource="$output_path/$objdir/lt-$output_name.c"
+            cwrapper="$output_path/$output_name.exe"
+            $rm $cwrappersource $cwrapper
+            trap "$rm $cwrappersource $cwrapper; exit $EXIT_FAILURE" 1 2 15
+
+	    cat > $cwrappersource <<EOF
+
+/* $cwrappersource - temporary wrapper executable for $objdir/$outputname
+   Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP
+
+   The $output program cannot be directly executed until all the libtool
+   libraries that it depends on are installed.
+
+   This wrapper executable should never be moved out of the build directory.
+   If it is, it will not operate correctly.
+
+   Currently, it simply execs the wrapper *script* "/bin/sh $output",
+   but could eventually absorb all of the scripts functionality and
+   exec $objdir/$outputname directly.
+*/
+EOF
+	    cat >> $cwrappersource<<"EOF"
+#include <stdio.h>
+#include <stdlib.h>
+#include <unistd.h>
+#include <malloc.h>
+#include <stdarg.h>
+#include <assert.h>
+#include <string.h>
+#include <ctype.h>
+#include <sys/stat.h>
+
+#if defined(PATH_MAX)
+# define LT_PATHMAX PATH_MAX
+#elif defined(MAXPATHLEN)
+# define LT_PATHMAX MAXPATHLEN
+#else
+# define LT_PATHMAX 1024
+#endif
+
+#ifndef DIR_SEPARATOR
+# define DIR_SEPARATOR '/'
+# define PATH_SEPARATOR ':'
+#endif
+
+#if defined (_WIN32) || defined (__MSDOS__) || defined (__DJGPP__) || \
+  defined (__OS2__)
+# define HAVE_DOS_BASED_FILE_SYSTEM
+# ifndef DIR_SEPARATOR_2
+#  define DIR_SEPARATOR_2 '\\'
+# endif
+# ifndef PATH_SEPARATOR_2
+#  define PATH_SEPARATOR_2 ';'
+# endif
+#endif
+
+#ifndef DIR_SEPARATOR_2
+# define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)
+#else /* DIR_SEPARATOR_2 */
+# define IS_DIR_SEPARATOR(ch) \
+        (((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))
+#endif /* DIR_SEPARATOR_2 */
+
+#ifndef PATH_SEPARATOR_2
+# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR)
+#else /* PATH_SEPARATOR_2 */
+# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR_2)
+#endif /* PATH_SEPARATOR_2 */
+
+#define XMALLOC(type, num)      ((type *) xmalloc ((num) * sizeof(type)))
+#define XFREE(stale) do { \
+  if (stale) { free ((void *) stale); stale = 0; } \
+} while (0)
+
+/* -DDEBUG is fairly common in CFLAGS.  */
+#undef DEBUG
+#if defined DEBUGWRAPPER
+# define DEBUG(format, ...) fprintf(stderr, format, __VA_ARGS__)
+#else
+# define DEBUG(format, ...)
+#endif
+
+const char *program_name = NULL;
+
+void * xmalloc (size_t num);
+char * xstrdup (const char *string);
+const char * base_name (const char *name);
+char * find_executable(const char *wrapper);
+int    check_executable(const char *path);
+char * strendzap(char *str, const char *pat);
+void lt_fatal (const char *message, ...);
+
+int
+main (int argc, char *argv[])
+{
+  char **newargz;
+  int i;
+
+  program_name = (char *) xstrdup (base_name (argv[0]));
+  DEBUG("(main) argv[0]      : %s\n",argv[0]);
+  DEBUG("(main) program_name : %s\n",program_name);
+  newargz = XMALLOC(char *, argc+2);
+EOF
+
+            cat >> $cwrappersource <<EOF
+  newargz[0] = (char *) xstrdup("$SHELL");
+EOF
+
+            cat >> $cwrappersource <<"EOF"
+  newargz[1] = find_executable(argv[0]);
+  if (newargz[1] == NULL)
+    lt_fatal("Couldn't find %s", argv[0]);
+  DEBUG("(main) found exe at : %s\n",newargz[1]);
+  /* we know the script has the same name, without the .exe */
+  /* so make sure newargz[1] doesn't end in .exe */
+  strendzap(newargz[1],".exe");
+  for (i = 1; i < argc; i++)
+    newargz[i+1] = xstrdup(argv[i]);
+  newargz[argc+1] = NULL;
+
+  for (i=0; i<argc+1; i++)
+  {
+    DEBUG("(main) newargz[%d]   : %s\n",i,newargz[i]);
+    ;
+  }
+
+EOF
+
+            case $host_os in
+              mingw*)
+                cat >> $cwrappersource <<EOF
+  execv("$SHELL",(char const **)newargz);
+EOF
+              ;;
+              *)
+                cat >> $cwrappersource <<EOF
+  execv("$SHELL",newargz);
+EOF
+              ;;
+            esac
+
+            cat >> $cwrappersource <<"EOF"
+  return 127;
+}
+
+void *
+xmalloc (size_t num)
+{
+  void * p = (void *) malloc (num);
+  if (!p)
+    lt_fatal ("Memory exhausted");
+
+  return p;
+}
+
+char *
+xstrdup (const char *string)
+{
+  return string ? strcpy ((char *) xmalloc (strlen (string) + 1), string) : NULL
+;
+}
+
+const char *
+base_name (const char *name)
+{
+  const char *base;
+
+#if defined (HAVE_DOS_BASED_FILE_SYSTEM)
+  /* Skip over the disk name in MSDOS pathnames. */
+  if (isalpha ((unsigned char)name[0]) && name[1] == ':')
+    name += 2;
+#endif
+
+  for (base = name; *name; name++)
+    if (IS_DIR_SEPARATOR (*name))
+      base = name + 1;
+  return base;
+}
+
+int
+check_executable(const char * path)
+{
+  struct stat st;
+
+  DEBUG("(check_executable)  : %s\n", path ? (*path ? path : "EMPTY!") : "NULL!");
+  if ((!path) || (!*path))
+    return 0;
+
+  if ((stat (path, &st) >= 0) &&
+      (
+        /* MinGW & native WIN32 do not support S_IXOTH or S_IXGRP */
+#if defined (S_IXOTH)
+       ((st.st_mode & S_IXOTH) == S_IXOTH) ||
+#endif
+#if defined (S_IXGRP)
+       ((st.st_mode & S_IXGRP) == S_IXGRP) ||
+#endif
+       ((st.st_mode & S_IXUSR) == S_IXUSR))
+      )
+    return 1;
+  else
+    return 0;
+}
+
+/* Searches for the full path of the wrapper.  Returns
+   newly allocated full path name if found, NULL otherwise */
+char *
+find_executable (const char* wrapper)
+{
+  int has_slash = 0;
+  const char* p;
+  const char* p_next;
+  /* static buffer for getcwd */
+  char tmp[LT_PATHMAX + 1];
+  int tmp_len;
+  char* concat_name;
+
+  DEBUG("(find_executable)  : %s\n", wrapper ? (*wrapper ? wrapper : "EMPTY!") : "NULL!");
+
+  if ((wrapper == NULL) || (*wrapper == '\0'))
+    return NULL;
+
+  /* Absolute path? */
+#if defined (HAVE_DOS_BASED_FILE_SYSTEM)
+  if (isalpha ((unsigned char)wrapper[0]) && wrapper[1] == ':')
+  {
+    concat_name = xstrdup (wrapper);
+    if (check_executable(concat_name))
+      return concat_name;
+    XFREE(concat_name);
+  }
+  else
+  {
+#endif
+    if (IS_DIR_SEPARATOR (wrapper[0]))
+    {
+      concat_name = xstrdup (wrapper);
+      if (check_executable(concat_name))
+        return concat_name;
+      XFREE(concat_name);
+    }
+#if defined (HAVE_DOS_BASED_FILE_SYSTEM)
+  }
+#endif
+
+  for (p = wrapper; *p; p++)
+    if (*p == '/')
+    {
+      has_slash = 1;
+      break;
+    }
+  if (!has_slash)
+  {
+    /* no slashes; search PATH */
+    const char* path = getenv ("PATH");
+    if (path != NULL)
+    {
+      for (p = path; *p; p = p_next)
+      {
+        const char* q;
+        size_t p_len;
+        for (q = p; *q; q++)
+          if (IS_PATH_SEPARATOR(*q))
+            break;
+        p_len = q - p;
+        p_next = (*q == '\0' ? q : q + 1);
+        if (p_len == 0)
+        {
+          /* empty path: current directory */
+          if (getcwd (tmp, LT_PATHMAX) == NULL)
+            lt_fatal ("getcwd failed");
+          tmp_len = strlen(tmp);
+          concat_name = XMALLOC(char, tmp_len + 1 + strlen(wrapper) + 1);
+          memcpy (concat_name, tmp, tmp_len);
+          concat_name[tmp_len] = '/';
+          strcpy (concat_name + tmp_len + 1, wrapper);
+        }
+        else
+        {
+          concat_name = XMALLOC(char, p_len + 1 + strlen(wrapper) + 1);
+          memcpy (concat_name, p, p_len);
+          concat_name[p_len] = '/';
+          strcpy (concat_name + p_len + 1, wrapper);
+        }
+        if (check_executable(concat_name))
+          return concat_name;
+        XFREE(concat_name);
+      }
+    }
+    /* not found in PATH; assume curdir */
+  }
+  /* Relative path | not found in path: prepend cwd */
+  if (getcwd (tmp, LT_PATHMAX) == NULL)
+    lt_fatal ("getcwd failed");
+  tmp_len = strlen(tmp);
+  concat_name = XMALLOC(char, tmp_len + 1 + strlen(wrapper) + 1);
+  memcpy (concat_name, tmp, tmp_len);
+  concat_name[tmp_len] = '/';
+  strcpy (concat_name + tmp_len + 1, wrapper);
+
+  if (check_executable(concat_name))
+    return concat_name;
+  XFREE(concat_name);
+  return NULL;
+}
+
+char *
+strendzap(char *str, const char *pat)
+{
+  size_t len, patlen;
+
+  assert(str != NULL);
+  assert(pat != NULL);
+
+  len = strlen(str);
+  patlen = strlen(pat);
+
+  if (patlen <= len)
+  {
+    str += len - patlen;
+    if (strcmp(str, pat) == 0)
+      *str = '\0';
+  }
+  return str;
+}
+
+static void
+lt_error_core (int exit_status, const char * mode,
+          const char * message, va_list ap)
+{
+  fprintf (stderr, "%s: %s: ", program_name, mode);
+  vfprintf (stderr, message, ap);
+  fprintf (stderr, ".\n");
+
+  if (exit_status >= 0)
+    exit (exit_status);
+}
+
+void
+lt_fatal (const char *message, ...)
+{
+  va_list ap;
+  va_start (ap, message);
+  lt_error_core (EXIT_FAILURE, "FATAL", message, ap);
+  va_end (ap);
+}
+EOF
+          # we should really use a build-platform specific compiler
+          # here, but OTOH, the wrappers (shell script and this C one)
+          # are only useful if you want to execute the "real" binary.
+          # Since the "real" binary is built for $host, then this
+          # wrapper might as well be built for $host, too.
+          $run $LTCC $LTCFLAGS -s -o $cwrapper $cwrappersource
+          ;;
+        esac
+        $rm $output
+        trap "$rm $output; exit $EXIT_FAILURE" 1 2 15
+
+	$echo > $output "\
+#! $SHELL
+
+# $output - temporary wrapper script for $objdir/$outputname
+# Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP
+#
+# The $output program cannot be directly executed until all the libtool
+# libraries that it depends on are installed.
+#
+# This wrapper script should never be moved out of the build directory.
+# If it is, it will not operate correctly.
+
+# Sed substitution that helps us do robust quoting.  It backslashifies
+# metacharacters that are still active within double-quoted strings.
+Xsed='${SED} -e 1s/^X//'
+sed_quote_subst='$sed_quote_subst'
+
+# The HP-UX ksh and POSIX shell print the target directory to stdout
+# if CDPATH is set.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+relink_command=\"$relink_command\"
+
+# This environment variable determines our operation mode.
+if test \"\$libtool_install_magic\" = \"$magic\"; then
+  # install mode needs the following variable:
+  notinst_deplibs='$notinst_deplibs'
+else
+  # When we are sourced in execute mode, \$file and \$echo are already set.
+  if test \"\$libtool_execute_magic\" != \"$magic\"; then
+    echo=\"$qecho\"
+    file=\"\$0\"
+    # Make sure echo works.
+    if test \"X\$1\" = X--no-reexec; then
+      # Discard the --no-reexec flag, and continue.
+      shift
+    elif test \"X\`(\$echo '\t') 2>/dev/null\`\" = 'X\t'; then
+      # Yippee, \$echo works!
+      :
+    else
+      # Restart under the correct shell, and then maybe \$echo will work.
+      exec $SHELL \"\$0\" --no-reexec \${1+\"\$@\"}
+    fi
+  fi\
+"
+	$echo >> $output "\
+
+  # Find the directory that this script lives in.
+  thisdir=\`\$echo \"X\$file\" | \$Xsed -e 's%/[^/]*$%%'\`
+  test \"x\$thisdir\" = \"x\$file\" && thisdir=.
+
+  # Follow symbolic links until we get to the real thisdir.
+  file=\`ls -ld \"\$file\" | ${SED} -n 's/.*-> //p'\`
+  while test -n \"\$file\"; do
+    destdir=\`\$echo \"X\$file\" | \$Xsed -e 's%/[^/]*\$%%'\`
+
+    # If there was a directory component, then change thisdir.
+    if test \"x\$destdir\" != \"x\$file\"; then
+      case \"\$destdir\" in
+      [\\\\/]* | [A-Za-z]:[\\\\/]*) thisdir=\"\$destdir\" ;;
+      *) thisdir=\"\$thisdir/\$destdir\" ;;
+      esac
+    fi
+
+    file=\`\$echo \"X\$file\" | \$Xsed -e 's%^.*/%%'\`
+    file=\`ls -ld \"\$thisdir/\$file\" | ${SED} -n 's/.*-> //p'\`
+  done
+
+  # Try to get the absolute directory name.
+  absdir=\`cd \"\$thisdir\" && pwd\`
+  test -n \"\$absdir\" && thisdir=\"\$absdir\"
+"
+
+	if test "$fast_install" = yes; then
+	  $echo >> $output "\
+  program=lt-'$outputname'$exeext
+  progdir=\"\$thisdir/$objdir\"
+
+  if test ! -f \"\$progdir/\$program\" || \\
+     { file=\`ls -1dt \"\$progdir/\$program\" \"\$progdir/../\$program\" 2>/dev/null | ${SED} 1q\`; \\
+       test \"X\$file\" != \"X\$progdir/\$program\"; }; then
+
+    file=\"\$\$-\$program\"
+
+    if test ! -d \"\$progdir\"; then
+      $mkdir \"\$progdir\"
+    else
+      $rm \"\$progdir/\$file\"
+    fi"
+
+	  $echo >> $output "\
+
+    # relink executable if necessary
+    if test -n \"\$relink_command\"; then
+      if relink_command_output=\`eval \$relink_command 2>&1\`; then :
+      else
+	$echo \"\$relink_command_output\" >&2
+	$rm \"\$progdir/\$file\"
+	exit $EXIT_FAILURE
+      fi
+    fi
+
+    $mv \"\$progdir/\$file\" \"\$progdir/\$program\" 2>/dev/null ||
+    { $rm \"\$progdir/\$program\";
+      $mv \"\$progdir/\$file\" \"\$progdir/\$program\"; }
+    $rm \"\$progdir/\$file\"
+  fi"
+	else
+	  $echo >> $output "\
+  program='$outputname'
+  progdir=\"\$thisdir/$objdir\"
+"
+	fi
+
+	$echo >> $output "\
+
+  if test -f \"\$progdir/\$program\"; then"
+
+	# Export our shlibpath_var if we have one.
+	if test "$shlibpath_overrides_runpath" = yes && test -n "$shlibpath_var" && test -n "$temp_rpath"; then
+	  $echo >> $output "\
+    # Add our own library path to $shlibpath_var
+    $shlibpath_var=\"$temp_rpath\$$shlibpath_var\"
+
+    # Some systems cannot cope with colon-terminated $shlibpath_var
+    # The second colon is a workaround for a bug in BeOS R4 sed
+    $shlibpath_var=\`\$echo \"X\$$shlibpath_var\" | \$Xsed -e 's/::*\$//'\`
+
+    export $shlibpath_var
+"
+	fi
+
+	# fixup the dll searchpath if we need to.
+	if test -n "$dllsearchpath"; then
+	  $echo >> $output "\
+    # Add the dll search path components to the executable PATH
+    PATH=$dllsearchpath:\$PATH
+"
+	fi
+
+	$echo >> $output "\
+    if test \"\$libtool_execute_magic\" != \"$magic\"; then
+      # Run the actual program with our arguments.
+"
+	case $host in
+	# Backslashes separate directories on plain windows
+	*-*-mingw | *-*-os2*)
+	  $echo >> $output "\
+      exec \"\$progdir\\\\\$program\" \${1+\"\$@\"}
+"
+	  ;;
+
+	*)
+	  $echo >> $output "\
+      exec \"\$progdir/\$program\" \${1+\"\$@\"}
+"
+	  ;;
+	esac
+	$echo >> $output "\
+      \$echo \"\$0: cannot exec \$program \${1+\"\$@\"}\"
+      exit $EXIT_FAILURE
+    fi
+  else
+    # The program doesn't exist.
+    \$echo \"\$0: error: \\\`\$progdir/\$program' does not exist\" 1>&2
+    \$echo \"This script is just a wrapper for \$program.\" 1>&2
+    $echo \"See the $PACKAGE documentation for more information.\" 1>&2
+    exit $EXIT_FAILURE
+  fi
+fi\
+"
+	chmod +x $output
+      fi
+      exit $EXIT_SUCCESS
+      ;;
+    esac
+
+    # See if we need to build an old-fashioned archive.
+    for oldlib in $oldlibs; do
+
+      if test "$build_libtool_libs" = convenience; then
+	oldobjs="$libobjs_save"
+	addlibs="$convenience"
+	build_libtool_libs=no
+      else
+	if test "$build_libtool_libs" = module; then
+	  oldobjs="$libobjs_save"
+	  build_libtool_libs=no
+	else
+	  oldobjs="$old_deplibs $non_pic_objects"
+	fi
+	addlibs="$old_convenience"
+      fi
+
+      if test -n "$addlibs"; then
+	gentop="$output_objdir/${outputname}x"
+	generated="$generated $gentop"
+
+	func_extract_archives $gentop $addlibs
+	oldobjs="$oldobjs $func_extract_archives_result"
+      fi
+
+      # Do each command in the archive commands.
+      if test -n "$old_archive_from_new_cmds" && test "$build_libtool_libs" = yes; then
+       cmds=$old_archive_from_new_cmds
+      else
+	# POSIX demands no paths to be encoded in archives.  We have
+	# to avoid creating archives with duplicate basenames if we
+	# might have to extract them afterwards, e.g., when creating a
+	# static archive out of a convenience library, or when linking
+	# the entirety of a libtool archive into another (currently
+	# not supported by libtool).
+	if (for obj in $oldobjs
+	    do
+	      $echo "X$obj" | $Xsed -e 's%^.*/%%'
+	    done | sort | sort -uc >/dev/null 2>&1); then
+	  :
+	else
+	  $echo "copying selected object files to avoid basename conflicts..."
+
+	  if test -z "$gentop"; then
+	    gentop="$output_objdir/${outputname}x"
+	    generated="$generated $gentop"
+
+	    $show "${rm}r $gentop"
+	    $run ${rm}r "$gentop"
+	    $show "$mkdir $gentop"
+	    $run $mkdir "$gentop"
+	    exit_status=$?
+	    if test "$exit_status" -ne 0 && test ! -d "$gentop"; then
+	      exit $exit_status
+	    fi
+	  fi
+
+	  save_oldobjs=$oldobjs
+	  oldobjs=
+	  counter=1
+	  for obj in $save_oldobjs
+	  do
+	    objbase=`$echo "X$obj" | $Xsed -e 's%^.*/%%'`
+	    case " $oldobjs " in
+	    " ") oldobjs=$obj ;;
+	    *[\ /]"$objbase "*)
+	      while :; do
+		# Make sure we don't pick an alternate name that also
+		# overlaps.
+		newobj=lt$counter-$objbase
+		counter=`expr $counter + 1`
+		case " $oldobjs " in
+		*[\ /]"$newobj "*) ;;
+		*) if test ! -f "$gentop/$newobj"; then break; fi ;;
+		esac
+	      done
+	      $show "ln $obj $gentop/$newobj || cp $obj $gentop/$newobj"
+	      $run ln "$obj" "$gentop/$newobj" ||
+	      $run cp "$obj" "$gentop/$newobj"
+	      oldobjs="$oldobjs $gentop/$newobj"
+	      ;;
+	    *) oldobjs="$oldobjs $obj" ;;
+	    esac
+	  done
+	fi
+
+	eval cmds=\"$old_archive_cmds\"
+
+	if len=`expr "X$cmds" : ".*"` &&
+	     test "$len" -le "$max_cmd_len" || test "$max_cmd_len" -le -1; then
+	  cmds=$old_archive_cmds
+	else
+	  # the command line is too long to link in one step, link in parts
+	  $echo "using piecewise archive linking..."
+	  save_RANLIB=$RANLIB
+	  RANLIB=:
+	  objlist=
+	  concat_cmds=
+	  save_oldobjs=$oldobjs
+
+	  # Is there a better way of finding the last object in the list?
+	  for obj in $save_oldobjs
+	  do
+	    last_oldobj=$obj
+	  done
+	  for obj in $save_oldobjs
+	  do
+	    oldobjs="$objlist $obj"
+	    objlist="$objlist $obj"
+	    eval test_cmds=\"$old_archive_cmds\"
+	    if len=`expr "X$test_cmds" : ".*" 2>/dev/null` &&
+	       test "$len" -le "$max_cmd_len"; then
+	      :
+	    else
+	      # the above command should be used before it gets too long
+	      oldobjs=$objlist
+	      if test "$obj" = "$last_oldobj" ; then
+	        RANLIB=$save_RANLIB
+	      fi
+	      test -z "$concat_cmds" || concat_cmds=$concat_cmds~
+	      eval concat_cmds=\"\${concat_cmds}$old_archive_cmds\"
+	      objlist=
+	    fi
+	  done
+	  RANLIB=$save_RANLIB
+	  oldobjs=$objlist
+	  if test "X$oldobjs" = "X" ; then
+	    eval cmds=\"\$concat_cmds\"
+	  else
+	    eval cmds=\"\$concat_cmds~\$old_archive_cmds\"
+	  fi
+	fi
+      fi
+      save_ifs="$IFS"; IFS='~'
+      for cmd in $cmds; do
+        eval cmd=\"$cmd\"
+	IFS="$save_ifs"
+	$show "$cmd"
+	$run eval "$cmd" || exit $?
+      done
+      IFS="$save_ifs"
+    done
+
+    if test -n "$generated"; then
+      $show "${rm}r$generated"
+      $run ${rm}r$generated
+    fi
+
+    # Now create the libtool archive.
+    case $output in
+    *.la)
+      old_library=
+      test "$build_old_libs" = yes && old_library="$libname.$libext"
+      $show "creating $output"
+
+      # Preserve any variables that may affect compiler behavior
+      for var in $variables_saved_for_relink; do
+	if eval test -z \"\${$var+set}\"; then
+	  relink_command="{ test -z \"\${$var+set}\" || unset $var || { $var=; export $var; }; }; $relink_command"
+	elif eval var_value=\$$var; test -z "$var_value"; then
+	  relink_command="$var=; export $var; $relink_command"
+	else
+	  var_value=`$echo "X$var_value" | $Xsed -e "$sed_quote_subst"`
+	  relink_command="$var=\"$var_value\"; export $var; $relink_command"
+	fi
+      done
+      # Quote the link command for shipping.
+      relink_command="(cd `pwd`; $SHELL $progpath $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)"
+      relink_command=`$echo "X$relink_command" | $Xsed -e "$sed_quote_subst"`
+      if test "$hardcode_automatic" = yes ; then
+	relink_command=
+      fi
+
+
+      # Only create the output if not a dry run.
+      if test -z "$run"; then
+	for installed in no yes; do
+	  if test "$installed" = yes; then
+	    if test -z "$install_libdir"; then
+	      break
+	    fi
+	    output="$output_objdir/$outputname"i
+	    # Replace all uninstalled libtool libraries with the installed ones
+	    newdependency_libs=
+	    for deplib in $dependency_libs; do
+	      case $deplib in
+	      *.la)
+		name=`$echo "X$deplib" | $Xsed -e 's%^.*/%%'`
+		eval libdir=`${SED} -n -e 's/^libdir=\(.*\)$/\1/p' $deplib`
+		if test -z "$libdir"; then
+		  $echo "$modename: \`$deplib' is not a valid libtool archive" 1>&2
+		  exit $EXIT_FAILURE
+		fi
+		newdependency_libs="$newdependency_libs $libdir/$name"
+		;;
+	      *) newdependency_libs="$newdependency_libs $deplib" ;;
+	      esac
+	    done
+	    dependency_libs="$newdependency_libs"
+	    newdlfiles=
+	    for lib in $dlfiles; do
+	      name=`$echo "X$lib" | $Xsed -e 's%^.*/%%'`
+	      eval libdir=`${SED} -n -e 's/^libdir=\(.*\)$/\1/p' $lib`
+	      if test -z "$libdir"; then
+		$echo "$modename: \`$lib' is not a valid libtool archive" 1>&2
+		exit $EXIT_FAILURE
+	      fi
+	      newdlfiles="$newdlfiles $libdir/$name"
+	    done
+	    dlfiles="$newdlfiles"
+	    newdlprefiles=
+	    for lib in $dlprefiles; do
+	      name=`$echo "X$lib" | $Xsed -e 's%^.*/%%'`
+	      eval libdir=`${SED} -n -e 's/^libdir=\(.*\)$/\1/p' $lib`
+	      if test -z "$libdir"; then
+		$echo "$modename: \`$lib' is not a valid libtool archive" 1>&2
+		exit $EXIT_FAILURE
+	      fi
+	      newdlprefiles="$newdlprefiles $libdir/$name"
+	    done
+	    dlprefiles="$newdlprefiles"
+	  else
+	    newdlfiles=
+	    for lib in $dlfiles; do
+	      case $lib in
+		[\\/]* | [A-Za-z]:[\\/]*) abs="$lib" ;;
+		*) abs=`pwd`"/$lib" ;;
+	      esac
+	      newdlfiles="$newdlfiles $abs"
+	    done
+	    dlfiles="$newdlfiles"
+	    newdlprefiles=
+	    for lib in $dlprefiles; do
+	      case $lib in
+		[\\/]* | [A-Za-z]:[\\/]*) abs="$lib" ;;
+		*) abs=`pwd`"/$lib" ;;
+	      esac
+	      newdlprefiles="$newdlprefiles $abs"
+	    done
+	    dlprefiles="$newdlprefiles"
+	  fi
+	  $rm $output
+	  # place dlname in correct position for cygwin
+	  tdlname=$dlname
+	  case $host,$output,$installed,$module,$dlname in
+	    *cygwin*,*lai,yes,no,*.dll | *mingw*,*lai,yes,no,*.dll) tdlname=../bin/$dlname ;;
+	  esac
+	  $echo > $output "\
+# $outputname - a libtool library file
+# Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP
+#
+# Please DO NOT delete this file!
+# It is necessary for linking the library.
+
+# The name that we can dlopen(3).
+dlname='$tdlname'
+
+# Names of this library.
+library_names='$library_names'
+
+# The name of the static archive.
+old_library='$old_library'
+
+# Libraries that this one depends upon.
+dependency_libs='$dependency_libs'
+
+# Version information for $libname.
+current=$current
+age=$age
+revision=$revision
+
+# Is this an already installed library?
+installed=$installed
+
+# Should we warn about portability when linking against -modules?
+shouldnotlink=$module
+
+# Files to dlopen/dlpreopen
+dlopen='$dlfiles'
+dlpreopen='$dlprefiles'
+
+# Directory that this library needs to be installed in:
+libdir='$install_libdir'"
+	  if test "$installed" = no && test "$need_relink" = yes; then
+	    $echo >> $output "\
+relink_command=\"$relink_command\""
+	  fi
+	done
+      fi
+
+      # Do a symbolic link so that the libtool archive can be found in
+      # LD_LIBRARY_PATH before the program is installed.
+      $show "(cd $output_objdir && $rm $outputname && $LN_S ../$outputname $outputname)"
+      $run eval '(cd $output_objdir && $rm $outputname && $LN_S ../$outputname $outputname)' || exit $?
+      ;;
+    esac
+    exit $EXIT_SUCCESS
+    ;;
+
+  # libtool install mode
+  install)
+    modename="$modename: install"
+
+    # There may be an optional sh(1) argument at the beginning of
+    # install_prog (especially on Windows NT).
+    if test "$nonopt" = "$SHELL" || test "$nonopt" = /bin/sh ||
+       # Allow the use of GNU shtool's install command.
+       $echo "X$nonopt" | grep shtool > /dev/null; then
+      # Aesthetically quote it.
+      arg=`$echo "X$nonopt" | $Xsed -e "$sed_quote_subst"`
+      case $arg in
+      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	arg="\"$arg\""
+	;;
+      esac
+      install_prog="$arg "
+      arg="$1"
+      shift
+    else
+      install_prog=
+      arg=$nonopt
+    fi
+
+    # The real first argument should be the name of the installation program.
+    # Aesthetically quote it.
+    arg=`$echo "X$arg" | $Xsed -e "$sed_quote_subst"`
+    case $arg in
+    *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+      arg="\"$arg\""
+      ;;
+    esac
+    install_prog="$install_prog$arg"
+
+    # We need to accept at least all the BSD install flags.
+    dest=
+    files=
+    opts=
+    prev=
+    install_type=
+    isdir=no
+    stripme=
+    for arg
+    do
+      if test -n "$dest"; then
+	files="$files $dest"
+	dest=$arg
+	continue
+      fi
+
+      case $arg in
+      -d) isdir=yes ;;
+      -f) 
+      	case " $install_prog " in
+	*[\\\ /]cp\ *) ;;
+	*) prev=$arg ;;
+	esac
+	;;
+      -g | -m | -o) prev=$arg ;;
+      -s)
+	stripme=" -s"
+	continue
+	;;
+      -*)
+	;;
+      *)
+	# If the previous option needed an argument, then skip it.
+	if test -n "$prev"; then
+	  prev=
+	else
+	  dest=$arg
+	  continue
+	fi
+	;;
+      esac
+
+      # Aesthetically quote the argument.
+      arg=`$echo "X$arg" | $Xsed -e "$sed_quote_subst"`
+      case $arg in
+      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	arg="\"$arg\""
+	;;
+      esac
+      install_prog="$install_prog $arg"
+    done
+
+    if test -z "$install_prog"; then
+      $echo "$modename: you must specify an install program" 1>&2
+      $echo "$help" 1>&2
+      exit $EXIT_FAILURE
+    fi
+
+    if test -n "$prev"; then
+      $echo "$modename: the \`$prev' option requires an argument" 1>&2
+      $echo "$help" 1>&2
+      exit $EXIT_FAILURE
+    fi
+
+    if test -z "$files"; then
+      if test -z "$dest"; then
+	$echo "$modename: no file or destination specified" 1>&2
+      else
+	$echo "$modename: you must specify a destination" 1>&2
+      fi
+      $echo "$help" 1>&2
+      exit $EXIT_FAILURE
+    fi
+
+    # Strip any trailing slash from the destination.
+    dest=`$echo "X$dest" | $Xsed -e 's%/$%%'`
+
+    # Check to see that the destination is a directory.
+    test -d "$dest" && isdir=yes
+    if test "$isdir" = yes; then
+      destdir="$dest"
+      destname=
+    else
+      destdir=`$echo "X$dest" | $Xsed -e 's%/[^/]*$%%'`
+      test "X$destdir" = "X$dest" && destdir=.
+      destname=`$echo "X$dest" | $Xsed -e 's%^.*/%%'`
+
+      # Not a directory, so check to see that there is only one file specified.
+      set dummy $files
+      if test "$#" -gt 2; then
+	$echo "$modename: \`$dest' is not a directory" 1>&2
+	$echo "$help" 1>&2
+	exit $EXIT_FAILURE
+      fi
+    fi
+    case $destdir in
+    [\\/]* | [A-Za-z]:[\\/]*) ;;
+    *)
+      for file in $files; do
+	case $file in
+	*.lo) ;;
+	*)
+	  $echo "$modename: \`$destdir' must be an absolute directory name" 1>&2
+	  $echo "$help" 1>&2
+	  exit $EXIT_FAILURE
+	  ;;
+	esac
+      done
+      ;;
+    esac
+
+    # This variable tells wrapper scripts just to set variables rather
+    # than running their programs.
+    libtool_install_magic="$magic"
+
+    staticlibs=
+    future_libdirs=
+    current_libdirs=
+    for file in $files; do
+
+      # Do each installation.
+      case $file in
+      *.$libext)
+	# Do the static libraries later.
+	staticlibs="$staticlibs $file"
+	;;
+
+      *.la)
+	# Check to see that this really is a libtool archive.
+	if (${SED} -e '2q' $file | grep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then :
+	else
+	  $echo "$modename: \`$file' is not a valid libtool archive" 1>&2
+	  $echo "$help" 1>&2
+	  exit $EXIT_FAILURE
+	fi
+
+	library_names=
+	old_library=
+	relink_command=
+	# If there is no directory component, then add one.
+	case $file in
+	*/* | *\\*) . $file ;;
+	*) . ./$file ;;
+	esac
+
+	# Add the libdir to current_libdirs if it is the destination.
+	if test "X$destdir" = "X$libdir"; then
+	  case "$current_libdirs " in
+	  *" $libdir "*) ;;
+	  *) current_libdirs="$current_libdirs $libdir" ;;
+	  esac
+	else
+	  # Note the libdir as a future libdir.
+	  case "$future_libdirs " in
+	  *" $libdir "*) ;;
+	  *) future_libdirs="$future_libdirs $libdir" ;;
+	  esac
+	fi
+
+	dir=`$echo "X$file" | $Xsed -e 's%/[^/]*$%%'`/
+	test "X$dir" = "X$file/" && dir=
+	dir="$dir$objdir"
+
+	if test -n "$relink_command"; then
+	  # Determine the prefix the user has applied to our future dir.
+	  inst_prefix_dir=`$echo "$destdir" | $SED "s%$libdir\$%%"`
+
+	  # Don't allow the user to place us outside of our expected
+	  # location b/c this prevents finding dependent libraries that
+	  # are installed to the same prefix.
+	  # At present, this check doesn't affect windows .dll's that
+	  # are installed into $libdir/../bin (currently, that works fine)
+	  # but it's something to keep an eye on.
+	  if test "$inst_prefix_dir" = "$destdir"; then
+	    $echo "$modename: error: cannot install \`$file' to a directory not ending in $libdir" 1>&2
+	    exit $EXIT_FAILURE
+	  fi
+
+	  if test -n "$inst_prefix_dir"; then
+	    # Stick the inst_prefix_dir data into the link command.
+	    relink_command=`$echo "$relink_command" | $SED "s%@inst_prefix_dir@%-inst-prefix-dir $inst_prefix_dir%"`
+	  else
+	    relink_command=`$echo "$relink_command" | $SED "s%@inst_prefix_dir@%%"`
+	  fi
+
+	  $echo "$modename: warning: relinking \`$file'" 1>&2
+	  $show "$relink_command"
+	  if $run eval "$relink_command"; then :
+	  else
+	    $echo "$modename: error: relink \`$file' with the above command before installing it" 1>&2
+	    exit $EXIT_FAILURE
+	  fi
+	fi
+
+	# See the names of the shared library.
+	set dummy $library_names
+	if test -n "$2"; then
+	  realname="$2"
+	  shift
+	  shift
+
+	  srcname="$realname"
+	  test -n "$relink_command" && srcname="$realname"T
+
+	  # Install the shared library and build the symlinks.
+	  $show "$install_prog $dir/$srcname $destdir/$realname"
+	  $run eval "$install_prog $dir/$srcname $destdir/$realname" || exit $?
+	  if test -n "$stripme" && test -n "$striplib"; then
+	    $show "$striplib $destdir/$realname"
+	    $run eval "$striplib $destdir/$realname" || exit $?
+	  fi
+
+	  if test "$#" -gt 0; then
+	    # Delete the old symlinks, and create new ones.
+	    # Try `ln -sf' first, because the `ln' binary might depend on
+	    # the symlink we replace!  Solaris /bin/ln does not understand -f,
+	    # so we also need to try rm && ln -s.
+	    for linkname
+	    do
+	      if test "$linkname" != "$realname"; then
+                $show "(cd $destdir && { $LN_S -f $realname $linkname || { $rm $linkname && $LN_S $realname $linkname; }; })"
+                $run eval "(cd $destdir && { $LN_S -f $realname $linkname || { $rm $linkname && $LN_S $realname $linkname; }; })"
+	      fi
+	    done
+	  fi
+
+	  # Do each command in the postinstall commands.
+	  lib="$destdir/$realname"
+	  cmds=$postinstall_cmds
+	  save_ifs="$IFS"; IFS='~'
+	  for cmd in $cmds; do
+	    IFS="$save_ifs"
+	    eval cmd=\"$cmd\"
+	    $show "$cmd"
+	    $run eval "$cmd" || {
+	      lt_exit=$?
+
+	      # Restore the uninstalled library and exit
+	      if test "$mode" = relink; then
+		$run eval '(cd $output_objdir && $rm ${realname}T && $mv ${realname}U $realname)'
+	      fi
+
+	      exit $lt_exit
+	    }
+	  done
+	  IFS="$save_ifs"
+	fi
+
+	# Install the pseudo-library for information purposes.
+	name=`$echo "X$file" | $Xsed -e 's%^.*/%%'`
+	instname="$dir/$name"i
+	$show "$install_prog $instname $destdir/$name"
+	$run eval "$install_prog $instname $destdir/$name" || exit $?
+
+	# Maybe install the static library, too.
+	test -n "$old_library" && staticlibs="$staticlibs $dir/$old_library"
+	;;
+
+      *.lo)
+	# Install (i.e. copy) a libtool object.
+
+	# Figure out destination file name, if it wasn't already specified.
+	if test -n "$destname"; then
+	  destfile="$destdir/$destname"
+	else
+	  destfile=`$echo "X$file" | $Xsed -e 's%^.*/%%'`
+	  destfile="$destdir/$destfile"
+	fi
+
+	# Deduce the name of the destination old-style object file.
+	case $destfile in
+	*.lo)
+	  staticdest=`$echo "X$destfile" | $Xsed -e "$lo2o"`
+	  ;;
+	*.$objext)
+	  staticdest="$destfile"
+	  destfile=
+	  ;;
+	*)
+	  $echo "$modename: cannot copy a libtool object to \`$destfile'" 1>&2
+	  $echo "$help" 1>&2
+	  exit $EXIT_FAILURE
+	  ;;
+	esac
+
+	# Install the libtool object if requested.
+	if test -n "$destfile"; then
+	  $show "$install_prog $file $destfile"
+	  $run eval "$install_prog $file $destfile" || exit $?
+	fi
+
+	# Install the old object if enabled.
+	if test "$build_old_libs" = yes; then
+	  # Deduce the name of the old-style object file.
+	  staticobj=`$echo "X$file" | $Xsed -e "$lo2o"`
+
+	  $show "$install_prog $staticobj $staticdest"
+	  $run eval "$install_prog \$staticobj \$staticdest" || exit $?
+	fi
+	exit $EXIT_SUCCESS
+	;;
+
+      *)
+	# Figure out destination file name, if it wasn't already specified.
+	if test -n "$destname"; then
+	  destfile="$destdir/$destname"
+	else
+	  destfile=`$echo "X$file" | $Xsed -e 's%^.*/%%'`
+	  destfile="$destdir/$destfile"
+	fi
+
+	# If the file is missing, and there is a .exe on the end, strip it
+	# because it is most likely a libtool script we actually want to
+	# install
+	stripped_ext=""
+	case $file in
+	  *.exe)
+	    if test ! -f "$file"; then
+	      file=`$echo $file|${SED} 's,.exe$,,'`
+	      stripped_ext=".exe"
+	    fi
+	    ;;
+	esac
+
+	# Do a test to see if this is really a libtool program.
+	case $host in
+	*cygwin*|*mingw*)
+	    wrapper=`$echo $file | ${SED} -e 's,.exe$,,'`
+	    ;;
+	*)
+	    wrapper=$file
+	    ;;
+	esac
+	if (${SED} -e '4q' $wrapper | grep "^# Generated by .*$PACKAGE")>/dev/null 2>&1; then
+	  notinst_deplibs=
+	  relink_command=
+
+	  # Note that it is not necessary on cygwin/mingw to append a dot to
+	  # foo even if both foo and FILE.exe exist: automatic-append-.exe
+	  # behavior happens only for exec(3), not for open(2)!  Also, sourcing
+	  # `FILE.' does not work on cygwin managed mounts.
+	  #
+	  # If there is no directory component, then add one.
+	  case $wrapper in
+	  */* | *\\*) . ${wrapper} ;;
+	  *) . ./${wrapper} ;;
+	  esac
+
+	  # Check the variables that should have been set.
+	  if test -z "$notinst_deplibs"; then
+	    $echo "$modename: invalid libtool wrapper script \`$wrapper'" 1>&2
+	    exit $EXIT_FAILURE
+	  fi
+
+	  finalize=yes
+	  for lib in $notinst_deplibs; do
+	    # Check to see that each library is installed.
+	    libdir=
+	    if test -f "$lib"; then
+	      # If there is no directory component, then add one.
+	      case $lib in
+	      */* | *\\*) . $lib ;;
+	      *) . ./$lib ;;
+	      esac
+	    fi
+	    libfile="$libdir/"`$echo "X$lib" | $Xsed -e 's%^.*/%%g'` ### testsuite: skip nested quoting test
+	    if test -n "$libdir" && test ! -f "$libfile"; then
+	      $echo "$modename: warning: \`$lib' has not been installed in \`$libdir'" 1>&2
+	      finalize=no
+	    fi
+	  done
+
+	  relink_command=
+	  # Note that it is not necessary on cygwin/mingw to append a dot to
+	  # foo even if both foo and FILE.exe exist: automatic-append-.exe
+	  # behavior happens only for exec(3), not for open(2)!  Also, sourcing
+	  # `FILE.' does not work on cygwin managed mounts.
+	  #
+	  # If there is no directory component, then add one.
+	  case $wrapper in
+	  */* | *\\*) . ${wrapper} ;;
+	  *) . ./${wrapper} ;;
+	  esac
+
+	  outputname=
+	  if test "$fast_install" = no && test -n "$relink_command"; then
+	    if test "$finalize" = yes && test -z "$run"; then
+	      tmpdir=`func_mktempdir`
+	      file=`$echo "X$file$stripped_ext" | $Xsed -e 's%^.*/%%'`
+	      outputname="$tmpdir/$file"
+	      # Replace the output file specification.
+	      relink_command=`$echo "X$relink_command" | $Xsed -e 's%@OUTPUT@%'"$outputname"'%g'`
+
+	      $show "$relink_command"
+	      if $run eval "$relink_command"; then :
+	      else
+		$echo "$modename: error: relink \`$file' with the above command before installing it" 1>&2
+		${rm}r "$tmpdir"
+		continue
+	      fi
+	      file="$outputname"
+	    else
+	      $echo "$modename: warning: cannot relink \`$file'" 1>&2
+	    fi
+	  else
+	    # Install the binary that we compiled earlier.
+	    file=`$echo "X$file$stripped_ext" | $Xsed -e "s%\([^/]*\)$%$objdir/\1%"`
+	  fi
+	fi
+
+	# remove .exe since cygwin /usr/bin/install will append another
+	# one anyway 
+	case $install_prog,$host in
+	*/usr/bin/install*,*cygwin*)
+	  case $file:$destfile in
+	  *.exe:*.exe)
+	    # this is ok
+	    ;;
+	  *.exe:*)
+	    destfile=$destfile.exe
+	    ;;
+	  *:*.exe)
+	    destfile=`$echo $destfile | ${SED} -e 's,.exe$,,'`
+	    ;;
+	  esac
+	  ;;
+	esac
+	$show "$install_prog$stripme $file $destfile"
+	$run eval "$install_prog\$stripme \$file \$destfile" || exit $?
+	test -n "$outputname" && ${rm}r "$tmpdir"
+	;;
+      esac
+    done
+
+    for file in $staticlibs; do
+      name=`$echo "X$file" | $Xsed -e 's%^.*/%%'`
+
+      # Set up the ranlib parameters.
+      oldlib="$destdir/$name"
+
+      $show "$install_prog $file $oldlib"
+      $run eval "$install_prog \$file \$oldlib" || exit $?
+
+      if test -n "$stripme" && test -n "$old_striplib"; then
+	$show "$old_striplib $oldlib"
+	$run eval "$old_striplib $oldlib" || exit $?
+      fi
+
+      # Do each command in the postinstall commands.
+      cmds=$old_postinstall_cmds
+      save_ifs="$IFS"; IFS='~'
+      for cmd in $cmds; do
+	IFS="$save_ifs"
+	eval cmd=\"$cmd\"
+	$show "$cmd"
+	$run eval "$cmd" || exit $?
+      done
+      IFS="$save_ifs"
+    done
+
+    if test -n "$future_libdirs"; then
+      $echo "$modename: warning: remember to run \`$progname --finish$future_libdirs'" 1>&2
+    fi
+
+    if test -n "$current_libdirs"; then
+      # Maybe just do a dry run.
+      test -n "$run" && current_libdirs=" -n$current_libdirs"
+      exec_cmd='$SHELL $progpath $preserve_args --finish$current_libdirs'
+    else
+      exit $EXIT_SUCCESS
+    fi
+    ;;
+
+  # libtool finish mode
+  finish)
+    modename="$modename: finish"
+    libdirs="$nonopt"
+    admincmds=
+
+    if test -n "$finish_cmds$finish_eval" && test -n "$libdirs"; then
+      for dir
+      do
+	libdirs="$libdirs $dir"
+      done
+
+      for libdir in $libdirs; do
+	if test -n "$finish_cmds"; then
+	  # Do each command in the finish commands.
+	  cmds=$finish_cmds
+	  save_ifs="$IFS"; IFS='~'
+	  for cmd in $cmds; do
+	    IFS="$save_ifs"
+	    eval cmd=\"$cmd\"
+	    $show "$cmd"
+	    $run eval "$cmd" || admincmds="$admincmds
+       $cmd"
+	  done
+	  IFS="$save_ifs"
+	fi
+	if test -n "$finish_eval"; then
+	  # Do the single finish_eval.
+	  eval cmds=\"$finish_eval\"
+	  $run eval "$cmds" || admincmds="$admincmds
+       $cmds"
+	fi
+      done
+    fi
+
+    # Exit here if they wanted silent mode.
+    test "$show" = : && exit $EXIT_SUCCESS
+
+    $echo "X----------------------------------------------------------------------" | $Xsed
+    $echo "Libraries have been installed in:"
+    for libdir in $libdirs; do
+      $echo "   $libdir"
+    done
+    $echo
+    $echo "If you ever happen to want to link against installed libraries"
+    $echo "in a given directory, LIBDIR, you must either use libtool, and"
+    $echo "specify the full pathname of the library, or use the \`-LLIBDIR'"
+    $echo "flag during linking and do at least one of the following:"
+    if test -n "$shlibpath_var"; then
+      $echo "   - add LIBDIR to the \`$shlibpath_var' environment variable"
+      $echo "     during execution"
+    fi
+    if test -n "$runpath_var"; then
+      $echo "   - add LIBDIR to the \`$runpath_var' environment variable"
+      $echo "     during linking"
+    fi
+    if test -n "$hardcode_libdir_flag_spec"; then
+      libdir=LIBDIR
+      eval flag=\"$hardcode_libdir_flag_spec\"
+
+      $echo "   - use the \`$flag' linker flag"
+    fi
+    if test -n "$admincmds"; then
+      $echo "   - have your system administrator run these commands:$admincmds"
+    fi
+    if test -f /etc/ld.so.conf; then
+      $echo "   - have your system administrator add LIBDIR to \`/etc/ld.so.conf'"
+    fi
+    $echo
+    $echo "See any operating system documentation about shared libraries for"
+    $echo "more information, such as the ld(1) and ld.so(8) manual pages."
+    $echo "X----------------------------------------------------------------------" | $Xsed
+    exit $EXIT_SUCCESS
+    ;;
+
+  # libtool execute mode
+  execute)
+    modename="$modename: execute"
+
+    # The first argument is the command name.
+    cmd="$nonopt"
+    if test -z "$cmd"; then
+      $echo "$modename: you must specify a COMMAND" 1>&2
+      $echo "$help"
+      exit $EXIT_FAILURE
+    fi
+
+    # Handle -dlopen flags immediately.
+    for file in $execute_dlfiles; do
+      if test ! -f "$file"; then
+	$echo "$modename: \`$file' is not a file" 1>&2
+	$echo "$help" 1>&2
+	exit $EXIT_FAILURE
+      fi
+
+      dir=
+      case $file in
+      *.la)
+	# Check to see that this really is a libtool archive.
+	if (${SED} -e '2q' $file | grep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then :
+	else
+	  $echo "$modename: \`$lib' is not a valid libtool archive" 1>&2
+	  $echo "$help" 1>&2
+	  exit $EXIT_FAILURE
+	fi
+
+	# Read the libtool library.
+	dlname=
+	library_names=
+
+	# If there is no directory component, then add one.
+	case $file in
+	*/* | *\\*) . $file ;;
+	*) . ./$file ;;
+	esac
+
+	# Skip this library if it cannot be dlopened.
+	if test -z "$dlname"; then
+	  # Warn if it was a shared library.
+	  test -n "$library_names" && $echo "$modename: warning: \`$file' was not linked with \`-export-dynamic'"
+	  continue
+	fi
+
+	dir=`$echo "X$file" | $Xsed -e 's%/[^/]*$%%'`
+	test "X$dir" = "X$file" && dir=.
+
+	if test -f "$dir/$objdir/$dlname"; then
+	  dir="$dir/$objdir"
+	else
+	  $echo "$modename: cannot find \`$dlname' in \`$dir' or \`$dir/$objdir'" 1>&2
+	  exit $EXIT_FAILURE
+	fi
+	;;
+
+      *.lo)
+	# Just add the directory containing the .lo file.
+	dir=`$echo "X$file" | $Xsed -e 's%/[^/]*$%%'`
+	test "X$dir" = "X$file" && dir=.
+	;;
+
+      *)
+	$echo "$modename: warning \`-dlopen' is ignored for non-libtool libraries and objects" 1>&2
+	continue
+	;;
+      esac
+
+      # Get the absolute pathname.
+      absdir=`cd "$dir" && pwd`
+      test -n "$absdir" && dir="$absdir"
+
+      # Now add the directory to shlibpath_var.
+      if eval "test -z \"\$$shlibpath_var\""; then
+	eval "$shlibpath_var=\"\$dir\""
+      else
+	eval "$shlibpath_var=\"\$dir:\$$shlibpath_var\""
+      fi
+    done
+
+    # This variable tells wrapper scripts just to set shlibpath_var
+    # rather than running their programs.
+    libtool_execute_magic="$magic"
+
+    # Check if any of the arguments is a wrapper script.
+    args=
+    for file
+    do
+      case $file in
+      -*) ;;
+      *)
+	# Do a test to see if this is really a libtool program.
+	if (${SED} -e '4q' $file | grep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+	  # If there is no directory component, then add one.
+	  case $file in
+	  */* | *\\*) . $file ;;
+	  *) . ./$file ;;
+	  esac
+
+	  # Transform arg to wrapped name.
+	  file="$progdir/$program"
+	fi
+	;;
+      esac
+      # Quote arguments (to preserve shell metacharacters).
+      file=`$echo "X$file" | $Xsed -e "$sed_quote_subst"`
+      args="$args \"$file\""
+    done
+
+    if test -z "$run"; then
+      if test -n "$shlibpath_var"; then
+	# Export the shlibpath_var.
+	eval "export $shlibpath_var"
+      fi
+
+      # Restore saved environment variables
+      if test "${save_LC_ALL+set}" = set; then
+	LC_ALL="$save_LC_ALL"; export LC_ALL
+      fi
+      if test "${save_LANG+set}" = set; then
+	LANG="$save_LANG"; export LANG
+      fi
+
+      # Now prepare to actually exec the command.
+      exec_cmd="\$cmd$args"
+    else
+      # Display what would be done.
+      if test -n "$shlibpath_var"; then
+	eval "\$echo \"\$shlibpath_var=\$$shlibpath_var\""
+	$echo "export $shlibpath_var"
+      fi
+      $echo "$cmd$args"
+      exit $EXIT_SUCCESS
+    fi
+    ;;
+
+  # libtool clean and uninstall mode
+  clean | uninstall)
+    modename="$modename: $mode"
+    rm="$nonopt"
+    files=
+    rmforce=
+    exit_status=0
+
+    # This variable tells wrapper scripts just to set variables rather
+    # than running their programs.
+    libtool_install_magic="$magic"
+
+    for arg
+    do
+      case $arg in
+      -f) rm="$rm $arg"; rmforce=yes ;;
+      -*) rm="$rm $arg" ;;
+      *) files="$files $arg" ;;
+      esac
+    done
+
+    if test -z "$rm"; then
+      $echo "$modename: you must specify an RM program" 1>&2
+      $echo "$help" 1>&2
+      exit $EXIT_FAILURE
+    fi
+
+    rmdirs=
+
+    origobjdir="$objdir"
+    for file in $files; do
+      dir=`$echo "X$file" | $Xsed -e 's%/[^/]*$%%'`
+      if test "X$dir" = "X$file"; then
+	dir=.
+	objdir="$origobjdir"
+      else
+	objdir="$dir/$origobjdir"
+      fi
+      name=`$echo "X$file" | $Xsed -e 's%^.*/%%'`
+      test "$mode" = uninstall && objdir="$dir"
+
+      # Remember objdir for removal later, being careful to avoid duplicates
+      if test "$mode" = clean; then
+	case " $rmdirs " in
+	  *" $objdir "*) ;;
+	  *) rmdirs="$rmdirs $objdir" ;;
+	esac
+      fi
+
+      # Don't error if the file doesn't exist and rm -f was used.
+      if (test -L "$file") >/dev/null 2>&1 \
+	|| (test -h "$file") >/dev/null 2>&1 \
+	|| test -f "$file"; then
+	:
+      elif test -d "$file"; then
+	exit_status=1
+	continue
+      elif test "$rmforce" = yes; then
+	continue
+      fi
+
+      rmfiles="$file"
+
+      case $name in
+      *.la)
+	# Possibly a libtool archive, so verify it.
+	if (${SED} -e '2q' $file | grep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+	  . $dir/$name
+
+	  # Delete the libtool libraries and symlinks.
+	  for n in $library_names; do
+	    rmfiles="$rmfiles $objdir/$n"
+	  done
+	  test -n "$old_library" && rmfiles="$rmfiles $objdir/$old_library"
+
+	  case "$mode" in
+	  clean)
+	    case "  $library_names " in
+	    # "  " in the beginning catches empty $dlname
+	    *" $dlname "*) ;;
+	    *) rmfiles="$rmfiles $objdir/$dlname" ;;
+	    esac
+	     test -n "$libdir" && rmfiles="$rmfiles $objdir/$name $objdir/${name}i"
+	    ;;
+	  uninstall)
+	    if test -n "$library_names"; then
+	      # Do each command in the postuninstall commands.
+	      cmds=$postuninstall_cmds
+	      save_ifs="$IFS"; IFS='~'
+	      for cmd in $cmds; do
+		IFS="$save_ifs"
+		eval cmd=\"$cmd\"
+		$show "$cmd"
+		$run eval "$cmd"
+		if test "$?" -ne 0 && test "$rmforce" != yes; then
+		  exit_status=1
+		fi
+	      done
+	      IFS="$save_ifs"
+	    fi
+
+	    if test -n "$old_library"; then
+	      # Do each command in the old_postuninstall commands.
+	      cmds=$old_postuninstall_cmds
+	      save_ifs="$IFS"; IFS='~'
+	      for cmd in $cmds; do
+		IFS="$save_ifs"
+		eval cmd=\"$cmd\"
+		$show "$cmd"
+		$run eval "$cmd"
+		if test "$?" -ne 0 && test "$rmforce" != yes; then
+		  exit_status=1
+		fi
+	      done
+	      IFS="$save_ifs"
+	    fi
+	    # FIXME: should reinstall the best remaining shared library.
+	    ;;
+	  esac
+	fi
+	;;
+
+      *.lo)
+	# Possibly a libtool object, so verify it.
+	if (${SED} -e '2q' $file | grep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+
+	  # Read the .lo file
+	  . $dir/$name
+
+	  # Add PIC object to the list of files to remove.
+	  if test -n "$pic_object" \
+	     && test "$pic_object" != none; then
+	    rmfiles="$rmfiles $dir/$pic_object"
+	  fi
+
+	  # Add non-PIC object to the list of files to remove.
+	  if test -n "$non_pic_object" \
+	     && test "$non_pic_object" != none; then
+	    rmfiles="$rmfiles $dir/$non_pic_object"
+	  fi
+	fi
+	;;
+
+      *)
+	if test "$mode" = clean ; then
+	  noexename=$name
+	  case $file in
+	  *.exe)
+	    file=`$echo $file|${SED} 's,.exe$,,'`
+	    noexename=`$echo $name|${SED} 's,.exe$,,'`
+	    # $file with .exe has already been added to rmfiles,
+	    # add $file without .exe
+	    rmfiles="$rmfiles $file"
+	    ;;
+	  esac
+	  # Do a test to see if this is a libtool program.
+	  if (${SED} -e '4q' $file | grep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+	    relink_command=
+	    . $dir/$noexename
+
+	    # note $name still contains .exe if it was in $file originally
+	    # as does the version of $file that was added into $rmfiles
+	    rmfiles="$rmfiles $objdir/$name $objdir/${name}S.${objext}"
+	    if test "$fast_install" = yes && test -n "$relink_command"; then
+	      rmfiles="$rmfiles $objdir/lt-$name"
+	    fi
+	    if test "X$noexename" != "X$name" ; then
+	      rmfiles="$rmfiles $objdir/lt-${noexename}.c"
+	    fi
+	  fi
+	fi
+	;;
+      esac
+      $show "$rm $rmfiles"
+      $run $rm $rmfiles || exit_status=1
+    done
+    objdir="$origobjdir"
+
+    # Try to remove the ${objdir}s in the directories where we deleted files
+    for dir in $rmdirs; do
+      if test -d "$dir"; then
+	$show "rmdir $dir"
+	$run rmdir $dir >/dev/null 2>&1
+      fi
+    done
+
+    exit $exit_status
+    ;;
+
+  "")
+    $echo "$modename: you must specify a MODE" 1>&2
+    $echo "$generic_help" 1>&2
+    exit $EXIT_FAILURE
+    ;;
+  esac
+
+  if test -z "$exec_cmd"; then
+    $echo "$modename: invalid operation mode \`$mode'" 1>&2
+    $echo "$generic_help" 1>&2
+    exit $EXIT_FAILURE
+  fi
+fi # test -z "$show_help"
+
+if test -n "$exec_cmd"; then
+  eval exec $exec_cmd
+  exit $EXIT_FAILURE
+fi
+
+# We need to display help for each of the modes.
+case $mode in
+"") $echo \
+"Usage: $modename [OPTION]... [MODE-ARG]...
+
+Provide generalized library-building support services.
+
+    --config          show all configuration variables
+    --debug           enable verbose shell tracing
+-n, --dry-run         display commands without modifying any files
+    --features        display basic configuration information and exit
+    --finish          same as \`--mode=finish'
+    --help            display this help message and exit
+    --mode=MODE       use operation mode MODE [default=inferred from MODE-ARGS]
+    --quiet           same as \`--silent'
+    --silent          don't print informational messages
+    --tag=TAG         use configuration variables from tag TAG
+    --version         print version information
+
+MODE must be one of the following:
+
+      clean           remove files from the build directory
+      compile         compile a source file into a libtool object
+      execute         automatically set library path, then run a program
+      finish          complete the installation of libtool libraries
+      install         install libraries or executables
+      link            create a library or an executable
+      uninstall       remove libraries from an installed directory
+
+MODE-ARGS vary depending on the MODE.  Try \`$modename --help --mode=MODE' for
+a more detailed description of MODE.
+
+Report bugs to <bug-libtool@gnu.org>."
+  exit $EXIT_SUCCESS
+  ;;
+
+clean)
+  $echo \
+"Usage: $modename [OPTION]... --mode=clean RM [RM-OPTION]... FILE...
+
+Remove files from the build directory.
+
+RM is the name of the program to use to delete files associated with each FILE
+(typically \`/bin/rm').  RM-OPTIONS are options (such as \`-f') to be passed
+to RM.
+
+If FILE is a libtool library, object or program, all the files associated
+with it are deleted. Otherwise, only FILE itself is deleted using RM."
+  ;;
+
+compile)
+  $echo \
+"Usage: $modename [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE
+
+Compile a source file into a libtool library object.
+
+This mode accepts the following additional options:
+
+  -o OUTPUT-FILE    set the output file name to OUTPUT-FILE
+  -prefer-pic       try to building PIC objects only
+  -prefer-non-pic   try to building non-PIC objects only
+  -static           always build a \`.o' file suitable for static linking
+
+COMPILE-COMMAND is a command to be used in creating a \`standard' object file
+from the given SOURCEFILE.
+
+The output file name is determined by removing the directory component from
+SOURCEFILE, then substituting the C source code suffix \`.c' with the
+library object suffix, \`.lo'."
+  ;;
+
+execute)
+  $echo \
+"Usage: $modename [OPTION]... --mode=execute COMMAND [ARGS]...
+
+Automatically set library path, then run a program.
+
+This mode accepts the following additional options:
+
+  -dlopen FILE      add the directory containing FILE to the library path
+
+This mode sets the library path environment variable according to \`-dlopen'
+flags.
+
+If any of the ARGS are libtool executable wrappers, then they are translated
+into their corresponding uninstalled binary, and any of their required library
+directories are added to the library path.
+
+Then, COMMAND is executed, with ARGS as arguments."
+  ;;
+
+finish)
+  $echo \
+"Usage: $modename [OPTION]... --mode=finish [LIBDIR]...
+
+Complete the installation of libtool libraries.
+
+Each LIBDIR is a directory that contains libtool libraries.
+
+The commands that this mode executes may require superuser privileges.  Use
+the \`--dry-run' option if you just want to see what would be executed."
+  ;;
+
+install)
+  $echo \
+"Usage: $modename [OPTION]... --mode=install INSTALL-COMMAND...
+
+Install executables or libraries.
+
+INSTALL-COMMAND is the installation command.  The first component should be
+either the \`install' or \`cp' program.
+
+The rest of the components are interpreted as arguments to that command (only
+BSD-compatible install options are recognized)."
+  ;;
+
+link)
+  $echo \
+"Usage: $modename [OPTION]... --mode=link LINK-COMMAND...
+
+Link object files or libraries together to form another library, or to
+create an executable program.
+
+LINK-COMMAND is a command using the C compiler that you would use to create
+a program from several object files.
+
+The following components of LINK-COMMAND are treated specially:
+
+  -all-static       do not do any dynamic linking at all
+  -avoid-version    do not add a version suffix if possible
+  -dlopen FILE      \`-dlpreopen' FILE if it cannot be dlopened at runtime
+  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols
+  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)
+  -export-symbols SYMFILE
+		    try to export only the symbols listed in SYMFILE
+  -export-symbols-regex REGEX
+		    try to export only the symbols matching REGEX
+  -LLIBDIR          search LIBDIR for required installed libraries
+  -lNAME            OUTPUT-FILE requires the installed library libNAME
+  -module           build a library that can dlopened
+  -no-fast-install  disable the fast-install mode
+  -no-install       link a not-installable executable
+  -no-undefined     declare that a library does not refer to external symbols
+  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects
+  -objectlist FILE  Use a list of object files found in FILE to specify objects
+  -precious-files-regex REGEX
+                    don't remove output files matching REGEX
+  -release RELEASE  specify package release information
+  -rpath LIBDIR     the created library will eventually be installed in LIBDIR
+  -R[ ]LIBDIR       add LIBDIR to the runtime path of programs and libraries
+  -static           do not do any dynamic linking of libtool libraries
+  -version-info CURRENT[:REVISION[:AGE]]
+		    specify library version info [each variable defaults to 0]
+
+All other options (arguments beginning with \`-') are ignored.
+
+Every other argument is treated as a filename.  Files ending in \`.la' are
+treated as uninstalled libtool libraries, other files are standard or library
+object files.
+
+If the OUTPUT-FILE ends in \`.la', then a libtool library is created,
+only library objects (\`.lo' files) may be specified, and \`-rpath' is
+required, except when creating a convenience library.
+
+If OUTPUT-FILE ends in \`.a' or \`.lib', then a standard library is created
+using \`ar' and \`ranlib', or on Windows using \`lib'.
+
+If OUTPUT-FILE ends in \`.lo' or \`.${objext}', then a reloadable object file
+is created, otherwise an executable program is created."
+  ;;
+
+uninstall)
+  $echo \
+"Usage: $modename [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...
+
+Remove libraries from an installation directory.
+
+RM is the name of the program to use to delete files associated with each FILE
+(typically \`/bin/rm').  RM-OPTIONS are options (such as \`-f') to be passed
+to RM.
+
+If FILE is a libtool library, all the files associated with it are deleted.
+Otherwise, only FILE itself is deleted using RM."
+  ;;
+
+*)
+  $echo "$modename: invalid operation mode \`$mode'" 1>&2
+  $echo "$help" 1>&2
+  exit $EXIT_FAILURE
+  ;;
+esac
+
+$echo
+$echo "Try \`$modename --help' for more information about other modes."
+
+exit $?
+
+# The TAGs below are defined such that we never get into a situation
+# in which we disable both kinds of libraries.  Given conflicting
+# choices, we go for a static library, that is the most portable,
+# since we can't tell whether shared libraries were disabled because
+# the user asked for that or because the platform doesn't support
+# them.  This is particularly important on AIX, because we don't
+# support having both static and shared libraries enabled at the same
+# time on that platform, so we default to a shared-only configuration.
+# If a disable-shared tag is given, we'll fallback to a static-only
+# configuration.  But we'll never go from static-only to shared-only.
+
+# ### BEGIN LIBTOOL TAG CONFIG: disable-shared
+disable_libs=shared
+# ### END LIBTOOL TAG CONFIG: disable-shared
+
+# ### BEGIN LIBTOOL TAG CONFIG: disable-static
+disable_libs=static
+# ### END LIBTOOL TAG CONFIG: disable-static
+
+# Local Variables:
+# mode:shell-script
+# sh-indentation:2
+# End:
diff -r d551623afde5 deps/exmpp/ac-aux/missing
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/ac-aux/missing	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,360 @@
+#! /bin/sh
+# Common stub for a few missing GNU programs while installing.
+
+scriptversion=2005-06-08.21
+
+# Copyright (C) 1996, 1997, 1999, 2000, 2002, 2003, 2004, 2005
+#   Free Software Foundation, Inc.
+# Originally by Fran,cois Pinard <pinard@iro.umontreal.ca>, 1996.
+
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2, or (at your option)
+# any later version.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+# 02110-1301, USA.
+
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+if test $# -eq 0; then
+  echo 1>&2 "Try \`$0 --help' for more information"
+  exit 1
+fi
+
+run=:
+
+# In the cases where this matters, `missing' is being run in the
+# srcdir already.
+if test -f configure.ac; then
+  configure_ac=configure.ac
+else
+  configure_ac=configure.in
+fi
+
+msg="missing on your system"
+
+case "$1" in
+--run)
+  # Try to run requested program, and just exit if it succeeds.
+  run=
+  shift
+  "$@" && exit 0
+  # Exit code 63 means version mismatch.  This often happens
+  # when the user try to use an ancient version of a tool on
+  # a file that requires a minimum version.  In this case we
+  # we should proceed has if the program had been absent, or
+  # if --run hadn't been passed.
+  if test $? = 63; then
+    run=:
+    msg="probably too old"
+  fi
+  ;;
+
+  -h|--h|--he|--hel|--help)
+    echo "\
+$0 [OPTION]... PROGRAM [ARGUMENT]...
+
+Handle \`PROGRAM [ARGUMENT]...' for when PROGRAM is missing, or return an
+error status if there is no known handling for PROGRAM.
+
+Options:
+  -h, --help      display this help and exit
+  -v, --version   output version information and exit
+  --run           try to run the given command, and emulate it if it fails
+
+Supported PROGRAM values:
+  aclocal      touch file \`aclocal.m4'
+  autoconf     touch file \`configure'
+  autoheader   touch file \`config.h.in'
+  automake     touch all \`Makefile.in' files
+  bison        create \`y.tab.[ch]', if possible, from existing .[ch]
+  flex         create \`lex.yy.c', if possible, from existing .c
+  help2man     touch the output file
+  lex          create \`lex.yy.c', if possible, from existing .c
+  makeinfo     touch the output file
+  tar          try tar, gnutar, gtar, then tar without non-portable flags
+  yacc         create \`y.tab.[ch]', if possible, from existing .[ch]
+
+Send bug reports to <bug-automake@gnu.org>."
+    exit $?
+    ;;
+
+  -v|--v|--ve|--ver|--vers|--versi|--versio|--version)
+    echo "missing $scriptversion (GNU Automake)"
+    exit $?
+    ;;
+
+  -*)
+    echo 1>&2 "$0: Unknown \`$1' option"
+    echo 1>&2 "Try \`$0 --help' for more information"
+    exit 1
+    ;;
+
+esac
+
+# Now exit if we have it, but it failed.  Also exit now if we
+# don't have it and --version was passed (most likely to detect
+# the program).
+case "$1" in
+  lex|yacc)
+    # Not GNU programs, they don't have --version.
+    ;;
+
+  tar)
+    if test -n "$run"; then
+       echo 1>&2 "ERROR: \`tar' requires --run"
+       exit 1
+    elif test "x$2" = "x--version" || test "x$2" = "x--help"; then
+       exit 1
+    fi
+    ;;
+
+  *)
+    if test -z "$run" && ($1 --version) > /dev/null 2>&1; then
+       # We have it, but it failed.
+       exit 1
+    elif test "x$2" = "x--version" || test "x$2" = "x--help"; then
+       # Could not run --version or --help.  This is probably someone
+       # running `$TOOL --version' or `$TOOL --help' to check whether
+       # $TOOL exists and not knowing $TOOL uses missing.
+       exit 1
+    fi
+    ;;
+esac
+
+# If it does not exist, or fails to run (possibly an outdated version),
+# try to emulate it.
+case "$1" in
+  aclocal*)
+    echo 1>&2 "\
+WARNING: \`$1' is $msg.  You should only need it if
+         you modified \`acinclude.m4' or \`${configure_ac}'.  You might want
+         to install the \`Automake' and \`Perl' packages.  Grab them from
+         any GNU archive site."
+    touch aclocal.m4
+    ;;
+
+  autoconf)
+    echo 1>&2 "\
+WARNING: \`$1' is $msg.  You should only need it if
+         you modified \`${configure_ac}'.  You might want to install the
+         \`Autoconf' and \`GNU m4' packages.  Grab them from any GNU
+         archive site."
+    touch configure
+    ;;
+
+  autoheader)
+    echo 1>&2 "\
+WARNING: \`$1' is $msg.  You should only need it if
+         you modified \`acconfig.h' or \`${configure_ac}'.  You might want
+         to install the \`Autoconf' and \`GNU m4' packages.  Grab them
+         from any GNU archive site."
+    files=`sed -n 's/^[ ]*A[CM]_CONFIG_HEADER(\([^)]*\)).*/\1/p' ${configure_ac}`
+    test -z "$files" && files="config.h"
+    touch_files=
+    for f in $files; do
+      case "$f" in
+      *:*) touch_files="$touch_files "`echo "$f" |
+				       sed -e 's/^[^:]*://' -e 's/:.*//'`;;
+      *) touch_files="$touch_files $f.in";;
+      esac
+    done
+    touch $touch_files
+    ;;
+
+  automake*)
+    echo 1>&2 "\
+WARNING: \`$1' is $msg.  You should only need it if
+         you modified \`Makefile.am', \`acinclude.m4' or \`${configure_ac}'.
+         You might want to install the \`Automake' and \`Perl' packages.
+         Grab them from any GNU archive site."
+    find . -type f -name Makefile.am -print |
+	   sed 's/\.am$/.in/' |
+	   while read f; do touch "$f"; done
+    ;;
+
+  autom4te)
+    echo 1>&2 "\
+WARNING: \`$1' is needed, but is $msg.
+         You might have modified some files without having the
+         proper tools for further handling them.
+         You can get \`$1' as part of \`Autoconf' from any GNU
+         archive site."
+
+    file=`echo "$*" | sed -n 's/.*--output[ =]*\([^ ]*\).*/\1/p'`
+    test -z "$file" && file=`echo "$*" | sed -n 's/.*-o[ ]*\([^ ]*\).*/\1/p'`
+    if test -f "$file"; then
+	touch $file
+    else
+	test -z "$file" || exec >$file
+	echo "#! /bin/sh"
+	echo "# Created by GNU Automake missing as a replacement of"
+	echo "#  $ $@"
+	echo "exit 0"
+	chmod +x $file
+	exit 1
+    fi
+    ;;
+
+  bison|yacc)
+    echo 1>&2 "\
+WARNING: \`$1' $msg.  You should only need it if
+         you modified a \`.y' file.  You may need the \`Bison' package
+         in order for those modifications to take effect.  You can get
+         \`Bison' from any GNU archive site."
+    rm -f y.tab.c y.tab.h
+    if [ $# -ne 1 ]; then
+        eval LASTARG="\${$#}"
+	case "$LASTARG" in
+	*.y)
+	    SRCFILE=`echo "$LASTARG" | sed 's/y$/c/'`
+	    if [ -f "$SRCFILE" ]; then
+	         cp "$SRCFILE" y.tab.c
+	    fi
+	    SRCFILE=`echo "$LASTARG" | sed 's/y$/h/'`
+	    if [ -f "$SRCFILE" ]; then
+	         cp "$SRCFILE" y.tab.h
+	    fi
+	  ;;
+	esac
+    fi
+    if [ ! -f y.tab.h ]; then
+	echo >y.tab.h
+    fi
+    if [ ! -f y.tab.c ]; then
+	echo 'main() { return 0; }' >y.tab.c
+    fi
+    ;;
+
+  lex|flex)
+    echo 1>&2 "\
+WARNING: \`$1' is $msg.  You should only need it if
+         you modified a \`.l' file.  You may need the \`Flex' package
+         in order for those modifications to take effect.  You can get
+         \`Flex' from any GNU archive site."
+    rm -f lex.yy.c
+    if [ $# -ne 1 ]; then
+        eval LASTARG="\${$#}"
+	case "$LASTARG" in
+	*.l)
+	    SRCFILE=`echo "$LASTARG" | sed 's/l$/c/'`
+	    if [ -f "$SRCFILE" ]; then
+	         cp "$SRCFILE" lex.yy.c
+	    fi
+	  ;;
+	esac
+    fi
+    if [ ! -f lex.yy.c ]; then
+	echo 'main() { return 0; }' >lex.yy.c
+    fi
+    ;;
+
+  help2man)
+    echo 1>&2 "\
+WARNING: \`$1' is $msg.  You should only need it if
+	 you modified a dependency of a manual page.  You may need the
+	 \`Help2man' package in order for those modifications to take
+	 effect.  You can get \`Help2man' from any GNU archive site."
+
+    file=`echo "$*" | sed -n 's/.*-o \([^ ]*\).*/\1/p'`
+    if test -z "$file"; then
+	file=`echo "$*" | sed -n 's/.*--output=\([^ ]*\).*/\1/p'`
+    fi
+    if [ -f "$file" ]; then
+	touch $file
+    else
+	test -z "$file" || exec >$file
+	echo ".ab help2man is required to generate this page"
+	exit 1
+    fi
+    ;;
+
+  makeinfo)
+    echo 1>&2 "\
+WARNING: \`$1' is $msg.  You should only need it if
+         you modified a \`.texi' or \`.texinfo' file, or any other file
+         indirectly affecting the aspect of the manual.  The spurious
+         call might also be the consequence of using a buggy \`make' (AIX,
+         DU, IRIX).  You might want to install the \`Texinfo' package or
+         the \`GNU make' package.  Grab either from any GNU archive site."
+    # The file to touch is that specified with -o ...
+    file=`echo "$*" | sed -n 's/.*-o \([^ ]*\).*/\1/p'`
+    if test -z "$file"; then
+      # ... or it is the one specified with @setfilename ...
+      infile=`echo "$*" | sed 's/.* \([^ ]*\) *$/\1/'`
+      file=`sed -n '/^@setfilename/ { s/.* \([^ ]*\) *$/\1/; p; q; }' $infile`
+      # ... or it is derived from the source name (dir/f.texi becomes f.info)
+      test -z "$file" && file=`echo "$infile" | sed 's,.*/,,;s,.[^.]*$,,'`.info
+    fi
+    # If the file does not exist, the user really needs makeinfo;
+    # let's fail without touching anything.
+    test -f $file || exit 1
+    touch $file
+    ;;
+
+  tar)
+    shift
+
+    # We have already tried tar in the generic part.
+    # Look for gnutar/gtar before invocation to avoid ugly error
+    # messages.
+    if (gnutar --version > /dev/null 2>&1); then
+       gnutar "$@" && exit 0
+    fi
+    if (gtar --version > /dev/null 2>&1); then
+       gtar "$@" && exit 0
+    fi
+    firstarg="$1"
+    if shift; then
+	case "$firstarg" in
+	*o*)
+	    firstarg=`echo "$firstarg" | sed s/o//`
+	    tar "$firstarg" "$@" && exit 0
+	    ;;
+	esac
+	case "$firstarg" in
+	*h*)
+	    firstarg=`echo "$firstarg" | sed s/h//`
+	    tar "$firstarg" "$@" && exit 0
+	    ;;
+	esac
+    fi
+
+    echo 1>&2 "\
+WARNING: I can't seem to be able to run \`tar' with the given arguments.
+         You may want to install GNU tar or Free paxutils, or check the
+         command line arguments."
+    exit 1
+    ;;
+
+  *)
+    echo 1>&2 "\
+WARNING: \`$1' is needed, and is $msg.
+         You might have modified some files without having the
+         proper tools for further handling them.  Check the \`README' file,
+         it often tells you about the needed prerequisites for installing
+         this package.  You may also peek at any GNU archive site, in case
+         some other package would contain this missing \`$1' program."
+    exit 1
+    ;;
+esac
+
+exit 0
+
+# Local variables:
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "scriptversion="
+# time-stamp-format: "%:y-%02m-%02d.%02H"
+# time-stamp-end: "$"
+# End:
diff -r d551623afde5 deps/exmpp/aclocal.m4
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/aclocal.m4	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,7238 @@
+# generated automatically by aclocal 1.9.6 -*- Autoconf -*-
+
+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
+# 2005  Free Software Foundation, Inc.
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+# libtool.m4 - Configure libtool for the host system. -*-Autoconf-*-
+
+# serial 48 Debian 1.5.22-4+etch1 AC_PROG_LIBTOOL
+
+
+# AC_PROVIDE_IFELSE(MACRO-NAME, IF-PROVIDED, IF-NOT-PROVIDED)
+# -----------------------------------------------------------
+# If this macro is not defined by Autoconf, define it here.
+m4_ifdef([AC_PROVIDE_IFELSE],
+         [],
+         [m4_define([AC_PROVIDE_IFELSE],
+	         [m4_ifdef([AC_PROVIDE_$1],
+		           [$2], [$3])])])
+
+
+# AC_PROG_LIBTOOL
+# ---------------
+AC_DEFUN([AC_PROG_LIBTOOL],
+[AC_REQUIRE([_AC_PROG_LIBTOOL])dnl
+dnl If AC_PROG_CXX has already been expanded, run AC_LIBTOOL_CXX
+dnl immediately, otherwise, hook it in at the end of AC_PROG_CXX.
+  AC_PROVIDE_IFELSE([AC_PROG_CXX],
+    [AC_LIBTOOL_CXX],
+    [define([AC_PROG_CXX], defn([AC_PROG_CXX])[AC_LIBTOOL_CXX
+  ])])
+dnl And a similar setup for Fortran 77 support
+  AC_PROVIDE_IFELSE([AC_PROG_F77],
+    [AC_LIBTOOL_F77],
+    [define([AC_PROG_F77], defn([AC_PROG_F77])[AC_LIBTOOL_F77
+])])
+
+dnl Quote A][M_PROG_GCJ so that aclocal doesn't bring it in needlessly.
+dnl If either AC_PROG_GCJ or A][M_PROG_GCJ have already been expanded, run
+dnl AC_LIBTOOL_GCJ immediately, otherwise, hook it in at the end of both.
+  AC_PROVIDE_IFELSE([AC_PROG_GCJ],
+    [AC_LIBTOOL_GCJ],
+    [AC_PROVIDE_IFELSE([A][M_PROG_GCJ],
+      [AC_LIBTOOL_GCJ],
+      [AC_PROVIDE_IFELSE([LT_AC_PROG_GCJ],
+	[AC_LIBTOOL_GCJ],
+      [ifdef([AC_PROG_GCJ],
+	     [define([AC_PROG_GCJ], defn([AC_PROG_GCJ])[AC_LIBTOOL_GCJ])])
+       ifdef([A][M_PROG_GCJ],
+	     [define([A][M_PROG_GCJ], defn([A][M_PROG_GCJ])[AC_LIBTOOL_GCJ])])
+       ifdef([LT_AC_PROG_GCJ],
+	     [define([LT_AC_PROG_GCJ],
+		defn([LT_AC_PROG_GCJ])[AC_LIBTOOL_GCJ])])])])
+])])# AC_PROG_LIBTOOL
+
+
+# _AC_PROG_LIBTOOL
+# ----------------
+AC_DEFUN([_AC_PROG_LIBTOOL],
+[AC_REQUIRE([AC_LIBTOOL_SETUP])dnl
+AC_BEFORE([$0],[AC_LIBTOOL_CXX])dnl
+AC_BEFORE([$0],[AC_LIBTOOL_F77])dnl
+AC_BEFORE([$0],[AC_LIBTOOL_GCJ])dnl
+
+# This can be used to rebuild libtool when needed
+LIBTOOL_DEPS="$ac_aux_dir/ltmain.sh"
+
+# Always use our own libtool.
+LIBTOOL='$(SHELL) $(top_builddir)/libtool'
+AC_SUBST(LIBTOOL)dnl
+
+# Prevent multiple expansion
+define([AC_PROG_LIBTOOL], [])
+])# _AC_PROG_LIBTOOL
+
+
+# AC_LIBTOOL_SETUP
+# ----------------
+AC_DEFUN([AC_LIBTOOL_SETUP],
+[AC_PREREQ(2.50)dnl
+AC_REQUIRE([AC_ENABLE_SHARED])dnl
+AC_REQUIRE([AC_ENABLE_STATIC])dnl
+AC_REQUIRE([AC_ENABLE_FAST_INSTALL])dnl
+AC_REQUIRE([AC_CANONICAL_HOST])dnl
+AC_REQUIRE([AC_CANONICAL_BUILD])dnl
+AC_REQUIRE([AC_PROG_CC])dnl
+AC_REQUIRE([AC_PROG_LD])dnl
+AC_REQUIRE([AC_PROG_LD_RELOAD_FLAG])dnl
+AC_REQUIRE([AC_PROG_NM])dnl
+
+AC_REQUIRE([AC_PROG_LN_S])dnl
+AC_REQUIRE([AC_DEPLIBS_CHECK_METHOD])dnl
+# Autoconf 2.13's AC_OBJEXT and AC_EXEEXT macros only works for C compilers!
+AC_REQUIRE([AC_OBJEXT])dnl
+AC_REQUIRE([AC_EXEEXT])dnl
+dnl
+
+AC_LIBTOOL_SYS_MAX_CMD_LEN
+AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE
+AC_LIBTOOL_OBJDIR
+
+AC_REQUIRE([_LT_AC_SYS_COMPILER])dnl
+_LT_AC_PROG_ECHO_BACKSLASH
+
+case $host_os in
+aix3*)
+  # AIX sometimes has problems with the GCC collect2 program.  For some
+  # reason, if we set the COLLECT_NAMES environment variable, the problems
+  # vanish in a puff of smoke.
+  if test "X${COLLECT_NAMES+set}" != Xset; then
+    COLLECT_NAMES=
+    export COLLECT_NAMES
+  fi
+  ;;
+esac
+
+# Sed substitution that helps us do robust quoting.  It backslashifies
+# metacharacters that are still active within double-quoted strings.
+Xsed='sed -e 1s/^X//'
+[sed_quote_subst='s/\([\\"\\`$\\\\]\)/\\\1/g']
+
+# Same as above, but do not quote variable references.
+[double_quote_subst='s/\([\\"\\`\\\\]\)/\\\1/g']
+
+# Sed substitution to delay expansion of an escaped shell variable in a
+# double_quote_subst'ed string.
+delay_variable_subst='s/\\\\\\\\\\\$/\\\\\\$/g'
+
+# Sed substitution to avoid accidental globbing in evaled expressions
+no_glob_subst='s/\*/\\\*/g'
+
+# Constants:
+rm="rm -f"
+
+# Global variables:
+default_ofile=libtool
+can_build_shared=yes
+
+# All known linkers require a `.a' archive for static linking (except MSVC,
+# which needs '.lib').
+libext=a
+ltmain="$ac_aux_dir/ltmain.sh"
+ofile="$default_ofile"
+with_gnu_ld="$lt_cv_prog_gnu_ld"
+
+AC_CHECK_TOOL(AR, ar, false)
+AC_CHECK_TOOL(RANLIB, ranlib, :)
+AC_CHECK_TOOL(STRIP, strip, :)
+
+old_CC="$CC"
+old_CFLAGS="$CFLAGS"
+
+# Set sane defaults for various variables
+test -z "$AR" && AR=ar
+test -z "$AR_FLAGS" && AR_FLAGS=cru
+test -z "$AS" && AS=as
+test -z "$CC" && CC=cc
+test -z "$LTCC" && LTCC=$CC
+test -z "$LTCFLAGS" && LTCFLAGS=$CFLAGS
+test -z "$DLLTOOL" && DLLTOOL=dlltool
+test -z "$LD" && LD=ld
+test -z "$LN_S" && LN_S="ln -s"
+test -z "$MAGIC_CMD" && MAGIC_CMD=file
+test -z "$NM" && NM=nm
+test -z "$SED" && SED=sed
+test -z "$OBJDUMP" && OBJDUMP=objdump
+test -z "$RANLIB" && RANLIB=:
+test -z "$STRIP" && STRIP=:
+test -z "$ac_objext" && ac_objext=o
+
+# Determine commands to create old-style static archives.
+old_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs'
+old_postinstall_cmds='chmod 644 $oldlib'
+old_postuninstall_cmds=
+
+if test -n "$RANLIB"; then
+  case $host_os in
+  openbsd*)
+    old_postinstall_cmds="$old_postinstall_cmds~\$RANLIB -t \$oldlib"
+    ;;
+  *)
+    old_postinstall_cmds="$old_postinstall_cmds~\$RANLIB \$oldlib"
+    ;;
+  esac
+  old_archive_cmds="$old_archive_cmds~\$RANLIB \$oldlib"
+fi
+
+_LT_CC_BASENAME([$compiler])
+
+# Only perform the check for file, if the check method requires it
+case $deplibs_check_method in
+file_magic*)
+  if test "$file_magic_cmd" = '$MAGIC_CMD'; then
+    AC_PATH_MAGIC
+  fi
+  ;;
+esac
+
+AC_PROVIDE_IFELSE([AC_LIBTOOL_DLOPEN], enable_dlopen=yes, enable_dlopen=no)
+AC_PROVIDE_IFELSE([AC_LIBTOOL_WIN32_DLL],
+enable_win32_dll=yes, enable_win32_dll=no)
+
+AC_ARG_ENABLE([libtool-lock],
+    [AC_HELP_STRING([--disable-libtool-lock],
+	[avoid locking (might break parallel builds)])])
+test "x$enable_libtool_lock" != xno && enable_libtool_lock=yes
+
+AC_ARG_WITH([pic],
+    [AC_HELP_STRING([--with-pic],
+	[try to use only PIC/non-PIC objects @<:@default=use both@:>@])],
+    [pic_mode="$withval"],
+    [pic_mode=default])
+test -z "$pic_mode" && pic_mode=default
+
+# Use C for the default configuration in the libtool script
+tagname=
+AC_LIBTOOL_LANG_C_CONFIG
+_LT_AC_TAGCONFIG
+])# AC_LIBTOOL_SETUP
+
+
+# _LT_AC_SYS_COMPILER
+# -------------------
+AC_DEFUN([_LT_AC_SYS_COMPILER],
+[AC_REQUIRE([AC_PROG_CC])dnl
+
+# If no C compiler was specified, use CC.
+LTCC=${LTCC-"$CC"}
+
+# If no C compiler flags were specified, use CFLAGS.
+LTCFLAGS=${LTCFLAGS-"$CFLAGS"}
+
+# Allow CC to be a program name with arguments.
+compiler=$CC
+])# _LT_AC_SYS_COMPILER
+
+
+# _LT_CC_BASENAME(CC)
+# -------------------
+# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.
+AC_DEFUN([_LT_CC_BASENAME],
+[for cc_temp in $1""; do
+  case $cc_temp in
+    compile | *[[\\/]]compile | ccache | *[[\\/]]ccache ) ;;
+    distcc | *[[\\/]]distcc | purify | *[[\\/]]purify ) ;;
+    \-*) ;;
+    *) break;;
+  esac
+done
+cc_basename=`$echo "X$cc_temp" | $Xsed -e 's%.*/%%' -e "s%^$host_alias-%%"`
+])
+
+
+# _LT_COMPILER_BOILERPLATE
+# ------------------------
+# Check for compiler boilerplate output or warnings with
+# the simple compiler test code.
+AC_DEFUN([_LT_COMPILER_BOILERPLATE],
+[ac_outfile=conftest.$ac_objext
+printf "$lt_simple_compile_test_code" >conftest.$ac_ext
+eval "$ac_compile" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
+_lt_compiler_boilerplate=`cat conftest.err`
+$rm conftest*
+])# _LT_COMPILER_BOILERPLATE
+
+
+# _LT_LINKER_BOILERPLATE
+# ----------------------
+# Check for linker boilerplate output or warnings with
+# the simple link test code.
+AC_DEFUN([_LT_LINKER_BOILERPLATE],
+[ac_outfile=conftest.$ac_objext
+printf "$lt_simple_link_test_code" >conftest.$ac_ext
+eval "$ac_link" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
+_lt_linker_boilerplate=`cat conftest.err`
+$rm conftest*
+])# _LT_LINKER_BOILERPLATE
+
+
+# _LT_AC_SYS_LIBPATH_AIX
+# ----------------------
+# Links a minimal program and checks the executable
+# for the system default hardcoded library path. In most cases,
+# this is /usr/lib:/lib, but when the MPI compilers are used
+# the location of the communication and MPI libs are included too.
+# If we don't find anything, use the default library path according
+# to the aix ld manual.
+AC_DEFUN([_LT_AC_SYS_LIBPATH_AIX],
+[AC_LINK_IFELSE(AC_LANG_PROGRAM,[
+aix_libpath=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\(.*\)$/\1/; p; }
+}'`
+# Check for a 64-bit object if we didn't find anything.
+if test -z "$aix_libpath"; then aix_libpath=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\(.*\)$/\1/; p; }
+}'`; fi],[])
+if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
+])# _LT_AC_SYS_LIBPATH_AIX
+
+
+# _LT_AC_SHELL_INIT(ARG)
+# ----------------------
+AC_DEFUN([_LT_AC_SHELL_INIT],
+[ifdef([AC_DIVERSION_NOTICE],
+	     [AC_DIVERT_PUSH(AC_DIVERSION_NOTICE)],
+	 [AC_DIVERT_PUSH(NOTICE)])
+$1
+AC_DIVERT_POP
+])# _LT_AC_SHELL_INIT
+
+
+# _LT_AC_PROG_ECHO_BACKSLASH
+# --------------------------
+# Add some code to the start of the generated configure script which
+# will find an echo command which doesn't interpret backslashes.
+AC_DEFUN([_LT_AC_PROG_ECHO_BACKSLASH],
+[_LT_AC_SHELL_INIT([
+# Check that we are running under the correct shell.
+SHELL=${CONFIG_SHELL-/bin/sh}
+
+case X$ECHO in
+X*--fallback-echo)
+  # Remove one level of quotation (which was required for Make).
+  ECHO=`echo "$ECHO" | sed 's,\\\\\[$]\\[$]0,'[$]0','`
+  ;;
+esac
+
+echo=${ECHO-echo}
+if test "X[$]1" = X--no-reexec; then
+  # Discard the --no-reexec flag, and continue.
+  shift
+elif test "X[$]1" = X--fallback-echo; then
+  # Avoid inline document here, it may be left over
+  :
+elif test "X`($echo '\t') 2>/dev/null`" = 'X\t' ; then
+  # Yippee, $echo works!
+  :
+else
+  # Restart under the correct shell.
+  exec $SHELL "[$]0" --no-reexec ${1+"[$]@"}
+fi
+
+if test "X[$]1" = X--fallback-echo; then
+  # used as fallback echo
+  shift
+  cat <<EOF
+[$]*
+EOF
+  exit 0
+fi
+
+# The HP-UX ksh and POSIX shell print the target directory to stdout
+# if CDPATH is set.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+if test -z "$ECHO"; then
+if test "X${echo_test_string+set}" != Xset; then
+# find a string as large as possible, as long as the shell can cope with it
+  for cmd in 'sed 50q "[$]0"' 'sed 20q "[$]0"' 'sed 10q "[$]0"' 'sed 2q "[$]0"' 'echo test'; do
+    # expected sizes: less than 2Kb, 1Kb, 512 bytes, 16 bytes, ...
+    if (echo_test_string=`eval $cmd`) 2>/dev/null &&
+       echo_test_string=`eval $cmd` &&
+       (test "X$echo_test_string" = "X$echo_test_string") 2>/dev/null
+    then
+      break
+    fi
+  done
+fi
+
+if test "X`($echo '\t') 2>/dev/null`" = 'X\t' &&
+   echo_testing_string=`($echo "$echo_test_string") 2>/dev/null` &&
+   test "X$echo_testing_string" = "X$echo_test_string"; then
+  :
+else
+  # The Solaris, AIX, and Digital Unix default echo programs unquote
+  # backslashes.  This makes it impossible to quote backslashes using
+  #   echo "$something" | sed 's/\\/\\\\/g'
+  #
+  # So, first we look for a working echo in the user's PATH.
+
+  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+  for dir in $PATH /usr/ucb; do
+    IFS="$lt_save_ifs"
+    if (test -f $dir/echo || test -f $dir/echo$ac_exeext) &&
+       test "X`($dir/echo '\t') 2>/dev/null`" = 'X\t' &&
+       echo_testing_string=`($dir/echo "$echo_test_string") 2>/dev/null` &&
+       test "X$echo_testing_string" = "X$echo_test_string"; then
+      echo="$dir/echo"
+      break
+    fi
+  done
+  IFS="$lt_save_ifs"
+
+  if test "X$echo" = Xecho; then
+    # We didn't find a better echo, so look for alternatives.
+    if test "X`(print -r '\t') 2>/dev/null`" = 'X\t' &&
+       echo_testing_string=`(print -r "$echo_test_string") 2>/dev/null` &&
+       test "X$echo_testing_string" = "X$echo_test_string"; then
+      # This shell has a builtin print -r that does the trick.
+      echo='print -r'
+    elif (test -f /bin/ksh || test -f /bin/ksh$ac_exeext) &&
+	 test "X$CONFIG_SHELL" != X/bin/ksh; then
+      # If we have ksh, try running configure again with it.
+      ORIGINAL_CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}
+      export ORIGINAL_CONFIG_SHELL
+      CONFIG_SHELL=/bin/ksh
+      export CONFIG_SHELL
+      exec $CONFIG_SHELL "[$]0" --no-reexec ${1+"[$]@"}
+    else
+      # Try using printf.
+      echo='printf %s\n'
+      if test "X`($echo '\t') 2>/dev/null`" = 'X\t' &&
+	 echo_testing_string=`($echo "$echo_test_string") 2>/dev/null` &&
+	 test "X$echo_testing_string" = "X$echo_test_string"; then
+	# Cool, printf works
+	:
+      elif echo_testing_string=`($ORIGINAL_CONFIG_SHELL "[$]0" --fallback-echo '\t') 2>/dev/null` &&
+	   test "X$echo_testing_string" = 'X\t' &&
+	   echo_testing_string=`($ORIGINAL_CONFIG_SHELL "[$]0" --fallback-echo "$echo_test_string") 2>/dev/null` &&
+	   test "X$echo_testing_string" = "X$echo_test_string"; then
+	CONFIG_SHELL=$ORIGINAL_CONFIG_SHELL
+	export CONFIG_SHELL
+	SHELL="$CONFIG_SHELL"
+	export SHELL
+	echo="$CONFIG_SHELL [$]0 --fallback-echo"
+      elif echo_testing_string=`($CONFIG_SHELL "[$]0" --fallback-echo '\t') 2>/dev/null` &&
+	   test "X$echo_testing_string" = 'X\t' &&
+	   echo_testing_string=`($CONFIG_SHELL "[$]0" --fallback-echo "$echo_test_string") 2>/dev/null` &&
+	   test "X$echo_testing_string" = "X$echo_test_string"; then
+	echo="$CONFIG_SHELL [$]0 --fallback-echo"
+      else
+	# maybe with a smaller string...
+	prev=:
+
+	for cmd in 'echo test' 'sed 2q "[$]0"' 'sed 10q "[$]0"' 'sed 20q "[$]0"' 'sed 50q "[$]0"'; do
+	  if (test "X$echo_test_string" = "X`eval $cmd`") 2>/dev/null
+	  then
+	    break
+	  fi
+	  prev="$cmd"
+	done
+
+	if test "$prev" != 'sed 50q "[$]0"'; then
+	  echo_test_string=`eval $prev`
+	  export echo_test_string
+	  exec ${ORIGINAL_CONFIG_SHELL-${CONFIG_SHELL-/bin/sh}} "[$]0" ${1+"[$]@"}
+	else
+	  # Oops.  We lost completely, so just stick with echo.
+	  echo=echo
+	fi
+      fi
+    fi
+  fi
+fi
+fi
+
+# Copy echo and quote the copy suitably for passing to libtool from
+# the Makefile, instead of quoting the original, which is used later.
+ECHO=$echo
+if test "X$ECHO" = "X$CONFIG_SHELL [$]0 --fallback-echo"; then
+   ECHO="$CONFIG_SHELL \\\$\[$]0 --fallback-echo"
+fi
+
+AC_SUBST(ECHO)
+])])# _LT_AC_PROG_ECHO_BACKSLASH
+
+
+# _LT_AC_LOCK
+# -----------
+AC_DEFUN([_LT_AC_LOCK],
+[AC_ARG_ENABLE([libtool-lock],
+    [AC_HELP_STRING([--disable-libtool-lock],
+	[avoid locking (might break parallel builds)])])
+test "x$enable_libtool_lock" != xno && enable_libtool_lock=yes
+
+# Some flags need to be propagated to the compiler or linker for good
+# libtool support.
+case $host in
+ia64-*-hpux*)
+  # Find out which ABI we are using.
+  echo 'int i;' > conftest.$ac_ext
+  if AC_TRY_EVAL(ac_compile); then
+    case `/usr/bin/file conftest.$ac_objext` in
+    *ELF-32*)
+      HPUX_IA64_MODE="32"
+      ;;
+    *ELF-64*)
+      HPUX_IA64_MODE="64"
+      ;;
+    esac
+  fi
+  rm -rf conftest*
+  ;;
+*-*-irix6*)
+  # Find out which ABI we are using.
+  echo '[#]line __oline__ "configure"' > conftest.$ac_ext
+  if AC_TRY_EVAL(ac_compile); then
+   if test "$lt_cv_prog_gnu_ld" = yes; then
+    case `/usr/bin/file conftest.$ac_objext` in
+    *32-bit*)
+      LD="${LD-ld} -melf32bsmip"
+      ;;
+    *N32*)
+      LD="${LD-ld} -melf32bmipn32"
+      ;;
+    *64-bit*)
+      LD="${LD-ld} -melf64bmip"
+      ;;
+    esac
+   else
+    case `/usr/bin/file conftest.$ac_objext` in
+    *32-bit*)
+      LD="${LD-ld} -32"
+      ;;
+    *N32*)
+      LD="${LD-ld} -n32"
+      ;;
+    *64-bit*)
+      LD="${LD-ld} -64"
+      ;;
+    esac
+   fi
+  fi
+  rm -rf conftest*
+  ;;
+
+x86_64-*linux*|ppc*-*linux*|powerpc*-*linux*|s390*-*linux*|sparc*-*linux*)
+  # Find out which ABI we are using.
+  echo 'int i;' > conftest.$ac_ext
+  if AC_TRY_EVAL(ac_compile); then
+    case `/usr/bin/file conftest.o` in
+    *32-bit*)
+      case $host in
+        x86_64-*linux*)
+          LD="${LD-ld} -m elf_i386"
+          ;;
+        ppc64-*linux*|powerpc64-*linux*)
+          LD="${LD-ld} -m elf32ppclinux"
+          ;;
+        s390x-*linux*)
+          LD="${LD-ld} -m elf_s390"
+          ;;
+        sparc64-*linux*)
+          LD="${LD-ld} -m elf32_sparc"
+          ;;
+      esac
+      ;;
+    *64-bit*)
+      case $host in
+        x86_64-*linux*)
+          LD="${LD-ld} -m elf_x86_64"
+          ;;
+        ppc*-*linux*|powerpc*-*linux*)
+          LD="${LD-ld} -m elf64ppc"
+          ;;
+        s390*-*linux*)
+          LD="${LD-ld} -m elf64_s390"
+          ;;
+        sparc*-*linux*)
+          LD="${LD-ld} -m elf64_sparc"
+          ;;
+      esac
+      ;;
+    esac
+  fi
+  rm -rf conftest*
+  ;;
+
+*-*-sco3.2v5*)
+  # On SCO OpenServer 5, we need -belf to get full-featured binaries.
+  SAVE_CFLAGS="$CFLAGS"
+  CFLAGS="$CFLAGS -belf"
+  AC_CACHE_CHECK([whether the C compiler needs -belf], lt_cv_cc_needs_belf,
+    [AC_LANG_PUSH(C)
+     AC_TRY_LINK([],[],[lt_cv_cc_needs_belf=yes],[lt_cv_cc_needs_belf=no])
+     AC_LANG_POP])
+  if test x"$lt_cv_cc_needs_belf" != x"yes"; then
+    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf
+    CFLAGS="$SAVE_CFLAGS"
+  fi
+  ;;
+sparc*-*solaris*)
+  # Find out which ABI we are using.
+  echo 'int i;' > conftest.$ac_ext
+  if AC_TRY_EVAL(ac_compile); then
+    case `/usr/bin/file conftest.o` in
+    *64-bit*)
+      case $lt_cv_prog_gnu_ld in
+      yes*) LD="${LD-ld} -m elf64_sparc" ;;
+      *)    LD="${LD-ld} -64" ;;
+      esac
+      ;;
+    esac
+  fi
+  rm -rf conftest*
+  ;;
+
+AC_PROVIDE_IFELSE([AC_LIBTOOL_WIN32_DLL],
+[*-*-cygwin* | *-*-mingw* | *-*-pw32*)
+  AC_CHECK_TOOL(DLLTOOL, dlltool, false)
+  AC_CHECK_TOOL(AS, as, false)
+  AC_CHECK_TOOL(OBJDUMP, objdump, false)
+  ;;
+  ])
+esac
+
+need_locks="$enable_libtool_lock"
+
+])# _LT_AC_LOCK
+
+
+# AC_LIBTOOL_COMPILER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,
+#		[OUTPUT-FILE], [ACTION-SUCCESS], [ACTION-FAILURE])
+# ----------------------------------------------------------------
+# Check whether the given compiler option works
+AC_DEFUN([AC_LIBTOOL_COMPILER_OPTION],
+[AC_REQUIRE([LT_AC_PROG_SED])
+AC_CACHE_CHECK([$1], [$2],
+  [$2=no
+  ifelse([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])
+   printf "$lt_simple_compile_test_code" > conftest.$ac_ext
+   lt_compiler_flag="$3"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   # The option is referenced via a variable to avoid confusing sed.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [[^ ]]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:__oline__: $lt_compile\"" >&AS_MESSAGE_LOG_FD)
+   (eval "$lt_compile" 2>conftest.err)
+   ac_status=$?
+   cat conftest.err >&AS_MESSAGE_LOG_FD
+   echo "$as_me:__oline__: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
+   if (exit $ac_status) && test -s "$ac_outfile"; then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings other than the usual output.
+     $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
+     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
+     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
+       $2=yes
+     fi
+   fi
+   $rm conftest*
+])
+
+if test x"[$]$2" = xyes; then
+    ifelse([$5], , :, [$5])
+else
+    ifelse([$6], , :, [$6])
+fi
+])# AC_LIBTOOL_COMPILER_OPTION
+
+
+# AC_LIBTOOL_LINKER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,
+#                          [ACTION-SUCCESS], [ACTION-FAILURE])
+# ------------------------------------------------------------
+# Check whether the given compiler option works
+AC_DEFUN([AC_LIBTOOL_LINKER_OPTION],
+[AC_CACHE_CHECK([$1], [$2],
+  [$2=no
+   save_LDFLAGS="$LDFLAGS"
+   LDFLAGS="$LDFLAGS $3"
+   printf "$lt_simple_link_test_code" > conftest.$ac_ext
+   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
+     # The linker can only warn and ignore the option if not recognized
+     # So say no if there are warnings
+     if test -s conftest.err; then
+       # Append any errors to the config.log.
+       cat conftest.err 1>&AS_MESSAGE_LOG_FD
+       $echo "X$_lt_linker_boilerplate" | $Xsed -e '/^$/d' > conftest.exp
+       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
+       if diff conftest.exp conftest.er2 >/dev/null; then
+         $2=yes
+       fi
+     else
+       $2=yes
+     fi
+   fi
+   $rm conftest*
+   LDFLAGS="$save_LDFLAGS"
+])
+
+if test x"[$]$2" = xyes; then
+    ifelse([$4], , :, [$4])
+else
+    ifelse([$5], , :, [$5])
+fi
+])# AC_LIBTOOL_LINKER_OPTION
+
+
+# AC_LIBTOOL_SYS_MAX_CMD_LEN
+# --------------------------
+AC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN],
+[# find the maximum length of command line arguments
+AC_MSG_CHECKING([the maximum length of command line arguments])
+AC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl
+  i=0
+  teststring="ABCD"
+
+  case $build_os in
+  msdosdjgpp*)
+    # On DJGPP, this test can blow up pretty badly due to problems in libc
+    # (any single argument exceeding 2000 bytes causes a buffer overrun
+    # during glob expansion).  Even if it were fixed, the result of this
+    # check would be larger than it should be.
+    lt_cv_sys_max_cmd_len=12288;    # 12K is about right
+    ;;
+
+  gnu*)
+    # Under GNU Hurd, this test is not required because there is
+    # no limit to the length of command line arguments.
+    # Libtool will interpret -1 as no limit whatsoever
+    lt_cv_sys_max_cmd_len=-1;
+    ;;
+
+  cygwin* | mingw*)
+    # On Win9x/ME, this test blows up -- it succeeds, but takes
+    # about 5 minutes as the teststring grows exponentially.
+    # Worse, since 9x/ME are not pre-emptively multitasking,
+    # you end up with a "frozen" computer, even though with patience
+    # the test eventually succeeds (with a max line length of 256k).
+    # Instead, let's just punt: use the minimum linelength reported by
+    # all of the supported platforms: 8192 (on NT/2K/XP).
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
+  amigaos*)
+    # On AmigaOS with pdksh, this test takes hours, literally.
+    # So we just punt and use a minimum line length of 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
+  netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)
+    # This has been around since 386BSD, at least.  Likely further.
+    if test -x /sbin/sysctl; then
+      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`
+    elif test -x /usr/sbin/sysctl; then
+      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`
+    else
+      lt_cv_sys_max_cmd_len=65536	# usable default for all BSDs
+    fi
+    # And add a safety zone
+    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
+    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
+    ;;
+
+  interix*)
+    # We know the value 262144 and hardcode it with a safety zone (like BSD)
+    lt_cv_sys_max_cmd_len=196608
+    ;;
+
+  osf*)
+    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure
+    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not
+    # nice to cause kernel panics so lets avoid the loop below.
+    # First set a reasonable default.
+    lt_cv_sys_max_cmd_len=16384
+    #
+    if test -x /sbin/sysconfig; then
+      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in
+        *1*) lt_cv_sys_max_cmd_len=-1 ;;
+      esac
+    fi
+    ;;
+  sco3.2v5*)
+    lt_cv_sys_max_cmd_len=102400
+    ;;
+  sysv5* | sco5v6* | sysv4.2uw2*)
+    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`
+    if test -n "$kargmax"; then
+      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[[ 	]]//'`
+    else
+      lt_cv_sys_max_cmd_len=32768
+    fi
+    ;;
+  *)
+    # If test is not a shell built-in, we'll probably end up computing a
+    # maximum length that is only half of the actual maximum length, but
+    # we can't tell.
+    SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}
+    while (test "X"`$SHELL [$]0 --fallback-echo "X$teststring" 2>/dev/null` \
+	       = "XX$teststring") >/dev/null 2>&1 &&
+	    new_result=`expr "X$teststring" : ".*" 2>&1` &&
+	    lt_cv_sys_max_cmd_len=$new_result &&
+	    test $i != 17 # 1/2 MB should be enough
+    do
+      i=`expr $i + 1`
+      teststring=$teststring$teststring
+    done
+    teststring=
+    # Add a significant safety factor because C++ compilers can tack on massive
+    # amounts of additional arguments before passing them to the linker.
+    # It appears as though 1/2 is a usable value.
+    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 2`
+    ;;
+  esac
+])
+if test -n $lt_cv_sys_max_cmd_len ; then
+  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)
+else
+  AC_MSG_RESULT(none)
+fi
+])# AC_LIBTOOL_SYS_MAX_CMD_LEN
+
+
+# _LT_AC_CHECK_DLFCN
+# ------------------
+AC_DEFUN([_LT_AC_CHECK_DLFCN],
+[AC_CHECK_HEADERS(dlfcn.h)dnl
+])# _LT_AC_CHECK_DLFCN
+
+
+# _LT_AC_TRY_DLOPEN_SELF (ACTION-IF-TRUE, ACTION-IF-TRUE-W-USCORE,
+#                           ACTION-IF-FALSE, ACTION-IF-CROSS-COMPILING)
+# ---------------------------------------------------------------------
+AC_DEFUN([_LT_AC_TRY_DLOPEN_SELF],
+[AC_REQUIRE([_LT_AC_CHECK_DLFCN])dnl
+if test "$cross_compiling" = yes; then :
+  [$4]
+else
+  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
+  lt_status=$lt_dlunknown
+  cat > conftest.$ac_ext <<EOF
+[#line __oline__ "configure"
+#include "confdefs.h"
+
+#if HAVE_DLFCN_H
+#include <dlfcn.h>
+#endif
+
+#include <stdio.h>
+
+#ifdef RTLD_GLOBAL
+#  define LT_DLGLOBAL		RTLD_GLOBAL
+#else
+#  ifdef DL_GLOBAL
+#    define LT_DLGLOBAL		DL_GLOBAL
+#  else
+#    define LT_DLGLOBAL		0
+#  endif
+#endif
+
+/* We may have to define LT_DLLAZY_OR_NOW in the command line if we
+   find out it does not work in some platform. */
+#ifndef LT_DLLAZY_OR_NOW
+#  ifdef RTLD_LAZY
+#    define LT_DLLAZY_OR_NOW		RTLD_LAZY
+#  else
+#    ifdef DL_LAZY
+#      define LT_DLLAZY_OR_NOW		DL_LAZY
+#    else
+#      ifdef RTLD_NOW
+#        define LT_DLLAZY_OR_NOW	RTLD_NOW
+#      else
+#        ifdef DL_NOW
+#          define LT_DLLAZY_OR_NOW	DL_NOW
+#        else
+#          define LT_DLLAZY_OR_NOW	0
+#        endif
+#      endif
+#    endif
+#  endif
+#endif
+
+#ifdef __cplusplus
+extern "C" void exit (int);
+#endif
+
+void fnord() { int i=42;}
+int main ()
+{
+  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);
+  int status = $lt_dlunknown;
+
+  if (self)
+    {
+      if (dlsym (self,"fnord"))       status = $lt_dlno_uscore;
+      else if (dlsym( self,"_fnord")) status = $lt_dlneed_uscore;
+      /* dlclose (self); */
+    }
+  else
+    puts (dlerror ());
+
+    exit (status);
+}]
+EOF
+  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext} 2>/dev/null; then
+    (./conftest; exit; ) >&AS_MESSAGE_LOG_FD 2>/dev/null
+    lt_status=$?
+    case x$lt_status in
+      x$lt_dlno_uscore) $1 ;;
+      x$lt_dlneed_uscore) $2 ;;
+      x$lt_dlunknown|x*) $3 ;;
+    esac
+  else :
+    # compilation failed
+    $3
+  fi
+fi
+rm -fr conftest*
+])# _LT_AC_TRY_DLOPEN_SELF
+
+
+# AC_LIBTOOL_DLOPEN_SELF
+# ----------------------
+AC_DEFUN([AC_LIBTOOL_DLOPEN_SELF],
+[AC_REQUIRE([_LT_AC_CHECK_DLFCN])dnl
+if test "x$enable_dlopen" != xyes; then
+  enable_dlopen=unknown
+  enable_dlopen_self=unknown
+  enable_dlopen_self_static=unknown
+else
+  lt_cv_dlopen=no
+  lt_cv_dlopen_libs=
+
+  case $host_os in
+  beos*)
+    lt_cv_dlopen="load_add_on"
+    lt_cv_dlopen_libs=
+    lt_cv_dlopen_self=yes
+    ;;
+
+  mingw* | pw32*)
+    lt_cv_dlopen="LoadLibrary"
+    lt_cv_dlopen_libs=
+   ;;
+
+  cygwin*)
+    lt_cv_dlopen="dlopen"
+    lt_cv_dlopen_libs=
+   ;;
+
+  darwin*)
+  # if libdl is installed we need to link against it
+    AC_CHECK_LIB([dl], [dlopen],
+		[lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"],[
+    lt_cv_dlopen="dyld"
+    lt_cv_dlopen_libs=
+    lt_cv_dlopen_self=yes
+    ])
+   ;;
+
+  *)
+    AC_CHECK_FUNC([shl_load],
+	  [lt_cv_dlopen="shl_load"],
+      [AC_CHECK_LIB([dld], [shl_load],
+	    [lt_cv_dlopen="shl_load" lt_cv_dlopen_libs="-dld"],
+	[AC_CHECK_FUNC([dlopen],
+	      [lt_cv_dlopen="dlopen"],
+	  [AC_CHECK_LIB([dl], [dlopen],
+		[lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"],
+	    [AC_CHECK_LIB([svld], [dlopen],
+		  [lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-lsvld"],
+	      [AC_CHECK_LIB([dld], [dld_link],
+		    [lt_cv_dlopen="dld_link" lt_cv_dlopen_libs="-dld"])
+	      ])
+	    ])
+	  ])
+	])
+      ])
+    ;;
+  esac
+
+  if test "x$lt_cv_dlopen" != xno; then
+    enable_dlopen=yes
+  else
+    enable_dlopen=no
+  fi
+
+  case $lt_cv_dlopen in
+  dlopen)
+    save_CPPFLAGS="$CPPFLAGS"
+    test "x$ac_cv_header_dlfcn_h" = xyes && CPPFLAGS="$CPPFLAGS -DHAVE_DLFCN_H"
+
+    save_LDFLAGS="$LDFLAGS"
+    wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $export_dynamic_flag_spec\"
+
+    save_LIBS="$LIBS"
+    LIBS="$lt_cv_dlopen_libs $LIBS"
+
+    AC_CACHE_CHECK([whether a program can dlopen itself],
+	  lt_cv_dlopen_self, [dnl
+	  _LT_AC_TRY_DLOPEN_SELF(
+	    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,
+	    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)
+    ])
+
+    if test "x$lt_cv_dlopen_self" = xyes; then
+      wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $lt_prog_compiler_static\"
+      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],
+    	  lt_cv_dlopen_self_static, [dnl
+	  _LT_AC_TRY_DLOPEN_SELF(
+	    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,
+	    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)
+      ])
+    fi
+
+    CPPFLAGS="$save_CPPFLAGS"
+    LDFLAGS="$save_LDFLAGS"
+    LIBS="$save_LIBS"
+    ;;
+  esac
+
+  case $lt_cv_dlopen_self in
+  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;
+  *) enable_dlopen_self=unknown ;;
+  esac
+
+  case $lt_cv_dlopen_self_static in
+  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;
+  *) enable_dlopen_self_static=unknown ;;
+  esac
+fi
+])# AC_LIBTOOL_DLOPEN_SELF
+
+
+# AC_LIBTOOL_PROG_CC_C_O([TAGNAME])
+# ---------------------------------
+# Check to see if options -c and -o are simultaneously supported by compiler
+AC_DEFUN([AC_LIBTOOL_PROG_CC_C_O],
+[AC_REQUIRE([_LT_AC_SYS_COMPILER])dnl
+AC_CACHE_CHECK([if $compiler supports -c -o file.$ac_objext],
+  [_LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)],
+  [_LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)=no
+   $rm -r conftest 2>/dev/null
+   mkdir conftest
+   cd conftest
+   mkdir out
+   printf "$lt_simple_compile_test_code" > conftest.$ac_ext
+
+   lt_compiler_flag="-o out/conftest2.$ac_objext"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [[^ ]]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:__oline__: $lt_compile\"" >&AS_MESSAGE_LOG_FD)
+   (eval "$lt_compile" 2>out/conftest.err)
+   ac_status=$?
+   cat out/conftest.err >&AS_MESSAGE_LOG_FD
+   echo "$as_me:__oline__: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
+   if (exit $ac_status) && test -s out/conftest2.$ac_objext
+   then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings
+     $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' > out/conftest.exp
+     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
+     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then
+       _LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes
+     fi
+   fi
+   chmod u+w . 2>&AS_MESSAGE_LOG_FD
+   $rm conftest*
+   # SGI C++ compiler will create directory out/ii_files/ for
+   # template instantiation
+   test -d out/ii_files && $rm out/ii_files/* && rmdir out/ii_files
+   $rm out/* && rmdir out
+   cd ..
+   rmdir conftest
+   $rm conftest*
+])
+])# AC_LIBTOOL_PROG_CC_C_O
+
+
+# AC_LIBTOOL_SYS_HARD_LINK_LOCKS([TAGNAME])
+# -----------------------------------------
+# Check to see if we can do hard links to lock some files if needed
+AC_DEFUN([AC_LIBTOOL_SYS_HARD_LINK_LOCKS],
+[AC_REQUIRE([_LT_AC_LOCK])dnl
+
+hard_links="nottested"
+if test "$_LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)" = no && test "$need_locks" != no; then
+  # do not overwrite the value of need_locks provided by the user
+  AC_MSG_CHECKING([if we can lock with hard links])
+  hard_links=yes
+  $rm conftest*
+  ln conftest.a conftest.b 2>/dev/null && hard_links=no
+  touch conftest.a
+  ln conftest.a conftest.b 2>&5 || hard_links=no
+  ln conftest.a conftest.b 2>/dev/null && hard_links=no
+  AC_MSG_RESULT([$hard_links])
+  if test "$hard_links" = no; then
+    AC_MSG_WARN([`$CC' does not support `-c -o', so `make -j' may be unsafe])
+    need_locks=warn
+  fi
+else
+  need_locks=no
+fi
+])# AC_LIBTOOL_SYS_HARD_LINK_LOCKS
+
+
+# AC_LIBTOOL_OBJDIR
+# -----------------
+AC_DEFUN([AC_LIBTOOL_OBJDIR],
+[AC_CACHE_CHECK([for objdir], [lt_cv_objdir],
+[rm -f .libs 2>/dev/null
+mkdir .libs 2>/dev/null
+if test -d .libs; then
+  lt_cv_objdir=.libs
+else
+  # MS-DOS does not allow filenames that begin with a dot.
+  lt_cv_objdir=_libs
+fi
+rmdir .libs 2>/dev/null])
+objdir=$lt_cv_objdir
+])# AC_LIBTOOL_OBJDIR
+
+
+# AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH([TAGNAME])
+# ----------------------------------------------
+# Check hardcoding attributes.
+AC_DEFUN([AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH],
+[AC_MSG_CHECKING([how to hardcode library paths into programs])
+_LT_AC_TAGVAR(hardcode_action, $1)=
+if test -n "$_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)" || \
+   test -n "$_LT_AC_TAGVAR(runpath_var, $1)" || \
+   test "X$_LT_AC_TAGVAR(hardcode_automatic, $1)" = "Xyes" ; then
+
+  # We can hardcode non-existant directories.
+  if test "$_LT_AC_TAGVAR(hardcode_direct, $1)" != no &&
+     # If the only mechanism to avoid hardcoding is shlibpath_var, we
+     # have to relink, otherwise we might link with an installed library
+     # when we should be linking with a yet-to-be-installed one
+     ## test "$_LT_AC_TAGVAR(hardcode_shlibpath_var, $1)" != no &&
+     test "$_LT_AC_TAGVAR(hardcode_minus_L, $1)" != no; then
+    # Linking always hardcodes the temporary library directory.
+    _LT_AC_TAGVAR(hardcode_action, $1)=relink
+  else
+    # We can link without hardcoding, and we can hardcode nonexisting dirs.
+    _LT_AC_TAGVAR(hardcode_action, $1)=immediate
+  fi
+else
+  # We cannot hardcode anything, or else we can only hardcode existing
+  # directories.
+  _LT_AC_TAGVAR(hardcode_action, $1)=unsupported
+fi
+AC_MSG_RESULT([$_LT_AC_TAGVAR(hardcode_action, $1)])
+
+if test "$_LT_AC_TAGVAR(hardcode_action, $1)" = relink; then
+  # Fast installation is not supported
+  enable_fast_install=no
+elif test "$shlibpath_overrides_runpath" = yes ||
+     test "$enable_shared" = no; then
+  # Fast installation is not necessary
+  enable_fast_install=needless
+fi
+])# AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH
+
+
+# AC_LIBTOOL_SYS_LIB_STRIP
+# ------------------------
+AC_DEFUN([AC_LIBTOOL_SYS_LIB_STRIP],
+[striplib=
+old_striplib=
+AC_MSG_CHECKING([whether stripping libraries is possible])
+if test -n "$STRIP" && $STRIP -V 2>&1 | grep "GNU strip" >/dev/null; then
+  test -z "$old_striplib" && old_striplib="$STRIP --strip-debug"
+  test -z "$striplib" && striplib="$STRIP --strip-unneeded"
+  AC_MSG_RESULT([yes])
+else
+# FIXME - insert some real tests, host_os isn't really good enough
+  case $host_os in
+   darwin*)
+       if test -n "$STRIP" ; then
+         striplib="$STRIP -x"
+         AC_MSG_RESULT([yes])
+       else
+  AC_MSG_RESULT([no])
+fi
+       ;;
+   *)
+  AC_MSG_RESULT([no])
+    ;;
+  esac
+fi
+])# AC_LIBTOOL_SYS_LIB_STRIP
+
+
+# AC_LIBTOOL_SYS_DYNAMIC_LINKER
+# -----------------------------
+# PORTME Fill in your ld.so characteristics
+AC_DEFUN([AC_LIBTOOL_SYS_DYNAMIC_LINKER],
+[AC_MSG_CHECKING([dynamic linker characteristics])
+library_names_spec=
+libname_spec='lib$name'
+soname_spec=
+shrext_cmds=".so"
+postinstall_cmds=
+postuninstall_cmds=
+finish_cmds=
+finish_eval=
+shlibpath_var=
+shlibpath_overrides_runpath=unknown
+version_type=none
+dynamic_linker="$host_os ld.so"
+sys_lib_dlsearch_path_spec="/lib /usr/lib"
+if test "$GCC" = yes; then
+  sys_lib_search_path_spec=`$CC -print-search-dirs | grep "^libraries:" | $SED -e "s/^libraries://" -e "s,=/,/,g"`
+  if echo "$sys_lib_search_path_spec" | grep ';' >/dev/null ; then
+    # if the path contains ";" then we assume it to be the separator
+    # otherwise default to the standard path separator (i.e. ":") - it is
+    # assumed that no part of a normal pathname contains ";" but that should
+    # okay in the real world where ";" in dirpaths is itself problematic.
+    sys_lib_search_path_spec=`echo "$sys_lib_search_path_spec" | $SED -e 's/;/ /g'`
+  else
+    sys_lib_search_path_spec=`echo "$sys_lib_search_path_spec" | $SED  -e "s/$PATH_SEPARATOR/ /g"`
+  fi
+else
+  sys_lib_search_path_spec="/lib /usr/lib /usr/local/lib"
+fi
+need_lib_prefix=unknown
+hardcode_into_libs=no
+
+# when you set need_version to no, make sure it does not cause -set_version
+# flags to be left without arguments
+need_version=unknown
+
+case $host_os in
+aix3*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix $libname.a'
+  shlibpath_var=LIBPATH
+
+  # AIX 3 has no versioning support, so we append a major version to the name.
+  soname_spec='${libname}${release}${shared_ext}$major'
+  ;;
+
+aix4* | aix5*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  hardcode_into_libs=yes
+  if test "$host_cpu" = ia64; then
+    # AIX 5 supports IA64
+    library_names_spec='${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext}$versuffix $libname${shared_ext}'
+    shlibpath_var=LD_LIBRARY_PATH
+  else
+    # With GCC up to 2.95.x, collect2 would create an import file
+    # for dependence libraries.  The import file would start with
+    # the line `#! .'.  This would cause the generated library to
+    # depend on `.', always an invalid library.  This was fixed in
+    # development snapshots of GCC prior to 3.0.
+    case $host_os in
+      aix4 | aix4.[[01]] | aix4.[[01]].*)
+      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'
+	   echo ' yes '
+	   echo '#endif'; } | ${CC} -E - | grep yes > /dev/null; then
+	:
+      else
+	can_build_shared=no
+      fi
+      ;;
+    esac
+    # AIX (on Power*) has no versioning support, so currently we can not hardcode correct
+    # soname into executable. Probably we can add versioning support to
+    # collect2, so additional links can be useful in future.
+    if test "$aix_use_runtimelinking" = yes; then
+      # If using run time linking (on AIX 4.2 or later) use lib<name>.so
+      # instead of lib<name>.a to let people know that these are not
+      # typical AIX shared libraries.
+      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    else
+      # We preserve .a as extension for shared libraries through AIX4.2
+      # and later when we are not doing run time linking.
+      library_names_spec='${libname}${release}.a $libname.a'
+      soname_spec='${libname}${release}${shared_ext}$major'
+    fi
+    shlibpath_var=LIBPATH
+  fi
+  ;;
+
+amigaos*)
+  library_names_spec='$libname.ixlibrary $libname.a'
+  # Create ${libname}_ixlibrary.a entries in /sys/libs.
+  finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`$echo "X$lib" | $Xsed -e '\''s%^.*/\([[^/]]*\)\.ixlibrary$%\1%'\''`; test $rm /sys/libs/${libname}_ixlibrary.a; $show "cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'
+  ;;
+
+beos*)
+  library_names_spec='${libname}${shared_ext}'
+  dynamic_linker="$host_os ld.so"
+  shlibpath_var=LIBRARY_PATH
+  ;;
+
+bsdi[[45]]*)
+  version_type=linux
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  sys_lib_search_path_spec="/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib"
+  sys_lib_dlsearch_path_spec="/shlib /usr/lib /usr/local/lib"
+  # the default ld.so.conf also contains /usr/contrib/lib and
+  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow
+  # libtool to hard-code these into programs
+  ;;
+
+cygwin* | mingw* | pw32*)
+  version_type=windows
+  shrext_cmds=".dll"
+  need_version=no
+  need_lib_prefix=no
+
+  case $GCC,$host_os in
+  yes,cygwin* | yes,mingw* | yes,pw32*)
+    library_names_spec='$libname.dll.a'
+    # DLL is installed to $(libdir)/../bin by postinstall_cmds
+    postinstall_cmds='base_file=`basename \${file}`~
+      dlpath=`$SHELL 2>&1 -c '\''. $dir/'\''\${base_file}'\''i;echo \$dlname'\''`~
+      dldir=$destdir/`dirname \$dlpath`~
+      test -d \$dldir || mkdir -p \$dldir~
+      $install_prog $dir/$dlname \$dldir/$dlname~
+      chmod a+x \$dldir/$dlname'
+    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\''. $file; echo \$dlname'\''`~
+      dlpath=$dir/\$dldll~
+       $rm \$dlpath'
+    shlibpath_overrides_runpath=yes
+
+    case $host_os in
+    cygwin*)
+      # Cygwin DLLs use 'cyg' prefix rather than 'lib'
+      soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'
+      sys_lib_search_path_spec="/usr/lib /lib/w32api /lib /usr/local/lib"
+      ;;
+    mingw*)
+      # MinGW DLLs use traditional 'lib' prefix
+      soname_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'
+      sys_lib_search_path_spec=`$CC -print-search-dirs | grep "^libraries:" | $SED -e "s/^libraries://" -e "s,=/,/,g"`
+      if echo "$sys_lib_search_path_spec" | [grep ';[c-zC-Z]:/' >/dev/null]; then
+        # It is most probably a Windows format PATH printed by
+        # mingw gcc, but we are running on Cygwin. Gcc prints its search
+        # path with ; separators, and with drive letters. We can handle the
+        # drive letters (cygwin fileutils understands them), so leave them,
+        # especially as we might pass files found there to a mingw objdump,
+        # which wouldn't understand a cygwinified path. Ahh.
+        sys_lib_search_path_spec=`echo "$sys_lib_search_path_spec" | $SED -e 's/;/ /g'`
+      else
+        sys_lib_search_path_spec=`echo "$sys_lib_search_path_spec" | $SED  -e "s/$PATH_SEPARATOR/ /g"`
+      fi
+      ;;
+    pw32*)
+      # pw32 DLLs use 'pw' prefix rather than 'lib'
+      library_names_spec='`echo ${libname} | sed -e 's/^lib/pw/'``echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'
+      ;;
+    esac
+    ;;
+
+  *)
+    library_names_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext} $libname.lib'
+    ;;
+  esac
+  dynamic_linker='Win32 ld.exe'
+  # FIXME: first we should search . and the directory the executable is in
+  shlibpath_var=PATH
+  ;;
+
+darwin* | rhapsody*)
+  dynamic_linker="$host_os dyld"
+  version_type=darwin
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${versuffix}$shared_ext ${libname}${release}${major}$shared_ext ${libname}$shared_ext'
+  soname_spec='${libname}${release}${major}$shared_ext'
+  shlibpath_overrides_runpath=yes
+  shlibpath_var=DYLD_LIBRARY_PATH
+  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'
+  # Apple's gcc prints 'gcc -print-search-dirs' doesn't operate the same.
+  if test "$GCC" = yes; then
+    sys_lib_search_path_spec=`$CC -print-search-dirs | tr "\n" "$PATH_SEPARATOR" | sed -e 's/libraries:/@libraries:/' | tr "@" "\n" | grep "^libraries:" | sed -e "s/^libraries://" -e "s,=/,/,g" -e "s,$PATH_SEPARATOR, ,g" -e "s,.*,& /lib /usr/lib /usr/local/lib,g"`
+  else
+    sys_lib_search_path_spec='/lib /usr/lib /usr/local/lib'
+  fi
+  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'
+  ;;
+
+dgux*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname$shared_ext'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  ;;
+
+freebsd1*)
+  dynamic_linker=no
+  ;;
+
+freebsd* | dragonfly*)
+  # DragonFly does not have aout.  When/if they implement a new
+  # versioning mechanism, adjust this.
+  if test -x /usr/bin/objformat; then
+    objformat=`/usr/bin/objformat`
+  else
+    case $host_os in
+    freebsd[[123]]*) objformat=aout ;;
+    *) objformat=elf ;;
+    esac
+  fi
+  version_type=freebsd-$objformat
+  case $version_type in
+    freebsd-elf*)
+      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'
+      need_version=no
+      need_lib_prefix=no
+      ;;
+    freebsd-*)
+      library_names_spec='${libname}${release}${shared_ext}$versuffix $libname${shared_ext}$versuffix'
+      need_version=yes
+      ;;
+  esac
+  shlibpath_var=LD_LIBRARY_PATH
+  case $host_os in
+  freebsd2*)
+    shlibpath_overrides_runpath=yes
+    ;;
+  freebsd3.[[01]]* | freebsdelf3.[[01]]*)
+    shlibpath_overrides_runpath=yes
+    hardcode_into_libs=yes
+    ;;
+  freebsd3.[[2-9]]* | freebsdelf3.[[2-9]]* | \
+  freebsd4.[[0-5]] | freebsdelf4.[[0-5]] | freebsd4.1.1 | freebsdelf4.1.1)
+    shlibpath_overrides_runpath=no
+    hardcode_into_libs=yes
+    ;;
+  freebsd*) # from 4.6 on
+    shlibpath_overrides_runpath=yes
+    hardcode_into_libs=yes
+    ;;
+  esac
+  ;;
+
+gnu*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  hardcode_into_libs=yes
+  ;;
+
+hpux9* | hpux10* | hpux11*)
+  # Give a soname corresponding to the major version so that dld.sl refuses to
+  # link against other versions.
+  version_type=sunos
+  need_lib_prefix=no
+  need_version=no
+  case $host_cpu in
+  ia64*)
+    shrext_cmds='.so'
+    hardcode_into_libs=yes
+    dynamic_linker="$host_os dld.so"
+    shlibpath_var=LD_LIBRARY_PATH
+    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    if test "X$HPUX_IA64_MODE" = X32; then
+      sys_lib_search_path_spec="/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib"
+    else
+      sys_lib_search_path_spec="/usr/lib/hpux64 /usr/local/lib/hpux64"
+    fi
+    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
+    ;;
+   hppa*64*)
+     shrext_cmds='.sl'
+     hardcode_into_libs=yes
+     dynamic_linker="$host_os dld.sl"
+     shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH
+     shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
+     library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+     soname_spec='${libname}${release}${shared_ext}$major'
+     sys_lib_search_path_spec="/usr/lib/pa20_64 /usr/ccs/lib/pa20_64"
+     sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
+     ;;
+   *)
+    shrext_cmds='.sl'
+    dynamic_linker="$host_os dld.sl"
+    shlibpath_var=SHLIB_PATH
+    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    ;;
+  esac
+  # HP-UX runs *really* slowly unless shared libraries are mode 555.
+  postinstall_cmds='chmod 555 $lib'
+  ;;
+
+interix3*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  ;;
+
+irix5* | irix6* | nonstopux*)
+  case $host_os in
+    nonstopux*) version_type=nonstopux ;;
+    *)
+	if test "$lt_cv_prog_gnu_ld" = yes; then
+		version_type=linux
+	else
+		version_type=irix
+	fi ;;
+  esac
+  need_lib_prefix=no
+  need_version=no
+  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext} $libname${shared_ext}'
+  case $host_os in
+  irix5* | nonstopux*)
+    libsuff= shlibsuff=
+    ;;
+  *)
+    case $LD in # libtool.m4 will add one of these switches to LD
+    *-32|*"-32 "|*-melf32bsmip|*"-melf32bsmip ")
+      libsuff= shlibsuff= libmagic=32-bit;;
+    *-n32|*"-n32 "|*-melf32bmipn32|*"-melf32bmipn32 ")
+      libsuff=32 shlibsuff=N32 libmagic=N32;;
+    *-64|*"-64 "|*-melf64bmip|*"-melf64bmip ")
+      libsuff=64 shlibsuff=64 libmagic=64-bit;;
+    *) libsuff= shlibsuff= libmagic=never-match;;
+    esac
+    ;;
+  esac
+  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH
+  shlibpath_overrides_runpath=no
+  sys_lib_search_path_spec="/usr/lib${libsuff} /lib${libsuff} /usr/local/lib${libsuff}"
+  sys_lib_dlsearch_path_spec="/usr/lib${libsuff} /lib${libsuff}"
+  hardcode_into_libs=yes
+  ;;
+
+# No shared lib support for Linux oldld, aout, or coff.
+linux*oldld* | linux*aout* | linux*coff*)
+  dynamic_linker=no
+  ;;
+
+# This must be Linux ELF.
+linux* | k*bsd*-gnu)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig -n $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  # This implies no fast_install, which is unacceptable.
+  # Some rework will be needed to allow for fast_install
+  # before this can be enabled.
+  hardcode_into_libs=yes
+
+  # Append ld.so.conf contents to the search path
+  if test -f /etc/ld.so.conf; then
+    lt_ld_extra=`awk '/^include / { system(sprintf("cd /etc; cat %s", \[$]2)); skip = 1; } { if (!skip) print \[$]0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;s/[:,	]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;/^$/d' | tr '\n' ' '`
+    sys_lib_dlsearch_path_spec="/lib /usr/lib $lt_ld_extra"
+  fi
+
+  # We used to test for /lib/ld.so.1 and disable shared libraries on
+  # powerpc, because MkLinux only supported shared libraries with the
+  # GNU dynamic linker.  Since this was broken with cross compilers,
+  # most powerpc-linux boxes support dynamic linking these days and
+  # people can always --disable-shared, the test was removed, and we
+  # assume the GNU/Linux dynamic linker is in use.
+  dynamic_linker='GNU/Linux ld.so'
+  ;;
+
+netbsdelf*-gnu)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  dynamic_linker='NetBSD ld.elf_so'
+  ;;
+
+netbsd*)
+  version_type=sunos
+  need_lib_prefix=no
+  need_version=no
+  if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+    finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
+    dynamic_linker='NetBSD (a.out) ld.so'
+  else
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    dynamic_linker='NetBSD ld.elf_so'
+  fi
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  hardcode_into_libs=yes
+  ;;
+
+newsos6)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  ;;
+
+nto-qnx*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  ;;
+
+openbsd*)
+  version_type=sunos
+  sys_lib_dlsearch_path_spec="/usr/lib"
+  need_lib_prefix=no
+  # Some older versions of OpenBSD (3.3 at least) *do* need versioned libs.
+  case $host_os in
+    openbsd3.3 | openbsd3.3.*) need_version=yes ;;
+    *)                         need_version=no  ;;
+  esac
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  if test -z "`echo __ELF__ | $CC -E - | grep __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+    case $host_os in
+      openbsd2.[[89]] | openbsd2.[[89]].*)
+	shlibpath_overrides_runpath=no
+	;;
+      *)
+	shlibpath_overrides_runpath=yes
+	;;
+      esac
+  else
+    shlibpath_overrides_runpath=yes
+  fi
+  ;;
+
+os2*)
+  libname_spec='$name'
+  shrext_cmds=".dll"
+  need_lib_prefix=no
+  library_names_spec='$libname${shared_ext} $libname.a'
+  dynamic_linker='OS/2 ld.exe'
+  shlibpath_var=LIBPATH
+  ;;
+
+osf3* | osf4* | osf5*)
+  version_type=osf
+  need_lib_prefix=no
+  need_version=no
+  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  shlibpath_var=LD_LIBRARY_PATH
+  sys_lib_search_path_spec="/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib"
+  sys_lib_dlsearch_path_spec="$sys_lib_search_path_spec"
+  ;;
+
+solaris*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  hardcode_into_libs=yes
+  # ldd complains unless libraries are executable
+  postinstall_cmds='chmod +x $lib'
+  ;;
+
+sunos4*)
+  version_type=sunos
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+  finish_cmds='PATH="\$PATH:/usr/etc" ldconfig $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  if test "$with_gnu_ld" = yes; then
+    need_lib_prefix=no
+  fi
+  need_version=yes
+  ;;
+
+sysv4 | sysv4.3*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  case $host_vendor in
+    sni)
+      shlibpath_overrides_runpath=no
+      need_lib_prefix=no
+      export_dynamic_flag_spec='${wl}-Blargedynsym'
+      runpath_var=LD_RUN_PATH
+      ;;
+    siemens)
+      need_lib_prefix=no
+      ;;
+    motorola)
+      need_lib_prefix=no
+      need_version=no
+      shlibpath_overrides_runpath=no
+      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'
+      ;;
+  esac
+  ;;
+
+sysv4*MP*)
+  if test -d /usr/nec ;then
+    version_type=linux
+    library_names_spec='$libname${shared_ext}.$versuffix $libname${shared_ext}.$major $libname${shared_ext}'
+    soname_spec='$libname${shared_ext}.$major'
+    shlibpath_var=LD_LIBRARY_PATH
+  fi
+  ;;
+
+sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
+  version_type=freebsd-elf
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  hardcode_into_libs=yes
+  if test "$with_gnu_ld" = yes; then
+    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'
+    shlibpath_overrides_runpath=no
+  else
+    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'
+    shlibpath_overrides_runpath=yes
+    case $host_os in
+      sco3.2v5*)
+        sys_lib_search_path_spec="$sys_lib_search_path_spec /lib"
+	;;
+    esac
+  fi
+  sys_lib_dlsearch_path_spec='/usr/lib'
+  ;;
+
+uts4*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  ;;
+
+*)
+  dynamic_linker=no
+  ;;
+esac
+AC_MSG_RESULT([$dynamic_linker])
+test "$dynamic_linker" = no && can_build_shared=no
+
+variables_saved_for_relink="PATH $shlibpath_var $runpath_var"
+if test "$GCC" = yes; then
+  variables_saved_for_relink="$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH"
+fi
+])# AC_LIBTOOL_SYS_DYNAMIC_LINKER
+
+
+# _LT_AC_TAGCONFIG
+# ----------------
+AC_DEFUN([_LT_AC_TAGCONFIG],
+[AC_ARG_WITH([tags],
+    [AC_HELP_STRING([--with-tags@<:@=TAGS@:>@],
+        [include additional configurations @<:@automatic@:>@])],
+    [tagnames="$withval"])
+
+if test -f "$ltmain" && test -n "$tagnames"; then
+  if test ! -f "${ofile}"; then
+    AC_MSG_WARN([output file `$ofile' does not exist])
+  fi
+
+  if test -z "$LTCC"; then
+    eval "`$SHELL ${ofile} --config | grep '^LTCC='`"
+    if test -z "$LTCC"; then
+      AC_MSG_WARN([output file `$ofile' does not look like a libtool script])
+    else
+      AC_MSG_WARN([using `LTCC=$LTCC', extracted from `$ofile'])
+    fi
+  fi
+  if test -z "$LTCFLAGS"; then
+    eval "`$SHELL ${ofile} --config | grep '^LTCFLAGS='`"
+  fi
+
+  # Extract list of available tagged configurations in $ofile.
+  # Note that this assumes the entire list is on one line.
+  available_tags=`grep "^available_tags=" "${ofile}" | $SED -e 's/available_tags=\(.*$\)/\1/' -e 's/\"//g'`
+
+  lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+  for tagname in $tagnames; do
+    IFS="$lt_save_ifs"
+    # Check whether tagname contains only valid characters
+    case `$echo "X$tagname" | $Xsed -e 's:[[-_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890,/]]::g'` in
+    "") ;;
+    *)  AC_MSG_ERROR([invalid tag name: $tagname])
+	;;
+    esac
+
+    if grep "^# ### BEGIN LIBTOOL TAG CONFIG: $tagname$" < "${ofile}" > /dev/null
+    then
+      AC_MSG_ERROR([tag name \"$tagname\" already exists])
+    fi
+
+    # Update the list of available tags.
+    if test -n "$tagname"; then
+      echo appending configuration tag \"$tagname\" to $ofile
+
+      case $tagname in
+      CXX)
+	if test -n "$CXX" && ( test "X$CXX" != "Xno" &&
+	    ( (test "X$CXX" = "Xg++" && `g++ -v >/dev/null 2>&1` ) ||
+	    (test "X$CXX" != "Xg++"))) ; then
+	  AC_LIBTOOL_LANG_CXX_CONFIG
+	else
+	  tagname=""
+	fi
+	;;
+
+      F77)
+	if test -n "$F77" && test "X$F77" != "Xno"; then
+	  AC_LIBTOOL_LANG_F77_CONFIG
+	else
+	  tagname=""
+	fi
+	;;
+
+      GCJ)
+	if test -n "$GCJ" && test "X$GCJ" != "Xno"; then
+	  AC_LIBTOOL_LANG_GCJ_CONFIG
+	else
+	  tagname=""
+	fi
+	;;
+
+      RC)
+	AC_LIBTOOL_LANG_RC_CONFIG
+	;;
+
+      *)
+	AC_MSG_ERROR([Unsupported tag name: $tagname])
+	;;
+      esac
+
+      # Append the new tag name to the list of available tags.
+      if test -n "$tagname" ; then
+      available_tags="$available_tags $tagname"
+    fi
+    fi
+  done
+  IFS="$lt_save_ifs"
+
+  # Now substitute the updated list of available tags.
+  if eval "sed -e 's/^available_tags=.*\$/available_tags=\"$available_tags\"/' \"$ofile\" > \"${ofile}T\""; then
+    mv "${ofile}T" "$ofile"
+    chmod +x "$ofile"
+  else
+    rm -f "${ofile}T"
+    AC_MSG_ERROR([unable to update list of available tagged configurations.])
+  fi
+fi
+])# _LT_AC_TAGCONFIG
+
+
+# AC_LIBTOOL_DLOPEN
+# -----------------
+# enable checks for dlopen support
+AC_DEFUN([AC_LIBTOOL_DLOPEN],
+ [AC_BEFORE([$0],[AC_LIBTOOL_SETUP])
+])# AC_LIBTOOL_DLOPEN
+
+
+# AC_LIBTOOL_WIN32_DLL
+# --------------------
+# declare package support for building win32 DLLs
+AC_DEFUN([AC_LIBTOOL_WIN32_DLL],
+[AC_BEFORE([$0], [AC_LIBTOOL_SETUP])
+])# AC_LIBTOOL_WIN32_DLL
+
+
+# AC_ENABLE_SHARED([DEFAULT])
+# ---------------------------
+# implement the --enable-shared flag
+# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.
+AC_DEFUN([AC_ENABLE_SHARED],
+[define([AC_ENABLE_SHARED_DEFAULT], ifelse($1, no, no, yes))dnl
+AC_ARG_ENABLE([shared],
+    [AC_HELP_STRING([--enable-shared@<:@=PKGS@:>@],
+	[build shared libraries @<:@default=]AC_ENABLE_SHARED_DEFAULT[@:>@])],
+    [p=${PACKAGE-default}
+    case $enableval in
+    yes) enable_shared=yes ;;
+    no) enable_shared=no ;;
+    *)
+      enable_shared=no
+      # Look at the argument we got.  We use all the common list separators.
+      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      for pkg in $enableval; do
+	IFS="$lt_save_ifs"
+	if test "X$pkg" = "X$p"; then
+	  enable_shared=yes
+	fi
+      done
+      IFS="$lt_save_ifs"
+      ;;
+    esac],
+    [enable_shared=]AC_ENABLE_SHARED_DEFAULT)
+])# AC_ENABLE_SHARED
+
+
+# AC_DISABLE_SHARED
+# -----------------
+# set the default shared flag to --disable-shared
+AC_DEFUN([AC_DISABLE_SHARED],
+[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl
+AC_ENABLE_SHARED(no)
+])# AC_DISABLE_SHARED
+
+
+# AC_ENABLE_STATIC([DEFAULT])
+# ---------------------------
+# implement the --enable-static flag
+# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.
+AC_DEFUN([AC_ENABLE_STATIC],
+[define([AC_ENABLE_STATIC_DEFAULT], ifelse($1, no, no, yes))dnl
+AC_ARG_ENABLE([static],
+    [AC_HELP_STRING([--enable-static@<:@=PKGS@:>@],
+	[build static libraries @<:@default=]AC_ENABLE_STATIC_DEFAULT[@:>@])],
+    [p=${PACKAGE-default}
+    case $enableval in
+    yes) enable_static=yes ;;
+    no) enable_static=no ;;
+    *)
+     enable_static=no
+      # Look at the argument we got.  We use all the common list separators.
+      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      for pkg in $enableval; do
+	IFS="$lt_save_ifs"
+	if test "X$pkg" = "X$p"; then
+	  enable_static=yes
+	fi
+      done
+      IFS="$lt_save_ifs"
+      ;;
+    esac],
+    [enable_static=]AC_ENABLE_STATIC_DEFAULT)
+])# AC_ENABLE_STATIC
+
+
+# AC_DISABLE_STATIC
+# -----------------
+# set the default static flag to --disable-static
+AC_DEFUN([AC_DISABLE_STATIC],
+[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl
+AC_ENABLE_STATIC(no)
+])# AC_DISABLE_STATIC
+
+
+# AC_ENABLE_FAST_INSTALL([DEFAULT])
+# ---------------------------------
+# implement the --enable-fast-install flag
+# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.
+AC_DEFUN([AC_ENABLE_FAST_INSTALL],
+[define([AC_ENABLE_FAST_INSTALL_DEFAULT], ifelse($1, no, no, yes))dnl
+AC_ARG_ENABLE([fast-install],
+    [AC_HELP_STRING([--enable-fast-install@<:@=PKGS@:>@],
+    [optimize for fast installation @<:@default=]AC_ENABLE_FAST_INSTALL_DEFAULT[@:>@])],
+    [p=${PACKAGE-default}
+    case $enableval in
+    yes) enable_fast_install=yes ;;
+    no) enable_fast_install=no ;;
+    *)
+      enable_fast_install=no
+      # Look at the argument we got.  We use all the common list separators.
+      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      for pkg in $enableval; do
+	IFS="$lt_save_ifs"
+	if test "X$pkg" = "X$p"; then
+	  enable_fast_install=yes
+	fi
+      done
+      IFS="$lt_save_ifs"
+      ;;
+    esac],
+    [enable_fast_install=]AC_ENABLE_FAST_INSTALL_DEFAULT)
+])# AC_ENABLE_FAST_INSTALL
+
+
+# AC_DISABLE_FAST_INSTALL
+# -----------------------
+# set the default to --disable-fast-install
+AC_DEFUN([AC_DISABLE_FAST_INSTALL],
+[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl
+AC_ENABLE_FAST_INSTALL(no)
+])# AC_DISABLE_FAST_INSTALL
+
+
+# AC_LIBTOOL_PICMODE([MODE])
+# --------------------------
+# implement the --with-pic flag
+# MODE is either `yes' or `no'.  If omitted, it defaults to `both'.
+AC_DEFUN([AC_LIBTOOL_PICMODE],
+[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl
+pic_mode=ifelse($#,1,$1,default)
+])# AC_LIBTOOL_PICMODE
+
+
+# AC_PROG_EGREP
+# -------------
+# This is predefined starting with Autoconf 2.54, so this conditional
+# definition can be removed once we require Autoconf 2.54 or later.
+m4_ifndef([AC_PROG_EGREP], [AC_DEFUN([AC_PROG_EGREP],
+[AC_CACHE_CHECK([for egrep], [ac_cv_prog_egrep],
+   [if echo a | (grep -E '(a|b)') >/dev/null 2>&1
+    then ac_cv_prog_egrep='grep -E'
+    else ac_cv_prog_egrep='egrep'
+    fi])
+ EGREP=$ac_cv_prog_egrep
+ AC_SUBST([EGREP])
+])])
+
+
+# AC_PATH_TOOL_PREFIX
+# -------------------
+# find a file program which can recognise shared library
+AC_DEFUN([AC_PATH_TOOL_PREFIX],
+[AC_REQUIRE([AC_PROG_EGREP])dnl
+AC_MSG_CHECKING([for $1])
+AC_CACHE_VAL(lt_cv_path_MAGIC_CMD,
+[case $MAGIC_CMD in
+[[\\/*] |  ?:[\\/]*])
+  lt_cv_path_MAGIC_CMD="$MAGIC_CMD" # Let the user override the test with a path.
+  ;;
+*)
+  lt_save_MAGIC_CMD="$MAGIC_CMD"
+  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+dnl $ac_dummy forces splitting on constant user-supplied paths.
+dnl POSIX.2 word splitting is done only on the output of word expansions,
+dnl not every word.  This closes a longstanding sh security hole.
+  ac_dummy="ifelse([$2], , $PATH, [$2])"
+  for ac_dir in $ac_dummy; do
+    IFS="$lt_save_ifs"
+    test -z "$ac_dir" && ac_dir=.
+    if test -f $ac_dir/$1; then
+      lt_cv_path_MAGIC_CMD="$ac_dir/$1"
+      if test -n "$file_magic_test_file"; then
+	case $deplibs_check_method in
+	"file_magic "*)
+	  file_magic_regex=`expr "$deplibs_check_method" : "file_magic \(.*\)"`
+	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
+	    $EGREP "$file_magic_regex" > /dev/null; then
+	    :
+	  else
+	    cat <<EOF 1>&2
+
+*** Warning: the command libtool uses to detect shared libraries,
+*** $file_magic_cmd, produces output that libtool cannot recognize.
+*** The result is that libtool may fail to recognize shared libraries
+*** as such.  This will affect the creation of libtool libraries that
+*** depend on shared libraries, but programs linked with such libtool
+*** libraries will work regardless of this problem.  Nevertheless, you
+*** may want to report the problem to your system manager and/or to
+*** bug-libtool@gnu.org
+
+EOF
+	  fi ;;
+	esac
+      fi
+      break
+    fi
+  done
+  IFS="$lt_save_ifs"
+  MAGIC_CMD="$lt_save_MAGIC_CMD"
+  ;;
+esac])
+MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+if test -n "$MAGIC_CMD"; then
+  AC_MSG_RESULT($MAGIC_CMD)
+else
+  AC_MSG_RESULT(no)
+fi
+])# AC_PATH_TOOL_PREFIX
+
+
+# AC_PATH_MAGIC
+# -------------
+# find a file program which can recognise a shared library
+AC_DEFUN([AC_PATH_MAGIC],
+[AC_PATH_TOOL_PREFIX(${ac_tool_prefix}file, /usr/bin$PATH_SEPARATOR$PATH)
+if test -z "$lt_cv_path_MAGIC_CMD"; then
+  if test -n "$ac_tool_prefix"; then
+    AC_PATH_TOOL_PREFIX(file, /usr/bin$PATH_SEPARATOR$PATH)
+  else
+    MAGIC_CMD=:
+  fi
+fi
+])# AC_PATH_MAGIC
+
+
+# AC_PROG_LD
+# ----------
+# find the pathname to the GNU or non-GNU linker
+AC_DEFUN([AC_PROG_LD],
+[AC_ARG_WITH([gnu-ld],
+    [AC_HELP_STRING([--with-gnu-ld],
+	[assume the C compiler uses GNU ld @<:@default=no@:>@])],
+    [test "$withval" = no || with_gnu_ld=yes],
+    [with_gnu_ld=no])
+AC_REQUIRE([LT_AC_PROG_SED])dnl
+AC_REQUIRE([AC_PROG_CC])dnl
+AC_REQUIRE([AC_CANONICAL_HOST])dnl
+AC_REQUIRE([AC_CANONICAL_BUILD])dnl
+ac_prog=ld
+if test "$GCC" = yes; then
+  # Check if gcc -print-prog-name=ld gives a path.
+  AC_MSG_CHECKING([for ld used by $CC])
+  case $host in
+  *-*-mingw*)
+    # gcc leaves a trailing carriage return which upsets mingw
+    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
+  *)
+    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;
+  esac
+  case $ac_prog in
+    # Accept absolute paths.
+    [[\\/]]* | ?:[[\\/]]*)
+      re_direlt='/[[^/]][[^/]]*/\.\./'
+      # Canonicalize the pathname of ld
+      ac_prog=`echo $ac_prog| $SED 's%\\\\%/%g'`
+      while echo $ac_prog | grep "$re_direlt" > /dev/null 2>&1; do
+	ac_prog=`echo $ac_prog| $SED "s%$re_direlt%/%"`
+      done
+      test -z "$LD" && LD="$ac_prog"
+      ;;
+  "")
+    # If it fails, then pretend we aren't using GCC.
+    ac_prog=ld
+    ;;
+  *)
+    # If it is relative, then search for the first ld in PATH.
+    with_gnu_ld=unknown
+    ;;
+  esac
+elif test "$with_gnu_ld" = yes; then
+  AC_MSG_CHECKING([for GNU ld])
+else
+  AC_MSG_CHECKING([for non-GNU ld])
+fi
+AC_CACHE_VAL(lt_cv_path_LD,
+[if test -z "$LD"; then
+  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+  for ac_dir in $PATH; do
+    IFS="$lt_save_ifs"
+    test -z "$ac_dir" && ac_dir=.
+    if test -f "$ac_dir/$ac_prog" || test -f "$ac_dir/$ac_prog$ac_exeext"; then
+      lt_cv_path_LD="$ac_dir/$ac_prog"
+      # Check to see if the program is GNU ld.  I'd rather use --version,
+      # but apparently some variants of GNU ld only accept -v.
+      # Break only if it was the GNU/non-GNU ld that we prefer.
+      case `"$lt_cv_path_LD" -v 2>&1 </dev/null` in
+      *GNU* | *'with BFD'*)
+	test "$with_gnu_ld" != no && break
+	;;
+      *)
+	test "$with_gnu_ld" != yes && break
+	;;
+      esac
+    fi
+  done
+  IFS="$lt_save_ifs"
+else
+  lt_cv_path_LD="$LD" # Let the user override the test with a path.
+fi])
+LD="$lt_cv_path_LD"
+if test -n "$LD"; then
+  AC_MSG_RESULT($LD)
+else
+  AC_MSG_RESULT(no)
+fi
+test -z "$LD" && AC_MSG_ERROR([no acceptable ld found in \$PATH])
+AC_PROG_LD_GNU
+])# AC_PROG_LD
+
+
+# AC_PROG_LD_GNU
+# --------------
+AC_DEFUN([AC_PROG_LD_GNU],
+[AC_REQUIRE([AC_PROG_EGREP])dnl
+AC_CACHE_CHECK([if the linker ($LD) is GNU ld], lt_cv_prog_gnu_ld,
+[# I'd rather use --version here, but apparently some GNU lds only accept -v.
+case `$LD -v 2>&1 </dev/null` in
+*GNU* | *'with BFD'*)
+  lt_cv_prog_gnu_ld=yes
+  ;;
+*)
+  lt_cv_prog_gnu_ld=no
+  ;;
+esac])
+with_gnu_ld=$lt_cv_prog_gnu_ld
+])# AC_PROG_LD_GNU
+
+
+# AC_PROG_LD_RELOAD_FLAG
+# ----------------------
+# find reload flag for linker
+#   -- PORTME Some linkers may need a different reload flag.
+AC_DEFUN([AC_PROG_LD_RELOAD_FLAG],
+[AC_CACHE_CHECK([for $LD option to reload object files],
+  lt_cv_ld_reload_flag,
+  [lt_cv_ld_reload_flag='-r'])
+reload_flag=$lt_cv_ld_reload_flag
+case $reload_flag in
+"" | " "*) ;;
+*) reload_flag=" $reload_flag" ;;
+esac
+reload_cmds='$LD$reload_flag -o $output$reload_objs'
+case $host_os in
+  darwin*)
+    if test "$GCC" = yes; then
+      reload_cmds='$LTCC $LTCFLAGS -nostdlib ${wl}-r -o $output$reload_objs'
+    else
+      reload_cmds='$LD$reload_flag -o $output$reload_objs'
+    fi
+    ;;
+esac
+])# AC_PROG_LD_RELOAD_FLAG
+
+
+# AC_DEPLIBS_CHECK_METHOD
+# -----------------------
+# how to check for library dependencies
+#  -- PORTME fill in with the dynamic library characteristics
+AC_DEFUN([AC_DEPLIBS_CHECK_METHOD],
+[AC_CACHE_CHECK([how to recognise dependent libraries],
+lt_cv_deplibs_check_method,
+[lt_cv_file_magic_cmd='$MAGIC_CMD'
+lt_cv_file_magic_test_file=
+lt_cv_deplibs_check_method='unknown'
+# Need to set the preceding variable on all platforms that support
+# interlibrary dependencies.
+# 'none' -- dependencies not supported.
+# `unknown' -- same as none, but documents that we really don't know.
+# 'pass_all' -- all dependencies passed with no checks.
+# 'test_compile' -- check by making test program.
+# 'file_magic [[regex]]' -- check by looking for files in library path
+# which responds to the $file_magic_cmd with a given extended regex.
+# If you have `file' or equivalent on your system and you're not sure
+# whether `pass_all' will *always* work, you probably want this one.
+
+case $host_os in
+aix4* | aix5*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+beos*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+bsdi[[45]]*)
+  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib)'
+  lt_cv_file_magic_cmd='/usr/bin/file -L'
+  lt_cv_file_magic_test_file=/shlib/libc.so
+  ;;
+
+cygwin*)
+  # func_win32_libid is a shell function defined in ltmain.sh
+  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'
+  lt_cv_file_magic_cmd='func_win32_libid'
+  ;;
+
+mingw* | pw32*)
+  # Base MSYS/MinGW do not provide the 'file' command needed by
+  # func_win32_libid shell function, so use a weaker test based on 'objdump'.
+  lt_cv_deplibs_check_method='file_magic file format pei*-i386(.*architecture: i386)?'
+  lt_cv_file_magic_cmd='$OBJDUMP -f'
+  ;;
+
+darwin* | rhapsody*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+freebsd* | dragonfly*)
+  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then
+    case $host_cpu in
+    i*86 )
+      # Not sure whether the presence of OpenBSD here was a mistake.
+      # Let's accept both of them until this is cleared up.
+      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[[3-9]]86 (compact )?demand paged shared library'
+      lt_cv_file_magic_cmd=/usr/bin/file
+      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`
+      ;;
+    esac
+  else
+    lt_cv_deplibs_check_method=pass_all
+  fi
+  ;;
+
+gnu*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+hpux10.20* | hpux11*)
+  lt_cv_file_magic_cmd=/usr/bin/file
+  case $host_cpu in
+  ia64*)
+    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|ELF-[[0-9]][[0-9]]) shared object file - IA64'
+    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so
+    ;;
+  hppa*64*)
+    [lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF-[0-9][0-9]) shared object file - PA-RISC [0-9].[0-9]']
+    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl
+    ;;
+  *)
+    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|PA-RISC[[0-9]].[[0-9]]) shared library'
+    lt_cv_file_magic_test_file=/usr/lib/libc.sl
+    ;;
+  esac
+  ;;
+
+interix3*)
+  # PIC code is broken on Interix 3.x, that's why |\.a not |_pic\.a here
+  lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\.so|\.a)$'
+  ;;
+
+irix5* | irix6* | nonstopux*)
+  case $LD in
+  *-32|*"-32 ") libmagic=32-bit;;
+  *-n32|*"-n32 ") libmagic=N32;;
+  *-64|*"-64 ") libmagic=64-bit;;
+  *) libmagic=never-match;;
+  esac
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+# This must be Linux ELF.
+linux* | k*bsd*-gnu)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+netbsd* | netbsdelf*-gnu)
+  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then
+    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\.so\.[[0-9]]+\.[[0-9]]+|_pic\.a)$'
+  else
+    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\.so|_pic\.a)$'
+  fi
+  ;;
+
+newos6*)
+  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (executable|dynamic lib)'
+  lt_cv_file_magic_cmd=/usr/bin/file
+  lt_cv_file_magic_test_file=/usr/lib/libnls.so
+  ;;
+
+nto-qnx*)
+  lt_cv_deplibs_check_method=unknown
+  ;;
+
+openbsd*)
+  if test -z "`echo __ELF__ | $CC -E - | grep __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\.so\.[[0-9]]+\.[[0-9]]+|\.so|_pic\.a)$'
+  else
+    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\.so\.[[0-9]]+\.[[0-9]]+|_pic\.a)$'
+  fi
+  ;;
+
+osf3* | osf4* | osf5*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+solaris*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+sysv4 | sysv4.3*)
+  case $host_vendor in
+  motorola)
+    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib) M[[0-9]][[0-9]]* Version [[0-9]]'
+    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`
+    ;;
+  ncr)
+    lt_cv_deplibs_check_method=pass_all
+    ;;
+  sequent)
+    lt_cv_file_magic_cmd='/bin/file'
+    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB (shared object|dynamic lib )'
+    ;;
+  sni)
+    lt_cv_file_magic_cmd='/bin/file'
+    lt_cv_deplibs_check_method="file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB dynamic lib"
+    lt_cv_file_magic_test_file=/lib/libc.so
+    ;;
+  siemens)
+    lt_cv_deplibs_check_method=pass_all
+    ;;
+  pc)
+    lt_cv_deplibs_check_method=pass_all
+    ;;
+  esac
+  ;;
+
+sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+esac
+])
+file_magic_cmd=$lt_cv_file_magic_cmd
+deplibs_check_method=$lt_cv_deplibs_check_method
+test -z "$deplibs_check_method" && deplibs_check_method=unknown
+])# AC_DEPLIBS_CHECK_METHOD
+
+
+# AC_PROG_NM
+# ----------
+# find the pathname to a BSD-compatible name lister
+AC_DEFUN([AC_PROG_NM],
+[AC_CACHE_CHECK([for BSD-compatible nm], lt_cv_path_NM,
+[if test -n "$NM"; then
+  # Let the user override the test.
+  lt_cv_path_NM="$NM"
+else
+  lt_nm_to_check="${ac_tool_prefix}nm"
+  if test -n "$ac_tool_prefix" && test "$build" = "$host"; then 
+    lt_nm_to_check="$lt_nm_to_check nm"
+  fi
+  for lt_tmp_nm in $lt_nm_to_check; do
+    lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do
+      IFS="$lt_save_ifs"
+      test -z "$ac_dir" && ac_dir=.
+      tmp_nm="$ac_dir/$lt_tmp_nm"
+      if test -f "$tmp_nm" || test -f "$tmp_nm$ac_exeext" ; then
+	# Check to see if the nm accepts a BSD-compat flag.
+	# Adding the `sed 1q' prevents false positives on HP-UX, which says:
+	#   nm: unknown option "B" ignored
+	# Tru64's nm complains that /dev/null is an invalid object file
+	case `"$tmp_nm" -B /dev/null 2>&1 | sed '1q'` in
+	*/dev/null* | *'Invalid file or object type'*)
+	  lt_cv_path_NM="$tmp_nm -B"
+	  break
+	  ;;
+	*)
+	  case `"$tmp_nm" -p /dev/null 2>&1 | sed '1q'` in
+	  */dev/null*)
+	    lt_cv_path_NM="$tmp_nm -p"
+	    break
+	    ;;
+	  *)
+	    lt_cv_path_NM=${lt_cv_path_NM="$tmp_nm"} # keep the first match, but
+	    continue # so that we can try to find one that supports BSD flags
+	    ;;
+	  esac
+	  ;;
+	esac
+      fi
+    done
+    IFS="$lt_save_ifs"
+  done
+  test -z "$lt_cv_path_NM" && lt_cv_path_NM=nm
+fi])
+NM="$lt_cv_path_NM"
+])# AC_PROG_NM
+
+
+# AC_CHECK_LIBM
+# -------------
+# check for math library
+AC_DEFUN([AC_CHECK_LIBM],
+[AC_REQUIRE([AC_CANONICAL_HOST])dnl
+LIBM=
+case $host in
+*-*-beos* | *-*-cygwin* | *-*-pw32* | *-*-darwin*)
+  # These system don't have libm, or don't need it
+  ;;
+*-ncr-sysv4.3*)
+  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM="-lmw")
+  AC_CHECK_LIB(m, cos, LIBM="$LIBM -lm")
+  ;;
+*)
+  AC_CHECK_LIB(m, cos, LIBM="-lm")
+  ;;
+esac
+])# AC_CHECK_LIBM
+
+
+# AC_LIBLTDL_CONVENIENCE([DIRECTORY])
+# -----------------------------------
+# sets LIBLTDL to the link flags for the libltdl convenience library and
+# LTDLINCL to the include flags for the libltdl header and adds
+# --enable-ltdl-convenience to the configure arguments.  Note that
+# AC_CONFIG_SUBDIRS is not called here.  If DIRECTORY is not provided,
+# it is assumed to be `libltdl'.  LIBLTDL will be prefixed with
+# '${top_builddir}/' and LTDLINCL will be prefixed with '${top_srcdir}/'
+# (note the single quotes!).  If your package is not flat and you're not
+# using automake, define top_builddir and top_srcdir appropriately in
+# the Makefiles.
+AC_DEFUN([AC_LIBLTDL_CONVENIENCE],
+[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl
+  case $enable_ltdl_convenience in
+  no) AC_MSG_ERROR([this package needs a convenience libltdl]) ;;
+  "") enable_ltdl_convenience=yes
+      ac_configure_args="$ac_configure_args --enable-ltdl-convenience" ;;
+  esac
+  LIBLTDL='${top_builddir}/'ifelse($#,1,[$1],['libltdl'])/libltdlc.la
+  LTDLINCL='-I${top_srcdir}/'ifelse($#,1,[$1],['libltdl'])
+  # For backwards non-gettext consistent compatibility...
+  INCLTDL="$LTDLINCL"
+])# AC_LIBLTDL_CONVENIENCE
+
+
+# AC_LIBLTDL_INSTALLABLE([DIRECTORY])
+# -----------------------------------
+# sets LIBLTDL to the link flags for the libltdl installable library and
+# LTDLINCL to the include flags for the libltdl header and adds
+# --enable-ltdl-install to the configure arguments.  Note that
+# AC_CONFIG_SUBDIRS is not called here.  If DIRECTORY is not provided,
+# and an installed libltdl is not found, it is assumed to be `libltdl'.
+# LIBLTDL will be prefixed with '${top_builddir}/'# and LTDLINCL with
+# '${top_srcdir}/' (note the single quotes!).  If your package is not
+# flat and you're not using automake, define top_builddir and top_srcdir
+# appropriately in the Makefiles.
+# In the future, this macro may have to be called after AC_PROG_LIBTOOL.
+AC_DEFUN([AC_LIBLTDL_INSTALLABLE],
+[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl
+  AC_CHECK_LIB(ltdl, lt_dlinit,
+  [test x"$enable_ltdl_install" != xyes && enable_ltdl_install=no],
+  [if test x"$enable_ltdl_install" = xno; then
+     AC_MSG_WARN([libltdl not installed, but installation disabled])
+   else
+     enable_ltdl_install=yes
+   fi
+  ])
+  if test x"$enable_ltdl_install" = x"yes"; then
+    ac_configure_args="$ac_configure_args --enable-ltdl-install"
+    LIBLTDL='${top_builddir}/'ifelse($#,1,[$1],['libltdl'])/libltdl.la
+    LTDLINCL='-I${top_srcdir}/'ifelse($#,1,[$1],['libltdl'])
+  else
+    ac_configure_args="$ac_configure_args --enable-ltdl-install=no"
+    LIBLTDL="-lltdl"
+    LTDLINCL=
+  fi
+  # For backwards non-gettext consistent compatibility...
+  INCLTDL="$LTDLINCL"
+])# AC_LIBLTDL_INSTALLABLE
+
+
+# AC_LIBTOOL_CXX
+# --------------
+# enable support for C++ libraries
+AC_DEFUN([AC_LIBTOOL_CXX],
+[AC_REQUIRE([_LT_AC_LANG_CXX])
+])# AC_LIBTOOL_CXX
+
+
+# _LT_AC_LANG_CXX
+# ---------------
+AC_DEFUN([_LT_AC_LANG_CXX],
+[AC_REQUIRE([AC_PROG_CXX])
+AC_REQUIRE([_LT_AC_PROG_CXXCPP])
+_LT_AC_SHELL_INIT([tagnames=${tagnames+${tagnames},}CXX])
+])# _LT_AC_LANG_CXX
+
+# _LT_AC_PROG_CXXCPP
+# ------------------
+AC_DEFUN([_LT_AC_PROG_CXXCPP],
+[
+AC_REQUIRE([AC_PROG_CXX])
+if test -n "$CXX" && ( test "X$CXX" != "Xno" &&
+    ( (test "X$CXX" = "Xg++" && `g++ -v >/dev/null 2>&1` ) ||
+    (test "X$CXX" != "Xg++"))) ; then
+  AC_PROG_CXXCPP
+fi
+])# _LT_AC_PROG_CXXCPP
+
+# AC_LIBTOOL_F77
+# --------------
+# enable support for Fortran 77 libraries
+AC_DEFUN([AC_LIBTOOL_F77],
+[AC_REQUIRE([_LT_AC_LANG_F77])
+])# AC_LIBTOOL_F77
+
+
+# _LT_AC_LANG_F77
+# ---------------
+AC_DEFUN([_LT_AC_LANG_F77],
+[AC_REQUIRE([AC_PROG_F77])
+_LT_AC_SHELL_INIT([tagnames=${tagnames+${tagnames},}F77])
+])# _LT_AC_LANG_F77
+
+
+# AC_LIBTOOL_GCJ
+# --------------
+# enable support for GCJ libraries
+AC_DEFUN([AC_LIBTOOL_GCJ],
+[AC_REQUIRE([_LT_AC_LANG_GCJ])
+])# AC_LIBTOOL_GCJ
+
+
+# _LT_AC_LANG_GCJ
+# ---------------
+AC_DEFUN([_LT_AC_LANG_GCJ],
+[AC_PROVIDE_IFELSE([AC_PROG_GCJ],[],
+  [AC_PROVIDE_IFELSE([A][M_PROG_GCJ],[],
+    [AC_PROVIDE_IFELSE([LT_AC_PROG_GCJ],[],
+      [ifdef([AC_PROG_GCJ],[AC_REQUIRE([AC_PROG_GCJ])],
+	 [ifdef([A][M_PROG_GCJ],[AC_REQUIRE([A][M_PROG_GCJ])],
+	   [AC_REQUIRE([A][C_PROG_GCJ_OR_A][M_PROG_GCJ])])])])])])
+_LT_AC_SHELL_INIT([tagnames=${tagnames+${tagnames},}GCJ])
+])# _LT_AC_LANG_GCJ
+
+
+# AC_LIBTOOL_RC
+# -------------
+# enable support for Windows resource files
+AC_DEFUN([AC_LIBTOOL_RC],
+[AC_REQUIRE([LT_AC_PROG_RC])
+_LT_AC_SHELL_INIT([tagnames=${tagnames+${tagnames},}RC])
+])# AC_LIBTOOL_RC
+
+
+# AC_LIBTOOL_LANG_C_CONFIG
+# ------------------------
+# Ensure that the configuration vars for the C compiler are
+# suitably defined.  Those variables are subsequently used by
+# AC_LIBTOOL_CONFIG to write the compiler configuration to `libtool'.
+AC_DEFUN([AC_LIBTOOL_LANG_C_CONFIG], [_LT_AC_LANG_C_CONFIG])
+AC_DEFUN([_LT_AC_LANG_C_CONFIG],
+[lt_save_CC="$CC"
+AC_LANG_PUSH(C)
+
+# Source file extension for C test sources.
+ac_ext=c
+
+# Object file extension for compiled C test sources.
+objext=o
+_LT_AC_TAGVAR(objext, $1)=$objext
+
+# Code to be used in simple compile tests
+lt_simple_compile_test_code="int some_variable = 0;\n"
+
+# Code to be used in simple link tests
+lt_simple_link_test_code='int main(){return(0);}\n'
+
+_LT_AC_SYS_COMPILER
+
+# save warnings/boilerplate of simple test code
+_LT_COMPILER_BOILERPLATE
+_LT_LINKER_BOILERPLATE
+
+AC_LIBTOOL_PROG_COMPILER_NO_RTTI($1)
+AC_LIBTOOL_PROG_COMPILER_PIC($1)
+AC_LIBTOOL_PROG_CC_C_O($1)
+AC_LIBTOOL_SYS_HARD_LINK_LOCKS($1)
+AC_LIBTOOL_PROG_LD_SHLIBS($1)
+AC_LIBTOOL_SYS_DYNAMIC_LINKER($1)
+AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH($1)
+AC_LIBTOOL_SYS_LIB_STRIP
+AC_LIBTOOL_DLOPEN_SELF
+
+# Report which library types will actually be built
+AC_MSG_CHECKING([if libtool supports shared libraries])
+AC_MSG_RESULT([$can_build_shared])
+
+AC_MSG_CHECKING([whether to build shared libraries])
+test "$can_build_shared" = "no" && enable_shared=no
+
+# On AIX, shared libraries and static libraries use the same namespace, and
+# are all built from PIC.
+case $host_os in
+aix3*)
+  test "$enable_shared" = yes && enable_static=no
+  if test -n "$RANLIB"; then
+    archive_cmds="$archive_cmds~\$RANLIB \$lib"
+    postinstall_cmds='$RANLIB $lib'
+  fi
+  ;;
+
+aix4* | aix5*)
+  if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
+    test "$enable_shared" = yes && enable_static=no
+  fi
+    ;;
+esac
+AC_MSG_RESULT([$enable_shared])
+
+AC_MSG_CHECKING([whether to build static libraries])
+# Make sure either enable_shared or enable_static is yes.
+test "$enable_shared" = yes || enable_static=yes
+AC_MSG_RESULT([$enable_static])
+
+AC_LIBTOOL_CONFIG($1)
+
+AC_LANG_POP
+CC="$lt_save_CC"
+])# AC_LIBTOOL_LANG_C_CONFIG
+
+
+# AC_LIBTOOL_LANG_CXX_CONFIG
+# --------------------------
+# Ensure that the configuration vars for the C compiler are
+# suitably defined.  Those variables are subsequently used by
+# AC_LIBTOOL_CONFIG to write the compiler configuration to `libtool'.
+AC_DEFUN([AC_LIBTOOL_LANG_CXX_CONFIG], [_LT_AC_LANG_CXX_CONFIG(CXX)])
+AC_DEFUN([_LT_AC_LANG_CXX_CONFIG],
+[AC_LANG_PUSH(C++)
+AC_REQUIRE([AC_PROG_CXX])
+AC_REQUIRE([_LT_AC_PROG_CXXCPP])
+
+_LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no
+_LT_AC_TAGVAR(allow_undefined_flag, $1)=
+_LT_AC_TAGVAR(always_export_symbols, $1)=no
+_LT_AC_TAGVAR(archive_expsym_cmds, $1)=
+_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)=
+_LT_AC_TAGVAR(hardcode_direct, $1)=no
+_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)=
+_LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=
+_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=
+_LT_AC_TAGVAR(hardcode_minus_L, $1)=no
+_LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=unsupported
+_LT_AC_TAGVAR(hardcode_automatic, $1)=no
+_LT_AC_TAGVAR(module_cmds, $1)=
+_LT_AC_TAGVAR(module_expsym_cmds, $1)=
+_LT_AC_TAGVAR(link_all_deplibs, $1)=unknown
+_LT_AC_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds
+_LT_AC_TAGVAR(no_undefined_flag, $1)=
+_LT_AC_TAGVAR(whole_archive_flag_spec, $1)=
+_LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=no
+
+# Dependencies to place before and after the object being linked:
+_LT_AC_TAGVAR(predep_objects, $1)=
+_LT_AC_TAGVAR(postdep_objects, $1)=
+_LT_AC_TAGVAR(predeps, $1)=
+_LT_AC_TAGVAR(postdeps, $1)=
+_LT_AC_TAGVAR(compiler_lib_search_path, $1)=
+
+# Source file extension for C++ test sources.
+ac_ext=cpp
+
+# Object file extension for compiled C++ test sources.
+objext=o
+_LT_AC_TAGVAR(objext, $1)=$objext
+
+# Code to be used in simple compile tests
+lt_simple_compile_test_code="int some_variable = 0;\n"
+
+# Code to be used in simple link tests
+lt_simple_link_test_code='int main(int, char *[[]]) { return(0); }\n'
+
+# ltmain only uses $CC for tagged configurations so make sure $CC is set.
+_LT_AC_SYS_COMPILER
+
+# save warnings/boilerplate of simple test code
+_LT_COMPILER_BOILERPLATE
+_LT_LINKER_BOILERPLATE
+
+# Allow CC to be a program name with arguments.
+lt_save_CC=$CC
+lt_save_LD=$LD
+lt_save_GCC=$GCC
+GCC=$GXX
+lt_save_with_gnu_ld=$with_gnu_ld
+lt_save_path_LD=$lt_cv_path_LD
+if test -n "${lt_cv_prog_gnu_ldcxx+set}"; then
+  lt_cv_prog_gnu_ld=$lt_cv_prog_gnu_ldcxx
+else
+  $as_unset lt_cv_prog_gnu_ld
+fi
+if test -n "${lt_cv_path_LDCXX+set}"; then
+  lt_cv_path_LD=$lt_cv_path_LDCXX
+else
+  $as_unset lt_cv_path_LD
+fi
+test -z "${LDCXX+set}" || LD=$LDCXX
+CC=${CXX-"c++"}
+compiler=$CC
+_LT_AC_TAGVAR(compiler, $1)=$CC
+_LT_CC_BASENAME([$compiler])
+
+# We don't want -fno-exception wen compiling C++ code, so set the
+# no_builtin_flag separately
+if test "$GXX" = yes; then
+  _LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin'
+else
+  _LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=
+fi
+
+if test "$GXX" = yes; then
+  # Set up default GNU C++ configuration
+
+  AC_PROG_LD
+
+  # Check if GNU C++ uses GNU ld as the underlying linker, since the
+  # archiving commands below assume that GNU ld is being used.
+  if test "$with_gnu_ld" = yes; then
+    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'
+    _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+
+    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}--rpath ${wl}$libdir'
+    _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'
+
+    # If archive_cmds runs LD, not CC, wlarc should be empty
+    # XXX I think wlarc can be eliminated in ltcf-cxx, but I need to
+    #     investigate it a little bit more. (MM)
+    wlarc='${wl}'
+
+    # ancient GNU ld didn't support --whole-archive et. al.
+    if eval "`$CC -print-prog-name=ld` --help 2>&1" | \
+	grep 'no-whole-archive' > /dev/null; then
+      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
+    else
+      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=
+    fi
+  else
+    with_gnu_ld=no
+    wlarc=
+
+    # A generic and very simple default shared library creation
+    # command for GNU C++ for the case where it uses the native
+    # linker, instead of GNU ld.  If possible, this setting should
+    # overridden to take advantage of the native linker features on
+    # the platform it is being used on.
+    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'
+  fi
+
+  # Commands to make compiler produce verbose output that lists
+  # what "hidden" libraries, object files and flags are used when
+  # linking a shared library.
+  output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep "\-L"'
+
+else
+  GXX=no
+  with_gnu_ld=no
+  wlarc=
+fi
+
+# PORTME: fill in a description of your system's C++ link characteristics
+AC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])
+_LT_AC_TAGVAR(ld_shlibs, $1)=yes
+case $host_os in
+  aix3*)
+    # FIXME: insert proper C++ library support
+    _LT_AC_TAGVAR(ld_shlibs, $1)=no
+    ;;
+  aix4* | aix5*)
+    if test "$host_cpu" = ia64; then
+      # On IA64, the linker does run time linking by default, so we don't
+      # have to do anything special.
+      aix_use_runtimelinking=no
+      exp_sym_flag='-Bexport'
+      no_entry_flag=""
+    else
+      aix_use_runtimelinking=no
+
+      # Test if we are trying to use run time linking or normal
+      # AIX style linking. If -brtl is somewhere in LDFLAGS, we
+      # need to do runtime linking.
+      case $host_os in aix4.[[23]]|aix4.[[23]].*|aix5*)
+	for ld_flag in $LDFLAGS; do
+	  case $ld_flag in
+	  *-brtl*)
+	    aix_use_runtimelinking=yes
+	    break
+	    ;;
+	  esac
+	done
+	;;
+      esac
+
+      exp_sym_flag='-bexport'
+      no_entry_flag='-bnoentry'
+    fi
+
+    # When large executables or shared objects are built, AIX ld can
+    # have problems creating the table of contents.  If linking a library
+    # or program results in "error TOC overflow" add -mminimal-toc to
+    # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not
+    # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.
+
+    _LT_AC_TAGVAR(archive_cmds, $1)=''
+    _LT_AC_TAGVAR(hardcode_direct, $1)=yes
+    _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=':'
+    _LT_AC_TAGVAR(link_all_deplibs, $1)=yes
+
+    if test "$GXX" = yes; then
+      case $host_os in aix4.[[012]]|aix4.[[012]].*)
+      # We only want to do this on AIX 4.2 and lower, the check
+      # below for broken collect2 doesn't work under 4.3+
+	collect2name=`${CC} -print-prog-name=collect2`
+	if test -f "$collect2name" && \
+	   strings "$collect2name" | grep resolve_lib_name >/dev/null
+	then
+	  # We have reworked collect2
+	  _LT_AC_TAGVAR(hardcode_direct, $1)=yes
+	else
+	  # We have old collect2
+	  _LT_AC_TAGVAR(hardcode_direct, $1)=unsupported
+	  # It fails to find uninstalled libraries when the uninstalled
+	  # path is not listed in the libpath.  Setting hardcode_minus_L
+	  # to unsupported forces relinking
+	  _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes
+	  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
+	  _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=
+	fi
+	;;
+      esac
+      shared_flag='-shared'
+      if test "$aix_use_runtimelinking" = yes; then
+	shared_flag="$shared_flag "'${wl}-G'
+      fi
+    else
+      # not using gcc
+      if test "$host_cpu" = ia64; then
+	# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release
+	# chokes on -Wl,-G. The following line is correct:
+	shared_flag='-G'
+      else
+	if test "$aix_use_runtimelinking" = yes; then
+	  shared_flag='${wl}-G'
+	else
+	  shared_flag='${wl}-bM:SRE'
+	fi
+      fi
+    fi
+
+    # It seems that -bexpall does not export symbols beginning with
+    # underscore (_), so it is better to generate a list of symbols to export.
+    _LT_AC_TAGVAR(always_export_symbols, $1)=yes
+    if test "$aix_use_runtimelinking" = yes; then
+      # Warning - without using the other runtime loading flags (-brtl),
+      # -berok will link without error, but may produce a broken library.
+      _LT_AC_TAGVAR(allow_undefined_flag, $1)='-berok'
+      # Determine the default libpath from the value encoded in an empty executable.
+      _LT_AC_SYS_LIBPATH_AIX
+      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'"$aix_libpath"
+
+      _LT_AC_TAGVAR(archive_expsym_cmds, $1)="\$CC"' -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags `if test "x${allow_undefined_flag}" != "x"; then echo "${wl}${allow_undefined_flag}"; else :; fi` '"\${wl}$exp_sym_flag:\$export_symbols $shared_flag"
+     else
+      if test "$host_cpu" = ia64; then
+	_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $libdir:/usr/lib:/lib'
+	_LT_AC_TAGVAR(allow_undefined_flag, $1)="-z nodefs"
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags ${wl}${allow_undefined_flag} '"\${wl}$exp_sym_flag:\$export_symbols"
+      else
+	# Determine the default libpath from the value encoded in an empty executable.
+	_LT_AC_SYS_LIBPATH_AIX
+	_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'"$aix_libpath"
+	# Warning - without using the other run time loading flags,
+	# -berok will link without error, but may produce a broken library.
+	_LT_AC_TAGVAR(no_undefined_flag, $1)=' ${wl}-bernotok'
+	_LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-berok'
+	# Exported symbols can be pulled into shared objects from archives
+	_LT_AC_TAGVAR(whole_archive_flag_spec, $1)='$convenience'
+	_LT_AC_TAGVAR(archive_cmds_need_lc, $1)=yes
+	# This is similar to how AIX traditionally builds its shared libraries.
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'
+      fi
+    fi
+    ;;
+
+  beos*)
+    if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
+      _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported
+      # Joseph Beckenbach <jrb3@best.com> says some releases of gcc
+      # support --undefined.  This deserves some investigation.  FIXME
+      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+    else
+      _LT_AC_TAGVAR(ld_shlibs, $1)=no
+    fi
+    ;;
+
+  chorus*)
+    case $cc_basename in
+      *)
+	# FIXME: insert proper C++ library support
+	_LT_AC_TAGVAR(ld_shlibs, $1)=no
+	;;
+    esac
+    ;;
+
+  cygwin* | mingw* | pw32*)
+    # _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,
+    # as there is no search path for DLLs.
+    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
+    _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported
+    _LT_AC_TAGVAR(always_export_symbols, $1)=no
+    _LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=yes
+
+    if $LD --help 2>&1 | grep 'auto-import' > /dev/null; then
+      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+      # If the export-symbols file already is a .def file (1st line
+      # is EXPORTS), use it as is; otherwise, prepend...
+      _LT_AC_TAGVAR(archive_expsym_cmds, $1)='if test "x`$SED 1q $export_symbols`" = xEXPORTS; then
+	cp $export_symbols $output_objdir/$soname.def;
+      else
+	echo EXPORTS > $output_objdir/$soname.def;
+	cat $export_symbols >> $output_objdir/$soname.def;
+      fi~
+      $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+    else
+      _LT_AC_TAGVAR(ld_shlibs, $1)=no
+    fi
+  ;;
+      darwin* | rhapsody*)
+        case $host_os in
+        rhapsody* | darwin1.[[012]])
+         _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-undefined ${wl}suppress'
+         ;;
+       *) # Darwin 1.3 on
+         if test -z ${MACOSX_DEPLOYMENT_TARGET} ; then
+           _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'
+         else
+           case ${MACOSX_DEPLOYMENT_TARGET} in
+             10.[[012]])
+               _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'
+               ;;
+             10.*)
+               _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-undefined ${wl}dynamic_lookup'
+               ;;
+           esac
+         fi
+         ;;
+        esac
+      _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no
+      _LT_AC_TAGVAR(hardcode_direct, $1)=no
+      _LT_AC_TAGVAR(hardcode_automatic, $1)=yes
+      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=unsupported
+      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=''
+      _LT_AC_TAGVAR(link_all_deplibs, $1)=yes
+
+    if test "$GXX" = yes ; then
+      lt_int_apple_cc_single_mod=no
+      output_verbose_link_cmd='echo'
+      if $CC -dumpspecs 2>&1 | $EGREP 'single_module' >/dev/null ; then
+       lt_int_apple_cc_single_mod=yes
+      fi
+      if test "X$lt_int_apple_cc_single_mod" = Xyes ; then
+       _LT_AC_TAGVAR(archive_cmds, $1)='$CC -dynamiclib -single_module $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring'
+      else
+          _LT_AC_TAGVAR(archive_cmds, $1)='$CC -r -keep_private_externs -nostdlib -o ${lib}-master.o $libobjs~$CC -dynamiclib $allow_undefined_flag -o $lib ${lib}-master.o $deplibs $compiler_flags -install_name $rpath/$soname $verstring'
+        fi
+        _LT_AC_TAGVAR(module_cmds, $1)='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'
+        # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin lds
+          if test "X$lt_int_apple_cc_single_mod" = Xyes ; then
+            _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -dynamiclib -single_module $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+          else
+            _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -r -keep_private_externs -nostdlib -o ${lib}-master.o $libobjs~$CC -dynamiclib $allow_undefined_flag -o $lib ${lib}-master.o $deplibs $compiler_flags -install_name $rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+          fi
+            _LT_AC_TAGVAR(module_expsym_cmds, $1)='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+      else
+      case $cc_basename in
+        xlc*)
+         output_verbose_link_cmd='echo'
+          _LT_AC_TAGVAR(archive_cmds, $1)='$CC -qmkshrobj ${wl}-single_module $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}`echo $rpath/$soname` $verstring'
+          _LT_AC_TAGVAR(module_cmds, $1)='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'
+          # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin lds
+          _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -qmkshrobj ${wl}-single_module $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}$rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+          _LT_AC_TAGVAR(module_expsym_cmds, $1)='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+          ;;
+       *)
+         _LT_AC_TAGVAR(ld_shlibs, $1)=no
+          ;;
+      esac
+      fi
+        ;;
+
+  dgux*)
+    case $cc_basename in
+      ec++*)
+	# FIXME: insert proper C++ library support
+	_LT_AC_TAGVAR(ld_shlibs, $1)=no
+	;;
+      ghcx*)
+	# Green Hills C++ Compiler
+	# FIXME: insert proper C++ library support
+	_LT_AC_TAGVAR(ld_shlibs, $1)=no
+	;;
+      *)
+	# FIXME: insert proper C++ library support
+	_LT_AC_TAGVAR(ld_shlibs, $1)=no
+	;;
+    esac
+    ;;
+  freebsd[[12]]*)
+    # C++ shared libraries reported to be fairly broken before switch to ELF
+    _LT_AC_TAGVAR(ld_shlibs, $1)=no
+    ;;
+  freebsd-elf*)
+    _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no
+    ;;
+  freebsd* | dragonfly*)
+    # FreeBSD 3 and later use GNU C++ and GNU ld with standard ELF
+    # conventions
+    _LT_AC_TAGVAR(ld_shlibs, $1)=yes
+    ;;
+  gnu*)
+    ;;
+  hpux9*)
+    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'
+    _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:
+    _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+    _LT_AC_TAGVAR(hardcode_direct, $1)=yes
+    _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,
+				# but as the default
+				# location of the library.
+
+    case $cc_basename in
+    CC*)
+      # FIXME: insert proper C++ library support
+      _LT_AC_TAGVAR(ld_shlibs, $1)=no
+      ;;
+    aCC*)
+      _LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/$soname~$CC -b ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+      # Commands to make compiler produce verbose output that lists
+      # what "hidden" libraries, object files and flags are used when
+      # linking a shared library.
+      #
+      # There doesn't appear to be a way to prevent this compiler from
+      # explicitly linking system object files so we need to strip them
+      # from the output so that they don't get included in the library
+      # dependencies.
+      output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | grep "[[-]]L"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; echo $list'
+      ;;
+    *)
+      if test "$GXX" = yes; then
+        _LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/$soname~$CC -shared -nostdlib -fPIC ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+      else
+        # FIXME: insert proper C++ library support
+        _LT_AC_TAGVAR(ld_shlibs, $1)=no
+      fi
+      ;;
+    esac
+    ;;
+  hpux10*|hpux11*)
+    if test $with_gnu_ld = no; then
+      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'
+      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:
+
+      case $host_cpu in
+      hppa*64*|ia64*)
+	_LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)='+b $libdir'
+        ;;
+      *)
+	_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+        ;;
+      esac
+    fi
+    case $host_cpu in
+    hppa*64*|ia64*)
+      _LT_AC_TAGVAR(hardcode_direct, $1)=no
+      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+      ;;
+    *)
+      _LT_AC_TAGVAR(hardcode_direct, $1)=yes
+      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,
+					      # but as the default
+					      # location of the library.
+      ;;
+    esac
+
+    case $cc_basename in
+      CC*)
+	# FIXME: insert proper C++ library support
+	_LT_AC_TAGVAR(ld_shlibs, $1)=no
+	;;
+      aCC*)
+	case $host_cpu in
+	hppa*64*)
+	  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	  ;;
+	ia64*)
+	  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	  ;;
+	*)
+	  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	  ;;
+	esac
+	# Commands to make compiler produce verbose output that lists
+	# what "hidden" libraries, object files and flags are used when
+	# linking a shared library.
+	#
+	# There doesn't appear to be a way to prevent this compiler from
+	# explicitly linking system object files so we need to strip them
+	# from the output so that they don't get included in the library
+	# dependencies.
+	output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | grep "\-L"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; echo $list'
+	;;
+      *)
+	if test "$GXX" = yes; then
+	  if test $with_gnu_ld = no; then
+	    case $host_cpu in
+	    hppa*64*)
+	      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	      ;;
+	    ia64*)
+	      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	      ;;
+	    *)
+	      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	      ;;
+	    esac
+	  fi
+	else
+	  # FIXME: insert proper C++ library support
+	  _LT_AC_TAGVAR(ld_shlibs, $1)=no
+	fi
+	;;
+    esac
+    ;;
+  interix3*)
+    _LT_AC_TAGVAR(hardcode_direct, $1)=no
+    _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
+    _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+    # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.
+    # Instead, shared libraries are loaded at an image base (0x10000000 by
+    # default) and relocated if they conflict, which is a slow very memory
+    # consuming and fragmenting process.  To avoid this, we pick a random,
+    # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
+    # time.  Moving up from 0x10000000 also allows more sbrk(2) space.
+    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+    _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed "s,^,_," $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+    ;;
+  irix5* | irix6*)
+    case $cc_basename in
+      CC*)
+	# SGI C++
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -all -multigot $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -soname $soname `test -n "$verstring" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'
+
+	# Archives containing C++ object files must be created using
+	# "CC -ar", where "CC" is the IRIX C++ compiler.  This is
+	# necessary to make sure instantiated templates are included
+	# in the archive.
+	_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC -ar -WR,-u -o $oldlib $oldobjs'
+	;;
+      *)
+	if test "$GXX" = yes; then
+	  if test "$with_gnu_ld" = no; then
+	    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+	  else
+	    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && echo ${wl}-set_version ${wl}$verstring` -o $lib'
+	  fi
+	fi
+	_LT_AC_TAGVAR(link_all_deplibs, $1)=yes
+	;;
+    esac
+    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+    _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:
+    ;;
+  linux* | k*bsd*-gnu)
+    case $cc_basename in
+      KCC*)
+	# Kuck and Associates, Inc. (KAI) C++ Compiler
+
+	# KCC will only create a shared library if the output file
+	# ends with ".so" (or ".sl" for HP-UX), so rename the library
+	# to its proper name (with version) after linking.
+	_LT_AC_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\''s/\([[^()0-9A-Za-z{}]]\)/\\\\\1/g'\''`; templib=`echo $lib | $SED -e "s/\${tempext}\..*/.so/"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \$templib; mv \$templib $lib'
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\''s/\([[^()0-9A-Za-z{}]]\)/\\\\\1/g'\''`; templib=`echo $lib | $SED -e "s/\${tempext}\..*/.so/"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \$templib ${wl}-retain-symbols-file,$export_symbols; mv \$templib $lib'
+	# Commands to make compiler produce verbose output that lists
+	# what "hidden" libraries, object files and flags are used when
+	# linking a shared library.
+	#
+	# There doesn't appear to be a way to prevent this compiler from
+	# explicitly linking system object files so we need to strip them
+	# from the output so that they don't get included in the library
+	# dependencies.
+	output_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | grep "ld"`; rm -f libconftest$shared_ext; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; echo $list'
+
+	_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}--rpath,$libdir'
+	_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'
+
+	# Archives containing C++ object files must be created using
+	# "CC -Bstatic", where "CC" is the KAI C++ compiler.
+	_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs'
+	;;
+      icpc*)
+	# Intel C++
+	with_gnu_ld=yes
+	# version 8.0 and above of icpc choke on multiply defined symbols
+	# if we add $predep_objects and $postdep_objects, however 7.1 and
+	# earlier do not add the objects themselves.
+	case `$CC -V 2>&1` in
+	*"Version 7."*)
+  	  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'
+  	  _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+	  ;;
+	*)  # Version 8.0 or newer
+	  tmp_idyn=
+	  case $host_cpu in
+	    ia64*) tmp_idyn=' -i_dynamic';;
+	  esac
+  	  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared'"$tmp_idyn"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	  _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared'"$tmp_idyn"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+	  ;;
+	esac
+	_LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no
+	_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
+	_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'
+	_LT_AC_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive$convenience ${wl}--no-whole-archive'
+	;;
+      pgCC*)
+        # Portland Group C++ compiler
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'
+  	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'
+
+	_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}--rpath ${wl}$libdir'
+	_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'
+	_LT_AC_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $echo \"$new_convenience\"` ${wl}--no-whole-archive'
+        ;;
+      cxx*)
+	# Compaq C++
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname  -o $lib ${wl}-retain-symbols-file $wl$export_symbols'
+
+	runpath_var=LD_RUN_PATH
+	_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'
+	_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:
+
+	# Commands to make compiler produce verbose output that lists
+	# what "hidden" libraries, object files and flags are used when
+	# linking a shared library.
+	#
+	# There doesn't appear to be a way to prevent this compiler from
+	# explicitly linking system object files so we need to strip them
+	# from the output so that they don't get included in the library
+	# dependencies.
+	output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep "ld"`; templist=`echo $templist | $SED "s/\(^.*ld.*\)\( .*ld .*$\)/\1/"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; echo $list'
+	;;
+    esac
+    ;;
+  lynxos*)
+    # FIXME: insert proper C++ library support
+    _LT_AC_TAGVAR(ld_shlibs, $1)=no
+    ;;
+  m88k*)
+    # FIXME: insert proper C++ library support
+    _LT_AC_TAGVAR(ld_shlibs, $1)=no
+    ;;
+  mvs*)
+    case $cc_basename in
+      cxx*)
+	# FIXME: insert proper C++ library support
+	_LT_AC_TAGVAR(ld_shlibs, $1)=no
+	;;
+      *)
+	# FIXME: insert proper C++ library support
+	_LT_AC_TAGVAR(ld_shlibs, $1)=no
+	;;
+    esac
+    ;;
+  netbsd* | netbsdelf*-gnu)
+    if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable  -o $lib $predep_objects $libobjs $deplibs $postdep_objects $linker_flags'
+      wlarc=
+      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'
+      _LT_AC_TAGVAR(hardcode_direct, $1)=yes
+      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+    fi
+    # Workaround some broken pre-1.5 toolchains
+    output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep conftest.$objext | $SED -e "s:-lgcc -lc -lgcc::"'
+    ;;
+  openbsd2*)
+    # C++ shared libraries are fairly broken
+    _LT_AC_TAGVAR(ld_shlibs, $1)=no
+    ;;
+  openbsd*)
+    _LT_AC_TAGVAR(hardcode_direct, $1)=yes
+    _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'
+    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
+    if test -z "`echo __ELF__ | $CC -E - | grep __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+      _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-retain-symbols-file,$export_symbols -o $lib'
+      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
+    fi
+    output_verbose_link_cmd='echo'
+    ;;
+  osf3*)
+    case $cc_basename in
+      KCC*)
+	# Kuck and Associates, Inc. (KAI) C++ Compiler
+
+	# KCC will only create a shared library if the output file
+	# ends with ".so" (or ".sl" for HP-UX), so rename the library
+	# to its proper name (with version) after linking.
+	_LT_AC_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\''s/\([[^()0-9A-Za-z{}]]\)/\\\\\1/g'\''`; templib=`echo $lib | $SED -e "s/\${tempext}\..*/.so/"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \$templib; mv \$templib $lib'
+
+	_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
+	_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:
+
+	# Archives containing C++ object files must be created using
+	# "CC -Bstatic", where "CC" is the KAI C++ compiler.
+	_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs'
+
+	;;
+      RCC*)
+	# Rational C++ 2.4.1
+	# FIXME: insert proper C++ library support
+	_LT_AC_TAGVAR(ld_shlibs, $1)=no
+	;;
+      cxx*)
+	_LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\*'
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $soname `test -n "$verstring" && echo ${wl}-set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'
+
+	_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+	_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:
+
+	# Commands to make compiler produce verbose output that lists
+	# what "hidden" libraries, object files and flags are used when
+	# linking a shared library.
+	#
+	# There doesn't appear to be a way to prevent this compiler from
+	# explicitly linking system object files so we need to strip them
+	# from the output so that they don't get included in the library
+	# dependencies.
+	output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep "ld" | grep -v "ld:"`; templist=`echo $templist | $SED "s/\(^.*ld.*\)\( .*ld.*$\)/\1/"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; echo $list'
+	;;
+      *)
+	if test "$GXX" = yes && test "$with_gnu_ld" = no; then
+	  _LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\*'
+	  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+
+	  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+	  _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:
+
+	  # Commands to make compiler produce verbose output that lists
+	  # what "hidden" libraries, object files and flags are used when
+	  # linking a shared library.
+	  output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep "\-L"'
+
+	else
+	  # FIXME: insert proper C++ library support
+	  _LT_AC_TAGVAR(ld_shlibs, $1)=no
+	fi
+	;;
+    esac
+    ;;
+  osf4* | osf5*)
+    case $cc_basename in
+      KCC*)
+	# Kuck and Associates, Inc. (KAI) C++ Compiler
+
+	# KCC will only create a shared library if the output file
+	# ends with ".so" (or ".sl" for HP-UX), so rename the library
+	# to its proper name (with version) after linking.
+	_LT_AC_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\''s/\([[^()0-9A-Za-z{}]]\)/\\\\\1/g'\''`; templib=`echo $lib | $SED -e "s/\${tempext}\..*/.so/"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \$templib; mv \$templib $lib'
+
+	_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
+	_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:
+
+	# Archives containing C++ object files must be created using
+	# the KAI C++ compiler.
+	_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC -o $oldlib $oldobjs'
+	;;
+      RCC*)
+	# Rational C++ 2.4.1
+	# FIXME: insert proper C++ library support
+	_LT_AC_TAGVAR(ld_shlibs, $1)=no
+	;;
+      cxx*)
+	_LT_AC_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \*'
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname `test -n "$verstring" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf "%s %s\\n" -exported_symbol "\$i" >> $lib.exp; done~
+	  echo "-hidden">> $lib.exp~
+	  $CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname -Wl,-input -Wl,$lib.exp  `test -n "$verstring" && echo -set_version	$verstring` -update_registry ${output_objdir}/so_locations -o $lib~
+	  $rm $lib.exp'
+
+	_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'
+	_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:
+
+	# Commands to make compiler produce verbose output that lists
+	# what "hidden" libraries, object files and flags are used when
+	# linking a shared library.
+	#
+	# There doesn't appear to be a way to prevent this compiler from
+	# explicitly linking system object files so we need to strip them
+	# from the output so that they don't get included in the library
+	# dependencies.
+	output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep "ld" | grep -v "ld:"`; templist=`echo $templist | $SED "s/\(^.*ld.*\)\( .*ld.*$\)/\1/"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; echo $list'
+	;;
+      *)
+	if test "$GXX" = yes && test "$with_gnu_ld" = no; then
+	  _LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\*'
+	 _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n "$verstring" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+
+	  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+	  _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:
+
+	  # Commands to make compiler produce verbose output that lists
+	  # what "hidden" libraries, object files and flags are used when
+	  # linking a shared library.
+	  output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep "\-L"'
+
+	else
+	  # FIXME: insert proper C++ library support
+	  _LT_AC_TAGVAR(ld_shlibs, $1)=no
+	fi
+	;;
+    esac
+    ;;
+  psos*)
+    # FIXME: insert proper C++ library support
+    _LT_AC_TAGVAR(ld_shlibs, $1)=no
+    ;;
+  sunos4*)
+    case $cc_basename in
+      CC*)
+	# Sun C++ 4.x
+	# FIXME: insert proper C++ library support
+	_LT_AC_TAGVAR(ld_shlibs, $1)=no
+	;;
+      lcc*)
+	# Lucid
+	# FIXME: insert proper C++ library support
+	_LT_AC_TAGVAR(ld_shlibs, $1)=no
+	;;
+      *)
+	# FIXME: insert proper C++ library support
+	_LT_AC_TAGVAR(ld_shlibs, $1)=no
+	;;
+    esac
+    ;;
+  solaris*)
+    case $cc_basename in
+      CC*)
+	# Sun C++ 4.2, 5.x and Centerline C++
+        _LT_AC_TAGVAR(archive_cmds_need_lc,$1)=yes
+	_LT_AC_TAGVAR(no_undefined_flag, $1)=' -zdefs'
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag}  -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~$echo "local: *; };" >> $lib.exp~
+	$CC -G${allow_undefined_flag}  ${wl}-M ${wl}$lib.exp -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$rm $lib.exp'
+
+	_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'
+	_LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+	case $host_os in
+	  solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;
+	  *)
+	    # The C++ compiler is used as linker so we must use $wl
+	    # flag to pass the commands to the underlying system
+	    # linker. We must also pass each convience library through
+	    # to the system linker between allextract/defaultextract.
+	    # The C++ compiler will combine linker options so we
+	    # cannot just pass the convience library names through
+	    # without $wl.
+	    # Supported since Solaris 2.6 (maybe 2.5.1?)
+	    _LT_AC_TAGVAR(whole_archive_flag_spec, $1)='${wl}-z ${wl}allextract`for conv in $convenience\"\"; do test -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $echo \"$new_convenience\"` ${wl}-z ${wl}defaultextract'
+	    ;;
+	esac
+	_LT_AC_TAGVAR(link_all_deplibs, $1)=yes
+
+	output_verbose_link_cmd='echo'
+
+	# Archives containing C++ object files must be created using
+	# "CC -xar", where "CC" is the Sun C++ compiler.  This is
+	# necessary to make sure instantiated templates are included
+	# in the archive.
+	_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'
+	;;
+      gcx*)
+	# Green Hills C++ Compiler
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'
+
+	# The C++ compiler must be used to create the archive.
+	_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC $LDFLAGS -archive -o $oldlib $oldobjs'
+	;;
+      *)
+	# GNU C++ compiler with Solaris linker
+	if test "$GXX" = yes && test "$with_gnu_ld" = no; then
+	  _LT_AC_TAGVAR(no_undefined_flag, $1)=' ${wl}-z ${wl}defs'
+	  if $CC --version | grep -v '^2\.7' > /dev/null; then
+	    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'
+	    _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~$echo "local: *; };" >> $lib.exp~
+		$CC -shared -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$rm $lib.exp'
+
+	    # Commands to make compiler produce verbose output that lists
+	    # what "hidden" libraries, object files and flags are used when
+	    # linking a shared library.
+	    output_verbose_link_cmd="$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep \"\-L\""
+	  else
+	    # g++ 2.7 appears to require `-G' NOT `-shared' on this
+	    # platform.
+	    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -G -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'
+	    _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~$echo "local: *; };" >> $lib.exp~
+		$CC -G -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$rm $lib.exp'
+
+	    # Commands to make compiler produce verbose output that lists
+	    # what "hidden" libraries, object files and flags are used when
+	    # linking a shared library.
+	    output_verbose_link_cmd="$CC -G $CFLAGS -v conftest.$objext 2>&1 | grep \"\-L\""
+	  fi
+
+	  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $wl$libdir'
+	fi
+	;;
+    esac
+    ;;
+  sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)
+    _LT_AC_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'
+    _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no
+    _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+    runpath_var='LD_RUN_PATH'
+
+    case $cc_basename in
+      CC*)
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	;;
+      *)
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	;;
+    esac
+    ;;
+  sysv5* | sco3.2v5* | sco5v6*)
+    # Note: We can NOT use -z defs as we might desire, because we do not
+    # link with -lc, and that would cause any symbols used from libc to
+    # always be unresolved, which means just about no library would
+    # ever link correctly.  If we're not using GNU ld we use -z text
+    # though, which does catch some bad symbols but isn't as heavy-handed
+    # as -z defs.
+    # For security reasons, it is highly recommended that you always
+    # use absolute paths for naming shared libraries, and exclude the
+    # DT_RUNPATH tag from executables and libraries.  But doing so
+    # requires that you compile everything twice, which is a pain.
+    # So that behaviour is only enabled if SCOABSPATH is set to a
+    # non-empty value in the environment.  Most likely only useful for
+    # creating official distributions of packages.
+    # This is a hack until libtool officially supports absolute path
+    # names for shared libraries.
+    _LT_AC_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'
+    _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-z,nodefs'
+    _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no
+    _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='`test -z "$SCOABSPATH" && echo ${wl}-R,$libdir`'
+    _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=':'
+    _LT_AC_TAGVAR(link_all_deplibs, $1)=yes
+    _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Bexport'
+    runpath_var='LD_RUN_PATH'
+
+    case $cc_basename in
+      CC*)
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	;;
+      *)
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	;;
+    esac
+    ;;
+  tandem*)
+    case $cc_basename in
+      NCC*)
+	# NonStop-UX NCC 3.20
+	# FIXME: insert proper C++ library support
+	_LT_AC_TAGVAR(ld_shlibs, $1)=no
+	;;
+      *)
+	# FIXME: insert proper C++ library support
+	_LT_AC_TAGVAR(ld_shlibs, $1)=no
+	;;
+    esac
+    ;;
+  vxworks*)
+    # FIXME: insert proper C++ library support
+    _LT_AC_TAGVAR(ld_shlibs, $1)=no
+    ;;
+  *)
+    # FIXME: insert proper C++ library support
+    _LT_AC_TAGVAR(ld_shlibs, $1)=no
+    ;;
+esac
+AC_MSG_RESULT([$_LT_AC_TAGVAR(ld_shlibs, $1)])
+test "$_LT_AC_TAGVAR(ld_shlibs, $1)" = no && can_build_shared=no
+
+_LT_AC_TAGVAR(GCC, $1)="$GXX"
+_LT_AC_TAGVAR(LD, $1)="$LD"
+
+AC_LIBTOOL_POSTDEP_PREDEP($1)
+AC_LIBTOOL_PROG_COMPILER_PIC($1)
+AC_LIBTOOL_PROG_CC_C_O($1)
+AC_LIBTOOL_SYS_HARD_LINK_LOCKS($1)
+AC_LIBTOOL_PROG_LD_SHLIBS($1)
+AC_LIBTOOL_SYS_DYNAMIC_LINKER($1)
+AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH($1)
+
+AC_LIBTOOL_CONFIG($1)
+
+AC_LANG_POP
+CC=$lt_save_CC
+LDCXX=$LD
+LD=$lt_save_LD
+GCC=$lt_save_GCC
+with_gnu_ldcxx=$with_gnu_ld
+with_gnu_ld=$lt_save_with_gnu_ld
+lt_cv_path_LDCXX=$lt_cv_path_LD
+lt_cv_path_LD=$lt_save_path_LD
+lt_cv_prog_gnu_ldcxx=$lt_cv_prog_gnu_ld
+lt_cv_prog_gnu_ld=$lt_save_with_gnu_ld
+])# AC_LIBTOOL_LANG_CXX_CONFIG
+
+# AC_LIBTOOL_POSTDEP_PREDEP([TAGNAME])
+# ------------------------------------
+# Figure out "hidden" library dependencies from verbose
+# compiler output when linking a shared library.
+# Parse the compiler output and extract the necessary
+# objects, libraries and library flags.
+AC_DEFUN([AC_LIBTOOL_POSTDEP_PREDEP],[
+dnl we can't use the lt_simple_compile_test_code here,
+dnl because it contains code intended for an executable,
+dnl not a library.  It's possible we should let each
+dnl tag define a new lt_????_link_test_code variable,
+dnl but it's only used here...
+ifelse([$1],[],[cat > conftest.$ac_ext <<EOF
+int a;
+void foo (void) { a = 0; }
+EOF
+],[$1],[CXX],[cat > conftest.$ac_ext <<EOF
+class Foo
+{
+public:
+  Foo (void) { a = 0; }
+private:
+  int a;
+};
+EOF
+],[$1],[F77],[cat > conftest.$ac_ext <<EOF
+      subroutine foo
+      implicit none
+      integer*4 a
+      a=0
+      return
+      end
+EOF
+],[$1],[GCJ],[cat > conftest.$ac_ext <<EOF
+public class foo {
+  private int a;
+  public void bar (void) {
+    a = 0;
+  }
+};
+EOF
+])
+dnl Parse the compiler output and extract the necessary
+dnl objects, libraries and library flags.
+if AC_TRY_EVAL(ac_compile); then
+  # Parse the compiler output and extract the necessary
+  # objects, libraries and library flags.
+
+  # Sentinel used to keep track of whether or not we are before
+  # the conftest object file.
+  pre_test_object_deps_done=no
+
+  # The `*' in the case matches for architectures that use `case' in
+  # $output_verbose_cmd can trigger glob expansion during the loop
+  # eval without this substitution.
+  output_verbose_link_cmd=`$echo "X$output_verbose_link_cmd" | $Xsed -e "$no_glob_subst"`
+
+  for p in `eval $output_verbose_link_cmd`; do
+    case $p in
+
+    -L* | -R* | -l*)
+       # Some compilers place space between "-{L,R}" and the path.
+       # Remove the space.
+       if test $p = "-L" \
+	  || test $p = "-R"; then
+	 prev=$p
+	 continue
+       else
+	 prev=
+       fi
+
+       if test "$pre_test_object_deps_done" = no; then
+	 case $p in
+	 -L* | -R*)
+	   # Internal compiler library paths should come after those
+	   # provided the user.  The postdeps already come after the
+	   # user supplied libs so there is no need to process them.
+	   if test -z "$_LT_AC_TAGVAR(compiler_lib_search_path, $1)"; then
+	     _LT_AC_TAGVAR(compiler_lib_search_path, $1)="${prev}${p}"
+	   else
+	     _LT_AC_TAGVAR(compiler_lib_search_path, $1)="${_LT_AC_TAGVAR(compiler_lib_search_path, $1)} ${prev}${p}"
+	   fi
+	   ;;
+	 # The "-l" case would never come before the object being
+	 # linked, so don't bother handling this case.
+	 esac
+       else
+	 if test -z "$_LT_AC_TAGVAR(postdeps, $1)"; then
+	   _LT_AC_TAGVAR(postdeps, $1)="${prev}${p}"
+	 else
+	   _LT_AC_TAGVAR(postdeps, $1)="${_LT_AC_TAGVAR(postdeps, $1)} ${prev}${p}"
+	 fi
+       fi
+       ;;
+
+    *.$objext)
+       # This assumes that the test object file only shows up
+       # once in the compiler output.
+       if test "$p" = "conftest.$objext"; then
+	 pre_test_object_deps_done=yes
+	 continue
+       fi
+
+       if test "$pre_test_object_deps_done" = no; then
+	 if test -z "$_LT_AC_TAGVAR(predep_objects, $1)"; then
+	   _LT_AC_TAGVAR(predep_objects, $1)="$p"
+	 else
+	   _LT_AC_TAGVAR(predep_objects, $1)="$_LT_AC_TAGVAR(predep_objects, $1) $p"
+	 fi
+       else
+	 if test -z "$_LT_AC_TAGVAR(postdep_objects, $1)"; then
+	   _LT_AC_TAGVAR(postdep_objects, $1)="$p"
+	 else
+	   _LT_AC_TAGVAR(postdep_objects, $1)="$_LT_AC_TAGVAR(postdep_objects, $1) $p"
+	 fi
+       fi
+       ;;
+
+    *) ;; # Ignore the rest.
+
+    esac
+  done
+
+  # Clean up.
+  rm -f a.out a.exe
+else
+  echo "libtool.m4: error: problem compiling $1 test program"
+fi
+
+$rm -f confest.$objext
+
+# PORTME: override above test on systems where it is broken
+ifelse([$1],[CXX],
+[case $host_os in
+interix3*)
+  # Interix 3.5 installs completely hosed .la files for C++, so rather than
+  # hack all around it, let's just trust "g++" to DTRT.
+  _LT_AC_TAGVAR(predep_objects,$1)=
+  _LT_AC_TAGVAR(postdep_objects,$1)=
+  _LT_AC_TAGVAR(postdeps,$1)=
+  ;;
+
+solaris*)
+  case $cc_basename in
+  CC*)
+    # Adding this requires a known-good setup of shared libraries for
+    # Sun compiler versions before 5.6, else PIC objects from an old
+    # archive will be linked into the output, leading to subtle bugs.
+    _LT_AC_TAGVAR(postdeps,$1)='-lCstd -lCrun'
+    ;;
+  esac
+  ;;
+esac
+])
+
+case " $_LT_AC_TAGVAR(postdeps, $1) " in
+*" -lc "*) _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no ;;
+esac
+])# AC_LIBTOOL_POSTDEP_PREDEP
+
+# AC_LIBTOOL_LANG_F77_CONFIG
+# --------------------------
+# Ensure that the configuration vars for the C compiler are
+# suitably defined.  Those variables are subsequently used by
+# AC_LIBTOOL_CONFIG to write the compiler configuration to `libtool'.
+AC_DEFUN([AC_LIBTOOL_LANG_F77_CONFIG], [_LT_AC_LANG_F77_CONFIG(F77)])
+AC_DEFUN([_LT_AC_LANG_F77_CONFIG],
+[AC_REQUIRE([AC_PROG_F77])
+AC_LANG_PUSH(Fortran 77)
+
+_LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no
+_LT_AC_TAGVAR(allow_undefined_flag, $1)=
+_LT_AC_TAGVAR(always_export_symbols, $1)=no
+_LT_AC_TAGVAR(archive_expsym_cmds, $1)=
+_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)=
+_LT_AC_TAGVAR(hardcode_direct, $1)=no
+_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)=
+_LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=
+_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=
+_LT_AC_TAGVAR(hardcode_minus_L, $1)=no
+_LT_AC_TAGVAR(hardcode_automatic, $1)=no
+_LT_AC_TAGVAR(module_cmds, $1)=
+_LT_AC_TAGVAR(module_expsym_cmds, $1)=
+_LT_AC_TAGVAR(link_all_deplibs, $1)=unknown
+_LT_AC_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds
+_LT_AC_TAGVAR(no_undefined_flag, $1)=
+_LT_AC_TAGVAR(whole_archive_flag_spec, $1)=
+_LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=no
+
+# Source file extension for f77 test sources.
+ac_ext=f
+
+# Object file extension for compiled f77 test sources.
+objext=o
+_LT_AC_TAGVAR(objext, $1)=$objext
+
+# Code to be used in simple compile tests
+lt_simple_compile_test_code="      subroutine t\n      return\n      end\n"
+
+# Code to be used in simple link tests
+lt_simple_link_test_code="      program t\n      end\n"
+
+# ltmain only uses $CC for tagged configurations so make sure $CC is set.
+_LT_AC_SYS_COMPILER
+
+# save warnings/boilerplate of simple test code
+_LT_COMPILER_BOILERPLATE
+_LT_LINKER_BOILERPLATE
+
+# Allow CC to be a program name with arguments.
+lt_save_CC="$CC"
+CC=${F77-"f77"}
+compiler=$CC
+_LT_AC_TAGVAR(compiler, $1)=$CC
+_LT_CC_BASENAME([$compiler])
+
+AC_MSG_CHECKING([if libtool supports shared libraries])
+AC_MSG_RESULT([$can_build_shared])
+
+AC_MSG_CHECKING([whether to build shared libraries])
+test "$can_build_shared" = "no" && enable_shared=no
+
+# On AIX, shared libraries and static libraries use the same namespace, and
+# are all built from PIC.
+case $host_os in
+aix3*)
+  test "$enable_shared" = yes && enable_static=no
+  if test -n "$RANLIB"; then
+    archive_cmds="$archive_cmds~\$RANLIB \$lib"
+    postinstall_cmds='$RANLIB $lib'
+  fi
+  ;;
+aix4* | aix5*)
+  if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
+    test "$enable_shared" = yes && enable_static=no
+  fi
+  ;;
+esac
+AC_MSG_RESULT([$enable_shared])
+
+AC_MSG_CHECKING([whether to build static libraries])
+# Make sure either enable_shared or enable_static is yes.
+test "$enable_shared" = yes || enable_static=yes
+AC_MSG_RESULT([$enable_static])
+
+_LT_AC_TAGVAR(GCC, $1)="$G77"
+_LT_AC_TAGVAR(LD, $1)="$LD"
+
+AC_LIBTOOL_PROG_COMPILER_PIC($1)
+AC_LIBTOOL_PROG_CC_C_O($1)
+AC_LIBTOOL_SYS_HARD_LINK_LOCKS($1)
+AC_LIBTOOL_PROG_LD_SHLIBS($1)
+AC_LIBTOOL_SYS_DYNAMIC_LINKER($1)
+AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH($1)
+
+AC_LIBTOOL_CONFIG($1)
+
+AC_LANG_POP
+CC="$lt_save_CC"
+])# AC_LIBTOOL_LANG_F77_CONFIG
+
+
+# AC_LIBTOOL_LANG_GCJ_CONFIG
+# --------------------------
+# Ensure that the configuration vars for the C compiler are
+# suitably defined.  Those variables are subsequently used by
+# AC_LIBTOOL_CONFIG to write the compiler configuration to `libtool'.
+AC_DEFUN([AC_LIBTOOL_LANG_GCJ_CONFIG], [_LT_AC_LANG_GCJ_CONFIG(GCJ)])
+AC_DEFUN([_LT_AC_LANG_GCJ_CONFIG],
+[AC_LANG_SAVE
+
+# Source file extension for Java test sources.
+ac_ext=java
+
+# Object file extension for compiled Java test sources.
+objext=o
+_LT_AC_TAGVAR(objext, $1)=$objext
+
+# Code to be used in simple compile tests
+lt_simple_compile_test_code="class foo {}\n"
+
+# Code to be used in simple link tests
+lt_simple_link_test_code='public class conftest { public static void main(String[[]] argv) {}; }\n'
+
+# ltmain only uses $CC for tagged configurations so make sure $CC is set.
+_LT_AC_SYS_COMPILER
+
+# save warnings/boilerplate of simple test code
+_LT_COMPILER_BOILERPLATE
+_LT_LINKER_BOILERPLATE
+
+# Allow CC to be a program name with arguments.
+lt_save_CC="$CC"
+CC=${GCJ-"gcj"}
+compiler=$CC
+_LT_AC_TAGVAR(compiler, $1)=$CC
+_LT_CC_BASENAME([$compiler])
+
+# GCJ did not exist at the time GCC didn't implicitly link libc in.
+_LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no
+
+_LT_AC_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds
+
+AC_LIBTOOL_PROG_COMPILER_NO_RTTI($1)
+AC_LIBTOOL_PROG_COMPILER_PIC($1)
+AC_LIBTOOL_PROG_CC_C_O($1)
+AC_LIBTOOL_SYS_HARD_LINK_LOCKS($1)
+AC_LIBTOOL_PROG_LD_SHLIBS($1)
+AC_LIBTOOL_SYS_DYNAMIC_LINKER($1)
+AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH($1)
+
+AC_LIBTOOL_CONFIG($1)
+
+AC_LANG_RESTORE
+CC="$lt_save_CC"
+])# AC_LIBTOOL_LANG_GCJ_CONFIG
+
+
+# AC_LIBTOOL_LANG_RC_CONFIG
+# -------------------------
+# Ensure that the configuration vars for the Windows resource compiler are
+# suitably defined.  Those variables are subsequently used by
+# AC_LIBTOOL_CONFIG to write the compiler configuration to `libtool'.
+AC_DEFUN([AC_LIBTOOL_LANG_RC_CONFIG], [_LT_AC_LANG_RC_CONFIG(RC)])
+AC_DEFUN([_LT_AC_LANG_RC_CONFIG],
+[AC_LANG_SAVE
+
+# Source file extension for RC test sources.
+ac_ext=rc
+
+# Object file extension for compiled RC test sources.
+objext=o
+_LT_AC_TAGVAR(objext, $1)=$objext
+
+# Code to be used in simple compile tests
+lt_simple_compile_test_code='sample MENU { MENUITEM "&Soup", 100, CHECKED }\n'
+
+# Code to be used in simple link tests
+lt_simple_link_test_code="$lt_simple_compile_test_code"
+
+# ltmain only uses $CC for tagged configurations so make sure $CC is set.
+_LT_AC_SYS_COMPILER
+
+# save warnings/boilerplate of simple test code
+_LT_COMPILER_BOILERPLATE
+_LT_LINKER_BOILERPLATE
+
+# Allow CC to be a program name with arguments.
+lt_save_CC="$CC"
+CC=${RC-"windres"}
+compiler=$CC
+_LT_AC_TAGVAR(compiler, $1)=$CC
+_LT_CC_BASENAME([$compiler])
+_LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes
+
+AC_LIBTOOL_CONFIG($1)
+
+AC_LANG_RESTORE
+CC="$lt_save_CC"
+])# AC_LIBTOOL_LANG_RC_CONFIG
+
+
+# AC_LIBTOOL_CONFIG([TAGNAME])
+# ----------------------------
+# If TAGNAME is not passed, then create an initial libtool script
+# with a default configuration from the untagged config vars.  Otherwise
+# add code to config.status for appending the configuration named by
+# TAGNAME from the matching tagged config vars.
+AC_DEFUN([AC_LIBTOOL_CONFIG],
+[# The else clause should only fire when bootstrapping the
+# libtool distribution, otherwise you forgot to ship ltmain.sh
+# with your package, and you will get complaints that there are
+# no rules to generate ltmain.sh.
+if test -f "$ltmain"; then
+  # See if we are running on zsh, and set the options which allow our commands through
+  # without removal of \ escapes.
+  if test -n "${ZSH_VERSION+set}" ; then
+    setopt NO_GLOB_SUBST
+  fi
+  # Now quote all the things that may contain metacharacters while being
+  # careful not to overquote the AC_SUBSTed values.  We take copies of the
+  # variables and quote the copies for generation of the libtool script.
+  for var in echo old_CC old_CFLAGS AR AR_FLAGS EGREP RANLIB LN_S LTCC LTCFLAGS NM \
+    SED SHELL STRIP \
+    libname_spec library_names_spec soname_spec extract_expsyms_cmds \
+    old_striplib striplib file_magic_cmd finish_cmds finish_eval \
+    deplibs_check_method reload_flag reload_cmds need_locks \
+    lt_cv_sys_global_symbol_pipe lt_cv_sys_global_symbol_to_cdecl \
+    lt_cv_sys_global_symbol_to_c_name_address \
+    sys_lib_search_path_spec sys_lib_dlsearch_path_spec \
+    old_postinstall_cmds old_postuninstall_cmds \
+    _LT_AC_TAGVAR(compiler, $1) \
+    _LT_AC_TAGVAR(CC, $1) \
+    _LT_AC_TAGVAR(LD, $1) \
+    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1) \
+    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1) \
+    _LT_AC_TAGVAR(lt_prog_compiler_static, $1) \
+    _LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1) \
+    _LT_AC_TAGVAR(export_dynamic_flag_spec, $1) \
+    _LT_AC_TAGVAR(thread_safe_flag_spec, $1) \
+    _LT_AC_TAGVAR(whole_archive_flag_spec, $1) \
+    _LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1) \
+    _LT_AC_TAGVAR(old_archive_cmds, $1) \
+    _LT_AC_TAGVAR(old_archive_from_new_cmds, $1) \
+    _LT_AC_TAGVAR(predep_objects, $1) \
+    _LT_AC_TAGVAR(postdep_objects, $1) \
+    _LT_AC_TAGVAR(predeps, $1) \
+    _LT_AC_TAGVAR(postdeps, $1) \
+    _LT_AC_TAGVAR(compiler_lib_search_path, $1) \
+    _LT_AC_TAGVAR(archive_cmds, $1) \
+    _LT_AC_TAGVAR(archive_expsym_cmds, $1) \
+    _LT_AC_TAGVAR(postinstall_cmds, $1) \
+    _LT_AC_TAGVAR(postuninstall_cmds, $1) \
+    _LT_AC_TAGVAR(old_archive_from_expsyms_cmds, $1) \
+    _LT_AC_TAGVAR(allow_undefined_flag, $1) \
+    _LT_AC_TAGVAR(no_undefined_flag, $1) \
+    _LT_AC_TAGVAR(export_symbols_cmds, $1) \
+    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1) \
+    _LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1) \
+    _LT_AC_TAGVAR(hardcode_libdir_separator, $1) \
+    _LT_AC_TAGVAR(hardcode_automatic, $1) \
+    _LT_AC_TAGVAR(module_cmds, $1) \
+    _LT_AC_TAGVAR(module_expsym_cmds, $1) \
+    _LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1) \
+    _LT_AC_TAGVAR(exclude_expsyms, $1) \
+    _LT_AC_TAGVAR(include_expsyms, $1); do
+
+    case $var in
+    _LT_AC_TAGVAR(old_archive_cmds, $1) | \
+    _LT_AC_TAGVAR(old_archive_from_new_cmds, $1) | \
+    _LT_AC_TAGVAR(archive_cmds, $1) | \
+    _LT_AC_TAGVAR(archive_expsym_cmds, $1) | \
+    _LT_AC_TAGVAR(module_cmds, $1) | \
+    _LT_AC_TAGVAR(module_expsym_cmds, $1) | \
+    _LT_AC_TAGVAR(old_archive_from_expsyms_cmds, $1) | \
+    _LT_AC_TAGVAR(export_symbols_cmds, $1) | \
+    extract_expsyms_cmds | reload_cmds | finish_cmds | \
+    postinstall_cmds | postuninstall_cmds | \
+    old_postinstall_cmds | old_postuninstall_cmds | \
+    sys_lib_search_path_spec | sys_lib_dlsearch_path_spec)
+      # Double-quote double-evaled strings.
+      eval "lt_$var=\\\"\`\$echo \"X\$$var\" | \$Xsed -e \"\$double_quote_subst\" -e \"\$sed_quote_subst\" -e \"\$delay_variable_subst\"\`\\\""
+      ;;
+    *)
+      eval "lt_$var=\\\"\`\$echo \"X\$$var\" | \$Xsed -e \"\$sed_quote_subst\"\`\\\""
+      ;;
+    esac
+  done
+
+  case $lt_echo in
+  *'\[$]0 --fallback-echo"')
+    lt_echo=`$echo "X$lt_echo" | $Xsed -e 's/\\\\\\\[$]0 --fallback-echo"[$]/[$]0 --fallback-echo"/'`
+    ;;
+  esac
+
+ifelse([$1], [],
+  [cfgfile="${ofile}T"
+  trap "$rm \"$cfgfile\"; exit 1" 1 2 15
+  $rm -f "$cfgfile"
+  AC_MSG_NOTICE([creating $ofile])],
+  [cfgfile="$ofile"])
+
+  cat <<__EOF__ >> "$cfgfile"
+ifelse([$1], [],
+[#! $SHELL
+
+# `$echo "$cfgfile" | sed 's%^.*/%%'` - Provide generalized library-building support services.
+# Generated automatically by $PROGRAM (GNU $PACKAGE $VERSION$TIMESTAMP)
+# NOTE: Changes made to this file will be lost: look at ltmain.sh.
+#
+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001
+# Free Software Foundation, Inc.
+#
+# This file is part of GNU Libtool:
+# Originally by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+#
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+# A sed program that does not truncate output.
+SED=$lt_SED
+
+# Sed that helps us avoid accidentally triggering echo(1) options like -n.
+Xsed="$SED -e 1s/^X//"
+
+# The HP-UX ksh and POSIX shell print the target directory to stdout
+# if CDPATH is set.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+# The names of the tagged configurations supported by this script.
+available_tags=
+
+# ### BEGIN LIBTOOL CONFIG],
+[# ### BEGIN LIBTOOL TAG CONFIG: $tagname])
+
+# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
+
+# Shell to use when invoking shell scripts.
+SHELL=$lt_SHELL
+
+# Whether or not to build shared libraries.
+build_libtool_libs=$enable_shared
+
+# Whether or not to build static libraries.
+build_old_libs=$enable_static
+
+# Whether or not to add -lc for building shared libraries.
+build_libtool_need_lc=$_LT_AC_TAGVAR(archive_cmds_need_lc, $1)
+
+# Whether or not to disallow shared libs when runtime libs are static
+allow_libtool_libs_with_static_runtimes=$_LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)
+
+# Whether or not to optimize for fast installation.
+fast_install=$enable_fast_install
+
+# The host system.
+host_alias=$host_alias
+host=$host
+host_os=$host_os
+
+# The build system.
+build_alias=$build_alias
+build=$build
+build_os=$build_os
+
+# An echo program that does not interpret backslashes.
+echo=$lt_echo
+
+# The archiver.
+AR=$lt_AR
+AR_FLAGS=$lt_AR_FLAGS
+
+# A C compiler.
+LTCC=$lt_LTCC
+
+# LTCC compiler flags.
+LTCFLAGS=$lt_LTCFLAGS
+
+# A language-specific compiler.
+CC=$lt_[]_LT_AC_TAGVAR(compiler, $1)
+
+# Is the compiler the GNU C compiler?
+with_gcc=$_LT_AC_TAGVAR(GCC, $1)
+
+# An ERE matcher.
+EGREP=$lt_EGREP
+
+# The linker used to build libraries.
+LD=$lt_[]_LT_AC_TAGVAR(LD, $1)
+
+# Whether we need hard or soft links.
+LN_S=$lt_LN_S
+
+# A BSD-compatible nm program.
+NM=$lt_NM
+
+# A symbol stripping program
+STRIP=$lt_STRIP
+
+# Used to examine libraries when file_magic_cmd begins "file"
+MAGIC_CMD=$MAGIC_CMD
+
+# Used on cygwin: DLL creation program.
+DLLTOOL="$DLLTOOL"
+
+# Used on cygwin: object dumper.
+OBJDUMP="$OBJDUMP"
+
+# Used on cygwin: assembler.
+AS="$AS"
+
+# The name of the directory that contains temporary libtool files.
+objdir=$objdir
+
+# How to create reloadable object files.
+reload_flag=$lt_reload_flag
+reload_cmds=$lt_reload_cmds
+
+# How to pass a linker flag through the compiler.
+wl=$lt_[]_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)
+
+# Object file suffix (normally "o").
+objext="$ac_objext"
+
+# Old archive suffix (normally "a").
+libext="$libext"
+
+# Shared library suffix (normally ".so").
+shrext_cmds='$shrext_cmds'
+
+# Executable file suffix (normally "").
+exeext="$exeext"
+
+# Additional compiler flags for building library objects.
+pic_flag=$lt_[]_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)
+pic_mode=$pic_mode
+
+# What is the maximum length of a command?
+max_cmd_len=$lt_cv_sys_max_cmd_len
+
+# Does compiler simultaneously support -c and -o options?
+compiler_c_o=$lt_[]_LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)
+
+# Must we lock files when doing compilation?
+need_locks=$lt_need_locks
+
+# Do we need the lib prefix for modules?
+need_lib_prefix=$need_lib_prefix
+
+# Do we need a version for libraries?
+need_version=$need_version
+
+# Whether dlopen is supported.
+dlopen_support=$enable_dlopen
+
+# Whether dlopen of programs is supported.
+dlopen_self=$enable_dlopen_self
+
+# Whether dlopen of statically linked programs is supported.
+dlopen_self_static=$enable_dlopen_self_static
+
+# Compiler flag to prevent dynamic linking.
+link_static_flag=$lt_[]_LT_AC_TAGVAR(lt_prog_compiler_static, $1)
+
+# Compiler flag to turn off builtin functions.
+no_builtin_flag=$lt_[]_LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)
+
+# Compiler flag to allow reflexive dlopens.
+export_dynamic_flag_spec=$lt_[]_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)
+
+# Compiler flag to generate shared objects directly from archives.
+whole_archive_flag_spec=$lt_[]_LT_AC_TAGVAR(whole_archive_flag_spec, $1)
+
+# Compiler flag to generate thread-safe objects.
+thread_safe_flag_spec=$lt_[]_LT_AC_TAGVAR(thread_safe_flag_spec, $1)
+
+# Library versioning type.
+version_type=$version_type
+
+# Format of library name prefix.
+libname_spec=$lt_libname_spec
+
+# List of archive names.  First name is the real one, the rest are links.
+# The last name is the one that the linker finds with -lNAME.
+library_names_spec=$lt_library_names_spec
+
+# The coded name of the library, if different from the real name.
+soname_spec=$lt_soname_spec
+
+# Commands used to build and install an old-style archive.
+RANLIB=$lt_RANLIB
+old_archive_cmds=$lt_[]_LT_AC_TAGVAR(old_archive_cmds, $1)
+old_postinstall_cmds=$lt_old_postinstall_cmds
+old_postuninstall_cmds=$lt_old_postuninstall_cmds
+
+# Create an old-style archive from a shared archive.
+old_archive_from_new_cmds=$lt_[]_LT_AC_TAGVAR(old_archive_from_new_cmds, $1)
+
+# Create a temporary old-style archive to link instead of a shared archive.
+old_archive_from_expsyms_cmds=$lt_[]_LT_AC_TAGVAR(old_archive_from_expsyms_cmds, $1)
+
+# Commands used to build and install a shared archive.
+archive_cmds=$lt_[]_LT_AC_TAGVAR(archive_cmds, $1)
+archive_expsym_cmds=$lt_[]_LT_AC_TAGVAR(archive_expsym_cmds, $1)
+postinstall_cmds=$lt_postinstall_cmds
+postuninstall_cmds=$lt_postuninstall_cmds
+
+# Commands used to build a loadable module (assumed same as above if empty)
+module_cmds=$lt_[]_LT_AC_TAGVAR(module_cmds, $1)
+module_expsym_cmds=$lt_[]_LT_AC_TAGVAR(module_expsym_cmds, $1)
+
+# Commands to strip libraries.
+old_striplib=$lt_old_striplib
+striplib=$lt_striplib
+
+# Dependencies to place before the objects being linked to create a
+# shared library.
+predep_objects=$lt_[]_LT_AC_TAGVAR(predep_objects, $1)
+
+# Dependencies to place after the objects being linked to create a
+# shared library.
+postdep_objects=$lt_[]_LT_AC_TAGVAR(postdep_objects, $1)
+
+# Dependencies to place before the objects being linked to create a
+# shared library.
+predeps=$lt_[]_LT_AC_TAGVAR(predeps, $1)
+
+# Dependencies to place after the objects being linked to create a
+# shared library.
+postdeps=$lt_[]_LT_AC_TAGVAR(postdeps, $1)
+
+# The library search path used internally by the compiler when linking
+# a shared library.
+compiler_lib_search_path=$lt_[]_LT_AC_TAGVAR(compiler_lib_search_path, $1)
+
+# Method to check whether dependent libraries are shared objects.
+deplibs_check_method=$lt_deplibs_check_method
+
+# Command to use when deplibs_check_method == file_magic.
+file_magic_cmd=$lt_file_magic_cmd
+
+# Flag that allows shared libraries with undefined symbols to be built.
+allow_undefined_flag=$lt_[]_LT_AC_TAGVAR(allow_undefined_flag, $1)
+
+# Flag that forces no undefined symbols.
+no_undefined_flag=$lt_[]_LT_AC_TAGVAR(no_undefined_flag, $1)
+
+# Commands used to finish a libtool library installation in a directory.
+finish_cmds=$lt_finish_cmds
+
+# Same as above, but a single script fragment to be evaled but not shown.
+finish_eval=$lt_finish_eval
+
+# Take the output of nm and produce a listing of raw symbols and C names.
+global_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe
+
+# Transform the output of nm in a proper C declaration
+global_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl
+
+# Transform the output of nm in a C name address pair
+global_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address
+
+# This is the shared library runtime path variable.
+runpath_var=$runpath_var
+
+# This is the shared library path variable.
+shlibpath_var=$shlibpath_var
+
+# Is shlibpath searched before the hard-coded library search path?
+shlibpath_overrides_runpath=$shlibpath_overrides_runpath
+
+# How to hardcode a shared library path into an executable.
+hardcode_action=$_LT_AC_TAGVAR(hardcode_action, $1)
+
+# Whether we should hardcode library paths into libraries.
+hardcode_into_libs=$hardcode_into_libs
+
+# Flag to hardcode \$libdir into a binary during linking.
+# This must work even if \$libdir does not exist.
+hardcode_libdir_flag_spec=$lt_[]_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)
+
+# If ld is used when linking, flag to hardcode \$libdir into
+# a binary during linking. This must work even if \$libdir does
+# not exist.
+hardcode_libdir_flag_spec_ld=$lt_[]_LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)
+
+# Whether we need a single -rpath flag with a separated argument.
+hardcode_libdir_separator=$lt_[]_LT_AC_TAGVAR(hardcode_libdir_separator, $1)
+
+# Set to yes if using DIR/libNAME${shared_ext} during linking hardcodes DIR into the
+# resulting binary.
+hardcode_direct=$_LT_AC_TAGVAR(hardcode_direct, $1)
+
+# Set to yes if using the -LDIR flag during linking hardcodes DIR into the
+# resulting binary.
+hardcode_minus_L=$_LT_AC_TAGVAR(hardcode_minus_L, $1)
+
+# Set to yes if using SHLIBPATH_VAR=DIR during linking hardcodes DIR into
+# the resulting binary.
+hardcode_shlibpath_var=$_LT_AC_TAGVAR(hardcode_shlibpath_var, $1)
+
+# Set to yes if building a shared library automatically hardcodes DIR into the library
+# and all subsequent libraries and executables linked against it.
+hardcode_automatic=$_LT_AC_TAGVAR(hardcode_automatic, $1)
+
+# Variables whose values should be saved in libtool wrapper scripts and
+# restored at relink time.
+variables_saved_for_relink="$variables_saved_for_relink"
+
+# Whether libtool must link a program against all its dependency libraries.
+link_all_deplibs=$_LT_AC_TAGVAR(link_all_deplibs, $1)
+
+# Compile-time system search path for libraries
+sys_lib_search_path_spec=$lt_sys_lib_search_path_spec
+
+# Run-time system search path for libraries
+sys_lib_dlsearch_path_spec=$lt_sys_lib_dlsearch_path_spec
+
+# Fix the shell variable \$srcfile for the compiler.
+fix_srcfile_path="$_LT_AC_TAGVAR(fix_srcfile_path, $1)"
+
+# Set to yes if exported symbols are required.
+always_export_symbols=$_LT_AC_TAGVAR(always_export_symbols, $1)
+
+# The commands to list exported symbols.
+export_symbols_cmds=$lt_[]_LT_AC_TAGVAR(export_symbols_cmds, $1)
+
+# The commands to extract the exported symbol list from a shared archive.
+extract_expsyms_cmds=$lt_extract_expsyms_cmds
+
+# Symbols that should not be listed in the preloaded symbols.
+exclude_expsyms=$lt_[]_LT_AC_TAGVAR(exclude_expsyms, $1)
+
+# Symbols that must always be exported.
+include_expsyms=$lt_[]_LT_AC_TAGVAR(include_expsyms, $1)
+
+ifelse([$1],[],
+[# ### END LIBTOOL CONFIG],
+[# ### END LIBTOOL TAG CONFIG: $tagname])
+
+__EOF__
+
+ifelse([$1],[], [
+  case $host_os in
+  aix3*)
+    cat <<\EOF >> "$cfgfile"
+
+# AIX sometimes has problems with the GCC collect2 program.  For some
+# reason, if we set the COLLECT_NAMES environment variable, the problems
+# vanish in a puff of smoke.
+if test "X${COLLECT_NAMES+set}" != Xset; then
+  COLLECT_NAMES=
+  export COLLECT_NAMES
+fi
+EOF
+    ;;
+  esac
+
+  # We use sed instead of cat because bash on DJGPP gets confused if
+  # if finds mixed CR/LF and LF-only lines.  Since sed operates in
+  # text mode, it properly converts lines to CR/LF.  This bash problem
+  # is reportedly fixed, but why not run on old versions too?
+  sed '$q' "$ltmain" >> "$cfgfile" || (rm -f "$cfgfile"; exit 1)
+
+  mv -f "$cfgfile" "$ofile" || \
+    (rm -f "$ofile" && cp "$cfgfile" "$ofile" && rm -f "$cfgfile")
+  chmod +x "$ofile"
+])
+else
+  # If there is no Makefile yet, we rely on a make rule to execute
+  # `config.status --recheck' to rerun these tests and create the
+  # libtool script then.
+  ltmain_in=`echo $ltmain | sed -e 's/\.sh$/.in/'`
+  if test -f "$ltmain_in"; then
+    test -f Makefile && make "$ltmain"
+  fi
+fi
+])# AC_LIBTOOL_CONFIG
+
+
+# AC_LIBTOOL_PROG_COMPILER_NO_RTTI([TAGNAME])
+# -------------------------------------------
+AC_DEFUN([AC_LIBTOOL_PROG_COMPILER_NO_RTTI],
+[AC_REQUIRE([_LT_AC_SYS_COMPILER])dnl
+
+_LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=
+
+if test "$GCC" = yes; then
+  _LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin'
+
+  AC_LIBTOOL_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions],
+    lt_cv_prog_compiler_rtti_exceptions,
+    [-fno-rtti -fno-exceptions], [],
+    [_LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)="$_LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1) -fno-rtti -fno-exceptions"])
+fi
+])# AC_LIBTOOL_PROG_COMPILER_NO_RTTI
+
+
+# AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE
+# ---------------------------------
+AC_DEFUN([AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE],
+[AC_REQUIRE([AC_CANONICAL_HOST])
+AC_REQUIRE([AC_PROG_NM])
+AC_REQUIRE([AC_OBJEXT])
+# Check for command to grab the raw symbol name followed by C symbol from nm.
+AC_MSG_CHECKING([command to parse $NM output from $compiler object])
+AC_CACHE_VAL([lt_cv_sys_global_symbol_pipe],
+[
+# These are sane defaults that work on at least a few old systems.
+# [They come from Ultrix.  What could be older than Ultrix?!! ;)]
+
+# Character class describing NM global symbol codes.
+symcode='[[BCDEGRST]]'
+
+# Regexp to match symbols that can be accessed directly from C.
+sympat='\([[_A-Za-z]][[_A-Za-z0-9]]*\)'
+
+# Transform an extracted symbol line into a proper C declaration
+lt_cv_sys_global_symbol_to_cdecl="sed -n -e 's/^. .* \(.*\)$/extern int \1;/p'"
+
+# Transform an extracted symbol line into symbol name and symbol address
+lt_cv_sys_global_symbol_to_c_name_address="sed -n -e 's/^: \([[^ ]]*\) $/  {\\\"\1\\\", (lt_ptr) 0},/p' -e 's/^$symcode \([[^ ]]*\) \([[^ ]]*\)$/  {\"\2\", (lt_ptr) \&\2},/p'"
+
+# Define system-specific variables.
+case $host_os in
+aix*)
+  symcode='[[BCDT]]'
+  ;;
+cygwin* | mingw* | pw32*)
+  symcode='[[ABCDGISTW]]'
+  ;;
+hpux*) # Its linker distinguishes data from code symbols
+  if test "$host_cpu" = ia64; then
+    symcode='[[ABCDEGRST]]'
+  fi
+  lt_cv_sys_global_symbol_to_cdecl="sed -n -e 's/^T .* \(.*\)$/extern int \1();/p' -e 's/^$symcode* .* \(.*\)$/extern char \1;/p'"
+  lt_cv_sys_global_symbol_to_c_name_address="sed -n -e 's/^: \([[^ ]]*\) $/  {\\\"\1\\\", (lt_ptr) 0},/p' -e 's/^$symcode* \([[^ ]]*\) \([[^ ]]*\)$/  {\"\2\", (lt_ptr) \&\2},/p'"
+  ;;
+linux* | k*bsd*-gnu)
+  if test "$host_cpu" = ia64; then
+    symcode='[[ABCDGIRSTW]]'
+    lt_cv_sys_global_symbol_to_cdecl="sed -n -e 's/^T .* \(.*\)$/extern int \1();/p' -e 's/^$symcode* .* \(.*\)$/extern char \1;/p'"
+    lt_cv_sys_global_symbol_to_c_name_address="sed -n -e 's/^: \([[^ ]]*\) $/  {\\\"\1\\\", (lt_ptr) 0},/p' -e 's/^$symcode* \([[^ ]]*\) \([[^ ]]*\)$/  {\"\2\", (lt_ptr) \&\2},/p'"
+  fi
+  ;;
+irix* | nonstopux*)
+  symcode='[[BCDEGRST]]'
+  ;;
+osf*)
+  symcode='[[BCDEGQRST]]'
+  ;;
+solaris*)
+  symcode='[[BDRT]]'
+  ;;
+sco3.2v5*)
+  symcode='[[DT]]'
+  ;;
+sysv4.2uw2*)
+  symcode='[[DT]]'
+  ;;
+sysv5* | sco5v6* | unixware* | OpenUNIX*)
+  symcode='[[ABDT]]'
+  ;;
+sysv4)
+  symcode='[[DFNSTU]]'
+  ;;
+esac
+
+# Handle CRLF in mingw tool chain
+opt_cr=
+case $build_os in
+mingw*)
+  opt_cr=`echo 'x\{0,1\}' | tr x '\015'` # option cr in regexp
+  ;;
+esac
+
+# If we're using GNU nm, then use its standard symbol codes.
+case `$NM -V 2>&1` in
+*GNU* | *'with BFD'*)
+  symcode='[[ABCDGIRSTW]]' ;;
+esac
+
+# Try without a prefix undercore, then with it.
+for ac_symprfx in "" "_"; do
+
+  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.
+  symxfrm="\\1 $ac_symprfx\\2 \\2"
+
+  # Write the raw and C identifiers.
+  lt_cv_sys_global_symbol_pipe="sed -n -e 's/^.*[[ 	]]\($symcode$symcode*\)[[ 	]][[ 	]]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'"
+
+  # Check to see that the pipe works correctly.
+  pipe_works=no
+
+  rm -f conftest*
+  cat > conftest.$ac_ext <<EOF
+#ifdef __cplusplus
+extern "C" {
+#endif
+char nm_test_var;
+void nm_test_func(){}
+#ifdef __cplusplus
+}
+#endif
+int main(){nm_test_var='a';nm_test_func();return(0);}
+EOF
+
+  if AC_TRY_EVAL(ac_compile); then
+    # Now try to grab the symbols.
+    nlist=conftest.nm
+    if AC_TRY_EVAL(NM conftest.$ac_objext \| $lt_cv_sys_global_symbol_pipe \> $nlist) && test -s "$nlist"; then
+      # Try sorting and uniquifying the output.
+      if sort "$nlist" | uniq > "$nlist"T; then
+	mv -f "$nlist"T "$nlist"
+      else
+	rm -f "$nlist"T
+      fi
+
+      # Make sure that we snagged all the symbols we need.
+      if grep ' nm_test_var$' "$nlist" >/dev/null; then
+	if grep ' nm_test_func$' "$nlist" >/dev/null; then
+	  cat <<EOF > conftest.$ac_ext
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+EOF
+	  # Now generate the symbol file.
+	  eval "$lt_cv_sys_global_symbol_to_cdecl"' < "$nlist" | grep -v main >> conftest.$ac_ext'
+
+	  cat <<EOF >> conftest.$ac_ext
+#if defined (__STDC__) && __STDC__
+# define lt_ptr_t void *
+#else
+# define lt_ptr_t char *
+# define const
+#endif
+
+/* The mapping between symbol names and symbols. */
+const struct {
+  const char *name;
+  lt_ptr_t address;
+}
+lt_preloaded_symbols[[]] =
+{
+EOF
+	  $SED "s/^$symcode$symcode* \(.*\) \(.*\)$/  {\"\2\", (lt_ptr_t) \&\2},/" < "$nlist" | grep -v main >> conftest.$ac_ext
+	  cat <<\EOF >> conftest.$ac_ext
+  {0, (lt_ptr_t) 0}
+};
+
+#ifdef __cplusplus
+}
+#endif
+EOF
+	  # Now try linking the two files.
+	  mv conftest.$ac_objext conftstm.$ac_objext
+	  lt_save_LIBS="$LIBS"
+	  lt_save_CFLAGS="$CFLAGS"
+	  LIBS="conftstm.$ac_objext"
+	  CFLAGS="$CFLAGS$_LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)"
+	  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext}; then
+	    pipe_works=yes
+	  fi
+	  LIBS="$lt_save_LIBS"
+	  CFLAGS="$lt_save_CFLAGS"
+	else
+	  echo "cannot find nm_test_func in $nlist" >&AS_MESSAGE_LOG_FD
+	fi
+      else
+	echo "cannot find nm_test_var in $nlist" >&AS_MESSAGE_LOG_FD
+      fi
+    else
+      echo "cannot run $lt_cv_sys_global_symbol_pipe" >&AS_MESSAGE_LOG_FD
+    fi
+  else
+    echo "$progname: failed program was:" >&AS_MESSAGE_LOG_FD
+    cat conftest.$ac_ext >&5
+  fi
+  rm -f conftest* conftst*
+
+  # Do not use the global_symbol_pipe unless it works.
+  if test "$pipe_works" = yes; then
+    break
+  else
+    lt_cv_sys_global_symbol_pipe=
+  fi
+done
+])
+if test -z "$lt_cv_sys_global_symbol_pipe"; then
+  lt_cv_sys_global_symbol_to_cdecl=
+fi
+if test -z "$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl"; then
+  AC_MSG_RESULT(failed)
+else
+  AC_MSG_RESULT(ok)
+fi
+]) # AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE
+
+
+# AC_LIBTOOL_PROG_COMPILER_PIC([TAGNAME])
+# ---------------------------------------
+AC_DEFUN([AC_LIBTOOL_PROG_COMPILER_PIC],
+[_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)=
+_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=
+_LT_AC_TAGVAR(lt_prog_compiler_static, $1)=
+
+AC_MSG_CHECKING([for $compiler option to produce PIC])
+ ifelse([$1],[CXX],[
+  # C++ specific cases for pic, static, wl, etc.
+  if test "$GXX" = yes; then
+    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-static'
+
+    case $host_os in
+    aix*)
+      # All AIX code is PIC.
+      if test "$host_cpu" = ia64; then
+	# AIX 5 now supports IA64 processor
+	_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+      fi
+      ;;
+    amigaos*)
+      # FIXME: we need at least 68020 code to build shared libraries, but
+      # adding the `-m68020' flag to GCC prevents building anything better,
+      # like `-m68040'.
+      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'
+      ;;
+    beos* | cygwin* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)
+      # PIC is the default for these OSes.
+      ;;
+    mingw* | os2* | pw32*)
+      # This hack is so that the source file can tell whether it is being
+      # built for inclusion in a dll (and should export symbols for example).
+      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'
+      ;;
+    darwin* | rhapsody*)
+      # PIC is the default on this platform
+      # Common symbols not allowed in MH_DYLIB files
+      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'
+      ;;
+    *djgpp*)
+      # DJGPP does not support shared libraries at all
+      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=
+      ;;
+    interix3*)
+      # Interix 3.x gcc -fpic/-fPIC options generate broken code.
+      # Instead, we relocate shared libraries at runtime.
+      ;;
+    sysv4*MP*)
+      if test -d /usr/nec; then
+	_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic
+      fi
+      ;;
+    hpux*)
+      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but
+      # not for PA HP-UX.
+      case $host_cpu in
+      hppa*64*|ia64*)
+	;;
+      *)
+	_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'
+	;;
+      esac
+      ;;
+    *)
+      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'
+      ;;
+    esac
+  else
+    case $host_os in
+      aix4* | aix5*)
+	# All AIX code is PIC.
+	if test "$host_cpu" = ia64; then
+	  # AIX 5 now supports IA64 processor
+	  _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+	else
+	  _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'
+	fi
+	;;
+      chorus*)
+	case $cc_basename in
+	cxch68*)
+	  # Green Hills C++ Compiler
+	  # _LT_AC_TAGVAR(lt_prog_compiler_static, $1)="--no_auto_instantiation -u __main -u __premain -u _abort -r $COOL_DIR/lib/libOrb.a $MVME_DIR/lib/CC/libC.a $MVME_DIR/lib/classix/libcx.s.a"
+	  ;;
+	esac
+	;;
+       darwin*)
+         # PIC is the default on this platform
+         # Common symbols not allowed in MH_DYLIB files
+         case $cc_basename in
+           xlc*)
+           _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-qnocommon'
+           _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+           ;;
+         esac
+       ;;
+      dgux*)
+	case $cc_basename in
+	  ec++*)
+	    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
+	    ;;
+	  ghcx*)
+	    # Green Hills C++ Compiler
+	    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-pic'
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      freebsd* | dragonfly*)
+	# FreeBSD uses GNU C++
+	;;
+      hpux9* | hpux10* | hpux11*)
+	case $cc_basename in
+	  CC*)
+	    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'
+	    if test "$host_cpu" != ia64; then
+	      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='+Z'
+	    fi
+	    ;;
+	  aCC*)
+	    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'
+	    case $host_cpu in
+	    hppa*64*|ia64*)
+	      # +Z the default
+	      ;;
+	    *)
+	      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='+Z'
+	      ;;
+	    esac
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      interix*)
+	# This is c89, which is MS Visual C++ (no shared libs)
+	# Anyone wants to do a port?
+	;;
+      irix5* | irix6* | nonstopux*)
+	case $cc_basename in
+	  CC*)
+	    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'
+	    # CC pic flag -KPIC is the default.
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      linux* | k*bsd*-gnu)
+	case $cc_basename in
+	  KCC*)
+	    # KAI C++ Compiler
+	    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'
+	    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'
+	    ;;
+	  icpc* | ecpc*)
+	    # Intel C++
+	    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
+	    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-static'
+	    ;;
+	  pgCC*)
+	    # Portland Group C++ compiler.
+	    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'
+	    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+	    ;;
+	  cxx*)
+	    # Compaq C++
+	    # Make sure the PIC flag is empty.  It appears that all Alpha
+	    # Linux and Compaq Tru64 Unix objects are PIC.
+	    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=
+	    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      lynxos*)
+	;;
+      m88k*)
+	;;
+      mvs*)
+	case $cc_basename in
+	  cxx*)
+	    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-W c,exportall'
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      netbsd* | netbsdelf*-gnu)
+	;;
+      osf3* | osf4* | osf5*)
+	case $cc_basename in
+	  KCC*)
+	    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'
+	    ;;
+	  RCC*)
+	    # Rational C++ 2.4.1
+	    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-pic'
+	    ;;
+	  cxx*)
+	    # Digital/Compaq C++
+	    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	    # Make sure the PIC flag is empty.  It appears that all Alpha
+	    # Linux and Compaq Tru64 Unix objects are PIC.
+	    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=
+	    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      psos*)
+	;;
+      solaris*)
+	case $cc_basename in
+	  CC*)
+	    # Sun C++ 4.2, 5.x and Centerline C++
+	    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
+	    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+	    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '
+	    ;;
+	  gcx*)
+	    # Green Hills C++ Compiler
+	    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      sunos4*)
+	case $cc_basename in
+	  CC*)
+	    # Sun C++ 4.x
+	    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-pic'
+	    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+	    ;;
+	  lcc*)
+	    # Lucid
+	    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-pic'
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      tandem*)
+	case $cc_basename in
+	  NCC*)
+	    # NonStop-UX NCC 3.20
+	    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)
+	case $cc_basename in
+	  CC*)
+	    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
+	    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+	    ;;
+	esac
+	;;
+      vxworks*)
+	;;
+      *)
+	_LT_AC_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no
+	;;
+    esac
+  fi
+],
+[
+  if test "$GCC" = yes; then
+    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-static'
+
+    case $host_os in
+      aix*)
+      # All AIX code is PIC.
+      if test "$host_cpu" = ia64; then
+	# AIX 5 now supports IA64 processor
+	_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+      fi
+      ;;
+
+    amigaos*)
+      # FIXME: we need at least 68020 code to build shared libraries, but
+      # adding the `-m68020' flag to GCC prevents building anything better,
+      # like `-m68040'.
+      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'
+      ;;
+
+    beos* | cygwin* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)
+      # PIC is the default for these OSes.
+      ;;
+
+    mingw* | pw32* | os2*)
+      # This hack is so that the source file can tell whether it is being
+      # built for inclusion in a dll (and should export symbols for example).
+      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'
+      ;;
+
+    darwin* | rhapsody*)
+      # PIC is the default on this platform
+      # Common symbols not allowed in MH_DYLIB files
+      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'
+      ;;
+
+    interix3*)
+      # Interix 3.x gcc -fpic/-fPIC options generate broken code.
+      # Instead, we relocate shared libraries at runtime.
+      ;;
+
+    msdosdjgpp*)
+      # Just because we use GCC doesn't mean we suddenly get shared libraries
+      # on systems that don't support them.
+      _LT_AC_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no
+      enable_shared=no
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec; then
+	_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic
+      fi
+      ;;
+
+    hpux*)
+      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but
+      # not for PA HP-UX.
+      case $host_cpu in
+      hppa*64*|ia64*)
+	# +Z the default
+	;;
+      *)
+	_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'
+	;;
+      esac
+      ;;
+
+    *)
+      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'
+      ;;
+    esac
+  else
+    # PORTME Check for flag to pass linker flags through the system compiler.
+    case $host_os in
+    aix*)
+      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+      if test "$host_cpu" = ia64; then
+	# AIX 5 now supports IA64 processor
+	_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+      else
+	_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'
+      fi
+      ;;
+      darwin*)
+        # PIC is the default on this platform
+        # Common symbols not allowed in MH_DYLIB files
+       case $cc_basename in
+         xlc*)
+         _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-qnocommon'
+         _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+         ;;
+       esac
+       ;;
+
+    mingw* | pw32* | os2*)
+      # This hack is so that the source file can tell whether it is being
+      # built for inclusion in a dll (and should export symbols for example).
+      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'
+      ;;
+
+    hpux9* | hpux10* | hpux11*)
+      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but
+      # not for PA HP-UX.
+      case $host_cpu in
+      hppa*64*|ia64*)
+	# +Z the default
+	;;
+      *)
+	_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='+Z'
+	;;
+      esac
+      # Is there a better lt_prog_compiler_static that works with the bundled CC?
+      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'
+      ;;
+
+    irix5* | irix6* | nonstopux*)
+      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+      # PIC (with -KPIC) is the default.
+      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'
+      ;;
+
+    newsos6)
+      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
+      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+      ;;
+
+    linux* | k*bsd*-gnu)
+      case $cc_basename in
+      icc* | ecc*)
+	_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
+	_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-static'
+        ;;
+      pgcc* | pgf77* | pgf90* | pgf95*)
+        # Portland Group compilers (*not* the Pentium gcc compiler,
+	# which looks to be a dead project)
+	_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'
+	_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+        ;;
+      ccc*)
+        _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+        # All Alpha code is PIC.
+        _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'
+        ;;
+      esac
+      ;;
+
+    osf3* | osf4* | osf5*)
+      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+      # All OSF/1 code is PIC.
+      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'
+      ;;
+
+    solaris*)
+      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
+      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+      case $cc_basename in
+      f77* | f90* | f95*)
+	_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld ';;
+      *)
+	_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,';;
+      esac
+      ;;
+
+    sunos4*)
+      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '
+      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'
+      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+      ;;
+
+    sysv4 | sysv4.2uw2* | sysv4.3*)
+      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
+      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec ;then
+	_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-Kconform_pic'
+	_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+      fi
+      ;;
+
+    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)
+      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
+      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+      ;;
+
+    unicos*)
+      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+      _LT_AC_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no
+      ;;
+
+    uts4*)
+      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-pic'
+      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+      ;;
+
+    *)
+      _LT_AC_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no
+      ;;
+    esac
+  fi
+])
+AC_MSG_RESULT([$_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)])
+
+#
+# Check to make sure the PIC flag actually works.
+#
+if test -n "$_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)"; then
+  AC_LIBTOOL_COMPILER_OPTION([if $compiler PIC flag $_LT_AC_TAGVAR(lt_prog_compiler_pic, $1) works],
+    _LT_AC_TAGVAR(lt_prog_compiler_pic_works, $1),
+    [$_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)ifelse([$1],[],[ -DPIC],[ifelse([$1],[CXX],[ -DPIC],[])])], [],
+    [case $_LT_AC_TAGVAR(lt_prog_compiler_pic, $1) in
+     "" | " "*) ;;
+     *) _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=" $_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)" ;;
+     esac],
+    [_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=
+     _LT_AC_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no])
+fi
+case $host_os in
+  # For platforms which do not support PIC, -DPIC is meaningless:
+  *djgpp*)
+    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=
+    ;;
+  *)
+    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)="$_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)ifelse([$1],[],[ -DPIC],[ifelse([$1],[CXX],[ -DPIC],[])])"
+    ;;
+esac
+
+#
+# Check to make sure the static flag actually works.
+#
+wl=$_LT_AC_TAGVAR(lt_prog_compiler_wl, $1) eval lt_tmp_static_flag=\"$_LT_AC_TAGVAR(lt_prog_compiler_static, $1)\"
+AC_LIBTOOL_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works],
+  _LT_AC_TAGVAR(lt_prog_compiler_static_works, $1),
+  $lt_tmp_static_flag,
+  [],
+  [_LT_AC_TAGVAR(lt_prog_compiler_static, $1)=])
+])
+
+
+# AC_LIBTOOL_PROG_LD_SHLIBS([TAGNAME])
+# ------------------------------------
+# See if the linker supports building shared libraries.
+AC_DEFUN([AC_LIBTOOL_PROG_LD_SHLIBS],
+[AC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])
+ifelse([$1],[CXX],[
+  _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
+  case $host_os in
+  aix4* | aix5*)
+    # If we're using GNU nm, then we don't want the "-C" option.
+    # -C means demangle to AIX nm, but means don't demangle with GNU nm
+    if $NM -V 2>&1 | grep 'GNU' > /dev/null; then
+      _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\''{ if (((\[$]2 == "T") || (\[$]2 == "D") || (\[$]2 == "B")) && ([substr](\[$]3,1,1) != ".")) { print \[$]3 } }'\'' | sort -u > $export_symbols'
+    else
+      _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\''{ if (((\[$]2 == "T") || (\[$]2 == "D") || (\[$]2 == "B")) && ([substr](\[$]3,1,1) != ".")) { print \[$]3 } }'\'' | sort -u > $export_symbols'
+    fi
+    ;;
+  pw32*)
+    _LT_AC_TAGVAR(export_symbols_cmds, $1)="$ltdll_cmds"
+  ;;
+  cygwin* | mingw*)
+    _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\''/^[[BCDGRS]] /s/.* \([[^ ]]*\)/\1 DATA/;/^.* __nm__/s/^.* __nm__\([[^ ]]*\) [[^ ]]*/\1 DATA/;/^I /d;/^[[AITW]] /s/.* //'\'' | sort | uniq > $export_symbols'
+  ;;
+  linux* | k*bsd*-gnu)
+    _LT_AC_TAGVAR(link_all_deplibs, $1)=no
+  ;;
+  *)
+    _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
+  ;;
+  esac
+],[
+  runpath_var=
+  _LT_AC_TAGVAR(allow_undefined_flag, $1)=
+  _LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=no
+  _LT_AC_TAGVAR(archive_cmds, $1)=
+  _LT_AC_TAGVAR(archive_expsym_cmds, $1)=
+  _LT_AC_TAGVAR(old_archive_From_new_cmds, $1)=
+  _LT_AC_TAGVAR(old_archive_from_expsyms_cmds, $1)=
+  _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)=
+  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=
+  _LT_AC_TAGVAR(thread_safe_flag_spec, $1)=
+  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)=
+  _LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=
+  _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=
+  _LT_AC_TAGVAR(hardcode_direct, $1)=no
+  _LT_AC_TAGVAR(hardcode_minus_L, $1)=no
+  _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=unsupported
+  _LT_AC_TAGVAR(link_all_deplibs, $1)=unknown
+  _LT_AC_TAGVAR(hardcode_automatic, $1)=no
+  _LT_AC_TAGVAR(module_cmds, $1)=
+  _LT_AC_TAGVAR(module_expsym_cmds, $1)=
+  _LT_AC_TAGVAR(always_export_symbols, $1)=no
+  _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
+  # include_expsyms should be a list of space-separated symbols to be *always*
+  # included in the symbol list
+  _LT_AC_TAGVAR(include_expsyms, $1)=
+  # exclude_expsyms can be an extended regexp of symbols to exclude
+  # it will be wrapped by ` (' and `)$', so one must not match beginning or
+  # end of line.  Example: `a|bc|.*d.*' will exclude the symbols `a' and `bc',
+  # as well as any symbol that contains `d'.
+  _LT_AC_TAGVAR(exclude_expsyms, $1)="_GLOBAL_OFFSET_TABLE_"
+  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out
+  # platforms (ab)use it in PIC code, but their linkers get confused if
+  # the symbol is explicitly referenced.  Since portable code cannot
+  # rely on this symbol name, it's probably fine to never include it in
+  # preloaded symbol tables.
+  extract_expsyms_cmds=
+  # Just being paranoid about ensuring that cc_basename is set.
+  _LT_CC_BASENAME([$compiler])
+  case $host_os in
+  cygwin* | mingw* | pw32*)
+    # FIXME: the MSVC++ port hasn't been tested in a loooong time
+    # When not using gcc, we currently assume that we are using
+    # Microsoft Visual C++.
+    if test "$GCC" != yes; then
+      with_gnu_ld=no
+    fi
+    ;;
+  interix*)
+    # we just hope/assume this is gcc and not c89 (= MSVC++)
+    with_gnu_ld=yes
+    ;;
+  openbsd*)
+    with_gnu_ld=no
+    ;;
+  esac
+
+  _LT_AC_TAGVAR(ld_shlibs, $1)=yes
+  if test "$with_gnu_ld" = yes; then
+    # If archive_cmds runs LD, not CC, wlarc should be empty
+    wlarc='${wl}'
+
+    # Set some defaults for GNU ld with shared library support. These
+    # are reset later if shared libraries are not supported. Putting them
+    # here allows them to be overridden if necessary.
+    runpath_var=LD_RUN_PATH
+    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}--rpath ${wl}$libdir'
+    _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'
+    # ancient GNU ld didn't support --whole-archive et. al.
+    if $LD --help 2>&1 | grep 'no-whole-archive' > /dev/null; then
+	_LT_AC_TAGVAR(whole_archive_flag_spec, $1)="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
+      else
+  	_LT_AC_TAGVAR(whole_archive_flag_spec, $1)=
+    fi
+    supports_anon_versioning=no
+    case `$LD -v 2>/dev/null` in
+      *\ [[01]].* | *\ 2.[[0-9]].* | *\ 2.10.*) ;; # catch versions < 2.11
+      *\ 2.11.93.0.2\ *) supports_anon_versioning=yes ;; # RH7.3 ...
+      *\ 2.11.92.0.12\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...
+      *\ 2.11.*) ;; # other 2.11 versions
+      *) supports_anon_versioning=yes ;;
+    esac
+
+    # See if GNU ld supports shared libraries.
+    case $host_os in
+    aix3* | aix4* | aix5*)
+      # On AIX/PPC, the GNU linker is very broken
+      if test "$host_cpu" != ia64; then
+	_LT_AC_TAGVAR(ld_shlibs, $1)=no
+	cat <<EOF 1>&2
+
+*** Warning: the GNU linker, at least up to release 2.9.1, is reported
+*** to be unable to reliably create shared libraries on AIX.
+*** Therefore, libtool is disabling shared libraries support.  If you
+*** really care for shared libraries, you may want to modify your PATH
+*** so that a non-GNU linker is found, and then restart.
+
+EOF
+      fi
+      ;;
+
+    amigaos*)
+      _LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/a2ixlibrary.data~$echo "#define NAME $libname" > $output_objdir/a2ixlibrary.data~$echo "#define LIBRARY_ID 1" >> $output_objdir/a2ixlibrary.data~$echo "#define VERSION $major" >> $output_objdir/a2ixlibrary.data~$echo "#define REVISION $revision" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'
+      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
+      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes
+
+      # Samuel A. Falvo II <kc5tja@dolphin.openprojects.net> reports
+      # that the semantics of dynamic libraries on AmigaOS, at least up
+      # to version 4, is to share data among multiple programs linked
+      # with the same dynamic library.  Since this doesn't match the
+      # behavior of shared libraries on other platforms, we can't use
+      # them.
+      _LT_AC_TAGVAR(ld_shlibs, $1)=no
+      ;;
+
+    beos*)
+      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
+	_LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported
+	# Joseph Beckenbach <jrb3@best.com> says some releases of gcc
+	# support --undefined.  This deserves some investigation.  FIXME
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+      else
+	_LT_AC_TAGVAR(ld_shlibs, $1)=no
+      fi
+      ;;
+
+    cygwin* | mingw* | pw32*)
+      # _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,
+      # as there is no search path for DLLs.
+      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
+      _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported
+      _LT_AC_TAGVAR(always_export_symbols, $1)=no
+      _LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=yes
+      _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\''/^[[BCDGRS]] /s/.* \([[^ ]]*\)/\1 DATA/'\'' | $SED -e '\''/^[[AITW]] /s/.* //'\'' | sort | uniq > $export_symbols'
+
+      if $LD --help 2>&1 | grep 'auto-import' > /dev/null; then
+        _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+	# If the export-symbols file already is a .def file (1st line
+	# is EXPORTS), use it as is; otherwise, prepend...
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='if test "x`$SED 1q $export_symbols`" = xEXPORTS; then
+	  cp $export_symbols $output_objdir/$soname.def;
+	else
+	  echo EXPORTS > $output_objdir/$soname.def;
+	  cat $export_symbols >> $output_objdir/$soname.def;
+	fi~
+	$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+      else
+	_LT_AC_TAGVAR(ld_shlibs, $1)=no
+      fi
+      ;;
+
+    interix3*)
+      _LT_AC_TAGVAR(hardcode_direct, $1)=no
+      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
+      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.
+      # Instead, shared libraries are loaded at an image base (0x10000000 by
+      # default) and relocated if they conflict, which is a slow very memory
+      # consuming and fragmenting process.  To avoid this, we pick a random,
+      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
+      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.
+      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+      _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed "s,^,_," $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+      ;;
+
+    linux* | k*bsd*-gnu)
+      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
+	tmp_addflag=
+	case $cc_basename,$host_cpu in
+	pgcc*)				# Portland Group C compiler
+	  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $echo \"$new_convenience\"` ${wl}--no-whole-archive'
+	  tmp_addflag=' $pic_flag'
+	  ;;
+	pgf77* | pgf90* | pgf95*)	# Portland Group f77 and f90 compilers
+	  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $echo \"$new_convenience\"` ${wl}--no-whole-archive'
+	  tmp_addflag=' $pic_flag -Mnomain' ;;
+	ecc*,ia64* | icc*,ia64*)		# Intel C compiler on ia64
+	  tmp_addflag=' -i_dynamic' ;;
+	efc*,ia64* | ifort*,ia64*)	# Intel Fortran compiler on ia64
+	  tmp_addflag=' -i_dynamic -nofor_main' ;;
+	ifc* | ifort*)			# Intel Fortran compiler
+	  tmp_addflag=' -nofor_main' ;;
+	esac
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared'"$tmp_addflag"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+
+	if test $supports_anon_versioning = yes; then
+	  _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo "{ global:" > $output_objdir/$libname.ver~
+  cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
+  $echo "local: *; };" >> $output_objdir/$libname.ver~
+	  $CC -shared'"$tmp_addflag"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'
+	fi
+	_LT_AC_TAGVAR(link_all_deplibs, $1)=no
+      else
+	_LT_AC_TAGVAR(ld_shlibs, $1)=no
+      fi
+      ;;
+
+    netbsd* | netbsdelf*-gnu)
+      if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+	_LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
+	wlarc=
+      else
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      fi
+      ;;
+
+    solaris*)
+      if $LD -v 2>&1 | grep 'BFD 2\.8' > /dev/null; then
+	_LT_AC_TAGVAR(ld_shlibs, $1)=no
+	cat <<EOF 1>&2
+
+*** Warning: The releases 2.8.* of the GNU linker cannot reliably
+*** create shared libraries on Solaris systems.  Therefore, libtool
+*** is disabling shared libraries support.  We urge you to upgrade GNU
+*** binutils to release 2.9.1 or newer.  Another option is to modify
+*** your PATH or compiler configuration so that the native linker is
+*** used, and then restart.
+
+EOF
+      elif $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      else
+	_LT_AC_TAGVAR(ld_shlibs, $1)=no
+      fi
+      ;;
+
+    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)
+      case `$LD -v 2>&1` in
+        *\ [[01]].* | *\ 2.[[0-9]].* | *\ 2.1[[0-5]].*) 
+	_LT_AC_TAGVAR(ld_shlibs, $1)=no
+	cat <<_LT_EOF 1>&2
+
+*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 can not
+*** reliably create shared libraries on SCO systems.  Therefore, libtool
+*** is disabling shared libraries support.  We urge you to upgrade GNU
+*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify
+*** your PATH or compiler configuration so that the native linker is
+*** used, and then restart.
+
+_LT_EOF
+	;;
+	*)
+	  if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
+	    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='`test -z "$SCOABSPATH" && echo ${wl}-rpath,$libdir`'
+	    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib'
+	    _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname,\${SCOABSPATH:+${install_libdir}/}$soname,-retain-symbols-file,$export_symbols -o $lib'
+	  else
+	    _LT_AC_TAGVAR(ld_shlibs, $1)=no
+	  fi
+	;;
+      esac
+      ;;
+
+    sunos4*)
+      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+      wlarc=
+      _LT_AC_TAGVAR(hardcode_direct, $1)=yes
+      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+      ;;
+
+    *)
+      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      else
+	_LT_AC_TAGVAR(ld_shlibs, $1)=no
+      fi
+      ;;
+    esac
+
+    if test "$_LT_AC_TAGVAR(ld_shlibs, $1)" = no; then
+      runpath_var=
+      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)=
+      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)=
+      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=
+    fi
+  else
+    # PORTME fill in a description of your system's linker (not GNU ld)
+    case $host_os in
+    aix3*)
+      _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported
+      _LT_AC_TAGVAR(always_export_symbols, $1)=yes
+      _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'
+      # Note: this linker hardcodes the directories in LIBPATH if there
+      # are no directories specified by -L.
+      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes
+      if test "$GCC" = yes && test -z "$lt_prog_compiler_static"; then
+	# Neither direct hardcoding nor static linking is supported with a
+	# broken collect2.
+	_LT_AC_TAGVAR(hardcode_direct, $1)=unsupported
+      fi
+      ;;
+
+    aix4* | aix5*)
+      if test "$host_cpu" = ia64; then
+	# On IA64, the linker does run time linking by default, so we don't
+	# have to do anything special.
+	aix_use_runtimelinking=no
+	exp_sym_flag='-Bexport'
+	no_entry_flag=""
+      else
+	# If we're using GNU nm, then we don't want the "-C" option.
+	# -C means demangle to AIX nm, but means don't demangle with GNU nm
+	if $NM -V 2>&1 | grep 'GNU' > /dev/null; then
+	  _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\''{ if (((\[$]2 == "T") || (\[$]2 == "D") || (\[$]2 == "B")) && ([substr](\[$]3,1,1) != ".")) { print \[$]3 } }'\'' | sort -u > $export_symbols'
+	else
+	  _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\''{ if (((\[$]2 == "T") || (\[$]2 == "D") || (\[$]2 == "B")) && ([substr](\[$]3,1,1) != ".")) { print \[$]3 } }'\'' | sort -u > $export_symbols'
+	fi
+	aix_use_runtimelinking=no
+
+	# Test if we are trying to use run time linking or normal
+	# AIX style linking. If -brtl is somewhere in LDFLAGS, we
+	# need to do runtime linking.
+	case $host_os in aix4.[[23]]|aix4.[[23]].*|aix5*)
+	  for ld_flag in $LDFLAGS; do
+  	  if (test $ld_flag = "-brtl" || test $ld_flag = "-Wl,-brtl"); then
+  	    aix_use_runtimelinking=yes
+  	    break
+  	  fi
+	  done
+	  ;;
+	esac
+
+	exp_sym_flag='-bexport'
+	no_entry_flag='-bnoentry'
+      fi
+
+      # When large executables or shared objects are built, AIX ld can
+      # have problems creating the table of contents.  If linking a library
+      # or program results in "error TOC overflow" add -mminimal-toc to
+      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not
+      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.
+
+      _LT_AC_TAGVAR(archive_cmds, $1)=''
+      _LT_AC_TAGVAR(hardcode_direct, $1)=yes
+      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=':'
+      _LT_AC_TAGVAR(link_all_deplibs, $1)=yes
+
+      if test "$GCC" = yes; then
+	case $host_os in aix4.[[012]]|aix4.[[012]].*)
+	# We only want to do this on AIX 4.2 and lower, the check
+	# below for broken collect2 doesn't work under 4.3+
+	  collect2name=`${CC} -print-prog-name=collect2`
+	  if test -f "$collect2name" && \
+  	   strings "$collect2name" | grep resolve_lib_name >/dev/null
+	  then
+  	  # We have reworked collect2
+  	  _LT_AC_TAGVAR(hardcode_direct, $1)=yes
+	  else
+  	  # We have old collect2
+  	  _LT_AC_TAGVAR(hardcode_direct, $1)=unsupported
+  	  # It fails to find uninstalled libraries when the uninstalled
+  	  # path is not listed in the libpath.  Setting hardcode_minus_L
+  	  # to unsupported forces relinking
+  	  _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes
+  	  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
+  	  _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=
+	  fi
+	  ;;
+	esac
+	shared_flag='-shared'
+	if test "$aix_use_runtimelinking" = yes; then
+	  shared_flag="$shared_flag "'${wl}-G'
+	fi
+      else
+	# not using gcc
+	if test "$host_cpu" = ia64; then
+  	# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release
+  	# chokes on -Wl,-G. The following line is correct:
+	  shared_flag='-G'
+	else
+	  if test "$aix_use_runtimelinking" = yes; then
+	    shared_flag='${wl}-G'
+	  else
+	    shared_flag='${wl}-bM:SRE'
+	  fi
+	fi
+      fi
+
+      # It seems that -bexpall does not export symbols beginning with
+      # underscore (_), so it is better to generate a list of symbols to export.
+      _LT_AC_TAGVAR(always_export_symbols, $1)=yes
+      if test "$aix_use_runtimelinking" = yes; then
+	# Warning - without using the other runtime loading flags (-brtl),
+	# -berok will link without error, but may produce a broken library.
+	_LT_AC_TAGVAR(allow_undefined_flag, $1)='-berok'
+       # Determine the default libpath from the value encoded in an empty executable.
+       _LT_AC_SYS_LIBPATH_AIX
+       _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'"$aix_libpath"
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)="\$CC"' -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags `if test "x${allow_undefined_flag}" != "x"; then echo "${wl}${allow_undefined_flag}"; else :; fi` '"\${wl}$exp_sym_flag:\$export_symbols $shared_flag"
+       else
+	if test "$host_cpu" = ia64; then
+	  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $libdir:/usr/lib:/lib'
+	  _LT_AC_TAGVAR(allow_undefined_flag, $1)="-z nodefs"
+	  _LT_AC_TAGVAR(archive_expsym_cmds, $1)="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags ${wl}${allow_undefined_flag} '"\${wl}$exp_sym_flag:\$export_symbols"
+	else
+	 # Determine the default libpath from the value encoded in an empty executable.
+	 _LT_AC_SYS_LIBPATH_AIX
+	 _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'"$aix_libpath"
+	  # Warning - without using the other run time loading flags,
+	  # -berok will link without error, but may produce a broken library.
+	  _LT_AC_TAGVAR(no_undefined_flag, $1)=' ${wl}-bernotok'
+	  _LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-berok'
+	  # Exported symbols can be pulled into shared objects from archives
+	  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)='$convenience'
+	  _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=yes
+	  # This is similar to how AIX traditionally builds its shared libraries.
+	  _LT_AC_TAGVAR(archive_expsym_cmds, $1)="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'
+	fi
+      fi
+      ;;
+
+    amigaos*)
+      _LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/a2ixlibrary.data~$echo "#define NAME $libname" > $output_objdir/a2ixlibrary.data~$echo "#define LIBRARY_ID 1" >> $output_objdir/a2ixlibrary.data~$echo "#define VERSION $major" >> $output_objdir/a2ixlibrary.data~$echo "#define REVISION $revision" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'
+      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
+      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes
+      # see comment about different semantics on the GNU ld section
+      _LT_AC_TAGVAR(ld_shlibs, $1)=no
+      ;;
+
+    bsdi[[45]]*)
+      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)=-rdynamic
+      ;;
+
+    cygwin* | mingw* | pw32*)
+      # When not using gcc, we currently assume that we are using
+      # Microsoft Visual C++.
+      # hardcode_libdir_flag_spec is actually meaningless, as there is
+      # no search path for DLLs.
+      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)=' '
+      _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported
+      # Tell ltmain to make .lib files, not .a files.
+      libext=lib
+      # Tell ltmain to make .dll files, not .so files.
+      shrext_cmds=".dll"
+      # FIXME: Setting linknames here is a bad hack.
+      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -o $lib $libobjs $compiler_flags `echo "$deplibs" | $SED -e '\''s/ -lc$//'\''` -link -dll~linknames='
+      # The linker will automatically build a .lib file if we build a DLL.
+      _LT_AC_TAGVAR(old_archive_From_new_cmds, $1)='true'
+      # FIXME: Should let the user specify the lib program.
+      _LT_AC_TAGVAR(old_archive_cmds, $1)='lib /OUT:$oldlib$oldobjs$old_deplibs'
+      _LT_AC_TAGVAR(fix_srcfile_path, $1)='`cygpath -w "$srcfile"`'
+      _LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=yes
+      ;;
+
+    darwin* | rhapsody*)
+      case $host_os in
+        rhapsody* | darwin1.[[012]])
+         _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-undefined ${wl}suppress'
+         ;;
+       *) # Darwin 1.3 on
+         if test -z ${MACOSX_DEPLOYMENT_TARGET} ; then
+           _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'
+         else
+           case ${MACOSX_DEPLOYMENT_TARGET} in
+             10.[[012]])
+               _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'
+               ;;
+             10.*)
+               _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-undefined ${wl}dynamic_lookup'
+               ;;
+           esac
+         fi
+         ;;
+      esac
+      _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no
+      _LT_AC_TAGVAR(hardcode_direct, $1)=no
+      _LT_AC_TAGVAR(hardcode_automatic, $1)=yes
+      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=unsupported
+      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=''
+      _LT_AC_TAGVAR(link_all_deplibs, $1)=yes
+    if test "$GCC" = yes ; then
+    	output_verbose_link_cmd='echo'
+        _LT_AC_TAGVAR(archive_cmds, $1)='$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring'
+      _LT_AC_TAGVAR(module_cmds, $1)='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'
+      # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin lds
+      _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+      _LT_AC_TAGVAR(module_expsym_cmds, $1)='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+    else
+      case $cc_basename in
+        xlc*)
+         output_verbose_link_cmd='echo'
+         _LT_AC_TAGVAR(archive_cmds, $1)='$CC -qmkshrobj $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}`echo $rpath/$soname` $verstring'
+         _LT_AC_TAGVAR(module_cmds, $1)='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'
+          # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin lds
+         _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -qmkshrobj $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}$rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+          _LT_AC_TAGVAR(module_expsym_cmds, $1)='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+          ;;
+       *)
+         _LT_AC_TAGVAR(ld_shlibs, $1)=no
+          ;;
+      esac
+    fi
+      ;;
+
+    dgux*)
+      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
+      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+      ;;
+
+    freebsd1*)
+      _LT_AC_TAGVAR(ld_shlibs, $1)=no
+      ;;
+
+    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor
+    # support.  Future versions do this automatically, but an explicit c++rt0.o
+    # does not break anything, and helps significantly (at the cost of a little
+    # extra space).
+    freebsd2.2*)
+      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'
+      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'
+      _LT_AC_TAGVAR(hardcode_direct, $1)=yes
+      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+      ;;
+
+    # Unfortunately, older versions of FreeBSD 2 do not have this feature.
+    freebsd2*)
+      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+      _LT_AC_TAGVAR(hardcode_direct, $1)=yes
+      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes
+      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+      ;;
+
+    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.
+    freebsd* | dragonfly*)
+      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -o $lib $libobjs $deplibs $compiler_flags'
+      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'
+      _LT_AC_TAGVAR(hardcode_direct, $1)=yes
+      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+      ;;
+
+    hpux9*)
+      if test "$GCC" = yes; then
+	_LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/$soname~$CC -shared -fPIC ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+      else
+	_LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+      fi
+      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'
+      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:
+      _LT_AC_TAGVAR(hardcode_direct, $1)=yes
+
+      # hardcode_minus_L: Not really in the search PATH,
+      # but as the default location of the library.
+      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes
+      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+      ;;
+
+    hpux10*)
+      if test "$GCC" = yes -a "$with_gnu_ld" = no; then
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	_LT_AC_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'
+      fi
+      if test "$with_gnu_ld" = no; then
+	_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'
+	_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:
+
+	_LT_AC_TAGVAR(hardcode_direct, $1)=yes
+	_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+
+	# hardcode_minus_L: Not really in the search PATH,
+	# but as the default location of the library.
+	_LT_AC_TAGVAR(hardcode_minus_L, $1)=yes
+      fi
+      ;;
+
+    hpux11*)
+      if test "$GCC" = yes -a "$with_gnu_ld" = no; then
+	case $host_cpu in
+	hppa*64*)
+	  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	ia64*)
+	  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	*)
+	  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	esac
+      else
+	case $host_cpu in
+	hppa*64*)
+	  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	ia64*)
+	  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	*)
+	  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	esac
+      fi
+      if test "$with_gnu_ld" = no; then
+	_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'
+	_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:
+
+	case $host_cpu in
+	hppa*64*|ia64*)
+	  _LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)='+b $libdir'
+	  _LT_AC_TAGVAR(hardcode_direct, $1)=no
+	  _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+	  ;;
+	*)
+	  _LT_AC_TAGVAR(hardcode_direct, $1)=yes
+	  _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+
+	  # hardcode_minus_L: Not really in the search PATH,
+	  # but as the default location of the library.
+	  _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes
+	  ;;
+	esac
+      fi
+      ;;
+
+    irix5* | irix6* | nonstopux*)
+      if test "$GCC" = yes; then
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+      else
+	_LT_AC_TAGVAR(archive_cmds, $1)='$LD -shared $libobjs $deplibs $linker_flags -soname $soname `test -n "$verstring" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'
+	_LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)='-rpath $libdir'
+      fi
+      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:
+      _LT_AC_TAGVAR(link_all_deplibs, $1)=yes
+      ;;
+
+    netbsd* | netbsdelf*-gnu)
+      if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+	_LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
+      else
+	_LT_AC_TAGVAR(archive_cmds, $1)='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF
+      fi
+      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'
+      _LT_AC_TAGVAR(hardcode_direct, $1)=yes
+      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+      ;;
+
+    newsos6)
+      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      _LT_AC_TAGVAR(hardcode_direct, $1)=yes
+      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:
+      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+      ;;
+
+    openbsd*)
+      _LT_AC_TAGVAR(hardcode_direct, $1)=yes
+      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+      if test -z "`echo __ELF__ | $CC -E - | grep __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-retain-symbols-file,$export_symbols'
+	_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
+	_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+      else
+       case $host_os in
+	 openbsd[[01]].* | openbsd2.[[0-7]] | openbsd2.[[0-7]].*)
+	   _LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+	   _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'
+	   ;;
+	 *)
+	   _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
+	   _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
+	   ;;
+       esac
+      fi
+      ;;
+
+    os2*)
+      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
+      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes
+      _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported
+      _LT_AC_TAGVAR(archive_cmds, $1)='$echo "LIBRARY $libname INITINSTANCE" > $output_objdir/$libname.def~$echo "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~$echo DATA >> $output_objdir/$libname.def~$echo " SINGLE NONSHARED" >> $output_objdir/$libname.def~$echo EXPORTS >> $output_objdir/$libname.def~emxexp $libobjs >> $output_objdir/$libname.def~$CC -Zdll -Zcrtdll -o $lib $libobjs $deplibs $compiler_flags $output_objdir/$libname.def'
+      _LT_AC_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/$libname.a $output_objdir/$libname.def'
+      ;;
+
+    osf3*)
+      if test "$GCC" = yes; then
+	_LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\*'
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+      else
+	_LT_AC_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \*'
+	_LT_AC_TAGVAR(archive_cmds, $1)='$LD -shared${allow_undefined_flag} $libobjs $deplibs $linker_flags -soname $soname `test -n "$verstring" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'
+      fi
+      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:
+      ;;
+
+    osf4* | osf5*)	# as osf3* with the addition of -msym flag
+      if test "$GCC" = yes; then
+	_LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\*'
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n "$verstring" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+	_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+      else
+	_LT_AC_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \*'
+	_LT_AC_TAGVAR(archive_cmds, $1)='$LD -shared${allow_undefined_flag} $libobjs $deplibs $linker_flags -msym -soname $soname `test -n "$verstring" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf "%s %s\\n" -exported_symbol "\$i" >> $lib.exp; done; echo "-hidden">> $lib.exp~
+	$LD -shared${allow_undefined_flag} -input $lib.exp $linker_flags $libobjs $deplibs -soname $soname `test -n "$verstring" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib~$rm $lib.exp'
+
+	# Both c and cxx compiler support -rpath directly
+	_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'
+      fi
+      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:
+      ;;
+
+    solaris*)
+      _LT_AC_TAGVAR(no_undefined_flag, $1)=' -z text'
+      if test "$GCC" = yes; then
+	wlarc='${wl}'
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~$echo "local: *; };" >> $lib.exp~
+	  $CC -shared ${wl}-M ${wl}$lib.exp ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags~$rm $lib.exp'
+      else
+	wlarc=''
+	_LT_AC_TAGVAR(archive_cmds, $1)='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~$echo "local: *; };" >> $lib.exp~
+  	$LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$rm $lib.exp'
+      fi
+      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'
+      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+      case $host_os in
+      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;
+      *)
+ 	# The compiler driver will combine linker options so we
+ 	# cannot just pass the convience library names through
+ 	# without $wl, iff we do not link with $LD.
+ 	# Luckily, gcc supports the same syntax we need for Sun Studio.
+ 	# Supported since Solaris 2.6 (maybe 2.5.1?)
+ 	case $wlarc in
+ 	'')
+ 	  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract' ;;
+ 	*)
+ 	  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)='${wl}-z ${wl}allextract`for conv in $convenience\"\"; do test -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $echo \"$new_convenience\"` ${wl}-z ${wl}defaultextract' ;;
+ 	esac ;;
+      esac
+      _LT_AC_TAGVAR(link_all_deplibs, $1)=yes
+      ;;
+
+    sunos4*)
+      if test "x$host_vendor" = xsequent; then
+	# Use $CC to link under sequent, because it throws in some extra .o
+	# files that make .init and .fini sections work.
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h $soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	_LT_AC_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'
+      fi
+      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
+      _LT_AC_TAGVAR(hardcode_direct, $1)=yes
+      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes
+      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+      ;;
+
+    sysv4)
+      case $host_vendor in
+	sni)
+	  _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	  _LT_AC_TAGVAR(hardcode_direct, $1)=yes # is this really true???
+	;;
+	siemens)
+	  ## LD is ld it makes a PLAMLIB
+	  ## CC just makes a GrossModule.
+	  _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -o $lib $libobjs $deplibs $linker_flags'
+	  _LT_AC_TAGVAR(reload_cmds, $1)='$CC -r -o $output$reload_objs'
+	  _LT_AC_TAGVAR(hardcode_direct, $1)=no
+        ;;
+	motorola)
+	  _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	  _LT_AC_TAGVAR(hardcode_direct, $1)=no #Motorola manual says yes, but my tests say they lie
+	;;
+      esac
+      runpath_var='LD_RUN_PATH'
+      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+      ;;
+
+    sysv4.3*)
+      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='-Bexport'
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec; then
+	_LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	_LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+	runpath_var=LD_RUN_PATH
+	hardcode_runpath_var=yes
+	_LT_AC_TAGVAR(ld_shlibs, $1)=yes
+      fi
+      ;;
+
+    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7*)
+      _LT_AC_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'
+      _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no
+      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+      runpath_var='LD_RUN_PATH'
+
+      if test "$GCC" = yes; then
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      fi
+      ;;
+
+    sysv5* | sco3.2v5* | sco5v6*)
+      # Note: We can NOT use -z defs as we might desire, because we do not
+      # link with -lc, and that would cause any symbols used from libc to
+      # always be unresolved, which means just about no library would
+      # ever link correctly.  If we're not using GNU ld we use -z text
+      # though, which does catch some bad symbols but isn't as heavy-handed
+      # as -z defs.
+      _LT_AC_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'
+      _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-z,nodefs'
+      _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no
+      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='`test -z "$SCOABSPATH" && echo ${wl}-R,$libdir`'
+      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=':'
+      _LT_AC_TAGVAR(link_all_deplibs, $1)=yes
+      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Bexport'
+      runpath_var='LD_RUN_PATH'
+
+      if test "$GCC" = yes; then
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	_LT_AC_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+      fi
+      ;;
+
+    uts4*)
+      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
+      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
+      ;;
+
+    *)
+      _LT_AC_TAGVAR(ld_shlibs, $1)=no
+      ;;
+    esac
+  fi
+])
+AC_MSG_RESULT([$_LT_AC_TAGVAR(ld_shlibs, $1)])
+test "$_LT_AC_TAGVAR(ld_shlibs, $1)" = no && can_build_shared=no
+
+#
+# Do we need to explicitly link libc?
+#
+case "x$_LT_AC_TAGVAR(archive_cmds_need_lc, $1)" in
+x|xyes)
+  # Assume -lc should be added
+  _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=yes
+
+  if test "$enable_shared" = yes && test "$GCC" = yes; then
+    case $_LT_AC_TAGVAR(archive_cmds, $1) in
+    *'~'*)
+      # FIXME: we may have to deal with multi-command sequences.
+      ;;
+    '$CC '*)
+      # Test whether the compiler implicitly links with -lc since on some
+      # systems, -lgcc has to come before -lc. If gcc already passes -lc
+      # to ld, don't add -lc before -lgcc.
+      AC_MSG_CHECKING([whether -lc should be explicitly linked in])
+      $rm conftest*
+      printf "$lt_simple_compile_test_code" > conftest.$ac_ext
+
+      if AC_TRY_EVAL(ac_compile) 2>conftest.err; then
+        soname=conftest
+        lib=conftest
+        libobjs=conftest.$ac_objext
+        deplibs=
+        wl=$_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)
+	pic_flag=$_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)
+        compiler_flags=-v
+        linker_flags=-v
+        verstring=
+        output_objdir=.
+        libname=conftest
+        lt_save_allow_undefined_flag=$_LT_AC_TAGVAR(allow_undefined_flag, $1)
+        _LT_AC_TAGVAR(allow_undefined_flag, $1)=
+        if AC_TRY_EVAL(_LT_AC_TAGVAR(archive_cmds, $1) 2\>\&1 \| grep \" -lc \" \>/dev/null 2\>\&1)
+        then
+	  _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no
+        else
+	  _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=yes
+        fi
+        _LT_AC_TAGVAR(allow_undefined_flag, $1)=$lt_save_allow_undefined_flag
+      else
+        cat conftest.err 1>&5
+      fi
+      $rm conftest*
+      AC_MSG_RESULT([$_LT_AC_TAGVAR(archive_cmds_need_lc, $1)])
+      ;;
+    esac
+  fi
+  ;;
+esac
+])# AC_LIBTOOL_PROG_LD_SHLIBS
+
+
+# _LT_AC_FILE_LTDLL_C
+# -------------------
+# Be careful that the start marker always follows a newline.
+AC_DEFUN([_LT_AC_FILE_LTDLL_C], [
+# /* ltdll.c starts here */
+# #define WIN32_LEAN_AND_MEAN
+# #include <windows.h>
+# #undef WIN32_LEAN_AND_MEAN
+# #include <stdio.h>
+#
+# #ifndef __CYGWIN__
+# #  ifdef __CYGWIN32__
+# #    define __CYGWIN__ __CYGWIN32__
+# #  endif
+# #endif
+#
+# #ifdef __cplusplus
+# extern "C" {
+# #endif
+# BOOL APIENTRY DllMain (HINSTANCE hInst, DWORD reason, LPVOID reserved);
+# #ifdef __cplusplus
+# }
+# #endif
+#
+# #ifdef __CYGWIN__
+# #include <cygwin/cygwin_dll.h>
+# DECLARE_CYGWIN_DLL( DllMain );
+# #endif
+# HINSTANCE __hDllInstance_base;
+#
+# BOOL APIENTRY
+# DllMain (HINSTANCE hInst, DWORD reason, LPVOID reserved)
+# {
+#   __hDllInstance_base = hInst;
+#   return TRUE;
+# }
+# /* ltdll.c ends here */
+])# _LT_AC_FILE_LTDLL_C
+
+
+# _LT_AC_TAGVAR(VARNAME, [TAGNAME])
+# ---------------------------------
+AC_DEFUN([_LT_AC_TAGVAR], [ifelse([$2], [], [$1], [$1_$2])])
+
+
+# old names
+AC_DEFUN([AM_PROG_LIBTOOL],   [AC_PROG_LIBTOOL])
+AC_DEFUN([AM_ENABLE_SHARED],  [AC_ENABLE_SHARED($@)])
+AC_DEFUN([AM_ENABLE_STATIC],  [AC_ENABLE_STATIC($@)])
+AC_DEFUN([AM_DISABLE_SHARED], [AC_DISABLE_SHARED($@)])
+AC_DEFUN([AM_DISABLE_STATIC], [AC_DISABLE_STATIC($@)])
+AC_DEFUN([AM_PROG_LD],        [AC_PROG_LD])
+AC_DEFUN([AM_PROG_NM],        [AC_PROG_NM])
+
+# This is just to silence aclocal about the macro not being used
+ifelse([AC_DISABLE_FAST_INSTALL])
+
+AC_DEFUN([LT_AC_PROG_GCJ],
+[AC_CHECK_TOOL(GCJ, gcj, no)
+  test "x${GCJFLAGS+set}" = xset || GCJFLAGS="-g -O2"
+  AC_SUBST(GCJFLAGS)
+])
+
+AC_DEFUN([LT_AC_PROG_RC],
+[AC_CHECK_TOOL(RC, windres, no)
+])
+
+# NOTE: This macro has been submitted for inclusion into   #
+#  GNU Autoconf as AC_PROG_SED.  When it is available in   #
+#  a released version of Autoconf we should remove this    #
+#  macro and use it instead.                               #
+# LT_AC_PROG_SED
+# --------------
+# Check for a fully-functional sed program, that truncates
+# as few characters as possible.  Prefer GNU sed if found.
+AC_DEFUN([LT_AC_PROG_SED],
+[AC_MSG_CHECKING([for a sed that does not truncate output])
+AC_CACHE_VAL(lt_cv_path_SED,
+[# Loop through the user's path and test for sed and gsed.
+# Then use that list of sed's as ones to test for truncation.
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for lt_ac_prog in sed gsed; do
+    for ac_exec_ext in '' $ac_executable_extensions; do
+      if $as_executable_p "$as_dir/$lt_ac_prog$ac_exec_ext"; then
+        lt_ac_sed_list="$lt_ac_sed_list $as_dir/$lt_ac_prog$ac_exec_ext"
+      fi
+    done
+  done
+done
+lt_ac_max=0
+lt_ac_count=0
+# Add /usr/xpg4/bin/sed as it is typically found on Solaris
+# along with /bin/sed that truncates output.
+for lt_ac_sed in $lt_ac_sed_list /usr/xpg4/bin/sed; do
+  test ! -f $lt_ac_sed && continue
+  cat /dev/null > conftest.in
+  lt_ac_count=0
+  echo $ECHO_N "0123456789$ECHO_C" >conftest.in
+  # Check for GNU sed and select it if it is found.
+  if "$lt_ac_sed" --version 2>&1 < /dev/null | grep 'GNU' > /dev/null; then
+    lt_cv_path_SED=$lt_ac_sed
+    break
+  fi
+  while true; do
+    cat conftest.in conftest.in >conftest.tmp
+    mv conftest.tmp conftest.in
+    cp conftest.in conftest.nl
+    echo >>conftest.nl
+    $lt_ac_sed -e 's/a$//' < conftest.nl >conftest.out || break
+    cmp -s conftest.out conftest.nl || break
+    # 10000 chars as input seems more than enough
+    test $lt_ac_count -gt 10 && break
+    lt_ac_count=`expr $lt_ac_count + 1`
+    if test $lt_ac_count -gt $lt_ac_max; then
+      lt_ac_max=$lt_ac_count
+      lt_cv_path_SED=$lt_ac_sed
+    fi
+  done
+done
+])
+SED=$lt_cv_path_SED
+AC_MSG_RESULT([$SED])
+])
+
+# Copyright (C) 2002, 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# AM_AUTOMAKE_VERSION(VERSION)
+# ----------------------------
+# Automake X.Y traces this macro to ensure aclocal.m4 has been
+# generated from the m4 files accompanying Automake X.Y.
+AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version="1.9"])
+
+# AM_SET_CURRENT_AUTOMAKE_VERSION
+# -------------------------------
+# Call AM_AUTOMAKE_VERSION so it can be traced.
+# This function is AC_REQUIREd by AC_INIT_AUTOMAKE.
+AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],
+	 [AM_AUTOMAKE_VERSION([1.9.6])])
+
+# AM_AUX_DIR_EXPAND                                         -*- Autoconf -*-
+
+# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# For projects using AC_CONFIG_AUX_DIR([foo]), Autoconf sets
+# $ac_aux_dir to `$srcdir/foo'.  In other projects, it is set to
+# `$srcdir', `$srcdir/..', or `$srcdir/../..'.
+#
+# Of course, Automake must honor this variable whenever it calls a
+# tool from the auxiliary directory.  The problem is that $srcdir (and
+# therefore $ac_aux_dir as well) can be either absolute or relative,
+# depending on how configure is run.  This is pretty annoying, since
+# it makes $ac_aux_dir quite unusable in subdirectories: in the top
+# source directory, any form will work fine, but in subdirectories a
+# relative path needs to be adjusted first.
+#
+# $ac_aux_dir/missing
+#    fails when called from a subdirectory if $ac_aux_dir is relative
+# $top_srcdir/$ac_aux_dir/missing
+#    fails if $ac_aux_dir is absolute,
+#    fails when called from a subdirectory in a VPATH build with
+#          a relative $ac_aux_dir
+#
+# The reason of the latter failure is that $top_srcdir and $ac_aux_dir
+# are both prefixed by $srcdir.  In an in-source build this is usually
+# harmless because $srcdir is `.', but things will broke when you
+# start a VPATH build or use an absolute $srcdir.
+#
+# So we could use something similar to $top_srcdir/$ac_aux_dir/missing,
+# iff we strip the leading $srcdir from $ac_aux_dir.  That would be:
+#   am_aux_dir='\$(top_srcdir)/'`expr "$ac_aux_dir" : "$srcdir//*\(.*\)"`
+# and then we would define $MISSING as
+#   MISSING="\${SHELL} $am_aux_dir/missing"
+# This will work as long as MISSING is not called from configure, because
+# unfortunately $(top_srcdir) has no meaning in configure.
+# However there are other variables, like CC, which are often used in
+# configure, and could therefore not use this "fixed" $ac_aux_dir.
+#
+# Another solution, used here, is to always expand $ac_aux_dir to an
+# absolute PATH.  The drawback is that using absolute paths prevent a
+# configured tree to be moved without reconfiguration.
+
+AC_DEFUN([AM_AUX_DIR_EXPAND],
+[dnl Rely on autoconf to set up CDPATH properly.
+AC_PREREQ([2.50])dnl
+# expand $ac_aux_dir to an absolute path
+am_aux_dir=`cd $ac_aux_dir && pwd`
+])
+
+# AM_CONDITIONAL                                            -*- Autoconf -*-
+
+# Copyright (C) 1997, 2000, 2001, 2003, 2004, 2005
+# Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# serial 7
+
+# AM_CONDITIONAL(NAME, SHELL-CONDITION)
+# -------------------------------------
+# Define a conditional.
+AC_DEFUN([AM_CONDITIONAL],
+[AC_PREREQ(2.52)dnl
+ ifelse([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],
+	[$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl
+AC_SUBST([$1_TRUE])
+AC_SUBST([$1_FALSE])
+if $2; then
+  $1_TRUE=
+  $1_FALSE='#'
+else
+  $1_TRUE='#'
+  $1_FALSE=
+fi
+AC_CONFIG_COMMANDS_PRE(
+[if test -z "${$1_TRUE}" && test -z "${$1_FALSE}"; then
+  AC_MSG_ERROR([[conditional "$1" was never defined.
+Usually this means the macro was only invoked conditionally.]])
+fi])])
+
+
+# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005
+# Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# serial 8
+
+# There are a few dirty hacks below to avoid letting `AC_PROG_CC' be
+# written in clear, in which case automake, when reading aclocal.m4,
+# will think it sees a *use*, and therefore will trigger all it's
+# C support machinery.  Also note that it means that autoscan, seeing
+# CC etc. in the Makefile, will ask for an AC_PROG_CC use...
+
+
+# _AM_DEPENDENCIES(NAME)
+# ----------------------
+# See how the compiler implements dependency checking.
+# NAME is "CC", "CXX", "GCJ", or "OBJC".
+# We try a few techniques and use that to set a single cache variable.
+#
+# We don't AC_REQUIRE the corresponding AC_PROG_CC since the latter was
+# modified to invoke _AM_DEPENDENCIES(CC); we would have a circular
+# dependency, and given that the user is not expected to run this macro,
+# just rely on AC_PROG_CC.
+AC_DEFUN([_AM_DEPENDENCIES],
+[AC_REQUIRE([AM_SET_DEPDIR])dnl
+AC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl
+AC_REQUIRE([AM_MAKE_INCLUDE])dnl
+AC_REQUIRE([AM_DEP_TRACK])dnl
+
+ifelse([$1], CC,   [depcc="$CC"   am_compiler_list=],
+       [$1], CXX,  [depcc="$CXX"  am_compiler_list=],
+       [$1], OBJC, [depcc="$OBJC" am_compiler_list='gcc3 gcc'],
+       [$1], GCJ,  [depcc="$GCJ"  am_compiler_list='gcc3 gcc'],
+                   [depcc="$$1"   am_compiler_list=])
+
+AC_CACHE_CHECK([dependency style of $depcc],
+               [am_cv_$1_dependencies_compiler_type],
+[if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
+  # We make a subdir and do the tests there.  Otherwise we can end up
+  # making bogus files that we don't know about and never remove.  For
+  # instance it was reported that on HP-UX the gcc test will end up
+  # making a dummy file named `D' -- because `-MD' means `put the output
+  # in D'.
+  mkdir conftest.dir
+  # Copy depcomp to subdir because otherwise we won't find it if we're
+  # using a relative directory.
+  cp "$am_depcomp" conftest.dir
+  cd conftest.dir
+  # We will build objects and dependencies in a subdirectory because
+  # it helps to detect inapplicable dependency modes.  For instance
+  # both Tru64's cc and ICC support -MD to output dependencies as a
+  # side effect of compilation, but ICC will put the dependencies in
+  # the current directory while Tru64 will put them in the object
+  # directory.
+  mkdir sub
+
+  am_cv_$1_dependencies_compiler_type=none
+  if test "$am_compiler_list" = ""; then
+     am_compiler_list=`sed -n ['s/^#*\([a-zA-Z0-9]*\))$/\1/p'] < ./depcomp`
+  fi
+  for depmode in $am_compiler_list; do
+    # Setup a source with many dependencies, because some compilers
+    # like to wrap large dependency lists on column 80 (with \), and
+    # we should not choose a depcomp mode which is confused by this.
+    #
+    # We need to recreate these files for each test, as the compiler may
+    # overwrite some of them when testing with obscure command lines.
+    # This happens at least with the AIX C compiler.
+    : > sub/conftest.c
+    for i in 1 2 3 4 5 6; do
+      echo '#include "conftst'$i'.h"' >> sub/conftest.c
+      # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with
+      # Solaris 8's {/usr,}/bin/sh.
+      touch sub/conftst$i.h
+    done
+    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf
+
+    case $depmode in
+    nosideeffect)
+      # after this tag, mechanisms are not by side-effect, so they'll
+      # only be used when explicitly requested
+      if test "x$enable_dependency_tracking" = xyes; then
+	continue
+      else
+	break
+      fi
+      ;;
+    none) break ;;
+    esac
+    # We check with `-c' and `-o' for the sake of the "dashmstdout"
+    # mode.  It turns out that the SunPro C++ compiler does not properly
+    # handle `-M -o', and we need to detect this.
+    if depmode=$depmode \
+       source=sub/conftest.c object=sub/conftest.${OBJEXT-o} \
+       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
+       $SHELL ./depcomp $depcc -c -o sub/conftest.${OBJEXT-o} sub/conftest.c \
+         >/dev/null 2>conftest.err &&
+       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
+       grep sub/conftest.${OBJEXT-o} sub/conftest.Po > /dev/null 2>&1 &&
+       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
+      # icc doesn't choke on unknown options, it will just issue warnings
+      # or remarks (even with -Werror).  So we grep stderr for any message
+      # that says an option was ignored or not supported.
+      # When given -MP, icc 7.0 and 7.1 complain thusly:
+      #   icc: Command line warning: ignoring option '-M'; no argument required
+      # The diagnosis changed in icc 8.0:
+      #   icc: Command line remark: option '-MP' not supported
+      if (grep 'ignoring option' conftest.err ||
+          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
+        am_cv_$1_dependencies_compiler_type=$depmode
+        break
+      fi
+    fi
+  done
+
+  cd ..
+  rm -rf conftest.dir
+else
+  am_cv_$1_dependencies_compiler_type=none
+fi
+])
+AC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])
+AM_CONDITIONAL([am__fastdep$1], [
+  test "x$enable_dependency_tracking" != xno \
+  && test "$am_cv_$1_dependencies_compiler_type" = gcc3])
+])
+
+
+# AM_SET_DEPDIR
+# -------------
+# Choose a directory name for dependency files.
+# This macro is AC_REQUIREd in _AM_DEPENDENCIES
+AC_DEFUN([AM_SET_DEPDIR],
+[AC_REQUIRE([AM_SET_LEADING_DOT])dnl
+AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])dnl
+])
+
+
+# AM_DEP_TRACK
+# ------------
+AC_DEFUN([AM_DEP_TRACK],
+[AC_ARG_ENABLE(dependency-tracking,
+[  --disable-dependency-tracking  speeds up one-time build
+  --enable-dependency-tracking   do not reject slow dependency extractors])
+if test "x$enable_dependency_tracking" != xno; then
+  am_depcomp="$ac_aux_dir/depcomp"
+  AMDEPBACKSLASH='\'
+fi
+AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
+AC_SUBST([AMDEPBACKSLASH])
+])
+
+# Generate code to set up dependency tracking.              -*- Autoconf -*-
+
+# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005
+# Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+#serial 3
+
+# _AM_OUTPUT_DEPENDENCY_COMMANDS
+# ------------------------------
+AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS],
+[for mf in $CONFIG_FILES; do
+  # Strip MF so we end up with the name of the file.
+  mf=`echo "$mf" | sed -e 's/:.*$//'`
+  # Check whether this is an Automake generated Makefile or not.
+  # We used to match only the files named `Makefile.in', but
+  # some people rename them; so instead we look at the file content.
+  # Grep'ing the first line is not enough: some people post-process
+  # each Makefile.in and add a new line on top of each file to say so.
+  # So let's grep whole file.
+  if grep '^#.*generated by automake' $mf > /dev/null 2>&1; then
+    dirpart=`AS_DIRNAME("$mf")`
+  else
+    continue
+  fi
+  # Extract the definition of DEPDIR, am__include, and am__quote
+  # from the Makefile without running `make'.
+  DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
+  test -z "$DEPDIR" && continue
+  am__include=`sed -n 's/^am__include = //p' < "$mf"`
+  test -z "am__include" && continue
+  am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
+  # When using ansi2knr, U may be empty or an underscore; expand it
+  U=`sed -n 's/^U = //p' < "$mf"`
+  # Find all dependency output files, they are included files with
+  # $(DEPDIR) in their names.  We invoke sed twice because it is the
+  # simplest approach to changing $(DEPDIR) to its actual value in the
+  # expansion.
+  for file in `sed -n "
+    s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
+       sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
+    # Make sure the directory exists.
+    test -f "$dirpart/$file" && continue
+    fdir=`AS_DIRNAME(["$file"])`
+    AS_MKDIR_P([$dirpart/$fdir])
+    # echo "creating $dirpart/$file"
+    echo '# dummy' > "$dirpart/$file"
+  done
+done
+])# _AM_OUTPUT_DEPENDENCY_COMMANDS
+
+
+# AM_OUTPUT_DEPENDENCY_COMMANDS
+# -----------------------------
+# This macro should only be invoked once -- use via AC_REQUIRE.
+#
+# This code is only required when automatic dependency tracking
+# is enabled.  FIXME.  This creates each `.P' file that we will
+# need in order to bootstrap the dependency handling code.
+AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS],
+[AC_CONFIG_COMMANDS([depfiles],
+     [test x"$AMDEP_TRUE" != x"" || _AM_OUTPUT_DEPENDENCY_COMMANDS],
+     [AMDEP_TRUE="$AMDEP_TRUE" ac_aux_dir="$ac_aux_dir"])
+])
+
+# Copyright (C) 1996, 1997, 2000, 2001, 2003, 2005
+# Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# serial 8
+
+# AM_CONFIG_HEADER is obsolete.  It has been replaced by AC_CONFIG_HEADERS.
+AU_DEFUN([AM_CONFIG_HEADER], [AC_CONFIG_HEADERS($@)])
+
+# Do all the work for Automake.                             -*- Autoconf -*-
+
+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005
+# Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# serial 12
+
+# This macro actually does too much.  Some checks are only needed if
+# your package does certain things.  But this isn't really a big deal.
+
+# AM_INIT_AUTOMAKE(PACKAGE, VERSION, [NO-DEFINE])
+# AM_INIT_AUTOMAKE([OPTIONS])
+# -----------------------------------------------
+# The call with PACKAGE and VERSION arguments is the old style
+# call (pre autoconf-2.50), which is being phased out.  PACKAGE
+# and VERSION should now be passed to AC_INIT and removed from
+# the call to AM_INIT_AUTOMAKE.
+# We support both call styles for the transition.  After
+# the next Automake release, Autoconf can make the AC_INIT
+# arguments mandatory, and then we can depend on a new Autoconf
+# release and drop the old call support.
+AC_DEFUN([AM_INIT_AUTOMAKE],
+[AC_PREREQ([2.58])dnl
+dnl Autoconf wants to disallow AM_ names.  We explicitly allow
+dnl the ones we care about.
+m4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl
+AC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl
+AC_REQUIRE([AC_PROG_INSTALL])dnl
+# test to see if srcdir already configured
+if test "`cd $srcdir && pwd`" != "`pwd`" &&
+   test -f $srcdir/config.status; then
+  AC_MSG_ERROR([source directory already configured; run "make distclean" there first])
+fi
+
+# test whether we have cygpath
+if test -z "$CYGPATH_W"; then
+  if (cygpath --version) >/dev/null 2>/dev/null; then
+    CYGPATH_W='cygpath -w'
+  else
+    CYGPATH_W=echo
+  fi
+fi
+AC_SUBST([CYGPATH_W])
+
+# Define the identity of the package.
+dnl Distinguish between old-style and new-style calls.
+m4_ifval([$2],
+[m4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl
+ AC_SUBST([PACKAGE], [$1])dnl
+ AC_SUBST([VERSION], [$2])],
+[_AM_SET_OPTIONS([$1])dnl
+ AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl
+ AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl
+
+_AM_IF_OPTION([no-define],,
+[AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE", [Name of package])
+ AC_DEFINE_UNQUOTED(VERSION, "$VERSION", [Version number of package])])dnl
+
+# Some tools Automake needs.
+AC_REQUIRE([AM_SANITY_CHECK])dnl
+AC_REQUIRE([AC_ARG_PROGRAM])dnl
+AM_MISSING_PROG(ACLOCAL, aclocal-${am__api_version})
+AM_MISSING_PROG(AUTOCONF, autoconf)
+AM_MISSING_PROG(AUTOMAKE, automake-${am__api_version})
+AM_MISSING_PROG(AUTOHEADER, autoheader)
+AM_MISSING_PROG(MAKEINFO, makeinfo)
+AM_PROG_INSTALL_SH
+AM_PROG_INSTALL_STRIP
+AC_REQUIRE([AM_PROG_MKDIR_P])dnl
+# We need awk for the "check" target.  The system "awk" is bad on
+# some platforms.
+AC_REQUIRE([AC_PROG_AWK])dnl
+AC_REQUIRE([AC_PROG_MAKE_SET])dnl
+AC_REQUIRE([AM_SET_LEADING_DOT])dnl
+_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],
+              [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
+	      		     [_AM_PROG_TAR([v7])])])
+_AM_IF_OPTION([no-dependencies],,
+[AC_PROVIDE_IFELSE([AC_PROG_CC],
+                  [_AM_DEPENDENCIES(CC)],
+                  [define([AC_PROG_CC],
+                          defn([AC_PROG_CC])[_AM_DEPENDENCIES(CC)])])dnl
+AC_PROVIDE_IFELSE([AC_PROG_CXX],
+                  [_AM_DEPENDENCIES(CXX)],
+                  [define([AC_PROG_CXX],
+                          defn([AC_PROG_CXX])[_AM_DEPENDENCIES(CXX)])])dnl
+])
+])
+
+
+# When config.status generates a header, we must update the stamp-h file.
+# This file resides in the same directory as the config header
+# that is generated.  The stamp files are numbered to have different names.
+
+# Autoconf calls _AC_AM_CONFIG_HEADER_HOOK (when defined) in the
+# loop where config.status creates the headers, so we can generate
+# our stamp files there.
+AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK],
+[# Compute $1's index in $config_headers.
+_am_stamp_count=1
+for _am_header in $config_headers :; do
+  case $_am_header in
+    $1 | $1:* )
+      break ;;
+    * )
+      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
+  esac
+done
+echo "timestamp for $1" >`AS_DIRNAME([$1])`/stamp-h[]$_am_stamp_count])
+
+# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# AM_PROG_INSTALL_SH
+# ------------------
+# Define $install_sh.
+AC_DEFUN([AM_PROG_INSTALL_SH],
+[AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
+install_sh=${install_sh-"$am_aux_dir/install-sh"}
+AC_SUBST(install_sh)])
+
+# Copyright (C) 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# serial 2
+
+# Check whether the underlying file-system supports filenames
+# with a leading dot.  For instance MS-DOS doesn't.
+AC_DEFUN([AM_SET_LEADING_DOT],
+[rm -rf .tst 2>/dev/null
+mkdir .tst 2>/dev/null
+if test -d .tst; then
+  am__leading_dot=.
+else
+  am__leading_dot=_
+fi
+rmdir .tst 2>/dev/null
+AC_SUBST([am__leading_dot])])
+
+# Check to see how 'make' treats includes.	            -*- Autoconf -*-
+
+# Copyright (C) 2001, 2002, 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# serial 3
+
+# AM_MAKE_INCLUDE()
+# -----------------
+# Check to see how make treats includes.
+AC_DEFUN([AM_MAKE_INCLUDE],
+[am_make=${MAKE-make}
+cat > confinc << 'END'
+am__doit:
+	@echo done
+.PHONY: am__doit
+END
+# If we don't find an include directive, just comment out the code.
+AC_MSG_CHECKING([for style of include used by $am_make])
+am__include="#"
+am__quote=
+_am_result=none
+# First try GNU make style include.
+echo "include confinc" > confmf
+# We grep out `Entering directory' and `Leaving directory'
+# messages which can occur if `w' ends up in MAKEFLAGS.
+# In particular we don't look at `^make:' because GNU make might
+# be invoked under some other name (usually "gmake"), in which
+# case it prints its new name instead of `make'.
+if test "`$am_make -s -f confmf 2> /dev/null | grep -v 'ing directory'`" = "done"; then
+   am__include=include
+   am__quote=
+   _am_result=GNU
+fi
+# Now try BSD make style include.
+if test "$am__include" = "#"; then
+   echo '.include "confinc"' > confmf
+   if test "`$am_make -s -f confmf 2> /dev/null`" = "done"; then
+      am__include=.include
+      am__quote="\""
+      _am_result=BSD
+   fi
+fi
+AC_SUBST([am__include])
+AC_SUBST([am__quote])
+AC_MSG_RESULT([$_am_result])
+rm -f confinc confmf
+])
+
+# Fake the existence of programs that GNU maintainers use.  -*- Autoconf -*-
+
+# Copyright (C) 1997, 1999, 2000, 2001, 2003, 2005
+# Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# serial 4
+
+# AM_MISSING_PROG(NAME, PROGRAM)
+# ------------------------------
+AC_DEFUN([AM_MISSING_PROG],
+[AC_REQUIRE([AM_MISSING_HAS_RUN])
+$1=${$1-"${am_missing_run}$2"}
+AC_SUBST($1)])
+
+
+# AM_MISSING_HAS_RUN
+# ------------------
+# Define MISSING if not defined so far and test if it supports --run.
+# If it does, set am_missing_run to use it, otherwise, to nothing.
+AC_DEFUN([AM_MISSING_HAS_RUN],
+[AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
+test x"${MISSING+set}" = xset || MISSING="\${SHELL} $am_aux_dir/missing"
+# Use eval to expand $SHELL
+if eval "$MISSING --run true"; then
+  am_missing_run="$MISSING --run "
+else
+  am_missing_run=
+  AC_MSG_WARN([`missing' script is too old or missing])
+fi
+])
+
+# Copyright (C) 2003, 2004, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# AM_PROG_MKDIR_P
+# ---------------
+# Check whether `mkdir -p' is supported, fallback to mkinstalldirs otherwise.
+#
+# Automake 1.8 used `mkdir -m 0755 -p --' to ensure that directories
+# created by `make install' are always world readable, even if the
+# installer happens to have an overly restrictive umask (e.g. 077).
+# This was a mistake.  There are at least two reasons why we must not
+# use `-m 0755':
+#   - it causes special bits like SGID to be ignored,
+#   - it may be too restrictive (some setups expect 775 directories).
+#
+# Do not use -m 0755 and let people choose whatever they expect by
+# setting umask.
+#
+# We cannot accept any implementation of `mkdir' that recognizes `-p'.
+# Some implementations (such as Solaris 8's) are not thread-safe: if a
+# parallel make tries to run `mkdir -p a/b' and `mkdir -p a/c'
+# concurrently, both version can detect that a/ is missing, but only
+# one can create it and the other will error out.  Consequently we
+# restrict ourselves to GNU make (using the --version option ensures
+# this.)
+AC_DEFUN([AM_PROG_MKDIR_P],
+[if mkdir -p --version . >/dev/null 2>&1 && test ! -d ./--version; then
+  # We used to keeping the `.' as first argument, in order to
+  # allow $(mkdir_p) to be used without argument.  As in
+  #   $(mkdir_p) $(somedir)
+  # where $(somedir) is conditionally defined.  However this is wrong
+  # for two reasons:
+  #  1. if the package is installed by a user who cannot write `.'
+  #     make install will fail,
+  #  2. the above comment should most certainly read
+  #     $(mkdir_p) $(DESTDIR)$(somedir)
+  #     so it does not work when $(somedir) is undefined and
+  #     $(DESTDIR) is not.
+  #  To support the latter case, we have to write
+  #     test -z "$(somedir)" || $(mkdir_p) $(DESTDIR)$(somedir),
+  #  so the `.' trick is pointless.
+  mkdir_p='mkdir -p --'
+else
+  # On NextStep and OpenStep, the `mkdir' command does not
+  # recognize any option.  It will interpret all options as
+  # directories to create, and then abort because `.' already
+  # exists.
+  for d in ./-p ./--version;
+  do
+    test -d $d && rmdir $d
+  done
+  # $(mkinstalldirs) is defined by Automake if mkinstalldirs exists.
+  if test -f "$ac_aux_dir/mkinstalldirs"; then
+    mkdir_p='$(mkinstalldirs)'
+  else
+    mkdir_p='$(install_sh) -d'
+  fi
+fi
+AC_SUBST([mkdir_p])])
+
+# Helper functions for option handling.                     -*- Autoconf -*-
+
+# Copyright (C) 2001, 2002, 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# serial 3
+
+# _AM_MANGLE_OPTION(NAME)
+# -----------------------
+AC_DEFUN([_AM_MANGLE_OPTION],
+[[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])
+
+# _AM_SET_OPTION(NAME)
+# ------------------------------
+# Set option NAME.  Presently that only means defining a flag for this option.
+AC_DEFUN([_AM_SET_OPTION],
+[m4_define(_AM_MANGLE_OPTION([$1]), 1)])
+
+# _AM_SET_OPTIONS(OPTIONS)
+# ----------------------------------
+# OPTIONS is a space-separated list of Automake options.
+AC_DEFUN([_AM_SET_OPTIONS],
+[AC_FOREACH([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])
+
+# _AM_IF_OPTION(OPTION, IF-SET, [IF-NOT-SET])
+# -------------------------------------------
+# Execute IF-SET if OPTION is set, IF-NOT-SET otherwise.
+AC_DEFUN([_AM_IF_OPTION],
+[m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
+
+# Check to make sure that the build environment is sane.    -*- Autoconf -*-
+
+# Copyright (C) 1996, 1997, 2000, 2001, 2003, 2005
+# Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# serial 4
+
+# AM_SANITY_CHECK
+# ---------------
+AC_DEFUN([AM_SANITY_CHECK],
+[AC_MSG_CHECKING([whether build environment is sane])
+# Just in case
+sleep 1
+echo timestamp > conftest.file
+# Do `set' in a subshell so we don't clobber the current shell's
+# arguments.  Must try -L first in case configure is actually a
+# symlink; some systems play weird games with the mod time of symlinks
+# (eg FreeBSD returns the mod time of the symlink's containing
+# directory).
+if (
+   set X `ls -Lt $srcdir/configure conftest.file 2> /dev/null`
+   if test "$[*]" = "X"; then
+      # -L didn't work.
+      set X `ls -t $srcdir/configure conftest.file`
+   fi
+   rm -f conftest.file
+   if test "$[*]" != "X $srcdir/configure conftest.file" \
+      && test "$[*]" != "X conftest.file $srcdir/configure"; then
+
+      # If neither matched, then we have a broken ls.  This can happen
+      # if, for instance, CONFIG_SHELL is bash and it inherits a
+      # broken ls alias from the environment.  This has actually
+      # happened.  Such a system could not be considered "sane".
+      AC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken
+alias in your environment])
+   fi
+
+   test "$[2]" = conftest.file
+   )
+then
+   # Ok.
+   :
+else
+   AC_MSG_ERROR([newly created file is older than distributed files!
+Check your system clock])
+fi
+AC_MSG_RESULT(yes)])
+
+# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# AM_PROG_INSTALL_STRIP
+# ---------------------
+# One issue with vendor `install' (even GNU) is that you can't
+# specify the program used to strip binaries.  This is especially
+# annoying in cross-compiling environments, where the build's strip
+# is unlikely to handle the host's binaries.
+# Fortunately install-sh will honor a STRIPPROG variable, so we
+# always use install-sh in `make install-strip', and initialize
+# STRIPPROG with the value of the STRIP variable (set by the user).
+AC_DEFUN([AM_PROG_INSTALL_STRIP],
+[AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
+# Installed binaries are usually stripped using `strip' when the user
+# run `make install-strip'.  However `strip' might not be the right
+# tool to use in cross-compilation environments, therefore Automake
+# will honor the `STRIP' environment variable to overrule this program.
+dnl Don't test for $cross_compiling = yes, because it might be `maybe'.
+if test "$cross_compiling" != no; then
+  AC_CHECK_TOOL([STRIP], [strip], :)
+fi
+INSTALL_STRIP_PROGRAM="\${SHELL} \$(install_sh) -c -s"
+AC_SUBST([INSTALL_STRIP_PROGRAM])])
+
+# Check how to create a tarball.                            -*- Autoconf -*-
+
+# Copyright (C) 2004, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# serial 2
+
+# _AM_PROG_TAR(FORMAT)
+# --------------------
+# Check how to create a tarball in format FORMAT.
+# FORMAT should be one of `v7', `ustar', or `pax'.
+#
+# Substitute a variable $(am__tar) that is a command
+# writing to stdout a FORMAT-tarball containing the directory
+# $tardir.
+#     tardir=directory && $(am__tar) > result.tar
+#
+# Substitute a variable $(am__untar) that extract such
+# a tarball read from stdin.
+#     $(am__untar) < result.tar
+AC_DEFUN([_AM_PROG_TAR],
+[# Always define AMTAR for backward compatibility.
+AM_MISSING_PROG([AMTAR], [tar])
+m4_if([$1], [v7],
+     [am__tar='${AMTAR} chof - "$$tardir"'; am__untar='${AMTAR} xf -'],
+     [m4_case([$1], [ustar],, [pax],,
+              [m4_fatal([Unknown tar format])])
+AC_MSG_CHECKING([how to create a $1 tar archive])
+# Loop over all known methods to create a tar archive until one works.
+_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'
+_am_tools=${am_cv_prog_tar_$1-$_am_tools}
+# Do not fold the above two line into one, because Tru64 sh and
+# Solaris sh will not grok spaces in the rhs of `-'.
+for _am_tool in $_am_tools
+do
+  case $_am_tool in
+  gnutar)
+    for _am_tar in tar gnutar gtar;
+    do
+      AM_RUN_LOG([$_am_tar --version]) && break
+    done
+    am__tar="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$$tardir"'
+    am__tar_="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$tardir"'
+    am__untar="$_am_tar -xf -"
+    ;;
+  plaintar)
+    # Must skip GNU tar: if it does not support --format= it doesn't create
+    # ustar tarball either.
+    (tar --version) >/dev/null 2>&1 && continue
+    am__tar='tar chf - "$$tardir"'
+    am__tar_='tar chf - "$tardir"'
+    am__untar='tar xf -'
+    ;;
+  pax)
+    am__tar='pax -L -x $1 -w "$$tardir"'
+    am__tar_='pax -L -x $1 -w "$tardir"'
+    am__untar='pax -r'
+    ;;
+  cpio)
+    am__tar='find "$$tardir" -print | cpio -o -H $1 -L'
+    am__tar_='find "$tardir" -print | cpio -o -H $1 -L'
+    am__untar='cpio -i -H $1 -d'
+    ;;
+  none)
+    am__tar=false
+    am__tar_=false
+    am__untar=false
+    ;;
+  esac
+
+  # If the value was cached, stop now.  We just wanted to have am__tar
+  # and am__untar set.
+  test -n "${am_cv_prog_tar_$1}" && break
+
+  # tar/untar a dummy directory, and stop if the command works
+  rm -rf conftest.dir
+  mkdir conftest.dir
+  echo GrepMe > conftest.dir/file
+  AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
+  rm -rf conftest.dir
+  if test -s conftest.tar; then
+    AM_RUN_LOG([$am__untar <conftest.tar])
+    grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
+  fi
+done
+rm -rf conftest.dir
+
+AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])
+AC_MSG_RESULT([$am_cv_prog_tar_$1])])
+AC_SUBST([am__tar])
+AC_SUBST([am__untar])
+]) # _AM_PROG_TAR
+
+m4_include([m4/ax_compare_version.m4])
+m4_include([m4/colored-echo.m4])
+m4_include([m4/erlang.m4])
+m4_include([m4/expat.m4])
+m4_include([m4/openssl.m4])
+m4_include([m4/pkg.m4])
+m4_include([m4/zlib.m4])
diff -r d551623afde5 deps/exmpp/c_src/Makefile
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/c_src/Makefile	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,803 @@
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
+# c_src/Makefile.  Generated from Makefile.in by configure.
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+
+
+srcdir = .
+top_srcdir = ..
+
+pkgdatadir = $(datadir)/exmpp
+pkglibdir = $(libdir)/exmpp
+pkgincludedir = $(includedir)/exmpp
+top_builddir = ..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = /usr/bin/install -c
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = i686-pc-linux-gnu
+host_triplet = i686-pc-linux-gnu
+target_triplet = i686-pc-linux-gnu
+am__append_1 = exmpp_xml_expat.la exmpp_xml_expat_legacy.la
+am__append_2 = exmpp_xml_libxml2.la
+am__append_3 = exmpp_tls_openssl.la
+am__append_4 = exmpp_compress_zlib.la
+subdir = c_src
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_compare_version.m4 \
+	$(top_srcdir)/m4/colored-echo.m4 $(top_srcdir)/m4/erlang.m4 \
+	$(top_srcdir)/m4/expat.m4 $(top_srcdir)/m4/openssl.m4 \
+	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/zlib.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES =
+am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
+am__vpath_adj = case $$p in \
+    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
+    *) f=$$p;; \
+  esac;
+am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
+am__installdirs = "$(DESTDIR)$(execdriversdir)"
+execdriversLTLIBRARIES_INSTALL = $(INSTALL)
+LTLIBRARIES = $(execdrivers_LTLIBRARIES)
+exmpp_compress_zlib_la_LIBADD =
+am_exmpp_compress_zlib_la_OBJECTS =  \
+	exmpp_compress_zlib_la-exmpp_driver.lo \
+	exmpp_compress_zlib_la-exmpp_compress_zlib.lo
+exmpp_compress_zlib_la_OBJECTS = $(am_exmpp_compress_zlib_la_OBJECTS)
+am_exmpp_compress_zlib_la_rpath = -rpath \
+	$(execdriversdir)
+exmpp_stringprep_la_LIBADD =
+am_exmpp_stringprep_la_OBJECTS = exmpp_stringprep_la-exmpp_driver.lo \
+	exmpp_stringprep_la-exmpp_stringprep.lo
+exmpp_stringprep_la_OBJECTS = $(am_exmpp_stringprep_la_OBJECTS)
+exmpp_tls_openssl_la_LIBADD =
+am_exmpp_tls_openssl_la_OBJECTS =  \
+	exmpp_tls_openssl_la-exmpp_driver.lo \
+	exmpp_tls_openssl_la-exmpp_tls.lo \
+	exmpp_tls_openssl_la-exmpp_tls_openssl.lo
+exmpp_tls_openssl_la_OBJECTS = $(am_exmpp_tls_openssl_la_OBJECTS)
+am_exmpp_tls_openssl_la_rpath = -rpath \
+	$(execdriversdir)
+exmpp_xml_expat_la_LIBADD =
+am_exmpp_xml_expat_la_OBJECTS = exmpp_xml_expat_la-exmpp_driver.lo \
+	exmpp_xml_expat_la-exmpp_xml.lo \
+	exmpp_xml_expat_la-exmpp_xml_expat.lo
+exmpp_xml_expat_la_OBJECTS = $(am_exmpp_xml_expat_la_OBJECTS)
+am_exmpp_xml_expat_la_rpath = -rpath \
+	$(execdriversdir)
+exmpp_xml_expat_legacy_la_LIBADD =
+am_exmpp_xml_expat_legacy_la_OBJECTS =  \
+	exmpp_xml_expat_legacy_la-exmpp_driver.lo \
+	exmpp_xml_expat_legacy_la-exmpp_xml.lo \
+	exmpp_xml_expat_legacy_la-exmpp_xml_expat_legacy.lo
+exmpp_xml_expat_legacy_la_OBJECTS =  \
+	$(am_exmpp_xml_expat_legacy_la_OBJECTS)
+am_exmpp_xml_expat_legacy_la_rpath = -rpath \
+	$(execdriversdir)
+exmpp_xml_libxml2_la_LIBADD =
+am_exmpp_xml_libxml2_la_OBJECTS =  \
+	exmpp_xml_libxml2_la-exmpp_driver.lo \
+	exmpp_xml_libxml2_la-exmpp_xml.lo \
+	exmpp_xml_libxml2_la-exmpp_xml_libxml2.lo
+exmpp_xml_libxml2_la_OBJECTS = $(am_exmpp_xml_libxml2_la_OBJECTS)
+am_exmpp_xml_libxml2_la_rpath = -rpath \
+	$(execdriversdir)
+DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
+depcomp = $(SHELL) $(top_srcdir)/ac-aux/depcomp
+am__depfiles_maybe = depfiles
+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
+	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
+	$(AM_CFLAGS) $(CFLAGS)
+CCLD = $(CC)
+LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
+	$(AM_LDFLAGS) $(LDFLAGS) -o $@
+SOURCES = $(exmpp_compress_zlib_la_SOURCES) \
+	$(exmpp_stringprep_la_SOURCES) $(exmpp_tls_openssl_la_SOURCES) \
+	$(exmpp_xml_expat_la_SOURCES) \
+	$(exmpp_xml_expat_legacy_la_SOURCES) \
+	$(exmpp_xml_libxml2_la_SOURCES)
+DIST_SOURCES = $(exmpp_compress_zlib_la_SOURCES) \
+	$(exmpp_stringprep_la_SOURCES) $(exmpp_tls_openssl_la_SOURCES) \
+	$(exmpp_xml_expat_la_SOURCES) \
+	$(exmpp_xml_expat_legacy_la_SOURCES) \
+	$(exmpp_xml_libxml2_la_SOURCES)
+ETAGS = etags
+CTAGS = ctags
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run aclocal-1.9
+AMDEP_FALSE = #
+AMDEP_TRUE = 
+AMTAR = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run tar
+AR = ar
+AUTOCONF = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run autoconf
+AUTOHEADER = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run autoheader
+AUTOMAKE = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run automake-1.9
+AWK = mawk
+BUILD_COMPAT_FALSE = 
+BUILD_COMPAT_TRUE = #
+CC = gcc -std=gnu99
+CCDEPMODE = depmode=gcc3
+CFLAGS = -g -O2 -Wall -Werror
+COMPAT_MODULES = %
+COMPAT_MODULES_START =  % Compatibility modules disabled:
+CPP = gcc -std=gnu99 -E
+CPPFLAGS = 
+CXXCPP = 
+CYGPATH_W = echo
+DEFS = -DHAVE_CONFIG_H
+DEPDIR = .deps
+ECHO = echo
+ECHO_C = 
+ECHO_N = -n
+ECHO_T = 
+EGREP = /bin/grep -E
+EMKOPTS = debug_info, {d, debug}, report_warnings, {warn_format, 1}, warn_export_vars, warn_shadow_vars, warn_unused_import, {d, 'HAVE_EXPAT'}, {d, 'HAVE_LIBXML2'}, {d, 'HAVE_OPENSSL'}, {d, 'HAVE_ZLIB'}
+ENABLE_DOCUMENTATION_FALSE = 
+ENABLE_DOCUMENTATION_TRUE = #
+ENABLE_EXAMPLES_FALSE = 
+ENABLE_EXAMPLES_TRUE = #
+ENABLE_SMP_SUPPORT_FALSE = #
+ENABLE_SMP_SUPPORT_TRUE = 
+ENABLE_TESTSUITE_FALSE = #
+ENABLE_TESTSUITE_TRUE = 
+ERL = /usr/bin/erl
+ERLANG_ERTS_DIR = /usr/lib/erlang/erts-5.7.2
+ERLANG_ERTS_VER = 5.7.2
+ERLANG_INSTALL_LIB_DIR = /usr/lib/erlang/lib
+ERLANG_INSTALL_LIB_DIR_exmpp = ${ERLANG_INSTALL_LIB_DIR}/exmpp-${VERSION}
+ERLANG_LIB_DIR = /usr/lib/erlang/lib
+ERLANG_LIB_DIR_erl_interface = /usr/lib/erlang/lib/erl_interface-3.6.2
+ERLANG_LIB_DIR_eunit = 
+ERLANG_LIB_VER_erl_interface = 3.6.2
+ERLANG_LIB_VER_eunit = 
+ERLANG_RELEASE = R13B01
+ERLANG_ROOT_DIR = /usr/lib/erlang
+ERLC = /usr/bin/erlc
+ERLCFLAGS = 
+ERL_DRIVER_LDFLAGS = 
+ESCRIPT = /usr/bin/escript
+EXEEXT = 
+EXMPP_BUILD_ARCH = 
+EXMPP_DISTSUFFIX = -r903
+EXMPP_HOST_ARCH = 
+EXMPP_RELEASE_DATE = 
+EXMPP_SVNREV = 903
+EXPAT_CPPFLAGS = 
+EXPAT_LDFLAGS = 
+EXPAT_LIBS = -lexpat
+GREP = /bin/grep
+INSTALL_DATA = ${INSTALL} -m 644
+INSTALL_PROGRAM = ${INSTALL}
+INSTALL_SCRIPT = ${INSTALL}
+INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
+LDFLAGS = 
+LIBOBJS = 
+LIBS = 
+LIBTOOL = $(SHELL) $(top_builddir)/libtool
+LIBXML2_CFLAGS = -I/usr/include/libxml2  
+LIBXML2_LIBS = -lxml2  
+LN_S = ln -s
+LTLIBOBJS = 
+MAKEINFO = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run makeinfo
+OBJEXT = o
+OPENSSL_CPPFLAGS = 
+OPENSSL_LDFLAGS = 
+OPENSSL_LIBS = -lssl -lcrypto
+PACKAGE = exmpp
+PACKAGE_BUGREPORT = js.pedron@meetic-corp.com
+PACKAGE_NAME = exmpp
+PACKAGE_STRING = exmpp 0.9.2
+PACKAGE_TARNAME = exmpp
+PACKAGE_VERSION = 0.9.2
+PATH_SEPARATOR = :
+PKG_CONFIG = /usr/bin/pkg-config
+RANLIB = ranlib
+SED = /bin/sed
+SET_MAKE = 
+SHELL = /bin/bash
+STRIP = strip
+VERSION = 0.9.2
+WITH_EXPAT_FALSE = #
+WITH_EXPAT_TRUE = 
+WITH_LIBXML2_FALSE = #
+WITH_LIBXML2_TRUE = 
+WITH_OPENSSL_FALSE = #
+WITH_OPENSSL_TRUE = 
+WITH_ZLIB_FALSE = #
+WITH_ZLIB_TRUE = 
+ZLIB_CPPFLAGS = 
+ZLIB_LDFLAGS = 
+ZLIB_LIBS = -lz
+ac_ct_CC = gcc
+am__fastdepCC_FALSE = #
+am__fastdepCC_TRUE = 
+am__include = include
+am__leading_dot = .
+am__quote = 
+am__tar = ${AMTAR} chof - "$$tardir"
+am__untar = ${AMTAR} xf -
+bindir = ${exec_prefix}/bin
+build = i686-pc-linux-gnu
+build_alias = 
+build_cpu = i686
+build_os = linux-gnu
+build_vendor = pc
+datadir = ${datarootdir}
+datarootdir = ${prefix}/share
+docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
+dvidir = ${docdir}
+exec_prefix = ${prefix}
+exp_ERLANG_INSTALL_LIB_DIR_exmpp = /usr/lib/erlang/lib/exmpp-0.9.2
+host = i686-pc-linux-gnu
+host_alias = 
+host_cpu = i686
+host_os = linux-gnu
+host_vendor = pc
+htmldir = ${docdir}
+includedir = ${prefix}/include
+infodir = ${datarootdir}/info
+install_sh = /home/arjan/devel/zotonic/deps/exmpp/ac-aux/install-sh
+libdir = ${exec_prefix}/lib
+libexecdir = ${exec_prefix}/libexec
+localedir = ${datarootdir}/locale
+localstatedir = ${prefix}/var
+mandir = ${datarootdir}/man
+mkdir_p = mkdir -p --
+oldincludedir = /usr/include
+pdfdir = ${docdir}
+prefix = /usr/local
+program_transform_name = s,x,x,
+psdir = ${docdir}
+sbindir = ${exec_prefix}/sbin
+sharedstatedir = ${prefix}/com
+sysconfdir = ${prefix}/etc
+target = i686-pc-linux-gnu
+target_alias = 
+target_cpu = i686
+target_os = linux-gnu
+target_vendor = pc
+execdrivers_LTLIBRARIES = exmpp_stringprep.la $(am__append_1) \
+	$(am__append_2) $(am__append_3) $(am__append_4)
+EXTRA_DIST = stringprep_uni_data.h stringprep_uni_norm.h
+EI_CPPFLAGS = -I$(ERLANG_ERTS_DIR)/include				\
+	      -I$(ERLANG_LIB_DIR_erl_interface)/include
+
+EI_LDFLAGS = -L$(ERLANG_LIB_DIR_erl_interface)/lib
+EI_LIBS = -lei_st
+execdriversdir = $(ERLANG_INSTALL_LIB_DIR_exmpp)/priv/lib
+
+# --------------------------------------------------------------------
+# Supported port drivers.
+# --------------------------------------------------------------------
+
+# Expat port drivers.
+exmpp_xml_expat_la_CPPFLAGS = $(SMP_CPPFLAGS)				\
+			      $(EI_CPPFLAGS)				\
+			      $(EXPAT_CPPFLAGS)
+
+exmpp_xml_expat_la_LDFLAGS = -module -avoid-version			\
+			     $(ERL_DRIVER_LDFLAGS)			\
+			     $(EI_LDFLAGS) $(EI_LIBS)			\
+			     $(EXPAT_LDFLAGS) $(EXPAT_LIBS)
+
+exmpp_xml_expat_la_SOURCES = exmpp_driver.h				\
+			     exmpp_driver.c				\
+			     exmpp_xml.h				\
+			     exmpp_xml.c				\
+			     exmpp_xml_expat.c
+
+exmpp_xml_expat_legacy_la_CPPFLAGS = $(SMP_CPPFLAGS)			\
+				     $(EI_CPPFLAGS)			\
+				     $(EXPAT_CPPFLAGS)
+
+exmpp_xml_expat_legacy_la_LDFLAGS = -module -avoid-version		\
+				    $(ERL_DRIVER_LDFLAGS)		\
+				    $(EI_LDFLAGS) $(EI_LIBS)		\
+				    $(EXPAT_LDFLAGS) $(EXPAT_LIBS)
+
+exmpp_xml_expat_legacy_la_SOURCES = exmpp_driver.h			\
+				    exmpp_driver.c			\
+				    exmpp_xml.h				\
+				    exmpp_xml.c				\
+				    exmpp_xml_expat_legacy.c
+
+
+# LibXML2 port drivers.
+exmpp_xml_libxml2_la_CPPFLAGS = $(SMP_CPPFLAGS)				\
+				$(EI_CPPFLAGS)
+
+exmpp_xml_libxml2_la_CFLAGS = $(LIBXML2_CFLAGS)
+exmpp_xml_libxml2_la_LDFLAGS = -module -avoid-version			\
+			       $(ERL_DRIVER_LDFLAGS)			\
+			       $(EI_LDFLAGS) $(EI_LIBS)			\
+			       $(LIBXML2_LIBS)
+
+exmpp_xml_libxml2_la_SOURCES = exmpp_driver.h				\
+			       exmpp_driver.c				\
+			       exmpp_xml.h				\
+			       exmpp_xml.c				\
+			       exmpp_xml_libxml2.c
+
+
+# Stringprep port driver.
+exmpp_stringprep_la_CPPFLAGS = $(EI_CPPFLAGS)
+exmpp_stringprep_la_LDFLAGS = -module -avoid-version			\
+			      $(ERL_DRIVER_LDFLAGS)			\
+			      $(EI_LDFLAGS) $(EI_LIBS)
+
+exmpp_stringprep_la_SOURCES = exmpp_driver.h				\
+			      exmpp_driver.c				\
+			      stringprep_uni_data.h			\
+			      stringprep_uni_norm.h			\
+			      exmpp_stringprep.c
+
+
+# OpenSSL TLS port driver.
+exmpp_tls_openssl_la_CPPFLAGS = $(EI_CPPFLAGS)				\
+				$(OPENSSL_CPPFLAGS)
+
+exmpp_tls_openssl_la_LDFLAGS = -module -avoid-version			\
+			       $(ERL_DRIVER_LDFLAGS)			\
+			       $(EI_LDFLAGS) $(EI_LIBS)			\
+			       $(OPENSSL_LDFLAGS) $(OPENSSL_LIBS)
+
+exmpp_tls_openssl_la_SOURCES = exmpp_driver.h				\
+			       exmpp_driver.c				\
+			       exmpp_tls.h				\
+			       exmpp_tls.c				\
+			       exmpp_tls_openssl.c
+
+
+# Zlib compression port driver.
+exmpp_compress_zlib_la_CPPFLAGS = $(EI_CPPFLAGS)			\
+				  $(ZLIB_CPPFLAGS)
+
+exmpp_compress_zlib_la_LDFLAGS = -module -avoid-version			\
+				 $(ERL_DRIVER_LDFLAGS)			\
+				 $(EI_LDFLAGS) $(EI_LIBS)		\
+				 $(ZLIB_LDFLAGS) $(ZLIB_LIBS)
+
+exmpp_compress_zlib_la_SOURCES = exmpp_driver.h				\
+				 exmpp_driver.c				\
+				 exmpp_compress.h			\
+				 exmpp_compress_zlib.c
+
+all: all-am
+
+.SUFFIXES:
+.SUFFIXES: .c .lo .o .obj
+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  c_src/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --foreign  c_src/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure:  $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+install-execdriversLTLIBRARIES: $(execdrivers_LTLIBRARIES)
+	@$(NORMAL_INSTALL)
+	test -z "$(execdriversdir)" || $(mkdir_p) "$(DESTDIR)$(execdriversdir)"
+	@list='$(execdrivers_LTLIBRARIES)'; for p in $$list; do \
+	  if test -f $$p; then \
+	    f=$(am__strip_dir) \
+	    echo " $(LIBTOOL) --mode=install $(execdriversLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(execdriversdir)/$$f'"; \
+	    $(LIBTOOL) --mode=install $(execdriversLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(execdriversdir)/$$f"; \
+	  else :; fi; \
+	done
+
+uninstall-execdriversLTLIBRARIES:
+	@$(NORMAL_UNINSTALL)
+	@set -x; list='$(execdrivers_LTLIBRARIES)'; for p in $$list; do \
+	  p=$(am__strip_dir) \
+	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(execdriversdir)/$$p'"; \
+	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(execdriversdir)/$$p"; \
+	done
+
+clean-execdriversLTLIBRARIES:
+	-test -z "$(execdrivers_LTLIBRARIES)" || rm -f $(execdrivers_LTLIBRARIES)
+	@list='$(execdrivers_LTLIBRARIES)'; for p in $$list; do \
+	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
+	  test "$$dir" != "$$p" || dir=.; \
+	  echo "rm -f \"$${dir}/so_locations\""; \
+	  rm -f "$${dir}/so_locations"; \
+	done
+exmpp_compress_zlib.la: $(exmpp_compress_zlib_la_OBJECTS) $(exmpp_compress_zlib_la_DEPENDENCIES) 
+	$(LINK) $(am_exmpp_compress_zlib_la_rpath) $(exmpp_compress_zlib_la_LDFLAGS) $(exmpp_compress_zlib_la_OBJECTS) $(exmpp_compress_zlib_la_LIBADD) $(LIBS)
+exmpp_stringprep.la: $(exmpp_stringprep_la_OBJECTS) $(exmpp_stringprep_la_DEPENDENCIES) 
+	$(LINK) -rpath $(execdriversdir) $(exmpp_stringprep_la_LDFLAGS) $(exmpp_stringprep_la_OBJECTS) $(exmpp_stringprep_la_LIBADD) $(LIBS)
+exmpp_tls_openssl.la: $(exmpp_tls_openssl_la_OBJECTS) $(exmpp_tls_openssl_la_DEPENDENCIES) 
+	$(LINK) $(am_exmpp_tls_openssl_la_rpath) $(exmpp_tls_openssl_la_LDFLAGS) $(exmpp_tls_openssl_la_OBJECTS) $(exmpp_tls_openssl_la_LIBADD) $(LIBS)
+exmpp_xml_expat.la: $(exmpp_xml_expat_la_OBJECTS) $(exmpp_xml_expat_la_DEPENDENCIES) 
+	$(LINK) $(am_exmpp_xml_expat_la_rpath) $(exmpp_xml_expat_la_LDFLAGS) $(exmpp_xml_expat_la_OBJECTS) $(exmpp_xml_expat_la_LIBADD) $(LIBS)
+exmpp_xml_expat_legacy.la: $(exmpp_xml_expat_legacy_la_OBJECTS) $(exmpp_xml_expat_legacy_la_DEPENDENCIES) 
+	$(LINK) $(am_exmpp_xml_expat_legacy_la_rpath) $(exmpp_xml_expat_legacy_la_LDFLAGS) $(exmpp_xml_expat_legacy_la_OBJECTS) $(exmpp_xml_expat_legacy_la_LIBADD) $(LIBS)
+exmpp_xml_libxml2.la: $(exmpp_xml_libxml2_la_OBJECTS) $(exmpp_xml_libxml2_la_DEPENDENCIES) 
+	$(LINK) $(am_exmpp_xml_libxml2_la_rpath) $(exmpp_xml_libxml2_la_LDFLAGS) $(exmpp_xml_libxml2_la_OBJECTS) $(exmpp_xml_libxml2_la_LIBADD) $(LIBS)
+
+mostlyclean-compile:
+	-rm -f *.$(OBJEXT)
+
+distclean-compile:
+	-rm -f *.tab.c
+
+include ./$(DEPDIR)/exmpp_compress_zlib_la-exmpp_compress_zlib.Plo
+include ./$(DEPDIR)/exmpp_compress_zlib_la-exmpp_driver.Plo
+include ./$(DEPDIR)/exmpp_stringprep_la-exmpp_driver.Plo
+include ./$(DEPDIR)/exmpp_stringprep_la-exmpp_stringprep.Plo
+include ./$(DEPDIR)/exmpp_tls_openssl_la-exmpp_driver.Plo
+include ./$(DEPDIR)/exmpp_tls_openssl_la-exmpp_tls.Plo
+include ./$(DEPDIR)/exmpp_tls_openssl_la-exmpp_tls_openssl.Plo
+include ./$(DEPDIR)/exmpp_xml_expat_la-exmpp_driver.Plo
+include ./$(DEPDIR)/exmpp_xml_expat_la-exmpp_xml.Plo
+include ./$(DEPDIR)/exmpp_xml_expat_la-exmpp_xml_expat.Plo
+include ./$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_driver.Plo
+include ./$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_xml.Plo
+include ./$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_xml_expat_legacy.Plo
+include ./$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_driver.Plo
+include ./$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_xml.Plo
+include ./$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_xml_libxml2.Plo
+
+.c.o:
+	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
+	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
+#	source='$<' object='$@' libtool=no \
+#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
+#	$(COMPILE) -c $<
+
+.c.obj:
+	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
+	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
+#	source='$<' object='$@' libtool=no \
+#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
+#	$(COMPILE) -c `$(CYGPATH_W) '$<'`
+
+.c.lo:
+	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
+	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
+#	source='$<' object='$@' libtool=yes \
+#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
+#	$(LTCOMPILE) -c -o $@ $<
+
+exmpp_compress_zlib_la-exmpp_driver.lo: exmpp_driver.c
+	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_compress_zlib_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_compress_zlib_la-exmpp_driver.lo -MD -MP -MF "$(DEPDIR)/exmpp_compress_zlib_la-exmpp_driver.Tpo" -c -o exmpp_compress_zlib_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c; \
+	then mv -f "$(DEPDIR)/exmpp_compress_zlib_la-exmpp_driver.Tpo" "$(DEPDIR)/exmpp_compress_zlib_la-exmpp_driver.Plo"; else rm -f "$(DEPDIR)/exmpp_compress_zlib_la-exmpp_driver.Tpo"; exit 1; fi
+#	source='exmpp_driver.c' object='exmpp_compress_zlib_la-exmpp_driver.lo' libtool=yes \
+#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
+#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_compress_zlib_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_compress_zlib_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c
+
+exmpp_compress_zlib_la-exmpp_compress_zlib.lo: exmpp_compress_zlib.c
+	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_compress_zlib_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_compress_zlib_la-exmpp_compress_zlib.lo -MD -MP -MF "$(DEPDIR)/exmpp_compress_zlib_la-exmpp_compress_zlib.Tpo" -c -o exmpp_compress_zlib_la-exmpp_compress_zlib.lo `test -f 'exmpp_compress_zlib.c' || echo '$(srcdir)/'`exmpp_compress_zlib.c; \
+	then mv -f "$(DEPDIR)/exmpp_compress_zlib_la-exmpp_compress_zlib.Tpo" "$(DEPDIR)/exmpp_compress_zlib_la-exmpp_compress_zlib.Plo"; else rm -f "$(DEPDIR)/exmpp_compress_zlib_la-exmpp_compress_zlib.Tpo"; exit 1; fi
+#	source='exmpp_compress_zlib.c' object='exmpp_compress_zlib_la-exmpp_compress_zlib.lo' libtool=yes \
+#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
+#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_compress_zlib_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_compress_zlib_la-exmpp_compress_zlib.lo `test -f 'exmpp_compress_zlib.c' || echo '$(srcdir)/'`exmpp_compress_zlib.c
+
+exmpp_stringprep_la-exmpp_driver.lo: exmpp_driver.c
+	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_stringprep_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_stringprep_la-exmpp_driver.lo -MD -MP -MF "$(DEPDIR)/exmpp_stringprep_la-exmpp_driver.Tpo" -c -o exmpp_stringprep_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c; \
+	then mv -f "$(DEPDIR)/exmpp_stringprep_la-exmpp_driver.Tpo" "$(DEPDIR)/exmpp_stringprep_la-exmpp_driver.Plo"; else rm -f "$(DEPDIR)/exmpp_stringprep_la-exmpp_driver.Tpo"; exit 1; fi
+#	source='exmpp_driver.c' object='exmpp_stringprep_la-exmpp_driver.lo' libtool=yes \
+#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
+#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_stringprep_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_stringprep_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c
+
+exmpp_stringprep_la-exmpp_stringprep.lo: exmpp_stringprep.c
+	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_stringprep_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_stringprep_la-exmpp_stringprep.lo -MD -MP -MF "$(DEPDIR)/exmpp_stringprep_la-exmpp_stringprep.Tpo" -c -o exmpp_stringprep_la-exmpp_stringprep.lo `test -f 'exmpp_stringprep.c' || echo '$(srcdir)/'`exmpp_stringprep.c; \
+	then mv -f "$(DEPDIR)/exmpp_stringprep_la-exmpp_stringprep.Tpo" "$(DEPDIR)/exmpp_stringprep_la-exmpp_stringprep.Plo"; else rm -f "$(DEPDIR)/exmpp_stringprep_la-exmpp_stringprep.Tpo"; exit 1; fi
+#	source='exmpp_stringprep.c' object='exmpp_stringprep_la-exmpp_stringprep.lo' libtool=yes \
+#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
+#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_stringprep_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_stringprep_la-exmpp_stringprep.lo `test -f 'exmpp_stringprep.c' || echo '$(srcdir)/'`exmpp_stringprep.c
+
+exmpp_tls_openssl_la-exmpp_driver.lo: exmpp_driver.c
+	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_tls_openssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_tls_openssl_la-exmpp_driver.lo -MD -MP -MF "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_driver.Tpo" -c -o exmpp_tls_openssl_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c; \
+	then mv -f "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_driver.Tpo" "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_driver.Plo"; else rm -f "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_driver.Tpo"; exit 1; fi
+#	source='exmpp_driver.c' object='exmpp_tls_openssl_la-exmpp_driver.lo' libtool=yes \
+#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
+#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_tls_openssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_tls_openssl_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c
+
+exmpp_tls_openssl_la-exmpp_tls.lo: exmpp_tls.c
+	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_tls_openssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_tls_openssl_la-exmpp_tls.lo -MD -MP -MF "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_tls.Tpo" -c -o exmpp_tls_openssl_la-exmpp_tls.lo `test -f 'exmpp_tls.c' || echo '$(srcdir)/'`exmpp_tls.c; \
+	then mv -f "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_tls.Tpo" "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_tls.Plo"; else rm -f "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_tls.Tpo"; exit 1; fi
+#	source='exmpp_tls.c' object='exmpp_tls_openssl_la-exmpp_tls.lo' libtool=yes \
+#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
+#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_tls_openssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_tls_openssl_la-exmpp_tls.lo `test -f 'exmpp_tls.c' || echo '$(srcdir)/'`exmpp_tls.c
+
+exmpp_tls_openssl_la-exmpp_tls_openssl.lo: exmpp_tls_openssl.c
+	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_tls_openssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_tls_openssl_la-exmpp_tls_openssl.lo -MD -MP -MF "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_tls_openssl.Tpo" -c -o exmpp_tls_openssl_la-exmpp_tls_openssl.lo `test -f 'exmpp_tls_openssl.c' || echo '$(srcdir)/'`exmpp_tls_openssl.c; \
+	then mv -f "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_tls_openssl.Tpo" "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_tls_openssl.Plo"; else rm -f "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_tls_openssl.Tpo"; exit 1; fi
+#	source='exmpp_tls_openssl.c' object='exmpp_tls_openssl_la-exmpp_tls_openssl.lo' libtool=yes \
+#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
+#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_tls_openssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_tls_openssl_la-exmpp_tls_openssl.lo `test -f 'exmpp_tls_openssl.c' || echo '$(srcdir)/'`exmpp_tls_openssl.c
+
+exmpp_xml_expat_la-exmpp_driver.lo: exmpp_driver.c
+	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_xml_expat_la-exmpp_driver.lo -MD -MP -MF "$(DEPDIR)/exmpp_xml_expat_la-exmpp_driver.Tpo" -c -o exmpp_xml_expat_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c; \
+	then mv -f "$(DEPDIR)/exmpp_xml_expat_la-exmpp_driver.Tpo" "$(DEPDIR)/exmpp_xml_expat_la-exmpp_driver.Plo"; else rm -f "$(DEPDIR)/exmpp_xml_expat_la-exmpp_driver.Tpo"; exit 1; fi
+#	source='exmpp_driver.c' object='exmpp_xml_expat_la-exmpp_driver.lo' libtool=yes \
+#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
+#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_xml_expat_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c
+
+exmpp_xml_expat_la-exmpp_xml.lo: exmpp_xml.c
+	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_xml_expat_la-exmpp_xml.lo -MD -MP -MF "$(DEPDIR)/exmpp_xml_expat_la-exmpp_xml.Tpo" -c -o exmpp_xml_expat_la-exmpp_xml.lo `test -f 'exmpp_xml.c' || echo '$(srcdir)/'`exmpp_xml.c; \
+	then mv -f "$(DEPDIR)/exmpp_xml_expat_la-exmpp_xml.Tpo" "$(DEPDIR)/exmpp_xml_expat_la-exmpp_xml.Plo"; else rm -f "$(DEPDIR)/exmpp_xml_expat_la-exmpp_xml.Tpo"; exit 1; fi
+#	source='exmpp_xml.c' object='exmpp_xml_expat_la-exmpp_xml.lo' libtool=yes \
+#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
+#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_xml_expat_la-exmpp_xml.lo `test -f 'exmpp_xml.c' || echo '$(srcdir)/'`exmpp_xml.c
+
+exmpp_xml_expat_la-exmpp_xml_expat.lo: exmpp_xml_expat.c
+	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_xml_expat_la-exmpp_xml_expat.lo -MD -MP -MF "$(DEPDIR)/exmpp_xml_expat_la-exmpp_xml_expat.Tpo" -c -o exmpp_xml_expat_la-exmpp_xml_expat.lo `test -f 'exmpp_xml_expat.c' || echo '$(srcdir)/'`exmpp_xml_expat.c; \
+	then mv -f "$(DEPDIR)/exmpp_xml_expat_la-exmpp_xml_expat.Tpo" "$(DEPDIR)/exmpp_xml_expat_la-exmpp_xml_expat.Plo"; else rm -f "$(DEPDIR)/exmpp_xml_expat_la-exmpp_xml_expat.Tpo"; exit 1; fi
+#	source='exmpp_xml_expat.c' object='exmpp_xml_expat_la-exmpp_xml_expat.lo' libtool=yes \
+#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
+#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_xml_expat_la-exmpp_xml_expat.lo `test -f 'exmpp_xml_expat.c' || echo '$(srcdir)/'`exmpp_xml_expat.c
+
+exmpp_xml_expat_legacy_la-exmpp_driver.lo: exmpp_driver.c
+	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_legacy_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_xml_expat_legacy_la-exmpp_driver.lo -MD -MP -MF "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_driver.Tpo" -c -o exmpp_xml_expat_legacy_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c; \
+	then mv -f "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_driver.Tpo" "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_driver.Plo"; else rm -f "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_driver.Tpo"; exit 1; fi
+#	source='exmpp_driver.c' object='exmpp_xml_expat_legacy_la-exmpp_driver.lo' libtool=yes \
+#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
+#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_legacy_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_xml_expat_legacy_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c
+
+exmpp_xml_expat_legacy_la-exmpp_xml.lo: exmpp_xml.c
+	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_legacy_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_xml_expat_legacy_la-exmpp_xml.lo -MD -MP -MF "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_xml.Tpo" -c -o exmpp_xml_expat_legacy_la-exmpp_xml.lo `test -f 'exmpp_xml.c' || echo '$(srcdir)/'`exmpp_xml.c; \
+	then mv -f "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_xml.Tpo" "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_xml.Plo"; else rm -f "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_xml.Tpo"; exit 1; fi
+#	source='exmpp_xml.c' object='exmpp_xml_expat_legacy_la-exmpp_xml.lo' libtool=yes \
+#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
+#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_legacy_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_xml_expat_legacy_la-exmpp_xml.lo `test -f 'exmpp_xml.c' || echo '$(srcdir)/'`exmpp_xml.c
+
+exmpp_xml_expat_legacy_la-exmpp_xml_expat_legacy.lo: exmpp_xml_expat_legacy.c
+	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_legacy_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_xml_expat_legacy_la-exmpp_xml_expat_legacy.lo -MD -MP -MF "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_xml_expat_legacy.Tpo" -c -o exmpp_xml_expat_legacy_la-exmpp_xml_expat_legacy.lo `test -f 'exmpp_xml_expat_legacy.c' || echo '$(srcdir)/'`exmpp_xml_expat_legacy.c; \
+	then mv -f "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_xml_expat_legacy.Tpo" "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_xml_expat_legacy.Plo"; else rm -f "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_xml_expat_legacy.Tpo"; exit 1; fi
+#	source='exmpp_xml_expat_legacy.c' object='exmpp_xml_expat_legacy_la-exmpp_xml_expat_legacy.lo' libtool=yes \
+#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
+#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_legacy_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_xml_expat_legacy_la-exmpp_xml_expat_legacy.lo `test -f 'exmpp_xml_expat_legacy.c' || echo '$(srcdir)/'`exmpp_xml_expat_legacy.c
+
+exmpp_xml_libxml2_la-exmpp_driver.lo: exmpp_driver.c
+	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_libxml2_la_CPPFLAGS) $(CPPFLAGS) $(exmpp_xml_libxml2_la_CFLAGS) $(CFLAGS) -MT exmpp_xml_libxml2_la-exmpp_driver.lo -MD -MP -MF "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_driver.Tpo" -c -o exmpp_xml_libxml2_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c; \
+	then mv -f "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_driver.Tpo" "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_driver.Plo"; else rm -f "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_driver.Tpo"; exit 1; fi
+#	source='exmpp_driver.c' object='exmpp_xml_libxml2_la-exmpp_driver.lo' libtool=yes \
+#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
+#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_libxml2_la_CPPFLAGS) $(CPPFLAGS) $(exmpp_xml_libxml2_la_CFLAGS) $(CFLAGS) -c -o exmpp_xml_libxml2_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c
+
+exmpp_xml_libxml2_la-exmpp_xml.lo: exmpp_xml.c
+	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_libxml2_la_CPPFLAGS) $(CPPFLAGS) $(exmpp_xml_libxml2_la_CFLAGS) $(CFLAGS) -MT exmpp_xml_libxml2_la-exmpp_xml.lo -MD -MP -MF "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_xml.Tpo" -c -o exmpp_xml_libxml2_la-exmpp_xml.lo `test -f 'exmpp_xml.c' || echo '$(srcdir)/'`exmpp_xml.c; \
+	then mv -f "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_xml.Tpo" "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_xml.Plo"; else rm -f "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_xml.Tpo"; exit 1; fi
+#	source='exmpp_xml.c' object='exmpp_xml_libxml2_la-exmpp_xml.lo' libtool=yes \
+#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
+#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_libxml2_la_CPPFLAGS) $(CPPFLAGS) $(exmpp_xml_libxml2_la_CFLAGS) $(CFLAGS) -c -o exmpp_xml_libxml2_la-exmpp_xml.lo `test -f 'exmpp_xml.c' || echo '$(srcdir)/'`exmpp_xml.c
+
+exmpp_xml_libxml2_la-exmpp_xml_libxml2.lo: exmpp_xml_libxml2.c
+	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_libxml2_la_CPPFLAGS) $(CPPFLAGS) $(exmpp_xml_libxml2_la_CFLAGS) $(CFLAGS) -MT exmpp_xml_libxml2_la-exmpp_xml_libxml2.lo -MD -MP -MF "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_xml_libxml2.Tpo" -c -o exmpp_xml_libxml2_la-exmpp_xml_libxml2.lo `test -f 'exmpp_xml_libxml2.c' || echo '$(srcdir)/'`exmpp_xml_libxml2.c; \
+	then mv -f "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_xml_libxml2.Tpo" "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_xml_libxml2.Plo"; else rm -f "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_xml_libxml2.Tpo"; exit 1; fi
+#	source='exmpp_xml_libxml2.c' object='exmpp_xml_libxml2_la-exmpp_xml_libxml2.lo' libtool=yes \
+#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
+#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_libxml2_la_CPPFLAGS) $(CPPFLAGS) $(exmpp_xml_libxml2_la_CFLAGS) $(CFLAGS) -c -o exmpp_xml_libxml2_la-exmpp_xml_libxml2.lo `test -f 'exmpp_xml_libxml2.c' || echo '$(srcdir)/'`exmpp_xml_libxml2.c
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+distclean-libtool:
+	-rm -f libtool
+uninstall-info-am:
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
+	  test -n "$$unique" || unique=$$empty_fix; \
+	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	    $$tags $$unique; \
+	fi
+ctags: CTAGS
+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile $(LTLIBRARIES)
+installdirs:
+	for dir in "$(DESTDIR)$(execdriversdir)"; do \
+	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
+	done
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-execdriversLTLIBRARIES clean-generic clean-libtool \
+	mostlyclean-am
+
+distclean: distclean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+distclean-am: clean-am distclean-compile distclean-generic \
+	distclean-libtool distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-exec-am: install-execdriversLTLIBRARIES
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-compile mostlyclean-generic \
+	mostlyclean-libtool
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-execdriversLTLIBRARIES uninstall-info-am
+
+.PHONY: CTAGS GTAGS all all-am check check-am clean \
+	clean-execdriversLTLIBRARIES clean-generic clean-libtool ctags \
+	distclean distclean-compile distclean-generic \
+	distclean-libtool distclean-tags distdir dvi dvi-am html \
+	html-am info info-am install install-am install-data \
+	install-data-am install-exec install-exec-am \
+	install-execdriversLTLIBRARIES install-info install-info-am \
+	install-man install-strip installcheck installcheck-am \
+	installdirs maintainer-clean maintainer-clean-generic \
+	mostlyclean mostlyclean-compile mostlyclean-generic \
+	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
+	uninstall-am uninstall-execdriversLTLIBRARIES \
+	uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff -r d551623afde5 deps/exmpp/c_src/Makefile.am
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/c_src/Makefile.am	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,107 @@
+execdrivers_LTLIBRARIES = exmpp_stringprep.la
+
+if WITH_EXPAT
+execdrivers_LTLIBRARIES += exmpp_xml_expat.la exmpp_xml_expat_legacy.la
+endif
+
+if WITH_LIBXML2
+execdrivers_LTLIBRARIES += exmpp_xml_libxml2.la
+endif
+
+if WITH_OPENSSL
+execdrivers_LTLIBRARIES += exmpp_tls_openssl.la
+endif
+
+if WITH_ZLIB
+execdrivers_LTLIBRARIES += exmpp_compress_zlib.la
+endif
+
+EXTRA_DIST = stringprep_uni_data.h stringprep_uni_norm.h
+
+EI_CPPFLAGS = -I$(ERLANG_ERTS_DIR)/include				\
+	      -I$(ERLANG_LIB_DIR_erl_interface)/include
+EI_LDFLAGS = -L$(ERLANG_LIB_DIR_erl_interface)/lib
+EI_LIBS = -lei_st
+
+execdriversdir = $(ERLANG_INSTALL_LIB_DIR_exmpp)/priv/lib
+
+# --------------------------------------------------------------------
+# Supported port drivers.
+# --------------------------------------------------------------------
+
+# Expat port drivers.
+exmpp_xml_expat_la_CPPFLAGS = $(SMP_CPPFLAGS)				\
+			      $(EI_CPPFLAGS)				\
+			      $(EXPAT_CPPFLAGS)
+exmpp_xml_expat_la_LDFLAGS = -module -avoid-version			\
+			     $(ERL_DRIVER_LDFLAGS)			\
+			     $(EI_LDFLAGS) $(EI_LIBS)			\
+			     $(EXPAT_LDFLAGS) $(EXPAT_LIBS)
+exmpp_xml_expat_la_SOURCES = exmpp_driver.h				\
+			     exmpp_driver.c				\
+			     exmpp_xml.h				\
+			     exmpp_xml.c				\
+			     exmpp_xml_expat.c
+
+exmpp_xml_expat_legacy_la_CPPFLAGS = $(SMP_CPPFLAGS)			\
+				     $(EI_CPPFLAGS)			\
+				     $(EXPAT_CPPFLAGS)
+exmpp_xml_expat_legacy_la_LDFLAGS = -module -avoid-version		\
+				    $(ERL_DRIVER_LDFLAGS)		\
+				    $(EI_LDFLAGS) $(EI_LIBS)		\
+				    $(EXPAT_LDFLAGS) $(EXPAT_LIBS)
+exmpp_xml_expat_legacy_la_SOURCES = exmpp_driver.h			\
+				    exmpp_driver.c			\
+				    exmpp_xml.h				\
+				    exmpp_xml.c				\
+				    exmpp_xml_expat_legacy.c
+
+# LibXML2 port drivers.
+exmpp_xml_libxml2_la_CPPFLAGS = $(SMP_CPPFLAGS)				\
+				$(EI_CPPFLAGS)
+exmpp_xml_libxml2_la_CFLAGS = $(LIBXML2_CFLAGS)
+exmpp_xml_libxml2_la_LDFLAGS = -module -avoid-version			\
+			       $(ERL_DRIVER_LDFLAGS)			\
+			       $(EI_LDFLAGS) $(EI_LIBS)			\
+			       $(LIBXML2_LIBS)
+exmpp_xml_libxml2_la_SOURCES = exmpp_driver.h				\
+			       exmpp_driver.c				\
+			       exmpp_xml.h				\
+			       exmpp_xml.c				\
+			       exmpp_xml_libxml2.c
+
+# Stringprep port driver.
+exmpp_stringprep_la_CPPFLAGS = $(EI_CPPFLAGS)
+exmpp_stringprep_la_LDFLAGS = -module -avoid-version			\
+			      $(ERL_DRIVER_LDFLAGS)			\
+			      $(EI_LDFLAGS) $(EI_LIBS)
+exmpp_stringprep_la_SOURCES = exmpp_driver.h				\
+			      exmpp_driver.c				\
+			      stringprep_uni_data.h			\
+			      stringprep_uni_norm.h			\
+			      exmpp_stringprep.c
+
+# OpenSSL TLS port driver.
+exmpp_tls_openssl_la_CPPFLAGS = $(EI_CPPFLAGS)				\
+				$(OPENSSL_CPPFLAGS)
+exmpp_tls_openssl_la_LDFLAGS = -module -avoid-version			\
+			       $(ERL_DRIVER_LDFLAGS)			\
+			       $(EI_LDFLAGS) $(EI_LIBS)			\
+			       $(OPENSSL_LDFLAGS) $(OPENSSL_LIBS)
+exmpp_tls_openssl_la_SOURCES = exmpp_driver.h				\
+			       exmpp_driver.c				\
+			       exmpp_tls.h				\
+			       exmpp_tls.c				\
+			       exmpp_tls_openssl.c
+
+# Zlib compression port driver.
+exmpp_compress_zlib_la_CPPFLAGS = $(EI_CPPFLAGS)			\
+				  $(ZLIB_CPPFLAGS)
+exmpp_compress_zlib_la_LDFLAGS = -module -avoid-version			\
+				 $(ERL_DRIVER_LDFLAGS)			\
+				 $(EI_LDFLAGS) $(EI_LIBS)		\
+				 $(ZLIB_LDFLAGS) $(ZLIB_LIBS)
+exmpp_compress_zlib_la_SOURCES = exmpp_driver.h				\
+				 exmpp_driver.c				\
+				 exmpp_compress.h			\
+				 exmpp_compress_zlib.c
diff -r d551623afde5 deps/exmpp/c_src/Makefile.in
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/c_src/Makefile.in	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,803 @@
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = @build@
+host_triplet = @host@
+target_triplet = @target@
+@WITH_EXPAT_TRUE@am__append_1 = exmpp_xml_expat.la exmpp_xml_expat_legacy.la
+@WITH_LIBXML2_TRUE@am__append_2 = exmpp_xml_libxml2.la
+@WITH_OPENSSL_TRUE@am__append_3 = exmpp_tls_openssl.la
+@WITH_ZLIB_TRUE@am__append_4 = exmpp_compress_zlib.la
+subdir = c_src
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_compare_version.m4 \
+	$(top_srcdir)/m4/colored-echo.m4 $(top_srcdir)/m4/erlang.m4 \
+	$(top_srcdir)/m4/expat.m4 $(top_srcdir)/m4/openssl.m4 \
+	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/zlib.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES =
+am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
+am__vpath_adj = case $$p in \
+    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
+    *) f=$$p;; \
+  esac;
+am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
+am__installdirs = "$(DESTDIR)$(execdriversdir)"
+execdriversLTLIBRARIES_INSTALL = $(INSTALL)
+LTLIBRARIES = $(execdrivers_LTLIBRARIES)
+exmpp_compress_zlib_la_LIBADD =
+am_exmpp_compress_zlib_la_OBJECTS =  \
+	exmpp_compress_zlib_la-exmpp_driver.lo \
+	exmpp_compress_zlib_la-exmpp_compress_zlib.lo
+exmpp_compress_zlib_la_OBJECTS = $(am_exmpp_compress_zlib_la_OBJECTS)
+@WITH_ZLIB_TRUE@am_exmpp_compress_zlib_la_rpath = -rpath \
+@WITH_ZLIB_TRUE@	$(execdriversdir)
+exmpp_stringprep_la_LIBADD =
+am_exmpp_stringprep_la_OBJECTS = exmpp_stringprep_la-exmpp_driver.lo \
+	exmpp_stringprep_la-exmpp_stringprep.lo
+exmpp_stringprep_la_OBJECTS = $(am_exmpp_stringprep_la_OBJECTS)
+exmpp_tls_openssl_la_LIBADD =
+am_exmpp_tls_openssl_la_OBJECTS =  \
+	exmpp_tls_openssl_la-exmpp_driver.lo \
+	exmpp_tls_openssl_la-exmpp_tls.lo \
+	exmpp_tls_openssl_la-exmpp_tls_openssl.lo
+exmpp_tls_openssl_la_OBJECTS = $(am_exmpp_tls_openssl_la_OBJECTS)
+@WITH_OPENSSL_TRUE@am_exmpp_tls_openssl_la_rpath = -rpath \
+@WITH_OPENSSL_TRUE@	$(execdriversdir)
+exmpp_xml_expat_la_LIBADD =
+am_exmpp_xml_expat_la_OBJECTS = exmpp_xml_expat_la-exmpp_driver.lo \
+	exmpp_xml_expat_la-exmpp_xml.lo \
+	exmpp_xml_expat_la-exmpp_xml_expat.lo
+exmpp_xml_expat_la_OBJECTS = $(am_exmpp_xml_expat_la_OBJECTS)
+@WITH_EXPAT_TRUE@am_exmpp_xml_expat_la_rpath = -rpath \
+@WITH_EXPAT_TRUE@	$(execdriversdir)
+exmpp_xml_expat_legacy_la_LIBADD =
+am_exmpp_xml_expat_legacy_la_OBJECTS =  \
+	exmpp_xml_expat_legacy_la-exmpp_driver.lo \
+	exmpp_xml_expat_legacy_la-exmpp_xml.lo \
+	exmpp_xml_expat_legacy_la-exmpp_xml_expat_legacy.lo
+exmpp_xml_expat_legacy_la_OBJECTS =  \
+	$(am_exmpp_xml_expat_legacy_la_OBJECTS)
+@WITH_EXPAT_TRUE@am_exmpp_xml_expat_legacy_la_rpath = -rpath \
+@WITH_EXPAT_TRUE@	$(execdriversdir)
+exmpp_xml_libxml2_la_LIBADD =
+am_exmpp_xml_libxml2_la_OBJECTS =  \
+	exmpp_xml_libxml2_la-exmpp_driver.lo \
+	exmpp_xml_libxml2_la-exmpp_xml.lo \
+	exmpp_xml_libxml2_la-exmpp_xml_libxml2.lo
+exmpp_xml_libxml2_la_OBJECTS = $(am_exmpp_xml_libxml2_la_OBJECTS)
+@WITH_LIBXML2_TRUE@am_exmpp_xml_libxml2_la_rpath = -rpath \
+@WITH_LIBXML2_TRUE@	$(execdriversdir)
+DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
+depcomp = $(SHELL) $(top_srcdir)/ac-aux/depcomp
+am__depfiles_maybe = depfiles
+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
+	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
+	$(AM_CFLAGS) $(CFLAGS)
+CCLD = $(CC)
+LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
+	$(AM_LDFLAGS) $(LDFLAGS) -o $@
+SOURCES = $(exmpp_compress_zlib_la_SOURCES) \
+	$(exmpp_stringprep_la_SOURCES) $(exmpp_tls_openssl_la_SOURCES) \
+	$(exmpp_xml_expat_la_SOURCES) \
+	$(exmpp_xml_expat_legacy_la_SOURCES) \
+	$(exmpp_xml_libxml2_la_SOURCES)
+DIST_SOURCES = $(exmpp_compress_zlib_la_SOURCES) \
+	$(exmpp_stringprep_la_SOURCES) $(exmpp_tls_openssl_la_SOURCES) \
+	$(exmpp_xml_expat_la_SOURCES) \
+	$(exmpp_xml_expat_legacy_la_SOURCES) \
+	$(exmpp_xml_libxml2_la_SOURCES)
+ETAGS = etags
+CTAGS = ctags
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BUILD_COMPAT_FALSE = @BUILD_COMPAT_FALSE@
+BUILD_COMPAT_TRUE = @BUILD_COMPAT_TRUE@
+CC = @CC@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+COMPAT_MODULES = @COMPAT_MODULES@
+COMPAT_MODULES_START = @COMPAT_MODULES_START@
+CPP = @CPP@
+CPPFLAGS = @CPPFLAGS@
+CXXCPP = @CXXCPP@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+ECHO = @ECHO@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EGREP = @EGREP@
+EMKOPTS = @EMKOPTS@
+ENABLE_DOCUMENTATION_FALSE = @ENABLE_DOCUMENTATION_FALSE@
+ENABLE_DOCUMENTATION_TRUE = @ENABLE_DOCUMENTATION_TRUE@
+ENABLE_EXAMPLES_FALSE = @ENABLE_EXAMPLES_FALSE@
+ENABLE_EXAMPLES_TRUE = @ENABLE_EXAMPLES_TRUE@
+ENABLE_SMP_SUPPORT_FALSE = @ENABLE_SMP_SUPPORT_FALSE@
+ENABLE_SMP_SUPPORT_TRUE = @ENABLE_SMP_SUPPORT_TRUE@
+ENABLE_TESTSUITE_FALSE = @ENABLE_TESTSUITE_FALSE@
+ENABLE_TESTSUITE_TRUE = @ENABLE_TESTSUITE_TRUE@
+ERL = @ERL@
+ERLANG_ERTS_DIR = @ERLANG_ERTS_DIR@
+ERLANG_ERTS_VER = @ERLANG_ERTS_VER@
+ERLANG_INSTALL_LIB_DIR = @ERLANG_INSTALL_LIB_DIR@
+ERLANG_INSTALL_LIB_DIR_exmpp = @ERLANG_INSTALL_LIB_DIR_exmpp@
+ERLANG_LIB_DIR = @ERLANG_LIB_DIR@
+ERLANG_LIB_DIR_erl_interface = @ERLANG_LIB_DIR_erl_interface@
+ERLANG_LIB_DIR_eunit = @ERLANG_LIB_DIR_eunit@
+ERLANG_LIB_VER_erl_interface = @ERLANG_LIB_VER_erl_interface@
+ERLANG_LIB_VER_eunit = @ERLANG_LIB_VER_eunit@
+ERLANG_RELEASE = @ERLANG_RELEASE@
+ERLANG_ROOT_DIR = @ERLANG_ROOT_DIR@
+ERLC = @ERLC@
+ERLCFLAGS = @ERLCFLAGS@
+ERL_DRIVER_LDFLAGS = @ERL_DRIVER_LDFLAGS@
+ESCRIPT = @ESCRIPT@
+EXEEXT = @EXEEXT@
+EXMPP_BUILD_ARCH = @EXMPP_BUILD_ARCH@
+EXMPP_DISTSUFFIX = @EXMPP_DISTSUFFIX@
+EXMPP_HOST_ARCH = @EXMPP_HOST_ARCH@
+EXMPP_RELEASE_DATE = @EXMPP_RELEASE_DATE@
+EXMPP_SVNREV = @EXMPP_SVNREV@
+EXPAT_CPPFLAGS = @EXPAT_CPPFLAGS@
+EXPAT_LDFLAGS = @EXPAT_LDFLAGS@
+EXPAT_LIBS = @EXPAT_LIBS@
+GREP = @GREP@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LIBTOOL = @LIBTOOL@
+LIBXML2_CFLAGS = @LIBXML2_CFLAGS@
+LIBXML2_LIBS = @LIBXML2_LIBS@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAKEINFO = @MAKEINFO@
+OBJEXT = @OBJEXT@
+OPENSSL_CPPFLAGS = @OPENSSL_CPPFLAGS@
+OPENSSL_LDFLAGS = @OPENSSL_LDFLAGS@
+OPENSSL_LIBS = @OPENSSL_LIBS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+PKG_CONFIG = @PKG_CONFIG@
+RANLIB = @RANLIB@
+SED = @SED@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+WITH_EXPAT_FALSE = @WITH_EXPAT_FALSE@
+WITH_EXPAT_TRUE = @WITH_EXPAT_TRUE@
+WITH_LIBXML2_FALSE = @WITH_LIBXML2_FALSE@
+WITH_LIBXML2_TRUE = @WITH_LIBXML2_TRUE@
+WITH_OPENSSL_FALSE = @WITH_OPENSSL_FALSE@
+WITH_OPENSSL_TRUE = @WITH_OPENSSL_TRUE@
+WITH_ZLIB_FALSE = @WITH_ZLIB_FALSE@
+WITH_ZLIB_TRUE = @WITH_ZLIB_TRUE@
+ZLIB_CPPFLAGS = @ZLIB_CPPFLAGS@
+ZLIB_LDFLAGS = @ZLIB_LDFLAGS@
+ZLIB_LIBS = @ZLIB_LIBS@
+ac_ct_CC = @ac_ct_CC@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+am__tar = @am__tar@
+am__untar = @am__untar@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+datarootdir = @datarootdir@
+docdir = @docdir@
+dvidir = @dvidir@
+exec_prefix = @exec_prefix@
+exp_ERLANG_INSTALL_LIB_DIR_exmpp = @exp_ERLANG_INSTALL_LIB_DIR_exmpp@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+htmldir = @htmldir@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localedir = @localedir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+pdfdir = @pdfdir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+psdir = @psdir@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target = @target@
+target_alias = @target_alias@
+target_cpu = @target_cpu@
+target_os = @target_os@
+target_vendor = @target_vendor@
+execdrivers_LTLIBRARIES = exmpp_stringprep.la $(am__append_1) \
+	$(am__append_2) $(am__append_3) $(am__append_4)
+EXTRA_DIST = stringprep_uni_data.h stringprep_uni_norm.h
+EI_CPPFLAGS = -I$(ERLANG_ERTS_DIR)/include				\
+	      -I$(ERLANG_LIB_DIR_erl_interface)/include
+
+EI_LDFLAGS = -L$(ERLANG_LIB_DIR_erl_interface)/lib
+EI_LIBS = -lei_st
+execdriversdir = $(ERLANG_INSTALL_LIB_DIR_exmpp)/priv/lib
+
+# --------------------------------------------------------------------
+# Supported port drivers.
+# --------------------------------------------------------------------
+
+# Expat port drivers.
+exmpp_xml_expat_la_CPPFLAGS = $(SMP_CPPFLAGS)				\
+			      $(EI_CPPFLAGS)				\
+			      $(EXPAT_CPPFLAGS)
+
+exmpp_xml_expat_la_LDFLAGS = -module -avoid-version			\
+			     $(ERL_DRIVER_LDFLAGS)			\
+			     $(EI_LDFLAGS) $(EI_LIBS)			\
+			     $(EXPAT_LDFLAGS) $(EXPAT_LIBS)
+
+exmpp_xml_expat_la_SOURCES = exmpp_driver.h				\
+			     exmpp_driver.c				\
+			     exmpp_xml.h				\
+			     exmpp_xml.c				\
+			     exmpp_xml_expat.c
+
+exmpp_xml_expat_legacy_la_CPPFLAGS = $(SMP_CPPFLAGS)			\
+				     $(EI_CPPFLAGS)			\
+				     $(EXPAT_CPPFLAGS)
+
+exmpp_xml_expat_legacy_la_LDFLAGS = -module -avoid-version		\
+				    $(ERL_DRIVER_LDFLAGS)		\
+				    $(EI_LDFLAGS) $(EI_LIBS)		\
+				    $(EXPAT_LDFLAGS) $(EXPAT_LIBS)
+
+exmpp_xml_expat_legacy_la_SOURCES = exmpp_driver.h			\
+				    exmpp_driver.c			\
+				    exmpp_xml.h				\
+				    exmpp_xml.c				\
+				    exmpp_xml_expat_legacy.c
+
+
+# LibXML2 port drivers.
+exmpp_xml_libxml2_la_CPPFLAGS = $(SMP_CPPFLAGS)				\
+				$(EI_CPPFLAGS)
+
+exmpp_xml_libxml2_la_CFLAGS = $(LIBXML2_CFLAGS)
+exmpp_xml_libxml2_la_LDFLAGS = -module -avoid-version			\
+			       $(ERL_DRIVER_LDFLAGS)			\
+			       $(EI_LDFLAGS) $(EI_LIBS)			\
+			       $(LIBXML2_LIBS)
+
+exmpp_xml_libxml2_la_SOURCES = exmpp_driver.h				\
+			       exmpp_driver.c				\
+			       exmpp_xml.h				\
+			       exmpp_xml.c				\
+			       exmpp_xml_libxml2.c
+
+
+# Stringprep port driver.
+exmpp_stringprep_la_CPPFLAGS = $(EI_CPPFLAGS)
+exmpp_stringprep_la_LDFLAGS = -module -avoid-version			\
+			      $(ERL_DRIVER_LDFLAGS)			\
+			      $(EI_LDFLAGS) $(EI_LIBS)
+
+exmpp_stringprep_la_SOURCES = exmpp_driver.h				\
+			      exmpp_driver.c				\
+			      stringprep_uni_data.h			\
+			      stringprep_uni_norm.h			\
+			      exmpp_stringprep.c
+
+
+# OpenSSL TLS port driver.
+exmpp_tls_openssl_la_CPPFLAGS = $(EI_CPPFLAGS)				\
+				$(OPENSSL_CPPFLAGS)
+
+exmpp_tls_openssl_la_LDFLAGS = -module -avoid-version			\
+			       $(ERL_DRIVER_LDFLAGS)			\
+			       $(EI_LDFLAGS) $(EI_LIBS)			\
+			       $(OPENSSL_LDFLAGS) $(OPENSSL_LIBS)
+
+exmpp_tls_openssl_la_SOURCES = exmpp_driver.h				\
+			       exmpp_driver.c				\
+			       exmpp_tls.h				\
+			       exmpp_tls.c				\
+			       exmpp_tls_openssl.c
+
+
+# Zlib compression port driver.
+exmpp_compress_zlib_la_CPPFLAGS = $(EI_CPPFLAGS)			\
+				  $(ZLIB_CPPFLAGS)
+
+exmpp_compress_zlib_la_LDFLAGS = -module -avoid-version			\
+				 $(ERL_DRIVER_LDFLAGS)			\
+				 $(EI_LDFLAGS) $(EI_LIBS)		\
+				 $(ZLIB_LDFLAGS) $(ZLIB_LIBS)
+
+exmpp_compress_zlib_la_SOURCES = exmpp_driver.h				\
+				 exmpp_driver.c				\
+				 exmpp_compress.h			\
+				 exmpp_compress_zlib.c
+
+all: all-am
+
+.SUFFIXES:
+.SUFFIXES: .c .lo .o .obj
+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  c_src/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --foreign  c_src/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure:  $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+install-execdriversLTLIBRARIES: $(execdrivers_LTLIBRARIES)
+	@$(NORMAL_INSTALL)
+	test -z "$(execdriversdir)" || $(mkdir_p) "$(DESTDIR)$(execdriversdir)"
+	@list='$(execdrivers_LTLIBRARIES)'; for p in $$list; do \
+	  if test -f $$p; then \
+	    f=$(am__strip_dir) \
+	    echo " $(LIBTOOL) --mode=install $(execdriversLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(execdriversdir)/$$f'"; \
+	    $(LIBTOOL) --mode=install $(execdriversLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(execdriversdir)/$$f"; \
+	  else :; fi; \
+	done
+
+uninstall-execdriversLTLIBRARIES:
+	@$(NORMAL_UNINSTALL)
+	@set -x; list='$(execdrivers_LTLIBRARIES)'; for p in $$list; do \
+	  p=$(am__strip_dir) \
+	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(execdriversdir)/$$p'"; \
+	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(execdriversdir)/$$p"; \
+	done
+
+clean-execdriversLTLIBRARIES:
+	-test -z "$(execdrivers_LTLIBRARIES)" || rm -f $(execdrivers_LTLIBRARIES)
+	@list='$(execdrivers_LTLIBRARIES)'; for p in $$list; do \
+	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
+	  test "$$dir" != "$$p" || dir=.; \
+	  echo "rm -f \"$${dir}/so_locations\""; \
+	  rm -f "$${dir}/so_locations"; \
+	done
+exmpp_compress_zlib.la: $(exmpp_compress_zlib_la_OBJECTS) $(exmpp_compress_zlib_la_DEPENDENCIES) 
+	$(LINK) $(am_exmpp_compress_zlib_la_rpath) $(exmpp_compress_zlib_la_LDFLAGS) $(exmpp_compress_zlib_la_OBJECTS) $(exmpp_compress_zlib_la_LIBADD) $(LIBS)
+exmpp_stringprep.la: $(exmpp_stringprep_la_OBJECTS) $(exmpp_stringprep_la_DEPENDENCIES) 
+	$(LINK) -rpath $(execdriversdir) $(exmpp_stringprep_la_LDFLAGS) $(exmpp_stringprep_la_OBJECTS) $(exmpp_stringprep_la_LIBADD) $(LIBS)
+exmpp_tls_openssl.la: $(exmpp_tls_openssl_la_OBJECTS) $(exmpp_tls_openssl_la_DEPENDENCIES) 
+	$(LINK) $(am_exmpp_tls_openssl_la_rpath) $(exmpp_tls_openssl_la_LDFLAGS) $(exmpp_tls_openssl_la_OBJECTS) $(exmpp_tls_openssl_la_LIBADD) $(LIBS)
+exmpp_xml_expat.la: $(exmpp_xml_expat_la_OBJECTS) $(exmpp_xml_expat_la_DEPENDENCIES) 
+	$(LINK) $(am_exmpp_xml_expat_la_rpath) $(exmpp_xml_expat_la_LDFLAGS) $(exmpp_xml_expat_la_OBJECTS) $(exmpp_xml_expat_la_LIBADD) $(LIBS)
+exmpp_xml_expat_legacy.la: $(exmpp_xml_expat_legacy_la_OBJECTS) $(exmpp_xml_expat_legacy_la_DEPENDENCIES) 
+	$(LINK) $(am_exmpp_xml_expat_legacy_la_rpath) $(exmpp_xml_expat_legacy_la_LDFLAGS) $(exmpp_xml_expat_legacy_la_OBJECTS) $(exmpp_xml_expat_legacy_la_LIBADD) $(LIBS)
+exmpp_xml_libxml2.la: $(exmpp_xml_libxml2_la_OBJECTS) $(exmpp_xml_libxml2_la_DEPENDENCIES) 
+	$(LINK) $(am_exmpp_xml_libxml2_la_rpath) $(exmpp_xml_libxml2_la_LDFLAGS) $(exmpp_xml_libxml2_la_OBJECTS) $(exmpp_xml_libxml2_la_LIBADD) $(LIBS)
+
+mostlyclean-compile:
+	-rm -f *.$(OBJEXT)
+
+distclean-compile:
+	-rm -f *.tab.c
+
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exmpp_compress_zlib_la-exmpp_compress_zlib.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exmpp_compress_zlib_la-exmpp_driver.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exmpp_stringprep_la-exmpp_driver.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exmpp_stringprep_la-exmpp_stringprep.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exmpp_tls_openssl_la-exmpp_driver.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exmpp_tls_openssl_la-exmpp_tls.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exmpp_tls_openssl_la-exmpp_tls_openssl.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exmpp_xml_expat_la-exmpp_driver.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exmpp_xml_expat_la-exmpp_xml.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exmpp_xml_expat_la-exmpp_xml_expat.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_driver.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_xml.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_xml_expat_legacy.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_driver.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_xml.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_xml_libxml2.Plo@am__quote@
+
+.c.o:
+@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(COMPILE) -c $<
+
+.c.obj:
+@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`
+
+.c.lo:
+@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<
+
+exmpp_compress_zlib_la-exmpp_driver.lo: exmpp_driver.c
+@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_compress_zlib_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_compress_zlib_la-exmpp_driver.lo -MD -MP -MF "$(DEPDIR)/exmpp_compress_zlib_la-exmpp_driver.Tpo" -c -o exmpp_compress_zlib_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/exmpp_compress_zlib_la-exmpp_driver.Tpo" "$(DEPDIR)/exmpp_compress_zlib_la-exmpp_driver.Plo"; else rm -f "$(DEPDIR)/exmpp_compress_zlib_la-exmpp_driver.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='exmpp_driver.c' object='exmpp_compress_zlib_la-exmpp_driver.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_compress_zlib_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_compress_zlib_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c
+
+exmpp_compress_zlib_la-exmpp_compress_zlib.lo: exmpp_compress_zlib.c
+@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_compress_zlib_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_compress_zlib_la-exmpp_compress_zlib.lo -MD -MP -MF "$(DEPDIR)/exmpp_compress_zlib_la-exmpp_compress_zlib.Tpo" -c -o exmpp_compress_zlib_la-exmpp_compress_zlib.lo `test -f 'exmpp_compress_zlib.c' || echo '$(srcdir)/'`exmpp_compress_zlib.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/exmpp_compress_zlib_la-exmpp_compress_zlib.Tpo" "$(DEPDIR)/exmpp_compress_zlib_la-exmpp_compress_zlib.Plo"; else rm -f "$(DEPDIR)/exmpp_compress_zlib_la-exmpp_compress_zlib.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='exmpp_compress_zlib.c' object='exmpp_compress_zlib_la-exmpp_compress_zlib.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_compress_zlib_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_compress_zlib_la-exmpp_compress_zlib.lo `test -f 'exmpp_compress_zlib.c' || echo '$(srcdir)/'`exmpp_compress_zlib.c
+
+exmpp_stringprep_la-exmpp_driver.lo: exmpp_driver.c
+@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_stringprep_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_stringprep_la-exmpp_driver.lo -MD -MP -MF "$(DEPDIR)/exmpp_stringprep_la-exmpp_driver.Tpo" -c -o exmpp_stringprep_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/exmpp_stringprep_la-exmpp_driver.Tpo" "$(DEPDIR)/exmpp_stringprep_la-exmpp_driver.Plo"; else rm -f "$(DEPDIR)/exmpp_stringprep_la-exmpp_driver.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='exmpp_driver.c' object='exmpp_stringprep_la-exmpp_driver.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_stringprep_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_stringprep_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c
+
+exmpp_stringprep_la-exmpp_stringprep.lo: exmpp_stringprep.c
+@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_stringprep_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_stringprep_la-exmpp_stringprep.lo -MD -MP -MF "$(DEPDIR)/exmpp_stringprep_la-exmpp_stringprep.Tpo" -c -o exmpp_stringprep_la-exmpp_stringprep.lo `test -f 'exmpp_stringprep.c' || echo '$(srcdir)/'`exmpp_stringprep.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/exmpp_stringprep_la-exmpp_stringprep.Tpo" "$(DEPDIR)/exmpp_stringprep_la-exmpp_stringprep.Plo"; else rm -f "$(DEPDIR)/exmpp_stringprep_la-exmpp_stringprep.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='exmpp_stringprep.c' object='exmpp_stringprep_la-exmpp_stringprep.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_stringprep_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_stringprep_la-exmpp_stringprep.lo `test -f 'exmpp_stringprep.c' || echo '$(srcdir)/'`exmpp_stringprep.c
+
+exmpp_tls_openssl_la-exmpp_driver.lo: exmpp_driver.c
+@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_tls_openssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_tls_openssl_la-exmpp_driver.lo -MD -MP -MF "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_driver.Tpo" -c -o exmpp_tls_openssl_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_driver.Tpo" "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_driver.Plo"; else rm -f "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_driver.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='exmpp_driver.c' object='exmpp_tls_openssl_la-exmpp_driver.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_tls_openssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_tls_openssl_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c
+
+exmpp_tls_openssl_la-exmpp_tls.lo: exmpp_tls.c
+@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_tls_openssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_tls_openssl_la-exmpp_tls.lo -MD -MP -MF "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_tls.Tpo" -c -o exmpp_tls_openssl_la-exmpp_tls.lo `test -f 'exmpp_tls.c' || echo '$(srcdir)/'`exmpp_tls.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_tls.Tpo" "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_tls.Plo"; else rm -f "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_tls.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='exmpp_tls.c' object='exmpp_tls_openssl_la-exmpp_tls.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_tls_openssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_tls_openssl_la-exmpp_tls.lo `test -f 'exmpp_tls.c' || echo '$(srcdir)/'`exmpp_tls.c
+
+exmpp_tls_openssl_la-exmpp_tls_openssl.lo: exmpp_tls_openssl.c
+@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_tls_openssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_tls_openssl_la-exmpp_tls_openssl.lo -MD -MP -MF "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_tls_openssl.Tpo" -c -o exmpp_tls_openssl_la-exmpp_tls_openssl.lo `test -f 'exmpp_tls_openssl.c' || echo '$(srcdir)/'`exmpp_tls_openssl.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_tls_openssl.Tpo" "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_tls_openssl.Plo"; else rm -f "$(DEPDIR)/exmpp_tls_openssl_la-exmpp_tls_openssl.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='exmpp_tls_openssl.c' object='exmpp_tls_openssl_la-exmpp_tls_openssl.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_tls_openssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_tls_openssl_la-exmpp_tls_openssl.lo `test -f 'exmpp_tls_openssl.c' || echo '$(srcdir)/'`exmpp_tls_openssl.c
+
+exmpp_xml_expat_la-exmpp_driver.lo: exmpp_driver.c
+@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_xml_expat_la-exmpp_driver.lo -MD -MP -MF "$(DEPDIR)/exmpp_xml_expat_la-exmpp_driver.Tpo" -c -o exmpp_xml_expat_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/exmpp_xml_expat_la-exmpp_driver.Tpo" "$(DEPDIR)/exmpp_xml_expat_la-exmpp_driver.Plo"; else rm -f "$(DEPDIR)/exmpp_xml_expat_la-exmpp_driver.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='exmpp_driver.c' object='exmpp_xml_expat_la-exmpp_driver.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_xml_expat_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c
+
+exmpp_xml_expat_la-exmpp_xml.lo: exmpp_xml.c
+@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_xml_expat_la-exmpp_xml.lo -MD -MP -MF "$(DEPDIR)/exmpp_xml_expat_la-exmpp_xml.Tpo" -c -o exmpp_xml_expat_la-exmpp_xml.lo `test -f 'exmpp_xml.c' || echo '$(srcdir)/'`exmpp_xml.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/exmpp_xml_expat_la-exmpp_xml.Tpo" "$(DEPDIR)/exmpp_xml_expat_la-exmpp_xml.Plo"; else rm -f "$(DEPDIR)/exmpp_xml_expat_la-exmpp_xml.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='exmpp_xml.c' object='exmpp_xml_expat_la-exmpp_xml.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_xml_expat_la-exmpp_xml.lo `test -f 'exmpp_xml.c' || echo '$(srcdir)/'`exmpp_xml.c
+
+exmpp_xml_expat_la-exmpp_xml_expat.lo: exmpp_xml_expat.c
+@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_xml_expat_la-exmpp_xml_expat.lo -MD -MP -MF "$(DEPDIR)/exmpp_xml_expat_la-exmpp_xml_expat.Tpo" -c -o exmpp_xml_expat_la-exmpp_xml_expat.lo `test -f 'exmpp_xml_expat.c' || echo '$(srcdir)/'`exmpp_xml_expat.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/exmpp_xml_expat_la-exmpp_xml_expat.Tpo" "$(DEPDIR)/exmpp_xml_expat_la-exmpp_xml_expat.Plo"; else rm -f "$(DEPDIR)/exmpp_xml_expat_la-exmpp_xml_expat.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='exmpp_xml_expat.c' object='exmpp_xml_expat_la-exmpp_xml_expat.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_xml_expat_la-exmpp_xml_expat.lo `test -f 'exmpp_xml_expat.c' || echo '$(srcdir)/'`exmpp_xml_expat.c
+
+exmpp_xml_expat_legacy_la-exmpp_driver.lo: exmpp_driver.c
+@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_legacy_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_xml_expat_legacy_la-exmpp_driver.lo -MD -MP -MF "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_driver.Tpo" -c -o exmpp_xml_expat_legacy_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_driver.Tpo" "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_driver.Plo"; else rm -f "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_driver.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='exmpp_driver.c' object='exmpp_xml_expat_legacy_la-exmpp_driver.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_legacy_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_xml_expat_legacy_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c
+
+exmpp_xml_expat_legacy_la-exmpp_xml.lo: exmpp_xml.c
+@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_legacy_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_xml_expat_legacy_la-exmpp_xml.lo -MD -MP -MF "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_xml.Tpo" -c -o exmpp_xml_expat_legacy_la-exmpp_xml.lo `test -f 'exmpp_xml.c' || echo '$(srcdir)/'`exmpp_xml.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_xml.Tpo" "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_xml.Plo"; else rm -f "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_xml.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='exmpp_xml.c' object='exmpp_xml_expat_legacy_la-exmpp_xml.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_legacy_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_xml_expat_legacy_la-exmpp_xml.lo `test -f 'exmpp_xml.c' || echo '$(srcdir)/'`exmpp_xml.c
+
+exmpp_xml_expat_legacy_la-exmpp_xml_expat_legacy.lo: exmpp_xml_expat_legacy.c
+@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_legacy_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT exmpp_xml_expat_legacy_la-exmpp_xml_expat_legacy.lo -MD -MP -MF "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_xml_expat_legacy.Tpo" -c -o exmpp_xml_expat_legacy_la-exmpp_xml_expat_legacy.lo `test -f 'exmpp_xml_expat_legacy.c' || echo '$(srcdir)/'`exmpp_xml_expat_legacy.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_xml_expat_legacy.Tpo" "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_xml_expat_legacy.Plo"; else rm -f "$(DEPDIR)/exmpp_xml_expat_legacy_la-exmpp_xml_expat_legacy.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='exmpp_xml_expat_legacy.c' object='exmpp_xml_expat_legacy_la-exmpp_xml_expat_legacy.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_expat_legacy_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exmpp_xml_expat_legacy_la-exmpp_xml_expat_legacy.lo `test -f 'exmpp_xml_expat_legacy.c' || echo '$(srcdir)/'`exmpp_xml_expat_legacy.c
+
+exmpp_xml_libxml2_la-exmpp_driver.lo: exmpp_driver.c
+@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_libxml2_la_CPPFLAGS) $(CPPFLAGS) $(exmpp_xml_libxml2_la_CFLAGS) $(CFLAGS) -MT exmpp_xml_libxml2_la-exmpp_driver.lo -MD -MP -MF "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_driver.Tpo" -c -o exmpp_xml_libxml2_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_driver.Tpo" "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_driver.Plo"; else rm -f "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_driver.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='exmpp_driver.c' object='exmpp_xml_libxml2_la-exmpp_driver.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_libxml2_la_CPPFLAGS) $(CPPFLAGS) $(exmpp_xml_libxml2_la_CFLAGS) $(CFLAGS) -c -o exmpp_xml_libxml2_la-exmpp_driver.lo `test -f 'exmpp_driver.c' || echo '$(srcdir)/'`exmpp_driver.c
+
+exmpp_xml_libxml2_la-exmpp_xml.lo: exmpp_xml.c
+@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_libxml2_la_CPPFLAGS) $(CPPFLAGS) $(exmpp_xml_libxml2_la_CFLAGS) $(CFLAGS) -MT exmpp_xml_libxml2_la-exmpp_xml.lo -MD -MP -MF "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_xml.Tpo" -c -o exmpp_xml_libxml2_la-exmpp_xml.lo `test -f 'exmpp_xml.c' || echo '$(srcdir)/'`exmpp_xml.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_xml.Tpo" "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_xml.Plo"; else rm -f "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_xml.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='exmpp_xml.c' object='exmpp_xml_libxml2_la-exmpp_xml.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_libxml2_la_CPPFLAGS) $(CPPFLAGS) $(exmpp_xml_libxml2_la_CFLAGS) $(CFLAGS) -c -o exmpp_xml_libxml2_la-exmpp_xml.lo `test -f 'exmpp_xml.c' || echo '$(srcdir)/'`exmpp_xml.c
+
+exmpp_xml_libxml2_la-exmpp_xml_libxml2.lo: exmpp_xml_libxml2.c
+@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_libxml2_la_CPPFLAGS) $(CPPFLAGS) $(exmpp_xml_libxml2_la_CFLAGS) $(CFLAGS) -MT exmpp_xml_libxml2_la-exmpp_xml_libxml2.lo -MD -MP -MF "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_xml_libxml2.Tpo" -c -o exmpp_xml_libxml2_la-exmpp_xml_libxml2.lo `test -f 'exmpp_xml_libxml2.c' || echo '$(srcdir)/'`exmpp_xml_libxml2.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_xml_libxml2.Tpo" "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_xml_libxml2.Plo"; else rm -f "$(DEPDIR)/exmpp_xml_libxml2_la-exmpp_xml_libxml2.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='exmpp_xml_libxml2.c' object='exmpp_xml_libxml2_la-exmpp_xml_libxml2.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exmpp_xml_libxml2_la_CPPFLAGS) $(CPPFLAGS) $(exmpp_xml_libxml2_la_CFLAGS) $(CFLAGS) -c -o exmpp_xml_libxml2_la-exmpp_xml_libxml2.lo `test -f 'exmpp_xml_libxml2.c' || echo '$(srcdir)/'`exmpp_xml_libxml2.c
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+distclean-libtool:
+	-rm -f libtool
+uninstall-info-am:
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
+	  test -n "$$unique" || unique=$$empty_fix; \
+	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	    $$tags $$unique; \
+	fi
+ctags: CTAGS
+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile $(LTLIBRARIES)
+installdirs:
+	for dir in "$(DESTDIR)$(execdriversdir)"; do \
+	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
+	done
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-execdriversLTLIBRARIES clean-generic clean-libtool \
+	mostlyclean-am
+
+distclean: distclean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+distclean-am: clean-am distclean-compile distclean-generic \
+	distclean-libtool distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-exec-am: install-execdriversLTLIBRARIES
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-compile mostlyclean-generic \
+	mostlyclean-libtool
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-execdriversLTLIBRARIES uninstall-info-am
+
+.PHONY: CTAGS GTAGS all all-am check check-am clean \
+	clean-execdriversLTLIBRARIES clean-generic clean-libtool ctags \
+	distclean distclean-compile distclean-generic \
+	distclean-libtool distclean-tags distdir dvi dvi-am html \
+	html-am info info-am install install-am install-data \
+	install-data-am install-exec install-exec-am \
+	install-execdriversLTLIBRARIES install-info install-info-am \
+	install-man install-strip installcheck installcheck-am \
+	installdirs maintainer-clean maintainer-clean-generic \
+	mostlyclean mostlyclean-compile mostlyclean-generic \
+	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
+	uninstall-am uninstall-execdriversLTLIBRARIES \
+	uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff -r d551623afde5 deps/exmpp/c_src/exmpp_compress.h
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/c_src/exmpp_compress.h	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,39 @@
+/*
+ * Copyright ProcessOne 2006-2010. All Rights Reserved.
+ *
+ * The contents of this file are subject to the Erlang Public License,
+ * Version 1.1, (the "License"); you may not use this file except in
+ * compliance with the License. You should have received a copy of the
+ * Erlang Public License along with this software. If not, it can be
+ * retrieved online at http://www.erlang.org/.
+ *
+ * Software distributed under the License is distributed on an "AS IS"
+ * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+ * the License for the specific language governing rights and limitations
+ * under the License.
+ *
+ */
+
+#ifndef EXMPP_COMPRESS_H
+#define	EXMPP_COMPRESS_H 1
+
+#include "exmpp_driver.h"
+
+/* Return codes. */
+enum {
+	RET_OK = 0,
+	RET_ERROR
+};
+
+/* Control operations. */
+enum {
+	COMMAND_SET_COMPRESS_METHOD = 1,
+	COMMAND_SET_COMPRESS_LEVEL,
+	COMMAND_PREPARE_COMPRESS,
+	COMMAND_PREPARE_UNCOMPRESS,
+	COMMAND_COMPRESS,
+	COMMAND_UNCOMPRESS,
+	COMMAND_SVN_REVISION
+};
+
+#endif /* !defined(EXMPP_COMPRESS_H) */
diff -r d551623afde5 deps/exmpp/c_src/exmpp_compress_zlib.c
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/c_src/exmpp_compress_zlib.c	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,341 @@
+/*
+ * Copyright ProcessOne 2006-2010. All Rights Reserved.
+ *
+ * The contents of this file are subject to the Erlang Public License,
+ * Version 1.1, (the "License"); you may not use this file except in
+ * compliance with the License. You should have received a copy of the
+ * Erlang Public License along with this software. If not, it can be
+ * retrieved online at http://www.erlang.org/.
+ *
+ * Software distributed under the License is distributed on an "AS IS"
+ * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+ * the License for the specific language governing rights and limitations
+ * under the License.
+ *
+ */
+
+#include <string.h>
+#include <zlib.h>
+
+#include "exmpp_compress.h"
+
+#define	DRIVER_NAME	exmpp_compress_zlib
+
+#define	BUF_SIZE	1024
+
+/* Driver data. */
+struct exmpp_compress_zlib_data {
+	/* Options. */
+	int		compress_level;
+	int		use_gzip;
+
+	z_stream	inf_z;
+	z_stream	def_z;
+};
+
+#define	COPY_AND_FREE_BUF(to_send, size, b, ret)			\
+	(size) = (to_send)->index + 1;					\
+	(b) = driver_alloc_binary((size));				\
+	(b)->orig_bytes[0] = (ret);					\
+	memcpy((b)->orig_bytes + 1, (to_send)->buff,			\
+	    (to_send)->index);						\
+	exmpp_free_xbuf((to_send));
+
+/* -------------------------------------------------------------------
+ * Erlang port driver callbacks.
+ * ------------------------------------------------------------------- */
+
+static ErlDrvData
+exmpp_compress_zlib_start(ErlDrvPort port, char *command)
+{
+	struct exmpp_compress_zlib_data *edd;
+
+	/* Set binary mode. */
+	set_port_control_flags(port, PORT_CONTROL_FLAG_BINARY);
+
+	/* Allocate driver data structure. */
+	edd = driver_alloc(sizeof(*edd));
+	if (edd == NULL)
+		return (NULL);
+
+	edd->use_gzip = 0;
+	edd->compress_level = Z_DEFAULT_COMPRESSION;
+
+	edd->inf_z.next_in  = edd->def_z.next_in  = 0;
+	edd->inf_z.avail_in = edd->def_z.avail_in = 0;
+	edd->inf_z.zalloc   = edd->def_z.zalloc   = NULL;
+	edd->inf_z.zfree    = edd->def_z.zfree    = NULL;
+	edd->inf_z.opaque   = edd->def_z.opaque   = NULL;
+
+	return (ErlDrvData)edd;
+}
+
+static void
+exmpp_compress_zlib_stop(ErlDrvData drv_data)
+{
+	struct exmpp_compress_zlib_data *edd;
+
+	edd = (struct exmpp_compress_zlib_data *)drv_data;
+
+	inflateEnd(&edd->inf_z);
+	deflateEnd(&edd->def_z);
+
+	driver_free(edd);
+}
+
+static int
+exmpp_compress_zlib_control(ErlDrvData drv_data, unsigned int command,
+    char *buf, int len, char **rbuf, int rlen)
+{
+	struct exmpp_compress_zlib_data *edd;
+	int ret, index, type, type_size;
+	char atom[MAXATOMLEN];
+	size_t size;
+	long compress_level;
+	ErlDrvBinary *b;
+	ei_x_buff *to_send;
+	z_stream *z;
+
+	edd = (struct exmpp_compress_zlib_data *)drv_data;
+
+	size = 0;
+	b = NULL;
+
+	switch (command) {
+	case COMMAND_SET_COMPRESS_METHOD:
+		index = exmpp_skip_version(buf);
+
+		/* Get compression method. */
+		ei_decode_atom(buf, &index, atom);
+
+		if (strcmp(atom, "zlib") == 0) {
+			edd->use_gzip = 0;
+		} else if (strcmp(atom, "gzip") == 0) {
+			edd->use_gzip = 1;
+		} else {
+			/* Only zlib is supported by this port driver. */
+			to_send = exmpp_new_xbuf();
+			if (to_send == NULL)
+				return (-1);
+			ei_x_encode_tuple_header(to_send, 2);
+			ei_x_encode_atom(to_send,
+			    "unsupported_compress_method");
+			ei_x_encode_string(to_send, atom);
+
+			COPY_AND_FREE_BUF(to_send, size, b, RET_ERROR);
+
+			break;
+		}
+
+		break;
+	case COMMAND_SET_COMPRESS_LEVEL:
+		index = exmpp_skip_version(buf);
+
+		/* Get the compression level. */
+		ei_get_type(buf, &index, &type, &type_size);
+		switch (type) {
+		case ERL_INTEGER_EXT:
+			ei_decode_long(buf, &index, &compress_level);
+
+			if (compress_level < Z_NO_COMPRESSION ||
+			    compress_level > Z_BEST_COMPRESSION) {
+				/* Valid levels are 0..9. */
+				to_send = exmpp_new_xbuf();
+				if (to_send == NULL)
+					return (-1);
+				ei_x_encode_tuple_header(to_send, 2);
+				ei_x_encode_atom(to_send,
+				    "invalid_compress_level");
+				ei_x_encode_long(to_send, compress_level);
+
+				COPY_AND_FREE_BUF(to_send, size, b, RET_ERROR);
+
+				goto out;
+			}
+
+			edd->compress_level = compress_level;
+
+			break;
+		case ERL_ATOM_EXT:
+			ei_decode_atom(buf, &index, atom);
+
+			if (strcmp(atom, "default") != 0) {
+				/* Valid levels are 0..9. */
+				to_send = exmpp_new_xbuf();
+				if (to_send == NULL)
+					return (-1);
+				ei_x_encode_tuple_header(to_send, 2);
+				ei_x_encode_atom(to_send,
+				    "invalid_compress_level");
+				ei_x_encode_atom(to_send, atom);
+
+				COPY_AND_FREE_BUF(to_send, size, b, RET_ERROR);
+
+				goto out;
+			}
+
+			break;
+		}
+
+		break;
+	case COMMAND_PREPARE_COMPRESS:
+	case COMMAND_PREPARE_UNCOMPRESS:
+		if (command == COMMAND_PREPARE_COMPRESS) {
+			if (edd->use_gzip)
+				ret = deflateInit2(&edd->def_z,
+				    edd->compress_level,
+				    Z_DEFLATED, 15 + 16, 8,
+				    Z_DEFAULT_STRATEGY);
+			else
+				ret = deflateInit(&edd->def_z,
+				    edd->compress_level);
+		} else {
+			if (edd->use_gzip)
+				ret = inflateInit2(&edd->inf_z,
+				    15 + 16);
+			else
+				ret = inflateInit(&edd->inf_z);
+		}
+
+		if (ret != Z_OK) {
+			to_send = exmpp_new_xbuf();
+			if (to_send == NULL)
+				return (-1);
+			if (ret == Z_MEM_ERROR)
+				ei_x_encode_atom(to_send, "no_memory");
+			else if (ret == Z_VERSION_ERROR)
+				ei_x_encode_atom(to_send,
+				    "incompatible_zlib_version");
+			else
+				ei_x_encode_atom(to_send,
+				    "zlib_internal_error");
+
+			COPY_AND_FREE_BUF(to_send, size, b, RET_ERROR);
+
+			break;
+		}
+
+		break;
+	case COMMAND_COMPRESS:
+	case COMMAND_UNCOMPRESS:
+		size = BUF_SIZE + 1;
+		rlen = 1;
+		b = driver_alloc_binary(size);
+		b->orig_bytes[0] = RET_OK;
+
+		z = NULL;
+		if (command == COMMAND_COMPRESS)
+			z = &edd->def_z;
+		else
+			z = &edd->inf_z;
+
+		z->next_in = (unsigned char *)buf;
+		z->avail_in = len;
+		z->avail_out = 0;
+		ret = Z_OK;
+
+		while (ret == Z_OK && z->avail_out == 0) {
+			z->next_out = (unsigned char *)b->orig_bytes + rlen;
+			z->avail_out = BUF_SIZE;
+
+			if (command == COMMAND_COMPRESS) {
+				ret = deflate(z, Z_SYNC_FLUSH);
+				if (ret != Z_OK && ret != Z_STREAM_END) {
+					driver_free_binary(b);
+
+					to_send = exmpp_new_xbuf();
+					if (to_send == NULL)
+						return (-1);
+					ei_x_encode_atom(to_send,
+					    "deflate_error");
+
+					COPY_AND_FREE_BUF(to_send, size, b,
+					    RET_ERROR);
+
+					goto out;
+				}
+			} else {
+				ret = inflate(z, Z_SYNC_FLUSH);
+				if (ret != Z_OK && ret != Z_STREAM_END) {
+					driver_free_binary(b);
+
+					to_send = exmpp_new_xbuf();
+					if (to_send == NULL)
+						return (-1);
+					ei_x_encode_atom(to_send,
+					    "inflate_error");
+
+					COPY_AND_FREE_BUF(to_send, size, b,
+					    RET_ERROR);
+
+					goto out;
+				}
+			}
+
+			rlen += (BUF_SIZE - z->avail_out);
+			size += (BUF_SIZE - z->avail_out);
+			b = driver_realloc_binary(b, size);
+		}
+
+		size = rlen;
+		b = driver_realloc_binary(b, size);
+
+		break;
+	case COMMAND_SVN_REVISION:
+		/* Store the revision in the buffer. */
+		to_send = exmpp_new_xbuf();
+		if (to_send == NULL)
+			return (-1);
+		ei_x_encode_string(to_send, "$Revision: 899 $");
+
+		COPY_AND_FREE_BUF(to_send, size, b, RET_ERROR);
+
+		break;
+	default:
+		/* Commad not recognized. */
+		to_send = exmpp_new_xbuf();
+		if (to_send == NULL)
+			return (-1);
+		ei_x_encode_tuple_header(to_send, 2);
+		ei_x_encode_atom(to_send, "unknown_command");
+		ei_x_encode_ulong(to_send, command);
+
+		COPY_AND_FREE_BUF(to_send, size, b, RET_ERROR);
+	}
+
+out:
+	if (b == NULL) {
+		size = 1;
+		b = driver_alloc_binary(size);
+		b->orig_bytes[0] = RET_OK;
+	}
+
+	*rbuf = (char *)b;
+
+	return (size);
+}
+
+/* -------------------------------------------------------------------
+ * Driver declaration.
+ * ------------------------------------------------------------------- */
+
+static ErlDrvEntry compress_zlib_driver_entry = {
+	NULL,				/* init */
+	exmpp_compress_zlib_start,	/* start */
+	exmpp_compress_zlib_stop,	/* stop */
+	NULL,				/* output */
+	NULL,				/* ready_input */
+	NULL,				/* ready_output */
+	S(DRIVER_NAME),			/* driver name */
+	NULL,				/* finish */
+	NULL,				/* handle */
+	exmpp_compress_zlib_control,	/* control */
+	NULL,				/* timeout */
+	NULL				/* outputv */
+};
+
+DRIVER_INIT(DRIVER_NAME)
+{
+
+	return &compress_zlib_driver_entry;
+}
diff -r d551623afde5 deps/exmpp/c_src/exmpp_driver.c
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/c_src/exmpp_driver.c	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,458 @@
+/*
+ * Copyright ProcessOne 2006-2010. All Rights Reserved.
+ *
+ * The contents of this file are subject to the Erlang Public License,
+ * Version 1.1, (the "License"); you may not use this file except in
+ * compliance with the License. You should have received a copy of the
+ * Erlang Public License along with this software. If not, it can be
+ * retrieved online at http://www.erlang.org/.
+ *
+ * Software distributed under the License is distributed on an "AS IS"
+ * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+ * the License for the specific language governing rights and limitations
+ * under the License.
+ *
+ */
+
+#include <math.h>
+#include <stdio.h>
+#include <string.h>
+
+#include "exmpp_driver.h"
+
+struct exmpp_ht_entry;
+
+struct exmpp_ht_entry {
+	char			 *key;
+	int			  key_len;
+	void			 *value;
+	unsigned int		  hash;
+	struct exmpp_ht_entry	 *next;
+};
+
+struct exmpp_hashtable {
+	struct exmpp_ht_entry	**entries;
+	unsigned int		  length;
+	unsigned int		  entries_count;
+	unsigned int		  load_limit;
+	unsigned int		  prime_index;
+	exmpp_ht_free_value_cb	 *free_value;
+#if defined(USE_RWLOCK)
+	ErlDrvRWLock		 *lock;
+#endif
+};
+
+static unsigned int	ht_hash(const char *key);
+static unsigned int	ht_hash_len(const char *key, int key_len);
+static int		ht_expand(struct exmpp_hashtable *ht);
+
+/*
+ * Credit for primes table: Aaron Krowne
+ *   http://br.endernet.org/~akrowne/
+ *   http://planetmath.org/encyclopedia/GoodHashTablePrimes.html
+ */
+
+static const unsigned int primes[] = {
+	53, 97, 193, 389,
+	769, 1543, 3079, 6151,
+	12289, 24593, 49157, 98317,
+	196613, 393241, 786433, 1572869,
+	3145739, 6291469, 12582917, 25165843,
+	50331653, 100663319, 201326611, 402653189,
+	805306457, 1610612741
+};
+static const unsigned int prime_table_length =
+  sizeof(primes) / sizeof(primes[0]);
+
+#define	MAX_LOAD_FACTOR 0.65f
+
+/* -------------------------------------------------------------------
+ * Simple hashtable.
+ * ------------------------------------------------------------------- */
+
+/*
+ * Copyright (c) 2002, 2004, Christopher Clark
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ *   * Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ *
+ *   * Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ *
+ *   * Neither the name of the original author; nor the names of any
+ *     contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+ * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+ * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+ * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ *
+ * http://www.cl.cam.ac.uk/~cwc22/hashtable/
+ *
+ * It was modified to use Erlang memory allocators and to add locking.
+ */
+
+struct exmpp_hashtable *
+exmpp_ht_create(unsigned int min_length, exmpp_ht_free_value_cb free_value)
+{
+	struct exmpp_hashtable *ht;
+	unsigned int pindex, length;
+
+	/* Check requested length isn't too large. */
+	if (min_length > (1u << 30))
+		return (NULL);
+
+	/* Enforce length as prime. */
+	length = primes[0];
+	for (pindex = 0; pindex < prime_table_length; ++pindex) {
+		if (primes[pindex] > min_length) {
+			length = primes[pindex];
+			break;
+		}
+	}
+
+	ht = driver_alloc(sizeof(*ht));
+	if (ht == NULL)
+		return (NULL);
+	ht->entries = driver_alloc(length * sizeof(*(ht->entries)));
+	if (ht->entries == NULL) {
+		driver_free(ht);
+		return (NULL);
+	}
+	memset(ht->entries, 0, length * sizeof(*(ht->entries)));
+
+#if defined(USE_RWLOCK)
+	ht->lock = erl_drv_rwlock_create("exmpp_hashtable");
+	if (ht->lock == NULL) {
+		driver_free(ht->entries);
+		driver_free(ht);
+		return (NULL);
+	}
+#endif
+
+	ht->length = length;
+	ht->entries_count = 0;
+	ht->load_limit = (unsigned int)ceil(length * MAX_LOAD_FACTOR);
+	ht->prime_index = pindex;
+	ht->free_value = free_value;
+
+	return (ht);
+}
+
+int
+exmpp_ht_store(struct exmpp_hashtable *ht, const char *key, int key_len,
+    void *value)
+{
+	unsigned int index;
+	struct exmpp_ht_entry *entry;
+
+	if (ht == NULL || ht->entries == NULL)
+		return (-1);
+
+	/* Allocate the new entry. */
+	entry = driver_alloc(sizeof(*entry));
+	if (entry == NULL)
+		return (-1);
+
+	if (key_len == -1) {
+		entry->hash = ht_hash(key);
+		entry->key = exmpp_strdup(key);
+		if (entry->key == NULL)
+			return (-1);
+	} else {
+		entry->hash = ht_hash_len(key, key_len);
+		entry->key = driver_alloc(key_len + 1);
+		if (entry->key == NULL)
+			return (-1);
+		memcpy(entry->key, key, key_len);
+		entry->key[key_len] = '\0';
+	}
+	entry->key_len = key_len;
+	entry->value = value;
+
+#if defined(USE_RWLOCK)
+	erl_drv_rwlock_rwlock(ht->lock);
+#endif
+
+	/* Expand the table is necessary. */
+	if (++(ht->entries_count) > ht->load_limit) {
+		/*
+		 * Ignore the return value. If expand fails, we should
+		 * still try cramming just this value into the existing
+		 * table -- we may not have memory for a larger table,
+		 * but one more element may be ok. Next time we insert,
+		 * we'll try expanding again.
+		 */
+		ht_expand(ht);
+	}
+
+	/* Wire the new entry. */
+	index = entry->hash % ht->length;
+	entry->next = ht->entries[index];
+	ht->entries[index] = entry;
+
+#if defined(USE_RWLOCK)
+	erl_drv_rwlock_rwunlock(ht->lock);
+#endif
+
+	return (0);
+}
+
+void *
+exmpp_ht_fetch(struct exmpp_hashtable *ht, const char *key, int key_len)
+{
+	struct exmpp_ht_entry *entry;
+	unsigned int hash, index;
+
+	if (ht == NULL || ht->entries == NULL)
+		return (NULL);
+
+	hash = key_len == -1 ? ht_hash(key) : ht_hash_len(key, key_len);
+
+#if defined(USE_RWLOCK)
+	erl_drv_rwlock_rlock(ht->lock);
+#endif
+
+	index = hash % ht->length;
+	entry = ht->entries[index];
+
+	while (entry != NULL) {
+		/* Check hash value to short circuit heavier comparison. */
+		if (entry->hash == hash &&
+		    ((key_len == -1 &&
+		      strcmp(entry->key, key)) ||
+		     (entry->key_len == key_len &&
+		      strncmp(entry->key, key, key_len) == 0))) {
+#if defined(USE_RWLOCK)
+			erl_drv_rwlock_runlock(ht->lock);
+#endif
+			return (entry->value);
+		}
+
+		entry = entry->next;
+	}
+
+#if defined(USE_RWLOCK)
+	erl_drv_rwlock_runlock(ht->lock);
+#endif
+
+	return (NULL);
+}
+
+int
+exmpp_ht_exists(struct exmpp_hashtable *ht, const char *key, int key_len)
+{
+
+	if (exmpp_ht_fetch(ht, key, key_len) != NULL)
+		return (1);
+
+	return (0);
+}
+
+void
+exmpp_ht_destroy(struct exmpp_hashtable *ht)
+{
+	unsigned int i;
+	struct exmpp_ht_entry *entry, *next;
+
+	if (ht == NULL || ht->entries == NULL)
+		return;
+
+#if defined(USE_RWLOCK)
+	erl_drv_rwlock_rwlock(ht->lock);
+#endif
+
+	for (i = 0; i < ht->length; ++i) {
+		next = ht->entries[i];
+		while (next != NULL) {
+			entry = next;
+			next = next->next;
+			driver_free(entry->key);
+			if (ht->free_value != NULL)
+				ht->free_value(entry->value);
+			driver_free(entry);
+		}
+	}
+
+	driver_free(ht->entries);
+	ht->entries = NULL;
+	ht->entries_count = 0;
+	ht->length = 0;
+
+#if defined(USE_RWLOCK)
+	erl_drv_rwlock_rwunlock(ht->lock);
+	erl_drv_rwlock_destroy(ht->lock);
+#endif
+
+	driver_free(ht);
+}
+
+void
+exmpp_ht_dump_keys(struct exmpp_hashtable *ht)
+{
+	unsigned int i, j;
+	struct exmpp_ht_entry *entry;
+
+	if (ht == NULL || ht->entries == NULL)
+		return;
+
+#if defined(USE_RWLOCK)
+	erl_drv_rwlock_rlock(ht->lock);
+#endif
+
+	for (i = 0; i < ht->length; ++i) {
+		entry = ht->entries[i];
+		j = 0;
+		while (entry != NULL) {
+			if (j == 0)
+				printf("  %3u: '%s'\r\n", i, entry->key);
+			else
+				printf("       '%s'\r\n", entry->key);
+			entry = entry->next;
+			++j;
+		}
+	}
+
+#if defined(USE_RWLOCK)
+	erl_drv_rwlock_runlock(ht->lock);
+#endif
+}
+
+static unsigned int
+ht_hash(const char *key)
+{
+	int c;
+	const char *str;
+	unsigned int hash;
+
+	str = key;
+	hash = 5381;
+	while ((c = *str++))
+		hash = ((hash << 5) + hash) ^ c; /* hash * 33 ^ c */
+
+	return (hash);
+}
+
+static unsigned int
+ht_hash_len(const char *key, int key_len)
+{
+	int i;
+	unsigned int hash;
+
+	hash = 5381;
+	for (i = 0; i < key_len; ++i)
+		hash = ((hash << 5) + hash) ^ key[i]; /* hash * 33 ^ c */
+
+	return (hash);
+}
+
+static int
+ht_expand(struct exmpp_hashtable *ht)
+{
+	unsigned int new_length, i, index;
+	struct exmpp_ht_entry *entry, **new_entries;
+
+	/* This function must be called with 'ht' locked! */
+
+	/* Check we're not hitting max capacity. */
+	if (ht->prime_index == (prime_table_length - 1))
+		return (0);
+	new_length = primes[++(ht->prime_index)];
+
+	new_entries = driver_alloc(new_length * sizeof(*new_entries));
+	if (new_entries == NULL)
+		return (-1);
+	memset(ht->entries, 0, new_length * sizeof(*(new_entries)));
+
+	/*
+	 * This algorithm is not "stable"; ie. it reverses the list
+	 * when it transfers entries between the tables.
+	 */
+	for (i = 0; i < ht->length; ++i) {
+		while ((entry = ht->entries[i]) != NULL) {
+			ht->entries[i] = entry->next;
+			index = entry->hash % new_length;
+			entry->next = new_entries[index];
+			new_entries[index] = entry;
+		}
+	}
+
+	driver_free(ht->entries);
+	ht->entries = new_entries;
+	ht->length = new_length;
+	ht->load_limit = (unsigned int)ceil(new_length * MAX_LOAD_FACTOR);
+
+	return (0);
+}
+
+/* -------------------------------------------------------------------
+ * Misc.
+ * ------------------------------------------------------------------- */
+
+int
+exmpp_skip_version(const char *buf)
+{
+	int index, version;
+
+	index = 0;
+	if (ei_decode_version(buf, &index, &version) != 0)
+		return (-1);
+
+	return (index);
+}
+
+ei_x_buff *
+exmpp_new_xbuf()
+{
+	ei_x_buff *xbuf;
+
+	xbuf = driver_alloc(sizeof(*xbuf));
+	if (xbuf == NULL)
+		return (NULL);
+
+	if (ei_x_new_with_version(xbuf) != 0) {
+		driver_free(xbuf);
+		return (NULL);
+	}
+
+	return (xbuf);
+}
+
+void
+exmpp_free_xbuf(ei_x_buff *xbuf)
+{
+
+	ei_x_free(xbuf);
+	driver_free(xbuf);
+}
+
+char *
+exmpp_strdup(const char *str)
+{
+	size_t len;
+	char *dup;
+
+	len = strlen(str);
+	dup = driver_alloc(len + 1);
+	if (dup == NULL)
+		return (NULL);
+
+	memcpy(dup, str, len + 1);
+
+	return (dup);
+}
diff -r d551623afde5 deps/exmpp/c_src/exmpp_driver.h
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/c_src/exmpp_driver.h	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,77 @@
+/*
+ * Copyright ProcessOne 2006-2010. All Rights Reserved.
+ *
+ * The contents of this file are subject to the Erlang Public License,
+ * Version 1.1, (the "License"); you may not use this file except in
+ * compliance with the License. You should have received a copy of the
+ * Erlang Public License along with this software. If not, it can be
+ * retrieved online at http://www.erlang.org/.
+ *
+ * Software distributed under the License is distributed on an "AS IS"
+ * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+ * the License for the specific language governing rights and limitations
+ * under the License.
+ *
+ */
+
+#ifndef EXMPP_DRIVER_H
+#define	EXMPP_DRIVER_H 1
+
+#if defined(HAVE_CONFIG_H)
+#include "config.h"
+#endif
+
+#include <ei.h>
+#include <erl_driver.h>
+
+/*
+ * This macro is used to stringify the driver name in the driver's
+ * ErlDrvEntry. One use it like this:
+ *     static ErlDrvEntry driver_entry = {
+ *             ...
+ *             S(DRIVER_NAME),
+ *             ...
+ *     };
+ */
+
+#define	_S(s)		#s
+#define	S(s)		_S(s)
+
+/*
+ * On Win32, strdup(3) exists under the name _strdup.
+ */
+
+#if defined(_WIN32)
+#define	strdup(s) _strdup(s)
+#endif
+
+/* Simple hashtable. */
+struct exmpp_hashtable;
+
+typedef void exmpp_ht_free_value_cb(void *value);
+
+struct exmpp_hashtable *	exmpp_ht_create(unsigned int min_length,
+				    exmpp_ht_free_value_cb free_value);
+int				exmpp_ht_store(struct exmpp_hashtable *ht,
+				    const char *key, int key_len,
+				    void *value);
+void *				exmpp_ht_fetch(struct exmpp_hashtable *ht,
+				    const char *key, int key_len);
+int				exmpp_ht_exists(struct exmpp_hashtable *ht,
+				    const char *key, int key_len);
+void				exmpp_ht_destroy(struct exmpp_hashtable *ht);
+void				exmpp_ht_dump_keys(struct exmpp_hashtable *ht);
+
+/*
+ * The follwing function help in reading and preparing the buffers which are
+ * exchanged with Erlang.
+ */
+
+int		exmpp_skip_version(const char *buf);
+ei_x_buff *	exmpp_new_xbuf(void);
+void		exmpp_free_xbuf(ei_x_buff *xbuf);
+
+/* This function uses driver_alloc() but behaves as strdup(3) otherwise. */
+char *		exmpp_strdup(const char *str);
+
+#endif /* !defined(EXMPP_DRIVER_H) */
diff -r d551623afde5 deps/exmpp/c_src/exmpp_stringprep.c
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/c_src/exmpp_stringprep.c	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,402 @@
+/*
+ * Copyright ProcessOne 2006-2010. All Rights Reserved.
+ *
+ * The contents of this file are subject to the Erlang Public License,
+ * Version 1.1, (the "License"); you may not use this file except in
+ * compliance with the License. You should have received a copy of the
+ * Erlang Public License along with this software. If not, it can be
+ * retrieved online at http://www.erlang.org/.
+ *
+ * Software distributed under the License is distributed on an "AS IS"
+ * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+ * the License for the specific language governing rights and limitations
+ * under the License.
+ *
+ */
+
+#include <stdio.h>
+#include <string.h>
+
+#include "exmpp_driver.h"
+#include "stringprep_uni_data.h"
+#include "stringprep_uni_norm.h"
+
+#define	DRIVER_NAME	exmpp_stringprep
+
+/* Hangul constants */
+#define SBase 0xAC00
+#define LBase 0x1100
+#define VBase 0x1161
+#define TBase 0x11A7
+#define LCount 19
+#define VCount 21
+#define TCount 28
+#define NCount (VCount * TCount)
+#define SCount (LCount * NCount)
+
+/* Control operations. */
+enum {
+	COMMAND_LOWERCASE = 0,
+	COMMAND_NAMEPREP,
+	COMMAND_NODEPREP,
+	COMMAND_RESOURCEPREP,
+	COMMAND_PORT_REVISION
+};
+
+static void	canonical_ordering(int *str, int len);
+static int	compose(int ch1, int ch2);
+
+#define ADD_UCHAR(ruc) do {						\
+	if (ruc <= 0x7F) {						\
+		if (pos >= size) {					\
+			size = 2 * size + 1;				\
+			rstring = driver_realloc(rstring, size);	\
+		}							\
+		rstring[pos] = (char)ruc;				\
+		pos++;							\
+	} else if (ruc <= 0x7FF) {					\
+		if (pos + 1 >= size) {					\
+			size = 2 * size + 2;				\
+			rstring = driver_realloc(rstring, size);	\
+		}							\
+		rstring[pos]     = (char)((ruc >> 6) | 0xC0);		\
+		rstring[pos + 1] = (char)((ruc | 0x80) & 0xBF);		\
+		pos += 2;						\
+	} else if (ruc <= 0xFFFF) {					\
+		if (pos + 2 >= size) {					\
+			size = 2 * size + 3;				\
+			rstring = driver_realloc(rstring, size);	\
+		}							\
+		rstring[pos]     = (char)((ruc >> 12) | 0xE0);		\
+		rstring[pos + 1] = (char)(((ruc >> 6) | 0x80) & 0xBF);	\
+		rstring[pos + 2] = (char)((ruc | 0x80) & 0xBF);		\
+		pos += 3;						\
+	} else if (ruc <= 0x1FFFFF) {					\
+		if (pos + 3 >= size) {					\
+			size = 2 * size + 4;				\
+			rstring = driver_realloc(rstring, size);	\
+		}							\
+		rstring[pos]     = (char)((ruc >> 18) | 0xF0);		\
+		rstring[pos + 1] = (char)(((ruc >> 12) | 0x80) & 0xBF);	\
+		rstring[pos + 2] = (char)(((ruc >> 6) | 0x80) & 0xBF);	\
+		rstring[pos + 3] = (char)((ruc | 0x80) & 0xBF);		\
+		pos += 4;						\
+	}								\
+} while (0)
+
+#define ADD_UCHAR32(str, pos, len, ch) do {				\
+	if (pos >= len) {						\
+		len = 2*len + 1;					\
+		str = driver_realloc(str, len * sizeof(int));		\
+	}								\
+	str[pos] = ch;							\
+	pos++;								\
+} while (0)
+
+#define ADD_DECOMP(ruc) do {						\
+	info = GetUniCharDecompInfo(ruc);				\
+	if (info >= 0) {						\
+		decomp_len = GetDecompLen(info);			\
+		decomp_shift = GetDecompShift(info);			\
+		for (j = 0; j < decomp_len; j++) {			\
+			ADD_UCHAR32(str32, str32pos, str32len,		\
+			decompList[decomp_shift + j]);			\
+		}							\
+	} else {							\
+		ADD_UCHAR32(str32, str32pos, str32len, ruc);		\
+	}								\
+} while (0)
+
+/* -------------------------------------------------------------------
+ * Erlang port driver callbacks.
+ * ------------------------------------------------------------------- */
+
+static int
+exmpp_stringprep_control(ErlDrvData drv_data, unsigned int command,
+    char *buf, int len, char **rbuf, int rlen)
+{
+	int i, j, pos;
+	unsigned char c;
+	int bad;
+	int uc, ruc;
+	int size;
+	int info;
+	int prohibit, tolower;
+	char *rstring;
+	int *mc;
+	int *str32;
+	int str32len, str32pos;
+	int decomp_len, decomp_shift;
+	int comp_pos, comp_starter_pos;
+	int cclass_prev, cclass2;
+	int ch1, ch2;
+	int first_ral, last_ral, have_ral, have_l;
+
+	pos = 1;
+	bad = 0;
+	uc = 0;
+	prohibit = 0;
+	tolower = 0;
+	str32pos = 0;
+
+	size = len + 1;
+
+	rstring = driver_alloc(size);
+	rstring[0] = 0;
+
+	str32len = len + 1;
+
+	str32 = driver_alloc(str32len * sizeof(int));
+
+	switch (command) {
+	case COMMAND_LOWERCASE:
+		prohibit = ACMask;
+		tolower = 1;
+		break;
+
+	case COMMAND_NAMEPREP:
+		prohibit = ACMask;
+		tolower = 1;
+		break;
+
+	case COMMAND_NODEPREP:
+		prohibit = ACMask | C11Mask | C21Mask | XNPMask;
+		tolower = 1;
+		break;
+
+	case COMMAND_RESOURCEPREP:
+		prohibit = ACMask | C21Mask;
+		tolower = 0;
+		break;
+
+	case COMMAND_PORT_REVISION:
+		rstring[0] = 1;
+		rstring[1] = 0;
+#if defined(_MSC_VER)
+		strcat_s(rstring, size, "$Revision: 899 $");
+#else
+		strcat(rstring, "$Revision: 899 $");
+#endif
+		*rbuf = rstring;
+		driver_free(str32);
+		return (strlen(rstring));
+	}
+
+	for (i = 0; i < len; ++i) {
+		c = buf[i];
+		if (c < 0x80) {
+			uc = c;
+		} else if (c < 0xC0) {
+			bad = 1;
+		} else if (c < 0xE0) {
+			if (i + 1 < len && (buf[i + 1] & 0xC0) == 0x80) {
+				uc = ((c & 0x1F) << 6) | (buf[i + 1] & 0x3F);
+				i++;
+			} else {
+				bad = 1;
+			}
+		} else if (c < 0xF0) {
+			if (i+2 < len && (buf[i + 1] & 0xC0) == 0x80 &&
+			    (buf[i + 2] & 0xC0) == 0x80) {
+				uc = ((c & 0x0F) << 12)
+				    | ((buf[i + 1] & 0x3F) << 6)
+				    | (buf[i + 2] & 0x3F);
+				i += 2;
+			} else {
+				bad = 1;
+			}
+		} else if (c < 0xF8) {
+			if (i + 3 < len &&
+			    (buf[i + 1] & 0xC0) == 0x80 &&
+			    (buf[i + 2] & 0xC0) == 0x80 &&
+			    (buf[i + 3] & 0xC0) == 0x80) {
+				uc = ((c & 0x07) << 18)
+				    | ((buf[i + 1] & 0x3F) << 12)
+				    | ((buf[i + 2] & 0x3F) << 6)
+				    | (buf[i + 3] & 0x3F);
+				i += 3;
+				if (uc > 0x10FFFF)
+					bad = 1;
+			} else {
+				bad = 1;
+			}
+		} else {
+			bad = 1;
+		}
+
+		if (bad) {
+			*rbuf = rstring;
+			driver_free(str32);
+			return (1);
+		}
+
+		info = GetUniCharInfo(uc);
+
+		if (!(info & B1Mask)) {
+			if (tolower) {
+				if (!(info & MCMask)) {
+					ruc = uc + GetDelta(info);
+					ADD_DECOMP(ruc);
+				} else {
+					mc = GetMC(info);
+					for (j = 1; j <= mc[0]; ++j) {
+						ruc = mc[j];
+						ADD_DECOMP(ruc);
+					}
+				}
+			} else {
+				ruc = uc;
+				ADD_DECOMP(ruc);
+			}
+		}
+	}
+
+	if (str32pos == 0) {
+		rstring[0] = 1;
+		*rbuf = rstring;
+		driver_free(str32);
+		return (1);
+	}
+
+	canonical_ordering(str32, str32pos);
+
+	comp_pos = 1;
+	comp_starter_pos = 0;
+	ch1 = str32[0];
+	cclass_prev = GetUniCharCClass(ch1);
+	for (i = 1; i < str32pos; ++i) {
+		ch2 = str32[i];
+		cclass2 = GetUniCharCClass(ch2);
+		if ((cclass_prev == 0 || cclass2 > cclass_prev) &&
+		    (ruc = compose(ch1, ch2))) {
+			ch1 = ruc;
+		} else {
+			if (cclass2 == 0) {
+				str32[comp_starter_pos] = ch1;
+				comp_starter_pos = comp_pos++;
+				ch1 = ch2;
+				cclass_prev = 0;
+			} else {
+				str32[comp_pos++] = ch2;
+				cclass_prev = cclass2;
+			}
+		}
+	}
+	str32[comp_starter_pos] = ch1;
+	str32pos = comp_pos;
+
+	last_ral = have_ral = have_l = 0;
+	info = GetUniCharInfo(str32[0]);
+	first_ral = info & D1Mask;
+	for (i = 0; i < str32pos; ++i) {
+		ruc = str32[i];
+		info = GetUniCharInfo(ruc);
+		if (info & prohibit) {
+			*rbuf = rstring;
+			driver_free(str32);
+			return (1);
+		}
+		last_ral = info & D1Mask;
+		have_ral = have_ral || last_ral;
+		have_l |= info & D2Mask;
+		ADD_UCHAR(ruc);
+	}
+
+	if (have_ral && (!first_ral || !last_ral || have_l)) {
+		*rbuf = rstring;
+		driver_free(str32);
+		return (1);
+	}
+
+	rstring[0] = 1;
+	*rbuf = rstring;
+	driver_free(str32);
+
+	return (pos);
+}
+
+/* -------------------------------------------------------------------
+ * Internal functions.
+ * ------------------------------------------------------------------- */
+
+/* "canonical_ordering" and "compose" functions are based on nfkc.c from
+ * Gnome library. */
+static void
+canonical_ordering(int *str, int len)
+{
+	int i, j, t;
+	int last, next;
+
+	last = GetUniCharCClass(str[0]);
+	for (i = 0; i < len - 1; ++i) {
+		next = GetUniCharCClass(str[i + 1]);
+		if (next != 0 && last > next) {
+			for (j = i; j >= 0; --j) {
+				if (GetUniCharCClass(str[j]) <= next)
+					break;
+				t = str[j + 1];
+				str[j + 1] = str[j];
+				str[j] = t;
+			}
+			next = last;
+		}
+		last = next;
+	}
+}
+
+static int
+compose(int ch1, int ch2)
+{
+	int info1, info2;
+
+	if (LBase <= ch1 && ch1 < LBase + LCount &&
+	    VBase <= ch2 && ch2 < VBase + VCount) {
+		return (SBase + ((ch1 - LBase) * VCount + (ch2 - VBase)) *
+		    TCount);
+	}
+
+	if (SBase <= ch1 && ch1 < SBase + SCount &&
+	    ((ch1 - SBase) % TCount) == 0 &&
+	    TBase <= ch2 && ch2 < TBase + TCount) {
+		return (ch1 + ch2 - TBase);
+	}
+
+	info1 = GetUniCharCompInfo(ch1);
+	if (info1 != -1 && info1 & CompSingleMask) {
+		if (!(info1 & CompSecondMask) &&
+		    ch2 == compFirstList[info1 & CompMask][0]) {
+			return (compFirstList[info1 & CompMask][1]);
+		} else
+			return (0);
+	}
+
+	info2 = GetUniCharCompInfo(ch2);
+	if (info2 != -1 && info2 & CompSingleMask) {
+		if ((info2 & CompSecondMask) &&
+		    ch1 == compSecondList[info2 & CompMask][0]) {
+			return (compSecondList[info2 & CompMask][1]);
+		} else
+			return (0);
+	}
+
+	if (info1 != -1 && info2 != -1 &&
+	    !(info1 & CompSecondMask) && (info2 & CompSecondMask))
+		return (compBothList[info1][info2 & CompMask]);
+	else
+		return (0);
+}
+
+/* -------------------------------------------------------------------
+ * Driver declaration.
+ * ------------------------------------------------------------------- */
+
+static ErlDrvEntry driver_entry;
+
+DRIVER_INIT(DRIVER_NAME)
+{
+
+	driver_entry.driver_name = S(DRIVER_NAME);
+	driver_entry.control = exmpp_stringprep_control;
+
+	return (&driver_entry);
+}
diff -r d551623afde5 deps/exmpp/c_src/exmpp_tls.c
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/c_src/exmpp_tls.c	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,52 @@
+/*
+ * Copyright ProcessOne 2006-2010. All Rights Reserved.
+ *
+ * The contents of this file are subject to the Erlang Public License,
+ * Version 1.1, (the "License"); you may not use this file except in
+ * compliance with the License. You should have received a copy of the
+ * Erlang Public License along with this software. If not, it can be
+ * retrieved online at http://www.erlang.org/.
+ *
+ * Software distributed under the License is distributed on an "AS IS"
+ * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+ * the License for the specific language governing rights and limitations
+ * under the License.
+ *
+ */
+
+#include <stdlib.h>
+#include <string.h>
+
+#include "exmpp_tls.h"
+
+#if defined(_WIN32)
+#define	strcasecmp(s1, s2) _stricmp(s1, s2)
+#endif
+
+int
+match_hostname(const char *cert_id, const char *expected_id)
+{
+	size_t cert_id_len;
+	char *id;
+
+	cert_id_len = strlen(cert_id);
+
+	if (cert_id_len > 2 && cert_id[0] == '*' && cert_id[1] == '.') {
+		/* The certificate contains a pattern like:
+		 *     *.example.org
+		 * Therefore, we look for the first dot in the expected_id.
+		 */
+		id = strchr(expected_id, '.');
+		if (id == NULL)
+			return (0);
+
+		if (strcasecmp(&cert_id[1], id) == 0)
+			return (1);
+	} else {
+		/* The certificate requires an exact match. */
+		if (strcasecmp(cert_id, expected_id) == 0)
+			return (1);
+	}
+
+	return (0);
+}
diff -r d551623afde5 deps/exmpp/c_src/exmpp_tls.h
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/c_src/exmpp_tls.h	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,59 @@
+/*
+ * Copyright ProcessOne 2006-2010. All Rights Reserved.
+ *
+ * The contents of this file are subject to the Erlang Public License,
+ * Version 1.1, (the "License"); you may not use this file except in
+ * compliance with the License. You should have received a copy of the
+ * Erlang Public License along with this software. If not, it can be
+ * retrieved online at http://www.erlang.org/.
+ *
+ * Software distributed under the License is distributed on an "AS IS"
+ * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+ * the License for the specific language governing rights and limitations
+ * under the License.
+ *
+ */
+
+#ifndef EXMPP_TLS_H
+#define	EXMPP_TLS_H 1
+
+#include "exmpp_driver.h"
+
+/* Control operations. */
+enum {
+	COMMAND_SET_MODE = 1,
+	COMMAND_SET_IDENTITY,
+	COMMAND_SET_PEER_VERIF,
+	COMMAND_SET_TRUSTED_CERTS,
+	COMMAND_SET_OPTIONS,
+	COMMAND_PREPARE_HANDSHAKE,
+	COMMAND_HANDSHAKE,
+	COMMAND_SET_ENCRYPTED_INPUT,
+	COMMAND_GET_DECRYPTED_INPUT,
+	COMMAND_SET_DECRYPTED_OUTPUT,
+	COMMAND_GET_ENCRYPTED_OUTPUT,
+	COMMAND_GET_PEER_CERTIFICATE,
+	COMMAND_GET_VERIFY_RESULT,
+	COMMAND_SHUTDOWN,
+	COMMAND_QUIET_SHUTDOWN,
+	COMMAND_PORT_REVISION
+};
+
+/* Mode. */
+enum {
+	TLS_MODE_UNKNOWN = 0,
+	TLS_MODE_SERVER,
+	TLS_MODE_CLIENT
+};
+
+/* Return codes. */
+enum {
+	RET_OK = 0,
+	RET_ERROR,
+	RET_WANT_READ,
+	RET_WANT_WRITE
+};
+
+int	match_hostname(const char *cert_id, const char *expected_id);
+
+#endif /* !defined(EXMPP_TLS_H) */
diff -r d551623afde5 deps/exmpp/c_src/exmpp_tls_openssl.c
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/c_src/exmpp_tls_openssl.c	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,845 @@
+/*
+ * Copyright ProcessOne 2006-2010. All Rights Reserved.
+ *
+ * The contents of this file are subject to the Erlang Public License,
+ * Version 1.1, (the "License"); you may not use this file except in
+ * compliance with the License. You should have received a copy of the
+ * Erlang Public License along with this software. If not, it can be
+ * retrieved online at http://www.erlang.org/.
+ *
+ * Software distributed under the License is distributed on an "AS IS"
+ * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+ * the License for the specific language governing rights and limitations
+ * under the License.
+ *
+ */
+
+#include <string.h>
+#include <openssl/ssl.h>
+#include <openssl/err.h>
+#include <openssl/x509v3.h>
+
+#include "exmpp_tls.h"
+
+#define	DRIVER_NAME	exmpp_tls_openssl
+
+#define	BUF_SIZE	1024
+
+/* Driver data. */
+struct exmpp_tls_openssl_data {
+	int		 mode;
+
+	/* Identity. */
+	char		*certificate;
+	char		*private_key;
+
+	/* Peer verification. */
+	int		 verify_peer;
+	char		*expected_id;
+
+	/* Options. */
+	char		*trusted_certs;
+	int		 peer_cert_required;
+	int		 accept_expired_cert;
+	int		 accept_revoked_cert;
+	int		 accept_non_trusted_cert;
+	int		 accept_corrupted_cert;
+
+	SSL_CTX		*ctx;
+	SSL		*ssl;
+	BIO		*bio_read;
+	BIO		*bio_write;
+};
+
+static int	init_library(struct exmpp_tls_openssl_data *edd,
+		    ei_x_buff **to_send, size_t *size, ErlDrvBinary **b);
+static int	verify_callback(int preverify_ok, X509_STORE_CTX *x509_ctx);
+
+static int	ssl_ex_index;
+
+#define	COPY_AND_FREE_BUF(to_send, size, b, ret)			\
+	(size) = (to_send)->index + 1;					\
+	(b) = driver_alloc_binary((size));				\
+	(b)->orig_bytes[0] = (ret);					\
+	memcpy((b)->orig_bytes + 1, (to_send)->buff,			\
+	    (to_send)->index);						\
+	exmpp_free_xbuf((to_send));
+
+/* -------------------------------------------------------------------
+ * Erlang port driver callbacks.
+ * ------------------------------------------------------------------- */
+
+static ErlDrvData
+exmpp_tls_openssl_start(ErlDrvPort port, char *command)
+{
+	struct exmpp_tls_openssl_data *edd;
+
+	/* Set binary mode. */
+	set_port_control_flags(port, PORT_CONTROL_FLAG_BINARY);
+
+	/* Allocate driver data structure. */
+	edd = driver_alloc(sizeof(*edd));
+	if (edd == NULL)
+		return (NULL);
+
+	edd->mode = TLS_MODE_UNKNOWN;
+	edd->certificate = edd->private_key = NULL;
+	edd->verify_peer = 0;
+	edd->expected_id = NULL;
+	edd->trusted_certs = NULL;
+	edd->peer_cert_required = 0;
+	edd->accept_expired_cert = 0;
+	edd->accept_revoked_cert = 0;
+	edd->accept_non_trusted_cert = 0;
+	edd->accept_corrupted_cert = 0;
+
+	edd->ctx = NULL;
+	edd->ssl = NULL;
+
+	return (ErlDrvData)edd;
+}
+
+static void
+exmpp_tls_openssl_stop(ErlDrvData drv_data)
+{
+	struct exmpp_tls_openssl_data *edd;
+
+	edd = (struct exmpp_tls_openssl_data *)drv_data;
+
+	if (edd->certificate != NULL)
+		driver_free(edd->certificate);
+	if (edd->private_key != NULL)
+		driver_free(edd->private_key);
+	if (edd->expected_id != NULL)
+		driver_free(edd->expected_id);
+
+	driver_free(edd);
+}
+
+static int
+exmpp_tls_openssl_control(ErlDrvData drv_data, unsigned int command,
+    char *buf, int len, char **rbuf, int rlen)
+{
+	struct exmpp_tls_openssl_data *edd;
+	int ret, index, arity, type, type_size, flag;
+	char atom[MAXATOMLEN];
+	size_t size;
+	long mode, verify_result;
+	unsigned long data_len;
+	unsigned char *out;
+	ErlDrvBinary *b;
+	ei_x_buff *to_send;
+	X509 *cert;
+
+	edd = (struct exmpp_tls_openssl_data *)drv_data;
+
+	size = 0;
+	b = NULL;
+
+	/*
+	 * We never check return codes against SSL_ERROR_WANT_WRITE because
+	 * writes to BIO_mem() always succeed and OpenSSL can't tell if
+	 * the data was effectively written to the socket.
+	 */
+
+	switch (command) {
+	case COMMAND_SET_MODE:
+		index = exmpp_skip_version(buf);
+
+		/* Get the mode (client vs. server). */
+		ei_decode_long(buf, &index, &mode);
+		edd->mode = mode;
+
+		break;
+	case COMMAND_SET_IDENTITY:
+		index = exmpp_skip_version(buf);
+
+		/* Get auth method. */
+		ei_decode_tuple_header(buf, &index, &arity);
+		ei_decode_atom(buf, &index, atom);
+		if (strcmp(atom, "x509") != 0) {
+			/* Only X.509 is supported by this port driver. */
+			to_send = exmpp_new_xbuf();
+			if (to_send == NULL)
+				return (-1);
+			ei_x_encode_tuple_header(to_send, 2);
+			ei_x_encode_atom(to_send, "unsupported_auth_method");
+			ei_x_encode_string(to_send, atom);
+
+			COPY_AND_FREE_BUF(to_send, size, b, RET_ERROR);
+
+			break;
+		}
+
+		/* Get certificate filename. */
+		ei_get_type(buf, &index, &type, &type_size);
+		edd->certificate = driver_alloc(type_size + 1);
+		if (edd->certificate == NULL)
+			return (-1);
+		ei_decode_string(buf, &index, edd->certificate);
+
+		/* Get private key filename. */
+		ei_get_type(buf, &index, &type, &type_size);
+		edd->private_key = driver_alloc(type_size + 1);
+		if (edd->private_key == NULL)
+			return (-1);
+		ei_decode_string(buf, &index, edd->private_key);
+
+		break;
+	case COMMAND_SET_PEER_VERIF:
+		index = exmpp_skip_version(buf);
+
+		/* Check if the identity of the remote peer must be
+		 * verified. */
+		ei_get_type(buf, &index, &type, &type_size);
+		switch (type) {
+		case ERL_ATOM_EXT:
+			/* The peer will be checked by OpenSSL. */
+			ei_decode_boolean(buf, &index, &(edd->verify_peer));
+			break;
+		case ERL_STRING_EXT:
+			/* The peer will be checked by OpenSSL, then
+			 * the certificate will be compared to the
+			 * given expected identity. */
+			edd->expected_id = driver_alloc(type_size + 1);
+			if (edd->expected_id == NULL)
+				return (-1);
+			ei_decode_string(buf, &index, edd->expected_id);
+			edd->verify_peer = 1;
+			break;
+		}
+
+		break;
+	case COMMAND_SET_TRUSTED_CERTS:
+		index = exmpp_skip_version(buf);
+
+		/* Get auth method. */
+		ei_decode_tuple_header(buf, &index, &arity);
+		ei_decode_atom(buf, &index, atom);
+		if (strcmp(atom, "x509") != 0) {
+			/* Only X.509 is supported by this port driver. */
+			to_send = exmpp_new_xbuf();
+			if (to_send == NULL)
+				return (-1);
+			ei_x_encode_tuple_header(to_send, 2);
+			ei_x_encode_atom(to_send, "unsupported_auth_method");
+			ei_x_encode_string(to_send, atom);
+
+			COPY_AND_FREE_BUF(to_send, size, b, RET_ERROR);
+
+			break;
+		}
+
+		/* Get the filename for the trusted certificates. */
+		ei_get_type(buf, &index, &type, &type_size);
+		edd->trusted_certs = driver_alloc(type_size + 1);
+		if (edd->trusted_certs == NULL)
+			return (-1);
+		ei_decode_string(buf, &index, edd->trusted_certs);
+
+		break;
+	case COMMAND_SET_OPTIONS:
+		index = exmpp_skip_version(buf);
+
+		/* Get auth method. */
+		ei_decode_tuple_header(buf, &index, &arity);
+		ei_decode_atom(buf, &index, atom);
+		ei_decode_boolean(buf, &index, &flag);
+
+		if (strcmp(atom, "peer_cert_required") == 0)
+			edd->peer_cert_required = flag;
+		else if (strcmp(atom, "accept_expired_cert") == 0)
+			edd->accept_expired_cert = flag;
+		else if (strcmp(atom, "accept_non_trusted_cert") == 0)
+			edd->accept_non_trusted_cert = flag;
+		else if (strcmp(atom, "accept_revoked_cert") == 0)
+			edd->accept_revoked_cert = flag;
+		else if (strcmp(atom, "accept_corrupted_cert") == 0)
+			edd->accept_corrupted_cert = flag;
+		else {
+			to_send = exmpp_new_xbuf();
+			if (to_send == NULL)
+				return (-1);
+			ei_x_encode_tuple_header(to_send, 2);
+			ei_x_encode_atom(to_send, "unsupported_option");
+			ei_x_encode_atom(to_send, atom);
+
+			COPY_AND_FREE_BUF(to_send, size, b, RET_ERROR);
+
+			break;
+		}
+
+		break;
+	case COMMAND_PREPARE_HANDSHAKE:
+		ret = init_library(edd, &to_send, &size, &b);
+		if (ret != 0) {
+			/* Initialization failed. */
+			break;
+		}
+
+		break;
+	case COMMAND_HANDSHAKE:
+		/* Try handshake. */
+		ret = SSL_do_handshake(edd->ssl);
+		if (ret <= 0) {
+			switch (SSL_get_error(edd->ssl, ret)) {
+			case SSL_ERROR_WANT_READ:
+				/* OpenSSL is waiting for more data. */
+				size = 1;
+				b = driver_alloc_binary(size);
+				b->orig_bytes[0] = RET_WANT_READ;
+
+				break;
+			default:
+				/* An error occured. */
+				ret = ERR_get_error();
+
+				to_send = exmpp_new_xbuf();
+				if (to_send == NULL)
+					return (-1);
+				ei_x_encode_tuple_header(to_send, 2);
+				ei_x_encode_long(to_send, ret);
+				ei_x_encode_string(to_send,
+				    ERR_error_string(ret, NULL));
+
+				COPY_AND_FREE_BUF(to_send, size, b, RET_ERROR);
+			}
+		}
+
+		break;
+	case COMMAND_SET_ENCRYPTED_INPUT:
+		BIO_write(edd->bio_read, buf, len);
+
+		break;
+	case COMMAND_GET_DECRYPTED_INPUT:
+		index = exmpp_skip_version(buf);
+
+		/* Get data length the caller is waiting for. */
+		ei_decode_ulong(buf, &index, &data_len);
+		if (data_len == 0)
+			data_len = BUF_SIZE;
+
+		/* Allocate binary to copy decrypted data. */
+		rlen = data_len + 1;
+		size = 1;
+		b = driver_alloc_binary(rlen);
+		b->orig_bytes[0] = RET_OK;
+
+		/* Copy data. */
+		ret = SSL_read(edd->ssl, b->orig_bytes + size, data_len);
+
+		/* Check for errors. */
+		if (ret > 0) {
+			size += ret;
+			b = driver_realloc_binary(b, size);
+		} else {
+			driver_free_binary(b);
+			b = NULL;
+
+			switch (SSL_get_error(edd->ssl, ret)) {
+			case SSL_ERROR_WANT_READ:
+				/* OpenSSL is waiting for more data. */
+				size = 1;
+				b = driver_alloc_binary(size);
+				b->orig_bytes[0] = RET_WANT_READ;
+
+				break;
+			default:
+				/* An error occured. */
+				to_send = exmpp_new_xbuf();
+				if (to_send == NULL)
+					return (-1);
+				ei_x_encode_atom(to_send, "decrypt_failed");
+
+				COPY_AND_FREE_BUF(to_send, size, b, RET_ERROR);
+			}
+		}
+
+		break;
+	case COMMAND_SET_DECRYPTED_OUTPUT:
+		ret = SSL_write(edd->ssl, buf, len);
+		if (ret <= 0) {
+			switch (SSL_get_error(edd->ssl, ret)) {
+			case SSL_ERROR_WANT_READ:
+				/* OpenSSL is waiting for more data. */
+				size = 1;
+				b = driver_alloc_binary(size);
+				b->orig_bytes[0] = RET_WANT_READ;
+
+				break;
+			default:
+				/* An error occured. */
+				to_send = exmpp_new_xbuf();
+				if (to_send == NULL)
+					return (-1);
+				ei_x_encode_atom(to_send, "encrypt_failed");
+
+				COPY_AND_FREE_BUF(to_send, size, b, RET_ERROR);
+			}
+		}
+
+		break;
+	case COMMAND_GET_ENCRYPTED_OUTPUT:
+		/* Allocate binary to copy encrypted data. */
+		size = BUF_SIZE + 1;
+		rlen = 1;
+		b = driver_alloc_binary(size);
+		b->orig_bytes[0] = RET_OK;
+
+		/* Copy data. */
+		while ((ret = BIO_read(edd->bio_write,
+		    b->orig_bytes + rlen, BUF_SIZE)) > 0) {
+			rlen += ret;
+			size += BUF_SIZE;
+			b = driver_realloc_binary(b, size);
+		}
+
+		size = rlen;
+		b = driver_realloc_binary(b, size);
+
+		break;
+	case COMMAND_GET_PEER_CERTIFICATE:
+		/* Get the peer certificate. */
+		cert = SSL_get_peer_certificate(edd->ssl);
+		if (cert == NULL) {
+			to_send = exmpp_new_xbuf();
+			if (to_send == NULL)
+				return (-1);
+			ei_x_encode_atom(to_send, "no_certificate");
+
+			COPY_AND_FREE_BUF(to_send, size, b, RET_ERROR);
+		}
+
+		/* Calculate the size of the certificate. */
+		rlen = i2d_X509(cert, NULL);
+		if (rlen < 0) {
+			X509_free(cert);
+			break;
+		}
+
+		/* Copy it to a binary. */
+		size = rlen + 1;
+		b = driver_alloc_binary(size);
+		b->orig_bytes[0] = RET_OK;
+		out = (unsigned char *)&(b->orig_bytes[1]);
+		i2d_X509(cert, &out);
+		X509_free(cert);
+
+		break;
+	case COMMAND_GET_VERIFY_RESULT:
+		verify_result = SSL_get_verify_result(edd->ssl);
+
+		to_send = exmpp_new_xbuf();
+		if (to_send == NULL)
+			return (-1);
+		ei_x_encode_long(to_send, verify_result);
+
+		COPY_AND_FREE_BUF(to_send, size, b, RET_OK);
+
+		break;
+	case COMMAND_SHUTDOWN:
+		type = SSL_get_shutdown(edd->ssl);
+		ret = SSL_shutdown(edd->ssl);
+		if (ret == 1) {
+			/* The shutdown is complete but if the peer
+			 * initiated it, the output buffer contains
+			 * our "close notify". */
+			if (!(type & SSL_SENT_SHUTDOWN)) {
+				/* Our "close notify" must be sent now. */
+				size = 1;
+				b = driver_alloc_binary(size);
+				b->orig_bytes[0] = RET_WANT_WRITE;
+			}
+
+			break;
+		} else if (ret == 0) {
+			/* We are waiting for the peer "close notify" */
+			if (!(type & SSL_SENT_SHUTDOWN)) {
+				/* Our "close notify" must be sent now. */
+				size = 1;
+				b = driver_alloc_binary(size);
+				b->orig_bytes[0] = RET_WANT_WRITE;
+			} else {
+				/* Ouf "close notify" was already sent. */
+				size = 1;
+				b = driver_alloc_binary(size);
+				b->orig_bytes[0] = RET_WANT_READ;
+			}
+
+			break;
+		} else if (ret < 0) {
+			switch (SSL_get_error(edd->ssl, ret)) {
+			case SSL_ERROR_WANT_READ:
+				/* OpenSSL is waiting for more data. */
+				size = 1;
+				b = driver_alloc_binary(size);
+				b->orig_bytes[0] = RET_WANT_READ;
+
+				break;
+			default:
+				/* An error occured. */
+				ret = ERR_get_error();
+
+				to_send = exmpp_new_xbuf();
+				if (to_send == NULL)
+					return (-1);
+				ei_x_encode_tuple_header(to_send, 2);
+				ei_x_encode_long(to_send, ret);
+				ei_x_encode_string(to_send,
+				    ERR_error_string(ret, NULL));
+
+				COPY_AND_FREE_BUF(to_send, size, b, RET_ERROR);
+			}
+		}
+
+		break;
+	case COMMAND_QUIET_SHUTDOWN:
+		SSL_set_shutdown(edd->ssl,
+		    SSL_SENT_SHUTDOWN | SSL_RECEIVED_SHUTDOWN);
+
+		break;
+	case COMMAND_PORT_REVISION:
+		/* Store the revision in the buffer. */
+		to_send = exmpp_new_xbuf();
+		if (to_send == NULL)
+			return (-1);
+		ei_x_encode_string(to_send, "$Revision: 899 $");
+
+		COPY_AND_FREE_BUF(to_send, size, b, RET_ERROR);
+
+		break;
+	default:
+		/* Commad not recognized. */
+		to_send = exmpp_new_xbuf();
+		if (to_send == NULL)
+			return (-1);
+		ei_x_encode_tuple_header(to_send, 2);
+		ei_x_encode_atom(to_send, "unknown_command");
+		ei_x_encode_ulong(to_send, command);
+
+		COPY_AND_FREE_BUF(to_send, size, b, RET_ERROR);
+	}
+
+	if (b == NULL) {
+		size = 1;
+		b = driver_alloc_binary(size);
+		b->orig_bytes[0] = RET_OK;
+	}
+
+	*rbuf = (char *)b;
+
+	return (size);
+}
+
+/* -------------------------------------------------------------------
+ * Internal functions.
+ * ------------------------------------------------------------------- */
+
+static int
+init_library(struct exmpp_tls_openssl_data *edd,
+    ei_x_buff **to_send, size_t *size, ErlDrvBinary **b)
+{
+	int ret, verify;
+
+	/* Create an SSL context. */
+	edd->ctx = SSL_CTX_new(SSLv23_method());
+	if (edd->ctx == NULL) {
+		*to_send = exmpp_new_xbuf();
+		if (*to_send == NULL)
+			return (-1);
+		ei_x_encode_atom(*to_send,
+		    "ssl_context_init_failed");
+
+		COPY_AND_FREE_BUF(*to_send, *size, *b, RET_ERROR);
+
+		goto err;
+	}
+
+	/* Set our certificate. */
+	if (edd->certificate != NULL) {
+		ret = SSL_CTX_use_certificate_chain_file(edd->ctx,
+		    edd->certificate);
+		if (ret != 1) {
+			*to_send = exmpp_new_xbuf();
+			if (*to_send == NULL)
+				goto err;
+			ei_x_encode_atom(*to_send,
+			    "load_cert_failed");
+
+			COPY_AND_FREE_BUF(*to_send, *size, *b, RET_ERROR);
+
+			goto err;
+		}
+	}
+
+	/* Set the private key. */
+	if (edd->private_key != NULL) {
+		ret = SSL_CTX_use_PrivateKey_file(edd->ctx,
+		    edd->private_key, SSL_FILETYPE_PEM);
+		if (ret != 1) {
+			*to_send = exmpp_new_xbuf();
+			if (*to_send == NULL)
+				goto err;
+			ei_x_encode_atom(*to_send,
+			    "load_pk_failed");
+
+			COPY_AND_FREE_BUF(*to_send, *size, *b, RET_ERROR);
+
+			goto err;
+		}
+	}
+
+	/* Prepare OpenSSL for verification. */
+	verify = edd->verify_peer ?
+	    SSL_VERIFY_PEER | SSL_VERIFY_CLIENT_ONCE : SSL_VERIFY_NONE;
+	verify |= edd->peer_cert_required ?
+	    SSL_VERIFY_FAIL_IF_NO_PEER_CERT : 0;
+	SSL_CTX_set_verify(edd->ctx, verify, verify_callback);
+
+	/* Set trusted certificates. */
+	if (edd->trusted_certs != NULL) {
+		ret = SSL_CTX_load_verify_locations(edd->ctx,
+		    edd->trusted_certs, NULL);
+		if (ret != 1) {
+			*to_send = exmpp_new_xbuf();
+			if (*to_send == NULL)
+				goto err;
+			ei_x_encode_atom(*to_send,
+			    "load_trusted_certs_failed");
+
+			COPY_AND_FREE_BUF(*to_send, *size, *b, RET_ERROR);
+
+			goto err;
+		}
+	}
+
+	/* Create an SSL connection handle. */
+	edd->ssl = SSL_new(edd->ctx);
+	if (edd->ssl == NULL) {
+		*to_send = exmpp_new_xbuf();
+		if (*to_send == NULL)
+			goto err;
+		ei_x_encode_atom(*to_send,
+		    "ssl_init_failed");
+
+		COPY_AND_FREE_BUF(*to_send, *size, *b, RET_ERROR);
+
+		goto err;
+	}
+
+	/* Associate buffers. */
+	edd->bio_read = BIO_new(BIO_s_mem());
+	edd->bio_write = BIO_new(BIO_s_mem());
+	SSL_set_bio(edd->ssl, edd->bio_read, edd->bio_write);
+
+	/* Set SSL state. */
+	switch (edd->mode) {
+	case TLS_MODE_SERVER:
+		SSL_set_accept_state(edd->ssl);
+		break;
+	case TLS_MODE_CLIENT:
+		SSL_set_connect_state(edd->ssl);
+		break;
+	}
+
+	/* Add our own data to SSL. This will be used by verify_callback. */
+	SSL_set_ex_data(edd->ssl, ssl_ex_index, edd);
+
+	return (0);
+
+err:
+	if (edd->ssl != NULL)
+		SSL_free(edd->ssl);
+	if (edd->ctx != NULL)
+		SSL_CTX_free(edd->ctx);
+
+	return (-1);
+}
+
+static int
+verify_callback(int preverify_ok, X509_STORE_CTX *x509_ctx)
+{
+	SSL *ssl;
+	struct exmpp_tls_openssl_data *edd;
+	int err, depth, gens_count, i;
+	X509 *cert;
+	STACK_OF(GENERAL_NAME) *gens;
+	const GENERAL_NAME *gen;
+	char *dnsname;
+
+	/* Get the port driver's private data. We need it to access
+	 * verification options. */
+	ssl = X509_STORE_CTX_get_ex_data(x509_ctx,
+	    SSL_get_ex_data_X509_STORE_CTX_idx());
+	edd = SSL_get_ex_data(ssl, ssl_ex_index);
+
+	if (!preverify_ok) {
+		/* The verification done by OpenSSL failed. We check if the
+		 * error is acceptable for the user. */
+
+		/* Get the verification error code. */
+		err = X509_STORE_CTX_get_error(x509_ctx);
+
+		/* Is this kind of error is accepted? */
+		switch (err) {
+		case X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT:
+		case X509_V_ERR_UNABLE_TO_GET_CRL:
+		case X509_V_ERR_CERT_SIGNATURE_FAILURE:
+		case X509_V_ERR_CRL_SIGNATURE_FAILURE:
+		case X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT:
+		case X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN:
+		case X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY:
+		case X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE:
+		case X509_V_ERR_CERT_CHAIN_TOO_LONG:
+		case X509_V_ERR_INVALID_CA:
+		case X509_V_ERR_PATH_LENGTH_EXCEEDED:
+		case X509_V_ERR_INVALID_PURPOSE:
+		case X509_V_ERR_CERT_UNTRUSTED:
+		case X509_V_ERR_CERT_REJECTED:
+		case X509_V_ERR_SUBJECT_ISSUER_MISMATCH:
+		case X509_V_ERR_AKID_SKID_MISMATCH:
+		case X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH:
+		case X509_V_ERR_KEYUSAGE_NO_CERTSIGN:
+			/* The peer certificate isn't trusted. */
+			if (!edd->accept_non_trusted_cert)
+				return (0);
+			break;
+		case X509_V_ERR_CERT_NOT_YET_VALID:
+		case X509_V_ERR_CERT_HAS_EXPIRED:
+		case X509_V_ERR_CRL_NOT_YET_VALID:
+		case X509_V_ERR_CRL_HAS_EXPIRED:
+			/* The peer certificate or a CA certificate has
+			 * expired. */
+			if (!edd->accept_expired_cert)
+				return (0);
+			break;
+		case X509_V_ERR_CERT_REVOKED:
+			/* The peer certificate or a CA certificate was
+			 * revoked. */
+			if (!edd->accept_revoked_cert)
+				return (0);
+			break;
+		case X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE:
+		case X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE:
+		case X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY:
+		case X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD:
+		case X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD:
+		case X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD:
+		case X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD:
+			/* The verification couldn't be made because of
+			 * bad data. */
+			if (!edd->accept_corrupted_cert)
+				return (0);
+			break;
+		default:
+			/* Other types of error are not accepted. */
+			return (0);
+		}
+	}
+
+	/* Basic verification was successful. We now proceed with a more
+	 * XMPP-oriented verification, only on the peer certificate and
+	 * only if the caller specified an expected ID. */
+
+	/* XXX We need an option to accept non-matching certificates. */
+
+	/* Peer certificate is at depth 0. */
+	depth = X509_STORE_CTX_get_error_depth(x509_ctx);
+	if (depth > 0 || edd->expected_id == NULL)
+		return (1);
+
+	/* Get the peer certificate. */
+	cert = X509_STORE_CTX_get_current_cert(x509_ctx);
+
+	/* Get 'subjectAltName' extensions. */
+	gens = X509_get_ext_d2i(cert, NID_subject_alt_name, 0, 0);
+	if (gens) {
+		gens_count = sk_GENERAL_NAME_num(gens);
+		dnsname = NULL;
+
+		/* XXX We must first check for the 'xmpp' extension. */
+
+		/* We walk the extensions list to find the 'dNSName'
+		 * extension. */
+		for (i = 0; i < gens_count; ++i) {
+			gen = sk_GENERAL_NAME_value(gens, i);
+			if (gen->type != GEN_DNS)
+				/* This one is not a 'dNSName' extension. */
+				continue;
+
+			/* We expect the OpenSSL library to construct
+			 * GEN_DNS extesion objects as ASN1_IA5STRING
+			 * values. Check we got the right union member. */
+			if (ASN1_STRING_type(gen->d.ia5) != V_ASN1_IA5STRING)
+				continue;
+
+			dnsname = (char *)ASN1_STRING_data(gen->d.ia5);
+
+			/* ASN1_IA5STRING may contain NUL character; check
+			 * it. */
+			if (ASN1_STRING_length(gen->d.ia5) != strlen(dnsname))
+				continue;
+
+			/* Safe to treat as an ASCII string possibly
+			 * holding a DNS name */
+			if (match_hostname(dnsname, edd->expected_id)) {
+				sk_GENERAL_NAME_pop_free(gens,
+				    GENERAL_NAME_free);
+				return (1);
+			}
+		}
+
+		if (dnsname != NULL) {
+			/* A 'dNSName' extension was found but didn't
+			 * match. The certificate is not acceptable. */
+			/* XXX We must set the relevant X.509 error. */
+			sk_GENERAL_NAME_pop_free(gens, GENERAL_NAME_free);
+			return (0);
+		}
+
+		sk_GENERAL_NAME_pop_free(gens, GENERAL_NAME_free);
+	}
+
+	/* XXX We now fallback on the commonName extension. */
+
+	return (0);
+}
+
+/* -------------------------------------------------------------------
+ * Driver declaration.
+ * ------------------------------------------------------------------- */
+
+static ErlDrvEntry tls_openssl_driver_entry = {
+	NULL,				/* init */
+	exmpp_tls_openssl_start,	/* start */
+	exmpp_tls_openssl_stop,		/* stop */
+	NULL,				/* output */
+	NULL,				/* ready_input */
+	NULL,				/* ready_output */
+	S(DRIVER_NAME),			/* driver name */
+	NULL,				/* finish */
+	NULL,				/* handle */
+	exmpp_tls_openssl_control,	/* control */
+	NULL,				/* timeout */
+	NULL				/* outputv */
+};
+
+DRIVER_INIT(DRIVER_NAME)
+{
+
+	/* Initialize OpenSSL. */
+	SSL_library_init();
+	SSL_load_error_strings();
+
+	/* This index is used to store application-specific data inside
+	 * SSL structs. This index is the same for each SSL instance,
+	 * that's why we keep it global.
+	 *
+	 * See:
+	 * http://www.mail-archive.com/openssl-users@openssl.org/msg52326.html
+	 */
+	ssl_ex_index = SSL_get_ex_new_index(0, "exmpp_tls_openssl_data",
+	    NULL, NULL, NULL);
+
+	return &tls_openssl_driver_entry;
+}
diff -r d551623afde5 deps/exmpp/c_src/exmpp_xml.c
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/c_src/exmpp_xml.c	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,1199 @@
+/*
+ * Copyright ProcessOne 2006-2010. All Rights Reserved.
+ *
+ * The contents of this file are subject to the Erlang Public License,
+ * Version 1.1, (the "License"); you may not use this file except in
+ * compliance with the License. You should have received a copy of the
+ * Erlang Public License along with this software. If not, it can be
+ * retrieved online at http://www.erlang.org/.
+ *
+ * Software distributed under the License is distributed on an "AS IS"
+ * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+ * the License for the specific language governing rights and limitations
+ * under the License.
+ *
+ */
+
+#include <string.h>
+
+#include "exmpp_xml.h"
+
+/* Global known lists. */
+static struct exmpp_hashtable	*known_nss_index = NULL;
+static struct exmpp_hashtable	*known_elems_index = NULL;
+static struct exmpp_hashtable	*known_attrs_index = NULL;
+
+#define	KNOWN_NSS_AVG_MIN_LENGTH	 200
+#define	KNOWN_ELEMS_AVG_MIN_LENGTH	1100
+#define	KNOWN_ATTRS_AVG_MIN_LENGTH	 500
+
+#define	XML_NAMESPACE			"http://www.w3.org/XML/1998/namespace"
+#define	XML_NAMESPACE_LEN		36
+
+static int		add_known_nss(const char *buf, int index);
+static int		add_known_elems(const char *buf, int index);
+static int		add_known_attrs(const char *buf, int index);
+static int		select_known_nss(struct exmpp_xml_ctx *ctx,
+			    const char *buf, int index);
+static int		select_known_elems(struct exmpp_xml_ctx *ctx,
+			    const char *buf, int index);
+static int		select_known_attrs(struct exmpp_xml_ctx *ctx,
+			    const char *buf, int index);
+static int		is_known_ns(struct exmpp_xml_ctx *ctx,
+			    const char *ns, int ns_len);
+static int		is_known_elem(struct exmpp_xml_ctx *ctx,
+			    const char *elem, int elem_len);
+static int		is_known_attr(struct exmpp_xml_ctx *ctx,
+			    const char *attr, int attr_len);
+
+static int		encode_ns(struct exmpp_xml_ctx *ctx,
+			    ei_x_buff *tree, const char *ns, int ns_len);
+static int		encode_elem(struct exmpp_xml_ctx *ctx,
+			    ei_x_buff *tree, const char *elem, int elem_len);
+static int		encode_attr(struct exmpp_xml_ctx *ctx,
+			    ei_x_buff *tree, const char *attr, int attr_len);
+
+static int		current_tree_finished(struct exmpp_xml_ctx *ctx);
+static void		reset_current_tree(struct exmpp_xml_ctx *ctx);
+
+static int DUMMY = 1;
+
+/* -------------------------------------------------------------------
+ * Known lists.
+ * ------------------------------------------------------------------- */
+
+int
+init_known_lists()
+{
+
+	/* Create the 3 global known lists index and the
+	 * associated locks. */
+	known_nss_index = exmpp_ht_create(4,
+	    (void (*)(void *))exmpp_ht_destroy);
+	if (known_nss_index == NULL)
+		goto err;
+
+	known_elems_index = exmpp_ht_create(4,
+	    (void (*)(void *))exmpp_ht_destroy);
+	if (known_elems_index == NULL)
+		goto err;
+
+	known_attrs_index = exmpp_ht_create(4,
+	    (void (*)(void *))exmpp_ht_destroy);
+	if (known_attrs_index == NULL)
+		goto err;
+
+	return (0);
+
+err:
+	if (known_nss_index != NULL) {
+		exmpp_ht_destroy(known_nss_index);
+		known_nss_index = NULL;
+	}
+
+	if (known_elems_index != NULL) {
+		exmpp_ht_destroy(known_elems_index);
+		known_elems_index = NULL;
+	}
+
+	if (known_attrs_index != NULL) {
+		exmpp_ht_destroy(known_attrs_index);
+		known_attrs_index = NULL;
+	}
+
+	return (-1);
+}
+
+void
+free_known_lists()
+{
+
+	if (known_nss_index != NULL) {
+		exmpp_ht_destroy(known_nss_index);
+		known_nss_index = NULL;
+	}
+
+	if (known_elems_index != NULL) {
+		exmpp_ht_destroy(known_elems_index);
+		known_elems_index = NULL;
+	}
+
+	if (known_attrs_index != NULL) {
+		exmpp_ht_destroy(known_attrs_index);
+		known_attrs_index = NULL;
+	}
+}
+
+/* -------------------------------------------------------------------
+ * Common commands.
+ * ------------------------------------------------------------------- */
+
+int
+control(struct exmpp_xml_ctx *ctx, unsigned int command,
+    const char *buf, ei_x_buff *to_return)
+{
+	int index;
+
+	if (ctx == NULL || buf == NULL || to_return == NULL)
+		return (-1);
+
+	switch (command) {
+	/*
+	 * Global known lists update.
+	 */
+	case COMMAND_ADD_KNOWN_NSS:
+		index = exmpp_skip_version(buf);
+
+		if (add_known_nss(buf, index) != 0) {
+			ei_x_encode_atom(to_return, "add_known_nss_failed");
+
+			return (RET_ERROR);
+		}
+
+		break;
+	case COMMAND_ADD_KNOWN_ELEMS:
+		index = exmpp_skip_version(buf);
+
+		if (add_known_elems(buf, index) != 0) {
+			ei_x_encode_atom(to_return, "add_known_elems_failed");
+
+			return (RET_ERROR);
+		}
+
+		break;
+	case COMMAND_ADD_KNOWN_ATTRS:
+		index = exmpp_skip_version(buf);
+
+		if (add_known_attrs(buf, index) != 0) {
+			ei_x_encode_atom(to_return, "add_known_attrs_failed");
+
+			return (RET_ERROR);
+		}
+
+		break;
+
+	/*
+	 * Options handling.
+	 */
+
+	case COMMAND_SET_NAMES_AS_ATOM:
+		index = exmpp_skip_version(buf);
+
+		ei_decode_boolean(buf, &index, &(ctx->names_as_atom));
+
+		break;
+	case COMMAND_SET_CHECK_NSS:
+		index = exmpp_skip_version(buf);
+
+		if (select_known_nss(ctx, buf, index) != 0) {
+			ei_x_encode_atom(to_return, "check_nss_failed");
+
+			return (RET_ERROR);
+		}
+
+		break;
+	case COMMAND_SET_CHECK_ELEMS:
+		index = exmpp_skip_version(buf);
+
+		if (select_known_elems(ctx, buf, index) != 0) {
+			ei_x_encode_atom(to_return, "check_elems_failed");
+
+			return (RET_ERROR);
+		}
+
+		break;
+	case COMMAND_SET_CHECK_ATTRS:
+		index = exmpp_skip_version(buf);
+
+		if (select_known_attrs(ctx, buf, index) != 0) {
+			ei_x_encode_atom(to_return, "check_attrs_failed");
+
+			return (RET_ERROR);
+		}
+
+		break;
+	case COMMAND_SET_ROOT_DEPTH:
+		index = exmpp_skip_version(buf);
+
+		ei_decode_long(buf, &index, &(ctx->root_depth));
+
+		break;
+	case COMMAND_SET_EMIT_ENDTAG:
+		index = exmpp_skip_version(buf);
+
+		ei_decode_boolean(buf, &index, &(ctx->emit_endtag));
+
+		break;
+	case COMMAND_SET_MAX_SIZE:
+		index = exmpp_skip_version(buf);
+
+		ei_decode_long(buf, &index, &(ctx->max_size));
+
+		break;
+
+	default:
+		/* Command not recognized. */
+		ei_x_encode_tuple_header(to_return, 2);
+                ei_x_encode_atom(to_return, "unknown_command");
+                ei_x_encode_ulong(to_return, command);
+
+		return (RET_ERROR);
+	}
+
+	return (RET_OK);
+}
+
+/* -------------------------------------------------------------------
+ * Context initialization.
+ * ------------------------------------------------------------------- */
+
+int
+init_context(struct exmpp_xml_ctx *ctx)
+{
+
+	/* Set default options. */
+	ctx->max_size = -1;
+	ctx->root_depth = 0;
+	ctx->emit_endtag = 0;
+	ctx->names_as_atom = 1;
+	ctx->check_nss = ctx->check_elems = ctx->check_attrs = 0;
+	ctx->known_nss = ctx->known_elems = ctx->known_attrs = NULL;
+
+	/* Clear callbacks. */
+	ctx->make_declared_nss = NULL;
+	ctx->make_attributes = NULL;
+	ctx->make_attributes_legacy = NULL;
+
+	/* Reset parsing state. */
+	ctx->cur_size = 0;
+	ctx->depth = 0;
+
+	/* Allocate the current tree */
+	ctx->current_tree = driver_alloc(sizeof(*(ctx->current_tree)));
+	if (ctx->current_tree == NULL)
+		return (-1);
+	ei_x_new(ctx->current_tree);
+
+	/* Allocate the complete trees list. */
+	ctx->complete_trees = driver_alloc(sizeof(*(ctx->complete_trees)));
+	if (ctx->complete_trees == NULL) {
+		ei_x_free(ctx->current_tree);
+		driver_free(ctx->current_tree);
+		return (-1);
+	}
+	ei_x_new_with_version(ctx->complete_trees);
+	ctx->complete_trees_ready = 0;
+
+	return (0);
+}
+
+void
+reset_context(struct exmpp_xml_ctx *ctx)
+{
+
+	ctx->cur_size = 0;
+	ctx->depth = 0;
+
+	reset_current_tree(ctx);
+	reset_complete_trees(ctx);
+}
+
+void
+free_context(struct exmpp_xml_ctx *ctx)
+{
+
+	if (ctx->complete_trees != NULL) {
+		ei_x_free(ctx->complete_trees);
+		driver_free(ctx->complete_trees);
+	}
+
+	if (ctx->current_tree != NULL) {
+		ei_x_free(ctx->current_tree);
+		driver_free(ctx->current_tree);
+	}
+}
+
+/* -------------------------------------------------------------------
+ * Data size protection.
+ * ------------------------------------------------------------------- */
+
+void
+add_data_size(struct exmpp_xml_ctx *ctx, long size)
+{
+
+	ctx->cur_size += size;
+}
+
+int
+is_data_size_under_limit(struct exmpp_xml_ctx *ctx, long size)
+{
+
+	if (ctx->max_size > -1 &&
+	    ctx->cur_size + size > ctx->max_size)
+		return (0);
+
+	return (1);
+}
+
+/* -------------------------------------------------------------------
+ * Erlang terms construction.
+ * ------------------------------------------------------------------- */
+
+int
+enter_element(struct exmpp_xml_ctx *ctx,
+    const char *ns, int ns_len,
+    const char *elem, int elem_len,
+    void *declared_nss, void *attributes)
+{
+	int ret;
+	ei_x_buff *tree;
+
+	/*
+	 * This function build the #xmlel record:
+	 *   {xmlel, NS, Declared_NS, Name, Attributes, Children}
+	 *
+	 * Construction of "Delcared_NS" and "Attributes" are made by
+	 * helper functions but they're walked through by callbacks inside
+	 * driver's code.
+	 *
+	 * Note that "Children" may not be built here but by following
+	 * calls to this same function.
+	 */
+
+	tree = ctx->current_tree;
+
+	/*
+	 * If we're not at the required depth, we treat each node
+	 * independently.
+	 *
+	 * For instance in XMPP, if ctx->root_depth is 1, a stand-alone
+	 * term will be made right away with a <stream> opening tag. But
+	 * for a <message> element, we will build a complete tree including
+	 * children.
+	 */
+	if (ctx->root_depth == -1 ||
+	    ctx->depth <= ctx->root_depth) {
+		/* We're above root depth (or the feature is disabled),
+		 * so we start a new Erlang term each time. */
+		
+		/* The current_tree buffer was reset by
+		 * current_tree_finished(). */
+	} else {
+		/* We're under root depth, thus we continue with the
+		 * current tree. */
+		ei_x_encode_list_header(tree, 1);
+	}
+
+	/* Start an #xmlel record. */
+	ei_x_encode_tuple_header(tree, 6);
+	ei_x_encode_atom(tree, "xmlel");
+
+	/* Check if the namespace is known and encode it. */
+	encode_ns(ctx, tree, ns, ns_len);
+
+	if (ctx->make_declared_nss != NULL) {
+		/* Call a caller-provided function to walk the declared
+		 * namespaces list. */
+		ret = ctx->make_declared_nss(ctx, declared_nss);
+		if (ret != 0)
+			return (ret);
+	} else if (declared_nss != NULL) {
+		/* The caller doesn't provided a callback but an already
+		 * formatted list. We just have to append it to the tree. */
+		ei_x_append(tree, (ei_x_buff *)declared_nss);
+	}
+	/* Terminate the declared namespaces Erlang list. */
+	ei_x_encode_empty_list(tree);
+
+	/* Check if the element is known and encode it. */
+	encode_elem(ctx, tree, elem, elem_len);
+
+	/* Call a caller-provided function to walk the attributes list. */
+	if (ctx->make_attributes != NULL) {
+		ret = ctx->make_attributes(ctx, attributes);
+		if (ret != 0)
+			return (ret);
+	}
+	/* Terminate the attributes Erlang list. */
+	ei_x_encode_empty_list(tree);
+
+	/* Handle the tree if it's ready to ship. */
+	if (ctx->root_depth == -1 ||
+	    ctx->depth < ctx->root_depth) {
+		/* Stand-alone elements are moved to the final list. */
+		ei_x_encode_atom(tree, "undefined");
+		current_tree_finished(ctx);
+	}
+
+	/* Update depth. */
+	ctx->depth++;
+
+	return (0);
+}
+
+int
+make_declared_ns_in_buf(struct exmpp_xml_ctx *ctx, ei_x_buff *buf,
+    const char *ns, int ns_len,
+    const char *prefix, int prefix_len)
+{
+
+	/* Start declared namespace entry. */
+	ei_x_encode_list_header(buf, 1);
+	ei_x_encode_tuple_header(buf, 2);
+
+	/* Check if the namespace is known and encode it. */
+	encode_ns(ctx, buf, ns, ns_len);
+
+	/* Encode prefix. */
+	if (prefix != NULL)
+		if (prefix_len == -1)
+			ei_x_encode_string(buf, prefix);
+		else
+			ei_x_encode_string_len(buf, prefix, prefix_len);
+	else
+		ei_x_encode_atom(buf, "none");
+
+	return (0);
+}
+
+int
+make_declared_ns(struct exmpp_xml_ctx *ctx,
+    const char *ns, int ns_len,
+    const char *prefix, int prefix_len)
+{
+	int ret;
+
+	ret = make_declared_ns_in_buf(ctx, ctx->current_tree,
+	    ns, ns_len, prefix, prefix_len);
+
+	return (ret);
+}
+
+int
+make_attribute(struct exmpp_xml_ctx *ctx,
+    const char *ns, int ns_len,
+    const char *attr, int attr_len,
+    const char *value, int value_len)
+{
+	ei_x_buff *tree;
+
+	tree = ctx->current_tree;
+
+	/* Start #xmlattr record. */
+	ei_x_encode_list_header(tree, 1);
+	ei_x_encode_tuple_header(tree, 4);
+	ei_x_encode_atom(tree, "xmlattr");
+
+	/* Check if the namespace is known and encode it. */
+	encode_ns(ctx, tree, ns, ns_len);
+
+	/* Check if the attribute is known and encode it. */
+	encode_attr(ctx, tree, attr, attr_len);
+
+	/* Encode the value. */
+	if (value_len == -1)
+		ei_x_encode_binary(tree, value, strlen(value));
+	else
+		ei_x_encode_binary(tree, value, value_len);
+
+	return (0);
+}
+
+int
+add_character_data(struct exmpp_xml_ctx *ctx,
+    const char *text, int text_len)
+{
+	ei_x_buff *tree;
+
+	tree = ctx->current_tree;
+	if (tree == NULL)
+		return (-1);
+
+	if (ctx->root_depth == -1 || ctx->depth <= ctx->root_depth) {
+		/* We're above root depth (or the feature is disabled),
+		 * so we start a new Erlang term each time. */
+		
+		/* The current_tree buffer was reset by
+		 * current_tree_finished(). */
+	} else {
+		/* We continue the children list. */
+		ei_x_encode_list_header(tree, 1);
+	}
+
+	/* Start an #xmlcdata record. */
+	ei_x_encode_tuple_header(tree, 2);
+	ei_x_encode_atom(tree, "xmlcdata");
+
+	/* Encode the data. */
+	ei_x_encode_binary(tree, text, text_len);
+
+	if (ctx->root_depth == -1 || ctx->depth <= ctx->root_depth)
+		current_tree_finished(ctx);
+
+	return (0);
+}
+
+int
+exit_element(struct exmpp_xml_ctx *ctx,
+    const char *ns, int ns_len,
+    const char *elem, int elem_len)
+{
+	ei_x_buff *tree;
+
+	/* Update depth. */
+	if (ctx->depth > 0)
+		ctx->depth--;
+
+	tree = ctx->current_tree;
+
+	if (ctx->emit_endtag && (ctx->root_depth == -1 ||
+	    ctx->depth < ctx->root_depth)) {
+		/* We're above root depth (or the feature is disabled),
+		 * so we start a new Erlang term each time. */
+
+		/* The current_tree buffer was reset by
+		 * current_tree_finished(). */
+
+		/* Start an #xmlendtag record. */
+		ei_x_encode_tuple_header(tree, 3);
+		ei_x_encode_atom(tree, "xmlendtag");
+
+		/* Check if the namespace is known and encode it. */
+		encode_ns(ctx, tree, ns, ns_len);
+
+		/* Check if the element is known and encode it. */
+		encode_elem(ctx, tree, elem, elem_len);
+
+		current_tree_finished(ctx);
+	} else if (ctx->root_depth != -1 && ctx->depth >= ctx->root_depth) {
+		/* Terminate the children list. */
+		ei_x_encode_empty_list(tree);
+
+		if (ctx->depth == ctx->root_depth)
+			current_tree_finished(ctx);
+	}
+
+	return (0);
+}
+
+void
+reset_complete_trees(struct exmpp_xml_ctx *ctx)
+{
+
+	ctx->complete_trees_ready = 0;
+	ctx->complete_trees->index = 0;
+	ei_x_encode_version(ctx->complete_trees);
+}
+
+/* -------------------------------------------------------------------
+ * Legacy Erlang terms construction.
+ * ------------------------------------------------------------------- */
+
+int
+enter_element_legacy(struct exmpp_xml_ctx *ctx,
+    const char *elem, int elem_len,
+    void *attributes)
+{
+	int ret;
+	ei_x_buff *tree;
+
+	/*
+	 * This function build the legacy #xmlelement record:
+	 *   {xmlelement, Name, Attributes, Children}
+	 *
+	 * Construction of "Attributes" is made by a helper function
+	 * but it's walked through by a callback inside driver's code.
+	 *
+	 * Note that "Children" may not be built here but by following
+	 * calls to this same function.
+	 */
+
+	tree = ctx->current_tree;
+
+	/*
+	 * If we're not at the required depth, we treat each node
+	 * independently.
+	 *
+	 * For instance in XMPP, if ctx->root_depth is 1, a stand-alone
+	 * term will be made right away with a <stream> opening tag. But
+	 * for a <message> element, we will build a complete tree including
+	 * children.
+	 */
+	if (ctx->root_depth == -1 ||
+	    ctx->depth <= ctx->root_depth) {
+		/* We're above root depth (or the feature is disabled),
+		 * so we start a new Erlang term each time. */
+		
+		/* The current_tree buffer was reset by
+		 * current_tree_finished(). */
+	} else {
+		/* We're under root depth, thus we continue with the
+		 * current tree. */
+		ei_x_encode_list_header(tree, 1);
+	}
+
+	/* Start an #xmlel record. */
+	ei_x_encode_tuple_header(tree, 4);
+	ei_x_encode_atom(tree, "xmlelement");
+
+	/* Check if the element is known and encode it. */
+	encode_elem(ctx, tree, elem, elem_len);
+
+	/* Call a caller-provided function to walk the attributes list. */
+	if (ctx->make_attributes_legacy != NULL) {
+		ret = ctx->make_attributes_legacy(ctx, attributes);
+		if (ret != 0)
+			return (ret);
+	}
+	/* Terminate the attributes Erlang list. */
+	ei_x_encode_empty_list(tree);
+
+	/* Handle the tree if it's ready to ship. */
+	if (ctx->root_depth == -1 ||
+	    ctx->depth < ctx->root_depth) {
+		/* Stand-alone elements are moved to the final list. */
+		ei_x_encode_atom(tree, "undefined");
+		current_tree_finished(ctx);
+	}
+
+	/* Update depth. */
+	ctx->depth++;
+
+	return (0);
+}
+
+int
+make_attribute_legacy(struct exmpp_xml_ctx *ctx,
+    const char *attr, int attr_len,
+    const char *value, int value_len)
+{
+	ei_x_buff *tree;
+
+	tree = ctx->current_tree;
+
+	/* Start a simple tuple. */
+	ei_x_encode_list_header(tree, 1);
+	ei_x_encode_tuple_header(tree, 2);
+
+	/* Check if the attribute is known and encode it. */
+	encode_attr(ctx, tree, attr, attr_len);
+
+	/* Encode the value. */
+	if (value_len == -1)
+		ei_x_encode_string(tree, value);
+	else
+		ei_x_encode_string_len(tree, value, value_len);
+
+	return (0);
+}
+
+int
+exit_element_legacy(struct exmpp_xml_ctx *ctx)
+{
+	ei_x_buff *tree;
+
+	/* Update depth. */
+	if (ctx->depth > 0)
+		ctx->depth--;
+
+	tree = ctx->current_tree;
+
+	if (ctx->root_depth != -1 && ctx->depth >= ctx->root_depth) {
+		/* Terminate the children list. */
+		ei_x_encode_empty_list(tree);
+
+		if (ctx->depth == ctx->root_depth)
+			current_tree_finished(ctx);
+	}
+
+	return (0);
+}
+
+/* -------------------------------------------------------------------
+ * Internal functions.
+ * ------------------------------------------------------------------- */
+
+static int
+get_known_list_name(const char *buf, int *index,
+    char *list_name, int *list_name_len)
+{
+	int arity, type;
+
+	/* The term has the form {List_Name, List}. */
+	if (ei_decode_tuple_header(buf, index, &arity) != 0)
+		return (-1);
+	if (arity != 2)
+		return (-1);
+
+	/* Decode the list name. */
+	if (ei_get_type(buf, index, &type, list_name_len) != 0)
+		return (-1);
+	if (ei_decode_atom(buf, index, list_name) != 0)
+		return (-1);
+
+	return (0);
+}
+
+static struct exmpp_hashtable *
+lookup_known_nss(const char *list_name, int list_name_len)
+{
+	struct exmpp_hashtable *kl;
+
+	if (known_nss_index == NULL)
+		return (NULL);
+
+	/* Lookup the known list. */
+	kl = exmpp_ht_fetch(known_nss_index, list_name, list_name_len);
+	if (kl == NULL) {
+		/* This list doesn't exist yet, create it. */
+		kl = exmpp_ht_create(KNOWN_NSS_AVG_MIN_LENGTH, NULL);
+		if (kl == NULL)
+			return (NULL);
+
+		/* Always add the XML namespace to the known ones. */
+		if (exmpp_ht_store(kl,
+		    XML_NAMESPACE, XML_NAMESPACE_LEN, &DUMMY) != 0) {
+			exmpp_ht_destroy(kl);
+			return (NULL);
+		}
+
+		/* Add it to the lists index. */
+		exmpp_ht_store(known_nss_index,
+		    list_name, list_name_len, kl);
+	}
+
+	return (kl);
+}
+
+static struct exmpp_hashtable *
+lookup_known_elems(const char *list_name, int list_name_len)
+{
+	struct exmpp_hashtable *kl;
+
+	if (known_elems_index == NULL)
+		return (NULL);
+
+	/* Lookup the known list. */
+	kl = exmpp_ht_fetch(known_elems_index, list_name, list_name_len);
+	if (kl == NULL) {
+		/* This list doesn't exist yet, create it. */
+		kl = exmpp_ht_create(KNOWN_ELEMS_AVG_MIN_LENGTH, NULL);
+		if (kl == NULL)
+			return (NULL);
+
+		/* Add it to the lists index. */
+		exmpp_ht_store(known_elems_index,
+		    list_name, list_name_len, kl);
+	}
+
+	return (kl);
+}
+
+static struct exmpp_hashtable *
+lookup_known_attrs(const char *list_name, int list_name_len)
+{
+	struct exmpp_hashtable *kl;
+
+	if (known_attrs_index == NULL)
+		return (NULL);
+
+	/* Lookup the known list. */
+	kl = exmpp_ht_fetch(known_attrs_index, list_name, list_name_len);
+	if (kl == NULL) {
+		/* This list doesn't exist yet, create it. */
+		kl = exmpp_ht_create(KNOWN_ATTRS_AVG_MIN_LENGTH, NULL);
+		if (kl == NULL)
+			return (NULL);
+
+		/* Add it to the lists index. */
+		exmpp_ht_store(known_attrs_index,
+		    list_name, list_name_len, kl);
+	}
+
+	return (kl);
+}
+
+static int
+update_list(struct exmpp_hashtable *kl, const char *buf, int *index)
+{
+	int nb_items, i, type, item_len;
+	char item[MAXATOMLEN];
+
+	/* We check that we have a real list. */
+	if (ei_decode_list_header(buf, index, &nb_items) != 0)
+		return (-1);
+
+	if (nb_items < 0)
+		return (0);
+
+	for (i = 0; i < nb_items; ++i) {
+		/* Decode the item. */
+		if (ei_get_type(buf, index, &type, &item_len) != 0)
+			return (-1);
+		if (ei_decode_atom(buf, index, item) != 0)
+			return (-1);
+
+		/* Add it to the list. */
+		if (!exmpp_ht_exists(kl, item, item_len))
+			exmpp_ht_store(kl, item, item_len, &DUMMY);
+	}
+
+	return (0);
+}
+
+static int
+add_known_nss(const char *buf, int index)
+{
+	int list_name_len;
+	char list_name[MAXATOMLEN];
+	struct exmpp_hashtable *kl;
+
+	/* Get the list name from the given Erlang term. */
+	if (get_known_list_name(buf, &index, list_name, &list_name_len) != 0)
+		return (RET_ERROR);
+
+	/* We can lookup the list (it will be created if it doesn't
+	 * already exist. */
+	kl = lookup_known_nss(list_name, list_name_len);
+	if (kl == NULL)
+		return (RET_ERROR);
+
+	/* Update the list. */
+	if (update_list(kl, buf, &index) != 0)
+		return (RET_ERROR);
+
+	return (RET_OK);
+}
+
+static int
+add_known_elems(const char *buf, int index)
+{
+	int list_name_len;
+	char list_name[MAXATOMLEN];
+	struct exmpp_hashtable *kl;
+
+	/* Get the list name from the given Erlang term. */
+	if (get_known_list_name(buf, &index, list_name, &list_name_len) != 0)
+		return (RET_ERROR);
+
+	/* We can lookup the list (it will be created if it doesn't
+	 * already exist. */
+	kl = lookup_known_elems(list_name, list_name_len);
+	if (kl == NULL)
+		return (RET_ERROR);
+
+	/* Update the list. */
+	if (update_list(kl, buf, &index) != 0)
+		return (RET_ERROR);
+
+	return (RET_OK);
+}
+
+static int
+add_known_attrs(const char *buf, int index)
+{
+	int list_name_len;
+	char list_name[MAXATOMLEN];
+	struct exmpp_hashtable *kl;
+
+	/* Get the list name from the given Erlang term. */
+	if (get_known_list_name(buf, &index, list_name, &list_name_len) != 0)
+		return (RET_ERROR);
+
+	/* We can lookup the list (it will be created if it doesn't
+	 * already exist. */
+	kl = lookup_known_attrs(list_name, list_name_len);
+	if (kl == NULL)
+		return (RET_ERROR);
+
+	/* Update the list. */
+	if (update_list(kl, buf, &index) != 0)
+		return (RET_ERROR);
+
+	return (RET_OK);
+}
+
+static int
+select_known_nss(struct exmpp_xml_ctx *ctx, const char *buf, int index)
+{
+	int type, list_name_len;
+	char list_name[MAXATOMLEN];
+	struct exmpp_hashtable *kl;
+
+	if (ei_get_type(buf, &index, &type, &list_name_len) != 0)
+		return (-1);
+	if (ei_decode_atom(buf, &index, list_name) != 0)
+		return (-1);
+
+	if (strcmp(list_name, "false") == 0) {
+		ctx->check_nss = 0;
+		return (0);
+	}
+	
+	if (strcmp(list_name, "true") == 0) {
+		if (ctx->known_nss == NULL)
+			return (-1);
+
+		ctx->check_nss = 1;
+		return (0);
+	}
+
+	kl = exmpp_ht_fetch(known_nss_index, list_name, list_name_len);
+	if (kl == NULL)
+		return (-1);
+
+	ctx->known_nss = kl;
+	ctx->check_nss = 1;
+
+	return (0);
+}
+
+static int
+select_known_elems(struct exmpp_xml_ctx *ctx, const char *buf, int index)
+{
+	int type, list_name_len;
+	char list_name[MAXATOMLEN];
+	struct exmpp_hashtable *kl;
+
+	if (ei_get_type(buf, &index, &type, &list_name_len) != 0)
+		return (-1);
+	if (ei_decode_atom(buf, &index, list_name) != 0)
+		return (-1);
+
+	if (strcmp(list_name, "false") == 0) {
+		ctx->check_elems = 0;
+		return (0);
+	}
+	
+	if (strcmp(list_name, "true") == 0) {
+		if (ctx->known_elems == NULL)
+			return (-1);
+
+		ctx->check_elems = 1;
+		return (0);
+	}
+
+	kl = exmpp_ht_fetch(known_elems_index, list_name, list_name_len);
+	if (kl == NULL)
+		return (-1);
+
+	ctx->known_elems = kl;
+	ctx->check_elems = 1;
+
+	return (0);
+}
+
+static int
+select_known_attrs(struct exmpp_xml_ctx *ctx, const char *buf, int index)
+{
+	int type, list_name_len;
+	char list_name[MAXATOMLEN];
+	struct exmpp_hashtable *kl;
+
+	if (ei_get_type(buf, &index, &type, &list_name_len) != 0)
+		return (-1);
+	if (ei_decode_atom(buf, &index, list_name) != 0)
+		return (-1);
+
+	if (strcmp(list_name, "false") == 0) {
+		ctx->check_attrs = 0;
+		return (0);
+	}
+	
+	if (strcmp(list_name, "true") == 0) {
+		if (ctx->known_attrs == NULL)
+			return (-1);
+
+		ctx->check_attrs = 1;
+		return (0);
+	}
+
+	kl = exmpp_ht_fetch(known_attrs_index, list_name, list_name_len);
+	if (kl == NULL)
+		return (-1);
+
+	ctx->known_attrs = kl;
+	ctx->check_attrs = 1;
+
+	return (0);
+}
+
+static int
+is_known_ns(struct exmpp_xml_ctx *ctx, const char *ns, int ns_len)
+{
+	int is_known;
+
+	if (ctx == NULL)
+		return (0);
+	if (!ctx->check_nss)
+		return (1);
+	if (ctx->known_nss == NULL)
+		return (0);
+
+	is_known = exmpp_ht_exists(ctx->known_nss, ns, ns_len);
+
+	return (is_known);
+}
+
+static int
+is_known_elem(struct exmpp_xml_ctx *ctx, const char *elem, int elem_len)
+{
+	int is_known;
+
+	if (ctx == NULL)
+		return (0);
+	if (!ctx->check_elems)
+		return (1);
+	if (ctx->known_elems == NULL)
+		return (0);
+
+	is_known = exmpp_ht_exists(ctx->known_elems, elem, elem_len);
+
+	return (is_known);
+}
+
+static int
+is_known_attr(struct exmpp_xml_ctx *ctx, const char *attr, int attr_len)
+{
+	int is_known;
+
+	if (ctx == NULL)
+		return (0);
+	if (!ctx->check_attrs)
+		return (1);
+	if (ctx->known_attrs == NULL)
+		return (0);
+
+	is_known = exmpp_ht_exists(ctx->known_attrs, attr, attr_len);
+
+	return (is_known);
+}
+
+static int
+encode_ns(struct exmpp_xml_ctx *ctx, ei_x_buff *tree,
+    const char *ns, int ns_len)
+{
+	int ret;
+
+	if (ns != NULL) {
+		/* Check if the namespace is known and encode it. */
+		if (ns_len <= MAXATOMLEN && ctx->names_as_atom) {
+			if (is_known_ns(ctx, ns, ns_len))
+				if (ns_len == -1)
+					ret = ei_x_encode_atom(tree, ns);
+				else
+					ret = ei_x_encode_atom_len(tree,
+					    ns, ns_len);
+			else
+				if (ns_len == -1)
+					ret = ei_x_encode_string(tree, ns);
+				else
+					ret = ei_x_encode_string_len(tree,
+					    ns, ns_len);
+		} else {
+			if (ns_len == -1)
+				ret = ei_x_encode_string(tree, ns);
+			else
+				ret = ei_x_encode_string_len(tree,
+				    ns, ns_len);
+		}
+	} else {
+		/* The namespace is "empty". The element may have none. */
+		ret = ei_x_encode_atom(tree, "undefined");
+	}
+
+	return (ret);
+}
+
+static int
+encode_elem(struct exmpp_xml_ctx *ctx, ei_x_buff *tree,
+    const char *elem, int elem_len)
+{
+	int ret;
+
+	/* Check if the element is known and encode it. */
+	if (elem_len <= MAXATOMLEN && ctx->names_as_atom) {
+		if (is_known_elem(ctx, elem, elem_len))
+			if (elem_len == -1)
+				ret = ei_x_encode_atom(tree, elem);
+			else
+				ret = ei_x_encode_atom_len(tree,
+				    elem, elem_len);
+		else
+			if (elem_len == -1)
+				ret = ei_x_encode_string(tree, elem);
+			else
+				ret = ei_x_encode_string_len(tree,
+				    elem, elem_len);
+	} else {
+		if (elem_len == -1)
+			ret = ei_x_encode_string(tree, elem);
+		else
+			ret = ei_x_encode_string_len(tree, elem, elem_len);
+	}
+
+	return (ret);
+}
+
+static int
+encode_attr(struct exmpp_xml_ctx *ctx, ei_x_buff *tree,
+    const char *attr, int attr_len)
+{
+	int ret;
+
+	/* Check if the attribute is known and encode it. */
+	if (attr_len <= MAXATOMLEN && ctx->names_as_atom) {
+		if (is_known_attr(ctx, attr, attr_len))
+			if (attr_len == -1)
+				ret = ei_x_encode_atom(tree, attr);
+			else
+				ret = ei_x_encode_atom_len(tree,
+				    attr, attr_len);
+		else
+			if (attr_len == -1)
+				ret = ei_x_encode_string(tree, attr);
+			else
+				ret = ei_x_encode_string_len(tree,
+				    attr, attr_len);
+	} else {
+		if (attr_len == -1)
+			ret = ei_x_encode_string(tree, attr);
+		else
+			ret = ei_x_encode_string_len(tree, attr, attr_len);
+	}
+
+	return (ret);
+}
+
+static int
+current_tree_finished(struct exmpp_xml_ctx *ctx)
+{
+	ei_x_buff *trees;
+
+	trees = ctx->complete_trees;
+	if (trees == NULL) {
+		/* Allocate the complete trees list. */
+		trees = driver_alloc(sizeof(*trees));
+		if (trees == NULL)
+			return (-1);
+		ei_x_new_with_version(trees);
+		ctx->complete_trees = trees;
+	}
+
+	/* Append the current tree to the complete trees list. */
+	ei_x_encode_list_header(trees, 1);
+	ei_x_append(trees, ctx->current_tree);
+	ctx->complete_trees_ready = 1;
+
+	/* Reset the current tree. */
+	reset_current_tree(ctx);
+
+	return (0);
+}
+
+static void
+reset_current_tree(struct exmpp_xml_ctx *ctx)
+{
+
+	ctx->current_tree->index = 0;
+}
diff -r d551623afde5 deps/exmpp/c_src/exmpp_xml.h
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/c_src/exmpp_xml.h	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,135 @@
+/*
+ * Copyright ProcessOne 2006-2010. All Rights Reserved.
+ *
+ * The contents of this file are subject to the Erlang Public License,
+ * Version 1.1, (the "License"); you may not use this file except in
+ * compliance with the License. You should have received a copy of the
+ * Erlang Public License along with this software. If not, it can be
+ * retrieved online at http://www.erlang.org/.
+ *
+ * Software distributed under the License is distributed on an "AS IS"
+ * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+ * the License for the specific language governing rights and limitations
+ * under the License.
+ *
+ */
+
+#ifndef EXMPP_XML_H
+#define	EXMPP_XML_H 1
+
+#include "exmpp_driver.h"
+
+/* XML namespace is implicitly declared. This constant is used in known_ns
+ * and prefixes hashtables. */
+#define	XML_NS	"http://www.w3.org/XML/1998/namespace"
+
+/* Return codes. */
+enum {
+	RET_OK = 0,
+	RET_ERROR
+};
+
+/* Control operations. */
+enum {
+	COMMAND_ADD_KNOWN_NSS = 1,
+	COMMAND_ADD_KNOWN_ELEMS,
+	COMMAND_ADD_KNOWN_ATTRS,
+	COMMAND_SET_MAX_SIZE,
+	COMMAND_SET_ROOT_DEPTH,
+	COMMAND_SET_NAMES_AS_ATOM,
+	COMMAND_SET_CHECK_NSS,
+	COMMAND_SET_CHECK_ELEMS,
+	COMMAND_SET_CHECK_ATTRS,
+	COMMAND_SET_EMIT_ENDTAG,
+	COMMAND_PARSE,
+	COMMAND_PARSE_FINAL,
+	COMMAND_RESET_PARSER,
+	COMMAND_PORT_REVISION
+};
+
+struct exmpp_xml_ctx;
+
+/* Callback used during Erlang terms construction. */
+typedef	int make_declared_nss_cb(struct exmpp_xml_ctx *ctx,
+	    void *declared_nss);
+typedef	int make_attributes_cb(struct exmpp_xml_ctx *ctx,
+	    void *attributes);
+typedef	int make_attributes_legacy_cb(struct exmpp_xml_ctx *ctx,
+	    void *attributes);
+
+/* Context given to all functions. */
+struct exmpp_xml_ctx {
+	/* Parsing options. */
+	int			 names_as_atom;
+	int			 check_nss;
+	int			 check_elems;
+	int			 check_attrs;
+	int			 emit_endtag;
+	long			 max_size;
+	long			 root_depth;
+
+	/* Callback used during Erlang terms construction. */
+	make_declared_nss_cb	*make_declared_nss;
+	make_attributes_cb	*make_attributes;
+	make_attributes_legacy_cb *make_attributes_legacy;
+
+	/* Parsing state. */
+	struct exmpp_hashtable	*known_nss;
+	struct exmpp_hashtable	*known_elems;
+	struct exmpp_hashtable	*known_attrs;
+	long			 cur_size;
+	long			 depth;
+	ei_x_buff		*current_tree;
+	ei_x_buff		*complete_trees;
+	int			 complete_trees_ready;
+};
+
+int		init_known_lists(void);
+void		free_known_lists(void);
+
+int		control(struct exmpp_xml_ctx *ctx, unsigned int command,
+		    const char *buf, ei_x_buff *to_return);
+
+int		init_context(struct exmpp_xml_ctx *ctx);
+void		reset_context(struct exmpp_xml_ctx *ctx);
+void		free_context(struct exmpp_xml_ctx *ctx);
+
+void		add_data_size(struct exmpp_xml_ctx *ctx, long size);
+int		is_data_size_under_limit(struct exmpp_xml_ctx *ctx, long size);
+
+#if defined(_REENTRANT) && !defined(FINE_GRAIN_LOCKING)
+void		lock_known_lists(struct exmpp_xml_ctx *ctx);
+void		unlock_known_lists(struct exmpp_xml_ctx *ctx);
+#endif
+
+int		enter_element(struct exmpp_xml_ctx *ctx,
+		    const char *ns, int ns_len,
+		    const char *elem, int elem_len,
+		    void *declared_nss, void *attributes);
+int		make_declared_ns_in_buf(struct exmpp_xml_ctx *ctx,
+		    ei_x_buff *buf,
+		    const char *ns, int ns_len,
+		    const char *prefix, int prefix_len);
+int		make_declared_ns(struct exmpp_xml_ctx *ctx,
+		    const char *ns, int ns_len,
+		    const char *prefix, int prefix_len);
+int		make_attribute(struct exmpp_xml_ctx *ctx,
+		    const char *ns, int ns_len,
+		    const char *attr, int attr_len,
+		    const char *value, int value_len);
+int		exit_element(struct exmpp_xml_ctx *ctx,
+		    const char *ns, int ns_len,
+		    const char *elem, int elem_len);
+int		add_character_data(struct exmpp_xml_ctx *ctx,
+		    const char *text, int text_len);
+void		reset_complete_trees(struct exmpp_xml_ctx *ctx);
+
+int		enter_element_legacy(struct exmpp_xml_ctx *ctx,
+		    const char *elem, int elem_len,
+		    void *attributes);
+int		make_attribute_legacy(struct exmpp_xml_ctx *ctx,
+		    const char *attr, int attr_len,
+		    const char *value, int value_len);
+int		exit_element_legacy(struct exmpp_xml_ctx *ctx);
+
+#endif /* !defined(EXMPP_XML_H) */
diff -r d551623afde5 deps/exmpp/c_src/exmpp_xml_expat.c
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/c_src/exmpp_xml_expat.c	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,533 @@
+/*
+ * Copyright ProcessOne 2006-2010. All Rights Reserved.
+ *
+ * The contents of this file are subject to the Erlang Public License,
+ * Version 1.1, (the "License"); you may not use this file except in
+ * compliance with the License. You should have received a copy of the
+ * Erlang Public License along with this software. If not, it can be
+ * retrieved online at http://www.erlang.org/.
+ *
+ * Software distributed under the License is distributed on an "AS IS"
+ * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+ * the License for the specific language governing rights and limitations
+ * under the License.
+ *
+ */
+
+#include <expat.h>
+#include <string.h>
+
+#include "exmpp_xml.h"
+
+#define	DRIVER_NAME	exmpp_xml_expat
+
+#define	NS_SEP		'|'
+
+/* Driver data (also, user data for expat). */
+struct exmpp_xml_data {
+	/* Generic context. */
+	struct exmpp_xml_ctx	 ctx;
+
+	/* Driver instance's context. */
+	XML_Parser		 parser;
+	ei_x_buff		*declared_nss;
+};
+
+/* Expat handler prototypes */
+static void		expat_cb_start_namespace(void *user_data,
+			    const char *prefix, const char *uri);
+static void		expat_cb_start_element(void *user_data,
+			    const char *elem, const char **attrs);
+static void		expat_cb_end_element(void *user_data,
+			    const char *elem);
+static void		expat_cb_character_data(void *user_data,
+			    const char *data, int len);
+
+static make_attributes_cb exmpp_xml_cb_make_attributes;
+
+static int		create_parser(struct exmpp_xml_data *edd);
+static void		init_parser(struct exmpp_xml_data *edd);
+static void		destroy_parser(struct exmpp_xml_data *edd);
+
+/* -------------------------------------------------------------------
+ * Erlang port driver callbacks.
+ * ------------------------------------------------------------------- */
+
+static int
+exmpp_xml_init()
+{
+
+	/* Initialize the global known lists. */
+	if (init_known_lists() != 0)
+		return (-1);
+
+	return (0);
+}
+
+static void
+exmpp_xml_finish()
+{
+
+	/* Free the global known lists. */
+	free_known_lists();
+}
+
+static ErlDrvData
+exmpp_xml_start(ErlDrvPort port, char *command)
+{
+	struct exmpp_xml_data *edd;
+
+	/* Set binary mode. */
+	set_port_control_flags(port, PORT_CONTROL_FLAG_BINARY);
+
+	/* Allocate driver data structure. */
+	edd = driver_alloc(sizeof(*edd));
+	if (edd == NULL)
+		return (ERL_DRV_ERROR_GENERAL);
+
+	/* Initialize generic context. */
+	if (init_context(&edd->ctx) != 0) {
+		driver_free(edd);
+		return (ERL_DRV_ERROR_GENERAL);
+	}
+	edd->ctx.make_attributes = exmpp_xml_cb_make_attributes;
+
+	/* Initialize driver instance's context. */
+	edd->parser = NULL;
+
+	/* Initialize the declared_nss list. */
+	edd->declared_nss = driver_alloc(sizeof(*(edd->declared_nss)));
+	if (edd->declared_nss == NULL) {
+		free_context(&edd->ctx);
+		driver_free(edd);
+		return (ERL_DRV_ERROR_GENERAL);
+	}
+	ei_x_new(edd->declared_nss);
+
+	return ((ErlDrvData)edd);
+}
+
+static void
+exmpp_xml_stop(ErlDrvData drv_data)
+{
+	struct exmpp_xml_data *edd;
+
+	edd = (struct exmpp_xml_data *)drv_data;
+
+	/* Free the declared_nss list. */
+	if (edd->declared_nss) {
+		ei_x_free(edd->declared_nss);
+		driver_free(edd->declared_nss);
+		edd->declared_nss = NULL;
+	}
+
+	/* Destroy the parser. */
+	destroy_parser(edd);
+
+	/* Free generic context. */
+	free_context(&edd->ctx);
+
+	/* Free driver data structure. */
+	driver_free(edd);
+}
+
+static int
+exmpp_xml_control(ErlDrvData drv_data, unsigned int command,
+    char *buf, int len, char **rbuf, int rlen)
+{
+	struct exmpp_xml_data *edd;
+	ei_x_buff *to_return;
+	ErlDrvBinary *bin;
+	int size, ret;
+
+	edd = (struct exmpp_xml_data *)drv_data;
+	size = 0;
+	bin = NULL;
+	to_return = NULL;
+
+	switch (command) {
+	/*
+	 * Parsing.
+	 */
+
+	case COMMAND_PARSE:
+	case COMMAND_PARSE_FINAL:
+		if (edd->parser == NULL) {
+			/* Start a parser. */
+			if (create_parser(edd) != 0) {
+				to_return = exmpp_new_xbuf();
+				if (to_return == NULL)
+					return (-1);
+
+				ret = RET_ERROR;
+				ei_x_encode_atom(to_return,
+				    "parser_setup_failed");
+
+				break;
+			}
+		}
+
+		/* Control the total size of data to parse. */
+		if (!is_data_size_under_limit(&edd->ctx, len)) {
+			to_return = exmpp_new_xbuf();
+			if (to_return == NULL)
+				return (-1);
+
+			ret = RET_ERROR;
+			ei_x_encode_atom(to_return, "stanza_too_big");
+
+			break;
+		}
+
+		/* Run XML document parsing. */
+		ret = XML_Parse(edd->parser, buf, len,
+		    command == COMMAND_PARSE_FINAL);
+
+		if (!ret) {
+			enum XML_Error errcode;
+			const char *errmsg;
+
+			/* An error occured during parsing; most probably,
+			 * XML wasn't well-formed. */
+			errcode = XML_GetErrorCode(edd->parser);
+			errmsg = XML_ErrorString(errcode);
+
+			to_return = exmpp_new_xbuf();
+			if (to_return == NULL)
+				return (-1);
+
+			ret = RET_ERROR;
+			ei_x_encode_tuple_header(to_return, 2);
+			ei_x_encode_atom(to_return, "parsing_failed");
+			ei_x_encode_tuple_header(to_return, 2);
+			ei_x_encode_long(to_return, errcode);
+			ei_x_encode_string(to_return, errmsg);
+
+			break;
+		}
+
+		/* Return the complete tree(s). */
+		ret = RET_OK;
+		if (edd->ctx.complete_trees_ready) {
+			/* Terminate the complete trees list. */
+			ei_x_encode_empty_list(edd->ctx.complete_trees);
+
+			to_return = edd->ctx.complete_trees;
+			size = 1 + to_return->index;
+			bin = driver_alloc_binary(size);
+			if (bin == NULL)
+				return (-1);
+			bin->orig_bytes[0] = (char)ret;
+			memcpy(bin->orig_bytes + 1,
+			    to_return->buff, to_return->index);
+		} else {
+			/* We need more data to produce a tree. */
+			to_return = exmpp_new_xbuf();
+			if (to_return == NULL)
+				return (-1);
+
+			ei_x_encode_atom(to_return,
+			    command == COMMAND_PARSE ? "continue" : "done");
+		}
+
+		if (command == COMMAND_PARSE) {
+			/* Update the size of processed data. */
+			add_data_size(&edd->ctx, len);
+
+			/* Reset the complete trees list. */
+			reset_complete_trees(&edd->ctx);
+		} else {
+			/* We're done with the parser. */
+			destroy_parser(edd);
+		}
+
+		break;
+
+	case COMMAND_RESET_PARSER:
+		if (edd->parser != NULL) {
+			reset_context(&edd->ctx);
+			XML_ParserReset(edd->parser, "UTF-8");
+			init_parser(edd);
+		}
+
+		ret = RET_OK;
+
+		break;
+
+	/*
+	 * Misc.
+	 */
+
+	case COMMAND_PORT_REVISION:
+		/* Store the revision in the buffer. */
+		to_return = exmpp_new_xbuf();
+		if (to_return == NULL)
+			return (-1);
+
+		ret = RET_OK;
+		ei_x_encode_string(to_return, "$Revision: 899 $");
+
+		break;
+
+	default:
+		/* Other commands are handled in 'exmpp_xml.c' */
+		to_return = exmpp_new_xbuf();
+		if (to_return == NULL)
+			return (-1);
+
+		ret = control(&edd->ctx, command, buf, to_return);
+		if (ret < 0)
+			return (-1);
+	}
+
+	if (bin == NULL) {
+		if (to_return != NULL) {
+			size = 1 + to_return->index;
+			bin = driver_alloc_binary(size);
+			if (bin == NULL)
+				return (-1);
+			bin->orig_bytes[0] = (char)ret;
+			if (to_return->index > 0)
+				memcpy(bin->orig_bytes + 1,
+				    to_return->buff, to_return->index);
+			exmpp_free_xbuf(to_return);
+		} else {
+			/* The command called doesn't return anything. */
+			size = 1;
+			bin = driver_alloc_binary(size);
+			bin->orig_bytes[0] = RET_OK;
+		}
+	}
+
+	/* Set the returned buffer. */
+	*rbuf = (char *)bin;
+
+	/* Return the size of this buffer. */
+	return (size);
+}
+
+/* -------------------------------------------------------------------
+ * Expat handlers.
+ * ------------------------------------------------------------------- */
+
+static void
+expat_cb_start_namespace(void *user_data,
+    const char *prefix, const char *uri)
+{
+    /* if namespace=='', it is not declaring a namespace but clearing it.
+       It is not valid to have a declaration like xmlns:nothing='' 
+      (it is invalid xml: "XML Parsing Error: must not undeclare prefix"). 
+      
+      So, if the uri is NULL, we don't add it to the list of declared namespaces, 
+      and we aren't missing a prefix declaration because a null uri can only happen
+      in conjunction with a null prefix.  Element namespaces are correctly handled,
+      keep in mind that this function is only used to build the list of the namespaces that
+      are declared at this element tag (declared_ns field in the #xmlel record), 
+      it has nothing to do with the general namespace algorithm that is handled by expat */ 
+    if (uri == NULL) 
+        return;
+
+	struct exmpp_xml_data *edd;
+
+	edd = (struct exmpp_xml_data *)user_data;
+
+	/* Build the declared_nss list. This list will be reset
+	 * in expat_cb_start_element(). */
+	make_declared_ns_in_buf(&edd->ctx, edd->declared_nss,
+	    uri, strlen(uri),
+	    prefix, prefix != NULL ? strlen(prefix) : 0);
+}
+
+static void
+expat_cb_start_element(void *user_data,
+    const char *elem, const char **attrs)
+{
+	struct exmpp_xml_data *edd;
+	const char *real_elem, *ns;
+	int ns_len;
+
+	edd = (struct exmpp_xml_data *)user_data;
+
+	/* With Expat, we must extract the namespace from the element's
+	 * name. */
+	real_elem = strchr(elem, NS_SEP);
+	if (real_elem != NULL) {
+		/* This element has a namespace. */
+		ns = elem;
+		ns_len = real_elem - elem;
+		real_elem++;
+	} else {
+		ns = NULL;
+		ns_len = 0;
+		real_elem = elem;
+	}
+
+	enter_element(&edd->ctx,
+	    ns, ns_len,
+	    real_elem, strlen(real_elem),
+	    edd->declared_nss, (void *)attrs);
+
+	/* We can now reset the declared_nss list. We only reset the
+	 * index to avoid memory free/alloc. */
+	if (edd->declared_nss != NULL)
+		edd->declared_nss->index = 0;
+}
+
+static void
+expat_cb_end_element(void *user_data,
+    const char *elem)
+{
+	int ns_len;
+	const char *real_elem, *ns;
+	struct exmpp_xml_data *edd;
+
+	edd = (struct exmpp_xml_data *)user_data;
+
+	/* With Expat, we must extract the namespace from the element's
+	 * name. */
+	real_elem = strchr(elem, NS_SEP);
+	if (real_elem != NULL) {
+		/* This element has a namespace. */
+		ns = elem;
+		ns_len = real_elem - elem;
+		real_elem++;
+	} else {
+		ns = NULL;
+		ns_len = 0;
+		real_elem = elem;
+	}
+
+	exit_element(&edd->ctx,
+	    ns, ns_len,
+	    real_elem, strlen(real_elem));
+}
+
+static void
+expat_cb_character_data(void *user_data,
+    const char *data, int len)
+{
+	struct exmpp_xml_data *edd;
+
+	edd = (struct exmpp_xml_data *)user_data;
+
+	add_character_data(&edd->ctx, data, len);
+}
+
+int
+exmpp_xml_cb_make_attributes(struct exmpp_xml_ctx *ctx, void *attributes)
+{
+	int i, ns_len;
+	const char *real_attr, *ns;
+	const char **attrs;
+
+	if (attributes == NULL)
+		return (0);
+
+	i = 0;
+	attrs = (const char **)attributes;
+
+	while (attrs[i] != NULL) {
+		/* With Expat, we must extract the namespace from the
+		 * attribute's name. */
+		real_attr = strchr(attrs[i], NS_SEP);
+		if (real_attr != NULL) {
+			/* This element has a namespace. */
+			ns = attrs[i];
+			ns_len = real_attr - attrs[i];
+			real_attr++;
+		} else {
+			ns = NULL;
+			ns_len = 0;
+			real_attr = attrs[i];
+		}
+
+		make_attribute(ctx,
+		    ns, ns_len,
+		    real_attr, strlen(real_attr),
+		    attrs[i + 1], strlen(attrs[i + 1]));
+
+		i += 2;
+	}
+
+	return (0);
+}
+
+/* -------------------------------------------------------------------
+ * Internal functions.
+ * ------------------------------------------------------------------- */
+
+static int
+create_parser(struct exmpp_xml_data *edd)
+{
+
+	/* Create a parser. */
+	edd->parser = XML_ParserCreateNS("UTF-8", NS_SEP);
+	if (edd->parser == NULL)
+		return (-1);
+
+	init_parser(edd);
+
+	return (0);
+}
+
+static void
+init_parser(struct exmpp_xml_data *edd)
+{
+
+	/* Set Expat user data to be this structure. */
+	XML_SetUserData(edd->parser, edd);
+
+	/* Configure the parser. */
+	XML_SetNamespaceDeclHandler(edd->parser,
+	    expat_cb_start_namespace,
+	    NULL);
+	XML_SetElementHandler(edd->parser,
+	    expat_cb_start_element,
+	    expat_cb_end_element);
+	XML_SetCharacterDataHandler(edd->parser,
+	    expat_cb_character_data);
+}
+
+static void
+destroy_parser(struct exmpp_xml_data *edd)
+{
+
+	if (edd->parser != NULL) {
+		/* Destroy the parser. */
+		XML_ParserFree(edd->parser);
+		edd->parser = NULL;
+
+		/* Reset generic context. */
+		reset_context(&edd->ctx);
+
+		/* Reset the declared_nss list. */
+		if (edd->declared_nss != NULL)
+			edd->declared_nss->index = 0;
+	}
+}
+
+/* -------------------------------------------------------------------
+ * Driver declaration.
+ * ------------------------------------------------------------------- */
+
+static ErlDrvEntry driver_entry;
+
+DRIVER_INIT(DRIVER_NAME)
+{
+
+	driver_entry.driver_name = S(DRIVER_NAME);
+	driver_entry.init = exmpp_xml_init;
+	driver_entry.finish = exmpp_xml_finish;
+	driver_entry.start = exmpp_xml_start;
+	driver_entry.stop = exmpp_xml_stop;
+	driver_entry.control = exmpp_xml_control;
+
+#if defined(SMP_SUPPORT)
+	driver_entry.extended_marker = ERL_DRV_EXTENDED_MARKER;
+	driver_entry.major_version = ERL_DRV_EXTENDED_MAJOR_VERSION;
+	driver_entry.minor_version = ERL_DRV_EXTENDED_MINOR_VERSION;
+	driver_entry.driver_flags = ERL_DRV_FLAG_USE_PORT_LOCKING;
+#endif
+
+	return (&driver_entry);
+}
diff -r d551623afde5 deps/exmpp/c_src/exmpp_xml_expat_legacy.c
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/c_src/exmpp_xml_expat_legacy.c	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,420 @@
+/*
+ * Copyright ProcessOne 2006-2010. All Rights Reserved.
+ *
+ * The contents of this file are subject to the Erlang Public License,
+ * Version 1.1, (the "License"); you may not use this file except in
+ * compliance with the License. You should have received a copy of the
+ * Erlang Public License along with this software. If not, it can be
+ * retrieved online at http://www.erlang.org/.
+ *
+ * Software distributed under the License is distributed on an "AS IS"
+ * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+ * the License for the specific language governing rights and limitations
+ * under the License.
+ *
+ */
+
+#include <expat.h>
+#include <string.h>
+
+#include "exmpp_xml.h"
+
+#define	DRIVER_NAME	exmpp_xml_expat_legacy
+
+/* Driver data (also, user data for expat). */
+struct exmpp_xml_data {
+	/* Generic context. */
+	struct exmpp_xml_ctx	 ctx;
+
+	/* Driver instance's context. */
+	XML_Parser		 parser;
+};
+
+/* Expat handler prototypes */
+static void		expat_cb_start_element(void *user_data,
+			    const char *elem, const char **attrs);
+static void		expat_cb_end_element(void *user_data,
+			    const char *elem);
+static void		expat_cb_character_data(void *user_data,
+			    const char *data, int len);
+
+static make_attributes_legacy_cb exmpp_xml_cb_make_attributes;
+
+static int		create_parser(struct exmpp_xml_data *edd);
+static void		init_parser(struct exmpp_xml_data *edd);
+static void		destroy_parser(struct exmpp_xml_data *edd);
+
+/* -------------------------------------------------------------------
+ * Erlang port driver callbacks.
+ * ------------------------------------------------------------------- */
+
+static int
+exmpp_xml_init()
+{
+
+	/* Initialize the global known lists. */
+	if (init_known_lists() != 0)
+		return (-1);
+
+	return (0);
+}
+
+static void
+exmpp_xml_finish()
+{
+
+	/* Free the global known lists. */
+	free_known_lists();
+}
+
+static ErlDrvData
+exmpp_xml_start(ErlDrvPort port, char *command)
+{
+	struct exmpp_xml_data *edd;
+
+	/* Set binary mode. */
+	set_port_control_flags(port, PORT_CONTROL_FLAG_BINARY);
+
+	/* Allocate driver data structure. */
+	edd = driver_alloc(sizeof(*edd));
+	if (edd == NULL)
+		return (ERL_DRV_ERROR_GENERAL);
+
+	/* Initialize generic context. */
+	if (init_context(&edd->ctx) != 0) {
+		driver_free(edd);
+		return (ERL_DRV_ERROR_GENERAL);
+	}
+	edd->ctx.make_attributes_legacy = exmpp_xml_cb_make_attributes;
+
+	/* Initialize driver instance's context. */
+	edd->parser = NULL;
+
+	return ((ErlDrvData)edd);
+}
+
+static void
+exmpp_xml_stop(ErlDrvData drv_data)
+{
+	struct exmpp_xml_data *edd;
+
+	edd = (struct exmpp_xml_data *)drv_data;
+
+	/* Destroy the parser. */
+	destroy_parser(edd);
+
+	/* Free generic context. */
+	free_context(&edd->ctx);
+
+	/* Free driver data structure. */
+	driver_free(edd);
+}
+
+static int
+exmpp_xml_control(ErlDrvData drv_data, unsigned int command,
+    char *buf, int len, char **rbuf, int rlen)
+{
+	struct exmpp_xml_data *edd;
+	ei_x_buff *to_return;
+	ErlDrvBinary *bin;
+	int size, ret;
+
+	edd = (struct exmpp_xml_data *)drv_data;
+	size = 0;
+	bin = NULL;
+	to_return = NULL;
+
+	switch (command) {
+	/*
+	 * Parsing.
+	 */
+
+	case COMMAND_PARSE:
+	case COMMAND_PARSE_FINAL:
+		if (edd->parser == NULL) {
+			/* Start a parser. */
+			if (create_parser(edd) != 0) {
+				to_return = exmpp_new_xbuf();
+				if (to_return == NULL)
+					return (-1);
+
+				ret = RET_ERROR;
+				ei_x_encode_atom(to_return,
+				    "parser_setup_failed");
+
+				break;
+			}
+		}
+
+		/* Control the total size of data to parse. */
+		if (!is_data_size_under_limit(&edd->ctx, len)) {
+			to_return = exmpp_new_xbuf();
+			if (to_return == NULL)
+				return (-1);
+
+			ret = RET_ERROR;
+			ei_x_encode_atom(to_return, "stanza_too_big");
+
+			break;
+		}
+
+		/* Run XML document parsing. */
+		ret = XML_Parse(edd->parser, buf, len,
+		    command == COMMAND_PARSE_FINAL);
+
+		if (!ret) {
+			enum XML_Error errcode;
+			const char *errmsg;
+
+			/* An error occured during parsing; most probably,
+			 * XML wasn't well-formed. */
+			errcode = XML_GetErrorCode(edd->parser);
+			errmsg = XML_ErrorString(errcode);
+
+			to_return = exmpp_new_xbuf();
+			if (to_return == NULL)
+				return (-1);
+
+			ret = RET_ERROR;
+			ei_x_encode_tuple_header(to_return, 2);
+			ei_x_encode_atom(to_return, "parsing_failed");
+			ei_x_encode_tuple_header(to_return, 2);
+			ei_x_encode_long(to_return, errcode);
+			ei_x_encode_string(to_return, errmsg);
+
+			break;
+		}
+
+		/* Return the complete tree(s). */
+		ret = RET_OK;
+		if (edd->ctx.complete_trees_ready) {
+			/* Terminate the complete trees list. */
+			ei_x_encode_empty_list(edd->ctx.complete_trees);
+
+			to_return = edd->ctx.complete_trees;
+			size = 1 + to_return->index;
+			bin = driver_alloc_binary(size);
+			if (bin == NULL)
+				return (-1);
+			bin->orig_bytes[0] = (char)ret;
+			memcpy(bin->orig_bytes + 1,
+			    to_return->buff, to_return->index);
+		} else {
+			/* We need more data to produce a tree. */
+			to_return = exmpp_new_xbuf();
+			if (to_return == NULL)
+				return (-1);
+
+			ei_x_encode_atom(to_return,
+			    command == COMMAND_PARSE ? "continue" : "done");
+		}
+
+		if (command == COMMAND_PARSE) {
+			/* Update the size of processed data. */
+			add_data_size(&edd->ctx, len);
+
+			/* Reset the complete trees list. */
+			reset_complete_trees(&edd->ctx);
+		} else {
+			/* We're done with the parser. */
+			destroy_parser(edd);
+		}
+
+		break;
+
+	case COMMAND_RESET_PARSER:
+		if (edd->parser != NULL) {
+			XML_ParserReset(edd->parser, "UTF-8");
+			init_parser(edd);
+		}
+
+		ret = RET_OK;
+
+		break;
+
+	/*
+	 * Misc.
+	 */
+
+	case COMMAND_PORT_REVISION:
+		/* Store the revision in the buffer. */
+		to_return = exmpp_new_xbuf();
+		if (to_return == NULL)
+			return (-1);
+
+		ret = RET_OK;
+		ei_x_encode_string(to_return, "$Revision: 899 $");
+
+		break;
+
+	default:
+		/* Other commands are handled in 'exmpp_xml.c' */
+		to_return = exmpp_new_xbuf();
+		if (to_return == NULL)
+			return (-1);
+
+		ret = control(&edd->ctx, command, buf, to_return);
+		if (ret < 0)
+			return (-1);
+	}
+
+	if (bin == NULL) {
+		if (to_return != NULL) {
+			size = 1 + to_return->index;
+			bin = driver_alloc_binary(size);
+			if (bin == NULL)
+				return (-1);
+			bin->orig_bytes[0] = (char)ret;
+			if (to_return->index > 0)
+				memcpy(bin->orig_bytes + 1,
+				    to_return->buff, to_return->index);
+			exmpp_free_xbuf(to_return);
+		} else {
+			/* The command called doesn't return anything. */
+			size = 1;
+			bin = driver_alloc_binary(size);
+			bin->orig_bytes[0] = RET_OK;
+		}
+	}
+
+	/* Set the returned buffer. */
+	*rbuf = (char *)bin;
+
+	/* Return the size of this buffer. */
+	return (size);
+}
+
+/* -------------------------------------------------------------------
+ * Expat handlers.
+ * ------------------------------------------------------------------- */
+
+static void
+expat_cb_start_element(void *user_data,
+    const char *elem, const char **attrs)
+{
+	struct exmpp_xml_data *edd;
+
+	edd = (struct exmpp_xml_data *)user_data;
+
+	enter_element_legacy(&edd->ctx,
+	    elem, strlen(elem),
+	    (void *)attrs);
+}
+
+static void
+expat_cb_end_element(void *user_data,
+    const char *elem)
+{
+	struct exmpp_xml_data *edd;
+
+	edd = (struct exmpp_xml_data *)user_data;
+
+	exit_element_legacy(&edd->ctx);
+}
+
+static void
+expat_cb_character_data(void *user_data,
+    const char *data, int len)
+{
+	struct exmpp_xml_data *edd;
+
+	edd = (struct exmpp_xml_data *)user_data;
+
+	add_character_data(&edd->ctx, data, len);
+}
+
+int
+exmpp_xml_cb_make_attributes(struct exmpp_xml_ctx *ctx, void *attributes)
+{
+	int i;
+	const char **attrs;
+
+	if (attributes == NULL)
+		return (0);
+
+	i = 0;
+	attrs = (const char **)attributes;
+
+	while (attrs[i] != NULL) {
+		make_attribute_legacy(ctx,
+		    attrs[i], strlen(attrs[i]),
+		    attrs[i + 1], strlen(attrs[i + 1]));
+
+		i += 2;
+	}
+
+	return (0);
+}
+
+/* -------------------------------------------------------------------
+ * Internal functions.
+ * ------------------------------------------------------------------- */
+
+static int
+create_parser(struct exmpp_xml_data *edd)
+{
+
+	/* Create a parser. */
+	edd->parser = XML_ParserCreate("UTF-8");
+	if (edd->parser == NULL)
+		return (-1);
+
+	init_parser(edd);
+
+	return (0);
+}
+
+static void
+init_parser(struct exmpp_xml_data *edd)
+{
+
+	/* Set Expat user data to be this structure. */
+	XML_SetUserData(edd->parser, edd);
+
+	/* Configure the parser. */
+	XML_SetElementHandler(edd->parser,
+	    expat_cb_start_element,
+	    expat_cb_end_element);
+	XML_SetCharacterDataHandler(edd->parser,
+	    expat_cb_character_data);
+}
+
+static void
+destroy_parser(struct exmpp_xml_data *edd)
+{
+
+	if (edd->parser != NULL) {
+		/* Destroy the parser. */
+		XML_ParserFree(edd->parser);
+		edd->parser = NULL;
+
+		/* Reset generic context. */
+		reset_context(&edd->ctx);
+	}
+}
+
+/* -------------------------------------------------------------------
+ * Driver declaration.
+ * ------------------------------------------------------------------- */
+
+static ErlDrvEntry driver_entry;
+
+DRIVER_INIT(DRIVER_NAME)
+{
+
+	driver_entry.driver_name = S(DRIVER_NAME);
+	driver_entry.init = exmpp_xml_init;
+	driver_entry.finish = exmpp_xml_finish;
+	driver_entry.start = exmpp_xml_start;
+	driver_entry.stop = exmpp_xml_stop;
+	driver_entry.control = exmpp_xml_control;
+
+#if defined(SMP_SUPPORT)
+	driver_entry.extended_marker = ERL_DRV_EXTENDED_MARKER;
+	driver_entry.major_version = ERL_DRV_EXTENDED_MAJOR_VERSION;
+	driver_entry.minor_version = ERL_DRV_EXTENDED_MINOR_VERSION;
+	driver_entry.driver_flags = ERL_DRV_FLAG_USE_PORT_LOCKING;
+#endif
+
+	return (&driver_entry);
+}
diff -r d551623afde5 deps/exmpp/c_src/exmpp_xml_libxml2.c
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/c_src/exmpp_xml_libxml2.c	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,479 @@
+/*
+ * Copyright ProcessOne 2006-2010. All Rights Reserved.
+ *
+ * The contents of this file are subject to the Erlang Public License,
+ * Version 1.1, (the "License"); you may not use this file except in
+ * compliance with the License. You should have received a copy of the
+ * Erlang Public License along with this software. If not, it can be
+ * retrieved online at http://www.erlang.org/.
+ *
+ * Software distributed under the License is distributed on an "AS IS"
+ * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+ * the License for the specific language governing rights and limitations
+ * under the License.
+ *
+ */
+
+#include <libxml/parser.h>
+#include <string.h>
+
+#include "exmpp_xml.h"
+
+#define	DRIVER_NAME	exmpp_xml_libxml2
+
+/* Driver data (also, user data for LibXML2). */
+struct exmpp_xml_data {
+	/* Generic context. */
+	struct exmpp_xml_ctx	  ctx;
+
+	/* Driver instance's context. */
+	xmlParserCtxtPtr	  parser;
+	int			  declared_nss_count;
+	int			  attrs_count;
+	const xmlChar		**declared_nss;
+	const xmlChar		**attrs;
+};
+
+/* LibXML2 handler prototypes */
+static void		libxml2_cb_start_element(void *user_data,
+			    const xmlChar *elem,
+			    const xmlChar *prefix, const xmlChar *ns,
+			    int declared_nss_count,
+			    const xmlChar **declared_nss,
+			    int attrs_count, int attrs_defaulted,
+			    const xmlChar **attrs);
+static void		libxml2_cb_end_element(void *user_data,
+			    const xmlChar *elem,
+			    const xmlChar *prefix, const xmlChar *ns);
+static xmlEntityPtr	libxml2_cb_get_entity(void *user_data,
+			    const xmlChar *name);
+static void		libxml2_cb_character_data(void *user_data,
+			    const xmlChar *data, int len);
+
+static make_declared_nss_cb	exmpp_xml_cb_make_declared_nss;
+static make_attributes_cb	exmpp_xml_cb_make_attributes;
+
+static int		create_parser(struct exmpp_xml_data *edd);
+static void		destroy_parser(struct exmpp_xml_data *edd);
+
+/* LibXML2 SAX handler. */
+static xmlSAXHandler sax_handler;
+
+/* -------------------------------------------------------------------
+ * Erlang port driver callbacks.
+ * ------------------------------------------------------------------- */
+
+static int
+exmpp_xml_init()
+{
+
+	/* Initialize the global known lists. */
+	if (init_known_lists() != 0)
+		return (-1);
+
+	/* Initialize and check LibXML2. */
+	LIBXML_TEST_VERSION; /* be safe, plus calls xmlInitParser */
+
+	return (0);
+}
+
+static void
+exmpp_xml_finish()
+{
+
+	/* Terminate LibXML2. */
+	xmlCleanupParser();
+
+	/* Free the global known lists. */
+	free_known_lists();
+}
+
+static ErlDrvData
+exmpp_xml_start(ErlDrvPort port, char *command)
+{
+	struct exmpp_xml_data *edd;
+
+	/* Set binary mode. */
+	set_port_control_flags(port, PORT_CONTROL_FLAG_BINARY);
+
+	/* Allocate driver data structure. */
+	edd = driver_alloc(sizeof(*edd));
+	if (edd == NULL)
+		return (ERL_DRV_ERROR_GENERAL);
+
+	/* Initialize generic context. */
+	if (init_context(&edd->ctx) != 0) {
+		driver_free(edd);
+		return (ERL_DRV_ERROR_GENERAL);
+	}
+	edd->ctx.make_declared_nss = exmpp_xml_cb_make_declared_nss;
+	edd->ctx.make_attributes = exmpp_xml_cb_make_attributes;
+
+	/* Initialize driver instance's context. */
+	edd->parser = NULL;
+
+	return ((ErlDrvData)edd);
+}
+
+static void
+exmpp_xml_stop(ErlDrvData drv_data)
+{
+	struct exmpp_xml_data *edd;
+
+	edd = (struct exmpp_xml_data *)drv_data;
+
+	/* Destroy the parser. */
+	destroy_parser(edd);
+
+	/* Free generic context. */
+	free_context(&edd->ctx);
+
+	/* Free driver data structure. */
+	driver_free(edd);
+}
+
+static int
+exmpp_xml_control(ErlDrvData drv_data, unsigned int command,
+    char *buf, int len, char **rbuf, int rlen)
+{
+	struct exmpp_xml_data *edd;
+	ei_x_buff *to_return;
+	ErlDrvBinary *bin;
+	int size, ret;
+
+	edd = (struct exmpp_xml_data *)drv_data;
+	size = 0;
+	bin = NULL;
+	to_return = NULL;
+
+	switch (command) {
+	/*
+	 * Parsing.
+	 */
+
+	case COMMAND_PARSE:
+	case COMMAND_PARSE_FINAL:
+		if (edd->parser == NULL) {
+			/* Start a parser. */
+			if (create_parser(edd) != 0) {
+				to_return = exmpp_new_xbuf();
+				if (to_return == NULL)
+					return (-1);
+
+				ret = RET_ERROR;
+				ei_x_encode_atom(to_return,
+				    "parser_setup_failed");
+
+				break;
+			}
+		}
+
+		/* Control the total size of data to parse. */
+		if (!is_data_size_under_limit(&edd->ctx, len)) {
+			to_return = exmpp_new_xbuf();
+			if (to_return == NULL)
+				return (-1);
+
+			ret = RET_ERROR;
+			ei_x_encode_atom(to_return, "stanza_too_big");
+
+			break;
+		}
+
+		/* Run XML document parsing. */
+		ret = xmlParseChunk(edd->parser, buf, len,
+		    command == COMMAND_PARSE_FINAL);
+
+		if (ret > 0) {
+			xmlError *error;
+
+			/* An error occured during parsing; most probably,
+			 * XML wasn't well-formed. */
+			error = xmlCtxtGetLastError(edd->parser);
+
+			to_return = exmpp_new_xbuf();
+			if (to_return == NULL)
+				return (-1);
+
+			ret = RET_ERROR;
+			ei_x_encode_tuple_header(to_return, 2);
+			ei_x_encode_atom(to_return, "parsing_failed");
+			ei_x_encode_tuple_header(to_return, 2);
+			ei_x_encode_long(to_return, error->code);
+			ei_x_encode_string(to_return, error->message);
+
+			break;
+		}
+
+		/* Return the complete tree(s). */
+		ret = RET_OK;
+		if (edd->ctx.complete_trees_ready) {
+			/* Terminate the complete trees list. */
+			ei_x_encode_empty_list(edd->ctx.complete_trees);
+
+			to_return = edd->ctx.complete_trees;
+			size = 1 + to_return->index;
+			bin = driver_alloc_binary(size);
+			if (bin == NULL)
+				return (-1);
+			bin->orig_bytes[0] = (char)ret;
+			memcpy(bin->orig_bytes + 1,
+			    to_return->buff, to_return->index);
+		} else {
+			/* We need more data to produce a tree. */
+			to_return = exmpp_new_xbuf();
+			if (to_return == NULL)
+				return (-1);
+
+			ei_x_encode_atom(to_return,
+			    command == COMMAND_PARSE ? "continue" : "done");
+		}
+
+		if (command == COMMAND_PARSE) {
+			/* Update the size of processed data. */
+			add_data_size(&edd->ctx, len);
+
+			/* Reset the complete trees list. */
+			reset_complete_trees(&edd->ctx);
+		} else {
+			/* We're done with the parser. */
+			destroy_parser(edd);
+		}
+
+		break;
+
+	case COMMAND_RESET_PARSER:
+		if (edd->parser != NULL) {
+			xmlCtxtResetPush(edd->parser, NULL, 0, NULL, NULL);
+		}
+		ret = RET_OK;
+		break;
+
+	/*
+	 * Misc.
+	 */
+
+	case COMMAND_PORT_REVISION:
+		/* Store the revision in the buffer. */
+		to_return = exmpp_new_xbuf();
+		if (to_return == NULL)
+			return (-1);
+
+		ret = RET_OK;
+		ei_x_encode_string(to_return, "$Revision: 899 $");
+
+		break;
+
+	default:
+		/* Other commands are handled in 'exmpp_xml.c' */
+		to_return = exmpp_new_xbuf();
+		if (to_return == NULL)
+			return (-1);
+
+		ret = control(&edd->ctx, command, buf, to_return);
+		if (ret < 0)
+			return (-1);
+	}
+
+	if (bin == NULL) {
+		if (to_return != NULL) {
+			size = 1 + to_return->index;
+			bin = driver_alloc_binary(size);
+			if (bin == NULL)
+				return (-1);
+			bin->orig_bytes[0] = (char)ret;
+			if (to_return->index > 0)
+				memcpy(bin->orig_bytes + 1,
+				    to_return->buff, to_return->index);
+			exmpp_free_xbuf(to_return);
+		} else {
+			/* The command called doesn't return anything. */
+			size = 1;
+			bin = driver_alloc_binary(size);
+			bin->orig_bytes[0] = RET_OK;
+		}
+	}
+
+	/* Set the returned buffer. */
+	*rbuf = (char *)bin;
+
+	/* Return the size of this buffer. */
+	return (size);
+}
+
+/* -------------------------------------------------------------------
+ * LibXML2 handlers.
+ * ------------------------------------------------------------------- */
+
+static void
+libxml2_cb_start_element(void *user_data,
+    const xmlChar *elem, const xmlChar *prefix, const xmlChar *ns,
+    int declared_nss_count, const xmlChar **declared_nss,
+    int attrs_count, int attrs_defaulted, const xmlChar **attrs)
+{
+	struct exmpp_xml_data *edd;
+
+	edd = (struct exmpp_xml_data *)user_data;
+
+	edd->declared_nss_count = declared_nss_count;
+	edd->declared_nss = declared_nss;
+	edd->attrs_count = attrs_count;
+	edd->attrs = attrs;
+
+	enter_element(&edd->ctx,
+	    (char *)ns, -1,
+	    (char *)elem, -1,
+	    edd, edd);
+
+	/* We can now reset the declared_nss and attrs lists. */
+	edd->declared_nss_count = 0;
+	edd->declared_nss = NULL;
+	edd->attrs_count = 0;
+	edd->attrs = NULL;
+}
+
+static void
+libxml2_cb_end_element(void *user_data,
+    const xmlChar *elem, const xmlChar *prefix, const xmlChar *ns)
+{
+	struct exmpp_xml_data *edd;
+
+	edd = (struct exmpp_xml_data *)user_data;
+
+	exit_element(&edd->ctx,
+	    (char *)ns, -1,
+	    (char *)elem, -1);
+}
+
+static xmlEntityPtr
+libxml2_cb_get_entity(void *user_data, const xmlChar *name)
+{
+
+	return (xmlGetPredefinedEntity(name));
+}
+
+static void
+libxml2_cb_character_data(void *user_data,
+    const xmlChar *data, int len)
+{
+	struct exmpp_xml_data *edd;
+
+	edd = (struct exmpp_xml_data *)user_data;
+
+	add_character_data(&edd->ctx, (char *)data, len);
+}
+
+static int
+exmpp_xml_cb_make_declared_nss(struct exmpp_xml_ctx *ctx, void *user_data)
+{
+	int n, i;
+	const char *ns, *prefix;
+	struct exmpp_xml_data *edd;
+
+	if (user_data == NULL)
+		return (0);
+
+	edd = (struct exmpp_xml_data *)user_data;
+
+	for (n = 0, i = 0; n < edd->declared_nss_count; ++n, i += 2) {
+		ns = (char *)edd->declared_nss[i + 1];
+		prefix = (char *)edd->declared_nss[i];
+
+		make_declared_ns(ctx,
+		    ns, -1,
+		    prefix, -1);
+	}
+
+	return (0);
+}
+
+static int
+exmpp_xml_cb_make_attributes(struct exmpp_xml_ctx *ctx, void *user_data)
+{
+	int n, i, value_len;
+	const char *ns, *attr, *value;
+	struct exmpp_xml_data *edd;
+
+	if (user_data == NULL)
+		return (0);
+
+	edd = (struct exmpp_xml_data *)user_data;
+
+	for (n = 0, i = 0; n < edd->attrs_count; ++n, i += 5) {
+		ns = (char *)edd->attrs[i + 2];
+		attr = (char *)edd->attrs[i];
+		value = (char *)edd->attrs[i + 3];
+		value_len = edd->attrs[i + 4] - edd->attrs[i + 3];
+
+		make_attribute(ctx,
+		    ns, -1,
+		    attr, -1,
+		    value, value_len);
+	}
+
+	return (0);
+}
+
+/* -------------------------------------------------------------------
+ * Internal functions.
+ * ------------------------------------------------------------------- */
+
+static int
+create_parser(struct exmpp_xml_data *edd)
+{
+
+	/* Initialize SAX callbacks. */
+	sax_handler.initialized = XML_SAX2_MAGIC;
+	sax_handler.startElementNs = libxml2_cb_start_element;
+	sax_handler.endElementNs = libxml2_cb_end_element;
+	sax_handler.getEntity = libxml2_cb_get_entity;
+	sax_handler.characters = libxml2_cb_character_data;
+
+	/* Create a parser. */
+	edd->parser = xmlCreatePushParserCtxt(&sax_handler, edd,
+	    NULL, 0, NULL);
+	if (edd->parser == NULL)
+		return (-1);
+
+	return (0);
+}
+
+static void
+destroy_parser(struct exmpp_xml_data *edd)
+{
+
+	if (edd->parser != NULL) {
+		/* Destroy the parser. */
+		xmlFreeParserCtxt(edd->parser);
+		edd->parser = NULL;
+
+		/* Reset generic context. */
+		reset_context(&edd->ctx);
+	}
+}
+
+/* -------------------------------------------------------------------
+ * Driver declaration.
+ * ------------------------------------------------------------------- */
+
+static ErlDrvEntry driver_entry;
+
+DRIVER_INIT(DRIVER_NAME)
+{
+
+	driver_entry.driver_name = S(DRIVER_NAME);
+	driver_entry.init = exmpp_xml_init;
+	driver_entry.finish = exmpp_xml_finish;
+	driver_entry.start = exmpp_xml_start;
+	driver_entry.stop = exmpp_xml_stop;
+	driver_entry.control = exmpp_xml_control;
+
+#if defined(SMP_SUPPORT)
+	driver_entry.extended_marker = ERL_DRV_EXTENDED_MARKER;
+	driver_entry.major_version = ERL_DRV_EXTENDED_MAJOR_VERSION;
+	driver_entry.minor_version = ERL_DRV_EXTENDED_MINOR_VERSION;
+	driver_entry.driver_flags = ERL_DRV_FLAG_USE_PORT_LOCKING;
+#endif
+
+	return (&driver_entry);
+}
diff -r d551623afde5 deps/exmpp/c_src/stringprep_uni_data.h
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/c_src/stringprep_uni_data.h	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,1256 @@
+/*
+ * uni_data.c --
+ *
+ *	Declarations of Unicode character information tables.  This file is
+ *	automatically generated by the uni_parse.tcl script.  Do not
+ *	modify this file by hand.
+ *
+ * Copyright (c) 1998 by Scriptics Corporation.
+ * All rights reserved.
+ *
+ * Modified for ejabberd by Alexey Shchepin
+ *
+ */
+
+/*
+ * A 16-bit Unicode character is split into two parts in order to index
+ * into the following tables.  The lower OFFSET_BITS comprise an offset
+ * into a page of characters.  The upper bits comprise the page number.
+ */
+
+#define OFFSET_BITS 8
+
+/*
+ * The pageMap is indexed by page number and returns an alternate page number
+ * that identifies a unique page of characters.  Many Unicode characters map
+ * to the same alternate page number.
+ */
+
+static unsigned char pageMap[] = {
+    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
+    20, 21, 22, 23, 24, 8, 8, 8, 8, 8, 25, 26, 27, 28, 29, 30, 31, 29, 
+    32, 33, 29, 29, 29, 8, 8, 8, 34, 35, 36, 37, 38, 39, 21, 21, 21, 21, 
+    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
+    21, 21, 21, 21, 40, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
+    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
+    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
+    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
+    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
+    21, 41, 21, 21, 21, 21, 42, 8, 8, 8, 8, 8, 8, 8, 21, 21, 21, 21, 21, 
+    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
+    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
+    21, 21, 21, 21, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 21, 45, 46, 47, 48, 49, 50, 8, 8, 8, 51, 52, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 53, 54, 8, 8, 55, 
+    56, 57, 58, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 21, 
+    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
+    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
+    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
+    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
+    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
+    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
+    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
+    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
+    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
+    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 59, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 21, 21, 60, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
+    8, 8, 8, 8, 8, 8, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 61, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 
+    44, 44, 44, 44, 44, 61
+};
+
+/*
+ * The groupMap is indexed by combining the alternate page number with
+ * the page offset and returns a group number that identifies a unique
+ * set of character attributes.
+ */
+
+static unsigned short int groupMap[] = {
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 
+    2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 2, 3, 2, 3, 4, 4, 4, 4, 
+    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 
+    2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 8, 2, 2, 
+    2, 2, 5, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 
+    4, 4, 4, 4, 4, 4, 4, 4, 2, 4, 4, 4, 4, 4, 4, 4, 9, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 5, 5, 5, 5, 5, 
+    5, 5, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 
+    5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 
+    5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 11, 5, 10, 5, 10, 5, 10, 5, 5, 
+    10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 12, 10, 5, 
+    10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 
+    5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 
+    5, 10, 5, 10, 5, 13, 10, 5, 10, 5, 10, 5, 14, 5, 15, 10, 5, 10, 5, 
+    16, 10, 5, 17, 17, 10, 5, 5, 18, 19, 20, 10, 5, 17, 21, 5, 22, 23, 
+    10, 5, 5, 5, 22, 24, 5, 25, 10, 5, 10, 5, 10, 5, 26, 10, 5, 26, 5, 
+    5, 10, 5, 26, 10, 5, 27, 27, 10, 5, 10, 5, 28, 10, 5, 5, 5, 10, 5, 
+    5, 5, 5, 5, 5, 5, 29, 10, 5, 29, 10, 5, 29, 10, 5, 10, 5, 10, 5, 10, 
+    5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 5, 10, 5, 10, 5, 10, 5, 10, 5, 
+    10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 30, 29, 10, 5, 10, 5, 31, 32, 10, 
+    5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 
+    5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 33, 
+    6, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 5, 5, 5, 5, 
+    5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 2, 2, 2, 34, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 6, 6, 2, 2, 
+    6, 6, 6, 6, 35, 6, 6, 6, 2, 6, 6, 6, 6, 6, 2, 2, 36, 2, 37, 37, 37, 
+    6, 38, 6, 39, 39, 40, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 
+    4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 41, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 6, 42, 43, 44, 45, 46, 47, 48, 5, 10, 5, 10, 5, 10, 5, 10, 
+    5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 49, 50, 
+    51, 5, 52, 53, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 54, 54, 54, 54, 54, 54, 
+    54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 4, 4, 4, 4, 4, 4, 4, 4, 4, 
+    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 
+    10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 5, 2, 2, 2, 
+    2, 6, 2, 2, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 
+    10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 
+    5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 5, 
+    10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 6, 10, 5, 10, 5, 10, 
+    5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 
+    5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 6, 6, 10, 5, 6, 6, 6, 
+    6, 6, 6, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 
+    55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 
+    55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 6, 6, 5, 5, 5, 5, 5, 5, 
+    5, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 56, 6, 5, 2, 6, 
+    6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    6, 2, 2, 2, 57, 2, 57, 2, 2, 57, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 6, 6, 6, 6, 6, 57, 57, 57, 
+    57, 57, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 57, 6, 6, 6, 
+    57, 6, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 6, 6, 6, 6, 6, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    57, 57, 57, 2, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 2, 2, 2, 2, 2, 2, 2, 58, 2, 2, 2, 2, 2, 2, 2, 57, 57, 2, 
+    2, 2, 2, 2, 2, 2, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 57, 57, 57, 57, 
+    57, 6, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 6, 6, 
+    57, 2, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 6, 6, 6, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    57, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 2, 5, 6, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 6, 6, 2, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 2, 
+    6, 6, 5, 2, 2, 2, 2, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 2, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 5, 5, 6, 6, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 
+    5, 5, 5, 5, 5, 5, 5, 6, 5, 6, 6, 6, 5, 5, 5, 5, 6, 6, 2, 6, 5, 5, 5, 
+    2, 2, 2, 2, 6, 6, 5, 5, 6, 6, 5, 5, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 
+    6, 6, 6, 6, 5, 5, 6, 5, 5, 5, 2, 2, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 2, 2, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 2, 6, 6, 5, 
+    5, 5, 5, 5, 5, 6, 6, 6, 6, 5, 5, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 6, 5, 5, 
+    6, 5, 5, 6, 5, 5, 6, 6, 2, 6, 5, 5, 5, 2, 2, 6, 6, 6, 6, 2, 2, 6, 6, 
+    2, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 6, 5, 6, 6, 6, 
+    6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 5, 5, 5, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 2, 2, 5, 6, 5, 5, 5, 5, 5, 5, 5, 6, 5, 6, 5, 
+    5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 6, 5, 5, 6, 5, 5, 5, 5, 5, 6, 6, 2, 5, 
+    5, 5, 5, 2, 2, 2, 2, 2, 6, 2, 2, 5, 6, 5, 5, 2, 6, 6, 5, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 5, 
+    5, 6, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 5, 5, 6, 6, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 
+    6, 5, 5, 6, 6, 5, 5, 5, 5, 6, 6, 2, 5, 5, 2, 5, 2, 2, 2, 6, 6, 6, 5, 
+    5, 6, 6, 5, 5, 2, 6, 6, 6, 6, 6, 6, 6, 6, 2, 5, 6, 6, 6, 6, 5, 5, 6, 
+    5, 5, 5, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 5, 6, 5, 5, 5, 5, 5, 5, 6, 6, 
+    6, 5, 5, 5, 6, 5, 5, 5, 5, 6, 6, 6, 5, 5, 6, 5, 6, 5, 5, 6, 6, 6, 5, 
+    5, 6, 6, 6, 5, 5, 5, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 5, 5, 6, 
+    6, 6, 6, 5, 5, 2, 5, 5, 6, 6, 6, 5, 5, 5, 6, 5, 5, 5, 2, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 5, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 5, 5, 6, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 6, 5, 5, 5, 5, 5, 6, 6, 6, 6, 2, 2, 2, 5, 5, 5, 5, 
+    6, 2, 2, 2, 6, 2, 2, 2, 2, 6, 6, 6, 6, 6, 6, 6, 2, 2, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 5, 5, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 6, 5, 5, 5, 5, 5, 
+    5, 5, 5, 6, 5, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 5, 5, 
+    5, 5, 6, 6, 6, 6, 5, 2, 5, 5, 5, 5, 5, 6, 2, 5, 5, 6, 5, 5, 2, 2, 6, 
+    6, 6, 6, 6, 6, 6, 5, 5, 6, 6, 6, 6, 6, 6, 6, 5, 6, 5, 5, 6, 6, 6, 6, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 5, 5, 6, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 5, 5, 5, 2, 
+    2, 2, 6, 6, 5, 5, 5, 6, 5, 5, 5, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 6, 
+    6, 6, 6, 6, 6, 6, 6, 5, 5, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 6, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 6, 5, 6, 6, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 2, 6, 
+    6, 6, 6, 5, 5, 5, 2, 2, 2, 6, 2, 6, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 5, 5, 2, 2, 2, 2, 2, 2, 2, 6, 6, 6, 6, 
+    2, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 6, 
+    5, 6, 6, 5, 5, 6, 5, 6, 6, 5, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 6, 5, 5, 
+    5, 5, 5, 5, 5, 6, 5, 5, 5, 6, 5, 6, 5, 6, 6, 5, 5, 6, 5, 5, 5, 5, 2, 
+    5, 5, 2, 2, 2, 2, 2, 2, 6, 2, 2, 5, 6, 6, 5, 5, 5, 5, 5, 6, 5, 6, 2, 
+    2, 2, 2, 2, 2, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 5, 5, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 5, 2, 5, 2, 2, 2, 
+    2, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 2, 
+    2, 2, 2, 2, 5, 2, 2, 5, 5, 5, 5, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 
+    6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 5, 5, 5, 5, 5, 5, 5, 5, 
+    2, 5, 5, 5, 5, 5, 5, 6, 6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    6, 5, 5, 5, 5, 5, 6, 5, 5, 6, 5, 2, 2, 2, 2, 5, 2, 6, 6, 6, 2, 2, 5, 
+    2, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 5, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 
+    5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 6, 
+    5, 5, 5, 5, 6, 6, 5, 5, 5, 5, 5, 5, 5, 6, 5, 6, 5, 5, 5, 5, 6, 6, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 6, 5, 5, 5, 5, 6, 
+    6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 6, 5, 5, 5, 5, 6, 6, 5, 5, 5, 5, 5, 
+    5, 5, 6, 5, 6, 5, 5, 5, 5, 6, 6, 5, 5, 5, 5, 5, 5, 5, 6, 5, 5, 5, 5, 
+    5, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 6, 5, 5, 5, 5, 6, 6, 5, 
+    5, 5, 5, 5, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 
+    6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 2, 2, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    6, 5, 5, 5, 5, 2, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 5, 5, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 6, 5, 5, 5, 6, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5, 5, 
+    5, 2, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5, 5, 2, 
+    5, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 7, 2, 2, 2, 
+    2, 7, 7, 7, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 
+    6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 10, 5, 10, 5, 10, 5, 
+    10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 
+    5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 
+    5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 
+    5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 
+    5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 
+    5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 
+    5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 
+    5, 10, 5, 10, 5, 59, 60, 61, 62, 63, 64, 6, 6, 6, 6, 10, 5, 10, 5, 
+    10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 
+    5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 
+    5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 
+    5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 5, 10, 
+    5, 10, 5, 10, 5, 10, 5, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 65, 
+    65, 65, 65, 65, 65, 65, 65, 5, 5, 5, 5, 5, 5, 6, 6, 65, 65, 65, 65, 
+    65, 65, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 65, 65, 65, 65, 65, 65, 65, 65, 
+    5, 5, 5, 5, 5, 5, 5, 5, 65, 65, 65, 65, 65, 65, 65, 65, 5, 5, 5, 5, 
+    5, 5, 6, 6, 65, 65, 65, 65, 65, 65, 6, 6, 66, 5, 67, 5, 68, 5, 69, 
+    5, 6, 65, 6, 65, 6, 65, 6, 65, 5, 5, 5, 5, 5, 5, 5, 5, 65, 65, 65, 
+    65, 65, 65, 65, 65, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 
+    70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
+    87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
+    103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
+    117, 5, 5, 118, 119, 120, 6, 121, 122, 65, 65, 123, 123, 124, 2, 125, 
+    2, 2, 2, 126, 127, 128, 6, 129, 130, 131, 131, 131, 131, 132, 2, 2, 
+    2, 5, 5, 133, 134, 6, 6, 135, 136, 65, 65, 137, 137, 6, 2, 2, 2, 5, 
+    5, 138, 139, 140, 5, 141, 142, 65, 65, 143, 143, 144, 2, 2, 2, 6, 6, 
+    145, 146, 147, 6, 148, 149, 150, 150, 151, 151, 152, 2, 2, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 153, 153, 153, 154, 58, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 6, 6, 6, 
+    6, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 6, 6, 2, 6, 6, 6, 
+    6, 6, 6, 6, 6, 153, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 
+    5, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 2, 2, 2, 2, 2, 2, 2, 2, 155, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 2, 2, 156, 157, 2, 2, 2, 158, 2, 159, 5, 160, 161, 
+    162, 5, 5, 163, 164, 165, 5, 2, 163, 166, 2, 2, 167, 167, 167, 168, 
+    169, 2, 2, 170, 171, 172, 2, 168, 2, 173, 2, 174, 2, 175, 176, 177, 
+    177, 2, 5, 178, 178, 2, 179, 5, 5, 5, 5, 5, 5, 2, 6, 6, 5, 180, 181, 
+    2, 2, 2, 2, 2, 182, 5, 5, 5, 5, 2, 2, 6, 6, 6, 6, 6, 6, 6, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 183, 183, 183, 183, 183, 183, 183, 183, 
+    183, 183, 183, 183, 183, 183, 183, 183, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 
+    184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 
+    2, 2, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 2, 2, 2, 2, 6, 2, 2, 2, 2, 6, 6, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 2, 6, 2, 2, 2, 2, 6, 6, 6, 2, 6, 
+    2, 2, 2, 2, 2, 2, 2, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 6, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 5, 5, 5, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 2, 2, 
+    5, 5, 5, 5, 5, 2, 2, 2, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 6, 6, 2, 2, 2, 2, 5, 5, 5, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 5, 5, 5, 5, 6, 6, 6, 6, 6, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 185, 5, 
+    186, 5, 187, 5, 6, 6, 6, 6, 5, 5, 5, 5, 5, 188, 189, 190, 191, 192, 
+    193, 194, 195, 5, 5, 196, 197, 198, 5, 5, 5, 199, 200, 201, 202, 203, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 204, 205, 
+    206, 207, 5, 5, 5, 5, 5, 5, 5, 208, 209, 210, 211, 212, 213, 214, 215, 
+    216, 217, 218, 219, 220, 221, 5, 222, 5, 5, 5, 223, 224, 225, 5, 226, 
+    5, 227, 228, 5, 5, 5, 5, 5, 5, 5, 5, 229, 5, 230, 231, 5, 232, 233, 
+    6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 234, 235, 236, 237, 238, 239, 240, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 241, 242, 243, 244, 245, 6, 6, 6, 
+    6, 6, 57, 2, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 2, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 6, 57, 57, 57, 57, 57, 6, 57, 
+    6, 57, 57, 6, 57, 57, 6, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    6, 6, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 6, 6, 6, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 2, 2, 2, 2, 6, 6, 6, 6, 57, 57, 57, 57, 
+    57, 6, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 
+    57, 6, 6, 153, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 
+    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 
+    2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 5, 5, 5, 5, 5, 5, 6, 6, 
+    5, 5, 5, 5, 5, 5, 6, 6, 5, 5, 5, 5, 5, 5, 6, 6, 5, 5, 5, 6, 6, 6, 2, 
+    2, 2, 2, 2, 2, 2, 6, 2, 2, 2, 2, 2, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 5, 5, 5, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 246, 246, 246, 246, 246, 246, 246, 
+    246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 
+    246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 
+    246, 246, 246, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 
+    6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 2, 2, 2, 2, 2, 2, 2, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 247, 
+    247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 
+    247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 248, 
+    248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 
+    248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 5, 5, 5, 5, 
+    5, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 249, 
+    249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 
+    249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 250, 
+    6, 250, 250, 6, 6, 250, 6, 6, 250, 250, 6, 6, 250, 250, 250, 250, 6, 
+    250, 250, 250, 250, 250, 250, 250, 250, 5, 5, 5, 5, 6, 5, 6, 5, 5, 
+    5, 5, 6, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 251, 251, 251, 251, 
+    251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 
+    251, 251, 251, 251, 251, 251, 251, 251, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 252, 252, 6, 252, 
+    252, 252, 252, 6, 6, 252, 252, 252, 252, 252, 252, 252, 252, 6, 252, 
+    252, 252, 252, 252, 252, 252, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 253, 253, 6, 253, 253, 253, 
+    253, 6, 253, 253, 253, 253, 253, 6, 253, 6, 6, 6, 253, 253, 253, 253, 
+    253, 253, 253, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 254, 254, 254, 254, 254, 254, 254, 254, 
+    254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 
+    254, 254, 254, 254, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 255, 255, 255, 255, 255, 255, 255, 255, 
+    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
+    255, 255, 255, 255, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 256, 256, 256, 256, 256, 256, 256, 256, 
+    256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 
+    256, 256, 256, 256, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 257, 257, 257, 257, 257, 257, 257, 257, 
+    257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 
+    257, 257, 257, 257, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 258, 258, 258, 258, 258, 258, 258, 258, 
+    258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 
+    258, 258, 258, 258, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 259, 259, 259, 259, 259, 259, 259, 259, 
+    259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 
+    259, 259, 259, 259, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 260, 260, 260, 260, 260, 
+    260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 261, 260, 
+    260, 260, 260, 260, 260, 260, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 262, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 263, 
+    263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 
+    263, 263, 264, 263, 263, 263, 263, 263, 263, 263, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 265, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 
+    266, 266, 266, 266, 266, 266, 267, 266, 266, 266, 266, 266, 266, 266, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 268, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 269, 269, 269, 269, 269, 269, 269, 
+    269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 270, 269, 269, 269, 
+    269, 269, 269, 269, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 271, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 272, 272, 272, 
+    272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 
+    273, 272, 272, 272, 272, 272, 272, 272, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 274, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
+    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 
+    154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 6, 6
+};
+
+/*
+ * Each group represents a unique set of character attributes.  The attributes
+ * are encoded into a 32-bit value as follows:
+ *
+ * Bit  0	A.1 | C.1.2 | C.2.2 | C.3 -- C.9
+ *
+ * Bit  1	C.1.1
+ *
+ * Bit  2	C.2.1
+ *
+ * Bit  3	B.1
+ *
+ * Bit  4	D.1
+ *
+ * Bit  5	D.2
+ *
+ * Bit  6	XNP
+ *
+ * Bit  7	Case maps to several characters
+ *
+ * Bits 8-10	Reserved for future use.
+ *
+ * Bits 11-31	Case delta: delta for case conversions.  This should be the
+ *			    highest field so we can easily sign extend.
+ */
+
+static int groups[] = {
+    4, 2, 0, 64, 65568, 32, 1, 8, 1587232, 160, 2080, 2208, 4256, 
+    -247776, -548832, 430112, 421920, 419872, 161824, 413728, 415776, 
+    423968, 432160, 428064, 436256, 438304, 446496, 444448, 448544, 
+    4128, 6304, -198624, -114656, -266208, 237568, 8352, 77856, 75808, 
+    131104, 129056, 10400, 12448, -61408, -51168, -26592, -12256, 
+    -18400, -30688, -45024, -110560, -98272, -96224, -122848, -131040, 
+    163872, 98336, 14496, 16, 17, 16544, 18592, 20640, 22688, 24736, 
+    -118752, -16352, 26784, 28832, 30880, 32928, 34976, 37024, 39072, 
+    41120, 43168, 45216, 47264, 49312, 51360, 53408, 55456, 57504, 
+    59552, 61600, 63648, 65696, 67744, 69792, 71840, 73888, 75936, 
+    77984, 80032, 82080, 84128, 86176, 88224, 90272, 92320, 94368, 
+    96416, 98464, 100512, 102560, 104608, 106656, 108704, 110752, 
+    112800, 114848, 116896, 118944, 120992, 123040, 125088, 127136, 
+    129184, 131232, 133280, 135328, 137376, 139424, 141472, -151520, 
+    143520, -14690272, 145568, 147616, 149664, 151712, 153760, -176096, 
+    155808, 157856, 159904, 161952, 164000, -204768, 166048, 168096, 
+    170144, 172192, 174240, -229344, -14304, 176288, 178336, 180384, 
+    182432, 184480, -262112, -258016, 186528, 9, 33, 188544, -17102816, 
+    190592, -16080864, 192640, -17111008, -17113056, -17115104, -17119200, 
+    -17121248, -17117152, 194688, -17123296, -17125344, -17127392, 
+    196736, 198784, 200832, -15394784, -17133536, -17168352, -16920544, 
+    -17190880, -17192928, -17182688, -15488992, -15464416, -17237984, 
+    32800, 53280, 202912, 204960, 207008, 209056, 211104, 213152, 
+    215200, 217248, 219296, 221344, 223392, 225440, 227488, 229536, 
+    231584, 233632, 235680, 237728, 239776, 241824, 243872, 245920, 
+    247968, 250016, 252064, 254112, 256160, 258208, 260256, 262304, 
+    264352, 266400, 268448, 270496, 272544, 274592, 276640, 278688, 
+    280736, 282784, 284832, 286880, 288928, 290976, 293024, 295072, 
+    297120, 299168, 301216, 303264, 305312, 307360, 309408, 311456, 
+    313504, 315552, 317600, 319648, 321696, 323744, 325792, 81952, 
+    -245168096, -245274592, -245381088, -245487584, -245594080, -245700576, 
+    -245807072, -245913568, -246020064, -246126560, -246233056, -246339552, 
+    -246446048, -244824032, -244844512, -244875232, -244942816, -244963296, 
+    -244994016, -245061600, -245082080, -245112800, -245180384, -245200864, 
+    -245231584, -245299168, -245319648, -245350368
+};
+
+/*
+ * Table for characters that lowercased to multiple ones
+ */
+
+static int multiCaseTable[][4] = {
+    {2, 115, 115}, 
+    {2, 105, 775}, 
+    {2, 700, 110}, 
+    {2, 106, 780}, 
+    {2, 32, 953}, 
+    {3, 953, 776, 769}, 
+    {3, 965, 776, 769}, 
+    {2, 1381, 1410}, 
+    {2, 104, 817}, 
+    {2, 116, 776}, 
+    {2, 119, 778}, 
+    {2, 121, 778}, 
+    {2, 97, 702}, 
+    {2, 965, 787}, 
+    {3, 965, 787, 768}, 
+    {3, 965, 787, 769}, 
+    {3, 965, 787, 834}, 
+    {2, 7936, 953}, 
+    {2, 7937, 953}, 
+    {2, 7938, 953}, 
+    {2, 7939, 953}, 
+    {2, 7940, 953}, 
+    {2, 7941, 953}, 
+    {2, 7942, 953}, 
+    {2, 7943, 953}, 
+    {2, 7936, 953}, 
+    {2, 7937, 953}, 
+    {2, 7938, 953}, 
+    {2, 7939, 953}, 
+    {2, 7940, 953}, 
+    {2, 7941, 953}, 
+    {2, 7942, 953}, 
+    {2, 7943, 953}, 
+    {2, 7968, 953}, 
+    {2, 7969, 953}, 
+    {2, 7970, 953}, 
+    {2, 7971, 953}, 
+    {2, 7972, 953}, 
+    {2, 7973, 953}, 
+    {2, 7974, 953}, 
+    {2, 7975, 953}, 
+    {2, 7968, 953}, 
+    {2, 7969, 953}, 
+    {2, 7970, 953}, 
+    {2, 7971, 953}, 
+    {2, 7972, 953}, 
+    {2, 7973, 953}, 
+    {2, 7974, 953}, 
+    {2, 7975, 953}, 
+    {2, 8032, 953}, 
+    {2, 8033, 953}, 
+    {2, 8034, 953}, 
+    {2, 8035, 953}, 
+    {2, 8036, 953}, 
+    {2, 8037, 953}, 
+    {2, 8038, 953}, 
+    {2, 8039, 953}, 
+    {2, 8032, 953}, 
+    {2, 8033, 953}, 
+    {2, 8034, 953}, 
+    {2, 8035, 953}, 
+    {2, 8036, 953}, 
+    {2, 8037, 953}, 
+    {2, 8038, 953}, 
+    {2, 8039, 953}, 
+    {2, 8048, 953}, 
+    {2, 945, 953}, 
+    {2, 940, 953}, 
+    {2, 945, 834}, 
+    {3, 945, 834, 953}, 
+    {2, 945, 953}, 
+    {2, 8052, 953}, 
+    {2, 951, 953}, 
+    {2, 942, 953}, 
+    {2, 951, 834}, 
+    {3, 951, 834, 953}, 
+    {2, 951, 953}, 
+    {3, 953, 776, 768}, 
+    {3, 953, 776, 769}, 
+    {2, 953, 834}, 
+    {3, 953, 776, 834}, 
+    {3, 965, 776, 768}, 
+    {3, 965, 776, 769}, 
+    {2, 961, 787}, 
+    {2, 965, 834}, 
+    {3, 965, 776, 834}, 
+    {2, 8060, 953}, 
+    {2, 969, 953}, 
+    {2, 974, 953}, 
+    {2, 969, 834}, 
+    {3, 969, 834, 953}, 
+    {2, 969, 953}, 
+    {2, 114, 115}, 
+    {2, 176, 99}, 
+    {2, 176, 102}, 
+    {2, 110, 111}, 
+    {2, 115, 109}, 
+    {3, 116, 101, 108}, 
+    {2, 116, 109}, 
+    {3, 104, 112, 97}, 
+    {2, 97, 117}, 
+    {2, 111, 118}, 
+    {2, 112, 97}, 
+    {2, 110, 97}, 
+    {2, 956, 97}, 
+    {2, 109, 97}, 
+    {2, 107, 97}, 
+    {2, 107, 98}, 
+    {2, 109, 98}, 
+    {2, 103, 98}, 
+    {2, 112, 102}, 
+    {2, 110, 102}, 
+    {2, 956, 102}, 
+    {2, 104, 122}, 
+    {3, 107, 104, 122}, 
+    {3, 109, 104, 122}, 
+    {3, 103, 104, 122}, 
+    {3, 116, 104, 122}, 
+    {2, 112, 97}, 
+    {3, 107, 112, 97}, 
+    {3, 109, 112, 97}, 
+    {3, 103, 112, 97}, 
+    {2, 112, 118}, 
+    {2, 110, 118}, 
+    {2, 956, 118}, 
+    {2, 109, 118}, 
+    {2, 107, 118}, 
+    {2, 109, 118}, 
+    {2, 112, 119}, 
+    {2, 110, 119}, 
+    {2, 956, 119}, 
+    {2, 109, 119}, 
+    {2, 107, 119}, 
+    {2, 109, 119}, 
+    {2, 107, 969}, 
+    {2, 109, 969}, 
+    {2, 98, 113}, 
+    {3, 99, 111, 46}, 
+    {2, 100, 98}, 
+    {2, 103, 121}, 
+    {2, 104, 112}, 
+    {2, 107, 107}, 
+    {2, 107, 109}, 
+    {2, 112, 104}, 
+    {3, 112, 112, 109}, 
+    {2, 112, 114}, 
+    {2, 115, 118}, 
+    {2, 119, 98}, 
+    {2, 102, 102}, 
+    {2, 102, 105}, 
+    {2, 102, 108}, 
+    {3, 102, 102, 105}, 
+    {3, 102, 102, 108}, 
+    {2, 115, 116}, 
+    {2, 115, 116}, 
+    {2, 1396, 1398}, 
+    {2, 1396, 1381}, 
+    {2, 1396, 1387}, 
+    {2, 1406, 1398}, 
+    {2, 1396, 1389}
+};
+
+/*
+ * The following constants are used to determine the category of a
+ * Unicode character.
+ */
+
+#define ACMask  (1 << 0)
+#define C11Mask (1 << 1)
+#define C21Mask (1 << 2)
+#define B1Mask  (1 << 3)
+#define D1Mask  (1 << 4)
+#define D2Mask  (1 << 5)
+#define XNPMask (1 << 6)
+#define MCMask  (1 << 7)
+
+/*
+ * The following macros extract the fields of the character info.  The
+ * GetDelta() macro is complicated because we can't rely on the C compiler
+ * to do sign extension on right shifts.
+ */
+
+#define GetCaseType(info) (((info) & 0xE0) >> 5)
+#define GetCategory(info) ((info) & 0x1F)
+#define GetDelta(info) (((info) > 0) ? ((info) >> 11) : (~(~((info)) >> 11)))
+#define GetMC(info) (multiCaseTable[GetDelta(info)])
+
+/*
+ * This macro extracts the information about a character from the
+ * Unicode character tables.
+ */
+
+#define GetUniCharInfo(ch) (groups[groupMap[(pageMap[(((int)(ch)) & 0x1fffff) >> OFFSET_BITS] << OFFSET_BITS) | ((ch) & ((1 << OFFSET_BITS)-1))]])
+
diff -r d551623afde5 deps/exmpp/c_src/stringprep_uni_norm.h
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/c_src/stringprep_uni_norm.h	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,3263 @@
+/*
+ * uni_norm.c --
+ *
+ *	Declarations of Unicode character information tables.  This file is
+ *	automatically generated by the uni_parse2.tcl script.  Do not
+ *	modify this file by hand.
+ *
+ * Copyright (c) 1998 by Scriptics Corporation.
+ * All rights reserved.
+ *
+ * Modified for ejabberd by Alexey Shchepin
+ *
+ */
+
+/*
+ * A 16-bit Unicode character is split into two parts in order to index
+ * into the following tables.  The lower CCLASS_OFFSET_BITS comprise an offset
+ * into a page of characters.  The upper bits comprise the page number.
+ */
+
+#define CCLASS_OFFSET_BITS 8
+
+/*
+ * The pageMap is indexed by page number and returns an alternate page number
+ * that identifies a unique page of characters.  Many Unicode characters map
+ * to the same alternate page number.
+ */
+
+static unsigned char cclassPageMap[] = {
+    0, 0, 0, 1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 0, 0, 0, 0, 
+    0, 0, 14, 15, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 18, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+};
+
+/*
+ * The cclassGroupMap is indexed by combining the alternate page number with
+ * the page offset and returns a combining class number.
+ */
+
+static unsigned char cclassGroupMap[] = {
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 
+    230, 230, 230, 230, 230, 230, 230, 230, 230, 232, 220, 220, 220, 220, 
+    232, 216, 220, 220, 220, 220, 220, 202, 202, 220, 220, 220, 220, 202, 
+    202, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1, 1, 1, 
+    1, 1, 220, 220, 220, 220, 230, 230, 230, 230, 230, 230, 230, 230, 240, 
+    230, 220, 220, 220, 230, 230, 230, 220, 220, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 234, 234, 233, 230, 230, 230, 230, 230, 
+    230, 230, 230, 230, 230, 230, 230, 230, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 230, 230, 230, 230, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 220, 230, 230, 230, 230, 220, 230, 230, 
+    230, 222, 220, 230, 230, 230, 230, 230, 230, 0, 220, 220, 220, 220, 
+    220, 230, 230, 220, 230, 230, 222, 228, 230, 10, 11, 12, 13, 14, 15, 
+    16, 17, 18, 19, 0, 20, 21, 22, 0, 23, 0, 24, 25, 0, 230, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 29, 30, 31, 32, 
+    33, 34, 230, 230, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 230, 
+    230, 230, 230, 230, 230, 230, 0, 0, 230, 230, 230, 230, 220, 230, 0, 
+    0, 230, 230, 0, 220, 230, 230, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 230, 220, 230, 230, 220, 230, 230, 220, 
+    220, 220, 230, 220, 220, 230, 220, 230, 230, 230, 220, 230, 220, 230, 
+    220, 230, 220, 230, 230, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 230, 220, 230, 
+    230, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 84, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 103, 9, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 107, 107, 107, 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 118, 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 122, 122, 122, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 220, 220, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 220, 0, 220, 0, 216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 129, 130, 0, 132, 
+    0, 0, 0, 0, 0, 130, 130, 130, 130, 0, 0, 130, 0, 230, 230, 9, 0, 230, 
+    230, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 220, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 9, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 228, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 230, 230, 1, 
+    1, 230, 230, 230, 230, 1, 1, 1, 230, 230, 0, 0, 0, 0, 230, 0, 0, 0, 
+    1, 1, 230, 220, 230, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 218, 228, 232, 222, 224, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 230, 230, 230, 230, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 216, 216, 1, 1, 1, 0, 0, 0, 226, 216, 216, 
+    216, 216, 216, 0, 0, 0, 0, 0, 0, 0, 0, 220, 220, 220, 220, 220, 220, 
+    220, 220, 0, 0, 230, 230, 230, 230, 230, 220, 220, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 230, 230, 230, 230, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+};
+
+#define GetUniCharCClass(ch) (cclassGroupMap[(cclassPageMap[(((int)(ch)) & 0x1fffff) >> CCLASS_OFFSET_BITS] << CCLASS_OFFSET_BITS) | ((ch) & ((1 << CCLASS_OFFSET_BITS)-1))])
+
+
+#define DECOMP_OFFSET_BITS 8
+
+/*
+ * The pageMap is indexed by page number and returns an alternate page number
+ * that identifies a unique page of characters.  Many Unicode characters map
+ * to the same alternate page number.
+ */
+
+static unsigned char decompPageMap[] = {
+    0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 16, 17, 18, 19, 20, 21, 22, 7, 7, 7, 7, 
+    7, 23, 7, 7, 7, 24, 25, 26, 27, 28, 29, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 30, 31, 32, 33, 34, 35, 36, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 37, 7, 7, 38, 39, 40, 
+    41, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 42, 43, 44, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
+    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7
+};
+
+/*
+ * The decompGroupMap is indexed by combining the alternate page number with
+ * the page offset and returns a group number that identifies a length and
+ * shift of decomposition sequence in decompList
+ */
+
+static int decompGroupMap[] = {
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, 65536, -1, -1, -1, -1, -1, -1, -1, 131073, 
+    -1, 65539, -1, -1, -1, -1, 131076, -1, -1, 65542, 65543, 131080, 65546, 
+    -1, -1, 131083, 65549, 65550, -1, 196623, 196626, 196629, -1, 131096, 
+    131098, 131100, 131102, 131104, 131106, -1, 131108, 131110, 131112, 
+    131114, 131116, 131118, 131120, 131122, 131124, -1, 131126, 131128, 
+    131130, 131132, 131134, 131136, -1, -1, 131138, 131140, 131142, 131144, 
+    131146, -1, -1, 131148, 131150, 131152, 131154, 131156, 131158, -1, 
+    131160, 131162, 131164, 131166, 131168, 131170, 131172, 131174, 131176, 
+    -1, 131178, 131180, 131182, 131184, 131186, 131188, -1, -1, 131190, 
+    131192, 131194, 131196, 131198, -1, 131200, 131202, 131204, 131206, 
+    131208, 131210, 131212, 131214, 131216, 131218, 131220, 131222, 131224, 
+    131226, 131228, 131230, 131232, -1, -1, 131234, 131236, 131238, 131240, 
+    131242, 131244, 131246, 131248, 131250, 131252, 131254, 131256, 131258, 
+    131260, 131262, 131264, 131266, 131268, 131270, 131272, -1, -1, 131274, 
+    131276, 131278, 131280, 131282, 131284, 131286, 131288, 131290, -1, 
+    131292, 131294, 131296, 131298, 131300, 131302, -1, 131304, 131306, 
+    131308, 131310, 131312, 131314, 131316, 131318, -1, -1, 131320, 131322, 
+    131324, 131326, 131328, 131330, 131332, -1, -1, 131334, 131336, 131338, 
+    131340, 131342, 131344, -1, -1, 131346, 131348, 131350, 131352, 131354, 
+    131356, 131358, 131360, 131362, 131364, 131366, 131368, 131370, 131372, 
+    131374, 131376, 131378, 131380, -1, -1, 131382, 131384, 131386, 131388, 
+    131390, 131392, 131394, 131396, 131398, 131400, 131402, 131404, 131406, 
+    131408, 131410, 131412, 131414, 131416, 131418, 131420, 131422, 131424, 
+    131426, 65892, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, 131429, 131431, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, 131433, 131435, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, 196973, 196976, 196979, 131446, 131448, 
+    131450, 131452, 131454, 131456, 131458, 131460, 131462, 131464, 131466, 
+    131468, 131470, 131472, 197010, 197013, 197016, 197019, 197022, 197025, 
+    197028, 197031, -1, 197034, 197037, 197040, 197043, 131510, 131512, 
+    -1, -1, 131514, 131516, 131518, 131520, 131522, 131524, 197062, 197065, 
+    131532, 131534, 131536, 131538, 131540, 131542, 131544, 131546, -1, 
+    -1, 131548, 131550, 197088, 197091, 131558, 131560, 131562, 131564, 
+    131566, 131568, 131570, 131572, 131574, 131576, 131578, 131580, 131582, 
+    131584, 131586, 131588, 131590, 131592, 131594, 131596, 131598, 131600, 
+    131602, 131604, 131606, 131608, 131610, 131612, 131614, 131616, 131618, 
+    131620, -1, -1, 131622, 131624, -1, -1, -1, -1, -1, -1, 131626, 131628, 
+    131630, 131632, 197170, 197173, 197176, 197179, 131646, 131648, 197186, 
+    197189, 131656, 131658, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 66124, 66125, 66126, 66127, 
+    66128, 66129, 66130, 66131, 66132, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, 131669, 131671, 131673, 131675, 131677, 131679, 
+    -1, -1, 66145, 66146, 65892, 66147, 66148, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    66149, 66150, -1, 66151, 131688, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, 66154, -1, -1, -1, -1, -1, 131691, -1, -1, -1, 66157, 
+    -1, -1, -1, -1, -1, 131080, 197230, 131697, 66163, 131700, 131702, 
+    131704, -1, 131706, -1, 131708, 131710, 197248, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, 131715, 131717, 131719, 131721, 131723, 131725, 197263, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, 131730, 131732, 131734, 131736, 131738, 
+    -1, 66204, 66205, 66206, 131708, 131717, 66207, 66208, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, 66209, 66210, 66211, -1, 66212, 66213, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, 131750, 131752, -1, 131754, -1, -1, 
+    -1, 131756, -1, -1, -1, -1, 131758, 131760, 131762, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, 131764, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, 131766, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 131768, 131770, -1, 
+    131772, -1, -1, -1, 131774, -1, -1, -1, -1, 131776, 131778, 131780, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, 131782, 131784, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 131786, 
+    131788, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 131790, 
+    131792, 131794, 131796, -1, -1, 131798, 131800, -1, -1, 131802, 131804, 
+    131806, 131808, 131810, 131812, -1, -1, 131814, 131816, 131818, 131820, 
+    131822, 131824, -1, -1, 131826, 131828, 131830, 131832, 131834, 131836, 
+    131838, 131840, 131842, 131844, 131846, 131848, -1, -1, 131850, 131852, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, 131854, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, 131856, 131858, 131860, 131862, 131864, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 131866, 131868, 131870, 131872, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, 131874, -1, 131876, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, 131878, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 131880, -1, -1, -1, -1, -1, 
+    -1, -1, 131882, -1, -1, 131884, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, 131886, 131888, 131890, 131892, 
+    131894, 131896, 131898, 131900, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 131902, 131904, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 131906, 
+    131908, -1, 131910, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, 131912, -1, -1, 131914, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, 131916, 131918, 131920, -1, -1, 
+    131922, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 131924, -1, 
+    -1, 131926, 131928, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, 131930, 131932, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 131934, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 131936, 131938, 
+    131940, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, 131942, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, 131944, -1, -1, -1, -1, -1, -1, 131946, 
+    131948, -1, 131950, 197488, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 131955, 131957, 
+    131959, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, 131961, -1, 131963, 197501, 131968, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 131970, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, 131972, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 131974, 
+    131976, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 66442, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, 131979, -1, -1, -1, -1, -1, -1, -1, -1, -1, 131981, -1, -1, 
+    -1, -1, 131983, -1, -1, -1, -1, 131985, -1, -1, -1, -1, 131987, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 131989, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, 131991, -1, 131993, 131995, 197533, 132000, 197538, 
+    -1, -1, -1, -1, -1, -1, -1, 132005, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, 132007, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, 132009, -1, -1, -1, -1, 132011, -1, -1, -1, -1, 132013, 
+    -1, -1, -1, -1, 132015, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, 132017, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, 132019, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, 132021, 132023, 132025, 132027, 132029, 
+    132031, 132033, 132035, 197573, 197576, 132043, 132045, 132047, 132049, 
+    132051, 132053, 132055, 132057, 132059, 132061, 197599, 197602, 197605, 
+    197608, 132075, 132077, 132079, 132081, 197619, 197622, 132089, 132091, 
+    132093, 132095, 132097, 132099, 132101, 132103, 132105, 132107, 132109, 
+    132111, 132113, 132115, 132117, 132119, 197657, 197660, 132127, 132129, 
+    132131, 132133, 132135, 132137, 132139, 132141, 197679, 197682, 132149, 
+    132151, 132153, 132155, 132157, 132159, 132161, 132163, 132165, 132167, 
+    132169, 132171, 132173, 132175, 132177, 132179, 132181, 132183, 197721, 
+    197724, 197727, 197730, 197733, 197736, 197739, 197742, 132209, 132211, 
+    132213, 132215, 132217, 132219, 132221, 132223, 197761, 197764, 132231, 
+    132233, 132235, 132237, 132239, 132241, 197779, 197782, 197785, 197788, 
+    197791, 197794, 132261, 132263, 132265, 132267, 132269, 132271, 132273, 
+    132275, 132277, 132279, 132281, 132283, 132285, 132287, 197825, 197828, 
+    197831, 197834, 132301, 132303, 132305, 132307, 132309, 132311, 132313, 
+    132315, 132317, 132319, 132321, 132323, 132325, 132327, 132329, 132331, 
+    132333, 132335, 132337, 132339, 132341, 132343, 132345, 132347, 132349, 
+    132351, 132353, 132355, 132357, 132359, 132361, 132237, -1, -1, -1, 
+    -1, 132363, 132365, 132367, 132369, 197907, 197910, 197913, 197916, 
+    197919, 197922, 197925, 197928, 197931, 197934, 197937, 197940, 197943, 
+    197946, 197949, 197952, 197955, 197958, 197961, 197964, 132431, 132433, 
+    132435, 132437, 132439, 132441, 197979, 197982, 197985, 197988, 197991, 
+    197994, 197997, 198000, 198003, 198006, 132473, 132475, 132477, 132479, 
+    132481, 132483, 132485, 132487, 198025, 198028, 198031, 198034, 198037, 
+    198040, 198043, 198046, 198049, 198052, 198055, 198058, 198061, 198064, 
+    198067, 198070, 198073, 198076, 198079, 198082, 132549, 132551, 132553, 
+    132555, 198093, 198096, 198099, 198102, 198105, 198108, 198111, 198114, 
+    198117, 198120, 132587, 132589, 132591, 132593, 132595, 132597, 132599, 
+    132601, -1, -1, -1, -1, -1, -1, 132603, 132605, 198143, 198146, 198149, 
+    198152, 198155, 198158, 132625, 132627, 198165, 198168, 198171, 198174, 
+    198177, 198180, 132647, 132649, 198187, 198190, 198193, 198196, -1, 
+    -1, 132663, 132665, 198203, 198206, 198209, 198212, -1, -1, 132679, 
+    132681, 198219, 198222, 198225, 198228, 198231, 198234, 132701, 132703, 
+    198241, 198244, 198247, 198250, 198253, 198256, 132723, 132725, 198263, 
+    198266, 198269, 198272, 198275, 198278, 132745, 132747, 198285, 198288, 
+    198291, 198294, 198297, 198300, 132767, 132769, 198307, 198310, 198313, 
+    198316, -1, -1, 132783, 132785, 198323, 198326, 198329, 198332, -1, 
+    -1, 132799, 132801, 198339, 198342, 198345, 198348, 198351, 198354, 
+    -1, 132821, -1, 198359, -1, 198362, -1, 198365, 132832, 132834, 198372, 
+    198375, 198378, 198381, 198384, 198387, 132854, 132856, 198394, 198397, 
+    198400, 198403, 198406, 198409, 132876, 131719, 132878, 131721, 132880, 
+    131723, 132882, 131725, 132884, 131734, 132886, 131736, 132888, 131738, 
+    -1, -1, 198426, 198429, 263968, 263972, 263976, 263980, 263984, 263988, 
+    198456, 198459, 263998, 264002, 264006, 264010, 264014, 264018, 198486, 
+    198489, 264028, 264032, 264036, 264040, 264044, 264048, 198516, 198519, 
+    264058, 264062, 264066, 264070, 264074, 264078, 198546, 198549, 264088, 
+    264092, 264096, 264100, 264104, 264108, 198576, 198579, 264118, 264122, 
+    264126, 264130, 264134, 264138, 133070, 133072, 198610, 133077, 198615, 
+    -1, 133082, 198620, 133087, 133089, 133091, 131697, 133093, 133095, 
+    67561, 133095, 133098, 198636, 198639, 133106, 198644, -1, 133111, 
+    198649, 133116, 131700, 133118, 131702, 133120, 198658, 198661, 198664, 
+    133131, 133133, 198671, 197248, -1, -1, 133138, 198676, 133143, 133145, 
+    133147, 131704, -1, 198685, 198688, 198691, 133158, 133160, 198698, 
+    197263, 133165, 133167, 133169, 198707, 133174, 133176, 133178, 131708, 
+    133180, 198718, 197230, 67649, -1, -1, 198722, 133189, 198727, -1, 
+    133194, 198732, 133199, 131706, 133201, 131710, 133203, 131080, 133205, 
+    -1, 65536, 65536, 65536, 65536, 65536, 65536, 65536, 65536, 65536, 
+    65536, 65536, -1, -1, -1, -1, -1, -1, 67671, -1, -1, -1, -1, -1, 133208, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 67674, 133211, 198749, 
+    -1, -1, -1, -1, -1, -1, -1, -1, 65536, -1, -1, -1, 133216, 198754, 
+    -1, 133221, 198759, -1, -1, -1, -1, 133226, -1, 133228, -1, -1, -1, 
+    -1, -1, -1, -1, -1, 133230, 133232, 133234, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, 264308, -1, -1, -1, -1, -1, -1, -1, 65536, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 67704, 
+    67705, -1, -1, 67706, 67707, 67708, 67709, 67710, 67711, 67712, 67713, 
+    67714, 67715, 67716, 67717, 67704, 65549, 65542, 65543, 67706, 67707, 
+    67708, 67709, 67710, 67711, 67712, 67713, 67714, 67715, 67716, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, 133254, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 198792, 198795, 67726, 
+    133263, -1, 198801, 198804, 67735, -1, 133272, 67738, 67739, 67739, 
+    67739, 66124, 67740, 67741, 67741, 67742, 66146, -1, 67743, 133280, 
+    -1, -1, 67746, 67747, 67748, 67748, 67748, -1, -1, 133285, 198823, 
+    133290, -1, 67756, -1, 67757, -1, 67756, -1, 67758, 131106, 67759, 
+    67726, -1, 67760, 67761, 67762, -1, 67763, 65550, 67764, 67765, 67766, 
+    67767, 67705, -1, -1, -1, 67768, 67769, 67770, 67771, -1, -1, -1, -1, 
+    67772, 67773, 67760, 67705, 66126, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, 198846, 198849, 198852, 198855, 198858, 198861, 198864, 198867, 
+    198870, 198873, 198876, 198879, 133346, 67741, 133348, 198886, 133353, 
+    67819, 133356, 198894, 264433, 133365, 67831, 133368, 198906, 67742, 
+    67726, 67772, 67763, 67705, 133373, 198911, 133378, 67844, 133381, 
+    198919, 264458, 133390, 66147, 133392, 198930, 66146, 67861, 67773, 
+    67862, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 133399, 133401, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 133403, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 133405, 133407, 
+    133409, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, 133411, -1, -1, -1, -1, 133413, -1, -1, 133415, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, 133417, -1, 133419, -1, -1, -1, -1, -1, 133421, 198959, 
+    -1, 133426, 198964, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, 133431, -1, -1, 133433, -1, -1, 133435, -1, 133437, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, 133439, -1, 133441, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, 133443, 133445, 133447, 133449, 133451, -1, -1, 133453, 
+    133455, -1, -1, 133457, 133459, -1, -1, -1, -1, -1, -1, 133461, 133463, 
+    -1, -1, 133465, 133467, -1, -1, 133469, 133471, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 133473, 133475, 133477, 
+    133479, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 133481, 
+    133483, 133485, 133487, -1, -1, -1, -1, -1, -1, 133489, 133491, 133493, 
+    133495, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 67961, 67962, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 65549, 
+    65542, 65543, 67706, 67707, 67708, 67709, 67710, 67711, 133499, 133501, 
+    133503, 133505, 133507, 133509, 133511, 133513, 133515, 133517, 133519, 
+    199057, 199060, 199063, 199066, 199069, 199072, 199075, 199078, 199081, 
+    264620, 264624, 264628, 264632, 264636, 264640, 264644, 264648, 264652, 
+    264656, 264660, 133592, 133594, 133596, 133598, 133600, 133602, 133604, 
+    133606, 133608, 199146, 199149, 199152, 199155, 199158, 199161, 199164, 
+    199167, 199170, 199173, 199176, 199179, 199182, 199185, 199188, 199191, 
+    199194, 199197, 199200, 199203, 199206, 199209, 199212, 199215, 199218, 
+    199221, 199224, 199227, 199230, 199233, 199236, 199239, 199242, 199245, 
+    199248, 199251, 199254, 68185, 67759, 67726, 67772, 67761, 67762, 68186, 
+    67739, 67741, 68187, 67758, 67742, 67763, 67743, 68188, 67746, 67747, 
+    67748, 68189, 68190, 68191, 67819, 68192, 67831, 68193, 67756, 65539, 
+    68194, 67861, 67773, 67760, 68195, 67738, 66124, 67705, 66126, 68196, 
+    66146, 67862, 67717, 65550, 68197, 68198, 66127, 65892, 68199, 68200, 
+    67844, 66131, 66147, 66132, 68201, 67704, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, 264810, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 199278, 133745, 199283, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 133750, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, 68216, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, 68217, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, 68218, 68219, 68220, 68221, 68222, 68223, 68224, 68225, 
+    68226, 68227, 68228, 68229, 68230, 68231, 68232, 68233, 68234, 68235, 
+    68236, 68237, 68238, 68239, 68240, 68241, 68242, 68243, 68244, 68245, 
+    68246, 68247, 68248, 68249, 68250, 68251, 68252, 68253, 68254, 68255, 
+    68256, 68257, 68258, 68259, 68260, 68261, 68262, 68263, 68264, 68265, 
+    68266, 68267, 68268, 68269, 68270, 68271, 68272, 68273, 68274, 68275, 
+    68276, 68277, 68278, 68279, 68280, 68281, 68282, 68283, 68284, 68285, 
+    68286, 68287, 68288, 68289, 68290, 68291, 68292, 68293, 68294, 68295, 
+    68296, 68297, 68298, 68299, 68300, 68301, 68302, 68303, 68304, 68305, 
+    68306, 68307, 68308, 68309, 68310, 68311, 68312, 68313, 68314, 68315, 
+    68316, 68317, 68318, 68319, 68320, 68321, 68322, 68323, 68324, 68325, 
+    68326, 68327, 68328, 68329, 68330, 68331, 68332, 68333, 68334, 68335, 
+    68336, 68337, 68338, 68339, 68340, 68341, 68342, 68343, 68344, 68345, 
+    68346, 68347, 68348, 68349, 68350, 68351, 68352, 68353, 68354, 68355, 
+    68356, 68357, 68358, 68359, 68360, 68361, 68362, 68363, 68364, 68365, 
+    68366, 68367, 68368, 68369, 68370, 68371, 68372, 68373, 68374, 68375, 
+    68376, 68377, 68378, 68379, 68380, 68381, 68382, 68383, 68384, 68385, 
+    68386, 68387, 68388, 68389, 68390, 68391, 68392, 68393, 68394, 68395, 
+    68396, 68397, 68398, 68399, 68400, 68401, 68402, 68403, 68404, 68405, 
+    68406, 68407, 68408, 68409, 68410, 68411, 68412, 68413, 68414, 68415, 
+    68416, 68417, 68418, 68419, 68420, 68421, 68422, 68423, 68424, 68425, 
+    68426, 68427, 68428, 68429, 68430, 68431, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, 65536, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, 68432, -1, 68241, 68433, 68434, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 133971, -1, 133973, 
+    -1, 133975, -1, 133977, -1, 133979, -1, 133981, -1, 133983, -1, 133985, 
+    -1, 133987, -1, 133989, -1, 133991, -1, 133993, -1, -1, 133995, -1, 
+    133997, -1, 133999, -1, -1, -1, -1, -1, -1, 134001, 134003, -1, 134005, 
+    134007, -1, 134009, 134011, -1, 134013, 134015, -1, 134017, 134019, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, 134021, -1, -1, -1, -1, -1, -1, 134023, 134025, 
+    -1, 134027, 134029, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    134031, -1, 134033, -1, 134035, -1, 134037, -1, 134039, -1, 134041, 
+    -1, 134043, -1, 134045, -1, 134047, -1, 134049, -1, 134051, -1, 134053, 
+    -1, -1, 134055, -1, 134057, -1, 134059, -1, -1, -1, -1, -1, -1, 134061, 
+    134063, -1, 134065, 134067, -1, 134069, 134071, -1, 134073, 134075, 
+    -1, 134077, 134079, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 134081, -1, -1, 134083, 134085, 
+    134087, 134089, -1, -1, -1, 134091, 134093, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, 68559, 68560, 68561, 68562, 68563, 
+    68564, 68565, 68566, 68567, 68568, 68569, 68570, 68571, 68572, 68573, 
+    68574, 68575, 68576, 68577, 68578, 68579, 68580, 68581, 68582, 68583, 
+    68584, 68585, 68586, 68587, 68588, 68589, 68590, 68591, 68592, 68593, 
+    68594, 68595, 68596, 68597, 68598, 68599, 68600, 68601, 68602, 68603, 
+    68604, 68605, 68606, 68607, 68608, 68609, 68610, 68611, 68612, 68613, 
+    68614, 68615, 68616, 68617, 68618, 68619, 68620, 68621, 68622, 68623, 
+    68624, 68625, 68626, 68627, 68628, 68629, 68630, 68631, 68632, 68633, 
+    68634, 68635, 68636, 68637, 68638, 68639, 68640, 68641, 68642, 68643, 
+    68644, 68645, 68646, 68647, 68648, 68649, 68650, 68651, 68652, -1, 
+    -1, -1, 68218, 68224, 68653, 68654, 68655, 68656, 68657, 68658, 68222, 
+    68659, 68660, 68661, 68662, 68226, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, 199735, 199738, 199741, 199744, 199747, 199750, 199753, 
+    199756, 199759, 199762, 199765, 199768, 199771, 199774, 265313, 265317, 
+    265321, 265325, 265329, 265333, 265337, 265341, 265345, 265349, 265353, 
+    265357, 265361, 265365, 265369, -1, -1, -1, 199837, 199840, 199843, 
+    199846, 199849, 199852, 199855, 199858, 199861, 199864, 199867, 199870, 
+    199873, 199876, 199879, 199882, 199885, 199888, 199891, 199894, 199897, 
+    199900, 199903, 199906, 199909, 199912, 199915, 199918, 199921, 199924, 
+    199927, 199930, 199933, 199936, 199939, 199942, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, 134409, 134411, 134413, 134415, 134417, 
+    134419, 134421, 134423, 134425, 134427, 134429, 134431, 134433, 134435, 
+    134437, 68559, 68562, 68565, 68567, 68575, 68576, 68579, 68581, 68582, 
+    68584, 68585, 68586, 68587, 68588, 134439, 134441, 134443, 134445, 
+    134447, 134449, 134451, 134453, 134455, 134457, 134459, 134461, 134463, 
+    134465, -1, -1, -1, -1, 68218, 68224, 68653, 68654, 68931, 68932, 68933, 
+    68229, 68934, 68241, 68291, 68303, 68302, 68292, 68384, 68249, 68289, 
+    68935, 68936, 68937, 68938, 68939, 68940, 68941, 68942, 68943, 68944, 
+    68255, 68945, 68946, 68947, 68948, 68949, 68950, 68951, 68952, 68655, 
+    68656, 68657, 68953, 68954, 68955, 68956, 68957, 68958, 68959, 68960, 
+    68961, 68962, 134499, 134501, 134503, 134505, 134507, 134509, 134511, 
+    134513, 134515, 134517, 134519, 134521, 134523, 134525, 134527, 134529, 
+    134531, 134533, 134535, 134537, 134539, 134541, 134543, 134545, 200083, 
+    200086, 200089, -1, -1, -1, -1, 69020, 69021, 69022, 69023, 69024, 
+    69025, 69026, 69027, 69028, 69029, 69030, 69031, 69032, 69033, 69034, 
+    69035, 69036, 69037, 69038, 69039, 69040, 69041, 69042, 69043, 69044, 
+    69045, 69046, 69047, 69048, 69049, 69050, 69051, 69052, 69053, 69054, 
+    69055, 69056, 69057, 69058, 69059, 69060, 69061, 69062, 69063, 69064, 
+    69065, 69066, -1, 331211, 265680, 331220, 200153, 331228, 200161, 200164, 
+    396775, 265709, 200177, 200180, 200183, 265722, 265726, 265730, 265734, 
+    265738, 265742, 265746, 396822, 134684, 396830, 396836, 331306, 265775, 
+    396851, 396857, 265791, 200259, 200262, 265801, 265805, 331345, 331350, 
+    200283, 200286, 265825, 200293, 200296, 134763, 134765, 200303, 200306, 
+    396917, 265851, 331391, 396932, 265866, 200334, 200337, 396948, 265882, 
+    396958, 200356, 331431, 200364, 265903, 200371, 265910, 331450, 265919, 
+    331459, 265928, 134860, 331470, 200403, 200406, 265945, 200413, 200416, 
+    200419, 331494, 265963, 134895, 397041, 200439, 331514, 265983, 265987, 
+    200455, 200458, 265997, 134929, 266003, 331543, 134940, 397086, 200484, 
+    134951, 134953, 134955, 134957, 134959, 134961, 134963, 134965, 134967, 
+    134969, 200507, 200510, 200513, 200516, 200519, 200522, 200525, 200528, 
+    200531, 200534, 200537, 200540, 200543, 200546, 200549, 200552, 135019, 
+    135021, 200559, 135026, 135028, -1, -1, -1, -1, 135030, 135032, 135034, 
+    135036, 266110, 135042, 135044, 135046, 135048, 135050, 135052, 135054, 
+    135056, 200594, 266133, 135065, 135067, 135069, 135071, 135073, 135075, 
+    135077, 200615, 200618, 200621, 200624, 135091, 135093, 135095, 135097, 
+    135099, 135101, 135103, 135105, 135107, 135109, 200647, 200650, 135117, 
+    200655, 200658, 200661, 135128, 200666, 200669, 266208, 135140, 200678, 
+    200681, 200684, 200687, 331762, 397303, 135165, 135167, 135169, 135171, 
+    135173, 135175, 135177, 135179, 135181, 135183, 135185, 135187, 135189, 
+    135191, 135193, 135195, 135197, 135199, 266273, 135205, 135207, 135209, 
+    266283, 200751, 135218, 135220, 135222, 135224, 135226, 135228, 135230, 
+    135232, 135234, 135236, 200774, 135241, 135243, 200781, 200784, 135251, 
+    266325, 200793, 135260, 135262, 135264, 135266, -1, -1, 135268, 135270, 
+    135272, 135274, 135276, 135278, 135280, 135282, 135284, 200822, 200825, 
+    200828, 200831, 200834, 200837, 200840, 200843, 200846, 200849, 200852, 
+    200855, 200858, 200861, 200864, 200867, 200870, 200873, 200876, 200879, 
+    200882, 200885, -1, 69816, 69817, 68376, 69818, 69819, 69820, 69821, 
+    68430, 68430, 69822, 68384, 69823, 69824, 69825, 69826, 69827, 69828, 
+    69829, 69830, 69831, 69832, 69833, 69834, 69835, 69836, 69837, 69838, 
+    69839, 69840, 69841, 69842, 69843, 69844, 69845, 69846, 69847, 69848, 
+    69849, 69850, 69851, 69852, 69853, 69854, 69855, 69856, 69857, 69858, 
+    69859, 69860, 69861, 69862, 69863, 68342, 69864, 69865, 69866, 69867, 
+    69868, 69869, 69870, 69871, 69872, 69873, 69874, 68415, 69875, 69876, 
+    69877, 69878, 69879, 69880, 69881, 69882, 69883, 69884, 69885, 69886, 
+    69887, 69888, 69889, 69890, 69891, 69892, 69893, 69894, 69895, 69896, 
+    69897, 69898, 69899, 69900, 69901, 69832, 69902, 69903, 69904, 69905, 
+    69906, 69907, 69908, 69909, 69910, 69911, 69912, 69913, 69914, 69915, 
+    69916, 69917, 69918, 69919, 69920, 69921, 68378, 69922, 69923, 69924, 
+    69925, 69926, 69927, 69928, 69929, 69930, 69931, 69932, 69933, 69934, 
+    69935, 69936, 68255, 69937, 69938, 69939, 69940, 69941, 69942, 69943, 
+    69944, 68236, 69945, 69946, 69947, 69948, 69949, 69950, 69951, 69952, 
+    69953, 69954, 69955, 69956, 69957, 69958, 69959, 69960, 69961, 69962, 
+    69963, 69964, 69965, 69966, 69920, 69967, 69968, 69969, 69970, 69971, 
+    69972, 69973, 69974, 69904, 69975, 69976, 69977, 69978, 69979, 69980, 
+    69981, 69982, 69983, 69984, 69985, 69986, 69987, 69988, 69989, 69990, 
+    69991, 69992, 69993, 69994, 69832, 69995, 69996, 69997, 69998, 68429, 
+    69999, 70000, 70001, 70002, 70003, 70004, 70005, 70006, 70007, 70008, 
+    70009, 70010, 68932, 70011, 70012, 70013, 70014, 70015, 70016, 70017, 
+    70018, 70019, 69906, 70020, 70021, 70022, 70023, 70024, 70025, 70026, 
+    70027, 70028, 70029, 70030, 70031, 70032, 68383, 70033, 70034, 70035, 
+    70036, 70037, 70038, 70039, 70040, 70041, 70042, 70043, 70044, 70045, 
+    68334, 70046, 70047, 70048, 70049, 70050, 70051, 70052, 70053, 70054, 
+    70055, 70056, 70057, 70058, 70059, 70060, 70061, 68361, 70062, 68364, 
+    70063, 70064, 70065, -1, -1, 70066, -1, 70067, -1, -1, 70068, 70069, 
+    70070, 70071, 70072, 70073, 70074, 70075, 70076, 68341, -1, 70077, 
+    -1, 70078, -1, -1, 70079, 70080, -1, -1, -1, 70081, 70082, 70083, 70084, 
+    -1, -1, 70085, 70086, 70087, 70088, 70089, 70090, 70091, 70092, 70093, 
+    70094, 70095, 70096, 68262, 70097, 70098, 70099, 70100, 70101, 70102, 
+    70103, 70104, 70105, 70106, 70107, 70108, 70109, 70110, 70111, 68937, 
+    70112, 70113, 70114, 70115, 68941, 70116, 70117, 70118, 70119, 70120, 
+    69956, 70121, 70122, 70123, 70124, 70125, 70126, 70126, 70127, 70128, 
+    70129, 70130, 70131, 70132, 70133, 70134, 70079, 70135, 70136, 70137, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 135674, 135676, 
+    135678, 201216, 201219, 135686, 135686, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, 135688, 135690, 135692, 135694, 135696, -1, -1, 
+    -1, -1, -1, 135698, -1, 135700, 70166, 67764, 67767, 70167, 70168, 
+    70169, 70170, 70171, 70172, 67712, 135709, 135711, 201249, 201252, 
+    135719, 135721, 135723, 135725, 135727, 135729, 135731, 135733, 135735, 
+    -1, 135737, 135739, 135741, 135743, 135745, -1, 135747, -1, 135749, 
+    135751, -1, 135753, 135755, -1, 135757, 135759, 135761, 135763, 135765, 
+    135767, 135769, 135771, 135773, 135775, 70241, 70241, 70242, 70242, 
+    70242, 70242, 70243, 70243, 70243, 70243, 70244, 70244, 70244, 70244, 
+    70245, 70245, 70245, 70245, 70246, 70246, 70246, 70246, 70247, 70247, 
+    70247, 70247, 70248, 70248, 70248, 70248, 70249, 70249, 70249, 70249, 
+    70250, 70250, 70250, 70250, 70251, 70251, 70251, 70251, 70252, 70252, 
+    70252, 70252, 70253, 70253, 70253, 70253, 70254, 70254, 70255, 70255, 
+    70256, 70256, 70257, 70257, 70258, 70258, 70259, 70259, 70260, 70260, 
+    70260, 70260, 70261, 70261, 70261, 70261, 70262, 70262, 70262, 70262, 
+    70263, 70263, 70263, 70263, 70264, 70264, 70265, 70265, 70265, 70265, 
+    131874, 131874, 70266, 70266, 70266, 70266, 70267, 70267, 70267, 70267, 
+    70268, 70268, 131878, 131878, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, 70269, 70269, 70269, 70269, 70270, 70270, 70271, 
+    70271, 70272, 70272, 131870, 70273, 70273, 70274, 70274, 70275, 70275, 
+    70276, 70276, 70276, 70276, 70277, 70277, 201350, 201350, 201353, 201353, 
+    201356, 201356, 201359, 201359, 201362, 201362, 201365, 201365, 201368, 
+    201368, 201368, 201371, 201371, 201371, 70302, 70302, 70302, 70302, 
+    201375, 201378, 201381, 201371, 201384, 135851, 135853, 135855, 135857, 
+    135859, 135861, 135863, 135865, 135867, 135869, 135871, 135873, 135875, 
+    135877, 135879, 135881, 135883, 135885, 135887, 135889, 135891, 135893, 
+    135895, 135897, 135899, 135901, 135903, 135905, 135907, 135909, 135911, 
+    135913, 135915, 135917, 135919, 135921, 135923, 135925, 135927, 135929, 
+    135931, 135933, 135935, 135937, 135939, 135941, 135943, 135945, 135947, 
+    135949, 135951, 135953, 135955, 135957, 135959, 135961, 135963, 135965, 
+    135967, 135969, 135971, 135973, 135975, 135977, 135979, 135981, 135983, 
+    135985, 135987, 135989, 135991, 135993, 135995, 135997, 135999, 136001, 
+    136003, 136005, 136007, 136009, 136011, 136013, 136015, 136017, 136019, 
+    136021, 136023, 136025, 136027, 201565, 201568, 201571, 201574, 201577, 
+    201580, 201583, 201586, 201381, 201589, 201371, 201384, 136056, 136058, 
+    135857, 136060, 135859, 135861, 136062, 136064, 135869, 136066, 135871, 
+    135873, 136068, 136070, 135877, 136072, 135879, 135881, 135939, 135941, 
+    135947, 135949, 135951, 135959, 135961, 135963, 135965, 135973, 135975, 
+    135977, 136074, 135985, 136076, 136078, 135997, 136080, 135999, 136001, 
+    136027, 136082, 136084, 136017, 136086, 136019, 136021, 201375, 201378, 
+    201624, 201381, 201627, 135851, 135853, 135855, 135857, 136094, 135863, 
+    135865, 135867, 135869, 136096, 135877, 135883, 135885, 135887, 135889, 
+    135891, 135895, 135897, 135899, 135901, 135903, 135905, 136098, 135907, 
+    135909, 135911, 135913, 135915, 135917, 135921, 135923, 135925, 135927, 
+    135929, 135931, 135933, 135935, 135937, 135943, 135945, 135953, 135955, 
+    135957, 135959, 135961, 135967, 135969, 135971, 135973, 136100, 135979, 
+    135981, 135983, 135985, 135991, 135993, 135995, 135997, 136102, 136003, 
+    136005, 136104, 136011, 136013, 136015, 136017, 136106, 201381, 201627, 
+    135857, 136094, 135869, 136096, 135877, 136108, 135903, 136110, 136112, 
+    136114, 135959, 135961, 135973, 135997, 136102, 136017, 136106, 201652, 
+    201655, 201658, 136125, 136127, 136129, 136131, 136133, 136135, 136137, 
+    136139, 136141, 136143, 136145, 136147, 136149, 136151, 136153, 136155, 
+    136157, 136159, 136161, 136163, 136165, 136167, 136169, 136112, 136171, 
+    136173, 136175, 136177, 136125, 136127, 136129, 136131, 136133, 136135, 
+    136137, 136139, 136141, 136143, 136145, 136147, 136149, 136151, 136153, 
+    136155, 136157, 136159, 136161, 136163, 136165, 136167, 136169, 136112, 
+    136171, 136173, 136175, 136177, 136165, 136167, 136169, 136112, 136110, 
+    136114, 135919, 135897, 135899, 135901, 136165, 136167, 136169, 135919, 
+    135921, 136179, 136179, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, 201717, 201720, 201720, 201723, 201726, 
+    201729, 201732, 201735, 201738, 201738, 201741, 201744, 201747, 201750, 
+    201753, 201756, 201756, 201759, 201762, 201762, 201765, 201765, 201768, 
+    201771, 201771, 201774, 201777, 201777, 201780, 201780, 201783, 201786, 
+    201786, 201789, 201789, 201792, 201795, 201798, 201801, 201801, 201804, 
+    201807, 201810, 201813, 201816, 201816, 201819, 201822, 201825, 201828, 
+    201831, 201834, 201834, 201837, 201837, 201840, 201840, 201843, 201846, 
+    201849, 201852, 201855, 201858, 201861, -1, -1, 201864, 201867, 201870, 
+    201873, 201876, 201879, 201879, 201882, 201885, 201888, 201891, 201891, 
+    201894, 201897, 201900, 201903, 201906, 201909, 201912, 201915, 201918, 
+    201921, 201924, 201927, 201930, 201933, 201936, 201939, 201942, 201945, 
+    201948, 201951, 201954, 201957, 201819, 201825, 201960, 201963, 201966, 
+    201969, 201972, 201975, 201972, 201966, 201978, 201981, 201984, 201987, 
+    201990, 201975, 201798, 201768, 201993, 201996, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, 201999, 202002, 267541, 267545, 267549, 267553, 267557, 267561, 
+    267565, 202033, 1185076, 529734, 267598, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 133211, 70994, 70995, 70996, 
+    70996, 67715, 67716, 70997, 70998, 70999, 71000, 71001, 71002, 71003, 
+    71004, 67961, 67962, 71005, 71006, 71007, 71008, -1, -1, -1, -1, 133228, 
+    133228, 133228, 133228, 70996, 70996, 70996, 71009, 71010, 67674, -1, 
+    66157, 71011, 71012, 71013, 70994, 67715, 67716, 70997, 70998, 70999, 
+    71000, 71014, 71015, 71016, 67712, 71017, 71018, 71019, 67714, -1, 
+    71020, 71021, 71022, 71023, -1, -1, -1, -1, 136560, 136562, 136564, 
+    -1, 136566, -1, 136568, 136570, 136572, 136574, 136576, 136578, 136580, 
+    136582, 136584, 136586, 71052, 131856, 131856, 131858, 131858, 131860, 
+    131860, 131862, 131862, 131864, 131864, 131864, 131864, 71053, 71053, 
+    71054, 71054, 71054, 71054, 71055, 71055, 71056, 71056, 71056, 71056, 
+    71057, 71057, 71057, 71057, 71058, 71058, 71058, 71058, 71059, 71059, 
+    71059, 71059, 71060, 71060, 71060, 71060, 71061, 71061, 71062, 71062, 
+    71063, 71063, 71064, 71064, 71065, 71065, 71065, 71065, 71066, 71066, 
+    71066, 71066, 71067, 71067, 71067, 71067, 71068, 71068, 71068, 71068, 
+    71069, 71069, 71069, 71069, 71070, 71070, 71070, 71070, 71071, 71071, 
+    71071, 71071, 71072, 71072, 71072, 71072, 71073, 71073, 71073, 71073, 
+    71074, 71074, 71074, 71074, 71075, 71075, 71075, 71075, 71076, 71076, 
+    71076, 71076, 71077, 71077, 71077, 71077, 71078, 71078, 71078, 71078, 
+    71079, 71079, 71079, 71079, 71080, 71080, 70277, 70277, 71081, 71081, 
+    71081, 71081, 202154, 202154, 202157, 202157, 202160, 202160, 136627, 
+    136627, -1, -1, -1, -1, 71013, 71093, 71014, 71021, 71022, 71015, 71094, 
+    67715, 67716, 71016, 67712, 71009, 71017, 67674, 71095, 67704, 65549, 
+    65542, 65543, 67706, 67707, 67708, 67709, 67710, 67711, 71011, 66157, 
+    71018, 67714, 71019, 71012, 71023, 68185, 67759, 67726, 67772, 67761, 
+    67762, 68186, 67739, 67741, 68187, 67758, 67742, 67763, 67743, 68188, 
+    67746, 67747, 67748, 68189, 68190, 68191, 67819, 68192, 67831, 68193, 
+    67756, 71096, 71020, 71097, 71098, 70996, 67649, 65539, 68194, 67861, 
+    67773, 67760, 68195, 67738, 66124, 67705, 66126, 68196, 66146, 67862, 
+    67717, 65550, 68197, 68198, 66127, 65892, 68199, 68200, 67844, 66131, 
+    66147, 66132, 68201, 70997, 71099, 70998, 71100, 71101, 71102, 71103, 
+    71005, 71006, 71010, 71104, 69066, 71105, 71106, 71107, 71108, 71109, 
+    71110, 71111, 71112, 71113, 71114, 69020, 69021, 69022, 69023, 69024, 
+    69025, 69026, 69027, 69028, 69029, 69030, 69031, 69032, 69033, 69034, 
+    69035, 69036, 69037, 69038, 69039, 69040, 69041, 69042, 69043, 69044, 
+    69045, 69046, 69047, 69048, 69049, 69050, 69051, 69052, 69053, 69054, 
+    69055, 69056, 69057, 69058, 69059, 69060, 69061, 69062, 69063, 71115, 
+    71116, 71117, 68610, 68559, 68560, 68561, 68562, 68563, 68564, 68565, 
+    68566, 68567, 68568, 68569, 68570, 68571, 68572, 68573, 68574, 68575, 
+    68576, 68577, 68578, 68579, 68580, 68581, 68582, 68583, 68584, 68585, 
+    68586, 68587, 68588, -1, -1, -1, 68589, 68590, 68591, 68592, 68593, 
+    68594, -1, -1, 68595, 68596, 68597, 68598, 68599, 68600, -1, -1, 68601, 
+    68602, 68603, 68604, 68605, 68606, -1, -1, 68607, 68608, 68609, -1, 
+    -1, -1, 71118, 71119, 71120, 131076, 71121, 71122, 71123, -1, 71124, 
+    71125, 71126, 71127, 71128, 71129, 71130, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, 136667, 136669, 202207, 202210, 202213, 202216, 202219, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    136686, 136688, 202226, 202229, 202232, 202235, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, 68185, 67759, 67726, 67772, 67761, 67762, 
+    68186, 67739, 67741, 68187, 67758, 67742, 67763, 67743, 68188, 67746, 
+    67747, 67748, 68189, 68190, 68191, 67819, 68192, 67831, 68193, 67756, 
+    65539, 68194, 67861, 67773, 67760, 68195, 67738, 66124, 67705, 66126, 
+    68196, 66146, 67862, 67717, 65550, 68197, 68198, 66127, 65892, 68199, 
+    68200, 67844, 66131, 66147, 66132, 68201, 68185, 67759, 67726, 67772, 
+    67761, 67762, 68186, 67739, 67741, 68187, 67758, 67742, 67763, 67743, 
+    68188, 67746, 67747, 67748, 68189, 68190, 68191, 67819, 68192, 67831, 
+    68193, 67756, 65539, 68194, 67861, 67773, 67760, 68195, 67738, -1, 
+    67705, 66126, 68196, 66146, 67862, 67717, 65550, 68197, 68198, 66127, 
+    65892, 68199, 68200, 67844, 66131, 66147, 66132, 68201, 68185, 67759, 
+    67726, 67772, 67761, 67762, 68186, 67739, 67741, 68187, 67758, 67742, 
+    67763, 67743, 68188, 67746, 67747, 67748, 68189, 68190, 68191, 67819, 
+    68192, 67831, 68193, 67756, 65539, 68194, 67861, 67773, 67760, 68195, 
+    67738, 66124, 67705, 66126, 68196, 66146, 67862, 67717, 65550, 68197, 
+    68198, 66127, 65892, 68199, 68200, 67844, 66131, 66147, 66132, 68201, 
+    68185, -1, 67726, 67772, -1, -1, 68186, -1, -1, 68187, 67758, -1, -1, 
+    67743, 68188, 67746, 67747, -1, 68189, 68190, 68191, 67819, 68192, 
+    67831, 68193, 67756, 65539, 68194, 67861, 67773, -1, 68195, -1, 66124, 
+    67705, 66126, 68196, -1, 67862, 67717, -1, 68197, 68198, 66127, 65892, 
+    68199, 68200, 67844, 66131, 66147, 66132, 68201, 68185, 67759, 67726, 
+    67772, 67761, 67762, 68186, 67739, 67741, 68187, 67758, 67742, 67763, 
+    67743, 68188, 67746, 67747, 67748, 68189, 68190, 68191, 67819, 68192, 
+    67831, 68193, 67756, 65539, 68194, 67861, 67773, 67760, 68195, 67738, 
+    66124, 67705, 66126, 68196, 66146, 67862, 67717, 65550, 68197, 68198, 
+    66127, 65892, 68199, 68200, 67844, 66131, 66147, 66132, 68201, 68185, 
+    67759, -1, 67772, 67761, 67762, 68186, -1, -1, 68187, 67758, 67742, 
+    67763, 67743, 68188, 67746, 67747, -1, 68189, 68190, 68191, 67819, 
+    68192, 67831, 68193, -1, 65539, 68194, 67861, 67773, 67760, 68195, 
+    67738, 66124, 67705, 66126, 68196, 66146, 67862, 67717, 65550, 68197, 
+    68198, 66127, 65892, 68199, 68200, 67844, 66131, 66147, 66132, 68201, 
+    68185, 67759, -1, 67772, 67761, 67762, 68186, -1, 67741, 68187, 67758, 
+    67742, 67763, -1, 68188, -1, -1, -1, 68189, 68190, 68191, 67819, 68192, 
+    67831, 68193, -1, 65539, 68194, 67861, 67773, 67760, 68195, 67738, 
+    66124, 67705, 66126, 68196, 66146, 67862, 67717, 65550, 68197, 68198, 
+    66127, 65892, 68199, 68200, 67844, 66131, 66147, 66132, 68201, 68185, 
+    67759, 67726, 67772, 67761, 67762, 68186, 67739, 67741, 68187, 67758, 
+    67742, 67763, 67743, 68188, 67746, 67747, 67748, 68189, 68190, 68191, 
+    67819, 68192, 67831, 68193, 67756, 65539, 68194, 67861, 67773, 67760, 
+    68195, 67738, 66124, 67705, 66126, 68196, 66146, 67862, 67717, 65550, 
+    68197, 68198, 66127, 65892, 68199, 68200, 67844, 66131, 66147, 66132, 
+    68201, 68185, 67759, 67726, 67772, 67761, 67762, 68186, 67739, 67741, 
+    68187, 67758, 67742, 67763, 67743, 68188, 67746, 67747, 67748, 68189, 
+    68190, 68191, 67819, 68192, 67831, 68193, 67756, 65539, 68194, 67861, 
+    67773, 67760, 68195, 67738, 66124, 67705, 66126, 68196, 66146, 67862, 
+    67717, 65550, 68197, 68198, 66127, 65892, 68199, 68200, 67844, 66131, 
+    66147, 66132, 68201, 68185, 67759, 67726, 67772, 67761, 67762, 68186, 
+    67739, 67741, 68187, 67758, 67742, 67763, 67743, 68188, 67746, 67747, 
+    67748, 68189, 68190, 68191, 67819, 68192, 67831, 68193, 67756, 65539, 
+    68194, 67861, 67773, 67760, 68195, 67738, 66124, 67705, 66126, 68196, 
+    66146, 67862, 67717, 65550, 68197, 68198, 66127, 65892, 68199, 68200, 
+    67844, 66131, 66147, 66132, 68201, 68185, 67759, 67726, 67772, 67761, 
+    67762, 68186, 67739, 67741, 68187, 67758, 67742, 67763, 67743, 68188, 
+    67746, 67747, 67748, 68189, 68190, 68191, 67819, 68192, 67831, 68193, 
+    67756, 65539, 68194, 67861, 67773, 67760, 68195, 67738, 66124, 67705, 
+    66126, 68196, 66146, 67862, 67717, 65550, 68197, 68198, 66127, 65892, 
+    68199, 68200, 67844, 66131, 66147, 66132, 68201, 68185, 67759, 67726, 
+    67772, 67761, 67762, 68186, 67739, 67741, 68187, 67758, 67742, 67763, 
+    67743, 68188, 67746, 67747, 67748, 68189, 68190, 68191, 67819, 68192, 
+    67831, 68193, 67756, 65539, 68194, 67861, 67773, 67760, 68195, 67738, 
+    66124, 67705, 66126, 68196, 66146, 67862, 67717, 65550, 68197, 68198, 
+    66127, 65892, 68199, 68200, 67844, 66131, 66147, 66132, 68201, 68185, 
+    67759, 67726, 67772, 67761, 67762, 68186, 67739, 67741, 68187, 67758, 
+    67742, 67763, 67743, 68188, 67746, 67747, 67748, 68189, 68190, 68191, 
+    67819, 68192, 67831, 68193, 67756, 65539, 68194, 67861, 67773, 67760, 
+    68195, 67738, 66124, 67705, 66126, 68196, 66146, 67862, 67717, 65550, 
+    68197, 68198, 66127, 65892, 68199, 68200, 67844, 66131, 66147, 66132, 
+    68201, -1, -1, -1, -1, 71166, 71167, 67769, 71168, 71169, 71170, 71171, 
+    66212, 71172, 71173, 71174, 71175, 71176, 71177, 71178, 67770, 71179, 
+    66212, 71180, 71181, 66206, 71182, 71183, 71184, 67757, 71185, 71186, 
+    66204, 67768, 71187, 66213, 71188, 71189, 66205, 67561, 66209, 71190, 
+    65546, 71191, 71192, 71193, 66208, 66210, 66211, 71194, 71195, 71196, 
+    66207, 71197, 71198, 71199, 71200, 66213, 66205, 66209, 66207, 66210, 
+    66208, 71166, 71167, 67769, 71168, 71169, 71170, 71171, 66212, 71172, 
+    71173, 71174, 71175, 71176, 71177, 71178, 67770, 71179, 66212, 71180, 
+    71181, 66206, 71182, 71183, 71184, 67757, 71185, 71186, 66204, 67768, 
+    71187, 66213, 71188, 71189, 66205, 67561, 66209, 71190, 65546, 71191, 
+    71192, 71193, 66208, 66210, 66211, 71194, 71195, 71196, 66207, 71197, 
+    71198, 71199, 71200, 66213, 66205, 66209, 66207, 66210, 66208, 71166, 
+    71167, 67769, 71168, 71169, 71170, 71171, 66212, 71172, 71173, 71174, 
+    71175, 71176, 71177, 71178, 67770, 71179, 66212, 71180, 71181, 66206, 
+    71182, 71183, 71184, 67757, 71185, 71186, 66204, 67768, 71187, 66213, 
+    71188, 71189, 66205, 67561, 66209, 71190, 65546, 71191, 71192, 71193, 
+    66208, 66210, 66211, 71194, 71195, 71196, 66207, 71197, 71198, 71199, 
+    71200, 66213, 66205, 66209, 66207, 66210, 66208, 71166, 71167, 67769, 
+    71168, 71169, 71170, 71171, 66212, 71172, 71173, 71174, 71175, 71176, 
+    71177, 71178, 67770, 71179, 66212, 71180, 71181, 66206, 71182, 71183, 
+    71184, 67757, 71185, 71186, 66204, 67768, 71187, 66213, 71188, 71189, 
+    66205, 67561, 66209, 71190, 65546, 71191, 71192, 71193, 66208, 66210, 
+    66211, 71194, 71195, 71196, 66207, 71197, 71198, 71199, 71200, 66213, 
+    66205, 66209, 66207, 66210, 66208, 71166, 71167, 67769, 71168, 71169, 
+    71170, 71171, 66212, 71172, 71173, 71174, 71175, 71176, 71177, 71178, 
+    67770, 71179, 66212, 71180, 71181, 66206, 71182, 71183, 71184, 67757, 
+    71185, 71186, 66204, 67768, 71187, 66213, 71188, 71189, 66205, 67561, 
+    66209, 71190, 65546, 71191, 71192, 71193, 66208, 66210, 66211, 71194, 
+    71195, 71196, 66207, 71197, 71198, 71199, 71200, 66213, 66205, 66209, 
+    66207, 66210, 66208, -1, -1, -1, -1, 67704, 65549, 65542, 65543, 67706, 
+    67707, 67708, 67709, 67710, 67711, 67704, 65549, 65542, 65543, 67706, 
+    67707, 67708, 67709, 67710, 67711, 67704, 65549, 65542, 65543, 67706, 
+    67707, 67708, 67709, 67710, 67711, 67704, 65549, 65542, 65543, 67706, 
+    67707, 67708, 67709, 67710, 67711, 67704, 65549, 65542, 65543, 67706, 
+    67707, 67708, 67709, 67710, 67711, 71201, 71202, 71203, 71204, 71205, 
+    70085, 71206, 71207, 71208, 71209, 70086, 71210, 71211, 71212, 70087, 
+    71213, 71214, 71215, 71216, 71217, 71218, 71219, 71220, 71221, 71222, 
+    71223, 71224, 71225, 71226, 68234, 71227, 71228, 71229, 71230, 71231, 
+    71232, 71233, 71234, 70088, 70089, 71235, 71236, 71237, 69908, 71238, 
+    70090, 71239, 71240, 71241, 71242, 71242, 71242, 71243, 71244, 71245, 
+    71246, 71247, 71248, 71249, 71250, 71251, 71252, 71253, 71254, 71255, 
+    71256, 71257, 71258, 71259, 71260, 71260, 71261, 71262, 71263, 71264, 
+    71265, 70092, 71266, 71267, 71268, 70054, 71269, 71270, 71271, 71272, 
+    71273, 71274, 71275, 71276, 71277, 71278, 71279, 71280, 71281, 71282, 
+    71283, 71284, 71285, 71286, 71287, 71288, 71289, 71290, 71291, 71292, 
+    71293, 71294, 71294, 71295, 71296, 71297, 69904, 71298, 71299, 71300, 
+    71301, 71302, 68260, 71303, 71304, 68262, 71305, 71306, 71307, 71308, 
+    71309, 71310, 71311, 71312, 71313, 71314, 71315, 71316, 71317, 71318, 
+    71319, 71320, 71321, 71322, 71323, 71324, 71325, 69852, 71326, 68272, 
+    71327, 71327, 71328, 71329, 71329, 71330, 71331, 71332, 71333, 71334, 
+    71335, 71336, 71337, 71338, 71339, 71340, 71341, 71342, 70097, 71343, 
+    71344, 71345, 71346, 71347, 71346, 71348, 70099, 71349, 71350, 71351, 
+    71352, 70100, 69825, 71353, 71354, 71355, 71356, 71357, 71358, 71359, 
+    71360, 71361, 71362, 71363, 71364, 71365, 71366, 71367, 71368, 71369, 
+    71370, 71371, 71372, 71373, 71374, 70101, 71375, 71376, 71377, 71378, 
+    71379, 71380, 70103, 71381, 71382, 71383, 71384, 71385, 71386, 71387, 
+    71388, 69853, 71389, 71390, 71391, 71392, 71393, 71394, 71395, 71396, 
+    71397, 70104, 71398, 71399, 71400, 71401, 71402, 71403, 71404, 71405, 
+    71406, 71407, 71408, 71409, 71410, 71411, 71412, 71413, 71414, 71415, 
+    69921, 71416, 71417, 71418, 71419, 71420, 71421, 71422, 71423, 71424, 
+    71425, 71426, 70105, 70004, 71427, 71428, 71429, 71430, 71431, 71432, 
+    71433, 71434, 71435, 71436, 71437, 71438, 71439, 71440, 71441, 71442, 
+    71443, 71444, 71445, 71446, 71447, 71448, 71449, 71450, 71451, 71452, 
+    71453, 71454, 71455, 71456, 71457, 71458, 71459, 71460, 71461, 71462, 
+    71463, 71464, 71465, 71466, 71467, 71468, 71468, 71469, 71470, 71471, 
+    71472, 71473, 71474, 71475, 71476, 71477, 71478, 69907, 71479, 71480, 
+    71481, 71482, 71483, 71484, 71485, 71486, 71487, 71488, 71489, 71490, 
+    71491, 71492, 71492, 71493, 71494, 71495, 71496, 71497, 71498, 71499, 
+    69870, 71500, 71501, 71502, 70115, 71503, 71504, 70074, 71505, 71506, 
+    70118, 71507, 71508, 71509, 71510, 71510, 71511, 71512, 71513, 71514, 
+    71515, 71516, 71517, 71518, 71519, 71520, 71521, 71522, 71523, 71524, 
+    71525, 71526, 71527, 71528, 71529, 71530, 71531, 71532, 71533, 71534, 
+    71535, 71536, 71537, 70124, 71538, 71539, 71540, 71541, 71542, 71543, 
+    71544, 71545, 71546, 71547, 71548, 71549, 71550, 71551, 71552, 71553, 
+    71328, 71554, 71555, 71556, 71557, 71558, 71559, 71560, 71561, 71562, 
+    71563, 71564, 71565, 69924, 71566, 71567, 71568, 71569, 71570, 71571, 
+    70127, 71572, 71573, 71574, 71575, 71576, 71577, 71578, 71579, 71580, 
+    71581, 71582, 71583, 71584, 71585, 71586, 71587, 71588, 71589, 71590, 
+    71591, 69865, 71592, 71593, 71594, 71595, 71596, 71597, 71598, 71599, 
+    71600, 71601, 71602, 71603, 71604, 71605, 71606, 68362, 71607, 71608, 
+    71609, 71610, 71611, 71612, 71613, 71614, 71615, 71616, 71617, 71618, 
+    71619, 68369, 71620, 71621, 71622, 71623, 71624, 71625, 71626, 71627, 
+    71628, 71629, 71630, 71631, 71632, 71633, 71634, 71635, 71636, 71637, 
+    71638, 71639, 71640, 71641, 71642, 71643, 71644, 71645, 71646, 71647, 
+    71648, 71649, 71650, 71651, 71652, 71653, 71654, 71655, 71656, 71657, 
+    71658, 71659, 71660, 71661, 71662, 71663, 71663, 71664, 71665, 71666, 
+    71667, 71668, 71669, 71670, 71671, 71672, 71673, 71674, 71675, 71676, 
+    71677, 71678, 71679, 71680, 71681, 71682, 71683, 71684, 68417, 71685, 
+    68421, 71686, 71687, 71688, 71689, 68426, 71690, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
+};
+
+/*
+ * List of decomposition sequences
+ */
+
+static int decompList[] = {
+    32, 32, 776, 97, 32, 772, 50, 51, 32, 769, 956, 32, 807, 49, 111, 49, 
+    8260, 52, 49, 8260, 50, 51, 8260, 52, 65, 768, 65, 769, 65, 770, 65, 
+    771, 65, 776, 65, 778, 67, 807, 69, 768, 69, 769, 69, 770, 69, 776, 
+    73, 768, 73, 769, 73, 770, 73, 776, 78, 771, 79, 768, 79, 769, 79, 
+    770, 79, 771, 79, 776, 85, 768, 85, 769, 85, 770, 85, 776, 89, 769, 
+    97, 768, 97, 769, 97, 770, 97, 771, 97, 776, 97, 778, 99, 807, 101, 
+    768, 101, 769, 101, 770, 101, 776, 105, 768, 105, 769, 105, 770, 105, 
+    776, 110, 771, 111, 768, 111, 769, 111, 770, 111, 771, 111, 776, 117, 
+    768, 117, 769, 117, 770, 117, 776, 121, 769, 121, 776, 65, 772, 97, 
+    772, 65, 774, 97, 774, 65, 808, 97, 808, 67, 769, 99, 769, 67, 770, 
+    99, 770, 67, 775, 99, 775, 67, 780, 99, 780, 68, 780, 100, 780, 69, 
+    772, 101, 772, 69, 774, 101, 774, 69, 775, 101, 775, 69, 808, 101, 
+    808, 69, 780, 101, 780, 71, 770, 103, 770, 71, 774, 103, 774, 71, 775, 
+    103, 775, 71, 807, 103, 807, 72, 770, 104, 770, 73, 771, 105, 771, 
+    73, 772, 105, 772, 73, 774, 105, 774, 73, 808, 105, 808, 73, 775, 73, 
+    74, 105, 106, 74, 770, 106, 770, 75, 807, 107, 807, 76, 769, 108, 769, 
+    76, 807, 108, 807, 76, 780, 108, 780, 76, 183, 108, 183, 78, 769, 110, 
+    769, 78, 807, 110, 807, 78, 780, 110, 780, 700, 110, 79, 772, 111, 
+    772, 79, 774, 111, 774, 79, 779, 111, 779, 82, 769, 114, 769, 82, 807, 
+    114, 807, 82, 780, 114, 780, 83, 769, 115, 769, 83, 770, 115, 770, 
+    83, 807, 115, 807, 83, 780, 115, 780, 84, 807, 116, 807, 84, 780, 116, 
+    780, 85, 771, 117, 771, 85, 772, 117, 772, 85, 774, 117, 774, 85, 778, 
+    117, 778, 85, 779, 117, 779, 85, 808, 117, 808, 87, 770, 119, 770, 
+    89, 770, 121, 770, 89, 776, 90, 769, 122, 769, 90, 775, 122, 775, 90, 
+    780, 122, 780, 115, 79, 795, 111, 795, 85, 795, 117, 795, 68, 90, 780, 
+    68, 122, 780, 100, 122, 780, 76, 74, 76, 106, 108, 106, 78, 74, 78, 
+    106, 110, 106, 65, 780, 97, 780, 73, 780, 105, 780, 79, 780, 111, 780, 
+    85, 780, 117, 780, 85, 776, 772, 117, 776, 772, 85, 776, 769, 117, 
+    776, 769, 85, 776, 780, 117, 776, 780, 85, 776, 768, 117, 776, 768, 
+    65, 776, 772, 97, 776, 772, 65, 775, 772, 97, 775, 772, 198, 772, 230, 
+    772, 71, 780, 103, 780, 75, 780, 107, 780, 79, 808, 111, 808, 79, 808, 
+    772, 111, 808, 772, 439, 780, 658, 780, 106, 780, 68, 90, 68, 122, 
+    100, 122, 71, 769, 103, 769, 78, 768, 110, 768, 65, 778, 769, 97, 778, 
+    769, 198, 769, 230, 769, 216, 769, 248, 769, 65, 783, 97, 783, 65, 
+    785, 97, 785, 69, 783, 101, 783, 69, 785, 101, 785, 73, 783, 105, 783, 
+    73, 785, 105, 785, 79, 783, 111, 783, 79, 785, 111, 785, 82, 783, 114, 
+    783, 82, 785, 114, 785, 85, 783, 117, 783, 85, 785, 117, 785, 83, 806, 
+    115, 806, 84, 806, 116, 806, 72, 780, 104, 780, 65, 775, 97, 775, 69, 
+    807, 101, 807, 79, 776, 772, 111, 776, 772, 79, 771, 772, 111, 771, 
+    772, 79, 775, 111, 775, 79, 775, 772, 111, 775, 772, 89, 772, 121, 
+    772, 104, 614, 106, 114, 633, 635, 641, 119, 121, 32, 774, 32, 775, 
+    32, 778, 32, 808, 32, 771, 32, 779, 611, 108, 120, 661, 768, 769, 787, 
+    776, 769, 697, 32, 837, 59, 32, 776, 769, 913, 769, 183, 917, 769, 
+    919, 769, 921, 769, 927, 769, 933, 769, 937, 769, 953, 776, 769, 921, 
+    776, 933, 776, 945, 769, 949, 769, 951, 769, 953, 769, 965, 776, 769, 
+    953, 776, 965, 776, 959, 769, 965, 769, 969, 769, 946, 952, 933, 966, 
+    960, 954, 961, 962, 920, 949, 1045, 768, 1045, 776, 1043, 769, 1030, 
+    776, 1050, 769, 1048, 768, 1059, 774, 1048, 774, 1080, 774, 1077, 768, 
+    1077, 776, 1075, 769, 1110, 776, 1082, 769, 1080, 768, 1091, 774, 1140, 
+    783, 1141, 783, 1046, 774, 1078, 774, 1040, 774, 1072, 774, 1040, 776, 
+    1072, 776, 1045, 774, 1077, 774, 1240, 776, 1241, 776, 1046, 776, 1078, 
+    776, 1047, 776, 1079, 776, 1048, 772, 1080, 772, 1048, 776, 1080, 776, 
+    1054, 776, 1086, 776, 1256, 776, 1257, 776, 1069, 776, 1101, 776, 1059, 
+    772, 1091, 772, 1059, 776, 1091, 776, 1059, 779, 1091, 779, 1063, 776, 
+    1095, 776, 1067, 776, 1099, 776, 1381, 1410, 1575, 1619, 1575, 1620, 
+    1608, 1620, 1575, 1621, 1610, 1620, 1575, 1652, 1608, 1652, 1735, 1652, 
+    1610, 1652, 1749, 1620, 1729, 1620, 1746, 1620, 2344, 2364, 2352, 2364, 
+    2355, 2364, 2325, 2364, 2326, 2364, 2327, 2364, 2332, 2364, 2337, 2364, 
+    2338, 2364, 2347, 2364, 2351, 2364, 2503, 2494, 2503, 2519, 2465, 2492, 
+    2466, 2492, 2479, 2492, 2610, 2620, 2616, 2620, 2582, 2620, 2583, 2620, 
+    2588, 2620, 2603, 2620, 2887, 2902, 2887, 2878, 2887, 2903, 2849, 2876, 
+    2850, 2876, 2962, 3031, 3014, 3006, 3015, 3006, 3014, 3031, 3142, 3158, 
+    3263, 3285, 3270, 3285, 3270, 3286, 3270, 3266, 3270, 3266, 3285, 3398, 
+    3390, 3399, 3390, 3398, 3415, 3545, 3530, 3545, 3535, 3545, 3535, 3530, 
+    3545, 3551, 3661, 3634, 3789, 3762, 3755, 3737, 3755, 3745, 3851, 3906, 
+    4023, 3916, 4023, 3921, 4023, 3926, 4023, 3931, 4023, 3904, 4021, 3953, 
+    3954, 3953, 3956, 4018, 3968, 4018, 3953, 3968, 4019, 3968, 4019, 3953, 
+    3968, 3953, 3968, 3986, 4023, 3996, 4023, 4001, 4023, 4006, 4023, 4011, 
+    4023, 3984, 4021, 4133, 4142, 65, 805, 97, 805, 66, 775, 98, 775, 66, 
+    803, 98, 803, 66, 817, 98, 817, 67, 807, 769, 99, 807, 769, 68, 775, 
+    100, 775, 68, 803, 100, 803, 68, 817, 100, 817, 68, 807, 100, 807, 
+    68, 813, 100, 813, 69, 772, 768, 101, 772, 768, 69, 772, 769, 101, 
+    772, 769, 69, 813, 101, 813, 69, 816, 101, 816, 69, 807, 774, 101, 
+    807, 774, 70, 775, 102, 775, 71, 772, 103, 772, 72, 775, 104, 775, 
+    72, 803, 104, 803, 72, 776, 104, 776, 72, 807, 104, 807, 72, 814, 104, 
+    814, 73, 816, 105, 816, 73, 776, 769, 105, 776, 769, 75, 769, 107, 
+    769, 75, 803, 107, 803, 75, 817, 107, 817, 76, 803, 108, 803, 76, 803, 
+    772, 108, 803, 772, 76, 817, 108, 817, 76, 813, 108, 813, 77, 769, 
+    109, 769, 77, 775, 109, 775, 77, 803, 109, 803, 78, 775, 110, 775, 
+    78, 803, 110, 803, 78, 817, 110, 817, 78, 813, 110, 813, 79, 771, 769, 
+    111, 771, 769, 79, 771, 776, 111, 771, 776, 79, 772, 768, 111, 772, 
+    768, 79, 772, 769, 111, 772, 769, 80, 769, 112, 769, 80, 775, 112, 
+    775, 82, 775, 114, 775, 82, 803, 114, 803, 82, 803, 772, 114, 803, 
+    772, 82, 817, 114, 817, 83, 775, 115, 775, 83, 803, 115, 803, 83, 769, 
+    775, 115, 769, 775, 83, 780, 775, 115, 780, 775, 83, 803, 775, 115, 
+    803, 775, 84, 775, 116, 775, 84, 803, 116, 803, 84, 817, 116, 817, 
+    84, 813, 116, 813, 85, 804, 117, 804, 85, 816, 117, 816, 85, 813, 117, 
+    813, 85, 771, 769, 117, 771, 769, 85, 772, 776, 117, 772, 776, 86, 
+    771, 118, 771, 86, 803, 118, 803, 87, 768, 119, 768, 87, 769, 119, 
+    769, 87, 776, 119, 776, 87, 775, 119, 775, 87, 803, 119, 803, 88, 775, 
+    120, 775, 88, 776, 120, 776, 89, 775, 121, 775, 90, 770, 122, 770, 
+    90, 803, 122, 803, 90, 817, 122, 817, 104, 817, 116, 776, 119, 778, 
+    121, 778, 97, 702, 65, 803, 97, 803, 65, 777, 97, 777, 65, 770, 769, 
+    97, 770, 769, 65, 770, 768, 97, 770, 768, 65, 770, 777, 97, 770, 777, 
+    65, 770, 771, 97, 770, 771, 65, 803, 770, 97, 803, 770, 65, 774, 769, 
+    97, 774, 769, 65, 774, 768, 97, 774, 768, 65, 774, 777, 97, 774, 777, 
+    65, 774, 771, 97, 774, 771, 65, 803, 774, 97, 803, 774, 69, 803, 101, 
+    803, 69, 777, 101, 777, 69, 771, 101, 771, 69, 770, 769, 101, 770, 
+    769, 69, 770, 768, 101, 770, 768, 69, 770, 777, 101, 770, 777, 69, 
+    770, 771, 101, 770, 771, 69, 803, 770, 101, 803, 770, 73, 777, 105, 
+    777, 73, 803, 105, 803, 79, 803, 111, 803, 79, 777, 111, 777, 79, 770, 
+    769, 111, 770, 769, 79, 770, 768, 111, 770, 768, 79, 770, 777, 111, 
+    770, 777, 79, 770, 771, 111, 770, 771, 79, 803, 770, 111, 803, 770, 
+    79, 795, 769, 111, 795, 769, 79, 795, 768, 111, 795, 768, 79, 795, 
+    777, 111, 795, 777, 79, 795, 771, 111, 795, 771, 79, 795, 803, 111, 
+    795, 803, 85, 803, 117, 803, 85, 777, 117, 777, 85, 795, 769, 117, 
+    795, 769, 85, 795, 768, 117, 795, 768, 85, 795, 777, 117, 795, 777, 
+    85, 795, 771, 117, 795, 771, 85, 795, 803, 117, 795, 803, 89, 768, 
+    121, 768, 89, 803, 121, 803, 89, 777, 121, 777, 89, 771, 121, 771, 
+    945, 787, 945, 788, 945, 787, 768, 945, 788, 768, 945, 787, 769, 945, 
+    788, 769, 945, 787, 834, 945, 788, 834, 913, 787, 913, 788, 913, 787, 
+    768, 913, 788, 768, 913, 787, 769, 913, 788, 769, 913, 787, 834, 913, 
+    788, 834, 949, 787, 949, 788, 949, 787, 768, 949, 788, 768, 949, 787, 
+    769, 949, 788, 769, 917, 787, 917, 788, 917, 787, 768, 917, 788, 768, 
+    917, 787, 769, 917, 788, 769, 951, 787, 951, 788, 951, 787, 768, 951, 
+    788, 768, 951, 787, 769, 951, 788, 769, 951, 787, 834, 951, 788, 834, 
+    919, 787, 919, 788, 919, 787, 768, 919, 788, 768, 919, 787, 769, 919, 
+    788, 769, 919, 787, 834, 919, 788, 834, 953, 787, 953, 788, 953, 787, 
+    768, 953, 788, 768, 953, 787, 769, 953, 788, 769, 953, 787, 834, 953, 
+    788, 834, 921, 787, 921, 788, 921, 787, 768, 921, 788, 768, 921, 787, 
+    769, 921, 788, 769, 921, 787, 834, 921, 788, 834, 959, 787, 959, 788, 
+    959, 787, 768, 959, 788, 768, 959, 787, 769, 959, 788, 769, 927, 787, 
+    927, 788, 927, 787, 768, 927, 788, 768, 927, 787, 769, 927, 788, 769, 
+    965, 787, 965, 788, 965, 787, 768, 965, 788, 768, 965, 787, 769, 965, 
+    788, 769, 965, 787, 834, 965, 788, 834, 933, 788, 933, 788, 768, 933, 
+    788, 769, 933, 788, 834, 969, 787, 969, 788, 969, 787, 768, 969, 788, 
+    768, 969, 787, 769, 969, 788, 769, 969, 787, 834, 969, 788, 834, 937, 
+    787, 937, 788, 937, 787, 768, 937, 788, 768, 937, 787, 769, 937, 788, 
+    769, 937, 787, 834, 937, 788, 834, 945, 768, 949, 768, 951, 768, 953, 
+    768, 959, 768, 965, 768, 969, 768, 945, 787, 837, 945, 788, 837, 945, 
+    787, 768, 837, 945, 788, 768, 837, 945, 787, 769, 837, 945, 788, 769, 
+    837, 945, 787, 834, 837, 945, 788, 834, 837, 913, 787, 837, 913, 788, 
+    837, 913, 787, 768, 837, 913, 788, 768, 837, 913, 787, 769, 837, 913, 
+    788, 769, 837, 913, 787, 834, 837, 913, 788, 834, 837, 951, 787, 837, 
+    951, 788, 837, 951, 787, 768, 837, 951, 788, 768, 837, 951, 787, 769, 
+    837, 951, 788, 769, 837, 951, 787, 834, 837, 951, 788, 834, 837, 919, 
+    787, 837, 919, 788, 837, 919, 787, 768, 837, 919, 788, 768, 837, 919, 
+    787, 769, 837, 919, 788, 769, 837, 919, 787, 834, 837, 919, 788, 834, 
+    837, 969, 787, 837, 969, 788, 837, 969, 787, 768, 837, 969, 788, 768, 
+    837, 969, 787, 769, 837, 969, 788, 769, 837, 969, 787, 834, 837, 969, 
+    788, 834, 837, 937, 787, 837, 937, 788, 837, 937, 787, 768, 837, 937, 
+    788, 768, 837, 937, 787, 769, 837, 937, 788, 769, 837, 937, 787, 834, 
+    837, 937, 788, 834, 837, 945, 774, 945, 772, 945, 768, 837, 945, 837, 
+    945, 769, 837, 945, 834, 945, 834, 837, 913, 774, 913, 772, 913, 768, 
+    913, 837, 32, 787, 953, 32, 834, 32, 776, 834, 951, 768, 837, 951, 
+    837, 951, 769, 837, 951, 834, 951, 834, 837, 917, 768, 919, 768, 919, 
+    837, 32, 787, 768, 32, 787, 769, 32, 787, 834, 953, 774, 953, 772, 
+    953, 776, 768, 953, 834, 953, 776, 834, 921, 774, 921, 772, 921, 768, 
+    32, 788, 768, 32, 788, 769, 32, 788, 834, 965, 774, 965, 772, 965, 
+    776, 768, 961, 787, 961, 788, 965, 834, 965, 776, 834, 933, 774, 933, 
+    772, 933, 768, 929, 788, 32, 776, 768, 96, 969, 768, 837, 969, 837, 
+    969, 769, 837, 969, 834, 969, 834, 837, 927, 768, 937, 768, 937, 837, 
+    32, 788, 8208, 32, 819, 46, 46, 46, 46, 46, 46, 8242, 8242, 8242, 8242, 
+    8242, 8245, 8245, 8245, 8245, 8245, 33, 33, 32, 773, 63, 63, 63, 33, 
+    33, 63, 8242, 8242, 8242, 8242, 48, 105, 52, 53, 54, 55, 56, 57, 43, 
+    8722, 61, 40, 41, 110, 82, 115, 97, 47, 99, 97, 47, 115, 67, 176, 67, 
+    99, 47, 111, 99, 47, 117, 400, 176, 70, 103, 72, 295, 73, 76, 78, 78, 
+    111, 80, 81, 82, 83, 77, 84, 69, 76, 84, 77, 90, 937, 75, 66, 101, 
+    69, 70, 77, 1488, 1489, 1490, 1491, 947, 915, 928, 8721, 68, 100, 49, 
+    8260, 51, 50, 8260, 51, 49, 8260, 53, 50, 8260, 53, 51, 8260, 53, 52, 
+    8260, 53, 49, 8260, 54, 53, 8260, 54, 49, 8260, 56, 51, 8260, 56, 53, 
+    8260, 56, 55, 8260, 56, 49, 8260, 73, 73, 73, 73, 73, 73, 86, 86, 86, 
+    73, 86, 73, 73, 86, 73, 73, 73, 73, 88, 88, 88, 73, 88, 73, 73, 105, 
+    105, 105, 105, 105, 105, 118, 118, 118, 105, 118, 105, 105, 118, 105, 
+    105, 105, 105, 120, 120, 105, 120, 105, 105, 99, 109, 8592, 824, 8594, 
+    824, 8596, 824, 8656, 824, 8660, 824, 8658, 824, 8707, 824, 8712, 824, 
+    8715, 824, 8739, 824, 8741, 824, 8747, 8747, 8747, 8747, 8747, 8750, 
+    8750, 8750, 8750, 8750, 8764, 824, 8771, 824, 8773, 824, 8776, 824, 
+    61, 824, 8801, 824, 8781, 824, 60, 824, 62, 824, 8804, 824, 8805, 824, 
+    8818, 824, 8819, 824, 8822, 824, 8823, 824, 8826, 824, 8827, 824, 8834, 
+    824, 8835, 824, 8838, 824, 8839, 824, 8866, 824, 8872, 824, 8873, 824, 
+    8875, 824, 8828, 824, 8829, 824, 8849, 824, 8850, 824, 8882, 824, 8883, 
+    824, 8884, 824, 8885, 824, 12296, 12297, 49, 48, 49, 49, 49, 50, 49, 
+    51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 40, 49, 
+    41, 40, 50, 41, 40, 51, 41, 40, 52, 41, 40, 53, 41, 40, 54, 41, 40, 
+    55, 41, 40, 56, 41, 40, 57, 41, 40, 49, 48, 41, 40, 49, 49, 41, 40, 
+    49, 50, 41, 40, 49, 51, 41, 40, 49, 52, 41, 40, 49, 53, 41, 40, 49, 
+    54, 41, 40, 49, 55, 41, 40, 49, 56, 41, 40, 49, 57, 41, 40, 50, 48, 
+    41, 49, 46, 50, 46, 51, 46, 52, 46, 53, 46, 54, 46, 55, 46, 56, 46, 
+    57, 46, 49, 48, 46, 49, 49, 46, 49, 50, 46, 49, 51, 46, 49, 52, 46, 
+    49, 53, 46, 49, 54, 46, 49, 55, 46, 49, 56, 46, 49, 57, 46, 50, 48, 
+    46, 40, 97, 41, 40, 98, 41, 40, 99, 41, 40, 100, 41, 40, 101, 41, 40, 
+    102, 41, 40, 103, 41, 40, 104, 41, 40, 105, 41, 40, 106, 41, 40, 107, 
+    41, 40, 108, 41, 40, 109, 41, 40, 110, 41, 40, 111, 41, 40, 112, 41, 
+    40, 113, 41, 40, 114, 41, 40, 115, 41, 40, 116, 41, 40, 117, 41, 40, 
+    118, 41, 40, 119, 41, 40, 120, 41, 40, 121, 41, 40, 122, 41, 65, 71, 
+    74, 79, 83, 84, 85, 87, 89, 98, 102, 107, 112, 113, 116, 117, 122, 
+    8747, 8747, 8747, 8747, 58, 58, 61, 61, 61, 61, 61, 61, 10973, 824, 
+    27597, 40863, 19968, 20008, 20022, 20031, 20057, 20101, 20108, 20128, 
+    20154, 20799, 20837, 20843, 20866, 20886, 20907, 20960, 20981, 20992, 
+    21147, 21241, 21269, 21274, 21304, 21313, 21340, 21353, 21378, 21430, 
+    21448, 21475, 22231, 22303, 22763, 22786, 22794, 22805, 22823, 22899, 
+    23376, 23424, 23544, 23567, 23586, 23608, 23662, 23665, 24027, 24037, 
+    24049, 24062, 24178, 24186, 24191, 24308, 24318, 24331, 24339, 24400, 
+    24417, 24435, 24515, 25096, 25142, 25163, 25903, 25908, 25991, 26007, 
+    26020, 26041, 26080, 26085, 26352, 26376, 26408, 27424, 27490, 27513, 
+    27571, 27595, 27604, 27611, 27663, 27668, 27700, 28779, 29226, 29238, 
+    29243, 29247, 29255, 29273, 29275, 29356, 29572, 29577, 29916, 29926, 
+    29976, 29983, 29992, 30000, 30091, 30098, 30326, 30333, 30382, 30399, 
+    30446, 30683, 30690, 30707, 31034, 31160, 31166, 31348, 31435, 31481, 
+    31859, 31992, 32566, 32593, 32650, 32701, 32769, 32780, 32786, 32819, 
+    32895, 32905, 33251, 33258, 33267, 33276, 33292, 33307, 33311, 33390, 
+    33394, 33400, 34381, 34411, 34880, 34892, 34915, 35198, 35211, 35282, 
+    35328, 35895, 35910, 35925, 35960, 35997, 36196, 36208, 36275, 36523, 
+    36554, 36763, 36784, 36789, 37009, 37193, 37318, 37324, 37329, 38263, 
+    38272, 38428, 38582, 38585, 38632, 38737, 38750, 38754, 38761, 38859, 
+    38893, 38899, 38913, 39080, 39131, 39135, 39318, 39321, 39340, 39592, 
+    39640, 39647, 39717, 39727, 39730, 39740, 39770, 40165, 40565, 40575, 
+    40613, 40635, 40643, 40653, 40657, 40697, 40701, 40718, 40723, 40736, 
+    40763, 40778, 40786, 40845, 40860, 40864, 12306, 21316, 21317, 12363, 
+    12441, 12365, 12441, 12367, 12441, 12369, 12441, 12371, 12441, 12373, 
+    12441, 12375, 12441, 12377, 12441, 12379, 12441, 12381, 12441, 12383, 
+    12441, 12385, 12441, 12388, 12441, 12390, 12441, 12392, 12441, 12399, 
+    12441, 12399, 12442, 12402, 12441, 12402, 12442, 12405, 12441, 12405, 
+    12442, 12408, 12441, 12408, 12442, 12411, 12441, 12411, 12442, 12358, 
+    12441, 32, 12441, 32, 12442, 12445, 12441, 12424, 12426, 12459, 12441, 
+    12461, 12441, 12463, 12441, 12465, 12441, 12467, 12441, 12469, 12441, 
+    12471, 12441, 12473, 12441, 12475, 12441, 12477, 12441, 12479, 12441, 
+    12481, 12441, 12484, 12441, 12486, 12441, 12488, 12441, 12495, 12441, 
+    12495, 12442, 12498, 12441, 12498, 12442, 12501, 12441, 12501, 12442, 
+    12504, 12441, 12504, 12442, 12507, 12441, 12507, 12442, 12454, 12441, 
+    12527, 12441, 12528, 12441, 12529, 12441, 12530, 12441, 12541, 12441, 
+    12467, 12488, 4352, 4353, 4522, 4354, 4524, 4525, 4355, 4356, 4357, 
+    4528, 4529, 4530, 4531, 4532, 4533, 4378, 4358, 4359, 4360, 4385, 4361, 
+    4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4449, 4450, 4451, 
+    4452, 4453, 4454, 4455, 4456, 4457, 4458, 4459, 4460, 4461, 4462, 4463, 
+    4464, 4465, 4466, 4467, 4468, 4469, 4448, 4372, 4373, 4551, 4552, 4556, 
+    4558, 4563, 4567, 4569, 4380, 4573, 4575, 4381, 4382, 4384, 4386, 4387, 
+    4391, 4393, 4395, 4396, 4397, 4398, 4399, 4402, 4406, 4416, 4423, 4428, 
+    4593, 4594, 4439, 4440, 4441, 4484, 4485, 4488, 4497, 4498, 4500, 4510, 
+    4513, 19977, 22235, 19978, 20013, 19979, 30002, 19993, 19969, 22825, 
+    22320, 40, 4352, 41, 40, 4354, 41, 40, 4355, 41, 40, 4357, 41, 40, 
+    4358, 41, 40, 4359, 41, 40, 4361, 41, 40, 4363, 41, 40, 4364, 41, 40, 
+    4366, 41, 40, 4367, 41, 40, 4368, 41, 40, 4369, 41, 40, 4370, 41, 40, 
+    4352, 4449, 41, 40, 4354, 4449, 41, 40, 4355, 4449, 41, 40, 4357, 4449, 
+    41, 40, 4358, 4449, 41, 40, 4359, 4449, 41, 40, 4361, 4449, 41, 40, 
+    4363, 4449, 41, 40, 4364, 4449, 41, 40, 4366, 4449, 41, 40, 4367, 4449, 
+    41, 40, 4368, 4449, 41, 40, 4369, 4449, 41, 40, 4370, 4449, 41, 40, 
+    4364, 4462, 41, 40, 19968, 41, 40, 20108, 41, 40, 19977, 41, 40, 22235, 
+    41, 40, 20116, 41, 40, 20845, 41, 40, 19971, 41, 40, 20843, 41, 40, 
+    20061, 41, 40, 21313, 41, 40, 26376, 41, 40, 28779, 41, 40, 27700, 
+    41, 40, 26408, 41, 40, 37329, 41, 40, 22303, 41, 40, 26085, 41, 40, 
+    26666, 41, 40, 26377, 41, 40, 31038, 41, 40, 21517, 41, 40, 29305, 
+    41, 40, 36001, 41, 40, 31069, 41, 40, 21172, 41, 40, 20195, 41, 40, 
+    21628, 41, 40, 23398, 41, 40, 30435, 41, 40, 20225, 41, 40, 36039, 
+    41, 40, 21332, 41, 40, 31085, 41, 40, 20241, 41, 40, 33258, 41, 40, 
+    33267, 41, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 
+    50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 4352, 
+    4449, 4354, 4449, 4355, 4449, 4357, 4449, 4358, 4449, 4359, 4449, 4361, 
+    4449, 4363, 4449, 4364, 4449, 4366, 4449, 4367, 4449, 4368, 4449, 4369, 
+    4449, 4370, 4449, 20116, 20845, 19971, 20061, 26666, 26377, 31038, 
+    21517, 29305, 36001, 31069, 21172, 31192, 30007, 36969, 20778, 21360, 
+    27880, 38917, 20241, 20889, 27491, 24038, 21491, 21307, 23447, 23398, 
+    30435, 20225, 36039, 21332, 22812, 51, 54, 51, 55, 51, 56, 51, 57, 
+    52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 
+    56, 52, 57, 53, 48, 49, 26376, 50, 26376, 51, 26376, 52, 26376, 53, 
+    26376, 54, 26376, 55, 26376, 56, 26376, 57, 26376, 49, 48, 26376, 49, 
+    49, 26376, 49, 50, 26376, 12450, 12452, 12454, 12456, 12458, 12459, 
+    12461, 12463, 12465, 12467, 12469, 12471, 12473, 12475, 12477, 12479, 
+    12481, 12484, 12486, 12488, 12490, 12491, 12492, 12493, 12494, 12495, 
+    12498, 12501, 12504, 12507, 12510, 12511, 12512, 12513, 12514, 12516, 
+    12518, 12520, 12521, 12522, 12523, 12524, 12525, 12527, 12528, 12529, 
+    12530, 12450, 12495, 12442, 12540, 12488, 12450, 12523, 12501, 12449, 
+    12450, 12531, 12504, 12442, 12450, 12450, 12540, 12523, 12452, 12491, 
+    12531, 12463, 12441, 12452, 12531, 12481, 12454, 12457, 12531, 12456, 
+    12473, 12463, 12540, 12488, 12441, 12456, 12540, 12459, 12540, 12458, 
+    12531, 12473, 12458, 12540, 12512, 12459, 12452, 12522, 12459, 12521, 
+    12483, 12488, 12459, 12525, 12522, 12540, 12459, 12441, 12525, 12531, 
+    12459, 12441, 12531, 12510, 12461, 12441, 12459, 12441, 12461, 12441, 
+    12491, 12540, 12461, 12517, 12522, 12540, 12461, 12441, 12523, 12479, 
+    12441, 12540, 12461, 12525, 12461, 12525, 12463, 12441, 12521, 12512, 
+    12461, 12525, 12513, 12540, 12488, 12523, 12461, 12525, 12527, 12483, 
+    12488, 12463, 12441, 12521, 12512, 12463, 12441, 12521, 12512, 12488, 
+    12531, 12463, 12523, 12475, 12441, 12452, 12525, 12463, 12525, 12540, 
+    12493, 12465, 12540, 12473, 12467, 12523, 12490, 12467, 12540, 12507, 
+    12442, 12469, 12452, 12463, 12523, 12469, 12531, 12481, 12540, 12512, 
+    12471, 12522, 12531, 12463, 12441, 12475, 12531, 12481, 12475, 12531, 
+    12488, 12479, 12441, 12540, 12473, 12486, 12441, 12471, 12488, 12441, 
+    12523, 12488, 12531, 12490, 12494, 12494, 12483, 12488, 12495, 12452, 
+    12484, 12495, 12442, 12540, 12475, 12531, 12488, 12495, 12442, 12540, 
+    12484, 12495, 12441, 12540, 12524, 12523, 12498, 12442, 12450, 12473, 
+    12488, 12523, 12498, 12442, 12463, 12523, 12498, 12442, 12467, 12498, 
+    12441, 12523, 12501, 12449, 12521, 12483, 12488, 12441, 12501, 12451, 
+    12540, 12488, 12501, 12441, 12483, 12471, 12455, 12523, 12501, 12521, 
+    12531, 12504, 12463, 12479, 12540, 12523, 12504, 12442, 12477, 12504, 
+    12442, 12491, 12498, 12504, 12523, 12484, 12504, 12442, 12531, 12473, 
+    12504, 12442, 12540, 12471, 12441, 12504, 12441, 12540, 12479, 12507, 
+    12442, 12452, 12531, 12488, 12507, 12441, 12523, 12488, 12507, 12531, 
+    12507, 12442, 12531, 12488, 12441, 12507, 12540, 12523, 12507, 12540, 
+    12531, 12510, 12452, 12463, 12525, 12510, 12452, 12523, 12510, 12483, 
+    12495, 12510, 12523, 12463, 12510, 12531, 12471, 12519, 12531, 12511, 
+    12463, 12525, 12531, 12511, 12522, 12511, 12522, 12495, 12441, 12540, 
+    12523, 12513, 12459, 12441, 12513, 12459, 12441, 12488, 12531, 12513, 
+    12540, 12488, 12523, 12516, 12540, 12488, 12441, 12516, 12540, 12523, 
+    12518, 12450, 12531, 12522, 12483, 12488, 12523, 12522, 12521, 12523, 
+    12498, 12442, 12540, 12523, 12540, 12501, 12441, 12523, 12524, 12512, 
+    12524, 12531, 12488, 12465, 12441, 12531, 12527, 12483, 12488, 48, 
+    28857, 49, 28857, 50, 28857, 51, 28857, 52, 28857, 53, 28857, 54, 28857, 
+    55, 28857, 56, 28857, 57, 28857, 49, 48, 28857, 49, 49, 28857, 49, 
+    50, 28857, 49, 51, 28857, 49, 52, 28857, 49, 53, 28857, 49, 54, 28857, 
+    49, 55, 28857, 49, 56, 28857, 49, 57, 28857, 50, 48, 28857, 50, 49, 
+    28857, 50, 50, 28857, 50, 51, 28857, 50, 52, 28857, 104, 80, 97, 100, 
+    97, 65, 85, 98, 97, 114, 111, 86, 112, 99, 24179, 25104, 26157, 21644, 
+    22823, 27491, 26126, 27835, 26666, 24335, 20250, 31038, 112, 65, 110, 
+    65, 956, 65, 109, 65, 107, 65, 75, 66, 77, 66, 71, 66, 99, 97, 108, 
+    107, 99, 97, 108, 112, 70, 110, 70, 956, 70, 956, 103, 109, 103, 107, 
+    103, 72, 122, 107, 72, 122, 77, 72, 122, 71, 72, 122, 84, 72, 122, 
+    956, 108, 109, 108, 100, 108, 107, 108, 102, 109, 110, 109, 956, 109, 
+    109, 109, 99, 109, 107, 109, 109, 109, 50, 99, 109, 50, 109, 50, 107, 
+    109, 50, 109, 109, 51, 99, 109, 51, 109, 51, 107, 109, 51, 109, 8725, 
+    115, 109, 8725, 115, 50, 80, 97, 107, 80, 97, 77, 80, 97, 71, 80, 97, 
+    114, 97, 100, 114, 97, 100, 8725, 115, 114, 97, 100, 8725, 115, 50, 
+    112, 115, 110, 115, 956, 115, 109, 115, 112, 86, 110, 86, 956, 86, 
+    109, 86, 107, 86, 77, 86, 112, 87, 110, 87, 956, 87, 109, 87, 107, 
+    87, 77, 87, 107, 937, 77, 937, 97, 46, 109, 46, 66, 113, 99, 99, 99, 
+    100, 67, 8725, 107, 103, 67, 111, 46, 100, 66, 71, 121, 104, 97, 72, 
+    80, 105, 110, 75, 75, 75, 77, 107, 116, 108, 109, 108, 110, 108, 111, 
+    103, 108, 120, 109, 98, 109, 105, 108, 109, 111, 108, 80, 72, 112, 
+    46, 109, 46, 80, 80, 77, 80, 82, 115, 114, 83, 118, 87, 98, 49, 26085, 
+    50, 26085, 51, 26085, 52, 26085, 53, 26085, 54, 26085, 55, 26085, 56, 
+    26085, 57, 26085, 49, 48, 26085, 49, 49, 26085, 49, 50, 26085, 49, 
+    51, 26085, 49, 52, 26085, 49, 53, 26085, 49, 54, 26085, 49, 55, 26085, 
+    49, 56, 26085, 49, 57, 26085, 50, 48, 26085, 50, 49, 26085, 50, 50, 
+    26085, 50, 51, 26085, 50, 52, 26085, 50, 53, 26085, 50, 54, 26085, 
+    50, 55, 26085, 50, 56, 26085, 50, 57, 26085, 51, 48, 26085, 51, 49, 
+    26085, 35912, 26356, 36040, 28369, 20018, 21477, 22865, 21895, 22856, 
+    25078, 30313, 32645, 34367, 34746, 35064, 37007, 27138, 27931, 28889, 
+    29662, 33853, 37226, 39409, 20098, 21365, 27396, 29211, 34349, 40478, 
+    23888, 28651, 34253, 35172, 25289, 33240, 34847, 24266, 26391, 28010, 
+    29436, 37070, 20358, 20919, 21214, 25796, 27347, 29200, 30439, 34310, 
+    34396, 36335, 38706, 39791, 40442, 30860, 31103, 32160, 33737, 37636, 
+    35542, 22751, 24324, 31840, 32894, 29282, 30922, 36034, 38647, 22744, 
+    23650, 27155, 28122, 28431, 32047, 32311, 38475, 21202, 32907, 20956, 
+    20940, 31260, 32190, 33777, 38517, 35712, 25295, 35582, 20025, 23527, 
+    24594, 29575, 30064, 21271, 30971, 20415, 24489, 19981, 27852, 25976, 
+    32034, 21443, 22622, 30465, 33865, 35498, 27578, 27784, 25342, 33509, 
+    25504, 30053, 20142, 20841, 20937, 26753, 31975, 33391, 35538, 37327, 
+    21237, 21570, 24300, 26053, 28670, 31018, 38317, 39530, 40599, 40654, 
+    26310, 27511, 36706, 24180, 24976, 25088, 25754, 28451, 29001, 29833, 
+    31178, 32244, 32879, 36646, 34030, 36899, 37706, 21015, 21155, 21693, 
+    28872, 35010, 24265, 24565, 25467, 27566, 31806, 29557, 20196, 22265, 
+    23994, 24604, 29618, 29801, 32666, 32838, 37428, 38646, 38728, 38936, 
+    20363, 31150, 37300, 38584, 24801, 20102, 20698, 23534, 23615, 26009, 
+    29134, 30274, 34044, 36988, 26248, 38446, 21129, 26491, 26611, 27969, 
+    28316, 29705, 30041, 30827, 32016, 39006, 25134, 38520, 20523, 23833, 
+    28138, 36650, 24459, 24900, 26647, 38534, 21033, 21519, 23653, 26131, 
+    26446, 26792, 27877, 29702, 30178, 32633, 35023, 35041, 38626, 21311, 
+    28346, 21533, 29136, 29848, 34298, 38563, 40023, 40607, 26519, 28107, 
+    33256, 31520, 31890, 29376, 28825, 35672, 20160, 33590, 21050, 20999, 
+    24230, 25299, 31958, 23429, 27934, 26292, 36667, 38477, 24275, 20800, 
+    21952, 22618, 26228, 20958, 29482, 30410, 31036, 31070, 31077, 31119, 
+    38742, 31934, 34322, 35576, 36920, 37117, 39151, 39164, 39208, 40372, 
+    20398, 20711, 20813, 21193, 21220, 21329, 21917, 22022, 22120, 22592, 
+    22696, 23652, 24724, 24936, 24974, 25074, 25935, 26082, 26257, 26757, 
+    28023, 28186, 28450, 29038, 29227, 29730, 30865, 31049, 31048, 31056, 
+    31062, 31117, 31118, 31296, 31361, 31680, 32265, 32321, 32626, 32773, 
+    33261, 33401, 33879, 35088, 35222, 35585, 35641, 36051, 36104, 36790, 
+    38627, 38911, 38971, 102, 102, 102, 105, 102, 108, 102, 102, 105, 102, 
+    102, 108, 115, 116, 1396, 1398, 1396, 1381, 1396, 1387, 1406, 1398, 
+    1396, 1389, 1497, 1460, 1522, 1463, 1506, 1492, 1499, 1500, 1501, 1512, 
+    1514, 1513, 1473, 1513, 1474, 1513, 1468, 1473, 1513, 1468, 1474, 1488, 
+    1463, 1488, 1464, 1488, 1468, 1489, 1468, 1490, 1468, 1491, 1468, 1492, 
+    1468, 1493, 1468, 1494, 1468, 1496, 1468, 1497, 1468, 1498, 1468, 1499, 
+    1468, 1500, 1468, 1502, 1468, 1504, 1468, 1505, 1468, 1507, 1468, 1508, 
+    1468, 1510, 1468, 1511, 1468, 1512, 1468, 1513, 1468, 1514, 1468, 1493, 
+    1465, 1489, 1471, 1499, 1471, 1508, 1471, 1488, 1500, 1649, 1659, 1662, 
+    1664, 1658, 1663, 1657, 1700, 1702, 1668, 1667, 1670, 1671, 1677, 1676, 
+    1678, 1672, 1688, 1681, 1705, 1711, 1715, 1713, 1722, 1723, 1729, 1726, 
+    1746, 1709, 1735, 1734, 1736, 1739, 1733, 1737, 1744, 1609, 1610, 1620, 
+    1575, 1610, 1620, 1749, 1610, 1620, 1608, 1610, 1620, 1735, 1610, 1620, 
+    1734, 1610, 1620, 1736, 1610, 1620, 1744, 1610, 1620, 1609, 1740, 1610, 
+    1620, 1580, 1610, 1620, 1581, 1610, 1620, 1605, 1610, 1620, 1610, 1576, 
+    1580, 1576, 1581, 1576, 1582, 1576, 1605, 1576, 1609, 1576, 1610, 1578, 
+    1580, 1578, 1581, 1578, 1582, 1578, 1605, 1578, 1609, 1578, 1610, 1579, 
+    1580, 1579, 1605, 1579, 1609, 1579, 1610, 1580, 1581, 1580, 1605, 1581, 
+    1580, 1581, 1605, 1582, 1580, 1582, 1581, 1582, 1605, 1587, 1580, 1587, 
+    1581, 1587, 1582, 1587, 1605, 1589, 1581, 1589, 1605, 1590, 1580, 1590, 
+    1581, 1590, 1582, 1590, 1605, 1591, 1581, 1591, 1605, 1592, 1605, 1593, 
+    1580, 1593, 1605, 1594, 1580, 1594, 1605, 1601, 1580, 1601, 1581, 1601, 
+    1582, 1601, 1605, 1601, 1609, 1601, 1610, 1602, 1581, 1602, 1605, 1602, 
+    1609, 1602, 1610, 1603, 1575, 1603, 1580, 1603, 1581, 1603, 1582, 1603, 
+    1604, 1603, 1605, 1603, 1609, 1603, 1610, 1604, 1580, 1604, 1581, 1604, 
+    1582, 1604, 1605, 1604, 1609, 1604, 1610, 1605, 1580, 1605, 1581, 1605, 
+    1582, 1605, 1605, 1605, 1609, 1605, 1610, 1606, 1580, 1606, 1581, 1606, 
+    1582, 1606, 1605, 1606, 1609, 1606, 1610, 1607, 1580, 1607, 1605, 1607, 
+    1609, 1607, 1610, 1610, 1580, 1610, 1581, 1610, 1582, 1610, 1605, 1610, 
+    1609, 1610, 1610, 1584, 1648, 1585, 1648, 1609, 1648, 32, 1612, 1617, 
+    32, 1613, 1617, 32, 1614, 1617, 32, 1615, 1617, 32, 1616, 1617, 32, 
+    1617, 1648, 1610, 1620, 1585, 1610, 1620, 1586, 1610, 1620, 1606, 1576, 
+    1585, 1576, 1586, 1576, 1606, 1578, 1585, 1578, 1586, 1578, 1606, 1579, 
+    1585, 1579, 1586, 1579, 1606, 1605, 1575, 1606, 1585, 1606, 1586, 1606, 
+    1606, 1610, 1585, 1610, 1586, 1610, 1606, 1610, 1620, 1582, 1610, 1620, 
+    1607, 1576, 1607, 1578, 1607, 1589, 1582, 1604, 1607, 1606, 1607, 1607, 
+    1648, 1610, 1607, 1579, 1607, 1587, 1607, 1588, 1605, 1588, 1607, 1600, 
+    1614, 1617, 1600, 1615, 1617, 1600, 1616, 1617, 1591, 1609, 1591, 1610, 
+    1593, 1609, 1593, 1610, 1594, 1609, 1594, 1610, 1587, 1609, 1587, 1610, 
+    1588, 1609, 1588, 1610, 1581, 1609, 1581, 1610, 1580, 1609, 1580, 1610, 
+    1582, 1609, 1582, 1610, 1589, 1609, 1589, 1610, 1590, 1609, 1590, 1610, 
+    1588, 1580, 1588, 1581, 1588, 1582, 1588, 1585, 1587, 1585, 1589, 1585, 
+    1590, 1585, 1575, 1611, 1578, 1580, 1605, 1578, 1581, 1580, 1578, 1581, 
+    1605, 1578, 1582, 1605, 1578, 1605, 1580, 1578, 1605, 1581, 1578, 1605, 
+    1582, 1580, 1605, 1581, 1581, 1605, 1610, 1581, 1605, 1609, 1587, 1581, 
+    1580, 1587, 1580, 1581, 1587, 1580, 1609, 1587, 1605, 1581, 1587, 1605, 
+    1580, 1587, 1605, 1605, 1589, 1581, 1581, 1589, 1605, 1605, 1588, 1581, 
+    1605, 1588, 1580, 1610, 1588, 1605, 1582, 1588, 1605, 1605, 1590, 1581, 
+    1609, 1590, 1582, 1605, 1591, 1605, 1581, 1591, 1605, 1605, 1591, 1605, 
+    1610, 1593, 1580, 1605, 1593, 1605, 1605, 1593, 1605, 1609, 1594, 1605, 
+    1605, 1594, 1605, 1610, 1594, 1605, 1609, 1601, 1582, 1605, 1602, 1605, 
+    1581, 1602, 1605, 1605, 1604, 1581, 1605, 1604, 1581, 1610, 1604, 1581, 
+    1609, 1604, 1580, 1580, 1604, 1582, 1605, 1604, 1605, 1581, 1605, 1581, 
+    1580, 1605, 1581, 1605, 1605, 1581, 1610, 1605, 1580, 1581, 1605, 1580, 
+    1605, 1605, 1582, 1580, 1605, 1582, 1605, 1605, 1580, 1582, 1607, 1605, 
+    1580, 1607, 1605, 1605, 1606, 1581, 1605, 1606, 1581, 1609, 1606, 1580, 
+    1605, 1606, 1580, 1609, 1606, 1605, 1610, 1606, 1605, 1609, 1610, 1605, 
+    1605, 1576, 1582, 1610, 1578, 1580, 1610, 1578, 1580, 1609, 1578, 1582, 
+    1610, 1578, 1582, 1609, 1578, 1605, 1610, 1578, 1605, 1609, 1580, 1605, 
+    1610, 1580, 1581, 1609, 1580, 1605, 1609, 1587, 1582, 1609, 1589, 1581, 
+    1610, 1588, 1581, 1610, 1590, 1581, 1610, 1604, 1580, 1610, 1604, 1605, 
+    1610, 1610, 1581, 1610, 1610, 1580, 1610, 1610, 1605, 1610, 1605, 1605, 
+    1610, 1602, 1605, 1610, 1606, 1581, 1610, 1593, 1605, 1610, 1603, 1605, 
+    1610, 1606, 1580, 1581, 1605, 1582, 1610, 1604, 1580, 1605, 1603, 1605, 
+    1605, 1580, 1581, 1610, 1581, 1580, 1610, 1605, 1580, 1610, 1601, 1605, 
+    1610, 1576, 1581, 1610, 1587, 1582, 1610, 1606, 1580, 1610, 1589, 1604, 
+    1746, 1602, 1604, 1746, 1575, 1604, 1604, 1607, 1575, 1603, 1576, 1585, 
+    1605, 1581, 1605, 1583, 1589, 1604, 1593, 1605, 1585, 1587, 1608, 1604, 
+    1593, 1604, 1610, 1607, 1608, 1587, 1604, 1605, 1589, 1604, 1609, 1589, 
+    1604, 1609, 32, 1575, 1604, 1604, 1607, 32, 1593, 1604, 1610, 1607, 
+    32, 1608, 1587, 1604, 1605, 1580, 1604, 32, 1580, 1604, 1575, 1604, 
+    1607, 1585, 1740, 1575, 1604, 8212, 8211, 95, 123, 125, 12308, 12309, 
+    12304, 12305, 12298, 12299, 12300, 12301, 12302, 12303, 44, 12289, 
+    58, 63, 33, 35, 38, 42, 45, 60, 62, 92, 36, 37, 64, 32, 1611, 1600, 
+    1611, 32, 1612, 32, 1613, 32, 1614, 1600, 1614, 32, 1615, 1600, 1615, 
+    32, 1616, 1600, 1616, 32, 1617, 1600, 1617, 32, 1618, 1600, 1618, 1569, 
+    1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 
+    1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1601, 1602, 1603, 1604, 
+    1605, 1606, 1607, 1608, 1610, 1604, 1575, 1619, 1604, 1575, 1620, 1604, 
+    1575, 1621, 1604, 1575, 34, 39, 47, 91, 93, 94, 124, 126, 10629, 10630, 
+    12290, 12539, 12449, 12451, 12453, 12455, 12457, 12515, 12517, 12519, 
+    12483, 12540, 12531, 12441, 12442, 162, 163, 172, 166, 165, 8361, 9474, 
+    8592, 8593, 8594, 8595, 9632, 9675, 119127, 119141, 119128, 119141, 
+    119128, 119141, 119150, 119128, 119141, 119151, 119128, 119141, 119152, 
+    119128, 119141, 119153, 119128, 119141, 119154, 119225, 119141, 119226, 
+    119141, 119225, 119141, 119150, 119226, 119141, 119150, 119225, 119141, 
+    119151, 119226, 119141, 119151, 913, 914, 916, 917, 918, 919, 921, 
+    922, 923, 924, 925, 926, 927, 929, 931, 932, 934, 935, 936, 8711, 945, 
+    948, 950, 951, 955, 957, 958, 959, 963, 964, 965, 967, 968, 969, 8706, 
+    20029, 20024, 20033, 131362, 20320, 20411, 20482, 20602, 20633, 20687, 
+    13470, 132666, 20820, 20836, 20855, 132380, 13497, 20839, 20877, 132427, 
+    20887, 20900, 20172, 20908, 20917, 168415, 20995, 13535, 21051, 21062, 
+    21106, 21111, 13589, 21191, 21242, 21253, 21254, 21321, 21338, 21363, 
+    21373, 21375, 133676, 28784, 21450, 21471, 133987, 21483, 21489, 21510, 
+    21662, 21560, 21576, 21608, 21666, 21750, 21776, 21843, 21859, 21892, 
+    21913, 21931, 21939, 21954, 22294, 22295, 22097, 22132, 22766, 22478, 
+    22516, 22541, 22411, 22578, 22577, 22700, 136420, 22770, 22775, 22790, 
+    22810, 22818, 22882, 136872, 136938, 23020, 23067, 23079, 23000, 23142, 
+    14062, 136042, 23304, 23358, 137672, 23491, 23512, 23539, 138008, 23551, 
+    23558, 24371, 14209, 23648, 23744, 23693, 138724, 23875, 138726, 23918, 
+    23915, 23932, 24033, 24034, 14383, 24061, 24104, 24125, 24169, 14434, 
+    139651, 14460, 24240, 24243, 24246, 172946, 140081, 33281, 24354, 14535, 
+    144056, 156122, 24418, 24427, 14563, 24474, 24525, 24535, 24569, 24705, 
+    14650, 14620, 141012, 24775, 24904, 24908, 24910, 24954, 25010, 24996, 
+    25007, 25054, 25104, 25115, 25181, 25265, 25300, 25424, 142092, 25405, 
+    25340, 25448, 25475, 25572, 142321, 25634, 25541, 25513, 14894, 25705, 
+    25726, 25757, 25719, 14956, 25964, 143370, 26083, 26360, 26185, 15129, 
+    15112, 15076, 20882, 20885, 26368, 26268, 32941, 17369, 26395, 26401, 
+    26462, 26451, 144323, 15177, 26618, 26501, 26706, 144493, 26766, 26655, 
+    26900, 15261, 26946, 27043, 27114, 27304, 145059, 27355, 15384, 27425, 
+    145575, 27476, 15438, 27506, 27551, 27579, 146061, 138507, 146170, 
+    27726, 146620, 27839, 27853, 27751, 27926, 27966, 28009, 28024, 28037, 
+    146718, 27956, 28207, 28270, 15667, 28363, 28359, 147153, 28153, 28526, 
+    147294, 147342, 28614, 28729, 28702, 28699, 15766, 28746, 28797, 28791, 
+    28845, 132389, 28997, 148067, 29084, 17323, 29224, 29237, 29264, 149000, 
+    29312, 29333, 149301, 149524, 29562, 29579, 16044, 29605, 16056, 29767, 
+    29788, 29809, 29829, 29898, 16155, 29988, 150582, 30014, 150674, 139679, 
+    30224, 151457, 151480, 151620, 16380, 16392, 30452, 151795, 151794, 
+    151833, 151859, 30494, 30495, 30538, 16441, 30603, 16454, 16534, 152605, 
+    30798, 30924, 16611, 153126, 153242, 153285, 31211, 16687, 31306, 31311, 
+    153980, 154279, 31406, 16898, 154539, 31686, 31689, 16935, 154752, 
+    31954, 17056, 31976, 31971, 32000, 155526, 32099, 17153, 32199, 32258, 
+    32325, 17204, 156200, 156231, 17241, 156377, 32634, 156478, 32661, 
+    32762, 156890, 156963, 32864, 157096, 32880, 144223, 17365, 32946, 
+    33027, 17419, 33086, 23221, 157607, 157621, 144275, 144284, 33284, 
+    36766, 17515, 33425, 33419, 33437, 21171, 33457, 33459, 33469, 33510, 
+    158524, 33565, 33635, 33709, 33571, 33725, 33767, 33619, 33738, 33740, 
+    33756, 158774, 159083, 158933, 17707, 34033, 34035, 34070, 160714, 
+    34148, 159532, 17757, 17761, 159665, 159954, 17771, 34384, 34407, 34409, 
+    34473, 34440, 34574, 34530, 34681, 34600, 34667, 34694, 19799, 34785, 
+    34817, 17913, 34912, 161383, 35031, 35038, 17973, 35066, 13499, 161966, 
+    162150, 18110, 18119, 35488, 35565, 35722, 162984, 36011, 36033, 36123, 
+    36215, 163631, 133124, 36299, 36284, 36336, 133342, 36564, 36664, 165330, 
+    165357, 37012, 37105, 37137, 165678, 37147, 37432, 37591, 37592, 37500, 
+    37881, 37909, 166906, 38283, 18837, 38327, 167287, 18918, 38595, 23986, 
+    38691, 168261, 168474, 19054, 19062, 38880, 168970, 19122, 169110, 
+    38923, 38953, 169398, 39138, 19251, 39209, 39335, 39362, 39422, 19406, 
+    170800, 39698, 40000, 40189, 19662, 19693, 40295, 172238, 19704, 172293, 
+    172558, 172689, 19798, 40702, 40709, 40719, 40726, 173568
+};
+
+
+/*
+ * This macro extracts the information about a character from the
+ * Unicode character tables.
+ */
+
+#define GetUniCharDecompInfo(ch) (decompGroupMap[(decompPageMap[(((int)(ch)) & 0x1fffff) >> DECOMP_OFFSET_BITS] << DECOMP_OFFSET_BITS) | ((ch) & ((1 << DECOMP_OFFSET_BITS)-1))])
+
+#define GetDecompShift(info) ((info) & 0xffff)
+#define GetDecompLen(info) ((info) >> 16)
+
+
+#define COMP_OFFSET_BITS 8
+
+/*
+ * The pageMap is indexed by page number and returns an alternate page number
+ * that identifies a unique page of characters.  Many Unicode characters map
+ * to the same alternate page number.
+ */
+
+static unsigned char compPageMap[] = {
+    0, 1, 2, 3, 4, 5, 6, 5, 5, 7, 5, 8, 9, 10, 5, 5, 11, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 12, 13, 5, 14, 15, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 16, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
+    5, 5, 5, 5, 5, 5, 5, 5, 5
+};
+
+/*
+ * The groupMap is indexed by combining the alternate page number with
+ * the page offset and returns a group number that identifies a unique
+ * set of character attributes.
+ */
+
+static int compGroupMap[] = {
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, 65564, 65640, 65738, -1, -1, 30, 
+    91, 141, 65, 121, 65701, 38, 94, 1, 65604, 124, 44, 100, 12, 76, 77, 
+    -1, 48, 105, 17, 84, 136, 54, 113, 23, 24, -1, -1, -1, -1, -1, -1, 
+    140, 64, 120, 71, 123, 65573, 99, 10, 75, 129, 47, 104, 16, 15, 83, 
+    135, -1, 110, 22, 86, 137, 59, 117, 118, 28, 89, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, 102, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6, -1, 
+    65713, 65575, 101, 65550, -1, -1, 42, -1, -1, -1, -1, 65576, -1, -1, 
+    -1, -1, 130, 50, 65678, -1, 65628, -1, -1, -1, 115, -1, -1, -1, -1, 
+    -1, 32, -1, 65742, 65600, 67, 65704, -1, -1, 5, -1, -1, -1, -1, 65549, 
+    -1, -1, -1, -1, 107, 20, 65626, -1, 65587, -1, -1, -1, 87, -1, -1, 
+    -1, -1, -1, 142, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, 106, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, 37, 93, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, 65624, 65722, -1, -1, -1, -1, 65632, 65730, 
+    -1, -1, -1, -1, -1, -1, 65597, 65699, 65567, 65649, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 65728, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 81, 131, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 119, 33, -1, -1, 
+    -1, -1, -1, -1, 65546, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, 65593, 65696, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 65675, 
+    65554, 65625, 65724, -1, -1, -1, -1, 65731, 65590, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, 65729, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, 131073, 131074, 131075, 131077, 131079, -1, 131080, 131082, 131083, 
+    131084, 131098, 131102, 131085, -1, -1, 131086, -1, 131087, -1, 131076, 
+    131078, -1, -1, -1, -1, -1, -1, 131103, -1, -1, -1, -1, -1, -1, -1, 
+    131088, 131104, 131101, 131097, 131092, 131089, -1, -1, -1, -1, 131094, 
+    131093, -1, 131090, 131095, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, 131091, -1, -1, 131072, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, 34, -1, -1, -1, 122, -1, 96, -1, 8, -1, -1, -1, -1, -1, 80, 
+    -1, 65586, -1, -1, -1, 85, -1, -1, -1, 26, -1, -1, 65539, -1, 65707, 
+    -1, -1, 2, -1, -1, -1, 95, -1, 7, -1, 125, -1, -1, -1, -1, -1, 51, 
+    -1, 111, -1, -1, -1, 56, -1, -1, -1, 0, 138, 62, -1, -1, 65664, -1, 
+    -1, -1, 39, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, 65736, -1, -1, -1, -1, -1, -1, -1, -1, -1, 97, -1, -1, 
+    65714, -1, 103, 14, 65622, 132, -1, 65581, -1, -1, -1, 65727, -1, -1, 
+    -1, -1, 139, -1, -1, -1, 65566, -1, -1, -1, 65706, -1, 65663, -1, -1, 
+    72, -1, -1, 65670, -1, 79, 133, 65582, 52, -1, 65556, -1, -1, -1, 65687, 
+    -1, -1, -1, -1, 63, -1, -1, -1, 65744, -1, -1, -1, 65659, -1, 65595, 
+    -1, -1, -1, -1, -1, -1, -1, -1, 65658, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, 65661, 65545, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, 65651, 65542, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, 65682, 65559, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, 143, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    65733, -1, 65657, -1, -1, -1, -1, -1, -1, -1, -1, 196618, 131108, 196619, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, 65618, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, 65612, -1, -1, 65611, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, 65734, -1, -1, -1, -1, -1, -1, -1, 
+    65656, -1, -1, 65655, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, 196611, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 196612, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    196613, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, 196614, 196615, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, 65577, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 131105, -1, -1, 
+    -1, -1, -1, -1, -1, 98, 65584, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, 131106, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 65578, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, 65716, -1, -1, 196616, -1, -1, -1, 127, -1, -1, -1, 65630, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, 131107, 196617, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 131096, -1, 
+    -1, -1, -1, -1, -1, -1, 19, 65695, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, 196610, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, 131081, -1, -1, -1, -1, 196608, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, 3, -1, -1, 65538, -1, -1, 196609, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 65616, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 65679, 
+    65557, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, 65685, 65561, -1, -1, -1, -1, -1, -1, 65743, 65601, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, 114, 25, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 65673, 65553, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, 65540, 65605, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, 82, 134, 65591, 65692, 65693, 65565, 65641, 65739, 58, 
+    116, 65568, 65652, 65543, 65609, 65610, 65710, 36, 92, -1, -1, -1, 
+    -1, -1, -1, 9, 73, -1, -1, -1, -1, -1, -1, 53, 108, 65690, 65563, 65639, 
+    65737, 65598, 65700, 27, 88, 65541, 65606, 65607, 65709, 65572, 65667, 
+    11, 69, -1, -1, -1, -1, -1, -1, 126, 45, -1, -1, -1, -1, -1, -1, 13, 
+    78, -1, -1, -1, -1, -1, -1, 55, 112, -1, -1, -1, -1, -1, -1, 29, 90, 
+    -1, -1, -1, -1, -1, -1, -1, 70, -1, -1, -1, -1, -1, -1, 128, 46, 65683, 
+    65560, 65635, 65732, 65592, 65694, 109, 21, 65642, 65740, 65599, 65702, 
+    65569, 65653, 65544, -1, -1, -1, 65574, -1, -1, -1, -1, -1, -1, -1, 
+    65552, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, 65537, -1, -1, -1, -1, -1, -1, -1, 
+    -1, 40, -1, -1, -1, -1, -1, -1, 65680, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, 65570, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, 65705, -1, 65660, -1, 65614, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, 65698, -1, 65644, -1, 65741, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, 65711, -1, -1, -1, -1, 65619, -1, -1, 65676, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, 65668, -1, 65548, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 65648, 
+    -1, -1, -1, -1, -1, -1, 65547, -1, 65715, -1, -1, 65551, -1, -1, -1, 
+    -1, 65681, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, 65596, -1, -1, 65647, 65536, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, 65721, 65583, -1, -1, 65558, 65631, -1, 
+    -1, 65688, 65562, 65637, 65735, -1, -1, -1, -1, 65646, 65745, -1, -1, 
+    65571, 65662, -1, -1, -1, -1, -1, -1, -1, -1, -1, 65580, 65579, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 65602, -1, 
+    -1, -1, -1, -1, 65613, 65712, -1, 65669, -1, -1, -1, -1, -1, -1, 65555, 
+    65629, 65725, 65588, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 65718, -1, -1, 
+    -1, -1, 65708, -1, 65703, -1, 65697, -1, 65686, -1, 65684, -1, 65677, 
+    -1, 65671, -1, 65665, -1, 65650, -1, 65645, -1, 65638, -1, 65633, -1, 
+    -1, 65623, -1, 65620, -1, 65615, -1, -1, -1, -1, -1, -1, 60, -1, -1, 
+    74, -1, -1, 68, -1, -1, 61, -1, -1, 57, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, -1, -1, 131099, 131100, -1, -1, 65717, -1, -1, -1, -1, 
+    -1, -1, -1, -1, 65691, -1, -1, -1, -1, 65674, -1, 65672, -1, 65666, 
+    -1, 65654, -1, 65643, -1, 65636, -1, 65634, -1, 65627, -1, 65621, -1, 
+    65617, -1, 65608, -1, 65603, -1, -1, 65594, -1, 65589, -1, 65585, -1, 
+    -1, -1, -1, -1, -1, 41, -1, -1, 31, -1, -1, 49, -1, -1, 43, -1, -1, 
+    35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, 65726, 65723, 65720, 65719, -1, -1, -1, -1, -1, -1, -1, 
+    -1, -1, -1, 65689, -1, -1
+};
+
+/*
+ * Lists of compositions for characters that appears only in one composition
+ */
+
+static int compFirstList[][2] = {
+    {824, 8817}, {837, 8119}, {3530, 3549}, {837, 8116}, {770, 7896}, 
+    {837, 8090}, {776, 1243}, {837, 8076}, {837, 8114}, {783, 1143}, 
+    {780, 494}, {824, 8772}, {824, 8742}, {769, 7727}, {769, 7688}, 
+    {824, 8777}, {837, 8178}, {770, 7879}, {772, 481}, {824, 8938}, 
+    {769, 1116}, {772, 7737}, {824, 8824}, {776, 1259}, {837, 8099}, 
+    {772, 7773}, {824, 8833}, {837, 8083}, {824, 8814}, {837, 8069}, 
+    {776, 1268}, {776, 7802}, {837, 8074}, {837, 8110}, {837, 8183}, 
+    {824, 8840}, {837, 8094}, {775, 7711}, {837, 8130}, {769, 506}, 
+    {769, 7726}, {3031, 2964}, {3158, 3144}, {824, 8931}, {824, 8930}, 
+    {769, 1036}, {776, 1247}, {824, 8821}, {3006, 3019}, {12441, 12489}, 
+    {788, 8172}, {769, 511}, {824, 8941}, {12441, 12487}, {772, 561}, 
+    {837, 8066}, {837, 8102}, {772, 492}, {12441, 12485}, {776, 1261}, 
+    {824, 8802}, {769, 7800}, {837, 8086}, {837, 8108}, {769, 507}, 
+    {775, 7785}, {824, 8876}, {12441, 12482}, {770, 308}, {770, 7897}, 
+    {837, 8091}, {837, 8092}, {12441, 12480}, {837, 8077}, {837, 8078}, 
+    {1620, 1728}, {1620, 1747}, {824, 8877}, {824, 8622}, {12441, 12393}, 
+    {4142, 4134}, {12441, 12478}, {1620, 1730}, {824, 8713}, 
+    {12441, 12391}, {12441, 12476}, {776, 1246}, {12441, 12389}, 
+    {775, 7780}, {774, 7708}, {772, 555}, {12441, 12474}, {769, 510}, 
+    {824, 8939}, {3285, 3275}, {824, 8825}, {775, 7782}, {12441, 12386}, 
+    {12441, 12472}, {837, 8100}, {12441, 12470}, {824, 8928}, 
+    {12441, 12384}, {837, 8084}, {824, 8800}, {837, 8070}, {837, 8106}, 
+    {12441, 12468}, {824, 8655}, {12441, 12382}, {824, 8836}, 
+    {824, 8816}, {824, 8769}, {776, 7803}, {12441, 12380}, {776, 1242}, 
+    {837, 8075}, {837, 8111}, {12441, 12466}, {2364, 2356}, {2364, 2353}, 
+    {1620, 1574}, {776, 1111}, {776, 1273}, {824, 8603}, {783, 1142}, 
+    {824, 8841}, {776, 1260}, {837, 8180}, {12441, 12378}, {12441, 12464}, 
+    {837, 8095}, {824, 8740}, {824, 8879}, {769, 1107}, {12441, 12376}, 
+    {12441, 12462}, {770, 7878}, {12441, 12460}, {772, 480}, 
+    {824, 8716}, {12441, 12374}, {772, 554}, {772, 7736}, {837, 8135}, 
+    {824, 8813}, {776, 1258}, {837, 8098}, {12441, 12372}, {772, 7772}, 
+    {12441, 12370}, {776, 1255}, {824, 8832}, {12441, 12542}, 
+    {837, 8082}, {12441, 12532}, {837, 8067}, {837, 8068}, {837, 8103}, 
+    {3390, 3403}, {772, 493}, {12441, 12368}, {824, 8653}, {769, 7801}, 
+    {837, 8087}, {775, 7710}, {837, 8109}, {12441, 12366}, {769, 7689}, 
+    {824, 8602}, {776, 1272}, {837, 8132}, {12441, 12364}, {837, 8093}, 
+    {837, 8079}, {824, 8708}, {824, 8878}, {772, 478}, {769, 1027}, 
+    {824, 8775}, {3285, 3264}, {12441, 12446}, {12441, 12436}, 
+    {12441, 12538}, {12441, 12537}, {824, 8820}, {775, 7781}, 
+    {12441, 12536}, {774, 7709}, {824, 8940}, {12441, 12535}, 
+    {776, 1254}, {775, 7835}, {780, 495}, {775, 7783}, {772, 560}, 
+    {837, 8101}, {1620, 1572}, {2364, 2345}, {824, 8929}, {776, 1031}, 
+    {837, 8085}, {824, 8815}, {837, 8071}, {837, 8107}, {824, 8654}, 
+    {772, 479}, {775, 7784}, {776, 1269}, {824, 8837}
+};
+
+static int compSecondList[][2] = {
+    {3545, 3548}, {3545, 3550}, {3398, 3404}, {2503, 2507}, {2503, 2508}, 
+    {2887, 2891}, {2887, 2888}, {2887, 2892}, {3270, 3274}, {3270, 3272}, 
+    {1575, 1570}, {1575, 1573}
+};
+
+/*
+ * Compositions matrix
+ */
+
+static int compBothList[144][37] = {
+    {
+        8179, 8060, 974, 0, 8032, 0, 8033, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 8182, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 204, 205, 206, 0, 296, 0, 298, 300, 0, 304, 207, 7880, 463, 
+        520, 522, 7882, 302, 7724, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0
+    },
+    {
+        8115, 8048, 940, 0, 7936, 0, 7937, 8113, 8112, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 8118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 3546, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 8157, 8158, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        8159, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7873, 7871, 0, 0, 7877, 0, 0, 0, 0, 0, 0, 7875, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7846, 7844, 0, 0, 7850, 0, 0, 0, 0, 0, 0, 7848, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        8131, 8052, 942, 0, 7968, 0, 7969, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 8134, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 8154, 906, 0, 7992, 0, 7993, 8153, 8152, 0, 0, 938, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0
+    },
+    {
+        0, 7962, 7964, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 293, 0, 0, 0, 0, 0, 0, 7715, 7719, 0, 543, 0, 0, 7717, 
+        0, 0, 0, 7721, 7723, 0, 7830, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0
+    },
+    {
+        0, 7986, 7988, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        7990, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 504, 323, 0, 0, 209, 0, 0, 0, 0, 7748, 0, 0, 327, 0, 0, 7750, 
+        0, 0, 0, 325, 0, 7754, 7752, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0
+    },
+    {
+        0, 8002, 8004, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 1217, 0, 0, 1244, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 505, 324, 0, 0, 241, 0, 0, 0, 0, 7749, 0, 0, 328, 0, 0, 7751, 
+        0, 0, 0, 326, 0, 7755, 7753, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0
+    },
+    {
+        0, 0, 7743, 0, 0, 0, 0, 0, 0, 0, 7745, 0, 0, 0, 0, 0, 7747, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7786, 0, 0, 356, 0, 0, 7788, 0, 0, 
+        0, 354, 0, 7792, 7790, 0, 538, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7701, 7703, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 3402, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 7757, 0, 0, 0, 0, 557, 0, 0, 0, 7759, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        8105, 8043, 8045, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 8047, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 347, 349, 0, 0, 0, 0, 0, 0, 7777, 0, 0, 353, 0, 0, 7779, 
+        0, 0, 0, 351, 0, 0, 0, 0, 537, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7922, 221, 374, 0, 7928, 0, 562, 0, 0, 7822, 376, 7926, 0, 0, 
+        0, 7924, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0
+    },
+    {
+        0, 0, 377, 7824, 0, 0, 0, 0, 0, 0, 379, 0, 0, 381, 0, 0, 7826, 
+        0, 0, 0, 0, 0, 0, 7828, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 7853, 0, 0, 0, 0, 7863, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        8188, 8186, 911, 0, 8040, 0, 8041, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        8088, 7978, 7980, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 7982, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7923, 253, 375, 0, 7929, 0, 563, 0, 0, 7823, 255, 7927, 0, 0, 
+        0, 7925, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7833, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0
+    },
+    {
+        0, 8018, 8020, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        8022, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 192, 193, 194, 0, 195, 0, 256, 258, 0, 550, 196, 7842, 461, 
+        512, 514, 7840, 260, 0, 0, 0, 0, 0, 0, 0, 0, 197, 0, 0, 7680, 0, 
+        0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 12499, 12500, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7847, 7845, 0, 0, 7851, 0, 0, 0, 0, 0, 0, 7849, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7915, 7913, 0, 0, 7919, 0, 0, 0, 0, 0, 0, 7917, 0, 0, 0, 7921, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        8124, 8122, 902, 0, 7944, 0, 7945, 8121, 8120, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 12508, 12509, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7954, 7956, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7760, 7762, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 500, 284, 0, 0, 0, 7712, 286, 0, 288, 0, 0, 486, 0, 0, 0, 
+        0, 0, 0, 290, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 979, 0, 0, 0, 0, 0, 0, 0, 0, 980, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 8141, 8142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        8143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 12496, 12497, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7872, 7870, 0, 0, 7876, 0, 0, 0, 0, 0, 0, 7874, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 12505, 12506, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 313, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 317, 0, 0, 7734, 0, 0, 
+        0, 315, 0, 7740, 7738, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7995, 7997, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        7999, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        8097, 8035, 8037, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 8039, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 7729, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 489, 0, 0, 7731, 0, 0, 
+        0, 311, 0, 0, 7733, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 340, 0, 0, 0, 0, 0, 0, 0, 7768, 0, 0, 344, 528, 530, 7770, 
+        0, 0, 0, 342, 0, 0, 7774, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+        
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 12502, 12503, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 7756, 0, 0, 0, 0, 556, 0, 0, 0, 7758, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 8056, 972, 0, 8000, 0, 8001, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 1117, 0, 0, 0, 0, 0, 1251, 1081, 0, 0, 1253, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        8080, 7970, 7972, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 7974, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7808, 7810, 372, 0, 0, 0, 0, 0, 0, 7814, 7812, 0, 0, 0, 0, 7816, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 8010, 8012, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 8058, 973, 0, 8016, 0, 8017, 8161, 8160, 0, 0, 971, 0, 0, 0, 
+        0, 0, 0, 0, 8166, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 12412, 12413, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        8072, 7946, 7948, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 7950, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 7805, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7807, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 12400, 12401, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 12409, 12410, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 8162, 944, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8167, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 1263, 1118, 0, 0, 1265, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1267, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7683, 0, 0, 0, 0, 0, 7685, 0, 0, 
+        0, 0, 0, 0, 7687, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7690, 0, 0, 270, 0, 0, 7692, 0, 0, 
+        0, 7696, 0, 7698, 7694, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7857, 7855, 0, 0, 7861, 0, 0, 0, 0, 0, 0, 7859, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 509, 0, 0, 0, 0, 483, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 12406, 12407, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7987, 7989, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        7991, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 8027, 8029, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        8031, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7691, 0, 0, 271, 0, 0, 7693, 0, 0, 
+        0, 7697, 0, 7699, 7695, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 1233, 0, 0, 1235, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7963, 7965, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 12403, 12404, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 236, 237, 238, 0, 297, 0, 299, 301, 0, 0, 239, 7881, 464, 521, 
+        523, 7883, 303, 7725, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0
+    },
+    {
+        0, 210, 211, 212, 0, 213, 0, 332, 334, 0, 558, 214, 7886, 465, 
+        524, 526, 7884, 490, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 336, 416, 
+        0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 7764, 0, 0, 0, 0, 0, 0, 0, 7766, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 8003, 8005, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 1104, 0, 0, 0, 0, 0, 0, 1239, 0, 0, 1105, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 8184, 908, 0, 8008, 0, 8009, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7900, 7898, 0, 0, 7904, 0, 0, 0, 0, 0, 0, 7902, 0, 0, 0, 7906, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        8064, 7938, 7940, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 7942, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 242, 243, 244, 0, 245, 0, 333, 335, 0, 559, 246, 7887, 466, 
+        525, 527, 7885, 491, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 337, 417, 
+        0, 0, 0, 0, 0
+    },
+    {
+        0, 217, 218, 219, 0, 360, 0, 362, 364, 0, 0, 220, 7910, 467, 532, 
+        534, 7908, 370, 7796, 0, 0, 0, 7798, 0, 0, 0, 366, 0, 0, 0, 368, 
+        431, 7794, 0, 0, 0, 0
+    },
+    {
+        0, 8170, 910, 0, 0, 0, 8025, 8169, 8168, 0, 0, 939, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7787, 7831, 0, 357, 0, 0, 7789, 0, 
+        0, 0, 355, 0, 7793, 7791, 0, 539, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0
+    },
+    {
+        0, 476, 472, 0, 0, 0, 0, 470, 0, 0, 0, 0, 0, 474, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        8089, 7979, 7981, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 7983, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 378, 7825, 0, 0, 0, 0, 0, 0, 380, 0, 0, 382, 0, 0, 7827, 
+        0, 0, 0, 0, 0, 0, 7829, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 8019, 8021, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        8023, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7682, 0, 0, 0, 0, 0, 7684, 0, 0, 
+        0, 0, 0, 0, 7686, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7955, 7957, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7761, 7763, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 292, 0, 0, 0, 0, 0, 0, 7714, 7718, 0, 542, 0, 0, 7716, 
+        0, 0, 0, 7720, 7722, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0
+    },
+    {
+        0, 8050, 941, 0, 7952, 0, 7953, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        8140, 8138, 905, 0, 7976, 0, 7977, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 1232, 0, 0, 1234, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3018, 3020, 0, 0
+    },
+    {
+        0, 0, 501, 285, 0, 0, 0, 7713, 287, 0, 289, 0, 0, 487, 0, 0, 0, 
+        0, 0, 0, 291, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 7742, 0, 0, 0, 0, 0, 0, 0, 7744, 0, 0, 0, 0, 0, 7746, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 508, 0, 0, 0, 0, 482, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 8173, 901, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8129, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 1024, 0, 0, 0, 0, 0, 0, 1238, 0, 0, 1025, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 314, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 318, 0, 0, 7735, 0, 0, 
+        0, 316, 0, 7741, 7739, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 346, 348, 0, 0, 0, 0, 0, 0, 7776, 0, 0, 352, 0, 0, 7778, 
+        0, 0, 0, 350, 0, 0, 0, 0, 536, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7700, 7702, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7891, 7889, 0, 0, 7895, 0, 0, 0, 0, 0, 0, 7893, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        8081, 7971, 7973, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 7975, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        8104, 8042, 8044, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 8046, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 341, 0, 0, 0, 0, 0, 0, 0, 7769, 0, 0, 345, 529, 531, 7771, 
+        0, 0, 0, 343, 0, 0, 7775, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+        
+    },
+    {
+        0, 0, 0, 0, 8164, 0, 8165, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 8011, 8013, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7818, 7820, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 7852, 0, 0, 0, 0, 7862, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 475, 471, 0, 0, 0, 0, 469, 0, 0, 0, 0, 0, 473, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        8073, 7947, 7949, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 7951, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7809, 7811, 373, 0, 0, 0, 0, 0, 0, 7815, 7813, 0, 0, 0, 0, 7817, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 7832, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7819, 7821, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7914, 7912, 0, 0, 7918, 0, 0, 0, 0, 0, 0, 7916, 0, 0, 0, 7920, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 263, 265, 0, 0, 0, 0, 0, 0, 267, 0, 0, 269, 0, 0, 0, 0, 0, 
+        0, 231, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 200, 201, 202, 0, 7868, 0, 274, 276, 0, 278, 203, 7866, 282, 
+        516, 518, 7864, 280, 7706, 0, 552, 0, 7704, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 8136, 904, 0, 7960, 0, 7961, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 232, 233, 234, 0, 7869, 0, 275, 277, 0, 279, 235, 7867, 283, 
+        517, 519, 7865, 281, 7707, 0, 553, 0, 7705, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 7728, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 488, 0, 0, 7730, 0, 0, 
+        0, 310, 0, 0, 7732, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 8054, 943, 0, 7984, 0, 7985, 8145, 8144, 0, 0, 970, 0, 0, 0, 
+        0, 0, 0, 0, 8150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0
+    },
+    {
+        0, 7994, 7996, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        7998, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3271, 0
+    },
+    {
+        8096, 8034, 8036, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 8038, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 309, 0, 0, 0, 0, 0, 0, 0, 0, 0, 496, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7890, 7888, 0, 0, 7894, 0, 0, 0, 0, 0, 0, 7892, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7901, 7899, 0, 0, 7905, 0, 0, 0, 0, 0, 0, 7903, 0, 0, 0, 7907, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 1037, 0, 0, 0, 0, 0, 1250, 1049, 0, 0, 1252, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 1218, 0, 0, 1245, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        8065, 7939, 7941, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 7943, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 7765, 0, 0, 0, 0, 0, 0, 0, 7767, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 7804, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7806, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 249, 250, 251, 0, 361, 0, 363, 365, 0, 0, 252, 7911, 468, 533, 
+        535, 7909, 371, 7797, 0, 0, 0, 7799, 0, 0, 0, 367, 0, 0, 0, 369, 
+        432, 7795, 0, 0, 0, 0
+    },
+    {
+        0, 8146, 912, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8151, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 1262, 1038, 0, 0, 1264, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1266, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 224, 225, 226, 0, 227, 0, 257, 259, 0, 551, 228, 7843, 462, 
+        513, 515, 7841, 261, 0, 0, 0, 0, 0, 0, 0, 0, 229, 0, 0, 7681, 0, 
+        0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 262, 264, 0, 0, 0, 0, 0, 0, 266, 0, 0, 268, 0, 0, 0, 0, 0, 
+        0, 199, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 7856, 7854, 0, 0, 7860, 0, 0, 0, 0, 0, 0, 7858, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    },
+    {
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1571
+    },
+};
+
+
+#define GetUniCharCompInfo(ch) (compGroupMap[(compPageMap[(((int)(ch)) & 0x1fffff) >> COMP_OFFSET_BITS] << COMP_OFFSET_BITS) | ((ch) & ((1 << COMP_OFFSET_BITS)-1))])
+
+#define CompSingleMask (1 << 16)
+#define CompMask ((1 << 16) - 1)
+#define CompSecondMask (1 << 17)
+
diff -r d551623afde5 deps/exmpp/config.h
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/config.h	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,83 @@
+/* config.h.  Generated from config.h.in by configure.  */
+/* config.h.in.  Generated from configure.ac by autoheader.  */
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#define HAVE_DLFCN_H 1
+
+/* Define to 1 if you have the <expat.h> header file. */
+#define HAVE_EXPAT_H 1
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#define HAVE_INTTYPES_H 1
+
+/* Define to 1 if you have the `expat' library (-lexpat). */
+#define HAVE_LIBEXPAT 1
+
+/* Define to 1 if you have the `ssl' library (-lssl). */
+#define HAVE_LIBSSL 1
+
+/* Define to 1 if you have the `z' library (-lz). */
+#define HAVE_LIBZ 1
+
+/* Define to 1 if you have the <memory.h> header file. */
+#define HAVE_MEMORY_H 1
+
+/* Define to 1 if you have the <openssl/ssl.h> header file. */
+#define HAVE_OPENSSL_SSL_H 1
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#define HAVE_STDINT_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#define HAVE_STDLIB_H 1
+
+/* Define to 1 if you have the <strings.h> header file. */
+#define HAVE_STRINGS_H 1
+
+/* Define to 1 if you have the <string.h> header file. */
+#define HAVE_STRING_H 1
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#define HAVE_SYS_STAT_H 1
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#define HAVE_SYS_TYPES_H 1
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#define HAVE_UNISTD_H 1
+
+/* Define to 1 if you have the <zlib.h> header file. */
+#define HAVE_ZLIB_H 1
+
+/* Name of package */
+#define PACKAGE "exmpp"
+
+/* Define to the address where bug reports for this package should be sent. */
+#define PACKAGE_BUGREPORT "js.pedron@meetic-corp.com"
+
+/* Define to the full name of this package. */
+#define PACKAGE_NAME "exmpp"
+
+/* Define to the full name and version of this package. */
+#define PACKAGE_STRING "exmpp 0.9.2"
+
+/* Define to the one symbol short name of this package. */
+#define PACKAGE_TARNAME "exmpp"
+
+/* Define to the version of this package. */
+#define PACKAGE_VERSION "0.9.2"
+
+/* SMP support enabled in port drivers. */
+#define SMP_SUPPORT 
+
+/* Define to 1 if you have the ANSI C header files. */
+#define STDC_HEADERS 1
+
+/* Use rwlocks. */
+#define USE_RWLOCK 
+
+/* Version number of package */
+#define VERSION "0.9.2"
+
+/* _REENTRANT */
+#define _REENTRANT 
diff -r d551623afde5 deps/exmpp/config.h.in
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/config.h.in	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,82 @@
+/* config.h.in.  Generated from configure.ac by autoheader.  */
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#undef HAVE_DLFCN_H
+
+/* Define to 1 if you have the <expat.h> header file. */
+#undef HAVE_EXPAT_H
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#undef HAVE_INTTYPES_H
+
+/* Define to 1 if you have the `expat' library (-lexpat). */
+#undef HAVE_LIBEXPAT
+
+/* Define to 1 if you have the `ssl' library (-lssl). */
+#undef HAVE_LIBSSL
+
+/* Define to 1 if you have the `z' library (-lz). */
+#undef HAVE_LIBZ
+
+/* Define to 1 if you have the <memory.h> header file. */
+#undef HAVE_MEMORY_H
+
+/* Define to 1 if you have the <openssl/ssl.h> header file. */
+#undef HAVE_OPENSSL_SSL_H
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#undef HAVE_STDINT_H
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#undef HAVE_STDLIB_H
+
+/* Define to 1 if you have the <strings.h> header file. */
+#undef HAVE_STRINGS_H
+
+/* Define to 1 if you have the <string.h> header file. */
+#undef HAVE_STRING_H
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#undef HAVE_SYS_STAT_H
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#undef HAVE_SYS_TYPES_H
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#undef HAVE_UNISTD_H
+
+/* Define to 1 if you have the <zlib.h> header file. */
+#undef HAVE_ZLIB_H
+
+/* Name of package */
+#undef PACKAGE
+
+/* Define to the address where bug reports for this package should be sent. */
+#undef PACKAGE_BUGREPORT
+
+/* Define to the full name of this package. */
+#undef PACKAGE_NAME
+
+/* Define to the full name and version of this package. */
+#undef PACKAGE_STRING
+
+/* Define to the one symbol short name of this package. */
+#undef PACKAGE_TARNAME
+
+/* Define to the version of this package. */
+#undef PACKAGE_VERSION
+
+/* SMP support enabled in port drivers. */
+#undef SMP_SUPPORT
+
+/* Define to 1 if you have the ANSI C header files. */
+#undef STDC_HEADERS
+
+/* Use rwlocks. */
+#undef USE_RWLOCK
+
+/* Version number of package */
+#undef VERSION
+
+/* _REENTRANT */
+#undef _REENTRANT
diff -r d551623afde5 deps/exmpp/config.log
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/config.log	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,963 @@
+This file contains any messages produced by compilers while
+running configure, to aid debugging if configure makes a mistake.
+
+It was created by exmpp configure 0.9.2, which was
+generated by GNU Autoconf 2.61.  Invocation command line was
+
+  $ ./configure --disable-documentation
+
+## --------- ##
+## Platform. ##
+## --------- ##
+
+hostname = pluto
+uname -m = i686
+uname -r = 2.6.31-17-generic-pae
+uname -s = Linux
+uname -v = #54-Ubuntu SMP Thu Dec 10 17:23:29 UTC 2009
+
+/usr/bin/uname -p = unknown
+/bin/uname -X     = unknown
+
+/bin/arch              = unknown
+/usr/bin/arch -k       = unknown
+/usr/convex/getsysinfo = unknown
+/usr/bin/hostinfo      = unknown
+/bin/machine           = unknown
+/usr/bin/oslevel       = unknown
+/bin/universe          = unknown
+
+PATH: /home/arjan/devel-linux/organic/cli
+PATH: /home/arjan/bin
+PATH: /home/arjan/bin
+PATH: /usr/local/sbin
+PATH: /usr/local/bin
+PATH: /usr/sbin
+PATH: /usr/bin
+PATH: /sbin
+PATH: /bin
+PATH: /usr/games
+
+
+## ----------- ##
+## Core tests. ##
+## ----------- ##
+
+configure:2053: checking build system type
+configure:2071: result: i686-pc-linux-gnu
+configure:2093: checking host system type
+configure:2108: result: i686-pc-linux-gnu
+configure:2130: checking target system type
+configure:2145: result: i686-pc-linux-gnu
+configure:2187: checking for a BSD-compatible install
+configure:2243: result: /usr/bin/install -c
+configure:2254: checking whether build environment is sane
+configure:2297: result: yes
+configure:2362: checking for gawk
+configure:2392: result: no
+configure:2362: checking for mawk
+configure:2378: found /usr/bin/mawk
+configure:2389: result: mawk
+configure:2400: checking whether make sets $(MAKE)
+configure:2421: result: yes
+configure:2659: checking for style of include used by make
+configure:2687: result: GNU
+configure:2760: checking for gcc
+configure:2776: found /usr/bin/gcc
+configure:2787: result: gcc
+configure:3025: checking for C compiler version
+configure:3032: gcc --version >&5
+gcc (Ubuntu 4.4.1-4ubuntu9) 4.4.1
+Copyright (C) 2009 Free Software Foundation, Inc.
+This is free software; see the source for copying conditions.  There is NO
+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+
+configure:3035: $? = 0
+configure:3042: gcc -v >&5
+Using built-in specs.
+Target: i486-linux-gnu
+Configured with: ../src/configure -v --with-pkgversion='Ubuntu 4.4.1-4ubuntu9' --with-bugurl=file:///usr/share/doc/gcc-4.4/README.Bugs --enable-languages=c,c++,fortran,objc,obj-c++ --prefix=/usr --enable-shared --enable-multiarch --enable-linker-build-id --with-system-zlib --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.4 --program-suffix=-4.4 --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-objc-gc --enable-targets=all --disable-werror --with-arch-32=i486 --with-tune=generic --enable-checking=release --build=i486-linux-gnu --host=i486-linux-gnu --target=i486-linux-gnu
+Thread model: posix
+gcc version 4.4.1 (Ubuntu 4.4.1-4ubuntu9) 
+configure:3045: $? = 0
+configure:3052: gcc -V >&5
+gcc: '-V' option must have argument
+configure:3055: $? = 1
+configure:3078: checking for C compiler default output file name
+configure:3105: gcc    conftest.c  >&5
+configure:3108: $? = 0
+configure:3146: result: a.out
+configure:3163: checking whether the C compiler works
+configure:3173: ./a.out
+configure:3176: $? = 0
+configure:3193: result: yes
+configure:3200: checking whether we are cross compiling
+configure:3202: result: no
+configure:3205: checking for suffix of executables
+configure:3212: gcc -o conftest    conftest.c  >&5
+configure:3215: $? = 0
+configure:3239: result: 
+configure:3245: checking for suffix of object files
+configure:3271: gcc -c   conftest.c >&5
+configure:3274: $? = 0
+configure:3297: result: o
+configure:3301: checking whether we are using the GNU C compiler
+configure:3330: gcc -c   conftest.c >&5
+configure:3336: $? = 0
+configure:3353: result: yes
+configure:3358: checking whether gcc accepts -g
+configure:3388: gcc -c -g  conftest.c >&5
+configure:3394: $? = 0
+configure:3493: result: yes
+configure:3510: checking for gcc option to accept ISO C89
+configure:3584: gcc  -c -g -O2  conftest.c >&5
+configure:3590: $? = 0
+configure:3613: result: none needed
+configure:3633: checking dependency style of gcc
+configure:3723: result: gcc3
+configure:3742: checking for gcc option to accept ISO C99
+configure:3901: gcc  -c -g -O2  conftest.c >&5
+conftest.c:60: error: expected ';', ',' or ')' before 'text'
+conftest.c: In function 'main':
+conftest.c:114: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'newvar'
+conftest.c:114: error: 'newvar' undeclared (first use in this function)
+conftest.c:114: error: (Each undeclared identifier is reported only once
+conftest.c:114: error: for each function it appears in.)
+conftest.c:124: error: 'for' loop initial declarations are only allowed in C99 mode
+conftest.c:124: note: use option -std=c99 or -std=gnu99 to compile your code
+configure:3907: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME "exmpp"
+| #define PACKAGE_TARNAME "exmpp"
+| #define PACKAGE_VERSION "0.9.2"
+| #define PACKAGE_STRING "exmpp 0.9.2"
+| #define PACKAGE_BUGREPORT "js.pedron@meetic-corp.com"
+| #define PACKAGE "exmpp"
+| #define VERSION "0.9.2"
+| /* end confdefs.h.  */
+| #include <stdarg.h>
+| #include <stdbool.h>
+| #include <stdlib.h>
+| #include <wchar.h>
+| #include <stdio.h>
+| 
+| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
+| #define debug(...) fprintf (stderr, __VA_ARGS__)
+| #define showlist(...) puts (#__VA_ARGS__)
+| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
+| static void
+| test_varargs_macros (void)
+| {
+|   int x = 1234;
+|   int y = 5678;
+|   debug ("Flag");
+|   debug ("X = %d\n", x);
+|   showlist (The first, second, and third items.);
+|   report (x>y, "x is %d but y is %d", x, y);
+| }
+| 
+| // Check long long types.
+| #define BIG64 18446744073709551615ull
+| #define BIG32 4294967295ul
+| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
+| #if !BIG_OK
+|   your preprocessor is broken;
+| #endif
+| #if BIG_OK
+| #else
+|   your preprocessor is broken;
+| #endif
+| static long long int bignum = -9223372036854775807LL;
+| static unsigned long long int ubignum = BIG64;
+| 
+| struct incomplete_array
+| {
+|   int datasize;
+|   double data[];
+| };
+| 
+| struct named_init {
+|   int number;
+|   const wchar_t *name;
+|   double average;
+| };
+| 
+| typedef const char *ccp;
+| 
+| static inline int
+| test_restrict (ccp restrict text)
+| {
+|   // See if C++-style comments work.
+|   // Iterate through items via the restricted pointer.
+|   // Also check for declarations in for loops.
+|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
+|     continue;
+|   return 0;
+| }
+| 
+| // Check varargs and va_copy.
+| static void
+| test_varargs (const char *format, ...)
+| {
+|   va_list args;
+|   va_start (args, format);
+|   va_list args_copy;
+|   va_copy (args_copy, args);
+| 
+|   const char *str;
+|   int number;
+|   float fnumber;
+| 
+|   while (*format)
+|     {
+|       switch (*format++)
+| 	{
+| 	case 's': // string
+| 	  str = va_arg (args_copy, const char *);
+| 	  break;
+| 	case 'd': // int
+| 	  number = va_arg (args_copy, int);
+| 	  break;
+| 	case 'f': // float
+| 	  fnumber = va_arg (args_copy, double);
+| 	  break;
+| 	default:
+| 	  break;
+| 	}
+|     }
+|   va_end (args_copy);
+|   va_end (args);
+| }
+| 
+| int
+| main ()
+| {
+| 
+|   // Check bool.
+|   _Bool success = false;
+| 
+|   // Check restrict.
+|   if (test_restrict ("String literal") == 0)
+|     success = true;
+|   char *restrict newvar = "Another string";
+| 
+|   // Check varargs.
+|   test_varargs ("s, d' f .", "string", 65, 34.234);
+|   test_varargs_macros ();
+| 
+|   // Check flexible array members.
+|   struct incomplete_array *ia =
+|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
+|   ia->datasize = 10;
+|   for (int i = 0; i < ia->datasize; ++i)
+|     ia->data[i] = i * 1.234;
+| 
+|   // Check named initializers.
+|   struct named_init ni = {
+|     .number = 34,
+|     .name = L"Test wide string",
+|     .average = 543.34343,
+|   };
+| 
+|   ni.number = 58;
+| 
+|   int dynamic_array[ni.number];
+|   dynamic_array[ni.number - 1] = 543;
+| 
+|   // work around unused variable warnings
+|   return (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
+| 	  || dynamic_array[ni.number - 1] != 543);
+| 
+|   ;
+|   return 0;
+| }
+configure:3901: gcc -std=gnu99 -c -g -O2  conftest.c >&5
+configure:3907: $? = 0
+configure:3937: result: -std=gnu99
+configure:4067: checking for gcc -std=gnu99 option to accept ISO Standard C
+configure:4078: result: -std=gnu99
+configure:4084: checking for a sed that does not truncate output
+configure:4138: result: /bin/sed
+configure:4141: checking for grep that handles long lines and -e
+configure:4215: result: /bin/grep
+configure:4220: checking for egrep
+configure:4298: result: /bin/grep -E
+configure:4314: checking for ld used by gcc -std=gnu99
+configure:4381: result: /usr/bin/ld
+configure:4390: checking if the linker (/usr/bin/ld) is GNU ld
+configure:4405: result: yes
+configure:4423: checking for a BSD-compatible install
+configure:4479: result: /usr/bin/install -c
+configure:4490: checking whether make sets $(MAKE)
+configure:4511: result: yes
+configure:4520: checking for a sed that does not truncate output
+configure:4599: result: /bin/sed
+configure:4613: checking for gawk
+configure:4640: result: mawk
+configure:4778: checking for /usr/bin/ld option to reload object files
+configure:4785: result: -r
+configure:4803: checking for BSD-compatible nm
+configure:4852: result: /usr/bin/nm -B
+configure:4856: checking whether ln -s works
+configure:4860: result: yes
+configure:4867: checking how to recognise dependent libraries
+configure:5043: result: pass_all
+configure:5277: checking how to run the C preprocessor
+configure:5317: gcc -std=gnu99 -E  conftest.c
+configure:5323: $? = 0
+configure:5354: gcc -std=gnu99 -E  conftest.c
+conftest.c:10:28: error: ac_nonexistent.h: No such file or directory
+configure:5360: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME "exmpp"
+| #define PACKAGE_TARNAME "exmpp"
+| #define PACKAGE_VERSION "0.9.2"
+| #define PACKAGE_STRING "exmpp 0.9.2"
+| #define PACKAGE_BUGREPORT "js.pedron@meetic-corp.com"
+| #define PACKAGE "exmpp"
+| #define VERSION "0.9.2"
+| /* end confdefs.h.  */
+| #include <ac_nonexistent.h>
+configure:5393: result: gcc -std=gnu99 -E
+configure:5422: gcc -std=gnu99 -E  conftest.c
+configure:5428: $? = 0
+configure:5459: gcc -std=gnu99 -E  conftest.c
+conftest.c:10:28: error: ac_nonexistent.h: No such file or directory
+configure:5465: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME "exmpp"
+| #define PACKAGE_TARNAME "exmpp"
+| #define PACKAGE_VERSION "0.9.2"
+| #define PACKAGE_STRING "exmpp 0.9.2"
+| #define PACKAGE_BUGREPORT "js.pedron@meetic-corp.com"
+| #define PACKAGE "exmpp"
+| #define VERSION "0.9.2"
+| /* end confdefs.h.  */
+| #include <ac_nonexistent.h>
+configure:5503: checking for ANSI C header files
+configure:5533: gcc -std=gnu99 -c -g -O2  conftest.c >&5
+configure:5539: $? = 0
+configure:5638: gcc -std=gnu99 -o conftest -g -O2   conftest.c  >&5
+configure:5641: $? = 0
+configure:5647: ./conftest
+configure:5650: $? = 0
+configure:5667: result: yes
+configure:5691: checking for sys/types.h
+configure:5712: gcc -std=gnu99 -c -g -O2  conftest.c >&5
+configure:5718: $? = 0
+configure:5734: result: yes
+configure:5691: checking for sys/stat.h
+configure:5712: gcc -std=gnu99 -c -g -O2  conftest.c >&5
+configure:5718: $? = 0
+configure:5734: result: yes
+configure:5691: checking for stdlib.h
+configure:5712: gcc -std=gnu99 -c -g -O2  conftest.c >&5
+configure:5718: $? = 0
+configure:5734: result: yes
+configure:5691: checking for string.h
+configure:5712: gcc -std=gnu99 -c -g -O2  conftest.c >&5
+configure:5718: $? = 0
+configure:5734: result: yes
+configure:5691: checking for memory.h
+configure:5712: gcc -std=gnu99 -c -g -O2  conftest.c >&5
+configure:5718: $? = 0
+configure:5734: result: yes
+configure:5691: checking for strings.h
+configure:5712: gcc -std=gnu99 -c -g -O2  conftest.c >&5
+configure:5718: $? = 0
+configure:5734: result: yes
+configure:5691: checking for inttypes.h
+configure:5712: gcc -std=gnu99 -c -g -O2  conftest.c >&5
+configure:5718: $? = 0
+configure:5734: result: yes
+configure:5691: checking for stdint.h
+configure:5712: gcc -std=gnu99 -c -g -O2  conftest.c >&5
+configure:5718: $? = 0
+configure:5734: result: yes
+configure:5691: checking for unistd.h
+configure:5712: gcc -std=gnu99 -c -g -O2  conftest.c >&5
+configure:5718: $? = 0
+configure:5734: result: yes
+configure:5761: checking dlfcn.h usability
+configure:5778: gcc -std=gnu99 -c -g -O2  conftest.c >&5
+configure:5784: $? = 0
+configure:5798: result: yes
+configure:5802: checking dlfcn.h presence
+configure:5817: gcc -std=gnu99 -E  conftest.c
+configure:5823: $? = 0
+configure:5837: result: yes
+configure:5870: checking for dlfcn.h
+configure:5878: result: yes
+configure:6132: checking the maximum length of command line arguments
+configure:6241: result: 32768
+configure:6252: checking command to parse /usr/bin/nm -B output from gcc -std=gnu99 object
+configure:6357: gcc -std=gnu99 -c -g -O2  conftest.c >&5
+configure:6360: $? = 0
+configure:6364: /usr/bin/nm -B conftest.o \| sed -n -e 's/^.*[ 	]\([ABCDGIRSTW][ABCDGIRSTW]*\)[ 	][ 	]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p' \> conftest.nm
+configure:6367: $? = 0
+configure:6419: gcc -std=gnu99 -o conftest -g -O2   conftest.c conftstm.o >&5
+configure:6422: $? = 0
+configure:6460: result: ok
+configure:6464: checking for objdir
+configure:6479: result: .libs
+configure:6571: checking for ar
+configure:6587: found /usr/bin/ar
+configure:6598: result: ar
+configure:6667: checking for ranlib
+configure:6683: found /usr/bin/ranlib
+configure:6694: result: ranlib
+configure:6763: checking for strip
+configure:6779: found /usr/bin/strip
+configure:6790: result: strip
+configure:7076: checking if gcc -std=gnu99 supports -fno-rtti -fno-exceptions
+configure:7094: gcc -std=gnu99 -c -g -O2  -fno-rtti -fno-exceptions conftest.c >&5
+cc1: warning: command line option "-fno-rtti" is valid for C++/ObjC++ but not for C
+configure:7098: $? = 0
+configure:7111: result: no
+configure:7126: checking for gcc -std=gnu99 option to produce PIC
+configure:7336: result: -fPIC
+configure:7344: checking if gcc -std=gnu99 PIC flag -fPIC works
+configure:7362: gcc -std=gnu99 -c -g -O2  -fPIC -DPIC conftest.c >&5
+configure:7366: $? = 0
+configure:7379: result: yes
+configure:7407: checking if gcc -std=gnu99 static flag -static works
+configure:7435: result: yes
+configure:7445: checking if gcc -std=gnu99 supports -c -o file.o
+configure:7466: gcc -std=gnu99 -c -g -O2  -o out/conftest2.o conftest.c >&5
+configure:7470: $? = 0
+configure:7492: result: yes
+configure:7518: checking whether the gcc -std=gnu99 linker (/usr/bin/ld) supports shared libraries
+configure:8473: result: yes
+configure:8494: checking whether -lc should be explicitly linked in
+configure:8499: gcc -std=gnu99 -c -g -O2  conftest.c >&5
+configure:8502: $? = 0
+configure:8517: gcc -std=gnu99 -shared conftest.o  -v -Wl,-soname -Wl,conftest -o conftest 2\>\&1 \| grep  -lc  \>/dev/null 2\>\&1
+configure:8520: $? = 0
+configure:8532: result: no
+configure:8540: checking dynamic linker characteristics
+configure:9116: result: GNU/Linux ld.so
+configure:9125: checking how to hardcode library paths into programs
+configure:9150: result: immediate
+configure:9164: checking whether stripping libraries is possible
+configure:9169: result: yes
+configure:9970: checking if libtool supports shared libraries
+configure:9972: result: yes
+configure:9975: checking whether to build shared libraries
+configure:9996: result: yes
+configure:9999: checking whether to build static libraries
+configure:10003: result: no
+configure:10095: creating libtool
+configure:19300: Erlang environment
+configure:19365: checking for erl
+configure:19383: found /usr/bin/erl
+configure:19395: result: /usr/bin/erl
+configure:19474: checking for erlc
+configure:19492: found /usr/bin/erlc
+configure:19504: result: /usr/bin/erlc
+configure:19771: checking for escript
+configure:19789: found /usr/bin/escript
+configure:19801: result: /usr/bin/escript
+configure:19869: checking for erlc
+configure:19871: result: /usr/bin/erlc
+configure:19985: checking for erl
+configure:19987: result: /usr/bin/erl
+configure:20100: checking for Erlang/OTP root directory
+configure:20133: $ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&5 ; echo "#!/bin/sh" > conftest$ac_exeext ; echo "\"$ERL\" -run conftest start -run init stop -noshell" >> conftest$ac_exeext ; chmod +x conftest$ac_exeext
+configure:20136: $? = 0
+configure:20142: ./conftest
+configure:20145: $? = 0
+configure:20171: result: /usr/lib/erlang
+configure:20176: checking for Erlang/OTP library base directory
+configure:20209: $ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&5 ; echo "#!/bin/sh" > conftest$ac_exeext ; echo "\"$ERL\" -run conftest start -run init stop -noshell" >> conftest$ac_exeext ; chmod +x conftest$ac_exeext
+configure:20212: $? = 0
+configure:20218: ./conftest
+configure:20221: $? = 0
+configure:20247: result: /usr/lib/erlang/lib
+configure:20254: checking for Erlang/OTP ERTS version
+configure:20286: $ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&5 ; echo "#!/bin/sh" > conftest$ac_exeext ; echo "\"$ERL\" -run conftest start -run init stop -noshell" >> conftest$ac_exeext ; chmod +x conftest$ac_exeext
+configure:20289: $? = 0
+configure:20295: ./conftest
+configure:20298: $? = 0
+configure:20328: result: 5.7.2
+configure:20330: checking for Erlang/OTP ERTS directory
+configure:20342: result: /usr/lib/erlang/erts-5.7.2
+configure:20351: checking for Erlang/OTP release
+configure:20383: $ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&5 ; echo "#!/bin/sh" > conftest$ac_exeext ; echo "\"$ERL\" -run conftest start -run init stop -noshell" >> conftest$ac_exeext ; chmod +x conftest$ac_exeext
+configure:20386: $? = 0
+configure:20392: ./conftest
+configure:20395: $? = 0
+configure:20425: result: R13B01
+configure:20474: checking for Erlang/OTP 'erl_interface' library subdirectory
+configure:20512: $ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&5 ; echo "#!/bin/sh" > conftest$ac_exeext ; echo "\"$ERL\" -run conftest start -run init stop -noshell" >> conftest$ac_exeext ; chmod +x conftest$ac_exeext
+configure:20515: $? = 0
+configure:20521: ./conftest
+configure:20524: $? = 0
+configure:20554: result: /usr/lib/erlang/lib/erl_interface-3.6.2
+configure:20556: checking for Erlang/OTP 'erl_interface' library version
+configure:20568: result: 3.6.2
+configure:20693: checking for Erlang/OTP library installation base directory
+configure:20697: result: /usr/lib/erlang/lib
+configure:20706: checking for Erlang/OTP 'exmpp' library installation subdirectory
+configure:20715: result: /usr/lib/erlang/lib/exmpp-0.9.2
+configure:20720: checking for SMP support
+configure:20758: result: yes (Erlang R13B01)
+configure:20788: XML parsers dependencies
+configure:20830: checking expat.h usability
+configure:20847: gcc -std=gnu99 -c -g -O2 -Wall -Werror   conftest.c >&5
+configure:20853: $? = 0
+configure:20867: result: yes
+configure:20871: checking expat.h presence
+configure:20886: gcc -std=gnu99 -E   conftest.c
+configure:20892: $? = 0
+configure:20906: result: yes
+configure:20939: checking for expat.h
+configure:20947: result: yes
+configure:20964: checking for XML_ParserCreate in -lexpat
+configure:20999: gcc -std=gnu99 -o conftest -g -O2 -Wall -Werror     conftest.c -lexpat   >&5
+configure:21005: $? = 0
+configure:21023: result: yes
+configure:21041: checking for Expat library
+configure:21044: result: yes
+configure:21124: checking for pkg-config
+configure:21142: found /usr/bin/pkg-config
+configure:21154: result: /usr/bin/pkg-config
+configure:21183: checking pkg-config is at least version 0.9.0
+configure:21186: result: yes
+configure:21197: checking for LIBXML2
+configure:21204: $PKG_CONFIG --exists --print-errors "libxml-2.0"
+configure:21207: $? = 0
+configure:21220: $PKG_CONFIG --exists --print-errors "libxml-2.0"
+configure:21223: $? = 0
+configure:21258: result: yes
+configure:21282: TLS engines dependencies
+configure:21324: checking openssl/ssl.h usability
+configure:21341: gcc -std=gnu99 -c -g -O2 -Wall -Werror   conftest.c >&5
+configure:21347: $? = 0
+configure:21361: result: yes
+configure:21365: checking openssl/ssl.h presence
+configure:21380: gcc -std=gnu99 -E   conftest.c
+configure:21386: $? = 0
+configure:21400: result: yes
+configure:21433: checking for openssl/ssl.h
+configure:21441: result: yes
+configure:21458: checking for SSL_CTX_new in -lssl
+configure:21493: gcc -std=gnu99 -o conftest -g -O2 -Wall -Werror     conftest.c -lssl   >&5
+configure:21499: $? = 0
+configure:21517: result: yes
+configure:21535: checking for OpenSSL library
+configure:21538: result: yes
+configure:21575: Compression engines dependencies
+configure:21617: checking zlib.h usability
+configure:21634: gcc -std=gnu99 -c -g -O2 -Wall -Werror   conftest.c >&5
+configure:21640: $? = 0
+configure:21654: result: yes
+configure:21658: checking zlib.h presence
+configure:21673: gcc -std=gnu99 -E   conftest.c
+configure:21679: $? = 0
+configure:21693: result: yes
+configure:21726: checking for zlib.h
+configure:21734: result: yes
+configure:21751: checking for zlibVersion in -lz
+configure:21786: gcc -std=gnu99 -o conftest -g -O2 -Wall -Werror     conftest.c -lz   >&5
+configure:21792: $? = 0
+configure:21810: result: yes
+configure:21828: checking for Zlib library
+configure:21831: result: yes
+configure:21869: Detect Operating System
+configure:21872: checking target system type
+configure:21887: result: i686-pc-linux-gnu
+configure:22199: creating ./config.status
+
+## ---------------------- ##
+## Running config.status. ##
+## ---------------------- ##
+
+This file was extended by exmpp config.status 0.9.2, which was
+generated by GNU Autoconf 2.61.  Invocation command line was
+
+  CONFIG_FILES    = 
+  CONFIG_HEADERS  = 
+  CONFIG_LINKS    = 
+  CONFIG_COMMANDS = 
+  $ ./config.status 
+
+on pluto
+
+config.status:723: creating c_src/Makefile
+config.status:723: creating include/Makefile
+config.status:723: creating include/internal/Makefile
+config.status:723: creating src/Makefile
+config.status:723: creating src/Emakefile
+config.status:723: creating ebin/Makefile
+config.status:723: creating ebin/exmpp.app
+config.status:723: creating ebin/exmpp.appup
+config.status:723: creating doc/Makefile
+config.status:723: creating testsuite/Makefile
+config.status:723: creating examples/Makefile
+config.status:723: creating examples/Emakefile
+config.status:723: creating Makefile
+config.status:723: creating testsuite/etest
+config.status:723: creating config.h
+config.status:999: executing depfiles commands
+configure:23535:  == exmpp 0.9.2-r903 ==
+configure:23543: Configuration:
+configure:23550:     Prefix:             /usr/local
+configure:23557:     Application dir.:   /usr/lib/erlang/lib/exmpp-0.9.2
+configure:23565:     C compiler:         gcc -std=gnu99 -g -O2 -Wall -Werror
+configure:23572:     Erlang emulator:    /usr/bin/erl
+configure:23579:     Erlang compiler:    /usr/bin/erlc
+configure:23586:     Erlang interpreter: /usr/bin/escript
+configure:23594:     Debug/warnings:     yes/yes
+configure:23601:     Compat modules:     no
+configure:23608:     Documentation:      no
+configure:23615:     Testsuite:          yes
+configure:23622:     Examples:           no
+configure:23630:     XML parsers:
+configure:23637:       . Expat:          yes
+configure:23644:       . LibXML2:        yes
+configure:23652:     TLS engines:
+configure:23659:       . OpenSSL:        yes
+configure:23667:     Compression engines:
+configure:23674:       . Zlib:           yes
+
+## ---------------- ##
+## Cache variables. ##
+## ---------------- ##
+
+ac_cv_build=i686-pc-linux-gnu
+ac_cv_c_compiler_gnu=yes
+ac_cv_env_CC_set=
+ac_cv_env_CC_value=
+ac_cv_env_CFLAGS_set=
+ac_cv_env_CFLAGS_value=
+ac_cv_env_CPPFLAGS_set=
+ac_cv_env_CPPFLAGS_value=
+ac_cv_env_CPP_set=
+ac_cv_env_CPP_value=
+ac_cv_env_CXXCPP_set=
+ac_cv_env_CXXCPP_value=
+ac_cv_env_ERLANG_INSTALL_LIB_DIR_exmpp_set=
+ac_cv_env_ERLANG_INSTALL_LIB_DIR_exmpp_value=
+ac_cv_env_ERLANG_INSTALL_LIB_DIR_set=
+ac_cv_env_ERLANG_INSTALL_LIB_DIR_value=
+ac_cv_env_ERLCFLAGS_set=
+ac_cv_env_ERLCFLAGS_value=
+ac_cv_env_ERLC_set=
+ac_cv_env_ERLC_value=
+ac_cv_env_ERL_set=
+ac_cv_env_ERL_value=
+ac_cv_env_ESCRIPT_set=
+ac_cv_env_ESCRIPT_value=
+ac_cv_env_LDFLAGS_set=
+ac_cv_env_LDFLAGS_value=
+ac_cv_env_LIBS_set=
+ac_cv_env_LIBS_value=
+ac_cv_env_LIBXML2_CFLAGS_set=
+ac_cv_env_LIBXML2_CFLAGS_value=
+ac_cv_env_LIBXML2_LIBS_set=
+ac_cv_env_LIBXML2_LIBS_value=
+ac_cv_env_PKG_CONFIG_set=
+ac_cv_env_PKG_CONFIG_value=
+ac_cv_env_build_alias_set=
+ac_cv_env_build_alias_value=
+ac_cv_env_host_alias_set=
+ac_cv_env_host_alias_value=
+ac_cv_env_target_alias_set=
+ac_cv_env_target_alias_value=
+ac_cv_header_dlfcn_h=yes
+ac_cv_header_expat_h=yes
+ac_cv_header_inttypes_h=yes
+ac_cv_header_memory_h=yes
+ac_cv_header_openssl_ssl_h=yes
+ac_cv_header_stdc=yes
+ac_cv_header_stdint_h=yes
+ac_cv_header_stdlib_h=yes
+ac_cv_header_string_h=yes
+ac_cv_header_strings_h=yes
+ac_cv_header_sys_stat_h=yes
+ac_cv_header_sys_types_h=yes
+ac_cv_header_unistd_h=yes
+ac_cv_header_zlib_h=yes
+ac_cv_host=i686-pc-linux-gnu
+ac_cv_lib_expat_XML_ParserCreate=yes
+ac_cv_lib_ssl_SSL_CTX_new=yes
+ac_cv_lib_z_zlibVersion=yes
+ac_cv_objext=o
+ac_cv_path_EGREP='/bin/grep -E'
+ac_cv_path_ESCRIPT=/usr/bin/escript
+ac_cv_path_GREP=/bin/grep
+ac_cv_path_SED=/bin/sed
+ac_cv_path_ac_pt_ERL=/usr/bin/erl
+ac_cv_path_ac_pt_ERLC=/usr/bin/erlc
+ac_cv_path_ac_pt_PKG_CONFIG=/usr/bin/pkg-config
+ac_cv_path_install='/usr/bin/install -c'
+ac_cv_prog_AWK=mawk
+ac_cv_prog_CPP='gcc -std=gnu99 -E'
+ac_cv_prog_ac_ct_AR=ar
+ac_cv_prog_ac_ct_CC=gcc
+ac_cv_prog_ac_ct_RANLIB=ranlib
+ac_cv_prog_ac_ct_STRIP=strip
+ac_cv_prog_cc_c89=
+ac_cv_prog_cc_c99=-std=gnu99
+ac_cv_prog_cc_g=yes
+ac_cv_prog_cc_stdc=-std=gnu99
+ac_cv_prog_make_make_set=yes
+ac_cv_target=i686-pc-linux-gnu
+am_cv_CC_dependencies_compiler_type=gcc3
+erlang_cv_erts_dir=/usr/lib/erlang/erts-5.7.2
+erlang_cv_erts_ver=5.7.2
+erlang_cv_lib_dir=/usr/lib/erlang/lib
+erlang_cv_lib_dir_erl_interface=/usr/lib/erlang/lib/erl_interface-3.6.2
+erlang_cv_lib_ver_erl_interface=3.6.2
+erlang_cv_release=R13B01
+erlang_cv_root_dir=/usr/lib/erlang
+lt_cv_deplibs_check_method=pass_all
+lt_cv_file_magic_cmd='$MAGIC_CMD'
+lt_cv_file_magic_test_file=
+lt_cv_ld_reload_flag=-r
+lt_cv_objdir=.libs
+lt_cv_path_LD=/usr/bin/ld
+lt_cv_path_NM='/usr/bin/nm -B'
+lt_cv_path_SED=/bin/sed
+lt_cv_prog_compiler_c_o=yes
+lt_cv_prog_compiler_rtti_exceptions=no
+lt_cv_prog_gnu_ld=yes
+lt_cv_sys_global_symbol_pipe='sed -n -e '\''s/^.*[ 	]\([ABCDGIRSTW][ABCDGIRSTW]*\)[ 	][ 	]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p'\'''
+lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\''s/^: \([^ ]*\) $/  {\"\1\", (lt_ptr) 0},/p'\'' -e '\''s/^[BCDEGRST] \([^ ]*\) \([^ ]*\)$/  {"\2", (lt_ptr) \&\2},/p'\'''
+lt_cv_sys_global_symbol_to_cdecl='sed -n -e '\''s/^. .* \(.*\)$/extern int \1;/p'\'''
+lt_cv_sys_max_cmd_len=32768
+lt_lt_cv_prog_compiler_c_o='"yes"'
+lt_lt_cv_sys_global_symbol_pipe='"sed -n -e '\''s/^.*[ 	]\\([ABCDGIRSTW][ABCDGIRSTW]*\\)[ 	][ 	]*\\([_A-Za-z][_A-Za-z0-9]*\\)\$/\\1 \\2 \\2/p'\''"'
+lt_lt_cv_sys_global_symbol_to_c_name_address='"sed -n -e '\''s/^: \\([^ ]*\\) \$/  {\\\"\\1\\\", (lt_ptr) 0},/p'\'' -e '\''s/^[BCDEGRST] \\([^ ]*\\) \\([^ ]*\\)\$/  {\"\\2\", (lt_ptr) \\&\\2},/p'\''"'
+lt_lt_cv_sys_global_symbol_to_cdecl='"sed -n -e '\''s/^. .* \\(.*\\)\$/extern int \\1;/p'\''"'
+pkg_cv_LIBXML2_CFLAGS='-I/usr/include/libxml2  '
+pkg_cv_LIBXML2_LIBS='-lxml2  '
+
+## ----------------- ##
+## Output variables. ##
+## ----------------- ##
+
+ACLOCAL='${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run aclocal-1.9'
+AMDEPBACKSLASH='\'
+AMDEP_FALSE='#'
+AMDEP_TRUE=''
+AMTAR='${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run tar'
+AR='ar'
+AUTOCONF='${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run autoconf'
+AUTOHEADER='${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run autoheader'
+AUTOMAKE='${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run automake-1.9'
+AWK='mawk'
+BUILD_COMPAT_FALSE=''
+BUILD_COMPAT_TRUE='#'
+CC='gcc -std=gnu99'
+CCDEPMODE='depmode=gcc3'
+CFLAGS='-g -O2 -Wall -Werror'
+COMPAT_MODULES='%'
+COMPAT_MODULES_START=' % Compatibility modules disabled:'
+CPP='gcc -std=gnu99 -E'
+CPPFLAGS=''
+CXXCPP=''
+CYGPATH_W='echo'
+DEFS='-DHAVE_CONFIG_H'
+DEPDIR='.deps'
+ECHO='echo'
+ECHO_C=''
+ECHO_N='-n'
+ECHO_T=''
+EGREP='/bin/grep -E'
+EMKOPTS='debug_info, {d, debug}, report_warnings, {warn_format, 1}, warn_export_vars, warn_shadow_vars, warn_unused_import, {d, '\''HAVE_EXPAT'\''}, {d, '\''HAVE_LIBXML2'\''}, {d, '\''HAVE_OPENSSL'\''}, {d, '\''HAVE_ZLIB'\''}'
+ENABLE_DOCUMENTATION_FALSE=''
+ENABLE_DOCUMENTATION_TRUE='#'
+ENABLE_EXAMPLES_FALSE=''
+ENABLE_EXAMPLES_TRUE='#'
+ENABLE_SMP_SUPPORT_FALSE='#'
+ENABLE_SMP_SUPPORT_TRUE=''
+ENABLE_TESTSUITE_FALSE='#'
+ENABLE_TESTSUITE_TRUE=''
+ERL='/usr/bin/erl'
+ERLANG_ERTS_DIR='/usr/lib/erlang/erts-5.7.2'
+ERLANG_ERTS_VER='5.7.2'
+ERLANG_INSTALL_LIB_DIR='/usr/lib/erlang/lib'
+ERLANG_INSTALL_LIB_DIR_exmpp='${ERLANG_INSTALL_LIB_DIR}/exmpp-${VERSION}'
+ERLANG_LIB_DIR='/usr/lib/erlang/lib'
+ERLANG_LIB_DIR_erl_interface='/usr/lib/erlang/lib/erl_interface-3.6.2'
+ERLANG_LIB_DIR_eunit=''
+ERLANG_LIB_VER_erl_interface='3.6.2'
+ERLANG_LIB_VER_eunit=''
+ERLANG_RELEASE='R13B01'
+ERLANG_ROOT_DIR='/usr/lib/erlang'
+ERLC='/usr/bin/erlc'
+ERLCFLAGS=''
+ERL_DRIVER_LDFLAGS=''
+ESCRIPT='/usr/bin/escript'
+EXEEXT=''
+EXMPP_BUILD_ARCH=''
+EXMPP_DISTSUFFIX='-r903'
+EXMPP_HOST_ARCH=''
+EXMPP_RELEASE_DATE=''
+EXMPP_SVNREV='903'
+EXPAT_CPPFLAGS=''
+EXPAT_LDFLAGS=''
+EXPAT_LIBS='-lexpat'
+GREP='/bin/grep'
+INSTALL_DATA='${INSTALL} -m 644'
+INSTALL_PROGRAM='${INSTALL}'
+INSTALL_SCRIPT='${INSTALL}'
+INSTALL_STRIP_PROGRAM='${SHELL} $(install_sh) -c -s'
+LDFLAGS=''
+LIBOBJS=''
+LIBS=''
+LIBTOOL='$(SHELL) $(top_builddir)/libtool'
+LIBXML2_CFLAGS='-I/usr/include/libxml2  '
+LIBXML2_LIBS='-lxml2  '
+LN_S='ln -s'
+LTLIBOBJS=''
+MAKEINFO='${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run makeinfo'
+OBJEXT='o'
+OPENSSL_CPPFLAGS=''
+OPENSSL_LDFLAGS=''
+OPENSSL_LIBS='-lssl -lcrypto'
+PACKAGE='exmpp'
+PACKAGE_BUGREPORT='js.pedron@meetic-corp.com'
+PACKAGE_NAME='exmpp'
+PACKAGE_STRING='exmpp 0.9.2'
+PACKAGE_TARNAME='exmpp'
+PACKAGE_VERSION='0.9.2'
+PATH_SEPARATOR=':'
+PKG_CONFIG='/usr/bin/pkg-config'
+RANLIB='ranlib'
+SED='/bin/sed'
+SET_MAKE=''
+SHELL='/bin/bash'
+STRIP='strip'
+VERSION='0.9.2'
+WITH_EXPAT_FALSE='#'
+WITH_EXPAT_TRUE=''
+WITH_LIBXML2_FALSE='#'
+WITH_LIBXML2_TRUE=''
+WITH_OPENSSL_FALSE='#'
+WITH_OPENSSL_TRUE=''
+WITH_ZLIB_FALSE='#'
+WITH_ZLIB_TRUE=''
+ZLIB_CPPFLAGS=''
+ZLIB_LDFLAGS=''
+ZLIB_LIBS='-lz'
+ac_ct_CC='gcc'
+am__fastdepCC_FALSE='#'
+am__fastdepCC_TRUE=''
+am__include='include'
+am__leading_dot='.'
+am__quote=''
+am__tar='${AMTAR} chof - "$$tardir"'
+am__untar='${AMTAR} xf -'
+bindir='${exec_prefix}/bin'
+build='i686-pc-linux-gnu'
+build_alias=''
+build_cpu='i686'
+build_os='linux-gnu'
+build_vendor='pc'
+datadir='${datarootdir}'
+datarootdir='${prefix}/share'
+docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
+dvidir='${docdir}'
+exec_prefix='${prefix}'
+exp_ERLANG_INSTALL_LIB_DIR_exmpp='/usr/lib/erlang/lib/exmpp-0.9.2'
+host='i686-pc-linux-gnu'
+host_alias=''
+host_cpu='i686'
+host_os='linux-gnu'
+host_vendor='pc'
+htmldir='${docdir}'
+includedir='${prefix}/include'
+infodir='${datarootdir}/info'
+install_sh='/home/arjan/devel/zotonic/deps/exmpp/ac-aux/install-sh'
+libdir='${exec_prefix}/lib'
+libexecdir='${exec_prefix}/libexec'
+localedir='${datarootdir}/locale'
+localstatedir='${prefix}/var'
+mandir='${datarootdir}/man'
+mkdir_p='mkdir -p --'
+oldincludedir='/usr/include'
+pdfdir='${docdir}'
+prefix='/usr/local'
+program_transform_name='s,x,x,'
+psdir='${docdir}'
+sbindir='${exec_prefix}/sbin'
+sharedstatedir='${prefix}/com'
+sysconfdir='${prefix}/etc'
+target='i686-pc-linux-gnu'
+target_alias=''
+target_cpu='i686'
+target_os='linux-gnu'
+target_vendor='pc'
+
+## ----------- ##
+## confdefs.h. ##
+## ----------- ##
+
+#define PACKAGE_NAME "exmpp"
+#define PACKAGE_TARNAME "exmpp"
+#define PACKAGE_VERSION "0.9.2"
+#define PACKAGE_STRING "exmpp 0.9.2"
+#define PACKAGE_BUGREPORT "js.pedron@meetic-corp.com"
+#define PACKAGE "exmpp"
+#define VERSION "0.9.2"
+#define STDC_HEADERS 1
+#define HAVE_SYS_TYPES_H 1
+#define HAVE_SYS_STAT_H 1
+#define HAVE_STDLIB_H 1
+#define HAVE_STRING_H 1
+#define HAVE_MEMORY_H 1
+#define HAVE_STRINGS_H 1
+#define HAVE_INTTYPES_H 1
+#define HAVE_STDINT_H 1
+#define HAVE_UNISTD_H 1
+#define HAVE_DLFCN_H 1
+#define SMP_SUPPORT
+#define USE_RWLOCK
+#define _REENTRANT
+#define HAVE_EXPAT_H 1
+#define HAVE_LIBEXPAT 1
+#define HAVE_OPENSSL_SSL_H 1
+#define HAVE_LIBSSL 1
+#define HAVE_ZLIB_H 1
+#define HAVE_LIBZ 1
+
+configure: exit 0
+
+## ---------------------- ##
+## Running config.status. ##
+## ---------------------- ##
+
+This file was extended by exmpp config.status 0.9.2, which was
+generated by GNU Autoconf 2.61.  Invocation command line was
+
+  CONFIG_FILES    = 
+  CONFIG_HEADERS  = 
+  CONFIG_LINKS    = 
+  CONFIG_COMMANDS = 
+  $ ./config.status ebin/exmpp.app
+
+on pluto
+
+config.status:723: creating ebin/exmpp.app
+
+## ---------------------- ##
+## Running config.status. ##
+## ---------------------- ##
+
+This file was extended by exmpp config.status 0.9.2, which was
+generated by GNU Autoconf 2.61.  Invocation command line was
+
+  CONFIG_FILES    = 
+  CONFIG_HEADERS  = 
+  CONFIG_LINKS    = 
+  CONFIG_COMMANDS = 
+  $ ./config.status ebin/exmpp.appup
+
+on pluto
+
+config.status:723: creating ebin/exmpp.appup
diff -r d551623afde5 deps/exmpp/config.status
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/config.status	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,1135 @@
+#! /bin/bash
+# Generated by configure.
+# Run this file to recreate the current configuration.
+# Compiler output produced by configure, useful for debugging
+# configure, is in config.log if it exists.
+
+debug=false
+ac_cs_recheck=false
+ac_cs_silent=false
+SHELL=${CONFIG_SHELL-/bin/bash}
+## --------------------- ##
+## M4sh Initialization.  ##
+## --------------------- ##
+
+# Be more Bourne compatible
+DUALCASE=1; export DUALCASE # for MKS sh
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
+  emulate sh
+  NULLCMD=:
+  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '${1+"$@"}'='"$@"'
+  setopt NO_GLOB_SUBST
+else
+  case `(set -o) 2>/dev/null` in
+  *posix*) set -o posix ;;
+esac
+
+fi
+
+
+
+
+# PATH needs CR
+# Avoid depending upon Character Ranges.
+as_cr_letters='abcdefghijklmnopqrstuvwxyz'
+as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
+as_cr_Letters=$as_cr_letters$as_cr_LETTERS
+as_cr_digits='0123456789'
+as_cr_alnum=$as_cr_Letters$as_cr_digits
+
+# The user is always right.
+if test "${PATH_SEPARATOR+set}" != set; then
+  echo "#! /bin/sh" >conf$$.sh
+  echo  "exit 0"   >>conf$$.sh
+  chmod +x conf$$.sh
+  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+    PATH_SEPARATOR=';'
+  else
+    PATH_SEPARATOR=:
+  fi
+  rm -f conf$$.sh
+fi
+
+# Support unset when possible.
+if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
+  as_unset=unset
+else
+  as_unset=false
+fi
+
+
+# IFS
+# We need space, tab and new line, in precisely that order.  Quoting is
+# there to prevent editors from complaining about space-tab.
+# (If _AS_PATH_WALK were called with IFS unset, it would disable word
+# splitting by setting IFS to empty value.)
+as_nl='
+'
+IFS=" ""	$as_nl"
+
+# Find who we are.  Look in the path if we contain no directory separator.
+case $0 in
+  *[\\/]* ) as_myself=$0 ;;
+  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
+done
+IFS=$as_save_IFS
+
+     ;;
+esac
+# We did not find ourselves, most probably we were run as `sh COMMAND'
+# in which case we are not to be found in the path.
+if test "x$as_myself" = x; then
+  as_myself=$0
+fi
+if test ! -f "$as_myself"; then
+  echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
+  { (exit 1); exit 1; }
+fi
+
+# Work around bugs in pre-3.0 UWIN ksh.
+for as_var in ENV MAIL MAILPATH
+do ($as_unset $as_var) >/dev/null 2>&1 && $as_unset $as_var
+done
+PS1='$ '
+PS2='> '
+PS4='+ '
+
+# NLS nuisances.
+for as_var in \
+  LANG LANGUAGE LC_ADDRESS LC_ALL LC_COLLATE LC_CTYPE LC_IDENTIFICATION \
+  LC_MEASUREMENT LC_MESSAGES LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER \
+  LC_TELEPHONE LC_TIME
+do
+  if (set +x; test -z "`(eval $as_var=C; export $as_var) 2>&1`"); then
+    eval $as_var=C; export $as_var
+  else
+    ($as_unset $as_var) >/dev/null 2>&1 && $as_unset $as_var
+  fi
+done
+
+# Required to use basename.
+if expr a : '\(a\)' >/dev/null 2>&1 &&
+   test "X`expr 00001 : '.*\(...\)'`" = X001; then
+  as_expr=expr
+else
+  as_expr=false
+fi
+
+if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
+  as_basename=basename
+else
+  as_basename=false
+fi
+
+
+# Name of the executable.
+as_me=`$as_basename -- "$0" ||
+$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
+	 X"$0" : 'X\(//\)$' \| \
+	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
+echo X/"$0" |
+    sed '/^.*\/\([^/][^/]*\)\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+
+# CDPATH.
+$as_unset CDPATH
+
+
+
+  as_lineno_1=$LINENO
+  as_lineno_2=$LINENO
+  test "x$as_lineno_1" != "x$as_lineno_2" &&
+  test "x`expr $as_lineno_1 + 1`" = "x$as_lineno_2" || {
+
+  # Create $as_me.lineno as a copy of $as_myself, but with $LINENO
+  # uniformly replaced by the line number.  The first 'sed' inserts a
+  # line-number line after each line using $LINENO; the second 'sed'
+  # does the real work.  The second script uses 'N' to pair each
+  # line-number line with the line containing $LINENO, and appends
+  # trailing '-' during substitution so that $LINENO is not a special
+  # case at line end.
+  # (Raja R Harinath suggested sed '=', and Paul Eggert wrote the
+  # scripts with optimization help from Paolo Bonzini.  Blame Lee
+  # E. McMahon (1931-1989) for sed's syntax.  :-)
+  sed -n '
+    p
+    /[$]LINENO/=
+  ' <$as_myself |
+    sed '
+      s/[$]LINENO.*/&-/
+      t lineno
+      b
+      :lineno
+      N
+      :loop
+      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
+      t loop
+      s/-\n.*//
+    ' >$as_me.lineno &&
+  chmod +x "$as_me.lineno" ||
+    { echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2
+   { (exit 1); exit 1; }; }
+
+  # Don't try to exec as it changes $[0], causing all sort of problems
+  # (the dirname of $[0] is not the place where we might find the
+  # original and so on.  Autoconf is especially sensitive to this).
+  . "./$as_me.lineno"
+  # Exit status is that of the last command.
+  exit
+}
+
+
+if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
+  as_dirname=dirname
+else
+  as_dirname=false
+fi
+
+ECHO_C= ECHO_N= ECHO_T=
+case `echo -n x` in
+-n*)
+  case `echo 'x\c'` in
+  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
+  *)   ECHO_C='\c';;
+  esac;;
+*)
+  ECHO_N='-n';;
+esac
+
+if expr a : '\(a\)' >/dev/null 2>&1 &&
+   test "X`expr 00001 : '.*\(...\)'`" = X001; then
+  as_expr=expr
+else
+  as_expr=false
+fi
+
+rm -f conf$$ conf$$.exe conf$$.file
+if test -d conf$$.dir; then
+  rm -f conf$$.dir/conf$$.file
+else
+  rm -f conf$$.dir
+  mkdir conf$$.dir
+fi
+echo >conf$$.file
+if ln -s conf$$.file conf$$ 2>/dev/null; then
+  as_ln_s='ln -s'
+  # ... but there are two gotchas:
+  # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
+  # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
+  # In both cases, we have to default to `cp -p'.
+  ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
+    as_ln_s='cp -p'
+elif ln conf$$.file conf$$ 2>/dev/null; then
+  as_ln_s=ln
+else
+  as_ln_s='cp -p'
+fi
+rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
+rmdir conf$$.dir 2>/dev/null
+
+if mkdir -p . 2>/dev/null; then
+  as_mkdir_p=:
+else
+  test -d ./-p && rmdir ./-p
+  as_mkdir_p=false
+fi
+
+if test -x / >/dev/null 2>&1; then
+  as_test_x='test -x'
+else
+  if ls -dL / >/dev/null 2>&1; then
+    as_ls_L_option=L
+  else
+    as_ls_L_option=
+  fi
+  as_test_x='
+    eval sh -c '\''
+      if test -d "$1"; then
+        test -d "$1/.";
+      else
+	case $1 in
+        -*)set "./$1";;
+	esac;
+	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in
+	???[sx]*):;;*)false;;esac;fi
+    '\'' sh
+  '
+fi
+as_executable_p=$as_test_x
+
+# Sed expression to map a string onto a valid CPP name.
+as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"
+
+# Sed expression to map a string onto a valid variable name.
+as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"
+
+
+exec 6>&1
+
+# Save the log message, to keep $[0] and so on meaningful, and to
+# report actual input values of CONFIG_FILES etc. instead of their
+# values after options handling.
+ac_log="
+This file was extended by exmpp $as_me 0.9.2, which was
+generated by GNU Autoconf 2.61.  Invocation command line was
+
+  CONFIG_FILES    = $CONFIG_FILES
+  CONFIG_HEADERS  = $CONFIG_HEADERS
+  CONFIG_LINKS    = $CONFIG_LINKS
+  CONFIG_COMMANDS = $CONFIG_COMMANDS
+  $ $0 $@
+
+on `(hostname || uname -n) 2>/dev/null | sed 1q`
+"
+
+# Files that config.status was made for.
+config_files=" c_src/Makefile include/Makefile include/internal/Makefile src/Makefile src/Emakefile ebin/Makefile ebin/exmpp.app ebin/exmpp.appup doc/Makefile testsuite/Makefile examples/Makefile examples/Emakefile Makefile testsuite/etest"
+config_headers=" config.h"
+config_commands=" depfiles"
+
+ac_cs_usage="\
+\`$as_me' instantiates files from templates according to the
+current configuration.
+
+Usage: $0 [OPTIONS] [FILE]...
+
+  -h, --help       print this help, then exit
+  -V, --version    print version number and configuration settings, then exit
+  -q, --quiet      do not print progress messages
+  -d, --debug      don't remove temporary files
+      --recheck    update $as_me by reconfiguring in the same conditions
+  --file=FILE[:TEMPLATE]
+		   instantiate the configuration file FILE
+  --header=FILE[:TEMPLATE]
+		   instantiate the configuration header FILE
+
+Configuration files:
+$config_files
+
+Configuration headers:
+$config_headers
+
+Configuration commands:
+$config_commands
+
+Report bugs to <bug-autoconf@gnu.org>."
+
+ac_cs_version="\
+exmpp config.status 0.9.2
+configured by ./configure, generated by GNU Autoconf 2.61,
+  with options \"'--disable-documentation'\"
+
+Copyright (C) 2006 Free Software Foundation, Inc.
+This config.status script is free software; the Free Software Foundation
+gives unlimited permission to copy, distribute and modify it."
+
+ac_pwd='/home/arjan/devel/zotonic/deps/exmpp'
+srcdir='.'
+INSTALL='/usr/bin/install -c'
+# If no file are specified by the user, then we need to provide default
+# value.  By we need to know if files were specified by the user.
+ac_need_defaults=:
+while test $# != 0
+do
+  case $1 in
+  --*=*)
+    ac_option=`expr "X$1" : 'X\([^=]*\)='`
+    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
+    ac_shift=:
+    ;;
+  *)
+    ac_option=$1
+    ac_optarg=$2
+    ac_shift=shift
+    ;;
+  esac
+
+  case $ac_option in
+  # Handling of the options.
+  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
+    ac_cs_recheck=: ;;
+  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
+    echo "$ac_cs_version"; exit ;;
+  --debug | --debu | --deb | --de | --d | -d )
+    debug=: ;;
+  --file | --fil | --fi | --f )
+    $ac_shift
+    CONFIG_FILES="$CONFIG_FILES $ac_optarg"
+    ac_need_defaults=false;;
+  --header | --heade | --head | --hea )
+    $ac_shift
+    CONFIG_HEADERS="$CONFIG_HEADERS $ac_optarg"
+    ac_need_defaults=false;;
+  --he | --h)
+    # Conflict between --help and --header
+    { echo "$as_me: error: ambiguous option: $1
+Try \`$0 --help' for more information." >&2
+   { (exit 1); exit 1; }; };;
+  --help | --hel | -h )
+    echo "$ac_cs_usage"; exit ;;
+  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
+  | -silent | --silent | --silen | --sile | --sil | --si | --s)
+    ac_cs_silent=: ;;
+
+  # This is an error.
+  -*) { echo "$as_me: error: unrecognized option: $1
+Try \`$0 --help' for more information." >&2
+   { (exit 1); exit 1; }; } ;;
+
+  *) ac_config_targets="$ac_config_targets $1"
+     ac_need_defaults=false ;;
+
+  esac
+  shift
+done
+
+ac_configure_extra_args=
+
+if $ac_cs_silent; then
+  exec 6>/dev/null
+  ac_configure_extra_args="$ac_configure_extra_args --silent"
+fi
+
+if $ac_cs_recheck; then
+  echo "running CONFIG_SHELL=/bin/bash /bin/bash ./configure " '--disable-documentation' $ac_configure_extra_args " --no-create --no-recursion" >&6
+  CONFIG_SHELL=/bin/bash
+  export CONFIG_SHELL
+  exec /bin/bash "./configure" '--disable-documentation' $ac_configure_extra_args --no-create --no-recursion
+fi
+
+exec 5>>config.log
+{
+  echo
+  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
+## Running $as_me. ##
+_ASBOX
+  echo "$ac_log"
+} >&5
+
+#
+# INIT-COMMANDS
+#
+AMDEP_TRUE="" ac_aux_dir="ac-aux"
+
+
+# Handling of arguments.
+for ac_config_target in $ac_config_targets
+do
+  case $ac_config_target in
+    "depfiles") CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
+    "config.h") CONFIG_HEADERS="$CONFIG_HEADERS config.h" ;;
+    "c_src/Makefile") CONFIG_FILES="$CONFIG_FILES c_src/Makefile" ;;
+    "include/Makefile") CONFIG_FILES="$CONFIG_FILES include/Makefile" ;;
+    "include/internal/Makefile") CONFIG_FILES="$CONFIG_FILES include/internal/Makefile" ;;
+    "src/Makefile") CONFIG_FILES="$CONFIG_FILES src/Makefile" ;;
+    "src/Emakefile") CONFIG_FILES="$CONFIG_FILES src/Emakefile" ;;
+    "ebin/Makefile") CONFIG_FILES="$CONFIG_FILES ebin/Makefile" ;;
+    "ebin/exmpp.app") CONFIG_FILES="$CONFIG_FILES ebin/exmpp.app" ;;
+    "ebin/exmpp.appup") CONFIG_FILES="$CONFIG_FILES ebin/exmpp.appup" ;;
+    "doc/Makefile") CONFIG_FILES="$CONFIG_FILES doc/Makefile" ;;
+    "testsuite/Makefile") CONFIG_FILES="$CONFIG_FILES testsuite/Makefile" ;;
+    "examples/Makefile") CONFIG_FILES="$CONFIG_FILES examples/Makefile" ;;
+    "examples/Emakefile") CONFIG_FILES="$CONFIG_FILES examples/Emakefile" ;;
+    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
+    "testsuite/etest") CONFIG_FILES="$CONFIG_FILES testsuite/etest" ;;
+
+  *) { { echo "$as_me:$LINENO: error: invalid argument: $ac_config_target" >&5
+echo "$as_me: error: invalid argument: $ac_config_target" >&2;}
+   { (exit 1); exit 1; }; };;
+  esac
+done
+
+
+# If the user did not use the arguments to specify the items to instantiate,
+# then the envvar interface is used.  Set only those that are not.
+# We use the long form for the default assignment because of an extremely
+# bizarre bug on SunOS 4.1.3.
+if $ac_need_defaults; then
+  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
+  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
+  test "${CONFIG_COMMANDS+set}" = set || CONFIG_COMMANDS=$config_commands
+fi
+
+# Have a temporary directory for convenience.  Make it in the build tree
+# simply because there is no reason against having it here, and in addition,
+# creating and moving files from /tmp can sometimes cause problems.
+# Hook for its removal unless debugging.
+# Note that there is a small window in which the directory will not be cleaned:
+# after its creation but before its name has been assigned to `$tmp'.
+$debug ||
+{
+  tmp=
+  trap 'exit_status=$?
+  { test -z "$tmp" || test ! -d "$tmp" || rm -fr "$tmp"; } && exit $exit_status
+' 0
+  trap '{ (exit 1); exit 1; }' 1 2 13 15
+}
+# Create a (secure) tmp directory for tmp files.
+
+{
+  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
+  test -n "$tmp" && test -d "$tmp"
+}  ||
+{
+  tmp=./conf$$-$RANDOM
+  (umask 077 && mkdir "$tmp")
+} ||
+{
+   echo "$me: cannot create a temporary directory in ." >&2
+   { (exit 1); exit 1; }
+}
+
+#
+# Set up the sed scripts for CONFIG_FILES section.
+#
+
+# No need to generate the scripts if there are no CONFIG_FILES.
+# This happens for instance when ./config.status config.h
+if test -n "$CONFIG_FILES"; then
+
+cat >"$tmp/subs-1.sed" <<\CEOF
+/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
+s,@SHELL@,|#_!!_#|/bin/bash,g
+s,@PATH_SEPARATOR@,|#_!!_#|:,g
+s,@PACKAGE_NAME@,|#_!!_#|exmpp,g
+s,@PACKAGE_TARNAME@,|#_!!_#|exmpp,g
+s,@PACKAGE_VERSION@,|#_!!_#|0.9.2,g
+s,@PACKAGE_STRING@,|#_!!_#|exmpp 0.9.2,g
+s,@PACKAGE_BUGREPORT@,|#_!!_#|js.pedron@|#_!!_#|meetic-corp.com,g
+s,@exec_prefix@,|#_!!_#|${prefix},g
+s,@prefix@,|#_!!_#|/usr/local,g
+s,@program_transform_name@,|#_!!_#|s\,x\,x\,,g
+s,@bindir@,|#_!!_#|${exec_prefix}/bin,g
+s,@sbindir@,|#_!!_#|${exec_prefix}/sbin,g
+s,@libexecdir@,|#_!!_#|${exec_prefix}/libexec,g
+s,@datarootdir@,|#_!!_#|${prefix}/share,g
+s,@datadir@,|#_!!_#|${datarootdir},g
+s,@sysconfdir@,|#_!!_#|${prefix}/etc,g
+s,@sharedstatedir@,|#_!!_#|${prefix}/com,g
+s,@localstatedir@,|#_!!_#|${prefix}/var,g
+s,@includedir@,|#_!!_#|${prefix}/include,g
+s,@oldincludedir@,|#_!!_#|/usr/include,g
+s,@docdir@,|#_!!_#|${datarootdir}/doc/${PACKAGE_TARNAME},g
+s,@infodir@,|#_!!_#|${datarootdir}/info,g
+s,@htmldir@,|#_!!_#|${docdir},g
+s,@dvidir@,|#_!!_#|${docdir},g
+s,@pdfdir@,|#_!!_#|${docdir},g
+s,@psdir@,|#_!!_#|${docdir},g
+s,@libdir@,|#_!!_#|${exec_prefix}/lib,g
+s,@localedir@,|#_!!_#|${datarootdir}/locale,g
+s,@mandir@,|#_!!_#|${datarootdir}/man,g
+s,@DEFS@,|#_!!_#|-DHAVE_CONFIG_H,g
+s,@ECHO_C@,|#_!!_#|,g
+s,@ECHO_N@,|#_!!_#|-n,g
+s,@ECHO_T@,|#_!!_#|,g
+s,@LIBS@,|#_!!_#|,g
+s,@build_alias@,|#_!!_#|,g
+s,@host_alias@,|#_!!_#|,g
+s,@target_alias@,|#_!!_#|,g
+s,@build@,|#_!!_#|i686-pc-linux-gnu,g
+s,@build_cpu@,|#_!!_#|i686,g
+s,@build_vendor@,|#_!!_#|pc,g
+s,@build_os@,|#_!!_#|linux-gnu,g
+s,@host@,|#_!!_#|i686-pc-linux-gnu,g
+s,@host_cpu@,|#_!!_#|i686,g
+s,@host_vendor@,|#_!!_#|pc,g
+s,@host_os@,|#_!!_#|linux-gnu,g
+s,@target@,|#_!!_#|i686-pc-linux-gnu,g
+s,@target_cpu@,|#_!!_#|i686,g
+s,@target_vendor@,|#_!!_#|pc,g
+s,@target_os@,|#_!!_#|linux-gnu,g
+s,@INSTALL_PROGRAM@,|#_!!_#|${INSTALL},g
+s,@INSTALL_SCRIPT@,|#_!!_#|${INSTALL},g
+s,@INSTALL_DATA@,|#_!!_#|${INSTALL} -m 644,g
+s,@CYGPATH_W@,|#_!!_#|echo,g
+s,@PACKAGE@,|#_!!_#|exmpp,g
+s,@VERSION@,|#_!!_#|0.9.2,g
+s,@ACLOCAL@,|#_!!_#|${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run aclocal-1.9,g
+s,@AUTOCONF@,|#_!!_#|${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run autoconf,g
+s,@AUTOMAKE@,|#_!!_#|${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run automake-1.9,g
+s,@AUTOHEADER@,|#_!!_#|${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run autoheader,g
+s,@MAKEINFO@,|#_!!_#|${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run makeinfo,g
+s,@install_sh@,|#_!!_#|/home/arjan/devel/zotonic/deps/exmpp/ac-aux/install-sh,g
+s,@STRIP@,|#_!!_#|strip,g
+s,@INSTALL_STRIP_PROGRAM@,|#_!!_#|${SHELL} $(install_sh) -c -s,g
+s,@mkdir_p@,|#_!!_#|mkdir -p --,g
+s,@AWK@,|#_!!_#|mawk,g
+s,@SET_MAKE@,|#_!!_#|,g
+s,@am__leading_dot@,|#_!!_#|.,g
+s,@AMTAR@,|#_!!_#|${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run tar,g
+s,@am__tar@,|#_!!_#|${AMTAR} chof - "$$tardir",g
+s,@am__untar@,|#_!!_#|${AMTAR} xf -,g
+s,@CC@,|#_!!_#|gcc -std=gnu99,g
+s,@CFLAGS@,|#_!!_#|-g -O2 -Wall -Werror,g
+s,@LDFLAGS@,|#_!!_#|,g
+s,@CPPFLAGS@,|#_!!_#|,g
+s,@ac_ct_CC@,|#_!!_#|gcc,g
+s,@EXEEXT@,|#_!!_#|,g
+s,@OBJEXT@,|#_!!_#|o,g
+s,@DEPDIR@,|#_!!_#|.deps,g
+s,@am__include@,|#_!!_#|include,g
+s,@am__quote@,|#_!!_#|,g
+s,@AMDEP_TRUE@,|#_!!_#|,g
+s,@AMDEP_FALSE@,|#_!!_#|#,g
+s,@AMDEPBACKSLASH@,|#_!!_#|\\,g
+s,@CCDEPMODE@,|#_!!_#|depmode=gcc3,g
+s,@am__fastdepCC_TRUE@,|#_!!_#|,g
+s,@am__fastdepCC_FALSE@,|#_!!_#|#,g
+s,@GREP@,|#_!!_#|/bin/grep,g
+s,@EGREP@,|#_!!_#|/bin/grep -E,g
+s,@SED@,|#_!!_#|/bin/sed,g
+s,@LN_S@,|#_!!_#|ln -s,g
+s,@ECHO@,|#_!!_#|echo,g
+s,@AR@,|#_!!_#|ar,g
+s,@RANLIB@,|#_!!_#|ranlib,g
+s,@CPP@,|#_!!_#|gcc -std=gnu99 -E,g
+s,@CXXCPP@,|#_!!_#|,g
+s,@LIBTOOL@,|#_!!_#|$(SHELL) $(top_builddir)/libtool,g
+s,@BUILD_COMPAT_TRUE@,|#_!!_#|#,g
+CEOF
+cat >"$tmp/subs-2.sed" <<\CEOF
+/@[a-zA-Z_][a-zA-Z_0-9]*@/!b end
+s,@BUILD_COMPAT_FALSE@,|#_!!_#|,g
+s,@COMPAT_MODULES_START@,|#_!!_#| % Compatibility modules disabled:,g
+s,@COMPAT_MODULES@,|#_!!_#|%,g
+s,@ENABLE_DOCUMENTATION_TRUE@,|#_!!_#|#,g
+s,@ENABLE_DOCUMENTATION_FALSE@,|#_!!_#|,g
+s,@ENABLE_EXAMPLES_TRUE@,|#_!!_#|#,g
+s,@ENABLE_EXAMPLES_FALSE@,|#_!!_#|,g
+s,@ERL@,|#_!!_#|/usr/bin/erl,g
+s,@ERLC@,|#_!!_#|/usr/bin/erlc,g
+s,@ERLCFLAGS@,|#_!!_#|,g
+s,@ESCRIPT@,|#_!!_#|/usr/bin/escript,g
+s,@ERLANG_ROOT_DIR@,|#_!!_#|/usr/lib/erlang,g
+s,@ERLANG_LIB_DIR@,|#_!!_#|/usr/lib/erlang/lib,g
+s,@ERLANG_ERTS_DIR@,|#_!!_#|/usr/lib/erlang/erts-5.7.2,g
+s,@ERLANG_ERTS_VER@,|#_!!_#|5.7.2,g
+s,@ERLANG_RELEASE@,|#_!!_#|R13B01,g
+s,@ERLANG_LIB_DIR_erl_interface@,|#_!!_#|/usr/lib/erlang/lib/erl_interface-3.6.2,g
+s,@ERLANG_LIB_VER_erl_interface@,|#_!!_#|3.6.2,g
+s,@ERLANG_LIB_DIR_eunit@,|#_!!_#|,g
+s,@ERLANG_LIB_VER_eunit@,|#_!!_#|,g
+s,@ERLANG_INSTALL_LIB_DIR@,|#_!!_#|/usr/lib/erlang/lib,g
+s,@ERLANG_INSTALL_LIB_DIR_exmpp@,|#_!!_#|${ERLANG_INSTALL_LIB_DIR}/exmpp-${VERSION},g
+s,@ENABLE_SMP_SUPPORT_TRUE@,|#_!!_#|,g
+s,@ENABLE_SMP_SUPPORT_FALSE@,|#_!!_#|#,g
+s,@ENABLE_TESTSUITE_TRUE@,|#_!!_#|,g
+s,@ENABLE_TESTSUITE_FALSE@,|#_!!_#|#,g
+s,@EXPAT_CPPFLAGS@,|#_!!_#|,g
+s,@EXPAT_LDFLAGS@,|#_!!_#|,g
+s,@EXPAT_LIBS@,|#_!!_#|-lexpat,g
+s,@WITH_EXPAT_TRUE@,|#_!!_#|,g
+s,@WITH_EXPAT_FALSE@,|#_!!_#|#,g
+s,@PKG_CONFIG@,|#_!!_#|/usr/bin/pkg-config,g
+s,@LIBXML2_CFLAGS@,|#_!!_#|-I/usr/include/libxml2  ,g
+s,@LIBXML2_LIBS@,|#_!!_#|-lxml2  ,g
+s,@WITH_LIBXML2_TRUE@,|#_!!_#|,g
+s,@WITH_LIBXML2_FALSE@,|#_!!_#|#,g
+s,@OPENSSL_CPPFLAGS@,|#_!!_#|,g
+s,@OPENSSL_LDFLAGS@,|#_!!_#|,g
+s,@OPENSSL_LIBS@,|#_!!_#|-lssl -lcrypto,g
+s,@WITH_OPENSSL_TRUE@,|#_!!_#|,g
+s,@WITH_OPENSSL_FALSE@,|#_!!_#|#,g
+s,@ZLIB_CPPFLAGS@,|#_!!_#|,g
+s,@ZLIB_LDFLAGS@,|#_!!_#|,g
+s,@ZLIB_LIBS@,|#_!!_#|-lz,g
+s,@WITH_ZLIB_TRUE@,|#_!!_#|,g
+s,@WITH_ZLIB_FALSE@,|#_!!_#|#,g
+s,@EMKOPTS@,|#_!!_#|debug_info\, {d\, debug}\, report_warnings\, {warn_format\, 1}\, warn_export_vars\, warn_shadow_vars\, warn_unused_import\, {d\, 'HAVE_EXPAT'}\, {d\, 'HAVE_LIBXML2'}\, {d\, 'HAVE_OPENSSL'}\, {d\, 'HAVE_ZLIB'},g
+s,@EXMPP_RELEASE_DATE@,|#_!!_#|,g
+s,@EXMPP_SVNREV@,|#_!!_#|903,g
+s,@EXMPP_DISTSUFFIX@,|#_!!_#|-r903,g
+s,@EXMPP_BUILD_ARCH@,|#_!!_#|,g
+s,@EXMPP_HOST_ARCH@,|#_!!_#|,g
+s,@exp_ERLANG_INSTALL_LIB_DIR_exmpp@,|#_!!_#|/usr/lib/erlang/lib/exmpp-0.9.2,g
+s,@ERL_DRIVER_LDFLAGS@,|#_!!_#|,g
+s,@LIBOBJS@,|#_!!_#|,g
+s,@LTLIBOBJS@,|#_!!_#|,g
+:end
+s/|#_!!_#|//g
+CEOF
+fi # test -n "$CONFIG_FILES"
+
+
+for ac_tag in  :F $CONFIG_FILES  :H $CONFIG_HEADERS    :C $CONFIG_COMMANDS
+do
+  case $ac_tag in
+  :[FHLC]) ac_mode=$ac_tag; continue;;
+  esac
+  case $ac_mode$ac_tag in
+  :[FHL]*:*);;
+  :L* | :C*:*) { { echo "$as_me:$LINENO: error: Invalid tag $ac_tag." >&5
+echo "$as_me: error: Invalid tag $ac_tag." >&2;}
+   { (exit 1); exit 1; }; };;
+  :[FH]-) ac_tag=-:-;;
+  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
+  esac
+  ac_save_IFS=$IFS
+  IFS=:
+  set x $ac_tag
+  IFS=$ac_save_IFS
+  shift
+  ac_file=$1
+  shift
+
+  case $ac_mode in
+  :L) ac_source=$1;;
+  :[FH])
+    ac_file_inputs=
+    for ac_f
+    do
+      case $ac_f in
+      -) ac_f="$tmp/stdin";;
+      *) # Look for the file first in the build tree, then in the source tree
+	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
+	 # because $ac_f cannot contain `:'.
+	 test -f "$ac_f" ||
+	   case $ac_f in
+	   [\\/$]*) false;;
+	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
+	   esac ||
+	   { { echo "$as_me:$LINENO: error: cannot find input file: $ac_f" >&5
+echo "$as_me: error: cannot find input file: $ac_f" >&2;}
+   { (exit 1); exit 1; }; };;
+      esac
+      ac_file_inputs="$ac_file_inputs $ac_f"
+    done
+
+    # Let's still pretend it is `configure' which instantiates (i.e., don't
+    # use $as_me), people would be surprised to read:
+    #    /* config.h.  Generated by config.status.  */
+    configure_input="Generated from "`IFS=:
+	  echo $* | sed 's|^[^:]*/||;s|:[^:]*/|, |g'`" by configure."
+    if test x"$ac_file" != x-; then
+      configure_input="$ac_file.  $configure_input"
+      { echo "$as_me:$LINENO: creating $ac_file" >&5
+echo "$as_me: creating $ac_file" >&6;}
+    fi
+
+    case $ac_tag in
+    *:-:* | *:-) cat >"$tmp/stdin";;
+    esac
+    ;;
+  esac
+
+  ac_dir=`$as_dirname -- "$ac_file" ||
+$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$ac_file" : 'X\(//\)[^/]' \| \
+	 X"$ac_file" : 'X\(//\)$' \| \
+	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
+echo X"$ac_file" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+  { as_dir="$ac_dir"
+  case $as_dir in #(
+  -*) as_dir=./$as_dir;;
+  esac
+  test -d "$as_dir" || { $as_mkdir_p && mkdir -p "$as_dir"; } || {
+    as_dirs=
+    while :; do
+      case $as_dir in #(
+      *\'*) as_qdir=`echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #(
+      *) as_qdir=$as_dir;;
+      esac
+      as_dirs="'$as_qdir' $as_dirs"
+      as_dir=`$as_dirname -- "$as_dir" ||
+$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$as_dir" : 'X\(//\)[^/]' \| \
+	 X"$as_dir" : 'X\(//\)$' \| \
+	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
+echo X"$as_dir" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+      test -d "$as_dir" && break
+    done
+    test -z "$as_dirs" || eval "mkdir $as_dirs"
+  } || test -d "$as_dir" || { { echo "$as_me:$LINENO: error: cannot create directory $as_dir" >&5
+echo "$as_me: error: cannot create directory $as_dir" >&2;}
+   { (exit 1); exit 1; }; }; }
+  ac_builddir=.
+
+case "$ac_dir" in
+.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
+*)
+  ac_dir_suffix=/`echo "$ac_dir" | sed 's,^\.[\\/],,'`
+  # A ".." for each directory in $ac_dir_suffix.
+  ac_top_builddir_sub=`echo "$ac_dir_suffix" | sed 's,/[^\\/]*,/..,g;s,/,,'`
+  case $ac_top_builddir_sub in
+  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
+  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
+  esac ;;
+esac
+ac_abs_top_builddir=$ac_pwd
+ac_abs_builddir=$ac_pwd$ac_dir_suffix
+# for backward compatibility:
+ac_top_builddir=$ac_top_build_prefix
+
+case $srcdir in
+  .)  # We are building in place.
+    ac_srcdir=.
+    ac_top_srcdir=$ac_top_builddir_sub
+    ac_abs_top_srcdir=$ac_pwd ;;
+  [\\/]* | ?:[\\/]* )  # Absolute name.
+    ac_srcdir=$srcdir$ac_dir_suffix;
+    ac_top_srcdir=$srcdir
+    ac_abs_top_srcdir=$srcdir ;;
+  *) # Relative name.
+    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
+    ac_top_srcdir=$ac_top_build_prefix$srcdir
+    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
+esac
+ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix
+
+
+  case $ac_mode in
+  :F)
+  #
+  # CONFIG_FILE
+  #
+
+  case $INSTALL in
+  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
+  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
+  esac
+# If the template does not know about datarootdir, expand it.
+# FIXME: This hack should be removed a few years after 2.60.
+ac_datarootdir_hack=; ac_datarootdir_seen=
+
+case `sed -n '/datarootdir/ {
+  p
+  q
+}
+/@datadir@/p
+/@docdir@/p
+/@infodir@/p
+/@localedir@/p
+/@mandir@/p
+' $ac_file_inputs` in
+*datarootdir*) ac_datarootdir_seen=yes;;
+*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
+  { echo "$as_me:$LINENO: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
+echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
+  ac_datarootdir_hack='
+  s&@datadir@&${datarootdir}&g
+  s&@docdir@&${datarootdir}/doc/${PACKAGE_TARNAME}&g
+  s&@infodir@&${datarootdir}/info&g
+  s&@localedir@&${datarootdir}/locale&g
+  s&@mandir@&${datarootdir}/man&g
+    s&\${datarootdir}&${prefix}/share&g' ;;
+esac
+  sed "/^[	 ]*VPATH[	 ]*=/{
+s/:*\$(srcdir):*/:/
+s/:*\${srcdir}:*/:/
+s/:*@srcdir@:*/:/
+s/^\([^=]*=[	 ]*\):*/\1/
+s/:*$//
+s/^[^=]*=[	 ]*$//
+}
+
+:t
+/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
+s&@configure_input@&$configure_input&;t t
+s&@top_builddir@&$ac_top_builddir_sub&;t t
+s&@srcdir@&$ac_srcdir&;t t
+s&@abs_srcdir@&$ac_abs_srcdir&;t t
+s&@top_srcdir@&$ac_top_srcdir&;t t
+s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
+s&@builddir@&$ac_builddir&;t t
+s&@abs_builddir@&$ac_abs_builddir&;t t
+s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
+s&@INSTALL@&$ac_INSTALL&;t t
+$ac_datarootdir_hack
+" $ac_file_inputs | sed -f "$tmp/subs-1.sed" | sed -f "$tmp/subs-2.sed" >$tmp/out
+
+test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
+  { ac_out=`sed -n '/\${datarootdir}/p' "$tmp/out"`; test -n "$ac_out"; } &&
+  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' "$tmp/out"`; test -z "$ac_out"; } &&
+  { echo "$as_me:$LINENO: WARNING: $ac_file contains a reference to the variable \`datarootdir'
+which seems to be undefined.  Please make sure it is defined." >&5
+echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
+which seems to be undefined.  Please make sure it is defined." >&2;}
+
+  rm -f "$tmp/stdin"
+  case $ac_file in
+  -) cat "$tmp/out"; rm -f "$tmp/out";;
+  *) rm -f "$ac_file"; mv "$tmp/out" $ac_file;;
+  esac
+ ;;
+  :H)
+  #
+  # CONFIG_HEADER
+  #
+    # First, check the format of the line:
+    cat >"$tmp/defines.sed" <<\CEOF
+/^[	 ]*#[	 ]*undef[	 ][	 ]*[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*[	 ]*$/b def
+/^[	 ]*#[	 ]*define[	 ][	 ]*[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*[(	 ]/b def
+b
+:def
+s/$/ /
+s,^\([	 #]*\)[^	 ]*\([	 ]*PACKAGE_NAME\)[	 (].*,\1define\2 "exmpp" ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*PACKAGE_TARNAME\)[	 (].*,\1define\2 "exmpp" ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*PACKAGE_VERSION\)[	 (].*,\1define\2 "0.9.2" ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*PACKAGE_STRING\)[	 (].*,\1define\2 "exmpp 0.9.2" ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*PACKAGE_BUGREPORT\)[	 (].*,\1define\2 "js.pedron@meetic-corp.com" ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*PACKAGE\)[	 (].*,\1define\2 "exmpp" ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*VERSION\)[	 (].*,\1define\2 "0.9.2" ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*STDC_HEADERS\)[	 (].*,\1define\2 1 ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_SYS_TYPES_H\)[	 (].*,\1define\2 1 ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_SYS_STAT_H\)[	 (].*,\1define\2 1 ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_STDLIB_H\)[	 (].*,\1define\2 1 ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_STRING_H\)[	 (].*,\1define\2 1 ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_MEMORY_H\)[	 (].*,\1define\2 1 ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_STRINGS_H\)[	 (].*,\1define\2 1 ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_INTTYPES_H\)[	 (].*,\1define\2 1 ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_STDINT_H\)[	 (].*,\1define\2 1 ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_UNISTD_H\)[	 (].*,\1define\2 1 ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_DLFCN_H\)[	 (].*,\1define\2 1 ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*SMP_SUPPORT\)[	 (].*,\1define\2  ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*USE_RWLOCK\)[	 (].*,\1define\2  ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*_REENTRANT\)[	 (].*,\1define\2  ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_EXPAT_H\)[	 (].*,\1define\2 1 ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_LIBEXPAT\)[	 (].*,\1define\2 1 ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_OPENSSL_SSL_H\)[	 (].*,\1define\2 1 ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_LIBSSL\)[	 (].*,\1define\2 1 ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_ZLIB_H\)[	 (].*,\1define\2 1 ,
+s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_LIBZ\)[	 (].*,\1define\2 1 ,
+s/ $//
+s,^[	 #]*u.*,/* & */,
+CEOF
+    sed -f "$tmp/defines.sed" $ac_file_inputs >"$tmp/out1"
+ac_result="$tmp/out1"
+  if test x"$ac_file" != x-; then
+    echo "/* $configure_input  */" >"$tmp/config.h"
+    cat "$ac_result" >>"$tmp/config.h"
+    if diff $ac_file "$tmp/config.h" >/dev/null 2>&1; then
+      { echo "$as_me:$LINENO: $ac_file is unchanged" >&5
+echo "$as_me: $ac_file is unchanged" >&6;}
+    else
+      rm -f $ac_file
+      mv "$tmp/config.h" $ac_file
+    fi
+  else
+    echo "/* $configure_input  */"
+    cat "$ac_result"
+  fi
+  rm -f "$tmp/out12"
+# Compute $ac_file's index in $config_headers.
+_am_stamp_count=1
+for _am_header in $config_headers :; do
+  case $_am_header in
+    $ac_file | $ac_file:* )
+      break ;;
+    * )
+      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
+  esac
+done
+echo "timestamp for $ac_file" >`$as_dirname -- $ac_file ||
+$as_expr X$ac_file : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X$ac_file : 'X\(//\)[^/]' \| \
+	 X$ac_file : 'X\(//\)$' \| \
+	 X$ac_file : 'X\(/\)' \| . 2>/dev/null ||
+echo X$ac_file |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`/stamp-h$_am_stamp_count
+ ;;
+
+  :C)  { echo "$as_me:$LINENO: executing $ac_file commands" >&5
+echo "$as_me: executing $ac_file commands" >&6;}
+ ;;
+  esac
+
+
+  case $ac_file$ac_mode in
+    "depfiles":C) test x"$AMDEP_TRUE" != x"" || for mf in $CONFIG_FILES; do
+  # Strip MF so we end up with the name of the file.
+  mf=`echo "$mf" | sed -e 's/:.*$//'`
+  # Check whether this is an Automake generated Makefile or not.
+  # We used to match only the files named `Makefile.in', but
+  # some people rename them; so instead we look at the file content.
+  # Grep'ing the first line is not enough: some people post-process
+  # each Makefile.in and add a new line on top of each file to say so.
+  # So let's grep whole file.
+  if grep '^#.*generated by automake' $mf > /dev/null 2>&1; then
+    dirpart=`$as_dirname -- "$mf" ||
+$as_expr X"$mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$mf" : 'X\(//\)[^/]' \| \
+	 X"$mf" : 'X\(//\)$' \| \
+	 X"$mf" : 'X\(/\)' \| . 2>/dev/null ||
+echo X"$mf" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+  else
+    continue
+  fi
+  # Extract the definition of DEPDIR, am__include, and am__quote
+  # from the Makefile without running `make'.
+  DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
+  test -z "$DEPDIR" && continue
+  am__include=`sed -n 's/^am__include = //p' < "$mf"`
+  test -z "am__include" && continue
+  am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
+  # When using ansi2knr, U may be empty or an underscore; expand it
+  U=`sed -n 's/^U = //p' < "$mf"`
+  # Find all dependency output files, they are included files with
+  # $(DEPDIR) in their names.  We invoke sed twice because it is the
+  # simplest approach to changing $(DEPDIR) to its actual value in the
+  # expansion.
+  for file in `sed -n "
+    s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
+       sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
+    # Make sure the directory exists.
+    test -f "$dirpart/$file" && continue
+    fdir=`$as_dirname -- "$file" ||
+$as_expr X"$file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$file" : 'X\(//\)[^/]' \| \
+	 X"$file" : 'X\(//\)$' \| \
+	 X"$file" : 'X\(/\)' \| . 2>/dev/null ||
+echo X"$file" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+    { as_dir=$dirpart/$fdir
+  case $as_dir in #(
+  -*) as_dir=./$as_dir;;
+  esac
+  test -d "$as_dir" || { $as_mkdir_p && mkdir -p "$as_dir"; } || {
+    as_dirs=
+    while :; do
+      case $as_dir in #(
+      *\'*) as_qdir=`echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #(
+      *) as_qdir=$as_dir;;
+      esac
+      as_dirs="'$as_qdir' $as_dirs"
+      as_dir=`$as_dirname -- "$as_dir" ||
+$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$as_dir" : 'X\(//\)[^/]' \| \
+	 X"$as_dir" : 'X\(//\)$' \| \
+	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
+echo X"$as_dir" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+      test -d "$as_dir" && break
+    done
+    test -z "$as_dirs" || eval "mkdir $as_dirs"
+  } || test -d "$as_dir" || { { echo "$as_me:$LINENO: error: cannot create directory $as_dir" >&5
+echo "$as_me: error: cannot create directory $as_dir" >&2;}
+   { (exit 1); exit 1; }; }; }
+    # echo "creating $dirpart/$file"
+    echo '# dummy' > "$dirpart/$file"
+  done
+done
+ ;;
+    "testsuite/etest":F) chmod +x testsuite/etest ;;
+
+  esac
+done # for ac_tag
+
+
+{ (exit 0); exit 0; }
diff -r d551623afde5 deps/exmpp/configure
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/configure	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,23676 @@
+#! /bin/sh
+# From configure.ac Revision: 890 .
+# Guess values for system-dependent variables and create Makefiles.
+# Generated by GNU Autoconf 2.61 for exmpp 0.9.2.
+#
+# Report bugs to <js.pedron@meetic-corp.com>.
+#
+# Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
+# 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.
+# This configure script is free software; the Free Software Foundation
+# gives unlimited permission to copy, distribute and modify it.
+## --------------------- ##
+## M4sh Initialization.  ##
+## --------------------- ##
+
+# Be more Bourne compatible
+DUALCASE=1; export DUALCASE # for MKS sh
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
+  emulate sh
+  NULLCMD=:
+  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '${1+"$@"}'='"$@"'
+  setopt NO_GLOB_SUBST
+else
+  case `(set -o) 2>/dev/null` in
+  *posix*) set -o posix ;;
+esac
+
+fi
+
+
+
+
+# PATH needs CR
+# Avoid depending upon Character Ranges.
+as_cr_letters='abcdefghijklmnopqrstuvwxyz'
+as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
+as_cr_Letters=$as_cr_letters$as_cr_LETTERS
+as_cr_digits='0123456789'
+as_cr_alnum=$as_cr_Letters$as_cr_digits
+
+# The user is always right.
+if test "${PATH_SEPARATOR+set}" != set; then
+  echo "#! /bin/sh" >conf$$.sh
+  echo  "exit 0"   >>conf$$.sh
+  chmod +x conf$$.sh
+  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+    PATH_SEPARATOR=';'
+  else
+    PATH_SEPARATOR=:
+  fi
+  rm -f conf$$.sh
+fi
+
+# Support unset when possible.
+if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
+  as_unset=unset
+else
+  as_unset=false
+fi
+
+
+# IFS
+# We need space, tab and new line, in precisely that order.  Quoting is
+# there to prevent editors from complaining about space-tab.
+# (If _AS_PATH_WALK were called with IFS unset, it would disable word
+# splitting by setting IFS to empty value.)
+as_nl='
+'
+IFS=" ""	$as_nl"
+
+# Find who we are.  Look in the path if we contain no directory separator.
+case $0 in
+  *[\\/]* ) as_myself=$0 ;;
+  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
+done
+IFS=$as_save_IFS
+
+     ;;
+esac
+# We did not find ourselves, most probably we were run as `sh COMMAND'
+# in which case we are not to be found in the path.
+if test "x$as_myself" = x; then
+  as_myself=$0
+fi
+if test ! -f "$as_myself"; then
+  echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
+  { (exit 1); exit 1; }
+fi
+
+# Work around bugs in pre-3.0 UWIN ksh.
+for as_var in ENV MAIL MAILPATH
+do ($as_unset $as_var) >/dev/null 2>&1 && $as_unset $as_var
+done
+PS1='$ '
+PS2='> '
+PS4='+ '
+
+# NLS nuisances.
+for as_var in \
+  LANG LANGUAGE LC_ADDRESS LC_ALL LC_COLLATE LC_CTYPE LC_IDENTIFICATION \
+  LC_MEASUREMENT LC_MESSAGES LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER \
+  LC_TELEPHONE LC_TIME
+do
+  if (set +x; test -z "`(eval $as_var=C; export $as_var) 2>&1`"); then
+    eval $as_var=C; export $as_var
+  else
+    ($as_unset $as_var) >/dev/null 2>&1 && $as_unset $as_var
+  fi
+done
+
+# Required to use basename.
+if expr a : '\(a\)' >/dev/null 2>&1 &&
+   test "X`expr 00001 : '.*\(...\)'`" = X001; then
+  as_expr=expr
+else
+  as_expr=false
+fi
+
+if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
+  as_basename=basename
+else
+  as_basename=false
+fi
+
+
+# Name of the executable.
+as_me=`$as_basename -- "$0" ||
+$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
+	 X"$0" : 'X\(//\)$' \| \
+	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
+echo X/"$0" |
+    sed '/^.*\/\([^/][^/]*\)\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+
+# CDPATH.
+$as_unset CDPATH
+
+
+if test "x$CONFIG_SHELL" = x; then
+  if (eval ":") 2>/dev/null; then
+  as_have_required=yes
+else
+  as_have_required=no
+fi
+
+  if test $as_have_required = yes && 	 (eval ":
+(as_func_return () {
+  (exit \$1)
+}
+as_func_success () {
+  as_func_return 0
+}
+as_func_failure () {
+  as_func_return 1
+}
+as_func_ret_success () {
+  return 0
+}
+as_func_ret_failure () {
+  return 1
+}
+
+exitcode=0
+if as_func_success; then
+  :
+else
+  exitcode=1
+  echo as_func_success failed.
+fi
+
+if as_func_failure; then
+  exitcode=1
+  echo as_func_failure succeeded.
+fi
+
+if as_func_ret_success; then
+  :
+else
+  exitcode=1
+  echo as_func_ret_success failed.
+fi
+
+if as_func_ret_failure; then
+  exitcode=1
+  echo as_func_ret_failure succeeded.
+fi
+
+if ( set x; as_func_ret_success y && test x = \"\$1\" ); then
+  :
+else
+  exitcode=1
+  echo positional parameters were not saved.
+fi
+
+test \$exitcode = 0) || { (exit 1); exit 1; }
+
+(
+  as_lineno_1=\$LINENO
+  as_lineno_2=\$LINENO
+  test \"x\$as_lineno_1\" != \"x\$as_lineno_2\" &&
+  test \"x\`expr \$as_lineno_1 + 1\`\" = \"x\$as_lineno_2\") || { (exit 1); exit 1; }
+") 2> /dev/null; then
+  :
+else
+  as_candidate_shells=
+    as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  case $as_dir in
+	 /*)
+	   for as_base in sh bash ksh sh5; do
+	     as_candidate_shells="$as_candidate_shells $as_dir/$as_base"
+	   done;;
+       esac
+done
+IFS=$as_save_IFS
+
+
+      for as_shell in $as_candidate_shells $SHELL; do
+	 # Try only shells that exist, to save several forks.
+	 if { test -f "$as_shell" || test -f "$as_shell.exe"; } &&
+		{ ("$as_shell") 2> /dev/null <<\_ASEOF
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
+  emulate sh
+  NULLCMD=:
+  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '${1+"$@"}'='"$@"'
+  setopt NO_GLOB_SUBST
+else
+  case `(set -o) 2>/dev/null` in
+  *posix*) set -o posix ;;
+esac
+
+fi
+
+
+:
+_ASEOF
+}; then
+  CONFIG_SHELL=$as_shell
+	       as_have_required=yes
+	       if { "$as_shell" 2> /dev/null <<\_ASEOF
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
+  emulate sh
+  NULLCMD=:
+  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '${1+"$@"}'='"$@"'
+  setopt NO_GLOB_SUBST
+else
+  case `(set -o) 2>/dev/null` in
+  *posix*) set -o posix ;;
+esac
+
+fi
+
+
+:
+(as_func_return () {
+  (exit $1)
+}
+as_func_success () {
+  as_func_return 0
+}
+as_func_failure () {
+  as_func_return 1
+}
+as_func_ret_success () {
+  return 0
+}
+as_func_ret_failure () {
+  return 1
+}
+
+exitcode=0
+if as_func_success; then
+  :
+else
+  exitcode=1
+  echo as_func_success failed.
+fi
+
+if as_func_failure; then
+  exitcode=1
+  echo as_func_failure succeeded.
+fi
+
+if as_func_ret_success; then
+  :
+else
+  exitcode=1
+  echo as_func_ret_success failed.
+fi
+
+if as_func_ret_failure; then
+  exitcode=1
+  echo as_func_ret_failure succeeded.
+fi
+
+if ( set x; as_func_ret_success y && test x = "$1" ); then
+  :
+else
+  exitcode=1
+  echo positional parameters were not saved.
+fi
+
+test $exitcode = 0) || { (exit 1); exit 1; }
+
+(
+  as_lineno_1=$LINENO
+  as_lineno_2=$LINENO
+  test "x$as_lineno_1" != "x$as_lineno_2" &&
+  test "x`expr $as_lineno_1 + 1`" = "x$as_lineno_2") || { (exit 1); exit 1; }
+
+_ASEOF
+}; then
+  break
+fi
+
+fi
+
+      done
+
+      if test "x$CONFIG_SHELL" != x; then
+  for as_var in BASH_ENV ENV
+        do ($as_unset $as_var) >/dev/null 2>&1 && $as_unset $as_var
+        done
+        export CONFIG_SHELL
+        exec "$CONFIG_SHELL" "$as_myself" ${1+"$@"}
+fi
+
+
+    if test $as_have_required = no; then
+  echo This script requires a shell more modern than all the
+      echo shells that I found on your system.  Please install a
+      echo modern shell, or manually run the script under such a
+      echo shell if you do have one.
+      { (exit 1); exit 1; }
+fi
+
+
+fi
+
+fi
+
+
+
+(eval "as_func_return () {
+  (exit \$1)
+}
+as_func_success () {
+  as_func_return 0
+}
+as_func_failure () {
+  as_func_return 1
+}
+as_func_ret_success () {
+  return 0
+}
+as_func_ret_failure () {
+  return 1
+}
+
+exitcode=0
+if as_func_success; then
+  :
+else
+  exitcode=1
+  echo as_func_success failed.
+fi
+
+if as_func_failure; then
+  exitcode=1
+  echo as_func_failure succeeded.
+fi
+
+if as_func_ret_success; then
+  :
+else
+  exitcode=1
+  echo as_func_ret_success failed.
+fi
+
+if as_func_ret_failure; then
+  exitcode=1
+  echo as_func_ret_failure succeeded.
+fi
+
+if ( set x; as_func_ret_success y && test x = \"\$1\" ); then
+  :
+else
+  exitcode=1
+  echo positional parameters were not saved.
+fi
+
+test \$exitcode = 0") || {
+  echo No shell found that supports shell functions.
+  echo Please tell autoconf@gnu.org about your system,
+  echo including any error possibly output before this
+  echo message
+}
+
+
+
+  as_lineno_1=$LINENO
+  as_lineno_2=$LINENO
+  test "x$as_lineno_1" != "x$as_lineno_2" &&
+  test "x`expr $as_lineno_1 + 1`" = "x$as_lineno_2" || {
+
+  # Create $as_me.lineno as a copy of $as_myself, but with $LINENO
+  # uniformly replaced by the line number.  The first 'sed' inserts a
+  # line-number line after each line using $LINENO; the second 'sed'
+  # does the real work.  The second script uses 'N' to pair each
+  # line-number line with the line containing $LINENO, and appends
+  # trailing '-' during substitution so that $LINENO is not a special
+  # case at line end.
+  # (Raja R Harinath suggested sed '=', and Paul Eggert wrote the
+  # scripts with optimization help from Paolo Bonzini.  Blame Lee
+  # E. McMahon (1931-1989) for sed's syntax.  :-)
+  sed -n '
+    p
+    /[$]LINENO/=
+  ' <$as_myself |
+    sed '
+      s/[$]LINENO.*/&-/
+      t lineno
+      b
+      :lineno
+      N
+      :loop
+      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
+      t loop
+      s/-\n.*//
+    ' >$as_me.lineno &&
+  chmod +x "$as_me.lineno" ||
+    { echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2
+   { (exit 1); exit 1; }; }
+
+  # Don't try to exec as it changes $[0], causing all sort of problems
+  # (the dirname of $[0] is not the place where we might find the
+  # original and so on.  Autoconf is especially sensitive to this).
+  . "./$as_me.lineno"
+  # Exit status is that of the last command.
+  exit
+}
+
+
+if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
+  as_dirname=dirname
+else
+  as_dirname=false
+fi
+
+ECHO_C= ECHO_N= ECHO_T=
+case `echo -n x` in
+-n*)
+  case `echo 'x\c'` in
+  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
+  *)   ECHO_C='\c';;
+  esac;;
+*)
+  ECHO_N='-n';;
+esac
+
+if expr a : '\(a\)' >/dev/null 2>&1 &&
+   test "X`expr 00001 : '.*\(...\)'`" = X001; then
+  as_expr=expr
+else
+  as_expr=false
+fi
+
+rm -f conf$$ conf$$.exe conf$$.file
+if test -d conf$$.dir; then
+  rm -f conf$$.dir/conf$$.file
+else
+  rm -f conf$$.dir
+  mkdir conf$$.dir
+fi
+echo >conf$$.file
+if ln -s conf$$.file conf$$ 2>/dev/null; then
+  as_ln_s='ln -s'
+  # ... but there are two gotchas:
+  # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
+  # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
+  # In both cases, we have to default to `cp -p'.
+  ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
+    as_ln_s='cp -p'
+elif ln conf$$.file conf$$ 2>/dev/null; then
+  as_ln_s=ln
+else
+  as_ln_s='cp -p'
+fi
+rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
+rmdir conf$$.dir 2>/dev/null
+
+if mkdir -p . 2>/dev/null; then
+  as_mkdir_p=:
+else
+  test -d ./-p && rmdir ./-p
+  as_mkdir_p=false
+fi
+
+if test -x / >/dev/null 2>&1; then
+  as_test_x='test -x'
+else
+  if ls -dL / >/dev/null 2>&1; then
+    as_ls_L_option=L
+  else
+    as_ls_L_option=
+  fi
+  as_test_x='
+    eval sh -c '\''
+      if test -d "$1"; then
+        test -d "$1/.";
+      else
+	case $1 in
+        -*)set "./$1";;
+	esac;
+	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in
+	???[sx]*):;;*)false;;esac;fi
+    '\'' sh
+  '
+fi
+as_executable_p=$as_test_x
+
+# Sed expression to map a string onto a valid CPP name.
+as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"
+
+# Sed expression to map a string onto a valid variable name.
+as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"
+
+
+
+
+# Check that we are running under the correct shell.
+SHELL=${CONFIG_SHELL-/bin/sh}
+
+case X$ECHO in
+X*--fallback-echo)
+  # Remove one level of quotation (which was required for Make).
+  ECHO=`echo "$ECHO" | sed 's,\\\\\$\\$0,'$0','`
+  ;;
+esac
+
+echo=${ECHO-echo}
+if test "X$1" = X--no-reexec; then
+  # Discard the --no-reexec flag, and continue.
+  shift
+elif test "X$1" = X--fallback-echo; then
+  # Avoid inline document here, it may be left over
+  :
+elif test "X`($echo '\t') 2>/dev/null`" = 'X\t' ; then
+  # Yippee, $echo works!
+  :
+else
+  # Restart under the correct shell.
+  exec $SHELL "$0" --no-reexec ${1+"$@"}
+fi
+
+if test "X$1" = X--fallback-echo; then
+  # used as fallback echo
+  shift
+  cat <<EOF
+$*
+EOF
+  exit 0
+fi
+
+# The HP-UX ksh and POSIX shell print the target directory to stdout
+# if CDPATH is set.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+if test -z "$ECHO"; then
+if test "X${echo_test_string+set}" != Xset; then
+# find a string as large as possible, as long as the shell can cope with it
+  for cmd in 'sed 50q "$0"' 'sed 20q "$0"' 'sed 10q "$0"' 'sed 2q "$0"' 'echo test'; do
+    # expected sizes: less than 2Kb, 1Kb, 512 bytes, 16 bytes, ...
+    if (echo_test_string=`eval $cmd`) 2>/dev/null &&
+       echo_test_string=`eval $cmd` &&
+       (test "X$echo_test_string" = "X$echo_test_string") 2>/dev/null
+    then
+      break
+    fi
+  done
+fi
+
+if test "X`($echo '\t') 2>/dev/null`" = 'X\t' &&
+   echo_testing_string=`($echo "$echo_test_string") 2>/dev/null` &&
+   test "X$echo_testing_string" = "X$echo_test_string"; then
+  :
+else
+  # The Solaris, AIX, and Digital Unix default echo programs unquote
+  # backslashes.  This makes it impossible to quote backslashes using
+  #   echo "$something" | sed 's/\\/\\\\/g'
+  #
+  # So, first we look for a working echo in the user's PATH.
+
+  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+  for dir in $PATH /usr/ucb; do
+    IFS="$lt_save_ifs"
+    if (test -f $dir/echo || test -f $dir/echo$ac_exeext) &&
+       test "X`($dir/echo '\t') 2>/dev/null`" = 'X\t' &&
+       echo_testing_string=`($dir/echo "$echo_test_string") 2>/dev/null` &&
+       test "X$echo_testing_string" = "X$echo_test_string"; then
+      echo="$dir/echo"
+      break
+    fi
+  done
+  IFS="$lt_save_ifs"
+
+  if test "X$echo" = Xecho; then
+    # We didn't find a better echo, so look for alternatives.
+    if test "X`(print -r '\t') 2>/dev/null`" = 'X\t' &&
+       echo_testing_string=`(print -r "$echo_test_string") 2>/dev/null` &&
+       test "X$echo_testing_string" = "X$echo_test_string"; then
+      # This shell has a builtin print -r that does the trick.
+      echo='print -r'
+    elif (test -f /bin/ksh || test -f /bin/ksh$ac_exeext) &&
+	 test "X$CONFIG_SHELL" != X/bin/ksh; then
+      # If we have ksh, try running configure again with it.
+      ORIGINAL_CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}
+      export ORIGINAL_CONFIG_SHELL
+      CONFIG_SHELL=/bin/ksh
+      export CONFIG_SHELL
+      exec $CONFIG_SHELL "$0" --no-reexec ${1+"$@"}
+    else
+      # Try using printf.
+      echo='printf %s\n'
+      if test "X`($echo '\t') 2>/dev/null`" = 'X\t' &&
+	 echo_testing_string=`($echo "$echo_test_string") 2>/dev/null` &&
+	 test "X$echo_testing_string" = "X$echo_test_string"; then
+	# Cool, printf works
+	:
+      elif echo_testing_string=`($ORIGINAL_CONFIG_SHELL "$0" --fallback-echo '\t') 2>/dev/null` &&
+	   test "X$echo_testing_string" = 'X\t' &&
+	   echo_testing_string=`($ORIGINAL_CONFIG_SHELL "$0" --fallback-echo "$echo_test_string") 2>/dev/null` &&
+	   test "X$echo_testing_string" = "X$echo_test_string"; then
+	CONFIG_SHELL=$ORIGINAL_CONFIG_SHELL
+	export CONFIG_SHELL
+	SHELL="$CONFIG_SHELL"
+	export SHELL
+	echo="$CONFIG_SHELL $0 --fallback-echo"
+      elif echo_testing_string=`($CONFIG_SHELL "$0" --fallback-echo '\t') 2>/dev/null` &&
+	   test "X$echo_testing_string" = 'X\t' &&
+	   echo_testing_string=`($CONFIG_SHELL "$0" --fallback-echo "$echo_test_string") 2>/dev/null` &&
+	   test "X$echo_testing_string" = "X$echo_test_string"; then
+	echo="$CONFIG_SHELL $0 --fallback-echo"
+      else
+	# maybe with a smaller string...
+	prev=:
+
+	for cmd in 'echo test' 'sed 2q "$0"' 'sed 10q "$0"' 'sed 20q "$0"' 'sed 50q "$0"'; do
+	  if (test "X$echo_test_string" = "X`eval $cmd`") 2>/dev/null
+	  then
+	    break
+	  fi
+	  prev="$cmd"
+	done
+
+	if test "$prev" != 'sed 50q "$0"'; then
+	  echo_test_string=`eval $prev`
+	  export echo_test_string
+	  exec ${ORIGINAL_CONFIG_SHELL-${CONFIG_SHELL-/bin/sh}} "$0" ${1+"$@"}
+	else
+	  # Oops.  We lost completely, so just stick with echo.
+	  echo=echo
+	fi
+      fi
+    fi
+  fi
+fi
+fi
+
+# Copy echo and quote the copy suitably for passing to libtool from
+# the Makefile, instead of quoting the original, which is used later.
+ECHO=$echo
+if test "X$ECHO" = "X$CONFIG_SHELL $0 --fallback-echo"; then
+   ECHO="$CONFIG_SHELL \\\$\$0 --fallback-echo"
+fi
+
+
+
+
+tagnames=${tagnames+${tagnames},}CXX
+
+tagnames=${tagnames+${tagnames},}F77
+
+exec 7<&0 </dev/null 6>&1
+
+# Name of the host.
+# hostname on some systems (SVR3.2, Linux) returns a bogus exit status,
+# so uname gets run too.
+ac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`
+
+#
+# Initializations.
+#
+ac_default_prefix=/usr/local
+ac_clean_files=
+ac_config_libobj_dir=.
+LIBOBJS=
+cross_compiling=no
+subdirs=
+MFLAGS=
+MAKEFLAGS=
+SHELL=${CONFIG_SHELL-/bin/sh}
+
+# Identity of this package.
+PACKAGE_NAME='exmpp'
+PACKAGE_TARNAME='exmpp'
+PACKAGE_VERSION='0.9.2'
+PACKAGE_STRING='exmpp 0.9.2'
+PACKAGE_BUGREPORT='js.pedron@meetic-corp.com'
+
+ac_unique_file="include/exmpp.hrl"
+# Factoring default headers for most tests.
+ac_includes_default="\
+#include <stdio.h>
+#ifdef HAVE_SYS_TYPES_H
+# include <sys/types.h>
+#endif
+#ifdef HAVE_SYS_STAT_H
+# include <sys/stat.h>
+#endif
+#ifdef STDC_HEADERS
+# include <stdlib.h>
+# include <stddef.h>
+#else
+# ifdef HAVE_STDLIB_H
+#  include <stdlib.h>
+# endif
+#endif
+#ifdef HAVE_STRING_H
+# if !defined STDC_HEADERS && defined HAVE_MEMORY_H
+#  include <memory.h>
+# endif
+# include <string.h>
+#endif
+#ifdef HAVE_STRINGS_H
+# include <strings.h>
+#endif
+#ifdef HAVE_INTTYPES_H
+# include <inttypes.h>
+#endif
+#ifdef HAVE_STDINT_H
+# include <stdint.h>
+#endif
+#ifdef HAVE_UNISTD_H
+# include <unistd.h>
+#endif"
+
+ac_subst_vars='SHELL
+PATH_SEPARATOR
+PACKAGE_NAME
+PACKAGE_TARNAME
+PACKAGE_VERSION
+PACKAGE_STRING
+PACKAGE_BUGREPORT
+exec_prefix
+prefix
+program_transform_name
+bindir
+sbindir
+libexecdir
+datarootdir
+datadir
+sysconfdir
+sharedstatedir
+localstatedir
+includedir
+oldincludedir
+docdir
+infodir
+htmldir
+dvidir
+pdfdir
+psdir
+libdir
+localedir
+mandir
+DEFS
+ECHO_C
+ECHO_N
+ECHO_T
+LIBS
+build_alias
+host_alias
+target_alias
+build
+build_cpu
+build_vendor
+build_os
+host
+host_cpu
+host_vendor
+host_os
+target
+target_cpu
+target_vendor
+target_os
+INSTALL_PROGRAM
+INSTALL_SCRIPT
+INSTALL_DATA
+CYGPATH_W
+PACKAGE
+VERSION
+ACLOCAL
+AUTOCONF
+AUTOMAKE
+AUTOHEADER
+MAKEINFO
+install_sh
+STRIP
+INSTALL_STRIP_PROGRAM
+mkdir_p
+AWK
+SET_MAKE
+am__leading_dot
+AMTAR
+am__tar
+am__untar
+CC
+CFLAGS
+LDFLAGS
+CPPFLAGS
+ac_ct_CC
+EXEEXT
+OBJEXT
+DEPDIR
+am__include
+am__quote
+AMDEP_TRUE
+AMDEP_FALSE
+AMDEPBACKSLASH
+CCDEPMODE
+am__fastdepCC_TRUE
+am__fastdepCC_FALSE
+GREP
+EGREP
+SED
+LN_S
+ECHO
+AR
+RANLIB
+CPP
+CXXCPP
+LIBTOOL
+BUILD_COMPAT_TRUE
+BUILD_COMPAT_FALSE
+COMPAT_MODULES_START
+COMPAT_MODULES
+ENABLE_DOCUMENTATION_TRUE
+ENABLE_DOCUMENTATION_FALSE
+ENABLE_EXAMPLES_TRUE
+ENABLE_EXAMPLES_FALSE
+ERL
+ERLC
+ERLCFLAGS
+ESCRIPT
+ERLANG_ROOT_DIR
+ERLANG_LIB_DIR
+ERLANG_ERTS_DIR
+ERLANG_ERTS_VER
+ERLANG_RELEASE
+ERLANG_LIB_DIR_erl_interface
+ERLANG_LIB_VER_erl_interface
+ERLANG_LIB_DIR_eunit
+ERLANG_LIB_VER_eunit
+ERLANG_INSTALL_LIB_DIR
+ERLANG_INSTALL_LIB_DIR_exmpp
+ENABLE_SMP_SUPPORT_TRUE
+ENABLE_SMP_SUPPORT_FALSE
+ENABLE_TESTSUITE_TRUE
+ENABLE_TESTSUITE_FALSE
+EXPAT_CPPFLAGS
+EXPAT_LDFLAGS
+EXPAT_LIBS
+WITH_EXPAT_TRUE
+WITH_EXPAT_FALSE
+PKG_CONFIG
+LIBXML2_CFLAGS
+LIBXML2_LIBS
+WITH_LIBXML2_TRUE
+WITH_LIBXML2_FALSE
+OPENSSL_CPPFLAGS
+OPENSSL_LDFLAGS
+OPENSSL_LIBS
+WITH_OPENSSL_TRUE
+WITH_OPENSSL_FALSE
+ZLIB_CPPFLAGS
+ZLIB_LDFLAGS
+ZLIB_LIBS
+WITH_ZLIB_TRUE
+WITH_ZLIB_FALSE
+EMKOPTS
+EXMPP_RELEASE_DATE
+EXMPP_SVNREV
+EXMPP_DISTSUFFIX
+EXMPP_BUILD_ARCH
+EXMPP_HOST_ARCH
+exp_ERLANG_INSTALL_LIB_DIR_exmpp
+ERL_DRIVER_LDFLAGS
+LIBOBJS
+LTLIBOBJS'
+ac_subst_files=''
+      ac_precious_vars='build_alias
+host_alias
+target_alias
+CC
+CFLAGS
+LDFLAGS
+LIBS
+CPPFLAGS
+CPP
+CXXCPP
+ERL
+ERLC
+ERLCFLAGS
+ESCRIPT
+ERLANG_INSTALL_LIB_DIR
+ERLANG_INSTALL_LIB_DIR_exmpp
+PKG_CONFIG
+LIBXML2_CFLAGS
+LIBXML2_LIBS'
+
+
+# Initialize some variables set by options.
+ac_init_help=
+ac_init_version=false
+# The variables have the same names as the options, with
+# dashes changed to underlines.
+cache_file=/dev/null
+exec_prefix=NONE
+no_create=
+no_recursion=
+prefix=NONE
+program_prefix=NONE
+program_suffix=NONE
+program_transform_name=s,x,x,
+silent=
+site=
+srcdir=
+verbose=
+x_includes=NONE
+x_libraries=NONE
+
+# Installation directory options.
+# These are left unexpanded so users can "make install exec_prefix=/foo"
+# and all the variables that are supposed to be based on exec_prefix
+# by default will actually change.
+# Use braces instead of parens because sh, perl, etc. also accept them.
+# (The list follows the same order as the GNU Coding Standards.)
+bindir='${exec_prefix}/bin'
+sbindir='${exec_prefix}/sbin'
+libexecdir='${exec_prefix}/libexec'
+datarootdir='${prefix}/share'
+datadir='${datarootdir}'
+sysconfdir='${prefix}/etc'
+sharedstatedir='${prefix}/com'
+localstatedir='${prefix}/var'
+includedir='${prefix}/include'
+oldincludedir='/usr/include'
+docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
+infodir='${datarootdir}/info'
+htmldir='${docdir}'
+dvidir='${docdir}'
+pdfdir='${docdir}'
+psdir='${docdir}'
+libdir='${exec_prefix}/lib'
+localedir='${datarootdir}/locale'
+mandir='${datarootdir}/man'
+
+ac_prev=
+ac_dashdash=
+for ac_option
+do
+  # If the previous option needs an argument, assign it.
+  if test -n "$ac_prev"; then
+    eval $ac_prev=\$ac_option
+    ac_prev=
+    continue
+  fi
+
+  case $ac_option in
+  *=*)	ac_optarg=`expr "X$ac_option" : '[^=]*=\(.*\)'` ;;
+  *)	ac_optarg=yes ;;
+  esac
+
+  # Accept the important Cygnus configure options, so we can diagnose typos.
+
+  case $ac_dashdash$ac_option in
+  --)
+    ac_dashdash=yes ;;
+
+  -bindir | --bindir | --bindi | --bind | --bin | --bi)
+    ac_prev=bindir ;;
+  -bindir=* | --bindir=* | --bindi=* | --bind=* | --bin=* | --bi=*)
+    bindir=$ac_optarg ;;
+
+  -build | --build | --buil | --bui | --bu)
+    ac_prev=build_alias ;;
+  -build=* | --build=* | --buil=* | --bui=* | --bu=*)
+    build_alias=$ac_optarg ;;
+
+  -cache-file | --cache-file | --cache-fil | --cache-fi \
+  | --cache-f | --cache- | --cache | --cach | --cac | --ca | --c)
+    ac_prev=cache_file ;;
+  -cache-file=* | --cache-file=* | --cache-fil=* | --cache-fi=* \
+  | --cache-f=* | --cache-=* | --cache=* | --cach=* | --cac=* | --ca=* | --c=*)
+    cache_file=$ac_optarg ;;
+
+  --config-cache | -C)
+    cache_file=config.cache ;;
+
+  -datadir | --datadir | --datadi | --datad)
+    ac_prev=datadir ;;
+  -datadir=* | --datadir=* | --datadi=* | --datad=*)
+    datadir=$ac_optarg ;;
+
+  -datarootdir | --datarootdir | --datarootdi | --datarootd | --dataroot \
+  | --dataroo | --dataro | --datar)
+    ac_prev=datarootdir ;;
+  -datarootdir=* | --datarootdir=* | --datarootdi=* | --datarootd=* \
+  | --dataroot=* | --dataroo=* | --dataro=* | --datar=*)
+    datarootdir=$ac_optarg ;;
+
+  -disable-* | --disable-*)
+    ac_feature=`expr "x$ac_option" : 'x-*disable-\(.*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_feature" : ".*[^-._$as_cr_alnum]" >/dev/null &&
+      { echo "$as_me: error: invalid feature name: $ac_feature" >&2
+   { (exit 1); exit 1; }; }
+    ac_feature=`echo $ac_feature | sed 's/[-.]/_/g'`
+    eval enable_$ac_feature=no ;;
+
+  -docdir | --docdir | --docdi | --doc | --do)
+    ac_prev=docdir ;;
+  -docdir=* | --docdir=* | --docdi=* | --doc=* | --do=*)
+    docdir=$ac_optarg ;;
+
+  -dvidir | --dvidir | --dvidi | --dvid | --dvi | --dv)
+    ac_prev=dvidir ;;
+  -dvidir=* | --dvidir=* | --dvidi=* | --dvid=* | --dvi=* | --dv=*)
+    dvidir=$ac_optarg ;;
+
+  -enable-* | --enable-*)
+    ac_feature=`expr "x$ac_option" : 'x-*enable-\([^=]*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_feature" : ".*[^-._$as_cr_alnum]" >/dev/null &&
+      { echo "$as_me: error: invalid feature name: $ac_feature" >&2
+   { (exit 1); exit 1; }; }
+    ac_feature=`echo $ac_feature | sed 's/[-.]/_/g'`
+    eval enable_$ac_feature=\$ac_optarg ;;
+
+  -exec-prefix | --exec_prefix | --exec-prefix | --exec-prefi \
+  | --exec-pref | --exec-pre | --exec-pr | --exec-p | --exec- \
+  | --exec | --exe | --ex)
+    ac_prev=exec_prefix ;;
+  -exec-prefix=* | --exec_prefix=* | --exec-prefix=* | --exec-prefi=* \
+  | --exec-pref=* | --exec-pre=* | --exec-pr=* | --exec-p=* | --exec-=* \
+  | --exec=* | --exe=* | --ex=*)
+    exec_prefix=$ac_optarg ;;
+
+  -gas | --gas | --ga | --g)
+    # Obsolete; use --with-gas.
+    with_gas=yes ;;
+
+  -help | --help | --hel | --he | -h)
+    ac_init_help=long ;;
+  -help=r* | --help=r* | --hel=r* | --he=r* | -hr*)
+    ac_init_help=recursive ;;
+  -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)
+    ac_init_help=short ;;
+
+  -host | --host | --hos | --ho)
+    ac_prev=host_alias ;;
+  -host=* | --host=* | --hos=* | --ho=*)
+    host_alias=$ac_optarg ;;
+
+  -htmldir | --htmldir | --htmldi | --htmld | --html | --htm | --ht)
+    ac_prev=htmldir ;;
+  -htmldir=* | --htmldir=* | --htmldi=* | --htmld=* | --html=* | --htm=* \
+  | --ht=*)
+    htmldir=$ac_optarg ;;
+
+  -includedir | --includedir | --includedi | --included | --include \
+  | --includ | --inclu | --incl | --inc)
+    ac_prev=includedir ;;
+  -includedir=* | --includedir=* | --includedi=* | --included=* | --include=* \
+  | --includ=* | --inclu=* | --incl=* | --inc=*)
+    includedir=$ac_optarg ;;
+
+  -infodir | --infodir | --infodi | --infod | --info | --inf)
+    ac_prev=infodir ;;
+  -infodir=* | --infodir=* | --infodi=* | --infod=* | --info=* | --inf=*)
+    infodir=$ac_optarg ;;
+
+  -libdir | --libdir | --libdi | --libd)
+    ac_prev=libdir ;;
+  -libdir=* | --libdir=* | --libdi=* | --libd=*)
+    libdir=$ac_optarg ;;
+
+  -libexecdir | --libexecdir | --libexecdi | --libexecd | --libexec \
+  | --libexe | --libex | --libe)
+    ac_prev=libexecdir ;;
+  -libexecdir=* | --libexecdir=* | --libexecdi=* | --libexecd=* | --libexec=* \
+  | --libexe=* | --libex=* | --libe=*)
+    libexecdir=$ac_optarg ;;
+
+  -localedir | --localedir | --localedi | --localed | --locale)
+    ac_prev=localedir ;;
+  -localedir=* | --localedir=* | --localedi=* | --localed=* | --locale=*)
+    localedir=$ac_optarg ;;
+
+  -localstatedir | --localstatedir | --localstatedi | --localstated \
+  | --localstate | --localstat | --localsta | --localst | --locals)
+    ac_prev=localstatedir ;;
+  -localstatedir=* | --localstatedir=* | --localstatedi=* | --localstated=* \
+  | --localstate=* | --localstat=* | --localsta=* | --localst=* | --locals=*)
+    localstatedir=$ac_optarg ;;
+
+  -mandir | --mandir | --mandi | --mand | --man | --ma | --m)
+    ac_prev=mandir ;;
+  -mandir=* | --mandir=* | --mandi=* | --mand=* | --man=* | --ma=* | --m=*)
+    mandir=$ac_optarg ;;
+
+  -nfp | --nfp | --nf)
+    # Obsolete; use --without-fp.
+    with_fp=no ;;
+
+  -no-create | --no-create | --no-creat | --no-crea | --no-cre \
+  | --no-cr | --no-c | -n)
+    no_create=yes ;;
+
+  -no-recursion | --no-recursion | --no-recursio | --no-recursi \
+  | --no-recurs | --no-recur | --no-recu | --no-rec | --no-re | --no-r)
+    no_recursion=yes ;;
+
+  -oldincludedir | --oldincludedir | --oldincludedi | --oldincluded \
+  | --oldinclude | --oldinclud | --oldinclu | --oldincl | --oldinc \
+  | --oldin | --oldi | --old | --ol | --o)
+    ac_prev=oldincludedir ;;
+  -oldincludedir=* | --oldincludedir=* | --oldincludedi=* | --oldincluded=* \
+  | --oldinclude=* | --oldinclud=* | --oldinclu=* | --oldincl=* | --oldinc=* \
+  | --oldin=* | --oldi=* | --old=* | --ol=* | --o=*)
+    oldincludedir=$ac_optarg ;;
+
+  -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)
+    ac_prev=prefix ;;
+  -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)
+    prefix=$ac_optarg ;;
+
+  -program-prefix | --program-prefix | --program-prefi | --program-pref \
+  | --program-pre | --program-pr | --program-p)
+    ac_prev=program_prefix ;;
+  -program-prefix=* | --program-prefix=* | --program-prefi=* \
+  | --program-pref=* | --program-pre=* | --program-pr=* | --program-p=*)
+    program_prefix=$ac_optarg ;;
+
+  -program-suffix | --program-suffix | --program-suffi | --program-suff \
+  | --program-suf | --program-su | --program-s)
+    ac_prev=program_suffix ;;
+  -program-suffix=* | --program-suffix=* | --program-suffi=* \
+  | --program-suff=* | --program-suf=* | --program-su=* | --program-s=*)
+    program_suffix=$ac_optarg ;;
+
+  -program-transform-name | --program-transform-name \
+  | --program-transform-nam | --program-transform-na \
+  | --program-transform-n | --program-transform- \
+  | --program-transform | --program-transfor \
+  | --program-transfo | --program-transf \
+  | --program-trans | --program-tran \
+  | --progr-tra | --program-tr | --program-t)
+    ac_prev=program_transform_name ;;
+  -program-transform-name=* | --program-transform-name=* \
+  | --program-transform-nam=* | --program-transform-na=* \
+  | --program-transform-n=* | --program-transform-=* \
+  | --program-transform=* | --program-transfor=* \
+  | --program-transfo=* | --program-transf=* \
+  | --program-trans=* | --program-tran=* \
+  | --progr-tra=* | --program-tr=* | --program-t=*)
+    program_transform_name=$ac_optarg ;;
+
+  -pdfdir | --pdfdir | --pdfdi | --pdfd | --pdf | --pd)
+    ac_prev=pdfdir ;;
+  -pdfdir=* | --pdfdir=* | --pdfdi=* | --pdfd=* | --pdf=* | --pd=*)
+    pdfdir=$ac_optarg ;;
+
+  -psdir | --psdir | --psdi | --psd | --ps)
+    ac_prev=psdir ;;
+  -psdir=* | --psdir=* | --psdi=* | --psd=* | --ps=*)
+    psdir=$ac_optarg ;;
+
+  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
+  | -silent | --silent | --silen | --sile | --sil)
+    silent=yes ;;
+
+  -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)
+    ac_prev=sbindir ;;
+  -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \
+  | --sbi=* | --sb=*)
+    sbindir=$ac_optarg ;;
+
+  -sharedstatedir | --sharedstatedir | --sharedstatedi \
+  | --sharedstated | --sharedstate | --sharedstat | --sharedsta \
+  | --sharedst | --shareds | --shared | --share | --shar \
+  | --sha | --sh)
+    ac_prev=sharedstatedir ;;
+  -sharedstatedir=* | --sharedstatedir=* | --sharedstatedi=* \
+  | --sharedstated=* | --sharedstate=* | --sharedstat=* | --sharedsta=* \
+  | --sharedst=* | --shareds=* | --shared=* | --share=* | --shar=* \
+  | --sha=* | --sh=*)
+    sharedstatedir=$ac_optarg ;;
+
+  -site | --site | --sit)
+    ac_prev=site ;;
+  -site=* | --site=* | --sit=*)
+    site=$ac_optarg ;;
+
+  -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)
+    ac_prev=srcdir ;;
+  -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)
+    srcdir=$ac_optarg ;;
+
+  -sysconfdir | --sysconfdir | --sysconfdi | --sysconfd | --sysconf \
+  | --syscon | --sysco | --sysc | --sys | --sy)
+    ac_prev=sysconfdir ;;
+  -sysconfdir=* | --sysconfdir=* | --sysconfdi=* | --sysconfd=* | --sysconf=* \
+  | --syscon=* | --sysco=* | --sysc=* | --sys=* | --sy=*)
+    sysconfdir=$ac_optarg ;;
+
+  -target | --target | --targe | --targ | --tar | --ta | --t)
+    ac_prev=target_alias ;;
+  -target=* | --target=* | --targe=* | --targ=* | --tar=* | --ta=* | --t=*)
+    target_alias=$ac_optarg ;;
+
+  -v | -verbose | --verbose | --verbos | --verbo | --verb)
+    verbose=yes ;;
+
+  -version | --version | --versio | --versi | --vers | -V)
+    ac_init_version=: ;;
+
+  -with-* | --with-*)
+    ac_package=`expr "x$ac_option" : 'x-*with-\([^=]*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_package" : ".*[^-._$as_cr_alnum]" >/dev/null &&
+      { echo "$as_me: error: invalid package name: $ac_package" >&2
+   { (exit 1); exit 1; }; }
+    ac_package=`echo $ac_package | sed 's/[-.]/_/g'`
+    eval with_$ac_package=\$ac_optarg ;;
+
+  -without-* | --without-*)
+    ac_package=`expr "x$ac_option" : 'x-*without-\(.*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_package" : ".*[^-._$as_cr_alnum]" >/dev/null &&
+      { echo "$as_me: error: invalid package name: $ac_package" >&2
+   { (exit 1); exit 1; }; }
+    ac_package=`echo $ac_package | sed 's/[-.]/_/g'`
+    eval with_$ac_package=no ;;
+
+  --x)
+    # Obsolete; use --with-x.
+    with_x=yes ;;
+
+  -x-includes | --x-includes | --x-include | --x-includ | --x-inclu \
+  | --x-incl | --x-inc | --x-in | --x-i)
+    ac_prev=x_includes ;;
+  -x-includes=* | --x-includes=* | --x-include=* | --x-includ=* | --x-inclu=* \
+  | --x-incl=* | --x-inc=* | --x-in=* | --x-i=*)
+    x_includes=$ac_optarg ;;
+
+  -x-libraries | --x-libraries | --x-librarie | --x-librari \
+  | --x-librar | --x-libra | --x-libr | --x-lib | --x-li | --x-l)
+    ac_prev=x_libraries ;;
+  -x-libraries=* | --x-libraries=* | --x-librarie=* | --x-librari=* \
+  | --x-librar=* | --x-libra=* | --x-libr=* | --x-lib=* | --x-li=* | --x-l=*)
+    x_libraries=$ac_optarg ;;
+
+  -*) { echo "$as_me: error: unrecognized option: $ac_option
+Try \`$0 --help' for more information." >&2
+   { (exit 1); exit 1; }; }
+    ;;
+
+  *=*)
+    ac_envvar=`expr "x$ac_option" : 'x\([^=]*\)='`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_envvar" : ".*[^_$as_cr_alnum]" >/dev/null &&
+      { echo "$as_me: error: invalid variable name: $ac_envvar" >&2
+   { (exit 1); exit 1; }; }
+    eval $ac_envvar=\$ac_optarg
+    export $ac_envvar ;;
+
+  *)
+    # FIXME: should be removed in autoconf 3.0.
+    echo "$as_me: WARNING: you should use --build, --host, --target" >&2
+    expr "x$ac_option" : ".*[^-._$as_cr_alnum]" >/dev/null &&
+      echo "$as_me: WARNING: invalid host type: $ac_option" >&2
+    : ${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}
+    ;;
+
+  esac
+done
+
+if test -n "$ac_prev"; then
+  ac_option=--`echo $ac_prev | sed 's/_/-/g'`
+  { echo "$as_me: error: missing argument to $ac_option" >&2
+   { (exit 1); exit 1; }; }
+fi
+
+# Be sure to have absolute directory names.
+for ac_var in	exec_prefix prefix bindir sbindir libexecdir datarootdir \
+		datadir sysconfdir sharedstatedir localstatedir includedir \
+		oldincludedir docdir infodir htmldir dvidir pdfdir psdir \
+		libdir localedir mandir
+do
+  eval ac_val=\$$ac_var
+  case $ac_val in
+    [\\/$]* | ?:[\\/]* )  continue;;
+    NONE | '' ) case $ac_var in *prefix ) continue;; esac;;
+  esac
+  { echo "$as_me: error: expected an absolute directory name for --$ac_var: $ac_val" >&2
+   { (exit 1); exit 1; }; }
+done
+
+# There might be people who depend on the old broken behavior: `$host'
+# used to hold the argument of --host etc.
+# FIXME: To remove some day.
+build=$build_alias
+host=$host_alias
+target=$target_alias
+
+# FIXME: To remove some day.
+if test "x$host_alias" != x; then
+  if test "x$build_alias" = x; then
+    cross_compiling=maybe
+    echo "$as_me: WARNING: If you wanted to set the --build type, don't use --host.
+    If a cross compiler is detected then cross compile mode will be used." >&2
+  elif test "x$build_alias" != "x$host_alias"; then
+    cross_compiling=yes
+  fi
+fi
+
+ac_tool_prefix=
+test -n "$host_alias" && ac_tool_prefix=$host_alias-
+
+test "$silent" = yes && exec 6>/dev/null
+
+
+ac_pwd=`pwd` && test -n "$ac_pwd" &&
+ac_ls_di=`ls -di .` &&
+ac_pwd_ls_di=`cd "$ac_pwd" && ls -di .` ||
+  { echo "$as_me: error: Working directory cannot be determined" >&2
+   { (exit 1); exit 1; }; }
+test "X$ac_ls_di" = "X$ac_pwd_ls_di" ||
+  { echo "$as_me: error: pwd does not report name of working directory" >&2
+   { (exit 1); exit 1; }; }
+
+
+# Find the source files, if location was not specified.
+if test -z "$srcdir"; then
+  ac_srcdir_defaulted=yes
+  # Try the directory containing this script, then the parent directory.
+  ac_confdir=`$as_dirname -- "$0" ||
+$as_expr X"$0" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$0" : 'X\(//\)[^/]' \| \
+	 X"$0" : 'X\(//\)$' \| \
+	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
+echo X"$0" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+  srcdir=$ac_confdir
+  if test ! -r "$srcdir/$ac_unique_file"; then
+    srcdir=..
+  fi
+else
+  ac_srcdir_defaulted=no
+fi
+if test ! -r "$srcdir/$ac_unique_file"; then
+  test "$ac_srcdir_defaulted" = yes && srcdir="$ac_confdir or .."
+  { echo "$as_me: error: cannot find sources ($ac_unique_file) in $srcdir" >&2
+   { (exit 1); exit 1; }; }
+fi
+ac_msg="sources are in $srcdir, but \`cd $srcdir' does not work"
+ac_abs_confdir=`(
+	cd "$srcdir" && test -r "./$ac_unique_file" || { echo "$as_me: error: $ac_msg" >&2
+   { (exit 1); exit 1; }; }
+	pwd)`
+# When building in place, set srcdir=.
+if test "$ac_abs_confdir" = "$ac_pwd"; then
+  srcdir=.
+fi
+# Remove unnecessary trailing slashes from srcdir.
+# Double slashes in file names in object file debugging info
+# mess up M-x gdb in Emacs.
+case $srcdir in
+*/) srcdir=`expr "X$srcdir" : 'X\(.*[^/]\)' \| "X$srcdir" : 'X\(.*\)'`;;
+esac
+for ac_var in $ac_precious_vars; do
+  eval ac_env_${ac_var}_set=\${${ac_var}+set}
+  eval ac_env_${ac_var}_value=\$${ac_var}
+  eval ac_cv_env_${ac_var}_set=\${${ac_var}+set}
+  eval ac_cv_env_${ac_var}_value=\$${ac_var}
+done
+
+#
+# Report the --help message.
+#
+if test "$ac_init_help" = "long"; then
+  # Omit some internal or obsolete options to make the list less imposing.
+  # This message is too long to be a string in the A/UX 3.1 sh.
+  cat <<_ACEOF
+\`configure' configures exmpp 0.9.2 to adapt to many kinds of systems.
+
+Usage: $0 [OPTION]... [VAR=VALUE]...
+
+To assign environment variables (e.g., CC, CFLAGS...), specify them as
+VAR=VALUE.  See below for descriptions of some of the useful variables.
+
+Defaults for the options are specified in brackets.
+
+Configuration:
+  -h, --help              display this help and exit
+      --help=short        display options specific to this package
+      --help=recursive    display the short help of all the included packages
+  -V, --version           display version information and exit
+  -q, --quiet, --silent   do not print \`checking...' messages
+      --cache-file=FILE   cache test results in FILE [disabled]
+  -C, --config-cache      alias for \`--cache-file=config.cache'
+  -n, --no-create         do not create output files
+      --srcdir=DIR        find the sources in DIR [configure dir or \`..']
+
+Installation directories:
+  --prefix=PREFIX         install architecture-independent files in PREFIX
+			  [$ac_default_prefix]
+  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
+			  [PREFIX]
+
+By default, \`make install' will install all the files in
+\`$ac_default_prefix/bin', \`$ac_default_prefix/lib' etc.  You can specify
+an installation prefix other than \`$ac_default_prefix' using \`--prefix',
+for instance \`--prefix=\$HOME'.
+
+For better control, use the options below.
+
+Fine tuning of the installation directories:
+  --bindir=DIR           user executables [EPREFIX/bin]
+  --sbindir=DIR          system admin executables [EPREFIX/sbin]
+  --libexecdir=DIR       program executables [EPREFIX/libexec]
+  --sysconfdir=DIR       read-only single-machine data [PREFIX/etc]
+  --sharedstatedir=DIR   modifiable architecture-independent data [PREFIX/com]
+  --localstatedir=DIR    modifiable single-machine data [PREFIX/var]
+  --libdir=DIR           object code libraries [EPREFIX/lib]
+  --includedir=DIR       C header files [PREFIX/include]
+  --oldincludedir=DIR    C header files for non-gcc [/usr/include]
+  --datarootdir=DIR      read-only arch.-independent data root [PREFIX/share]
+  --datadir=DIR          read-only architecture-independent data [DATAROOTDIR]
+  --infodir=DIR          info documentation [DATAROOTDIR/info]
+  --localedir=DIR        locale-dependent data [DATAROOTDIR/locale]
+  --mandir=DIR           man documentation [DATAROOTDIR/man]
+  --docdir=DIR           documentation root [DATAROOTDIR/doc/exmpp]
+  --htmldir=DIR          html documentation [DOCDIR]
+  --dvidir=DIR           dvi documentation [DOCDIR]
+  --pdfdir=DIR           pdf documentation [DOCDIR]
+  --psdir=DIR            ps documentation [DOCDIR]
+_ACEOF
+
+  cat <<\_ACEOF
+
+Program names:
+  --program-prefix=PREFIX            prepend PREFIX to installed program names
+  --program-suffix=SUFFIX            append SUFFIX to installed program names
+  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names
+
+System types:
+  --build=BUILD     configure for building on BUILD [guessed]
+  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
+  --target=TARGET   configure for building compilers for TARGET [HOST]
+_ACEOF
+fi
+
+if test -n "$ac_init_help"; then
+  case $ac_init_help in
+     short | recursive ) echo "Configuration of exmpp 0.9.2:";;
+   esac
+  cat <<\_ACEOF
+
+Optional Features:
+  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
+  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
+  --disable-dependency-tracking  speeds up one-time build
+  --enable-dependency-tracking   do not reject slow dependency extractors
+  --enable-static[=PKGS]  build static libraries [default=no]
+  --enable-shared[=PKGS]  build shared libraries [default=yes]
+  --enable-fast-install[=PKGS]
+                          optimize for fast installation [default=yes]
+  --disable-libtool-lock  avoid locking (might break parallel builds)
+  --enable-debug          turn on debugging [default=auto]
+  --enable-warnings       treat warnings as errors [default=yes]
+  --enable-compat         build compatibility modules [default=no]
+  --enable-documentation  build documentation [default=yes]
+  --enable-examples       build examples [default=no]
+  --enable-escaping-using-cdata
+                          escape XML text node with CDATA sections
+                          [default=off]
+  --enable-smp-support    enable SMP support [default=yes]
+
+Optional Packages:
+  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
+  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
+  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
+  --with-pic              try to use only PIC/non-PIC objects [default=use
+                          both]
+  --with-tags[=TAGS]      include additional configurations [automatic]
+  --with-erlang=PREFIX    prefix where build machine's Erlang is installed
+                          (optional)
+  --with-expat=PREFIX     prefix where Expat is installed (optional)
+  --with-openssl=PREFIX   prefix where OpenSSL is installed (optional)
+  --with-zlib=PREFIX      prefix where Zlib is installed (optional)
+
+Some influential environment variables:
+  CC          C compiler command
+  CFLAGS      C compiler flags
+  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
+              nonstandard directory <lib dir>
+  LIBS        libraries to pass to the linker, e.g. -l<library>
+  CPPFLAGS    C/C++/Objective C preprocessor flags, e.g. -I<include dir> if
+              you have headers in a nonstandard directory <include dir>
+  CPP         C preprocessor
+  CXXCPP      C++ preprocessor
+  ERL         Erlang/OTP interpreter command [autodetected]
+  ERLC        Erlang/OTP compiler command [autodetected]
+  ERLCFLAGS   Erlang/OTP compiler flags [none]
+  ESCRIPT     Erlang/OTP interpreter command [autodetected]
+  ERLANG_INSTALL_LIB_DIR
+              Erlang/OTP library installation base directory
+              [LIBDIR/erlang/lib]
+  ERLANG_INSTALL_LIB_DIR_exmpp
+              Erlang/OTP 'exmpp' library installation subdirectory
+              [ERLANG_INSTALL_LIB_DIR/exmpp-${VERSION}]
+  PKG_CONFIG  path to pkg-config utility
+  LIBXML2_CFLAGS
+              C compiler flags for LIBXML2, overriding pkg-config
+  LIBXML2_LIBS
+              linker flags for LIBXML2, overriding pkg-config
+
+Use these variables to override the choices made by `configure' or to help
+it to find libraries and programs with nonstandard names/locations.
+
+Report bugs to <js.pedron@meetic-corp.com>.
+_ACEOF
+ac_status=$?
+fi
+
+if test "$ac_init_help" = "recursive"; then
+  # If there are subdirs, report their specific --help.
+  for ac_dir in : $ac_subdirs_all; do test "x$ac_dir" = x: && continue
+    test -d "$ac_dir" || continue
+    ac_builddir=.
+
+case "$ac_dir" in
+.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
+*)
+  ac_dir_suffix=/`echo "$ac_dir" | sed 's,^\.[\\/],,'`
+  # A ".." for each directory in $ac_dir_suffix.
+  ac_top_builddir_sub=`echo "$ac_dir_suffix" | sed 's,/[^\\/]*,/..,g;s,/,,'`
+  case $ac_top_builddir_sub in
+  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
+  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
+  esac ;;
+esac
+ac_abs_top_builddir=$ac_pwd
+ac_abs_builddir=$ac_pwd$ac_dir_suffix
+# for backward compatibility:
+ac_top_builddir=$ac_top_build_prefix
+
+case $srcdir in
+  .)  # We are building in place.
+    ac_srcdir=.
+    ac_top_srcdir=$ac_top_builddir_sub
+    ac_abs_top_srcdir=$ac_pwd ;;
+  [\\/]* | ?:[\\/]* )  # Absolute name.
+    ac_srcdir=$srcdir$ac_dir_suffix;
+    ac_top_srcdir=$srcdir
+    ac_abs_top_srcdir=$srcdir ;;
+  *) # Relative name.
+    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
+    ac_top_srcdir=$ac_top_build_prefix$srcdir
+    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
+esac
+ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix
+
+    cd "$ac_dir" || { ac_status=$?; continue; }
+    # Check for guested configure.
+    if test -f "$ac_srcdir/configure.gnu"; then
+      echo &&
+      $SHELL "$ac_srcdir/configure.gnu" --help=recursive
+    elif test -f "$ac_srcdir/configure"; then
+      echo &&
+      $SHELL "$ac_srcdir/configure" --help=recursive
+    else
+      echo "$as_me: WARNING: no configuration information is in $ac_dir" >&2
+    fi || ac_status=$?
+    cd "$ac_pwd" || { ac_status=$?; break; }
+  done
+fi
+
+test -n "$ac_init_help" && exit $ac_status
+if $ac_init_version; then
+  cat <<\_ACEOF
+exmpp configure 0.9.2
+generated by GNU Autoconf 2.61
+
+Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
+2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.
+This configure script is free software; the Free Software Foundation
+gives unlimited permission to copy, distribute and modify it.
+_ACEOF
+  exit
+fi
+cat >config.log <<_ACEOF
+This file contains any messages produced by compilers while
+running configure, to aid debugging if configure makes a mistake.
+
+It was created by exmpp $as_me 0.9.2, which was
+generated by GNU Autoconf 2.61.  Invocation command line was
+
+  $ $0 $@
+
+_ACEOF
+exec 5>>config.log
+{
+cat <<_ASUNAME
+## --------- ##
+## Platform. ##
+## --------- ##
+
+hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
+uname -m = `(uname -m) 2>/dev/null || echo unknown`
+uname -r = `(uname -r) 2>/dev/null || echo unknown`
+uname -s = `(uname -s) 2>/dev/null || echo unknown`
+uname -v = `(uname -v) 2>/dev/null || echo unknown`
+
+/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
+/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`
+
+/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
+/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
+/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
+/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`
+/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
+/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
+/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`
+
+_ASUNAME
+
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  echo "PATH: $as_dir"
+done
+IFS=$as_save_IFS
+
+} >&5
+
+cat >&5 <<_ACEOF
+
+
+## ----------- ##
+## Core tests. ##
+## ----------- ##
+
+_ACEOF
+
+
+# Keep a trace of the command line.
+# Strip out --no-create and --no-recursion so they do not pile up.
+# Strip out --silent because we don't want to record it for future runs.
+# Also quote any args containing shell meta-characters.
+# Make two passes to allow for proper duplicate-argument suppression.
+ac_configure_args=
+ac_configure_args0=
+ac_configure_args1=
+ac_must_keep_next=false
+for ac_pass in 1 2
+do
+  for ac_arg
+  do
+    case $ac_arg in
+    -no-create | --no-c* | -n | -no-recursion | --no-r*) continue ;;
+    -q | -quiet | --quiet | --quie | --qui | --qu | --q \
+    | -silent | --silent | --silen | --sile | --sil)
+      continue ;;
+    *\'*)
+      ac_arg=`echo "$ac_arg" | sed "s/'/'\\\\\\\\''/g"` ;;
+    esac
+    case $ac_pass in
+    1) ac_configure_args0="$ac_configure_args0 '$ac_arg'" ;;
+    2)
+      ac_configure_args1="$ac_configure_args1 '$ac_arg'"
+      if test $ac_must_keep_next = true; then
+	ac_must_keep_next=false # Got value, back to normal.
+      else
+	case $ac_arg in
+	  *=* | --config-cache | -C | -disable-* | --disable-* \
+	  | -enable-* | --enable-* | -gas | --g* | -nfp | --nf* \
+	  | -q | -quiet | --q* | -silent | --sil* | -v | -verb* \
+	  | -with-* | --with-* | -without-* | --without-* | --x)
+	    case "$ac_configure_args0 " in
+	      "$ac_configure_args1"*" '$ac_arg' "* ) continue ;;
+	    esac
+	    ;;
+	  -* ) ac_must_keep_next=true ;;
+	esac
+      fi
+      ac_configure_args="$ac_configure_args '$ac_arg'"
+      ;;
+    esac
+  done
+done
+$as_unset ac_configure_args0 || test "${ac_configure_args0+set}" != set || { ac_configure_args0=; export ac_configure_args0; }
+$as_unset ac_configure_args1 || test "${ac_configure_args1+set}" != set || { ac_configure_args1=; export ac_configure_args1; }
+
+# When interrupted or exit'd, cleanup temporary files, and complete
+# config.log.  We remove comments because anyway the quotes in there
+# would cause problems or look ugly.
+# WARNING: Use '\'' to represent an apostrophe within the trap.
+# WARNING: Do not start the trap code with a newline, due to a FreeBSD 4.0 bug.
+trap 'exit_status=$?
+  # Save into config.log some information that might help in debugging.
+  {
+    echo
+
+    cat <<\_ASBOX
+## ---------------- ##
+## Cache variables. ##
+## ---------------- ##
+_ASBOX
+    echo
+    # The following way of writing the cache mishandles newlines in values,
+(
+  for ac_var in `(set) 2>&1 | sed -n '\''s/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'\''`; do
+    eval ac_val=\$$ac_var
+    case $ac_val in #(
+    *${as_nl}*)
+      case $ac_var in #(
+      *_cv_*) { echo "$as_me:$LINENO: WARNING: Cache variable $ac_var contains a newline." >&5
+echo "$as_me: WARNING: Cache variable $ac_var contains a newline." >&2;} ;;
+      esac
+      case $ac_var in #(
+      _ | IFS | as_nl) ;; #(
+      *) $as_unset $ac_var ;;
+      esac ;;
+    esac
+  done
+  (set) 2>&1 |
+    case $as_nl`(ac_space='\'' '\''; set) 2>&1` in #(
+    *${as_nl}ac_space=\ *)
+      sed -n \
+	"s/'\''/'\''\\\\'\'''\''/g;
+	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\''\\2'\''/p"
+      ;; #(
+    *)
+      sed -n "/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p"
+      ;;
+    esac |
+    sort
+)
+    echo
+
+    cat <<\_ASBOX
+## ----------------- ##
+## Output variables. ##
+## ----------------- ##
+_ASBOX
+    echo
+    for ac_var in $ac_subst_vars
+    do
+      eval ac_val=\$$ac_var
+      case $ac_val in
+      *\'\''*) ac_val=`echo "$ac_val" | sed "s/'\''/'\''\\\\\\\\'\'''\''/g"`;;
+      esac
+      echo "$ac_var='\''$ac_val'\''"
+    done | sort
+    echo
+
+    if test -n "$ac_subst_files"; then
+      cat <<\_ASBOX
+## ------------------- ##
+## File substitutions. ##
+## ------------------- ##
+_ASBOX
+      echo
+      for ac_var in $ac_subst_files
+      do
+	eval ac_val=\$$ac_var
+	case $ac_val in
+	*\'\''*) ac_val=`echo "$ac_val" | sed "s/'\''/'\''\\\\\\\\'\'''\''/g"`;;
+	esac
+	echo "$ac_var='\''$ac_val'\''"
+      done | sort
+      echo
+    fi
+
+    if test -s confdefs.h; then
+      cat <<\_ASBOX
+## ----------- ##
+## confdefs.h. ##
+## ----------- ##
+_ASBOX
+      echo
+      cat confdefs.h
+      echo
+    fi
+    test "$ac_signal" != 0 &&
+      echo "$as_me: caught signal $ac_signal"
+    echo "$as_me: exit $exit_status"
+  } >&5
+  rm -f core *.core core.conftest.* &&
+    rm -f -r conftest* confdefs* conf$$* $ac_clean_files &&
+    exit $exit_status
+' 0
+for ac_signal in 1 2 13 15; do
+  trap 'ac_signal='$ac_signal'; { (exit 1); exit 1; }' $ac_signal
+done
+ac_signal=0
+
+# confdefs.h avoids OS command line length limits that DEFS can exceed.
+rm -f -r conftest* confdefs.h
+
+# Predefined preprocessor variables.
+
+cat >>confdefs.h <<_ACEOF
+#define PACKAGE_NAME "$PACKAGE_NAME"
+_ACEOF
+
+
+cat >>confdefs.h <<_ACEOF
+#define PACKAGE_TARNAME "$PACKAGE_TARNAME"
+_ACEOF
+
+
+cat >>confdefs.h <<_ACEOF
+#define PACKAGE_VERSION "$PACKAGE_VERSION"
+_ACEOF
+
+
+cat >>confdefs.h <<_ACEOF
+#define PACKAGE_STRING "$PACKAGE_STRING"
+_ACEOF
+
+
+cat >>confdefs.h <<_ACEOF
+#define PACKAGE_BUGREPORT "$PACKAGE_BUGREPORT"
+_ACEOF
+
+
+# Let the site file select an alternate cache file if it wants to.
+# Prefer explicitly selected file to automatically selected ones.
+if test -n "$CONFIG_SITE"; then
+  set x "$CONFIG_SITE"
+elif test "x$prefix" != xNONE; then
+  set x "$prefix/share/config.site" "$prefix/etc/config.site"
+else
+  set x "$ac_default_prefix/share/config.site" \
+	"$ac_default_prefix/etc/config.site"
+fi
+shift
+for ac_site_file
+do
+  if test -r "$ac_site_file"; then
+    { echo "$as_me:$LINENO: loading site script $ac_site_file" >&5
+echo "$as_me: loading site script $ac_site_file" >&6;}
+    sed 's/^/| /' "$ac_site_file" >&5
+    . "$ac_site_file"
+  fi
+done
+
+if test -r "$cache_file"; then
+  # Some versions of bash will fail to source /dev/null (special
+  # files actually), so we avoid doing that.
+  if test -f "$cache_file"; then
+    { echo "$as_me:$LINENO: loading cache $cache_file" >&5
+echo "$as_me: loading cache $cache_file" >&6;}
+    case $cache_file in
+      [\\/]* | ?:[\\/]* ) . "$cache_file";;
+      *)                      . "./$cache_file";;
+    esac
+  fi
+else
+  { echo "$as_me:$LINENO: creating cache $cache_file" >&5
+echo "$as_me: creating cache $cache_file" >&6;}
+  >$cache_file
+fi
+
+# Check that the precious variables saved in the cache have kept the same
+# value.
+ac_cache_corrupted=false
+for ac_var in $ac_precious_vars; do
+  eval ac_old_set=\$ac_cv_env_${ac_var}_set
+  eval ac_new_set=\$ac_env_${ac_var}_set
+  eval ac_old_val=\$ac_cv_env_${ac_var}_value
+  eval ac_new_val=\$ac_env_${ac_var}_value
+  case $ac_old_set,$ac_new_set in
+    set,)
+      { echo "$as_me:$LINENO: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&5
+echo "$as_me: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&2;}
+      ac_cache_corrupted=: ;;
+    ,set)
+      { echo "$as_me:$LINENO: error: \`$ac_var' was not set in the previous run" >&5
+echo "$as_me: error: \`$ac_var' was not set in the previous run" >&2;}
+      ac_cache_corrupted=: ;;
+    ,);;
+    *)
+      if test "x$ac_old_val" != "x$ac_new_val"; then
+	{ echo "$as_me:$LINENO: error: \`$ac_var' has changed since the previous run:" >&5
+echo "$as_me: error: \`$ac_var' has changed since the previous run:" >&2;}
+	{ echo "$as_me:$LINENO:   former value:  $ac_old_val" >&5
+echo "$as_me:   former value:  $ac_old_val" >&2;}
+	{ echo "$as_me:$LINENO:   current value: $ac_new_val" >&5
+echo "$as_me:   current value: $ac_new_val" >&2;}
+	ac_cache_corrupted=:
+      fi;;
+  esac
+  # Pass precious variables to config.status.
+  if test "$ac_new_set" = set; then
+    case $ac_new_val in
+    *\'*) ac_arg=$ac_var=`echo "$ac_new_val" | sed "s/'/'\\\\\\\\''/g"` ;;
+    *) ac_arg=$ac_var=$ac_new_val ;;
+    esac
+    case " $ac_configure_args " in
+      *" '$ac_arg' "*) ;; # Avoid dups.  Use of quotes ensures accuracy.
+      *) ac_configure_args="$ac_configure_args '$ac_arg'" ;;
+    esac
+  fi
+done
+if $ac_cache_corrupted; then
+  { echo "$as_me:$LINENO: error: changes in the environment can compromise the build" >&5
+echo "$as_me: error: changes in the environment can compromise the build" >&2;}
+  { { echo "$as_me:$LINENO: error: run \`make distclean' and/or \`rm $cache_file' and start over" >&5
+echo "$as_me: error: run \`make distclean' and/or \`rm $cache_file' and start over" >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+
+
+ac_aux_dir=
+for ac_dir in ac-aux "$srcdir"/ac-aux; do
+  if test -f "$ac_dir/install-sh"; then
+    ac_aux_dir=$ac_dir
+    ac_install_sh="$ac_aux_dir/install-sh -c"
+    break
+  elif test -f "$ac_dir/install.sh"; then
+    ac_aux_dir=$ac_dir
+    ac_install_sh="$ac_aux_dir/install.sh -c"
+    break
+  elif test -f "$ac_dir/shtool"; then
+    ac_aux_dir=$ac_dir
+    ac_install_sh="$ac_aux_dir/shtool install -c"
+    break
+  fi
+done
+if test -z "$ac_aux_dir"; then
+  { { echo "$as_me:$LINENO: error: cannot find install-sh or install.sh in ac-aux \"$srcdir\"/ac-aux" >&5
+echo "$as_me: error: cannot find install-sh or install.sh in ac-aux \"$srcdir\"/ac-aux" >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+# These three variables are undocumented and unsupported,
+# and are intended to be withdrawn in a future Autoconf release.
+# They can cause serious problems if a builder's source tree is in a directory
+# whose full name contains unusual characters.
+ac_config_guess="$SHELL $ac_aux_dir/config.guess"  # Please don't use this var.
+ac_config_sub="$SHELL $ac_aux_dir/config.sub"  # Please don't use this var.
+ac_configure="$SHELL $ac_aux_dir/configure"  # Please don't use this var.
+
+
+
+# Make sure we can run config.sub.
+$SHELL "$ac_aux_dir/config.sub" sun4 >/dev/null 2>&1 ||
+  { { echo "$as_me:$LINENO: error: cannot run $SHELL $ac_aux_dir/config.sub" >&5
+echo "$as_me: error: cannot run $SHELL $ac_aux_dir/config.sub" >&2;}
+   { (exit 1); exit 1; }; }
+
+{ echo "$as_me:$LINENO: checking build system type" >&5
+echo $ECHO_N "checking build system type... $ECHO_C" >&6; }
+if test "${ac_cv_build+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_build_alias=$build_alias
+test "x$ac_build_alias" = x &&
+  ac_build_alias=`$SHELL "$ac_aux_dir/config.guess"`
+test "x$ac_build_alias" = x &&
+  { { echo "$as_me:$LINENO: error: cannot guess build type; you must specify one" >&5
+echo "$as_me: error: cannot guess build type; you must specify one" >&2;}
+   { (exit 1); exit 1; }; }
+ac_cv_build=`$SHELL "$ac_aux_dir/config.sub" $ac_build_alias` ||
+  { { echo "$as_me:$LINENO: error: $SHELL $ac_aux_dir/config.sub $ac_build_alias failed" >&5
+echo "$as_me: error: $SHELL $ac_aux_dir/config.sub $ac_build_alias failed" >&2;}
+   { (exit 1); exit 1; }; }
+
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_build" >&5
+echo "${ECHO_T}$ac_cv_build" >&6; }
+case $ac_cv_build in
+*-*-*) ;;
+*) { { echo "$as_me:$LINENO: error: invalid value of canonical build" >&5
+echo "$as_me: error: invalid value of canonical build" >&2;}
+   { (exit 1); exit 1; }; };;
+esac
+build=$ac_cv_build
+ac_save_IFS=$IFS; IFS='-'
+set x $ac_cv_build
+shift
+build_cpu=$1
+build_vendor=$2
+shift; shift
+# Remember, the first character of IFS is used to create $*,
+# except with old shells:
+build_os=$*
+IFS=$ac_save_IFS
+case $build_os in *\ *) build_os=`echo "$build_os" | sed 's/ /-/g'`;; esac
+
+
+{ echo "$as_me:$LINENO: checking host system type" >&5
+echo $ECHO_N "checking host system type... $ECHO_C" >&6; }
+if test "${ac_cv_host+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test "x$host_alias" = x; then
+  ac_cv_host=$ac_cv_build
+else
+  ac_cv_host=`$SHELL "$ac_aux_dir/config.sub" $host_alias` ||
+    { { echo "$as_me:$LINENO: error: $SHELL $ac_aux_dir/config.sub $host_alias failed" >&5
+echo "$as_me: error: $SHELL $ac_aux_dir/config.sub $host_alias failed" >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_host" >&5
+echo "${ECHO_T}$ac_cv_host" >&6; }
+case $ac_cv_host in
+*-*-*) ;;
+*) { { echo "$as_me:$LINENO: error: invalid value of canonical host" >&5
+echo "$as_me: error: invalid value of canonical host" >&2;}
+   { (exit 1); exit 1; }; };;
+esac
+host=$ac_cv_host
+ac_save_IFS=$IFS; IFS='-'
+set x $ac_cv_host
+shift
+host_cpu=$1
+host_vendor=$2
+shift; shift
+# Remember, the first character of IFS is used to create $*,
+# except with old shells:
+host_os=$*
+IFS=$ac_save_IFS
+case $host_os in *\ *) host_os=`echo "$host_os" | sed 's/ /-/g'`;; esac
+
+
+{ echo "$as_me:$LINENO: checking target system type" >&5
+echo $ECHO_N "checking target system type... $ECHO_C" >&6; }
+if test "${ac_cv_target+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test "x$target_alias" = x; then
+  ac_cv_target=$ac_cv_host
+else
+  ac_cv_target=`$SHELL "$ac_aux_dir/config.sub" $target_alias` ||
+    { { echo "$as_me:$LINENO: error: $SHELL $ac_aux_dir/config.sub $target_alias failed" >&5
+echo "$as_me: error: $SHELL $ac_aux_dir/config.sub $target_alias failed" >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_target" >&5
+echo "${ECHO_T}$ac_cv_target" >&6; }
+case $ac_cv_target in
+*-*-*) ;;
+*) { { echo "$as_me:$LINENO: error: invalid value of canonical target" >&5
+echo "$as_me: error: invalid value of canonical target" >&2;}
+   { (exit 1); exit 1; }; };;
+esac
+target=$ac_cv_target
+ac_save_IFS=$IFS; IFS='-'
+set x $ac_cv_target
+shift
+target_cpu=$1
+target_vendor=$2
+shift; shift
+# Remember, the first character of IFS is used to create $*,
+# except with old shells:
+target_os=$*
+IFS=$ac_save_IFS
+case $target_os in *\ *) target_os=`echo "$target_os" | sed 's/ /-/g'`;; esac
+
+
+# The aliases save the names the user supplied, while $host etc.
+# will get canonicalized.
+test -n "$target_alias" &&
+  test "$program_prefix$program_suffix$program_transform_name" = \
+    NONENONEs,x,x, &&
+  program_prefix=${target_alias}-
+am__api_version="1.9"
+# Find a good install program.  We prefer a C program (faster),
+# so one script is as good as another.  But avoid the broken or
+# incompatible versions:
+# SysV /etc/install, /usr/sbin/install
+# SunOS /usr/etc/install
+# IRIX /sbin/install
+# AIX /bin/install
+# AmigaOS /C/install, which installs bootblocks on floppy discs
+# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
+# AFS /usr/afsws/bin/install, which mishandles nonexistent args
+# SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
+# OS/2's system install, which has a completely different semantic
+# ./install, which can be erroneously created by make from ./install.sh.
+{ echo "$as_me:$LINENO: checking for a BSD-compatible install" >&5
+echo $ECHO_N "checking for a BSD-compatible install... $ECHO_C" >&6; }
+if test -z "$INSTALL"; then
+if test "${ac_cv_path_install+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  # Account for people who put trailing slashes in PATH elements.
+case $as_dir/ in
+  ./ | .// | /cC/* | \
+  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \
+  ?:\\/os2\\/install\\/* | ?:\\/OS2\\/INSTALL\\/* | \
+  /usr/ucb/* ) ;;
+  *)
+    # OSF1 and SCO ODT 3.0 have their own names for install.
+    # Don't use installbsd from OSF since it installs stuff as root
+    # by default.
+    for ac_prog in ginstall scoinst install; do
+      for ac_exec_ext in '' $ac_executable_extensions; do
+	if { test -f "$as_dir/$ac_prog$ac_exec_ext" && $as_test_x "$as_dir/$ac_prog$ac_exec_ext"; }; then
+	  if test $ac_prog = install &&
+	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    # AIX install.  It has an incompatible calling convention.
+	    :
+	  elif test $ac_prog = install &&
+	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    # program-specific install script used by HP pwplus--don't use.
+	    :
+	  else
+	    ac_cv_path_install="$as_dir/$ac_prog$ac_exec_ext -c"
+	    break 3
+	  fi
+	fi
+      done
+    done
+    ;;
+esac
+done
+IFS=$as_save_IFS
+
+
+fi
+  if test "${ac_cv_path_install+set}" = set; then
+    INSTALL=$ac_cv_path_install
+  else
+    # As a last resort, use the slow shell script.  Don't cache a
+    # value for INSTALL within a source directory, because that will
+    # break other packages using the cache if that directory is
+    # removed, or if the value is a relative name.
+    INSTALL=$ac_install_sh
+  fi
+fi
+{ echo "$as_me:$LINENO: result: $INSTALL" >&5
+echo "${ECHO_T}$INSTALL" >&6; }
+
+# Use test -z because SunOS4 sh mishandles braces in ${var-val}.
+# It thinks the first close brace ends the variable substitution.
+test -z "$INSTALL_PROGRAM" && INSTALL_PROGRAM='${INSTALL}'
+
+test -z "$INSTALL_SCRIPT" && INSTALL_SCRIPT='${INSTALL}'
+
+test -z "$INSTALL_DATA" && INSTALL_DATA='${INSTALL} -m 644'
+
+{ echo "$as_me:$LINENO: checking whether build environment is sane" >&5
+echo $ECHO_N "checking whether build environment is sane... $ECHO_C" >&6; }
+# Just in case
+sleep 1
+echo timestamp > conftest.file
+# Do `set' in a subshell so we don't clobber the current shell's
+# arguments.  Must try -L first in case configure is actually a
+# symlink; some systems play weird games with the mod time of symlinks
+# (eg FreeBSD returns the mod time of the symlink's containing
+# directory).
+if (
+   set X `ls -Lt $srcdir/configure conftest.file 2> /dev/null`
+   if test "$*" = "X"; then
+      # -L didn't work.
+      set X `ls -t $srcdir/configure conftest.file`
+   fi
+   rm -f conftest.file
+   if test "$*" != "X $srcdir/configure conftest.file" \
+      && test "$*" != "X conftest.file $srcdir/configure"; then
+
+      # If neither matched, then we have a broken ls.  This can happen
+      # if, for instance, CONFIG_SHELL is bash and it inherits a
+      # broken ls alias from the environment.  This has actually
+      # happened.  Such a system could not be considered "sane".
+      { { echo "$as_me:$LINENO: error: ls -t appears to fail.  Make sure there is not a broken
+alias in your environment" >&5
+echo "$as_me: error: ls -t appears to fail.  Make sure there is not a broken
+alias in your environment" >&2;}
+   { (exit 1); exit 1; }; }
+   fi
+
+   test "$2" = conftest.file
+   )
+then
+   # Ok.
+   :
+else
+   { { echo "$as_me:$LINENO: error: newly created file is older than distributed files!
+Check your system clock" >&5
+echo "$as_me: error: newly created file is older than distributed files!
+Check your system clock" >&2;}
+   { (exit 1); exit 1; }; }
+fi
+{ echo "$as_me:$LINENO: result: yes" >&5
+echo "${ECHO_T}yes" >&6; }
+test "$program_prefix" != NONE &&
+  program_transform_name="s&^&$program_prefix&;$program_transform_name"
+# Use a double $ so make ignores it.
+test "$program_suffix" != NONE &&
+  program_transform_name="s&\$&$program_suffix&;$program_transform_name"
+# Double any \ or $.  echo might interpret backslashes.
+# By default was `s,x,x', remove it if useless.
+cat <<\_ACEOF >conftest.sed
+s/[\\$]/&&/g;s/;s,x,x,$//
+_ACEOF
+program_transform_name=`echo $program_transform_name | sed -f conftest.sed`
+rm -f conftest.sed
+
+# expand $ac_aux_dir to an absolute path
+am_aux_dir=`cd $ac_aux_dir && pwd`
+
+test x"${MISSING+set}" = xset || MISSING="\${SHELL} $am_aux_dir/missing"
+# Use eval to expand $SHELL
+if eval "$MISSING --run true"; then
+  am_missing_run="$MISSING --run "
+else
+  am_missing_run=
+  { echo "$as_me:$LINENO: WARNING: \`missing' script is too old or missing" >&5
+echo "$as_me: WARNING: \`missing' script is too old or missing" >&2;}
+fi
+
+if mkdir -p --version . >/dev/null 2>&1 && test ! -d ./--version; then
+  # We used to keeping the `.' as first argument, in order to
+  # allow $(mkdir_p) to be used without argument.  As in
+  #   $(mkdir_p) $(somedir)
+  # where $(somedir) is conditionally defined.  However this is wrong
+  # for two reasons:
+  #  1. if the package is installed by a user who cannot write `.'
+  #     make install will fail,
+  #  2. the above comment should most certainly read
+  #     $(mkdir_p) $(DESTDIR)$(somedir)
+  #     so it does not work when $(somedir) is undefined and
+  #     $(DESTDIR) is not.
+  #  To support the latter case, we have to write
+  #     test -z "$(somedir)" || $(mkdir_p) $(DESTDIR)$(somedir),
+  #  so the `.' trick is pointless.
+  mkdir_p='mkdir -p --'
+else
+  # On NextStep and OpenStep, the `mkdir' command does not
+  # recognize any option.  It will interpret all options as
+  # directories to create, and then abort because `.' already
+  # exists.
+  for d in ./-p ./--version;
+  do
+    test -d $d && rmdir $d
+  done
+  # $(mkinstalldirs) is defined by Automake if mkinstalldirs exists.
+  if test -f "$ac_aux_dir/mkinstalldirs"; then
+    mkdir_p='$(mkinstalldirs)'
+  else
+    mkdir_p='$(install_sh) -d'
+  fi
+fi
+
+for ac_prog in gawk mawk nawk awk
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_prog_AWK+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$AWK"; then
+  ac_cv_prog_AWK="$AWK" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AWK="$ac_prog"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+fi
+fi
+AWK=$ac_cv_prog_AWK
+if test -n "$AWK"; then
+  { echo "$as_me:$LINENO: result: $AWK" >&5
+echo "${ECHO_T}$AWK" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+
+  test -n "$AWK" && break
+done
+
+{ echo "$as_me:$LINENO: checking whether ${MAKE-make} sets \$(MAKE)" >&5
+echo $ECHO_N "checking whether ${MAKE-make} sets \$(MAKE)... $ECHO_C" >&6; }
+set x ${MAKE-make}; ac_make=`echo "$2" | sed 's/+/p/g; s/[^a-zA-Z0-9_]/_/g'`
+if { as_var=ac_cv_prog_make_${ac_make}_set; eval "test \"\${$as_var+set}\" = set"; }; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.make <<\_ACEOF
+SHELL = /bin/sh
+all:
+	@echo '@@@%%%=$(MAKE)=@@@%%%'
+_ACEOF
+# GNU make sometimes prints "make[1]: Entering...", which would confuse us.
+case `${MAKE-make} -f conftest.make 2>/dev/null` in
+  *@@@%%%=?*=@@@%%%*)
+    eval ac_cv_prog_make_${ac_make}_set=yes;;
+  *)
+    eval ac_cv_prog_make_${ac_make}_set=no;;
+esac
+rm -f conftest.make
+fi
+if eval test \$ac_cv_prog_make_${ac_make}_set = yes; then
+  { echo "$as_me:$LINENO: result: yes" >&5
+echo "${ECHO_T}yes" >&6; }
+  SET_MAKE=
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+  SET_MAKE="MAKE=${MAKE-make}"
+fi
+
+rm -rf .tst 2>/dev/null
+mkdir .tst 2>/dev/null
+if test -d .tst; then
+  am__leading_dot=.
+else
+  am__leading_dot=_
+fi
+rmdir .tst 2>/dev/null
+
+# test to see if srcdir already configured
+if test "`cd $srcdir && pwd`" != "`pwd`" &&
+   test -f $srcdir/config.status; then
+  { { echo "$as_me:$LINENO: error: source directory already configured; run \"make distclean\" there first" >&5
+echo "$as_me: error: source directory already configured; run \"make distclean\" there first" >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+# test whether we have cygpath
+if test -z "$CYGPATH_W"; then
+  if (cygpath --version) >/dev/null 2>/dev/null; then
+    CYGPATH_W='cygpath -w'
+  else
+    CYGPATH_W=echo
+  fi
+fi
+
+
+# Define the identity of the package.
+ PACKAGE='exmpp'
+ VERSION='0.9.2'
+
+
+cat >>confdefs.h <<_ACEOF
+#define PACKAGE "$PACKAGE"
+_ACEOF
+
+
+cat >>confdefs.h <<_ACEOF
+#define VERSION "$VERSION"
+_ACEOF
+
+# Some tools Automake needs.
+
+ACLOCAL=${ACLOCAL-"${am_missing_run}aclocal-${am__api_version}"}
+
+
+AUTOCONF=${AUTOCONF-"${am_missing_run}autoconf"}
+
+
+AUTOMAKE=${AUTOMAKE-"${am_missing_run}automake-${am__api_version}"}
+
+
+AUTOHEADER=${AUTOHEADER-"${am_missing_run}autoheader"}
+
+
+MAKEINFO=${MAKEINFO-"${am_missing_run}makeinfo"}
+
+install_sh=${install_sh-"$am_aux_dir/install-sh"}
+
+# Installed binaries are usually stripped using `strip' when the user
+# run `make install-strip'.  However `strip' might not be the right
+# tool to use in cross-compilation environments, therefore Automake
+# will honor the `STRIP' environment variable to overrule this program.
+if test "$cross_compiling" != no; then
+  if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}strip", so it can be a program name with args.
+set dummy ${ac_tool_prefix}strip; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_prog_STRIP+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$STRIP"; then
+  ac_cv_prog_STRIP="$STRIP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_STRIP="${ac_tool_prefix}strip"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+fi
+fi
+STRIP=$ac_cv_prog_STRIP
+if test -n "$STRIP"; then
+  { echo "$as_me:$LINENO: result: $STRIP" >&5
+echo "${ECHO_T}$STRIP" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_STRIP"; then
+  ac_ct_STRIP=$STRIP
+  # Extract the first word of "strip", so it can be a program name with args.
+set dummy strip; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_prog_ac_ct_STRIP+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$ac_ct_STRIP"; then
+  ac_cv_prog_ac_ct_STRIP="$ac_ct_STRIP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_STRIP="strip"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_STRIP=$ac_cv_prog_ac_ct_STRIP
+if test -n "$ac_ct_STRIP"; then
+  { echo "$as_me:$LINENO: result: $ac_ct_STRIP" >&5
+echo "${ECHO_T}$ac_ct_STRIP" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+  if test "x$ac_ct_STRIP" = x; then
+    STRIP=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ echo "$as_me:$LINENO: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&5
+echo "$as_me: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&2;}
+ac_tool_warned=yes ;;
+esac
+    STRIP=$ac_ct_STRIP
+  fi
+else
+  STRIP="$ac_cv_prog_STRIP"
+fi
+
+fi
+INSTALL_STRIP_PROGRAM="\${SHELL} \$(install_sh) -c -s"
+
+# We need awk for the "check" target.  The system "awk" is bad on
+# some platforms.
+# Always define AMTAR for backward compatibility.
+
+AMTAR=${AMTAR-"${am_missing_run}tar"}
+
+am__tar='${AMTAR} chof - "$$tardir"'; am__untar='${AMTAR} xf -'
+
+
+
+
+
+
+
+
+
+
+append_to_EMKOPTS () {
+	if test -z "$EMKOPTS"; then
+		EMKOPTS="$1"
+	else
+		EMKOPTS="${EMKOPTS% }, $1"
+	fi
+}
+
+expand_var () {
+	local v=`eval echo '$'$1`
+	while test "`echo $v | grep [$] > /dev/null && echo nok`"; do
+		v=`eval echo $v`
+	done
+	echo $v
+}
+
+
+
+is_release=0
+if test "x${EXMPP_RELEASE_DATE}" != "x"; then
+	is_release=1
+fi
+
+if test $is_release -eq 0; then
+	EXMPP_SVNREV=`svnversion $srcdir | sed 's/^[^:]*://'`
+	which svnversion > /dev/null; \
+	if test $? -ne 0 -o "x$EXMPP_SVNREV" = "xexported"; then
+		EXMPP_SVNREV=`cat $srcdir/SVNREV`
+	else
+		echo $EXMPP_SVNREV > $srcdir/SVNREV
+	fi
+	if test $EXMPP_SVNREV; then
+		EXMPP_DISTSUFFIX="-r$EXMPP_SVNREV"
+	fi
+fi
+
+
+DEPDIR="${am__leading_dot}deps"
+
+ac_config_commands="$ac_config_commands depfiles"
+
+
+am_make=${MAKE-make}
+cat > confinc << 'END'
+am__doit:
+	@echo done
+.PHONY: am__doit
+END
+# If we don't find an include directive, just comment out the code.
+{ echo "$as_me:$LINENO: checking for style of include used by $am_make" >&5
+echo $ECHO_N "checking for style of include used by $am_make... $ECHO_C" >&6; }
+am__include="#"
+am__quote=
+_am_result=none
+# First try GNU make style include.
+echo "include confinc" > confmf
+# We grep out `Entering directory' and `Leaving directory'
+# messages which can occur if `w' ends up in MAKEFLAGS.
+# In particular we don't look at `^make:' because GNU make might
+# be invoked under some other name (usually "gmake"), in which
+# case it prints its new name instead of `make'.
+if test "`$am_make -s -f confmf 2> /dev/null | grep -v 'ing directory'`" = "done"; then
+   am__include=include
+   am__quote=
+   _am_result=GNU
+fi
+# Now try BSD make style include.
+if test "$am__include" = "#"; then
+   echo '.include "confinc"' > confmf
+   if test "`$am_make -s -f confmf 2> /dev/null`" = "done"; then
+      am__include=.include
+      am__quote="\""
+      _am_result=BSD
+   fi
+fi
+
+
+{ echo "$as_me:$LINENO: result: $_am_result" >&5
+echo "${ECHO_T}$_am_result" >&6; }
+rm -f confinc confmf
+
+# Check whether --enable-dependency-tracking was given.
+if test "${enable_dependency_tracking+set}" = set; then
+  enableval=$enable_dependency_tracking;
+fi
+
+if test "x$enable_dependency_tracking" != xno; then
+  am_depcomp="$ac_aux_dir/depcomp"
+  AMDEPBACKSLASH='\'
+fi
+
+
+if test "x$enable_dependency_tracking" != xno; then
+  AMDEP_TRUE=
+  AMDEP_FALSE='#'
+else
+  AMDEP_TRUE='#'
+  AMDEP_FALSE=
+fi
+
+
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}gcc", so it can be a program name with args.
+set dummy ${ac_tool_prefix}gcc; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC="${ac_tool_prefix}gcc"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { echo "$as_me:$LINENO: result: $CC" >&5
+echo "${ECHO_T}$CC" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_CC"; then
+  ac_ct_CC=$CC
+  # Extract the first word of "gcc", so it can be a program name with args.
+set dummy gcc; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_prog_ac_ct_CC+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$ac_ct_CC"; then
+  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_CC="gcc"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_CC=$ac_cv_prog_ac_ct_CC
+if test -n "$ac_ct_CC"; then
+  { echo "$as_me:$LINENO: result: $ac_ct_CC" >&5
+echo "${ECHO_T}$ac_ct_CC" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+  if test "x$ac_ct_CC" = x; then
+    CC=""
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ echo "$as_me:$LINENO: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&5
+echo "$as_me: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&2;}
+ac_tool_warned=yes ;;
+esac
+    CC=$ac_ct_CC
+  fi
+else
+  CC="$ac_cv_prog_CC"
+fi
+
+if test -z "$CC"; then
+          if test -n "$ac_tool_prefix"; then
+    # Extract the first word of "${ac_tool_prefix}cc", so it can be a program name with args.
+set dummy ${ac_tool_prefix}cc; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC="${ac_tool_prefix}cc"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { echo "$as_me:$LINENO: result: $CC" >&5
+echo "${ECHO_T}$CC" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+
+  fi
+fi
+if test -z "$CC"; then
+  # Extract the first word of "cc", so it can be a program name with args.
+set dummy cc; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+  ac_prog_rejected=no
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    if test "$as_dir/$ac_word$ac_exec_ext" = "/usr/ucb/cc"; then
+       ac_prog_rejected=yes
+       continue
+     fi
+    ac_cv_prog_CC="cc"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+if test $ac_prog_rejected = yes; then
+  # We found a bogon in the path, so make sure we never use it.
+  set dummy $ac_cv_prog_CC
+  shift
+  if test $# != 0; then
+    # We chose a different compiler from the bogus one.
+    # However, it has the same basename, so the bogon will be chosen
+    # first if we set CC to just the basename; use the full file name.
+    shift
+    ac_cv_prog_CC="$as_dir/$ac_word${1+' '}$@"
+  fi
+fi
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { echo "$as_me:$LINENO: result: $CC" >&5
+echo "${ECHO_T}$CC" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+
+fi
+if test -z "$CC"; then
+  if test -n "$ac_tool_prefix"; then
+  for ac_prog in cl.exe
+  do
+    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
+set dummy $ac_tool_prefix$ac_prog; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC="$ac_tool_prefix$ac_prog"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { echo "$as_me:$LINENO: result: $CC" >&5
+echo "${ECHO_T}$CC" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+
+    test -n "$CC" && break
+  done
+fi
+if test -z "$CC"; then
+  ac_ct_CC=$CC
+  for ac_prog in cl.exe
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_prog_ac_ct_CC+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$ac_ct_CC"; then
+  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_CC="$ac_prog"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_CC=$ac_cv_prog_ac_ct_CC
+if test -n "$ac_ct_CC"; then
+  { echo "$as_me:$LINENO: result: $ac_ct_CC" >&5
+echo "${ECHO_T}$ac_ct_CC" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+
+  test -n "$ac_ct_CC" && break
+done
+
+  if test "x$ac_ct_CC" = x; then
+    CC=""
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ echo "$as_me:$LINENO: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&5
+echo "$as_me: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&2;}
+ac_tool_warned=yes ;;
+esac
+    CC=$ac_ct_CC
+  fi
+fi
+
+fi
+
+
+test -z "$CC" && { { echo "$as_me:$LINENO: error: no acceptable C compiler found in \$PATH
+See \`config.log' for more details." >&5
+echo "$as_me: error: no acceptable C compiler found in \$PATH
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+
+# Provide some information about the compiler.
+echo "$as_me:$LINENO: checking for C compiler version" >&5
+ac_compiler=`set X $ac_compile; echo $2`
+{ (ac_try="$ac_compiler --version >&5"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compiler --version >&5") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }
+{ (ac_try="$ac_compiler -v >&5"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compiler -v >&5") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }
+{ (ac_try="$ac_compiler -V >&5"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compiler -V >&5") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }
+
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+ac_clean_files_save=$ac_clean_files
+ac_clean_files="$ac_clean_files a.out a.exe b.out"
+# Try to create an executable without -o first, disregard a.out.
+# It will help us diagnose broken compilers, and finding out an intuition
+# of exeext.
+{ echo "$as_me:$LINENO: checking for C compiler default output file name" >&5
+echo $ECHO_N "checking for C compiler default output file name... $ECHO_C" >&6; }
+ac_link_default=`echo "$ac_link" | sed 's/ -o *conftest[^ ]*//'`
+#
+# List of possible output files, starting from the most likely.
+# The algorithm is not robust to junk in `.', hence go to wildcards (a.*)
+# only as a last resort.  b.out is created by i960 compilers.
+ac_files='a_out.exe a.exe conftest.exe a.out conftest a.* conftest.* b.out'
+#
+# The IRIX 6 linker writes into existing files which may not be
+# executable, retaining their permissions.  Remove them first so a
+# subsequent execution test works.
+ac_rmfiles=
+for ac_file in $ac_files
+do
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.o | *.obj ) ;;
+    * ) ac_rmfiles="$ac_rmfiles $ac_file";;
+  esac
+done
+rm -f $ac_rmfiles
+
+if { (ac_try="$ac_link_default"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link_default") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; then
+  # Autoconf-2.13 could set the ac_cv_exeext variable to `no'.
+# So ignore a value of `no', otherwise this would lead to `EXEEXT = no'
+# in a Makefile.  We should not override ac_cv_exeext if it was cached,
+# so that the user can short-circuit this test for compilers unknown to
+# Autoconf.
+for ac_file in $ac_files ''
+do
+  test -f "$ac_file" || continue
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.o | *.obj )
+	;;
+    [ab].out )
+	# We found the default executable, but exeext='' is most
+	# certainly right.
+	break;;
+    *.* )
+        if test "${ac_cv_exeext+set}" = set && test "$ac_cv_exeext" != no;
+	then :; else
+	   ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
+	fi
+	# We set ac_cv_exeext here because the later test for it is not
+	# safe: cross compilers may not add the suffix if given an `-o'
+	# argument, so we may need to know it at that point already.
+	# Even if this section looks crufty: it has the advantage of
+	# actually working.
+	break;;
+    * )
+	break;;
+  esac
+done
+test "$ac_cv_exeext" = no && ac_cv_exeext=
+
+else
+  ac_file=''
+fi
+
+{ echo "$as_me:$LINENO: result: $ac_file" >&5
+echo "${ECHO_T}$ac_file" >&6; }
+if test -z "$ac_file"; then
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+{ { echo "$as_me:$LINENO: error: C compiler cannot create executables
+See \`config.log' for more details." >&5
+echo "$as_me: error: C compiler cannot create executables
+See \`config.log' for more details." >&2;}
+   { (exit 77); exit 77; }; }
+fi
+
+ac_exeext=$ac_cv_exeext
+
+# Check that the compiler produces executables we can run.  If not, either
+# the compiler is broken, or we cross compile.
+{ echo "$as_me:$LINENO: checking whether the C compiler works" >&5
+echo $ECHO_N "checking whether the C compiler works... $ECHO_C" >&6; }
+# FIXME: These cross compiler hacks should be removed for Autoconf 3.0
+# If not cross compiling, check that we can run a simple program.
+if test "$cross_compiling" != yes; then
+  if { ac_try='./$ac_file'
+  { (case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_try") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+    cross_compiling=no
+  else
+    if test "$cross_compiling" = maybe; then
+	cross_compiling=yes
+    else
+	{ { echo "$as_me:$LINENO: error: cannot run C compiled programs.
+If you meant to cross compile, use \`--host'.
+See \`config.log' for more details." >&5
+echo "$as_me: error: cannot run C compiled programs.
+If you meant to cross compile, use \`--host'.
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+    fi
+  fi
+fi
+{ echo "$as_me:$LINENO: result: yes" >&5
+echo "${ECHO_T}yes" >&6; }
+
+rm -f a.out a.exe conftest$ac_cv_exeext b.out
+ac_clean_files=$ac_clean_files_save
+# Check that the compiler produces executables we can run.  If not, either
+# the compiler is broken, or we cross compile.
+{ echo "$as_me:$LINENO: checking whether we are cross compiling" >&5
+echo $ECHO_N "checking whether we are cross compiling... $ECHO_C" >&6; }
+{ echo "$as_me:$LINENO: result: $cross_compiling" >&5
+echo "${ECHO_T}$cross_compiling" >&6; }
+
+{ echo "$as_me:$LINENO: checking for suffix of executables" >&5
+echo $ECHO_N "checking for suffix of executables... $ECHO_C" >&6; }
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; then
+  # If both `conftest.exe' and `conftest' are `present' (well, observable)
+# catch `conftest.exe'.  For instance with Cygwin, `ls conftest' will
+# work properly (i.e., refer to `conftest.exe'), while it won't with
+# `rm'.
+for ac_file in conftest.exe conftest conftest.*; do
+  test -f "$ac_file" || continue
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.o | *.obj ) ;;
+    *.* ) ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
+	  break;;
+    * ) break;;
+  esac
+done
+else
+  { { echo "$as_me:$LINENO: error: cannot compute suffix of executables: cannot compile and link
+See \`config.log' for more details." >&5
+echo "$as_me: error: cannot compute suffix of executables: cannot compile and link
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+rm -f conftest$ac_cv_exeext
+{ echo "$as_me:$LINENO: result: $ac_cv_exeext" >&5
+echo "${ECHO_T}$ac_cv_exeext" >&6; }
+
+rm -f conftest.$ac_ext
+EXEEXT=$ac_cv_exeext
+ac_exeext=$EXEEXT
+{ echo "$as_me:$LINENO: checking for suffix of object files" >&5
+echo $ECHO_N "checking for suffix of object files... $ECHO_C" >&6; }
+if test "${ac_cv_objext+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.o conftest.obj
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; then
+  for ac_file in conftest.o conftest.obj conftest.*; do
+  test -f "$ac_file" || continue;
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf ) ;;
+    *) ac_cv_objext=`expr "$ac_file" : '.*\.\(.*\)'`
+       break;;
+  esac
+done
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+{ { echo "$as_me:$LINENO: error: cannot compute suffix of object files: cannot compile
+See \`config.log' for more details." >&5
+echo "$as_me: error: cannot compute suffix of object files: cannot compile
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+rm -f conftest.$ac_cv_objext conftest.$ac_ext
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_objext" >&5
+echo "${ECHO_T}$ac_cv_objext" >&6; }
+OBJEXT=$ac_cv_objext
+ac_objext=$OBJEXT
+{ echo "$as_me:$LINENO: checking whether we are using the GNU C compiler" >&5
+echo $ECHO_N "checking whether we are using the GNU C compiler... $ECHO_C" >&6; }
+if test "${ac_cv_c_compiler_gnu+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+int
+main ()
+{
+#ifndef __GNUC__
+       choke me
+#endif
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
+  ac_compiler_gnu=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_compiler_gnu=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+ac_cv_c_compiler_gnu=$ac_compiler_gnu
+
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_c_compiler_gnu" >&5
+echo "${ECHO_T}$ac_cv_c_compiler_gnu" >&6; }
+GCC=`test $ac_compiler_gnu = yes && echo yes`
+ac_test_CFLAGS=${CFLAGS+set}
+ac_save_CFLAGS=$CFLAGS
+{ echo "$as_me:$LINENO: checking whether $CC accepts -g" >&5
+echo $ECHO_N "checking whether $CC accepts -g... $ECHO_C" >&6; }
+if test "${ac_cv_prog_cc_g+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_save_c_werror_flag=$ac_c_werror_flag
+   ac_c_werror_flag=yes
+   ac_cv_prog_cc_g=no
+   CFLAGS="-g"
+   cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
+  ac_cv_prog_cc_g=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	CFLAGS=""
+      cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
+  :
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_c_werror_flag=$ac_save_c_werror_flag
+	 CFLAGS="-g"
+	 cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
+  ac_cv_prog_cc_g=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+   ac_c_werror_flag=$ac_save_c_werror_flag
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_prog_cc_g" >&5
+echo "${ECHO_T}$ac_cv_prog_cc_g" >&6; }
+if test "$ac_test_CFLAGS" = set; then
+  CFLAGS=$ac_save_CFLAGS
+elif test $ac_cv_prog_cc_g = yes; then
+  if test "$GCC" = yes; then
+    CFLAGS="-g -O2"
+  else
+    CFLAGS="-g"
+  fi
+else
+  if test "$GCC" = yes; then
+    CFLAGS="-O2"
+  else
+    CFLAGS=
+  fi
+fi
+{ echo "$as_me:$LINENO: checking for $CC option to accept ISO C89" >&5
+echo $ECHO_N "checking for $CC option to accept ISO C89... $ECHO_C" >&6; }
+if test "${ac_cv_prog_cc_c89+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_cv_prog_cc_c89=no
+ac_save_CC=$CC
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <stdarg.h>
+#include <stdio.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+/* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */
+struct buf { int x; };
+FILE * (*rcsopen) (struct buf *, struct stat *, int);
+static char *e (p, i)
+     char **p;
+     int i;
+{
+  return p[i];
+}
+static char *f (char * (*g) (char **, int), char **p, ...)
+{
+  char *s;
+  va_list v;
+  va_start (v,p);
+  s = g (p, va_arg (v,int));
+  va_end (v);
+  return s;
+}
+
+/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
+   function prototypes and stuff, but not '\xHH' hex character constants.
+   These don't provoke an error unfortunately, instead are silently treated
+   as 'x'.  The following induces an error, until -std is added to get
+   proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
+   array size at least.  It's necessary to write '\x00'==0 to get something
+   that's true only with -std.  */
+int osf4_cc_array ['\x00' == 0 ? 1 : -1];
+
+/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
+   inside strings and character constants.  */
+#define FOO(x) 'x'
+int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
+
+int test (int i, double x);
+struct s1 {int (*f) (int a);};
+struct s2 {int (*f) (double a);};
+int pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);
+int argc;
+char **argv;
+int
+main ()
+{
+return f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];
+  ;
+  return 0;
+}
+_ACEOF
+for ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std \
+	-Ae "-Aa -D_HPUX_SOURCE" "-Xc -D__EXTENSIONS__"
+do
+  CC="$ac_save_CC $ac_arg"
+  rm -f conftest.$ac_objext
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
+  ac_cv_prog_cc_c89=$ac_arg
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+
+fi
+
+rm -f core conftest.err conftest.$ac_objext
+  test "x$ac_cv_prog_cc_c89" != "xno" && break
+done
+rm -f conftest.$ac_ext
+CC=$ac_save_CC
+
+fi
+# AC_CACHE_VAL
+case "x$ac_cv_prog_cc_c89" in
+  x)
+    { echo "$as_me:$LINENO: result: none needed" >&5
+echo "${ECHO_T}none needed" >&6; } ;;
+  xno)
+    { echo "$as_me:$LINENO: result: unsupported" >&5
+echo "${ECHO_T}unsupported" >&6; } ;;
+  *)
+    CC="$CC $ac_cv_prog_cc_c89"
+    { echo "$as_me:$LINENO: result: $ac_cv_prog_cc_c89" >&5
+echo "${ECHO_T}$ac_cv_prog_cc_c89" >&6; } ;;
+esac
+
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+depcc="$CC"   am_compiler_list=
+
+{ echo "$as_me:$LINENO: checking dependency style of $depcc" >&5
+echo $ECHO_N "checking dependency style of $depcc... $ECHO_C" >&6; }
+if test "${am_cv_CC_dependencies_compiler_type+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
+  # We make a subdir and do the tests there.  Otherwise we can end up
+  # making bogus files that we don't know about and never remove.  For
+  # instance it was reported that on HP-UX the gcc test will end up
+  # making a dummy file named `D' -- because `-MD' means `put the output
+  # in D'.
+  mkdir conftest.dir
+  # Copy depcomp to subdir because otherwise we won't find it if we're
+  # using a relative directory.
+  cp "$am_depcomp" conftest.dir
+  cd conftest.dir
+  # We will build objects and dependencies in a subdirectory because
+  # it helps to detect inapplicable dependency modes.  For instance
+  # both Tru64's cc and ICC support -MD to output dependencies as a
+  # side effect of compilation, but ICC will put the dependencies in
+  # the current directory while Tru64 will put them in the object
+  # directory.
+  mkdir sub
+
+  am_cv_CC_dependencies_compiler_type=none
+  if test "$am_compiler_list" = ""; then
+     am_compiler_list=`sed -n 's/^#*\([a-zA-Z0-9]*\))$/\1/p' < ./depcomp`
+  fi
+  for depmode in $am_compiler_list; do
+    # Setup a source with many dependencies, because some compilers
+    # like to wrap large dependency lists on column 80 (with \), and
+    # we should not choose a depcomp mode which is confused by this.
+    #
+    # We need to recreate these files for each test, as the compiler may
+    # overwrite some of them when testing with obscure command lines.
+    # This happens at least with the AIX C compiler.
+    : > sub/conftest.c
+    for i in 1 2 3 4 5 6; do
+      echo '#include "conftst'$i'.h"' >> sub/conftest.c
+      # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with
+      # Solaris 8's {/usr,}/bin/sh.
+      touch sub/conftst$i.h
+    done
+    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf
+
+    case $depmode in
+    nosideeffect)
+      # after this tag, mechanisms are not by side-effect, so they'll
+      # only be used when explicitly requested
+      if test "x$enable_dependency_tracking" = xyes; then
+	continue
+      else
+	break
+      fi
+      ;;
+    none) break ;;
+    esac
+    # We check with `-c' and `-o' for the sake of the "dashmstdout"
+    # mode.  It turns out that the SunPro C++ compiler does not properly
+    # handle `-M -o', and we need to detect this.
+    if depmode=$depmode \
+       source=sub/conftest.c object=sub/conftest.${OBJEXT-o} \
+       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
+       $SHELL ./depcomp $depcc -c -o sub/conftest.${OBJEXT-o} sub/conftest.c \
+         >/dev/null 2>conftest.err &&
+       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
+       grep sub/conftest.${OBJEXT-o} sub/conftest.Po > /dev/null 2>&1 &&
+       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
+      # icc doesn't choke on unknown options, it will just issue warnings
+      # or remarks (even with -Werror).  So we grep stderr for any message
+      # that says an option was ignored or not supported.
+      # When given -MP, icc 7.0 and 7.1 complain thusly:
+      #   icc: Command line warning: ignoring option '-M'; no argument required
+      # The diagnosis changed in icc 8.0:
+      #   icc: Command line remark: option '-MP' not supported
+      if (grep 'ignoring option' conftest.err ||
+          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
+        am_cv_CC_dependencies_compiler_type=$depmode
+        break
+      fi
+    fi
+  done
+
+  cd ..
+  rm -rf conftest.dir
+else
+  am_cv_CC_dependencies_compiler_type=none
+fi
+
+fi
+{ echo "$as_me:$LINENO: result: $am_cv_CC_dependencies_compiler_type" >&5
+echo "${ECHO_T}$am_cv_CC_dependencies_compiler_type" >&6; }
+CCDEPMODE=depmode=$am_cv_CC_dependencies_compiler_type
+
+
+
+if
+  test "x$enable_dependency_tracking" != xno \
+  && test "$am_cv_CC_dependencies_compiler_type" = gcc3; then
+  am__fastdepCC_TRUE=
+  am__fastdepCC_FALSE='#'
+else
+  am__fastdepCC_TRUE='#'
+  am__fastdepCC_FALSE=
+fi
+
+
+   case $ac_cv_prog_cc_stdc in
+  no) ac_cv_prog_cc_c99=no; ac_cv_prog_cc_c89=no ;;
+  *) { echo "$as_me:$LINENO: checking for $CC option to accept ISO C99" >&5
+echo $ECHO_N "checking for $CC option to accept ISO C99... $ECHO_C" >&6; }
+if test "${ac_cv_prog_cc_c99+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_cv_prog_cc_c99=no
+ac_save_CC=$CC
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <stdarg.h>
+#include <stdbool.h>
+#include <stdlib.h>
+#include <wchar.h>
+#include <stdio.h>
+
+// Check varargs macros.  These examples are taken from C99 6.10.3.5.
+#define debug(...) fprintf (stderr, __VA_ARGS__)
+#define showlist(...) puts (#__VA_ARGS__)
+#define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
+static void
+test_varargs_macros (void)
+{
+  int x = 1234;
+  int y = 5678;
+  debug ("Flag");
+  debug ("X = %d\n", x);
+  showlist (The first, second, and third items.);
+  report (x>y, "x is %d but y is %d", x, y);
+}
+
+// Check long long types.
+#define BIG64 18446744073709551615ull
+#define BIG32 4294967295ul
+#define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
+#if !BIG_OK
+  your preprocessor is broken;
+#endif
+#if BIG_OK
+#else
+  your preprocessor is broken;
+#endif
+static long long int bignum = -9223372036854775807LL;
+static unsigned long long int ubignum = BIG64;
+
+struct incomplete_array
+{
+  int datasize;
+  double data[];
+};
+
+struct named_init {
+  int number;
+  const wchar_t *name;
+  double average;
+};
+
+typedef const char *ccp;
+
+static inline int
+test_restrict (ccp restrict text)
+{
+  // See if C++-style comments work.
+  // Iterate through items via the restricted pointer.
+  // Also check for declarations in for loops.
+  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
+    continue;
+  return 0;
+}
+
+// Check varargs and va_copy.
+static void
+test_varargs (const char *format, ...)
+{
+  va_list args;
+  va_start (args, format);
+  va_list args_copy;
+  va_copy (args_copy, args);
+
+  const char *str;
+  int number;
+  float fnumber;
+
+  while (*format)
+    {
+      switch (*format++)
+	{
+	case 's': // string
+	  str = va_arg (args_copy, const char *);
+	  break;
+	case 'd': // int
+	  number = va_arg (args_copy, int);
+	  break;
+	case 'f': // float
+	  fnumber = va_arg (args_copy, double);
+	  break;
+	default:
+	  break;
+	}
+    }
+  va_end (args_copy);
+  va_end (args);
+}
+
+int
+main ()
+{
+
+  // Check bool.
+  _Bool success = false;
+
+  // Check restrict.
+  if (test_restrict ("String literal") == 0)
+    success = true;
+  char *restrict newvar = "Another string";
+
+  // Check varargs.
+  test_varargs ("s, d' f .", "string", 65, 34.234);
+  test_varargs_macros ();
+
+  // Check flexible array members.
+  struct incomplete_array *ia =
+    malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
+  ia->datasize = 10;
+  for (int i = 0; i < ia->datasize; ++i)
+    ia->data[i] = i * 1.234;
+
+  // Check named initializers.
+  struct named_init ni = {
+    .number = 34,
+    .name = L"Test wide string",
+    .average = 543.34343,
+  };
+
+  ni.number = 58;
+
+  int dynamic_array[ni.number];
+  dynamic_array[ni.number - 1] = 543;
+
+  // work around unused variable warnings
+  return (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
+	  || dynamic_array[ni.number - 1] != 543);
+
+  ;
+  return 0;
+}
+_ACEOF
+for ac_arg in '' -std=gnu99 -c99 -qlanglvl=extc99
+do
+  CC="$ac_save_CC $ac_arg"
+  rm -f conftest.$ac_objext
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
+  ac_cv_prog_cc_c99=$ac_arg
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+
+fi
+
+rm -f core conftest.err conftest.$ac_objext
+  test "x$ac_cv_prog_cc_c99" != "xno" && break
+done
+rm -f conftest.$ac_ext
+CC=$ac_save_CC
+
+fi
+# AC_CACHE_VAL
+case "x$ac_cv_prog_cc_c99" in
+  x)
+    { echo "$as_me:$LINENO: result: none needed" >&5
+echo "${ECHO_T}none needed" >&6; } ;;
+  xno)
+    { echo "$as_me:$LINENO: result: unsupported" >&5
+echo "${ECHO_T}unsupported" >&6; } ;;
+  *)
+    CC="$CC $ac_cv_prog_cc_c99"
+    { echo "$as_me:$LINENO: result: $ac_cv_prog_cc_c99" >&5
+echo "${ECHO_T}$ac_cv_prog_cc_c99" >&6; } ;;
+esac
+if test "x$ac_cv_prog_cc_c99" != xno; then
+  ac_cv_prog_cc_stdc=$ac_cv_prog_cc_c99
+else
+  { echo "$as_me:$LINENO: checking for $CC option to accept ISO C89" >&5
+echo $ECHO_N "checking for $CC option to accept ISO C89... $ECHO_C" >&6; }
+if test "${ac_cv_prog_cc_c89+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_cv_prog_cc_c89=no
+ac_save_CC=$CC
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <stdarg.h>
+#include <stdio.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+/* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */
+struct buf { int x; };
+FILE * (*rcsopen) (struct buf *, struct stat *, int);
+static char *e (p, i)
+     char **p;
+     int i;
+{
+  return p[i];
+}
+static char *f (char * (*g) (char **, int), char **p, ...)
+{
+  char *s;
+  va_list v;
+  va_start (v,p);
+  s = g (p, va_arg (v,int));
+  va_end (v);
+  return s;
+}
+
+/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
+   function prototypes and stuff, but not '\xHH' hex character constants.
+   These don't provoke an error unfortunately, instead are silently treated
+   as 'x'.  The following induces an error, until -std is added to get
+   proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
+   array size at least.  It's necessary to write '\x00'==0 to get something
+   that's true only with -std.  */
+int osf4_cc_array ['\x00' == 0 ? 1 : -1];
+
+/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
+   inside strings and character constants.  */
+#define FOO(x) 'x'
+int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
+
+int test (int i, double x);
+struct s1 {int (*f) (int a);};
+struct s2 {int (*f) (double a);};
+int pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);
+int argc;
+char **argv;
+int
+main ()
+{
+return f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];
+  ;
+  return 0;
+}
+_ACEOF
+for ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std \
+	-Ae "-Aa -D_HPUX_SOURCE" "-Xc -D__EXTENSIONS__"
+do
+  CC="$ac_save_CC $ac_arg"
+  rm -f conftest.$ac_objext
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
+  ac_cv_prog_cc_c89=$ac_arg
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+
+fi
+
+rm -f core conftest.err conftest.$ac_objext
+  test "x$ac_cv_prog_cc_c89" != "xno" && break
+done
+rm -f conftest.$ac_ext
+CC=$ac_save_CC
+
+fi
+# AC_CACHE_VAL
+case "x$ac_cv_prog_cc_c89" in
+  x)
+    { echo "$as_me:$LINENO: result: none needed" >&5
+echo "${ECHO_T}none needed" >&6; } ;;
+  xno)
+    { echo "$as_me:$LINENO: result: unsupported" >&5
+echo "${ECHO_T}unsupported" >&6; } ;;
+  *)
+    CC="$CC $ac_cv_prog_cc_c89"
+    { echo "$as_me:$LINENO: result: $ac_cv_prog_cc_c89" >&5
+echo "${ECHO_T}$ac_cv_prog_cc_c89" >&6; } ;;
+esac
+if test "x$ac_cv_prog_cc_c89" != xno; then
+  ac_cv_prog_cc_stdc=$ac_cv_prog_cc_c89
+else
+  ac_cv_prog_cc_stdc=no
+fi
+
+
+fi
+
+ ;;
+esac
+  { echo "$as_me:$LINENO: checking for $CC option to accept ISO Standard C" >&5
+echo $ECHO_N "checking for $CC option to accept ISO Standard C... $ECHO_C" >&6; }
+  if test "${ac_cv_prog_cc_stdc+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+fi
+
+  case $ac_cv_prog_cc_stdc in
+  no) { echo "$as_me:$LINENO: result: unsupported" >&5
+echo "${ECHO_T}unsupported" >&6; } ;;
+  '') { echo "$as_me:$LINENO: result: none needed" >&5
+echo "${ECHO_T}none needed" >&6; } ;;
+  *) { echo "$as_me:$LINENO: result: $ac_cv_prog_cc_stdc" >&5
+echo "${ECHO_T}$ac_cv_prog_cc_stdc" >&6; } ;;
+esac
+
+
+
+{ echo "$as_me:$LINENO: checking for a sed that does not truncate output" >&5
+echo $ECHO_N "checking for a sed that does not truncate output... $ECHO_C" >&6; }
+if test "${lt_cv_path_SED+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  # Loop through the user's path and test for sed and gsed.
+# Then use that list of sed's as ones to test for truncation.
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for lt_ac_prog in sed gsed; do
+    for ac_exec_ext in '' $ac_executable_extensions; do
+      if $as_executable_p "$as_dir/$lt_ac_prog$ac_exec_ext"; then
+        lt_ac_sed_list="$lt_ac_sed_list $as_dir/$lt_ac_prog$ac_exec_ext"
+      fi
+    done
+  done
+done
+lt_ac_max=0
+lt_ac_count=0
+# Add /usr/xpg4/bin/sed as it is typically found on Solaris
+# along with /bin/sed that truncates output.
+for lt_ac_sed in $lt_ac_sed_list /usr/xpg4/bin/sed; do
+  test ! -f $lt_ac_sed && continue
+  cat /dev/null > conftest.in
+  lt_ac_count=0
+  echo $ECHO_N "0123456789$ECHO_C" >conftest.in
+  # Check for GNU sed and select it if it is found.
+  if "$lt_ac_sed" --version 2>&1 < /dev/null | grep 'GNU' > /dev/null; then
+    lt_cv_path_SED=$lt_ac_sed
+    break
+  fi
+  while true; do
+    cat conftest.in conftest.in >conftest.tmp
+    mv conftest.tmp conftest.in
+    cp conftest.in conftest.nl
+    echo >>conftest.nl
+    $lt_ac_sed -e 's/a$//' < conftest.nl >conftest.out || break
+    cmp -s conftest.out conftest.nl || break
+    # 10000 chars as input seems more than enough
+    test $lt_ac_count -gt 10 && break
+    lt_ac_count=`expr $lt_ac_count + 1`
+    if test $lt_ac_count -gt $lt_ac_max; then
+      lt_ac_max=$lt_ac_count
+      lt_cv_path_SED=$lt_ac_sed
+    fi
+  done
+done
+
+fi
+
+SED=$lt_cv_path_SED
+{ echo "$as_me:$LINENO: result: $SED" >&5
+echo "${ECHO_T}$SED" >&6; }
+
+{ echo "$as_me:$LINENO: checking for grep that handles long lines and -e" >&5
+echo $ECHO_N "checking for grep that handles long lines and -e... $ECHO_C" >&6; }
+if test "${ac_cv_path_GREP+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  # Extract the first word of "grep ggrep" to use in msg output
+if test -z "$GREP"; then
+set dummy grep ggrep; ac_prog_name=$2
+if test "${ac_cv_path_GREP+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_path_GREP_found=false
+# Loop through the user's path and test for each of PROGNAME-LIST
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_prog in grep ggrep; do
+  for ac_exec_ext in '' $ac_executable_extensions; do
+    ac_path_GREP="$as_dir/$ac_prog$ac_exec_ext"
+    { test -f "$ac_path_GREP" && $as_test_x "$ac_path_GREP"; } || continue
+    # Check for GNU ac_path_GREP and select it if it is found.
+  # Check for GNU $ac_path_GREP
+case `"$ac_path_GREP" --version 2>&1` in
+*GNU*)
+  ac_cv_path_GREP="$ac_path_GREP" ac_path_GREP_found=:;;
+*)
+  ac_count=0
+  echo $ECHO_N "0123456789$ECHO_C" >"conftest.in"
+  while :
+  do
+    cat "conftest.in" "conftest.in" >"conftest.tmp"
+    mv "conftest.tmp" "conftest.in"
+    cp "conftest.in" "conftest.nl"
+    echo 'GREP' >> "conftest.nl"
+    "$ac_path_GREP" -e 'GREP$' -e '-(cannot match)-' < "conftest.nl" >"conftest.out" 2>/dev/null || break
+    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
+    ac_count=`expr $ac_count + 1`
+    if test $ac_count -gt ${ac_path_GREP_max-0}; then
+      # Best one so far, save it but keep looking for a better one
+      ac_cv_path_GREP="$ac_path_GREP"
+      ac_path_GREP_max=$ac_count
+    fi
+    # 10*(2^10) chars as input seems more than enough
+    test $ac_count -gt 10 && break
+  done
+  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
+esac
+
+
+    $ac_path_GREP_found && break 3
+  done
+done
+
+done
+IFS=$as_save_IFS
+
+
+fi
+
+GREP="$ac_cv_path_GREP"
+if test -z "$GREP"; then
+  { { echo "$as_me:$LINENO: error: no acceptable $ac_prog_name could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" >&5
+echo "$as_me: error: no acceptable $ac_prog_name could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+else
+  ac_cv_path_GREP=$GREP
+fi
+
+
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_path_GREP" >&5
+echo "${ECHO_T}$ac_cv_path_GREP" >&6; }
+ GREP="$ac_cv_path_GREP"
+
+
+{ echo "$as_me:$LINENO: checking for egrep" >&5
+echo $ECHO_N "checking for egrep... $ECHO_C" >&6; }
+if test "${ac_cv_path_EGREP+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if echo a | $GREP -E '(a|b)' >/dev/null 2>&1
+   then ac_cv_path_EGREP="$GREP -E"
+   else
+     # Extract the first word of "egrep" to use in msg output
+if test -z "$EGREP"; then
+set dummy egrep; ac_prog_name=$2
+if test "${ac_cv_path_EGREP+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_path_EGREP_found=false
+# Loop through the user's path and test for each of PROGNAME-LIST
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_prog in egrep; do
+  for ac_exec_ext in '' $ac_executable_extensions; do
+    ac_path_EGREP="$as_dir/$ac_prog$ac_exec_ext"
+    { test -f "$ac_path_EGREP" && $as_test_x "$ac_path_EGREP"; } || continue
+    # Check for GNU ac_path_EGREP and select it if it is found.
+  # Check for GNU $ac_path_EGREP
+case `"$ac_path_EGREP" --version 2>&1` in
+*GNU*)
+  ac_cv_path_EGREP="$ac_path_EGREP" ac_path_EGREP_found=:;;
+*)
+  ac_count=0
+  echo $ECHO_N "0123456789$ECHO_C" >"conftest.in"
+  while :
+  do
+    cat "conftest.in" "conftest.in" >"conftest.tmp"
+    mv "conftest.tmp" "conftest.in"
+    cp "conftest.in" "conftest.nl"
+    echo 'EGREP' >> "conftest.nl"
+    "$ac_path_EGREP" 'EGREP$' < "conftest.nl" >"conftest.out" 2>/dev/null || break
+    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
+    ac_count=`expr $ac_count + 1`
+    if test $ac_count -gt ${ac_path_EGREP_max-0}; then
+      # Best one so far, save it but keep looking for a better one
+      ac_cv_path_EGREP="$ac_path_EGREP"
+      ac_path_EGREP_max=$ac_count
+    fi
+    # 10*(2^10) chars as input seems more than enough
+    test $ac_count -gt 10 && break
+  done
+  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
+esac
+
+
+    $ac_path_EGREP_found && break 3
+  done
+done
+
+done
+IFS=$as_save_IFS
+
+
+fi
+
+EGREP="$ac_cv_path_EGREP"
+if test -z "$EGREP"; then
+  { { echo "$as_me:$LINENO: error: no acceptable $ac_prog_name could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" >&5
+echo "$as_me: error: no acceptable $ac_prog_name could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+else
+  ac_cv_path_EGREP=$EGREP
+fi
+
+
+   fi
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_path_EGREP" >&5
+echo "${ECHO_T}$ac_cv_path_EGREP" >&6; }
+ EGREP="$ac_cv_path_EGREP"
+
+
+
+# Check whether --with-gnu-ld was given.
+if test "${with_gnu_ld+set}" = set; then
+  withval=$with_gnu_ld; test "$withval" = no || with_gnu_ld=yes
+else
+  with_gnu_ld=no
+fi
+
+ac_prog=ld
+if test "$GCC" = yes; then
+  # Check if gcc -print-prog-name=ld gives a path.
+  { echo "$as_me:$LINENO: checking for ld used by $CC" >&5
+echo $ECHO_N "checking for ld used by $CC... $ECHO_C" >&6; }
+  case $host in
+  *-*-mingw*)
+    # gcc leaves a trailing carriage return which upsets mingw
+    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
+  *)
+    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;
+  esac
+  case $ac_prog in
+    # Accept absolute paths.
+    [\\/]* | ?:[\\/]*)
+      re_direlt='/[^/][^/]*/\.\./'
+      # Canonicalize the pathname of ld
+      ac_prog=`echo $ac_prog| $SED 's%\\\\%/%g'`
+      while echo $ac_prog | grep "$re_direlt" > /dev/null 2>&1; do
+	ac_prog=`echo $ac_prog| $SED "s%$re_direlt%/%"`
+      done
+      test -z "$LD" && LD="$ac_prog"
+      ;;
+  "")
+    # If it fails, then pretend we aren't using GCC.
+    ac_prog=ld
+    ;;
+  *)
+    # If it is relative, then search for the first ld in PATH.
+    with_gnu_ld=unknown
+    ;;
+  esac
+elif test "$with_gnu_ld" = yes; then
+  { echo "$as_me:$LINENO: checking for GNU ld" >&5
+echo $ECHO_N "checking for GNU ld... $ECHO_C" >&6; }
+else
+  { echo "$as_me:$LINENO: checking for non-GNU ld" >&5
+echo $ECHO_N "checking for non-GNU ld... $ECHO_C" >&6; }
+fi
+if test "${lt_cv_path_LD+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -z "$LD"; then
+  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+  for ac_dir in $PATH; do
+    IFS="$lt_save_ifs"
+    test -z "$ac_dir" && ac_dir=.
+    if test -f "$ac_dir/$ac_prog" || test -f "$ac_dir/$ac_prog$ac_exeext"; then
+      lt_cv_path_LD="$ac_dir/$ac_prog"
+      # Check to see if the program is GNU ld.  I'd rather use --version,
+      # but apparently some variants of GNU ld only accept -v.
+      # Break only if it was the GNU/non-GNU ld that we prefer.
+      case `"$lt_cv_path_LD" -v 2>&1 </dev/null` in
+      *GNU* | *'with BFD'*)
+	test "$with_gnu_ld" != no && break
+	;;
+      *)
+	test "$with_gnu_ld" != yes && break
+	;;
+      esac
+    fi
+  done
+  IFS="$lt_save_ifs"
+else
+  lt_cv_path_LD="$LD" # Let the user override the test with a path.
+fi
+fi
+
+LD="$lt_cv_path_LD"
+if test -n "$LD"; then
+  { echo "$as_me:$LINENO: result: $LD" >&5
+echo "${ECHO_T}$LD" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+test -z "$LD" && { { echo "$as_me:$LINENO: error: no acceptable ld found in \$PATH" >&5
+echo "$as_me: error: no acceptable ld found in \$PATH" >&2;}
+   { (exit 1); exit 1; }; }
+{ echo "$as_me:$LINENO: checking if the linker ($LD) is GNU ld" >&5
+echo $ECHO_N "checking if the linker ($LD) is GNU ld... $ECHO_C" >&6; }
+if test "${lt_cv_prog_gnu_ld+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  # I'd rather use --version here, but apparently some GNU lds only accept -v.
+case `$LD -v 2>&1 </dev/null` in
+*GNU* | *'with BFD'*)
+  lt_cv_prog_gnu_ld=yes
+  ;;
+*)
+  lt_cv_prog_gnu_ld=no
+  ;;
+esac
+fi
+{ echo "$as_me:$LINENO: result: $lt_cv_prog_gnu_ld" >&5
+echo "${ECHO_T}$lt_cv_prog_gnu_ld" >&6; }
+with_gnu_ld=$lt_cv_prog_gnu_ld
+
+
+# Find a good install program.  We prefer a C program (faster),
+# so one script is as good as another.  But avoid the broken or
+# incompatible versions:
+# SysV /etc/install, /usr/sbin/install
+# SunOS /usr/etc/install
+# IRIX /sbin/install
+# AIX /bin/install
+# AmigaOS /C/install, which installs bootblocks on floppy discs
+# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
+# AFS /usr/afsws/bin/install, which mishandles nonexistent args
+# SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
+# OS/2's system install, which has a completely different semantic
+# ./install, which can be erroneously created by make from ./install.sh.
+{ echo "$as_me:$LINENO: checking for a BSD-compatible install" >&5
+echo $ECHO_N "checking for a BSD-compatible install... $ECHO_C" >&6; }
+if test -z "$INSTALL"; then
+if test "${ac_cv_path_install+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  # Account for people who put trailing slashes in PATH elements.
+case $as_dir/ in
+  ./ | .// | /cC/* | \
+  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \
+  ?:\\/os2\\/install\\/* | ?:\\/OS2\\/INSTALL\\/* | \
+  /usr/ucb/* ) ;;
+  *)
+    # OSF1 and SCO ODT 3.0 have their own names for install.
+    # Don't use installbsd from OSF since it installs stuff as root
+    # by default.
+    for ac_prog in ginstall scoinst install; do
+      for ac_exec_ext in '' $ac_executable_extensions; do
+	if { test -f "$as_dir/$ac_prog$ac_exec_ext" && $as_test_x "$as_dir/$ac_prog$ac_exec_ext"; }; then
+	  if test $ac_prog = install &&
+	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    # AIX install.  It has an incompatible calling convention.
+	    :
+	  elif test $ac_prog = install &&
+	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    # program-specific install script used by HP pwplus--don't use.
+	    :
+	  else
+	    ac_cv_path_install="$as_dir/$ac_prog$ac_exec_ext -c"
+	    break 3
+	  fi
+	fi
+      done
+    done
+    ;;
+esac
+done
+IFS=$as_save_IFS
+
+
+fi
+  if test "${ac_cv_path_install+set}" = set; then
+    INSTALL=$ac_cv_path_install
+  else
+    # As a last resort, use the slow shell script.  Don't cache a
+    # value for INSTALL within a source directory, because that will
+    # break other packages using the cache if that directory is
+    # removed, or if the value is a relative name.
+    INSTALL=$ac_install_sh
+  fi
+fi
+{ echo "$as_me:$LINENO: result: $INSTALL" >&5
+echo "${ECHO_T}$INSTALL" >&6; }
+
+# Use test -z because SunOS4 sh mishandles braces in ${var-val}.
+# It thinks the first close brace ends the variable substitution.
+test -z "$INSTALL_PROGRAM" && INSTALL_PROGRAM='${INSTALL}'
+
+test -z "$INSTALL_SCRIPT" && INSTALL_SCRIPT='${INSTALL}'
+
+test -z "$INSTALL_DATA" && INSTALL_DATA='${INSTALL} -m 644'
+
+{ echo "$as_me:$LINENO: checking whether ${MAKE-make} sets \$(MAKE)" >&5
+echo $ECHO_N "checking whether ${MAKE-make} sets \$(MAKE)... $ECHO_C" >&6; }
+set x ${MAKE-make}; ac_make=`echo "$2" | sed 's/+/p/g; s/[^a-zA-Z0-9_]/_/g'`
+if { as_var=ac_cv_prog_make_${ac_make}_set; eval "test \"\${$as_var+set}\" = set"; }; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.make <<\_ACEOF
+SHELL = /bin/sh
+all:
+	@echo '@@@%%%=$(MAKE)=@@@%%%'
+_ACEOF
+# GNU make sometimes prints "make[1]: Entering...", which would confuse us.
+case `${MAKE-make} -f conftest.make 2>/dev/null` in
+  *@@@%%%=?*=@@@%%%*)
+    eval ac_cv_prog_make_${ac_make}_set=yes;;
+  *)
+    eval ac_cv_prog_make_${ac_make}_set=no;;
+esac
+rm -f conftest.make
+fi
+if eval test \$ac_cv_prog_make_${ac_make}_set = yes; then
+  { echo "$as_me:$LINENO: result: yes" >&5
+echo "${ECHO_T}yes" >&6; }
+  SET_MAKE=
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+  SET_MAKE="MAKE=${MAKE-make}"
+fi
+
+{ echo "$as_me:$LINENO: checking for a sed that does not truncate output" >&5
+echo $ECHO_N "checking for a sed that does not truncate output... $ECHO_C" >&6; }
+if test "${ac_cv_path_SED+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+            ac_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/
+     for ac_i in 1 2 3 4 5 6 7; do
+       ac_script="$ac_script$as_nl$ac_script"
+     done
+     echo "$ac_script" | sed 99q >conftest.sed
+     $as_unset ac_script || ac_script=
+     # Extract the first word of "sed gsed" to use in msg output
+if test -z "$SED"; then
+set dummy sed gsed; ac_prog_name=$2
+if test "${ac_cv_path_SED+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_path_SED_found=false
+# Loop through the user's path and test for each of PROGNAME-LIST
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_prog in sed gsed; do
+  for ac_exec_ext in '' $ac_executable_extensions; do
+    ac_path_SED="$as_dir/$ac_prog$ac_exec_ext"
+    { test -f "$ac_path_SED" && $as_test_x "$ac_path_SED"; } || continue
+    # Check for GNU ac_path_SED and select it if it is found.
+  # Check for GNU $ac_path_SED
+case `"$ac_path_SED" --version 2>&1` in
+*GNU*)
+  ac_cv_path_SED="$ac_path_SED" ac_path_SED_found=:;;
+*)
+  ac_count=0
+  echo $ECHO_N "0123456789$ECHO_C" >"conftest.in"
+  while :
+  do
+    cat "conftest.in" "conftest.in" >"conftest.tmp"
+    mv "conftest.tmp" "conftest.in"
+    cp "conftest.in" "conftest.nl"
+    echo '' >> "conftest.nl"
+    "$ac_path_SED" -f conftest.sed < "conftest.nl" >"conftest.out" 2>/dev/null || break
+    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
+    ac_count=`expr $ac_count + 1`
+    if test $ac_count -gt ${ac_path_SED_max-0}; then
+      # Best one so far, save it but keep looking for a better one
+      ac_cv_path_SED="$ac_path_SED"
+      ac_path_SED_max=$ac_count
+    fi
+    # 10*(2^10) chars as input seems more than enough
+    test $ac_count -gt 10 && break
+  done
+  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
+esac
+
+
+    $ac_path_SED_found && break 3
+  done
+done
+
+done
+IFS=$as_save_IFS
+
+
+fi
+
+SED="$ac_cv_path_SED"
+if test -z "$SED"; then
+  { { echo "$as_me:$LINENO: error: no acceptable $ac_prog_name could be found in \$PATH" >&5
+echo "$as_me: error: no acceptable $ac_prog_name could be found in \$PATH" >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+else
+  ac_cv_path_SED=$SED
+fi
+
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_path_SED" >&5
+echo "${ECHO_T}$ac_cv_path_SED" >&6; }
+ SED="$ac_cv_path_SED"
+  rm -f conftest.sed
+
+
+
+    colored_echo_bold=''
+  colored_echo_norm=''
+
+  for ac_prog in gawk mawk nawk awk
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_prog_AWK+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$AWK"; then
+  ac_cv_prog_AWK="$AWK" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AWK="$ac_prog"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+fi
+fi
+AWK=$ac_cv_prog_AWK
+if test -n "$AWK"; then
+  { echo "$as_me:$LINENO: result: $AWK" >&5
+echo "${ECHO_T}$AWK" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+
+  test -n "$AWK" && break
+done
+
+  if test x"$AWK" = x"not found"; then
+    return
+  fi
+
+  case $TERM in
+  xterm|xterm*|vt220|vt220*)
+            colored_echo_bold=`$AWK 'BEGIN { printf("%c%c%c%c", 27, 91, 49, 109); }' </dev/null 2>/dev/null`
+    colored_echo_norm=`$AWK 'BEGIN { printf("%c%c%c", 27, 91, 109); }' </dev/null 2>/dev/null`
+    ;;
+
+  vt100|vt100*|cygwin)
+    colored_echo_bold=`$AWK 'BEGIN { printf("%c%c%c%c%c%c", 27, 91, 49, 109, 0, 0); }' </dev/null 2>/dev/null`
+    colored_echo_norm=`$AWK 'BEGIN { printf("%c%c%c%c%c", 27, 91, 109, 0, 0); }' </dev/null 2>/dev/null`
+    ;;
+
+  *)
+            paths=`$ECHO $PATH | sed -e 's/:/ /g'`
+    for tool in tput tcout; do
+      for dir in $paths; do
+        if test -r "$dir/$tool" ; then
+          for seq in bold md smso; do
+            bold="`$dir/$tool $seq 2>/dev/null`"
+            if test ".$bold" != . ; then
+              colored_echo_bold="$bold"
+              break
+            fi
+          done
+          if test ".$colored_echo_bold" != . ; then
+            for seq in sgr0 me rmso init reset; do
+              norm="`$dir/$tool $seq 2>/dev/null`"
+              if test ".$norm" != . ; then
+                colored_echo_norm="$norm"
+                break
+              fi
+            done
+          fi
+          break
+        fi
+      done
+      if test x"$colored_echo_bold" != "x" -a x"$colored_echo_norm" != "x"; then
+        break;
+      fi
+    done
+    ;;
+  esac
+
+
+
+
+
+
+
+
+# Check whether --enable-static was given.
+if test "${enable_static+set}" = set; then
+  enableval=$enable_static; p=${PACKAGE-default}
+    case $enableval in
+    yes) enable_static=yes ;;
+    no) enable_static=no ;;
+    *)
+     enable_static=no
+      # Look at the argument we got.  We use all the common list separators.
+      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      for pkg in $enableval; do
+	IFS="$lt_save_ifs"
+	if test "X$pkg" = "X$p"; then
+	  enable_static=yes
+	fi
+      done
+      IFS="$lt_save_ifs"
+      ;;
+    esac
+else
+  enable_static=no
+fi
+
+
+
+# Check whether --enable-shared was given.
+if test "${enable_shared+set}" = set; then
+  enableval=$enable_shared; p=${PACKAGE-default}
+    case $enableval in
+    yes) enable_shared=yes ;;
+    no) enable_shared=no ;;
+    *)
+      enable_shared=no
+      # Look at the argument we got.  We use all the common list separators.
+      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      for pkg in $enableval; do
+	IFS="$lt_save_ifs"
+	if test "X$pkg" = "X$p"; then
+	  enable_shared=yes
+	fi
+      done
+      IFS="$lt_save_ifs"
+      ;;
+    esac
+else
+  enable_shared=yes
+fi
+
+
+
+# Check whether --enable-fast-install was given.
+if test "${enable_fast_install+set}" = set; then
+  enableval=$enable_fast_install; p=${PACKAGE-default}
+    case $enableval in
+    yes) enable_fast_install=yes ;;
+    no) enable_fast_install=no ;;
+    *)
+      enable_fast_install=no
+      # Look at the argument we got.  We use all the common list separators.
+      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      for pkg in $enableval; do
+	IFS="$lt_save_ifs"
+	if test "X$pkg" = "X$p"; then
+	  enable_fast_install=yes
+	fi
+      done
+      IFS="$lt_save_ifs"
+      ;;
+    esac
+else
+  enable_fast_install=yes
+fi
+
+
+{ echo "$as_me:$LINENO: checking for $LD option to reload object files" >&5
+echo $ECHO_N "checking for $LD option to reload object files... $ECHO_C" >&6; }
+if test "${lt_cv_ld_reload_flag+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  lt_cv_ld_reload_flag='-r'
+fi
+{ echo "$as_me:$LINENO: result: $lt_cv_ld_reload_flag" >&5
+echo "${ECHO_T}$lt_cv_ld_reload_flag" >&6; }
+reload_flag=$lt_cv_ld_reload_flag
+case $reload_flag in
+"" | " "*) ;;
+*) reload_flag=" $reload_flag" ;;
+esac
+reload_cmds='$LD$reload_flag -o $output$reload_objs'
+case $host_os in
+  darwin*)
+    if test "$GCC" = yes; then
+      reload_cmds='$LTCC $LTCFLAGS -nostdlib ${wl}-r -o $output$reload_objs'
+    else
+      reload_cmds='$LD$reload_flag -o $output$reload_objs'
+    fi
+    ;;
+esac
+
+{ echo "$as_me:$LINENO: checking for BSD-compatible nm" >&5
+echo $ECHO_N "checking for BSD-compatible nm... $ECHO_C" >&6; }
+if test "${lt_cv_path_NM+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$NM"; then
+  # Let the user override the test.
+  lt_cv_path_NM="$NM"
+else
+  lt_nm_to_check="${ac_tool_prefix}nm"
+  if test -n "$ac_tool_prefix" && test "$build" = "$host"; then
+    lt_nm_to_check="$lt_nm_to_check nm"
+  fi
+  for lt_tmp_nm in $lt_nm_to_check; do
+    lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do
+      IFS="$lt_save_ifs"
+      test -z "$ac_dir" && ac_dir=.
+      tmp_nm="$ac_dir/$lt_tmp_nm"
+      if test -f "$tmp_nm" || test -f "$tmp_nm$ac_exeext" ; then
+	# Check to see if the nm accepts a BSD-compat flag.
+	# Adding the `sed 1q' prevents false positives on HP-UX, which says:
+	#   nm: unknown option "B" ignored
+	# Tru64's nm complains that /dev/null is an invalid object file
+	case `"$tmp_nm" -B /dev/null 2>&1 | sed '1q'` in
+	*/dev/null* | *'Invalid file or object type'*)
+	  lt_cv_path_NM="$tmp_nm -B"
+	  break
+	  ;;
+	*)
+	  case `"$tmp_nm" -p /dev/null 2>&1 | sed '1q'` in
+	  */dev/null*)
+	    lt_cv_path_NM="$tmp_nm -p"
+	    break
+	    ;;
+	  *)
+	    lt_cv_path_NM=${lt_cv_path_NM="$tmp_nm"} # keep the first match, but
+	    continue # so that we can try to find one that supports BSD flags
+	    ;;
+	  esac
+	  ;;
+	esac
+      fi
+    done
+    IFS="$lt_save_ifs"
+  done
+  test -z "$lt_cv_path_NM" && lt_cv_path_NM=nm
+fi
+fi
+{ echo "$as_me:$LINENO: result: $lt_cv_path_NM" >&5
+echo "${ECHO_T}$lt_cv_path_NM" >&6; }
+NM="$lt_cv_path_NM"
+
+{ echo "$as_me:$LINENO: checking whether ln -s works" >&5
+echo $ECHO_N "checking whether ln -s works... $ECHO_C" >&6; }
+LN_S=$as_ln_s
+if test "$LN_S" = "ln -s"; then
+  { echo "$as_me:$LINENO: result: yes" >&5
+echo "${ECHO_T}yes" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no, using $LN_S" >&5
+echo "${ECHO_T}no, using $LN_S" >&6; }
+fi
+
+{ echo "$as_me:$LINENO: checking how to recognise dependent libraries" >&5
+echo $ECHO_N "checking how to recognise dependent libraries... $ECHO_C" >&6; }
+if test "${lt_cv_deplibs_check_method+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  lt_cv_file_magic_cmd='$MAGIC_CMD'
+lt_cv_file_magic_test_file=
+lt_cv_deplibs_check_method='unknown'
+# Need to set the preceding variable on all platforms that support
+# interlibrary dependencies.
+# 'none' -- dependencies not supported.
+# `unknown' -- same as none, but documents that we really don't know.
+# 'pass_all' -- all dependencies passed with no checks.
+# 'test_compile' -- check by making test program.
+# 'file_magic [[regex]]' -- check by looking for files in library path
+# which responds to the $file_magic_cmd with a given extended regex.
+# If you have `file' or equivalent on your system and you're not sure
+# whether `pass_all' will *always* work, you probably want this one.
+
+case $host_os in
+aix4* | aix5*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+beos*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+bsdi[45]*)
+  lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib)'
+  lt_cv_file_magic_cmd='/usr/bin/file -L'
+  lt_cv_file_magic_test_file=/shlib/libc.so
+  ;;
+
+cygwin*)
+  # func_win32_libid is a shell function defined in ltmain.sh
+  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'
+  lt_cv_file_magic_cmd='func_win32_libid'
+  ;;
+
+mingw* | pw32*)
+  # Base MSYS/MinGW do not provide the 'file' command needed by
+  # func_win32_libid shell function, so use a weaker test based on 'objdump'.
+  lt_cv_deplibs_check_method='file_magic file format pei*-i386(.*architecture: i386)?'
+  lt_cv_file_magic_cmd='$OBJDUMP -f'
+  ;;
+
+darwin* | rhapsody*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+freebsd* | dragonfly*)
+  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then
+    case $host_cpu in
+    i*86 )
+      # Not sure whether the presence of OpenBSD here was a mistake.
+      # Let's accept both of them until this is cleared up.
+      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[3-9]86 (compact )?demand paged shared library'
+      lt_cv_file_magic_cmd=/usr/bin/file
+      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`
+      ;;
+    esac
+  else
+    lt_cv_deplibs_check_method=pass_all
+  fi
+  ;;
+
+gnu*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+hpux10.20* | hpux11*)
+  lt_cv_file_magic_cmd=/usr/bin/file
+  case $host_cpu in
+  ia64*)
+    lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF-[0-9][0-9]) shared object file - IA64'
+    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so
+    ;;
+  hppa*64*)
+    lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF-[0-9][0-9]) shared object file - PA-RISC [0-9].[0-9]'
+    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl
+    ;;
+  *)
+    lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|PA-RISC[0-9].[0-9]) shared library'
+    lt_cv_file_magic_test_file=/usr/lib/libc.sl
+    ;;
+  esac
+  ;;
+
+interix3*)
+  # PIC code is broken on Interix 3.x, that's why |\.a not |_pic\.a here
+  lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so|\.a)$'
+  ;;
+
+irix5* | irix6* | nonstopux*)
+  case $LD in
+  *-32|*"-32 ") libmagic=32-bit;;
+  *-n32|*"-n32 ") libmagic=N32;;
+  *-64|*"-64 ") libmagic=64-bit;;
+  *) libmagic=never-match;;
+  esac
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+# This must be Linux ELF.
+linux* | k*bsd*-gnu)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+netbsd* | netbsdelf*-gnu)
+  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then
+    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so\.[0-9]+\.[0-9]+|_pic\.a)$'
+  else
+    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so|_pic\.a)$'
+  fi
+  ;;
+
+newos6*)
+  lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (executable|dynamic lib)'
+  lt_cv_file_magic_cmd=/usr/bin/file
+  lt_cv_file_magic_test_file=/usr/lib/libnls.so
+  ;;
+
+nto-qnx*)
+  lt_cv_deplibs_check_method=unknown
+  ;;
+
+openbsd*)
+  if test -z "`echo __ELF__ | $CC -E - | grep __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so\.[0-9]+\.[0-9]+|\.so|_pic\.a)$'
+  else
+    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so\.[0-9]+\.[0-9]+|_pic\.a)$'
+  fi
+  ;;
+
+osf3* | osf4* | osf5*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+solaris*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+sysv4 | sysv4.3*)
+  case $host_vendor in
+  motorola)
+    lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib) M[0-9][0-9]* Version [0-9]'
+    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`
+    ;;
+  ncr)
+    lt_cv_deplibs_check_method=pass_all
+    ;;
+  sequent)
+    lt_cv_file_magic_cmd='/bin/file'
+    lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [LM]SB (shared object|dynamic lib )'
+    ;;
+  sni)
+    lt_cv_file_magic_cmd='/bin/file'
+    lt_cv_deplibs_check_method="file_magic ELF [0-9][0-9]*-bit [LM]SB dynamic lib"
+    lt_cv_file_magic_test_file=/lib/libc.so
+    ;;
+  siemens)
+    lt_cv_deplibs_check_method=pass_all
+    ;;
+  pc)
+    lt_cv_deplibs_check_method=pass_all
+    ;;
+  esac
+  ;;
+
+sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+esac
+
+fi
+{ echo "$as_me:$LINENO: result: $lt_cv_deplibs_check_method" >&5
+echo "${ECHO_T}$lt_cv_deplibs_check_method" >&6; }
+file_magic_cmd=$lt_cv_file_magic_cmd
+deplibs_check_method=$lt_cv_deplibs_check_method
+test -z "$deplibs_check_method" && deplibs_check_method=unknown
+
+
+
+
+# If no C compiler was specified, use CC.
+LTCC=${LTCC-"$CC"}
+
+# If no C compiler flags were specified, use CFLAGS.
+LTCFLAGS=${LTCFLAGS-"$CFLAGS"}
+
+# Allow CC to be a program name with arguments.
+compiler=$CC
+
+
+# Check whether --enable-libtool-lock was given.
+if test "${enable_libtool_lock+set}" = set; then
+  enableval=$enable_libtool_lock;
+fi
+
+test "x$enable_libtool_lock" != xno && enable_libtool_lock=yes
+
+# Some flags need to be propagated to the compiler or linker for good
+# libtool support.
+case $host in
+ia64-*-hpux*)
+  # Find out which ABI we are using.
+  echo 'int i;' > conftest.$ac_ext
+  if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; then
+    case `/usr/bin/file conftest.$ac_objext` in
+    *ELF-32*)
+      HPUX_IA64_MODE="32"
+      ;;
+    *ELF-64*)
+      HPUX_IA64_MODE="64"
+      ;;
+    esac
+  fi
+  rm -rf conftest*
+  ;;
+*-*-irix6*)
+  # Find out which ABI we are using.
+  echo '#line 5093 "configure"' > conftest.$ac_ext
+  if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; then
+   if test "$lt_cv_prog_gnu_ld" = yes; then
+    case `/usr/bin/file conftest.$ac_objext` in
+    *32-bit*)
+      LD="${LD-ld} -melf32bsmip"
+      ;;
+    *N32*)
+      LD="${LD-ld} -melf32bmipn32"
+      ;;
+    *64-bit*)
+      LD="${LD-ld} -melf64bmip"
+      ;;
+    esac
+   else
+    case `/usr/bin/file conftest.$ac_objext` in
+    *32-bit*)
+      LD="${LD-ld} -32"
+      ;;
+    *N32*)
+      LD="${LD-ld} -n32"
+      ;;
+    *64-bit*)
+      LD="${LD-ld} -64"
+      ;;
+    esac
+   fi
+  fi
+  rm -rf conftest*
+  ;;
+
+x86_64-*linux*|ppc*-*linux*|powerpc*-*linux*|s390*-*linux*|sparc*-*linux*)
+  # Find out which ABI we are using.
+  echo 'int i;' > conftest.$ac_ext
+  if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; then
+    case `/usr/bin/file conftest.o` in
+    *32-bit*)
+      case $host in
+        x86_64-*linux*)
+          LD="${LD-ld} -m elf_i386"
+          ;;
+        ppc64-*linux*|powerpc64-*linux*)
+          LD="${LD-ld} -m elf32ppclinux"
+          ;;
+        s390x-*linux*)
+          LD="${LD-ld} -m elf_s390"
+          ;;
+        sparc64-*linux*)
+          LD="${LD-ld} -m elf32_sparc"
+          ;;
+      esac
+      ;;
+    *64-bit*)
+      case $host in
+        x86_64-*linux*)
+          LD="${LD-ld} -m elf_x86_64"
+          ;;
+        ppc*-*linux*|powerpc*-*linux*)
+          LD="${LD-ld} -m elf64ppc"
+          ;;
+        s390*-*linux*)
+          LD="${LD-ld} -m elf64_s390"
+          ;;
+        sparc*-*linux*)
+          LD="${LD-ld} -m elf64_sparc"
+          ;;
+      esac
+      ;;
+    esac
+  fi
+  rm -rf conftest*
+  ;;
+
+*-*-sco3.2v5*)
+  # On SCO OpenServer 5, we need -belf to get full-featured binaries.
+  SAVE_CFLAGS="$CFLAGS"
+  CFLAGS="$CFLAGS -belf"
+  { echo "$as_me:$LINENO: checking whether the C compiler needs -belf" >&5
+echo $ECHO_N "checking whether the C compiler needs -belf... $ECHO_C" >&6; }
+if test "${lt_cv_cc_needs_belf+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+     cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+  lt_cv_cc_needs_belf=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	lt_cv_cc_needs_belf=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+     ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+fi
+{ echo "$as_me:$LINENO: result: $lt_cv_cc_needs_belf" >&5
+echo "${ECHO_T}$lt_cv_cc_needs_belf" >&6; }
+  if test x"$lt_cv_cc_needs_belf" != x"yes"; then
+    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf
+    CFLAGS="$SAVE_CFLAGS"
+  fi
+  ;;
+sparc*-*solaris*)
+  # Find out which ABI we are using.
+  echo 'int i;' > conftest.$ac_ext
+  if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; then
+    case `/usr/bin/file conftest.o` in
+    *64-bit*)
+      case $lt_cv_prog_gnu_ld in
+      yes*) LD="${LD-ld} -m elf64_sparc" ;;
+      *)    LD="${LD-ld} -64" ;;
+      esac
+      ;;
+    esac
+  fi
+  rm -rf conftest*
+  ;;
+
+
+esac
+
+need_locks="$enable_libtool_lock"
+
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+{ echo "$as_me:$LINENO: checking how to run the C preprocessor" >&5
+echo $ECHO_N "checking how to run the C preprocessor... $ECHO_C" >&6; }
+# On Suns, sometimes $CPP names a directory.
+if test -n "$CPP" && test -d "$CPP"; then
+  CPP=
+fi
+if test -z "$CPP"; then
+  if test "${ac_cv_prog_CPP+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+      # Double quotes because CPP needs to be expanded
+    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
+    do
+      ac_preproc_ok=false
+for ac_c_preproc_warn_flag in '' yes
+do
+  # Use a header file that comes with gcc, so configuring glibc
+  # with a fresh cross-compiler works.
+  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+  # <limits.h> exists even on freestanding compilers.
+  # On the NeXT, cc -E runs the code through the compiler's parser,
+  # not just through cpp. "Syntax error" is here to catch this case.
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#ifdef __STDC__
+# include <limits.h>
+#else
+# include <assert.h>
+#endif
+		     Syntax error
+_ACEOF
+if { (ac_try="$ac_cpp conftest.$ac_ext"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } >/dev/null && {
+	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       }; then
+  :
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+  # Broken: fails on valid input.
+continue
+fi
+
+rm -f conftest.err conftest.$ac_ext
+
+  # OK, works on sane cases.  Now check whether nonexistent headers
+  # can be detected and how.
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <ac_nonexistent.h>
+_ACEOF
+if { (ac_try="$ac_cpp conftest.$ac_ext"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } >/dev/null && {
+	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       }; then
+  # Broken: success on invalid input.
+continue
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+  # Passes both tests.
+ac_preproc_ok=:
+break
+fi
+
+rm -f conftest.err conftest.$ac_ext
+
+done
+# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+rm -f conftest.err conftest.$ac_ext
+if $ac_preproc_ok; then
+  break
+fi
+
+    done
+    ac_cv_prog_CPP=$CPP
+
+fi
+  CPP=$ac_cv_prog_CPP
+else
+  ac_cv_prog_CPP=$CPP
+fi
+{ echo "$as_me:$LINENO: result: $CPP" >&5
+echo "${ECHO_T}$CPP" >&6; }
+ac_preproc_ok=false
+for ac_c_preproc_warn_flag in '' yes
+do
+  # Use a header file that comes with gcc, so configuring glibc
+  # with a fresh cross-compiler works.
+  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+  # <limits.h> exists even on freestanding compilers.
+  # On the NeXT, cc -E runs the code through the compiler's parser,
+  # not just through cpp. "Syntax error" is here to catch this case.
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#ifdef __STDC__
+# include <limits.h>
+#else
+# include <assert.h>
+#endif
+		     Syntax error
+_ACEOF
+if { (ac_try="$ac_cpp conftest.$ac_ext"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } >/dev/null && {
+	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       }; then
+  :
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+  # Broken: fails on valid input.
+continue
+fi
+
+rm -f conftest.err conftest.$ac_ext
+
+  # OK, works on sane cases.  Now check whether nonexistent headers
+  # can be detected and how.
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <ac_nonexistent.h>
+_ACEOF
+if { (ac_try="$ac_cpp conftest.$ac_ext"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } >/dev/null && {
+	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       }; then
+  # Broken: success on invalid input.
+continue
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+  # Passes both tests.
+ac_preproc_ok=:
+break
+fi
+
+rm -f conftest.err conftest.$ac_ext
+
+done
+# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+rm -f conftest.err conftest.$ac_ext
+if $ac_preproc_ok; then
+  :
+else
+  { { echo "$as_me:$LINENO: error: C preprocessor \"$CPP\" fails sanity check
+See \`config.log' for more details." >&5
+echo "$as_me: error: C preprocessor \"$CPP\" fails sanity check
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+{ echo "$as_me:$LINENO: checking for ANSI C header files" >&5
+echo $ECHO_N "checking for ANSI C header files... $ECHO_C" >&6; }
+if test "${ac_cv_header_stdc+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <stdlib.h>
+#include <stdarg.h>
+#include <string.h>
+#include <float.h>
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
+  ac_cv_header_stdc=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_cv_header_stdc=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+
+if test $ac_cv_header_stdc = yes; then
+  # SunOS 4.x string.h does not declare mem*, contrary to ANSI.
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <string.h>
+
+_ACEOF
+if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+  $EGREP "memchr" >/dev/null 2>&1; then
+  :
+else
+  ac_cv_header_stdc=no
+fi
+rm -f conftest*
+
+fi
+
+if test $ac_cv_header_stdc = yes; then
+  # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <stdlib.h>
+
+_ACEOF
+if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+  $EGREP "free" >/dev/null 2>&1; then
+  :
+else
+  ac_cv_header_stdc=no
+fi
+rm -f conftest*
+
+fi
+
+if test $ac_cv_header_stdc = yes; then
+  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
+  if test "$cross_compiling" = yes; then
+  :
+else
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <ctype.h>
+#include <stdlib.h>
+#if ((' ' & 0x0FF) == 0x020)
+# define ISLOWER(c) ('a' <= (c) && (c) <= 'z')
+# define TOUPPER(c) (ISLOWER(c) ? 'A' + ((c) - 'a') : (c))
+#else
+# define ISLOWER(c) \
+		   (('a' <= (c) && (c) <= 'i') \
+		     || ('j' <= (c) && (c) <= 'r') \
+		     || ('s' <= (c) && (c) <= 'z'))
+# define TOUPPER(c) (ISLOWER(c) ? ((c) | 0x40) : (c))
+#endif
+
+#define XOR(e, f) (((e) && !(f)) || (!(e) && (f)))
+int
+main ()
+{
+  int i;
+  for (i = 0; i < 256; i++)
+    if (XOR (islower (i), ISLOWER (i))
+	|| toupper (i) != TOUPPER (i))
+      return 2;
+  return 0;
+}
+_ACEOF
+rm -f conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && { ac_try='./conftest$ac_exeext'
+  { (case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_try") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+  :
+else
+  echo "$as_me: program exited with status $ac_status" >&5
+echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+( exit $ac_status )
+ac_cv_header_stdc=no
+fi
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext
+fi
+
+
+fi
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_header_stdc" >&5
+echo "${ECHO_T}$ac_cv_header_stdc" >&6; }
+if test $ac_cv_header_stdc = yes; then
+
+cat >>confdefs.h <<\_ACEOF
+#define STDC_HEADERS 1
+_ACEOF
+
+fi
+
+# On IRIX 5.3, sys/types and inttypes.h are conflicting.
+
+
+
+
+
+
+
+
+
+for ac_header in sys/types.h sys/stat.h stdlib.h string.h memory.h strings.h \
+		  inttypes.h stdint.h unistd.h
+do
+as_ac_Header=`echo "ac_cv_header_$ac_header" | $as_tr_sh`
+{ echo "$as_me:$LINENO: checking for $ac_header" >&5
+echo $ECHO_N "checking for $ac_header... $ECHO_C" >&6; }
+if { as_var=$as_ac_Header; eval "test \"\${$as_var+set}\" = set"; }; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+$ac_includes_default
+
+#include <$ac_header>
+_ACEOF
+rm -f conftest.$ac_objext
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
+  eval "$as_ac_Header=yes"
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	eval "$as_ac_Header=no"
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+ac_res=`eval echo '${'$as_ac_Header'}'`
+	       { echo "$as_me:$LINENO: result: $ac_res" >&5
+echo "${ECHO_T}$ac_res" >&6; }
+if test `eval echo '${'$as_ac_Header'}'` = yes; then
+  cat >>confdefs.h <<_ACEOF
+#define `echo "HAVE_$ac_header" | $as_tr_cpp` 1
+_ACEOF
+
+fi
+
+done
+
+
+
+for ac_header in dlfcn.h
+do
+as_ac_Header=`echo "ac_cv_header_$ac_header" | $as_tr_sh`
+if { as_var=$as_ac_Header; eval "test \"\${$as_var+set}\" = set"; }; then
+  { echo "$as_me:$LINENO: checking for $ac_header" >&5
+echo $ECHO_N "checking for $ac_header... $ECHO_C" >&6; }
+if { as_var=$as_ac_Header; eval "test \"\${$as_var+set}\" = set"; }; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+fi
+ac_res=`eval echo '${'$as_ac_Header'}'`
+	       { echo "$as_me:$LINENO: result: $ac_res" >&5
+echo "${ECHO_T}$ac_res" >&6; }
+else
+  # Is the header compilable?
+{ echo "$as_me:$LINENO: checking $ac_header usability" >&5
+echo $ECHO_N "checking $ac_header usability... $ECHO_C" >&6; }
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+$ac_includes_default
+#include <$ac_header>
+_ACEOF
+rm -f conftest.$ac_objext
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
+  ac_header_compiler=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_header_compiler=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+{ echo "$as_me:$LINENO: result: $ac_header_compiler" >&5
+echo "${ECHO_T}$ac_header_compiler" >&6; }
+
+# Is the header present?
+{ echo "$as_me:$LINENO: checking $ac_header presence" >&5
+echo $ECHO_N "checking $ac_header presence... $ECHO_C" >&6; }
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <$ac_header>
+_ACEOF
+if { (ac_try="$ac_cpp conftest.$ac_ext"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } >/dev/null && {
+	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       }; then
+  ac_header_preproc=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+  ac_header_preproc=no
+fi
+
+rm -f conftest.err conftest.$ac_ext
+{ echo "$as_me:$LINENO: result: $ac_header_preproc" >&5
+echo "${ECHO_T}$ac_header_preproc" >&6; }
+
+# So?  What about this header?
+case $ac_header_compiler:$ac_header_preproc:$ac_c_preproc_warn_flag in
+  yes:no: )
+    { echo "$as_me:$LINENO: WARNING: $ac_header: accepted by the compiler, rejected by the preprocessor!" >&5
+echo "$as_me: WARNING: $ac_header: accepted by the compiler, rejected by the preprocessor!" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header: proceeding with the compiler's result" >&5
+echo "$as_me: WARNING: $ac_header: proceeding with the compiler's result" >&2;}
+    ac_header_preproc=yes
+    ;;
+  no:yes:* )
+    { echo "$as_me:$LINENO: WARNING: $ac_header: present but cannot be compiled" >&5
+echo "$as_me: WARNING: $ac_header: present but cannot be compiled" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header:     check for missing prerequisite headers?" >&5
+echo "$as_me: WARNING: $ac_header:     check for missing prerequisite headers?" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header: see the Autoconf documentation" >&5
+echo "$as_me: WARNING: $ac_header: see the Autoconf documentation" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header:     section \"Present But Cannot Be Compiled\"" >&5
+echo "$as_me: WARNING: $ac_header:     section \"Present But Cannot Be Compiled\"" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header: proceeding with the preprocessor's result" >&5
+echo "$as_me: WARNING: $ac_header: proceeding with the preprocessor's result" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header: in the future, the compiler will take precedence" >&5
+echo "$as_me: WARNING: $ac_header: in the future, the compiler will take precedence" >&2;}
+    ( cat <<\_ASBOX
+## ---------------------------------------- ##
+## Report this to js.pedron@meetic-corp.com ##
+## ---------------------------------------- ##
+_ASBOX
+     ) | sed "s/^/$as_me: WARNING:     /" >&2
+    ;;
+esac
+{ echo "$as_me:$LINENO: checking for $ac_header" >&5
+echo $ECHO_N "checking for $ac_header... $ECHO_C" >&6; }
+if { as_var=$as_ac_Header; eval "test \"\${$as_var+set}\" = set"; }; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  eval "$as_ac_Header=\$ac_header_preproc"
+fi
+ac_res=`eval echo '${'$as_ac_Header'}'`
+	       { echo "$as_me:$LINENO: result: $ac_res" >&5
+echo "${ECHO_T}$ac_res" >&6; }
+
+fi
+if test `eval echo '${'$as_ac_Header'}'` = yes; then
+  cat >>confdefs.h <<_ACEOF
+#define `echo "HAVE_$ac_header" | $as_tr_cpp` 1
+_ACEOF
+
+fi
+
+done
+
+
+
+
+if test -n "$CXX" && ( test "X$CXX" != "Xno" &&
+    ( (test "X$CXX" = "Xg++" && `g++ -v >/dev/null 2>&1` ) ||
+    (test "X$CXX" != "Xg++"))) ; then
+  ac_ext=cpp
+ac_cpp='$CXXCPP $CPPFLAGS'
+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu
+{ echo "$as_me:$LINENO: checking how to run the C++ preprocessor" >&5
+echo $ECHO_N "checking how to run the C++ preprocessor... $ECHO_C" >&6; }
+if test -z "$CXXCPP"; then
+  if test "${ac_cv_prog_CXXCPP+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+      # Double quotes because CXXCPP needs to be expanded
+    for CXXCPP in "$CXX -E" "/lib/cpp"
+    do
+      ac_preproc_ok=false
+for ac_cxx_preproc_warn_flag in '' yes
+do
+  # Use a header file that comes with gcc, so configuring glibc
+  # with a fresh cross-compiler works.
+  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+  # <limits.h> exists even on freestanding compilers.
+  # On the NeXT, cc -E runs the code through the compiler's parser,
+  # not just through cpp. "Syntax error" is here to catch this case.
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#ifdef __STDC__
+# include <limits.h>
+#else
+# include <assert.h>
+#endif
+		     Syntax error
+_ACEOF
+if { (ac_try="$ac_cpp conftest.$ac_ext"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } >/dev/null && {
+	 test -z "$ac_cxx_preproc_warn_flag$ac_cxx_werror_flag" ||
+	 test ! -s conftest.err
+       }; then
+  :
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+  # Broken: fails on valid input.
+continue
+fi
+
+rm -f conftest.err conftest.$ac_ext
+
+  # OK, works on sane cases.  Now check whether nonexistent headers
+  # can be detected and how.
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <ac_nonexistent.h>
+_ACEOF
+if { (ac_try="$ac_cpp conftest.$ac_ext"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } >/dev/null && {
+	 test -z "$ac_cxx_preproc_warn_flag$ac_cxx_werror_flag" ||
+	 test ! -s conftest.err
+       }; then
+  # Broken: success on invalid input.
+continue
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+  # Passes both tests.
+ac_preproc_ok=:
+break
+fi
+
+rm -f conftest.err conftest.$ac_ext
+
+done
+# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+rm -f conftest.err conftest.$ac_ext
+if $ac_preproc_ok; then
+  break
+fi
+
+    done
+    ac_cv_prog_CXXCPP=$CXXCPP
+
+fi
+  CXXCPP=$ac_cv_prog_CXXCPP
+else
+  ac_cv_prog_CXXCPP=$CXXCPP
+fi
+{ echo "$as_me:$LINENO: result: $CXXCPP" >&5
+echo "${ECHO_T}$CXXCPP" >&6; }
+ac_preproc_ok=false
+for ac_cxx_preproc_warn_flag in '' yes
+do
+  # Use a header file that comes with gcc, so configuring glibc
+  # with a fresh cross-compiler works.
+  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+  # <limits.h> exists even on freestanding compilers.
+  # On the NeXT, cc -E runs the code through the compiler's parser,
+  # not just through cpp. "Syntax error" is here to catch this case.
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#ifdef __STDC__
+# include <limits.h>
+#else
+# include <assert.h>
+#endif
+		     Syntax error
+_ACEOF
+if { (ac_try="$ac_cpp conftest.$ac_ext"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } >/dev/null && {
+	 test -z "$ac_cxx_preproc_warn_flag$ac_cxx_werror_flag" ||
+	 test ! -s conftest.err
+       }; then
+  :
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+  # Broken: fails on valid input.
+continue
+fi
+
+rm -f conftest.err conftest.$ac_ext
+
+  # OK, works on sane cases.  Now check whether nonexistent headers
+  # can be detected and how.
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <ac_nonexistent.h>
+_ACEOF
+if { (ac_try="$ac_cpp conftest.$ac_ext"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } >/dev/null && {
+	 test -z "$ac_cxx_preproc_warn_flag$ac_cxx_werror_flag" ||
+	 test ! -s conftest.err
+       }; then
+  # Broken: success on invalid input.
+continue
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+  # Passes both tests.
+ac_preproc_ok=:
+break
+fi
+
+rm -f conftest.err conftest.$ac_ext
+
+done
+# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+rm -f conftest.err conftest.$ac_ext
+if $ac_preproc_ok; then
+  :
+else
+  { { echo "$as_me:$LINENO: error: C++ preprocessor \"$CXXCPP\" fails sanity check
+See \`config.log' for more details." >&5
+echo "$as_me: error: C++ preprocessor \"$CXXCPP\" fails sanity check
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+ac_ext=cpp
+ac_cpp='$CXXCPP $CPPFLAGS'
+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu
+
+fi
+
+
+
+
+
+# Autoconf 2.13's AC_OBJEXT and AC_EXEEXT macros only works for C compilers!
+
+# find the maximum length of command line arguments
+{ echo "$as_me:$LINENO: checking the maximum length of command line arguments" >&5
+echo $ECHO_N "checking the maximum length of command line arguments... $ECHO_C" >&6; }
+if test "${lt_cv_sys_max_cmd_len+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+    i=0
+  teststring="ABCD"
+
+  case $build_os in
+  msdosdjgpp*)
+    # On DJGPP, this test can blow up pretty badly due to problems in libc
+    # (any single argument exceeding 2000 bytes causes a buffer overrun
+    # during glob expansion).  Even if it were fixed, the result of this
+    # check would be larger than it should be.
+    lt_cv_sys_max_cmd_len=12288;    # 12K is about right
+    ;;
+
+  gnu*)
+    # Under GNU Hurd, this test is not required because there is
+    # no limit to the length of command line arguments.
+    # Libtool will interpret -1 as no limit whatsoever
+    lt_cv_sys_max_cmd_len=-1;
+    ;;
+
+  cygwin* | mingw*)
+    # On Win9x/ME, this test blows up -- it succeeds, but takes
+    # about 5 minutes as the teststring grows exponentially.
+    # Worse, since 9x/ME are not pre-emptively multitasking,
+    # you end up with a "frozen" computer, even though with patience
+    # the test eventually succeeds (with a max line length of 256k).
+    # Instead, let's just punt: use the minimum linelength reported by
+    # all of the supported platforms: 8192 (on NT/2K/XP).
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
+  amigaos*)
+    # On AmigaOS with pdksh, this test takes hours, literally.
+    # So we just punt and use a minimum line length of 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
+  netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)
+    # This has been around since 386BSD, at least.  Likely further.
+    if test -x /sbin/sysctl; then
+      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`
+    elif test -x /usr/sbin/sysctl; then
+      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`
+    else
+      lt_cv_sys_max_cmd_len=65536	# usable default for all BSDs
+    fi
+    # And add a safety zone
+    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
+    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
+    ;;
+
+  interix*)
+    # We know the value 262144 and hardcode it with a safety zone (like BSD)
+    lt_cv_sys_max_cmd_len=196608
+    ;;
+
+  osf*)
+    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure
+    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not
+    # nice to cause kernel panics so lets avoid the loop below.
+    # First set a reasonable default.
+    lt_cv_sys_max_cmd_len=16384
+    #
+    if test -x /sbin/sysconfig; then
+      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in
+        *1*) lt_cv_sys_max_cmd_len=-1 ;;
+      esac
+    fi
+    ;;
+  sco3.2v5*)
+    lt_cv_sys_max_cmd_len=102400
+    ;;
+  sysv5* | sco5v6* | sysv4.2uw2*)
+    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`
+    if test -n "$kargmax"; then
+      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[ 	]//'`
+    else
+      lt_cv_sys_max_cmd_len=32768
+    fi
+    ;;
+  *)
+    # If test is not a shell built-in, we'll probably end up computing a
+    # maximum length that is only half of the actual maximum length, but
+    # we can't tell.
+    SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}
+    while (test "X"`$SHELL $0 --fallback-echo "X$teststring" 2>/dev/null` \
+	       = "XX$teststring") >/dev/null 2>&1 &&
+	    new_result=`expr "X$teststring" : ".*" 2>&1` &&
+	    lt_cv_sys_max_cmd_len=$new_result &&
+	    test $i != 17 # 1/2 MB should be enough
+    do
+      i=`expr $i + 1`
+      teststring=$teststring$teststring
+    done
+    teststring=
+    # Add a significant safety factor because C++ compilers can tack on massive
+    # amounts of additional arguments before passing them to the linker.
+    # It appears as though 1/2 is a usable value.
+    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 2`
+    ;;
+  esac
+
+fi
+
+if test -n $lt_cv_sys_max_cmd_len ; then
+  { echo "$as_me:$LINENO: result: $lt_cv_sys_max_cmd_len" >&5
+echo "${ECHO_T}$lt_cv_sys_max_cmd_len" >&6; }
+else
+  { echo "$as_me:$LINENO: result: none" >&5
+echo "${ECHO_T}none" >&6; }
+fi
+
+
+
+
+# Check for command to grab the raw symbol name followed by C symbol from nm.
+{ echo "$as_me:$LINENO: checking command to parse $NM output from $compiler object" >&5
+echo $ECHO_N "checking command to parse $NM output from $compiler object... $ECHO_C" >&6; }
+if test "${lt_cv_sys_global_symbol_pipe+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+
+# These are sane defaults that work on at least a few old systems.
+# [They come from Ultrix.  What could be older than Ultrix?!! ;)]
+
+# Character class describing NM global symbol codes.
+symcode='[BCDEGRST]'
+
+# Regexp to match symbols that can be accessed directly from C.
+sympat='\([_A-Za-z][_A-Za-z0-9]*\)'
+
+# Transform an extracted symbol line into a proper C declaration
+lt_cv_sys_global_symbol_to_cdecl="sed -n -e 's/^. .* \(.*\)$/extern int \1;/p'"
+
+# Transform an extracted symbol line into symbol name and symbol address
+lt_cv_sys_global_symbol_to_c_name_address="sed -n -e 's/^: \([^ ]*\) $/  {\\\"\1\\\", (lt_ptr) 0},/p' -e 's/^$symcode \([^ ]*\) \([^ ]*\)$/  {\"\2\", (lt_ptr) \&\2},/p'"
+
+# Define system-specific variables.
+case $host_os in
+aix*)
+  symcode='[BCDT]'
+  ;;
+cygwin* | mingw* | pw32*)
+  symcode='[ABCDGISTW]'
+  ;;
+hpux*) # Its linker distinguishes data from code symbols
+  if test "$host_cpu" = ia64; then
+    symcode='[ABCDEGRST]'
+  fi
+  lt_cv_sys_global_symbol_to_cdecl="sed -n -e 's/^T .* \(.*\)$/extern int \1();/p' -e 's/^$symcode* .* \(.*\)$/extern char \1;/p'"
+  lt_cv_sys_global_symbol_to_c_name_address="sed -n -e 's/^: \([^ ]*\) $/  {\\\"\1\\\", (lt_ptr) 0},/p' -e 's/^$symcode* \([^ ]*\) \([^ ]*\)$/  {\"\2\", (lt_ptr) \&\2},/p'"
+  ;;
+linux* | k*bsd*-gnu)
+  if test "$host_cpu" = ia64; then
+    symcode='[ABCDGIRSTW]'
+    lt_cv_sys_global_symbol_to_cdecl="sed -n -e 's/^T .* \(.*\)$/extern int \1();/p' -e 's/^$symcode* .* \(.*\)$/extern char \1;/p'"
+    lt_cv_sys_global_symbol_to_c_name_address="sed -n -e 's/^: \([^ ]*\) $/  {\\\"\1\\\", (lt_ptr) 0},/p' -e 's/^$symcode* \([^ ]*\) \([^ ]*\)$/  {\"\2\", (lt_ptr) \&\2},/p'"
+  fi
+  ;;
+irix* | nonstopux*)
+  symcode='[BCDEGRST]'
+  ;;
+osf*)
+  symcode='[BCDEGQRST]'
+  ;;
+solaris*)
+  symcode='[BDRT]'
+  ;;
+sco3.2v5*)
+  symcode='[DT]'
+  ;;
+sysv4.2uw2*)
+  symcode='[DT]'
+  ;;
+sysv5* | sco5v6* | unixware* | OpenUNIX*)
+  symcode='[ABDT]'
+  ;;
+sysv4)
+  symcode='[DFNSTU]'
+  ;;
+esac
+
+# Handle CRLF in mingw tool chain
+opt_cr=
+case $build_os in
+mingw*)
+  opt_cr=`echo 'x\{0,1\}' | tr x '\015'` # option cr in regexp
+  ;;
+esac
+
+# If we're using GNU nm, then use its standard symbol codes.
+case `$NM -V 2>&1` in
+*GNU* | *'with BFD'*)
+  symcode='[ABCDGIRSTW]' ;;
+esac
+
+# Try without a prefix undercore, then with it.
+for ac_symprfx in "" "_"; do
+
+  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.
+  symxfrm="\\1 $ac_symprfx\\2 \\2"
+
+  # Write the raw and C identifiers.
+  lt_cv_sys_global_symbol_pipe="sed -n -e 's/^.*[ 	]\($symcode$symcode*\)[ 	][ 	]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'"
+
+  # Check to see that the pipe works correctly.
+  pipe_works=no
+
+  rm -f conftest*
+  cat > conftest.$ac_ext <<EOF
+#ifdef __cplusplus
+extern "C" {
+#endif
+char nm_test_var;
+void nm_test_func(){}
+#ifdef __cplusplus
+}
+#endif
+int main(){nm_test_var='a';nm_test_func();return(0);}
+EOF
+
+  if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; then
+    # Now try to grab the symbols.
+    nlist=conftest.nm
+    if { (eval echo "$as_me:$LINENO: \"$NM conftest.$ac_objext \| $lt_cv_sys_global_symbol_pipe \> $nlist\"") >&5
+  (eval $NM conftest.$ac_objext \| $lt_cv_sys_global_symbol_pipe \> $nlist) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && test -s "$nlist"; then
+      # Try sorting and uniquifying the output.
+      if sort "$nlist" | uniq > "$nlist"T; then
+	mv -f "$nlist"T "$nlist"
+      else
+	rm -f "$nlist"T
+      fi
+
+      # Make sure that we snagged all the symbols we need.
+      if grep ' nm_test_var$' "$nlist" >/dev/null; then
+	if grep ' nm_test_func$' "$nlist" >/dev/null; then
+	  cat <<EOF > conftest.$ac_ext
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+EOF
+	  # Now generate the symbol file.
+	  eval "$lt_cv_sys_global_symbol_to_cdecl"' < "$nlist" | grep -v main >> conftest.$ac_ext'
+
+	  cat <<EOF >> conftest.$ac_ext
+#if defined (__STDC__) && __STDC__
+# define lt_ptr_t void *
+#else
+# define lt_ptr_t char *
+# define const
+#endif
+
+/* The mapping between symbol names and symbols. */
+const struct {
+  const char *name;
+  lt_ptr_t address;
+}
+lt_preloaded_symbols[] =
+{
+EOF
+	  $SED "s/^$symcode$symcode* \(.*\) \(.*\)$/  {\"\2\", (lt_ptr_t) \&\2},/" < "$nlist" | grep -v main >> conftest.$ac_ext
+	  cat <<\EOF >> conftest.$ac_ext
+  {0, (lt_ptr_t) 0}
+};
+
+#ifdef __cplusplus
+}
+#endif
+EOF
+	  # Now try linking the two files.
+	  mv conftest.$ac_objext conftstm.$ac_objext
+	  lt_save_LIBS="$LIBS"
+	  lt_save_CFLAGS="$CFLAGS"
+	  LIBS="conftstm.$ac_objext"
+	  CFLAGS="$CFLAGS$lt_prog_compiler_no_builtin_flag"
+	  if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
+  (eval $ac_link) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && test -s conftest${ac_exeext}; then
+	    pipe_works=yes
+	  fi
+	  LIBS="$lt_save_LIBS"
+	  CFLAGS="$lt_save_CFLAGS"
+	else
+	  echo "cannot find nm_test_func in $nlist" >&5
+	fi
+      else
+	echo "cannot find nm_test_var in $nlist" >&5
+      fi
+    else
+      echo "cannot run $lt_cv_sys_global_symbol_pipe" >&5
+    fi
+  else
+    echo "$progname: failed program was:" >&5
+    cat conftest.$ac_ext >&5
+  fi
+  rm -f conftest* conftst*
+
+  # Do not use the global_symbol_pipe unless it works.
+  if test "$pipe_works" = yes; then
+    break
+  else
+    lt_cv_sys_global_symbol_pipe=
+  fi
+done
+
+fi
+
+if test -z "$lt_cv_sys_global_symbol_pipe"; then
+  lt_cv_sys_global_symbol_to_cdecl=
+fi
+if test -z "$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl"; then
+  { echo "$as_me:$LINENO: result: failed" >&5
+echo "${ECHO_T}failed" >&6; }
+else
+  { echo "$as_me:$LINENO: result: ok" >&5
+echo "${ECHO_T}ok" >&6; }
+fi
+
+{ echo "$as_me:$LINENO: checking for objdir" >&5
+echo $ECHO_N "checking for objdir... $ECHO_C" >&6; }
+if test "${lt_cv_objdir+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  rm -f .libs 2>/dev/null
+mkdir .libs 2>/dev/null
+if test -d .libs; then
+  lt_cv_objdir=.libs
+else
+  # MS-DOS does not allow filenames that begin with a dot.
+  lt_cv_objdir=_libs
+fi
+rmdir .libs 2>/dev/null
+fi
+{ echo "$as_me:$LINENO: result: $lt_cv_objdir" >&5
+echo "${ECHO_T}$lt_cv_objdir" >&6; }
+objdir=$lt_cv_objdir
+
+
+
+
+
+case $host_os in
+aix3*)
+  # AIX sometimes has problems with the GCC collect2 program.  For some
+  # reason, if we set the COLLECT_NAMES environment variable, the problems
+  # vanish in a puff of smoke.
+  if test "X${COLLECT_NAMES+set}" != Xset; then
+    COLLECT_NAMES=
+    export COLLECT_NAMES
+  fi
+  ;;
+esac
+
+# Sed substitution that helps us do robust quoting.  It backslashifies
+# metacharacters that are still active within double-quoted strings.
+Xsed='sed -e 1s/^X//'
+sed_quote_subst='s/\([\\"\\`$\\\\]\)/\\\1/g'
+
+# Same as above, but do not quote variable references.
+double_quote_subst='s/\([\\"\\`\\\\]\)/\\\1/g'
+
+# Sed substitution to delay expansion of an escaped shell variable in a
+# double_quote_subst'ed string.
+delay_variable_subst='s/\\\\\\\\\\\$/\\\\\\$/g'
+
+# Sed substitution to avoid accidental globbing in evaled expressions
+no_glob_subst='s/\*/\\\*/g'
+
+# Constants:
+rm="rm -f"
+
+# Global variables:
+default_ofile=libtool
+can_build_shared=yes
+
+# All known linkers require a `.a' archive for static linking (except MSVC,
+# which needs '.lib').
+libext=a
+ltmain="$ac_aux_dir/ltmain.sh"
+ofile="$default_ofile"
+with_gnu_ld="$lt_cv_prog_gnu_ld"
+
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}ar", so it can be a program name with args.
+set dummy ${ac_tool_prefix}ar; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_prog_AR+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$AR"; then
+  ac_cv_prog_AR="$AR" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AR="${ac_tool_prefix}ar"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+fi
+fi
+AR=$ac_cv_prog_AR
+if test -n "$AR"; then
+  { echo "$as_me:$LINENO: result: $AR" >&5
+echo "${ECHO_T}$AR" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_AR"; then
+  ac_ct_AR=$AR
+  # Extract the first word of "ar", so it can be a program name with args.
+set dummy ar; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_prog_ac_ct_AR+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$ac_ct_AR"; then
+  ac_cv_prog_ac_ct_AR="$ac_ct_AR" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_AR="ar"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_AR=$ac_cv_prog_ac_ct_AR
+if test -n "$ac_ct_AR"; then
+  { echo "$as_me:$LINENO: result: $ac_ct_AR" >&5
+echo "${ECHO_T}$ac_ct_AR" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+  if test "x$ac_ct_AR" = x; then
+    AR="false"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ echo "$as_me:$LINENO: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&5
+echo "$as_me: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&2;}
+ac_tool_warned=yes ;;
+esac
+    AR=$ac_ct_AR
+  fi
+else
+  AR="$ac_cv_prog_AR"
+fi
+
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}ranlib", so it can be a program name with args.
+set dummy ${ac_tool_prefix}ranlib; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_prog_RANLIB+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$RANLIB"; then
+  ac_cv_prog_RANLIB="$RANLIB" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_RANLIB="${ac_tool_prefix}ranlib"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+fi
+fi
+RANLIB=$ac_cv_prog_RANLIB
+if test -n "$RANLIB"; then
+  { echo "$as_me:$LINENO: result: $RANLIB" >&5
+echo "${ECHO_T}$RANLIB" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_RANLIB"; then
+  ac_ct_RANLIB=$RANLIB
+  # Extract the first word of "ranlib", so it can be a program name with args.
+set dummy ranlib; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_prog_ac_ct_RANLIB+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$ac_ct_RANLIB"; then
+  ac_cv_prog_ac_ct_RANLIB="$ac_ct_RANLIB" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_RANLIB="ranlib"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_RANLIB=$ac_cv_prog_ac_ct_RANLIB
+if test -n "$ac_ct_RANLIB"; then
+  { echo "$as_me:$LINENO: result: $ac_ct_RANLIB" >&5
+echo "${ECHO_T}$ac_ct_RANLIB" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+  if test "x$ac_ct_RANLIB" = x; then
+    RANLIB=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ echo "$as_me:$LINENO: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&5
+echo "$as_me: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&2;}
+ac_tool_warned=yes ;;
+esac
+    RANLIB=$ac_ct_RANLIB
+  fi
+else
+  RANLIB="$ac_cv_prog_RANLIB"
+fi
+
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}strip", so it can be a program name with args.
+set dummy ${ac_tool_prefix}strip; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_prog_STRIP+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$STRIP"; then
+  ac_cv_prog_STRIP="$STRIP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_STRIP="${ac_tool_prefix}strip"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+fi
+fi
+STRIP=$ac_cv_prog_STRIP
+if test -n "$STRIP"; then
+  { echo "$as_me:$LINENO: result: $STRIP" >&5
+echo "${ECHO_T}$STRIP" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_STRIP"; then
+  ac_ct_STRIP=$STRIP
+  # Extract the first word of "strip", so it can be a program name with args.
+set dummy strip; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_prog_ac_ct_STRIP+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$ac_ct_STRIP"; then
+  ac_cv_prog_ac_ct_STRIP="$ac_ct_STRIP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_STRIP="strip"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_STRIP=$ac_cv_prog_ac_ct_STRIP
+if test -n "$ac_ct_STRIP"; then
+  { echo "$as_me:$LINENO: result: $ac_ct_STRIP" >&5
+echo "${ECHO_T}$ac_ct_STRIP" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+  if test "x$ac_ct_STRIP" = x; then
+    STRIP=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ echo "$as_me:$LINENO: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&5
+echo "$as_me: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&2;}
+ac_tool_warned=yes ;;
+esac
+    STRIP=$ac_ct_STRIP
+  fi
+else
+  STRIP="$ac_cv_prog_STRIP"
+fi
+
+
+old_CC="$CC"
+old_CFLAGS="$CFLAGS"
+
+# Set sane defaults for various variables
+test -z "$AR" && AR=ar
+test -z "$AR_FLAGS" && AR_FLAGS=cru
+test -z "$AS" && AS=as
+test -z "$CC" && CC=cc
+test -z "$LTCC" && LTCC=$CC
+test -z "$LTCFLAGS" && LTCFLAGS=$CFLAGS
+test -z "$DLLTOOL" && DLLTOOL=dlltool
+test -z "$LD" && LD=ld
+test -z "$LN_S" && LN_S="ln -s"
+test -z "$MAGIC_CMD" && MAGIC_CMD=file
+test -z "$NM" && NM=nm
+test -z "$SED" && SED=sed
+test -z "$OBJDUMP" && OBJDUMP=objdump
+test -z "$RANLIB" && RANLIB=:
+test -z "$STRIP" && STRIP=:
+test -z "$ac_objext" && ac_objext=o
+
+# Determine commands to create old-style static archives.
+old_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs'
+old_postinstall_cmds='chmod 644 $oldlib'
+old_postuninstall_cmds=
+
+if test -n "$RANLIB"; then
+  case $host_os in
+  openbsd*)
+    old_postinstall_cmds="$old_postinstall_cmds~\$RANLIB -t \$oldlib"
+    ;;
+  *)
+    old_postinstall_cmds="$old_postinstall_cmds~\$RANLIB \$oldlib"
+    ;;
+  esac
+  old_archive_cmds="$old_archive_cmds~\$RANLIB \$oldlib"
+fi
+
+for cc_temp in $compiler""; do
+  case $cc_temp in
+    compile | *[\\/]compile | ccache | *[\\/]ccache ) ;;
+    distcc | *[\\/]distcc | purify | *[\\/]purify ) ;;
+    \-*) ;;
+    *) break;;
+  esac
+done
+cc_basename=`$echo "X$cc_temp" | $Xsed -e 's%.*/%%' -e "s%^$host_alias-%%"`
+
+
+# Only perform the check for file, if the check method requires it
+case $deplibs_check_method in
+file_magic*)
+  if test "$file_magic_cmd" = '$MAGIC_CMD'; then
+    { echo "$as_me:$LINENO: checking for ${ac_tool_prefix}file" >&5
+echo $ECHO_N "checking for ${ac_tool_prefix}file... $ECHO_C" >&6; }
+if test "${lt_cv_path_MAGIC_CMD+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  case $MAGIC_CMD in
+[\\/*] |  ?:[\\/]*)
+  lt_cv_path_MAGIC_CMD="$MAGIC_CMD" # Let the user override the test with a path.
+  ;;
+*)
+  lt_save_MAGIC_CMD="$MAGIC_CMD"
+  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+  ac_dummy="/usr/bin$PATH_SEPARATOR$PATH"
+  for ac_dir in $ac_dummy; do
+    IFS="$lt_save_ifs"
+    test -z "$ac_dir" && ac_dir=.
+    if test -f $ac_dir/${ac_tool_prefix}file; then
+      lt_cv_path_MAGIC_CMD="$ac_dir/${ac_tool_prefix}file"
+      if test -n "$file_magic_test_file"; then
+	case $deplibs_check_method in
+	"file_magic "*)
+	  file_magic_regex=`expr "$deplibs_check_method" : "file_magic \(.*\)"`
+	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
+	    $EGREP "$file_magic_regex" > /dev/null; then
+	    :
+	  else
+	    cat <<EOF 1>&2
+
+*** Warning: the command libtool uses to detect shared libraries,
+*** $file_magic_cmd, produces output that libtool cannot recognize.
+*** The result is that libtool may fail to recognize shared libraries
+*** as such.  This will affect the creation of libtool libraries that
+*** depend on shared libraries, but programs linked with such libtool
+*** libraries will work regardless of this problem.  Nevertheless, you
+*** may want to report the problem to your system manager and/or to
+*** bug-libtool@gnu.org
+
+EOF
+	  fi ;;
+	esac
+      fi
+      break
+    fi
+  done
+  IFS="$lt_save_ifs"
+  MAGIC_CMD="$lt_save_MAGIC_CMD"
+  ;;
+esac
+fi
+
+MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+if test -n "$MAGIC_CMD"; then
+  { echo "$as_me:$LINENO: result: $MAGIC_CMD" >&5
+echo "${ECHO_T}$MAGIC_CMD" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+if test -z "$lt_cv_path_MAGIC_CMD"; then
+  if test -n "$ac_tool_prefix"; then
+    { echo "$as_me:$LINENO: checking for file" >&5
+echo $ECHO_N "checking for file... $ECHO_C" >&6; }
+if test "${lt_cv_path_MAGIC_CMD+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  case $MAGIC_CMD in
+[\\/*] |  ?:[\\/]*)
+  lt_cv_path_MAGIC_CMD="$MAGIC_CMD" # Let the user override the test with a path.
+  ;;
+*)
+  lt_save_MAGIC_CMD="$MAGIC_CMD"
+  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+  ac_dummy="/usr/bin$PATH_SEPARATOR$PATH"
+  for ac_dir in $ac_dummy; do
+    IFS="$lt_save_ifs"
+    test -z "$ac_dir" && ac_dir=.
+    if test -f $ac_dir/file; then
+      lt_cv_path_MAGIC_CMD="$ac_dir/file"
+      if test -n "$file_magic_test_file"; then
+	case $deplibs_check_method in
+	"file_magic "*)
+	  file_magic_regex=`expr "$deplibs_check_method" : "file_magic \(.*\)"`
+	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
+	    $EGREP "$file_magic_regex" > /dev/null; then
+	    :
+	  else
+	    cat <<EOF 1>&2
+
+*** Warning: the command libtool uses to detect shared libraries,
+*** $file_magic_cmd, produces output that libtool cannot recognize.
+*** The result is that libtool may fail to recognize shared libraries
+*** as such.  This will affect the creation of libtool libraries that
+*** depend on shared libraries, but programs linked with such libtool
+*** libraries will work regardless of this problem.  Nevertheless, you
+*** may want to report the problem to your system manager and/or to
+*** bug-libtool@gnu.org
+
+EOF
+	  fi ;;
+	esac
+      fi
+      break
+    fi
+  done
+  IFS="$lt_save_ifs"
+  MAGIC_CMD="$lt_save_MAGIC_CMD"
+  ;;
+esac
+fi
+
+MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+if test -n "$MAGIC_CMD"; then
+  { echo "$as_me:$LINENO: result: $MAGIC_CMD" >&5
+echo "${ECHO_T}$MAGIC_CMD" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+  else
+    MAGIC_CMD=:
+  fi
+fi
+
+  fi
+  ;;
+esac
+
+enable_dlopen=no
+enable_win32_dll=no
+
+# Check whether --enable-libtool-lock was given.
+if test "${enable_libtool_lock+set}" = set; then
+  enableval=$enable_libtool_lock;
+fi
+
+test "x$enable_libtool_lock" != xno && enable_libtool_lock=yes
+
+
+# Check whether --with-pic was given.
+if test "${with_pic+set}" = set; then
+  withval=$with_pic; pic_mode="$withval"
+else
+  pic_mode=default
+fi
+
+test -z "$pic_mode" && pic_mode=default
+
+# Use C for the default configuration in the libtool script
+tagname=
+lt_save_CC="$CC"
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+# Source file extension for C test sources.
+ac_ext=c
+
+# Object file extension for compiled C test sources.
+objext=o
+objext=$objext
+
+# Code to be used in simple compile tests
+lt_simple_compile_test_code="int some_variable = 0;\n"
+
+# Code to be used in simple link tests
+lt_simple_link_test_code='int main(){return(0);}\n'
+
+
+# If no C compiler was specified, use CC.
+LTCC=${LTCC-"$CC"}
+
+# If no C compiler flags were specified, use CFLAGS.
+LTCFLAGS=${LTCFLAGS-"$CFLAGS"}
+
+# Allow CC to be a program name with arguments.
+compiler=$CC
+
+
+# save warnings/boilerplate of simple test code
+ac_outfile=conftest.$ac_objext
+printf "$lt_simple_compile_test_code" >conftest.$ac_ext
+eval "$ac_compile" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
+_lt_compiler_boilerplate=`cat conftest.err`
+$rm conftest*
+
+ac_outfile=conftest.$ac_objext
+printf "$lt_simple_link_test_code" >conftest.$ac_ext
+eval "$ac_link" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
+_lt_linker_boilerplate=`cat conftest.err`
+$rm conftest*
+
+
+
+lt_prog_compiler_no_builtin_flag=
+
+if test "$GCC" = yes; then
+  lt_prog_compiler_no_builtin_flag=' -fno-builtin'
+
+
+{ echo "$as_me:$LINENO: checking if $compiler supports -fno-rtti -fno-exceptions" >&5
+echo $ECHO_N "checking if $compiler supports -fno-rtti -fno-exceptions... $ECHO_C" >&6; }
+if test "${lt_cv_prog_compiler_rtti_exceptions+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  lt_cv_prog_compiler_rtti_exceptions=no
+  ac_outfile=conftest.$ac_objext
+   printf "$lt_simple_compile_test_code" > conftest.$ac_ext
+   lt_compiler_flag="-fno-rtti -fno-exceptions"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   # The option is referenced via a variable to avoid confusing sed.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:7094: $lt_compile\"" >&5)
+   (eval "$lt_compile" 2>conftest.err)
+   ac_status=$?
+   cat conftest.err >&5
+   echo "$as_me:7098: \$? = $ac_status" >&5
+   if (exit $ac_status) && test -s "$ac_outfile"; then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings other than the usual output.
+     $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
+     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
+     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
+       lt_cv_prog_compiler_rtti_exceptions=yes
+     fi
+   fi
+   $rm conftest*
+
+fi
+{ echo "$as_me:$LINENO: result: $lt_cv_prog_compiler_rtti_exceptions" >&5
+echo "${ECHO_T}$lt_cv_prog_compiler_rtti_exceptions" >&6; }
+
+if test x"$lt_cv_prog_compiler_rtti_exceptions" = xyes; then
+    lt_prog_compiler_no_builtin_flag="$lt_prog_compiler_no_builtin_flag -fno-rtti -fno-exceptions"
+else
+    :
+fi
+
+fi
+
+lt_prog_compiler_wl=
+lt_prog_compiler_pic=
+lt_prog_compiler_static=
+
+{ echo "$as_me:$LINENO: checking for $compiler option to produce PIC" >&5
+echo $ECHO_N "checking for $compiler option to produce PIC... $ECHO_C" >&6; }
+
+  if test "$GCC" = yes; then
+    lt_prog_compiler_wl='-Wl,'
+    lt_prog_compiler_static='-static'
+
+    case $host_os in
+      aix*)
+      # All AIX code is PIC.
+      if test "$host_cpu" = ia64; then
+	# AIX 5 now supports IA64 processor
+	lt_prog_compiler_static='-Bstatic'
+      fi
+      ;;
+
+    amigaos*)
+      # FIXME: we need at least 68020 code to build shared libraries, but
+      # adding the `-m68020' flag to GCC prevents building anything better,
+      # like `-m68040'.
+      lt_prog_compiler_pic='-m68020 -resident32 -malways-restore-a4'
+      ;;
+
+    beos* | cygwin* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)
+      # PIC is the default for these OSes.
+      ;;
+
+    mingw* | pw32* | os2*)
+      # This hack is so that the source file can tell whether it is being
+      # built for inclusion in a dll (and should export symbols for example).
+      lt_prog_compiler_pic='-DDLL_EXPORT'
+      ;;
+
+    darwin* | rhapsody*)
+      # PIC is the default on this platform
+      # Common symbols not allowed in MH_DYLIB files
+      lt_prog_compiler_pic='-fno-common'
+      ;;
+
+    interix3*)
+      # Interix 3.x gcc -fpic/-fPIC options generate broken code.
+      # Instead, we relocate shared libraries at runtime.
+      ;;
+
+    msdosdjgpp*)
+      # Just because we use GCC doesn't mean we suddenly get shared libraries
+      # on systems that don't support them.
+      lt_prog_compiler_can_build_shared=no
+      enable_shared=no
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec; then
+	lt_prog_compiler_pic=-Kconform_pic
+      fi
+      ;;
+
+    hpux*)
+      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but
+      # not for PA HP-UX.
+      case $host_cpu in
+      hppa*64*|ia64*)
+	# +Z the default
+	;;
+      *)
+	lt_prog_compiler_pic='-fPIC'
+	;;
+      esac
+      ;;
+
+    *)
+      lt_prog_compiler_pic='-fPIC'
+      ;;
+    esac
+  else
+    # PORTME Check for flag to pass linker flags through the system compiler.
+    case $host_os in
+    aix*)
+      lt_prog_compiler_wl='-Wl,'
+      if test "$host_cpu" = ia64; then
+	# AIX 5 now supports IA64 processor
+	lt_prog_compiler_static='-Bstatic'
+      else
+	lt_prog_compiler_static='-bnso -bI:/lib/syscalls.exp'
+      fi
+      ;;
+      darwin*)
+        # PIC is the default on this platform
+        # Common symbols not allowed in MH_DYLIB files
+       case $cc_basename in
+         xlc*)
+         lt_prog_compiler_pic='-qnocommon'
+         lt_prog_compiler_wl='-Wl,'
+         ;;
+       esac
+       ;;
+
+    mingw* | pw32* | os2*)
+      # This hack is so that the source file can tell whether it is being
+      # built for inclusion in a dll (and should export symbols for example).
+      lt_prog_compiler_pic='-DDLL_EXPORT'
+      ;;
+
+    hpux9* | hpux10* | hpux11*)
+      lt_prog_compiler_wl='-Wl,'
+      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but
+      # not for PA HP-UX.
+      case $host_cpu in
+      hppa*64*|ia64*)
+	# +Z the default
+	;;
+      *)
+	lt_prog_compiler_pic='+Z'
+	;;
+      esac
+      # Is there a better lt_prog_compiler_static that works with the bundled CC?
+      lt_prog_compiler_static='${wl}-a ${wl}archive'
+      ;;
+
+    irix5* | irix6* | nonstopux*)
+      lt_prog_compiler_wl='-Wl,'
+      # PIC (with -KPIC) is the default.
+      lt_prog_compiler_static='-non_shared'
+      ;;
+
+    newsos6)
+      lt_prog_compiler_pic='-KPIC'
+      lt_prog_compiler_static='-Bstatic'
+      ;;
+
+    linux* | k*bsd*-gnu)
+      case $cc_basename in
+      icc* | ecc*)
+	lt_prog_compiler_wl='-Wl,'
+	lt_prog_compiler_pic='-KPIC'
+	lt_prog_compiler_static='-static'
+        ;;
+      pgcc* | pgf77* | pgf90* | pgf95*)
+        # Portland Group compilers (*not* the Pentium gcc compiler,
+	# which looks to be a dead project)
+	lt_prog_compiler_wl='-Wl,'
+	lt_prog_compiler_pic='-fpic'
+	lt_prog_compiler_static='-Bstatic'
+        ;;
+      ccc*)
+        lt_prog_compiler_wl='-Wl,'
+        # All Alpha code is PIC.
+        lt_prog_compiler_static='-non_shared'
+        ;;
+      esac
+      ;;
+
+    osf3* | osf4* | osf5*)
+      lt_prog_compiler_wl='-Wl,'
+      # All OSF/1 code is PIC.
+      lt_prog_compiler_static='-non_shared'
+      ;;
+
+    solaris*)
+      lt_prog_compiler_pic='-KPIC'
+      lt_prog_compiler_static='-Bstatic'
+      case $cc_basename in
+      f77* | f90* | f95*)
+	lt_prog_compiler_wl='-Qoption ld ';;
+      *)
+	lt_prog_compiler_wl='-Wl,';;
+      esac
+      ;;
+
+    sunos4*)
+      lt_prog_compiler_wl='-Qoption ld '
+      lt_prog_compiler_pic='-PIC'
+      lt_prog_compiler_static='-Bstatic'
+      ;;
+
+    sysv4 | sysv4.2uw2* | sysv4.3*)
+      lt_prog_compiler_wl='-Wl,'
+      lt_prog_compiler_pic='-KPIC'
+      lt_prog_compiler_static='-Bstatic'
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec ;then
+	lt_prog_compiler_pic='-Kconform_pic'
+	lt_prog_compiler_static='-Bstatic'
+      fi
+      ;;
+
+    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)
+      lt_prog_compiler_wl='-Wl,'
+      lt_prog_compiler_pic='-KPIC'
+      lt_prog_compiler_static='-Bstatic'
+      ;;
+
+    unicos*)
+      lt_prog_compiler_wl='-Wl,'
+      lt_prog_compiler_can_build_shared=no
+      ;;
+
+    uts4*)
+      lt_prog_compiler_pic='-pic'
+      lt_prog_compiler_static='-Bstatic'
+      ;;
+
+    *)
+      lt_prog_compiler_can_build_shared=no
+      ;;
+    esac
+  fi
+
+{ echo "$as_me:$LINENO: result: $lt_prog_compiler_pic" >&5
+echo "${ECHO_T}$lt_prog_compiler_pic" >&6; }
+
+#
+# Check to make sure the PIC flag actually works.
+#
+if test -n "$lt_prog_compiler_pic"; then
+
+{ echo "$as_me:$LINENO: checking if $compiler PIC flag $lt_prog_compiler_pic works" >&5
+echo $ECHO_N "checking if $compiler PIC flag $lt_prog_compiler_pic works... $ECHO_C" >&6; }
+if test "${lt_prog_compiler_pic_works+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  lt_prog_compiler_pic_works=no
+  ac_outfile=conftest.$ac_objext
+   printf "$lt_simple_compile_test_code" > conftest.$ac_ext
+   lt_compiler_flag="$lt_prog_compiler_pic -DPIC"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   # The option is referenced via a variable to avoid confusing sed.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:7362: $lt_compile\"" >&5)
+   (eval "$lt_compile" 2>conftest.err)
+   ac_status=$?
+   cat conftest.err >&5
+   echo "$as_me:7366: \$? = $ac_status" >&5
+   if (exit $ac_status) && test -s "$ac_outfile"; then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings other than the usual output.
+     $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
+     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
+     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
+       lt_prog_compiler_pic_works=yes
+     fi
+   fi
+   $rm conftest*
+
+fi
+{ echo "$as_me:$LINENO: result: $lt_prog_compiler_pic_works" >&5
+echo "${ECHO_T}$lt_prog_compiler_pic_works" >&6; }
+
+if test x"$lt_prog_compiler_pic_works" = xyes; then
+    case $lt_prog_compiler_pic in
+     "" | " "*) ;;
+     *) lt_prog_compiler_pic=" $lt_prog_compiler_pic" ;;
+     esac
+else
+    lt_prog_compiler_pic=
+     lt_prog_compiler_can_build_shared=no
+fi
+
+fi
+case $host_os in
+  # For platforms which do not support PIC, -DPIC is meaningless:
+  *djgpp*)
+    lt_prog_compiler_pic=
+    ;;
+  *)
+    lt_prog_compiler_pic="$lt_prog_compiler_pic -DPIC"
+    ;;
+esac
+
+#
+# Check to make sure the static flag actually works.
+#
+wl=$lt_prog_compiler_wl eval lt_tmp_static_flag=\"$lt_prog_compiler_static\"
+{ echo "$as_me:$LINENO: checking if $compiler static flag $lt_tmp_static_flag works" >&5
+echo $ECHO_N "checking if $compiler static flag $lt_tmp_static_flag works... $ECHO_C" >&6; }
+if test "${lt_prog_compiler_static_works+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  lt_prog_compiler_static_works=no
+   save_LDFLAGS="$LDFLAGS"
+   LDFLAGS="$LDFLAGS $lt_tmp_static_flag"
+   printf "$lt_simple_link_test_code" > conftest.$ac_ext
+   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
+     # The linker can only warn and ignore the option if not recognized
+     # So say no if there are warnings
+     if test -s conftest.err; then
+       # Append any errors to the config.log.
+       cat conftest.err 1>&5
+       $echo "X$_lt_linker_boilerplate" | $Xsed -e '/^$/d' > conftest.exp
+       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
+       if diff conftest.exp conftest.er2 >/dev/null; then
+         lt_prog_compiler_static_works=yes
+       fi
+     else
+       lt_prog_compiler_static_works=yes
+     fi
+   fi
+   $rm conftest*
+   LDFLAGS="$save_LDFLAGS"
+
+fi
+{ echo "$as_me:$LINENO: result: $lt_prog_compiler_static_works" >&5
+echo "${ECHO_T}$lt_prog_compiler_static_works" >&6; }
+
+if test x"$lt_prog_compiler_static_works" = xyes; then
+    :
+else
+    lt_prog_compiler_static=
+fi
+
+
+{ echo "$as_me:$LINENO: checking if $compiler supports -c -o file.$ac_objext" >&5
+echo $ECHO_N "checking if $compiler supports -c -o file.$ac_objext... $ECHO_C" >&6; }
+if test "${lt_cv_prog_compiler_c_o+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  lt_cv_prog_compiler_c_o=no
+   $rm -r conftest 2>/dev/null
+   mkdir conftest
+   cd conftest
+   mkdir out
+   printf "$lt_simple_compile_test_code" > conftest.$ac_ext
+
+   lt_compiler_flag="-o out/conftest2.$ac_objext"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:7466: $lt_compile\"" >&5)
+   (eval "$lt_compile" 2>out/conftest.err)
+   ac_status=$?
+   cat out/conftest.err >&5
+   echo "$as_me:7470: \$? = $ac_status" >&5
+   if (exit $ac_status) && test -s out/conftest2.$ac_objext
+   then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings
+     $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' > out/conftest.exp
+     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
+     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then
+       lt_cv_prog_compiler_c_o=yes
+     fi
+   fi
+   chmod u+w . 2>&5
+   $rm conftest*
+   # SGI C++ compiler will create directory out/ii_files/ for
+   # template instantiation
+   test -d out/ii_files && $rm out/ii_files/* && rmdir out/ii_files
+   $rm out/* && rmdir out
+   cd ..
+   rmdir conftest
+   $rm conftest*
+
+fi
+{ echo "$as_me:$LINENO: result: $lt_cv_prog_compiler_c_o" >&5
+echo "${ECHO_T}$lt_cv_prog_compiler_c_o" >&6; }
+
+
+hard_links="nottested"
+if test "$lt_cv_prog_compiler_c_o" = no && test "$need_locks" != no; then
+  # do not overwrite the value of need_locks provided by the user
+  { echo "$as_me:$LINENO: checking if we can lock with hard links" >&5
+echo $ECHO_N "checking if we can lock with hard links... $ECHO_C" >&6; }
+  hard_links=yes
+  $rm conftest*
+  ln conftest.a conftest.b 2>/dev/null && hard_links=no
+  touch conftest.a
+  ln conftest.a conftest.b 2>&5 || hard_links=no
+  ln conftest.a conftest.b 2>/dev/null && hard_links=no
+  { echo "$as_me:$LINENO: result: $hard_links" >&5
+echo "${ECHO_T}$hard_links" >&6; }
+  if test "$hard_links" = no; then
+    { echo "$as_me:$LINENO: WARNING: \`$CC' does not support \`-c -o', so \`make -j' may be unsafe" >&5
+echo "$as_me: WARNING: \`$CC' does not support \`-c -o', so \`make -j' may be unsafe" >&2;}
+    need_locks=warn
+  fi
+else
+  need_locks=no
+fi
+
+{ echo "$as_me:$LINENO: checking whether the $compiler linker ($LD) supports shared libraries" >&5
+echo $ECHO_N "checking whether the $compiler linker ($LD) supports shared libraries... $ECHO_C" >&6; }
+
+  runpath_var=
+  allow_undefined_flag=
+  enable_shared_with_static_runtimes=no
+  archive_cmds=
+  archive_expsym_cmds=
+  old_archive_From_new_cmds=
+  old_archive_from_expsyms_cmds=
+  export_dynamic_flag_spec=
+  whole_archive_flag_spec=
+  thread_safe_flag_spec=
+  hardcode_libdir_flag_spec=
+  hardcode_libdir_flag_spec_ld=
+  hardcode_libdir_separator=
+  hardcode_direct=no
+  hardcode_minus_L=no
+  hardcode_shlibpath_var=unsupported
+  link_all_deplibs=unknown
+  hardcode_automatic=no
+  module_cmds=
+  module_expsym_cmds=
+  always_export_symbols=no
+  export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
+  # include_expsyms should be a list of space-separated symbols to be *always*
+  # included in the symbol list
+  include_expsyms=
+  # exclude_expsyms can be an extended regexp of symbols to exclude
+  # it will be wrapped by ` (' and `)$', so one must not match beginning or
+  # end of line.  Example: `a|bc|.*d.*' will exclude the symbols `a' and `bc',
+  # as well as any symbol that contains `d'.
+  exclude_expsyms="_GLOBAL_OFFSET_TABLE_"
+  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out
+  # platforms (ab)use it in PIC code, but their linkers get confused if
+  # the symbol is explicitly referenced.  Since portable code cannot
+  # rely on this symbol name, it's probably fine to never include it in
+  # preloaded symbol tables.
+  extract_expsyms_cmds=
+  # Just being paranoid about ensuring that cc_basename is set.
+  for cc_temp in $compiler""; do
+  case $cc_temp in
+    compile | *[\\/]compile | ccache | *[\\/]ccache ) ;;
+    distcc | *[\\/]distcc | purify | *[\\/]purify ) ;;
+    \-*) ;;
+    *) break;;
+  esac
+done
+cc_basename=`$echo "X$cc_temp" | $Xsed -e 's%.*/%%' -e "s%^$host_alias-%%"`
+
+  case $host_os in
+  cygwin* | mingw* | pw32*)
+    # FIXME: the MSVC++ port hasn't been tested in a loooong time
+    # When not using gcc, we currently assume that we are using
+    # Microsoft Visual C++.
+    if test "$GCC" != yes; then
+      with_gnu_ld=no
+    fi
+    ;;
+  interix*)
+    # we just hope/assume this is gcc and not c89 (= MSVC++)
+    with_gnu_ld=yes
+    ;;
+  openbsd*)
+    with_gnu_ld=no
+    ;;
+  esac
+
+  ld_shlibs=yes
+  if test "$with_gnu_ld" = yes; then
+    # If archive_cmds runs LD, not CC, wlarc should be empty
+    wlarc='${wl}'
+
+    # Set some defaults for GNU ld with shared library support. These
+    # are reset later if shared libraries are not supported. Putting them
+    # here allows them to be overridden if necessary.
+    runpath_var=LD_RUN_PATH
+    hardcode_libdir_flag_spec='${wl}--rpath ${wl}$libdir'
+    export_dynamic_flag_spec='${wl}--export-dynamic'
+    # ancient GNU ld didn't support --whole-archive et. al.
+    if $LD --help 2>&1 | grep 'no-whole-archive' > /dev/null; then
+	whole_archive_flag_spec="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
+      else
+  	whole_archive_flag_spec=
+    fi
+    supports_anon_versioning=no
+    case `$LD -v 2>/dev/null` in
+      *\ [01].* | *\ 2.[0-9].* | *\ 2.10.*) ;; # catch versions < 2.11
+      *\ 2.11.93.0.2\ *) supports_anon_versioning=yes ;; # RH7.3 ...
+      *\ 2.11.92.0.12\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...
+      *\ 2.11.*) ;; # other 2.11 versions
+      *) supports_anon_versioning=yes ;;
+    esac
+
+    # See if GNU ld supports shared libraries.
+    case $host_os in
+    aix3* | aix4* | aix5*)
+      # On AIX/PPC, the GNU linker is very broken
+      if test "$host_cpu" != ia64; then
+	ld_shlibs=no
+	cat <<EOF 1>&2
+
+*** Warning: the GNU linker, at least up to release 2.9.1, is reported
+*** to be unable to reliably create shared libraries on AIX.
+*** Therefore, libtool is disabling shared libraries support.  If you
+*** really care for shared libraries, you may want to modify your PATH
+*** so that a non-GNU linker is found, and then restart.
+
+EOF
+      fi
+      ;;
+
+    amigaos*)
+      archive_cmds='$rm $output_objdir/a2ixlibrary.data~$echo "#define NAME $libname" > $output_objdir/a2ixlibrary.data~$echo "#define LIBRARY_ID 1" >> $output_objdir/a2ixlibrary.data~$echo "#define VERSION $major" >> $output_objdir/a2ixlibrary.data~$echo "#define REVISION $revision" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'
+      hardcode_libdir_flag_spec='-L$libdir'
+      hardcode_minus_L=yes
+
+      # Samuel A. Falvo II <kc5tja@dolphin.openprojects.net> reports
+      # that the semantics of dynamic libraries on AmigaOS, at least up
+      # to version 4, is to share data among multiple programs linked
+      # with the same dynamic library.  Since this doesn't match the
+      # behavior of shared libraries on other platforms, we can't use
+      # them.
+      ld_shlibs=no
+      ;;
+
+    beos*)
+      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
+	allow_undefined_flag=unsupported
+	# Joseph Beckenbach <jrb3@best.com> says some releases of gcc
+	# support --undefined.  This deserves some investigation.  FIXME
+	archive_cmds='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+      else
+	ld_shlibs=no
+      fi
+      ;;
+
+    cygwin* | mingw* | pw32*)
+      # _LT_AC_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
+      # as there is no search path for DLLs.
+      hardcode_libdir_flag_spec='-L$libdir'
+      allow_undefined_flag=unsupported
+      always_export_symbols=no
+      enable_shared_with_static_runtimes=yes
+      export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\''/^[BCDGRS] /s/.* \([^ ]*\)/\1 DATA/'\'' | $SED -e '\''/^[AITW] /s/.* //'\'' | sort | uniq > $export_symbols'
+
+      if $LD --help 2>&1 | grep 'auto-import' > /dev/null; then
+        archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+	# If the export-symbols file already is a .def file (1st line
+	# is EXPORTS), use it as is; otherwise, prepend...
+	archive_expsym_cmds='if test "x`$SED 1q $export_symbols`" = xEXPORTS; then
+	  cp $export_symbols $output_objdir/$soname.def;
+	else
+	  echo EXPORTS > $output_objdir/$soname.def;
+	  cat $export_symbols >> $output_objdir/$soname.def;
+	fi~
+	$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+      else
+	ld_shlibs=no
+      fi
+      ;;
+
+    interix3*)
+      hardcode_direct=no
+      hardcode_shlibpath_var=no
+      hardcode_libdir_flag_spec='${wl}-rpath,$libdir'
+      export_dynamic_flag_spec='${wl}-E'
+      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.
+      # Instead, shared libraries are loaded at an image base (0x10000000 by
+      # default) and relocated if they conflict, which is a slow very memory
+      # consuming and fragmenting process.  To avoid this, we pick a random,
+      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
+      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.
+      archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+      archive_expsym_cmds='sed "s,^,_," $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+      ;;
+
+    linux* | k*bsd*-gnu)
+      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
+	tmp_addflag=
+	case $cc_basename,$host_cpu in
+	pgcc*)				# Portland Group C compiler
+	  whole_archive_flag_spec='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $echo \"$new_convenience\"` ${wl}--no-whole-archive'
+	  tmp_addflag=' $pic_flag'
+	  ;;
+	pgf77* | pgf90* | pgf95*)	# Portland Group f77 and f90 compilers
+	  whole_archive_flag_spec='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $echo \"$new_convenience\"` ${wl}--no-whole-archive'
+	  tmp_addflag=' $pic_flag -Mnomain' ;;
+	ecc*,ia64* | icc*,ia64*)		# Intel C compiler on ia64
+	  tmp_addflag=' -i_dynamic' ;;
+	efc*,ia64* | ifort*,ia64*)	# Intel Fortran compiler on ia64
+	  tmp_addflag=' -i_dynamic -nofor_main' ;;
+	ifc* | ifort*)			# Intel Fortran compiler
+	  tmp_addflag=' -nofor_main' ;;
+	esac
+	archive_cmds='$CC -shared'"$tmp_addflag"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+
+	if test $supports_anon_versioning = yes; then
+	  archive_expsym_cmds='$echo "{ global:" > $output_objdir/$libname.ver~
+  cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
+  $echo "local: *; };" >> $output_objdir/$libname.ver~
+	  $CC -shared'"$tmp_addflag"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'
+	fi
+	link_all_deplibs=no
+      else
+	ld_shlibs=no
+      fi
+      ;;
+
+    netbsd* | netbsdelf*-gnu)
+      if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+	archive_cmds='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
+	wlarc=
+      else
+	archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      fi
+      ;;
+
+    solaris*)
+      if $LD -v 2>&1 | grep 'BFD 2\.8' > /dev/null; then
+	ld_shlibs=no
+	cat <<EOF 1>&2
+
+*** Warning: The releases 2.8.* of the GNU linker cannot reliably
+*** create shared libraries on Solaris systems.  Therefore, libtool
+*** is disabling shared libraries support.  We urge you to upgrade GNU
+*** binutils to release 2.9.1 or newer.  Another option is to modify
+*** your PATH or compiler configuration so that the native linker is
+*** used, and then restart.
+
+EOF
+      elif $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
+	archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      else
+	ld_shlibs=no
+      fi
+      ;;
+
+    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)
+      case `$LD -v 2>&1` in
+        *\ [01].* | *\ 2.[0-9].* | *\ 2.1[0-5].*)
+	ld_shlibs=no
+	cat <<_LT_EOF 1>&2
+
+*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 can not
+*** reliably create shared libraries on SCO systems.  Therefore, libtool
+*** is disabling shared libraries support.  We urge you to upgrade GNU
+*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify
+*** your PATH or compiler configuration so that the native linker is
+*** used, and then restart.
+
+_LT_EOF
+	;;
+	*)
+	  if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
+	    hardcode_libdir_flag_spec='`test -z "$SCOABSPATH" && echo ${wl}-rpath,$libdir`'
+	    archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib'
+	    archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname,\${SCOABSPATH:+${install_libdir}/}$soname,-retain-symbols-file,$export_symbols -o $lib'
+	  else
+	    ld_shlibs=no
+	  fi
+	;;
+      esac
+      ;;
+
+    sunos4*)
+      archive_cmds='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+      wlarc=
+      hardcode_direct=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    *)
+      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
+	archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      else
+	ld_shlibs=no
+      fi
+      ;;
+    esac
+
+    if test "$ld_shlibs" = no; then
+      runpath_var=
+      hardcode_libdir_flag_spec=
+      export_dynamic_flag_spec=
+      whole_archive_flag_spec=
+    fi
+  else
+    # PORTME fill in a description of your system's linker (not GNU ld)
+    case $host_os in
+    aix3*)
+      allow_undefined_flag=unsupported
+      always_export_symbols=yes
+      archive_expsym_cmds='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'
+      # Note: this linker hardcodes the directories in LIBPATH if there
+      # are no directories specified by -L.
+      hardcode_minus_L=yes
+      if test "$GCC" = yes && test -z "$lt_prog_compiler_static"; then
+	# Neither direct hardcoding nor static linking is supported with a
+	# broken collect2.
+	hardcode_direct=unsupported
+      fi
+      ;;
+
+    aix4* | aix5*)
+      if test "$host_cpu" = ia64; then
+	# On IA64, the linker does run time linking by default, so we don't
+	# have to do anything special.
+	aix_use_runtimelinking=no
+	exp_sym_flag='-Bexport'
+	no_entry_flag=""
+      else
+	# If we're using GNU nm, then we don't want the "-C" option.
+	# -C means demangle to AIX nm, but means don't demangle with GNU nm
+	if $NM -V 2>&1 | grep 'GNU' > /dev/null; then
+	  export_symbols_cmds='$NM -Bpg $libobjs $convenience | awk '\''{ if (((\$2 == "T") || (\$2 == "D") || (\$2 == "B")) && (substr(\$3,1,1) != ".")) { print \$3 } }'\'' | sort -u > $export_symbols'
+	else
+	  export_symbols_cmds='$NM -BCpg $libobjs $convenience | awk '\''{ if (((\$2 == "T") || (\$2 == "D") || (\$2 == "B")) && (substr(\$3,1,1) != ".")) { print \$3 } }'\'' | sort -u > $export_symbols'
+	fi
+	aix_use_runtimelinking=no
+
+	# Test if we are trying to use run time linking or normal
+	# AIX style linking. If -brtl is somewhere in LDFLAGS, we
+	# need to do runtime linking.
+	case $host_os in aix4.[23]|aix4.[23].*|aix5*)
+	  for ld_flag in $LDFLAGS; do
+  	  if (test $ld_flag = "-brtl" || test $ld_flag = "-Wl,-brtl"); then
+  	    aix_use_runtimelinking=yes
+  	    break
+  	  fi
+	  done
+	  ;;
+	esac
+
+	exp_sym_flag='-bexport'
+	no_entry_flag='-bnoentry'
+      fi
+
+      # When large executables or shared objects are built, AIX ld can
+      # have problems creating the table of contents.  If linking a library
+      # or program results in "error TOC overflow" add -mminimal-toc to
+      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not
+      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.
+
+      archive_cmds=''
+      hardcode_direct=yes
+      hardcode_libdir_separator=':'
+      link_all_deplibs=yes
+
+      if test "$GCC" = yes; then
+	case $host_os in aix4.[012]|aix4.[012].*)
+	# We only want to do this on AIX 4.2 and lower, the check
+	# below for broken collect2 doesn't work under 4.3+
+	  collect2name=`${CC} -print-prog-name=collect2`
+	  if test -f "$collect2name" && \
+  	   strings "$collect2name" | grep resolve_lib_name >/dev/null
+	  then
+  	  # We have reworked collect2
+  	  hardcode_direct=yes
+	  else
+  	  # We have old collect2
+  	  hardcode_direct=unsupported
+  	  # It fails to find uninstalled libraries when the uninstalled
+  	  # path is not listed in the libpath.  Setting hardcode_minus_L
+  	  # to unsupported forces relinking
+  	  hardcode_minus_L=yes
+  	  hardcode_libdir_flag_spec='-L$libdir'
+  	  hardcode_libdir_separator=
+	  fi
+	  ;;
+	esac
+	shared_flag='-shared'
+	if test "$aix_use_runtimelinking" = yes; then
+	  shared_flag="$shared_flag "'${wl}-G'
+	fi
+      else
+	# not using gcc
+	if test "$host_cpu" = ia64; then
+  	# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release
+  	# chokes on -Wl,-G. The following line is correct:
+	  shared_flag='-G'
+	else
+	  if test "$aix_use_runtimelinking" = yes; then
+	    shared_flag='${wl}-G'
+	  else
+	    shared_flag='${wl}-bM:SRE'
+	  fi
+	fi
+      fi
+
+      # It seems that -bexpall does not export symbols beginning with
+      # underscore (_), so it is better to generate a list of symbols to export.
+      always_export_symbols=yes
+      if test "$aix_use_runtimelinking" = yes; then
+	# Warning - without using the other runtime loading flags (-brtl),
+	# -berok will link without error, but may produce a broken library.
+	allow_undefined_flag='-berok'
+       # Determine the default libpath from the value encoded in an empty executable.
+       cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+
+aix_libpath=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\(.*\)$/\1/; p; }
+}'`
+# Check for a 64-bit object if we didn't find anything.
+if test -z "$aix_libpath"; then aix_libpath=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\(.*\)$/\1/; p; }
+}'`; fi
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
+
+       hardcode_libdir_flag_spec='${wl}-blibpath:$libdir:'"$aix_libpath"
+	archive_expsym_cmds="\$CC"' -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags `if test "x${allow_undefined_flag}" != "x"; then echo "${wl}${allow_undefined_flag}"; else :; fi` '"\${wl}$exp_sym_flag:\$export_symbols $shared_flag"
+       else
+	if test "$host_cpu" = ia64; then
+	  hardcode_libdir_flag_spec='${wl}-R $libdir:/usr/lib:/lib'
+	  allow_undefined_flag="-z nodefs"
+	  archive_expsym_cmds="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags ${wl}${allow_undefined_flag} '"\${wl}$exp_sym_flag:\$export_symbols"
+	else
+	 # Determine the default libpath from the value encoded in an empty executable.
+	 cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+
+aix_libpath=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\(.*\)$/\1/; p; }
+}'`
+# Check for a 64-bit object if we didn't find anything.
+if test -z "$aix_libpath"; then aix_libpath=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\(.*\)$/\1/; p; }
+}'`; fi
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
+
+	 hardcode_libdir_flag_spec='${wl}-blibpath:$libdir:'"$aix_libpath"
+	  # Warning - without using the other run time loading flags,
+	  # -berok will link without error, but may produce a broken library.
+	  no_undefined_flag=' ${wl}-bernotok'
+	  allow_undefined_flag=' ${wl}-berok'
+	  # Exported symbols can be pulled into shared objects from archives
+	  whole_archive_flag_spec='$convenience'
+	  archive_cmds_need_lc=yes
+	  # This is similar to how AIX traditionally builds its shared libraries.
+	  archive_expsym_cmds="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'
+	fi
+      fi
+      ;;
+
+    amigaos*)
+      archive_cmds='$rm $output_objdir/a2ixlibrary.data~$echo "#define NAME $libname" > $output_objdir/a2ixlibrary.data~$echo "#define LIBRARY_ID 1" >> $output_objdir/a2ixlibrary.data~$echo "#define VERSION $major" >> $output_objdir/a2ixlibrary.data~$echo "#define REVISION $revision" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'
+      hardcode_libdir_flag_spec='-L$libdir'
+      hardcode_minus_L=yes
+      # see comment about different semantics on the GNU ld section
+      ld_shlibs=no
+      ;;
+
+    bsdi[45]*)
+      export_dynamic_flag_spec=-rdynamic
+      ;;
+
+    cygwin* | mingw* | pw32*)
+      # When not using gcc, we currently assume that we are using
+      # Microsoft Visual C++.
+      # hardcode_libdir_flag_spec is actually meaningless, as there is
+      # no search path for DLLs.
+      hardcode_libdir_flag_spec=' '
+      allow_undefined_flag=unsupported
+      # Tell ltmain to make .lib files, not .a files.
+      libext=lib
+      # Tell ltmain to make .dll files, not .so files.
+      shrext_cmds=".dll"
+      # FIXME: Setting linknames here is a bad hack.
+      archive_cmds='$CC -o $lib $libobjs $compiler_flags `echo "$deplibs" | $SED -e '\''s/ -lc$//'\''` -link -dll~linknames='
+      # The linker will automatically build a .lib file if we build a DLL.
+      old_archive_From_new_cmds='true'
+      # FIXME: Should let the user specify the lib program.
+      old_archive_cmds='lib /OUT:$oldlib$oldobjs$old_deplibs'
+      fix_srcfile_path='`cygpath -w "$srcfile"`'
+      enable_shared_with_static_runtimes=yes
+      ;;
+
+    darwin* | rhapsody*)
+      case $host_os in
+        rhapsody* | darwin1.[012])
+         allow_undefined_flag='${wl}-undefined ${wl}suppress'
+         ;;
+       *) # Darwin 1.3 on
+         if test -z ${MACOSX_DEPLOYMENT_TARGET} ; then
+           allow_undefined_flag='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'
+         else
+           case ${MACOSX_DEPLOYMENT_TARGET} in
+             10.[012])
+               allow_undefined_flag='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'
+               ;;
+             10.*)
+               allow_undefined_flag='${wl}-undefined ${wl}dynamic_lookup'
+               ;;
+           esac
+         fi
+         ;;
+      esac
+      archive_cmds_need_lc=no
+      hardcode_direct=no
+      hardcode_automatic=yes
+      hardcode_shlibpath_var=unsupported
+      whole_archive_flag_spec=''
+      link_all_deplibs=yes
+    if test "$GCC" = yes ; then
+    	output_verbose_link_cmd='echo'
+        archive_cmds='$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring'
+      module_cmds='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'
+      # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin lds
+      archive_expsym_cmds='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+      module_expsym_cmds='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+    else
+      case $cc_basename in
+        xlc*)
+         output_verbose_link_cmd='echo'
+         archive_cmds='$CC -qmkshrobj $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}`echo $rpath/$soname` $verstring'
+         module_cmds='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'
+          # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin lds
+         archive_expsym_cmds='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -qmkshrobj $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}$rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+          module_expsym_cmds='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+          ;;
+       *)
+         ld_shlibs=no
+          ;;
+      esac
+    fi
+      ;;
+
+    dgux*)
+      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_libdir_flag_spec='-L$libdir'
+      hardcode_shlibpath_var=no
+      ;;
+
+    freebsd1*)
+      ld_shlibs=no
+      ;;
+
+    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor
+    # support.  Future versions do this automatically, but an explicit c++rt0.o
+    # does not break anything, and helps significantly (at the cost of a little
+    # extra space).
+    freebsd2.2*)
+      archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'
+      hardcode_libdir_flag_spec='-R$libdir'
+      hardcode_direct=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    # Unfortunately, older versions of FreeBSD 2 do not have this feature.
+    freebsd2*)
+      archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_direct=yes
+      hardcode_minus_L=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.
+    freebsd* | dragonfly*)
+      archive_cmds='$CC -shared -o $lib $libobjs $deplibs $compiler_flags'
+      hardcode_libdir_flag_spec='-R$libdir'
+      hardcode_direct=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    hpux9*)
+      if test "$GCC" = yes; then
+	archive_cmds='$rm $output_objdir/$soname~$CC -shared -fPIC ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+      else
+	archive_cmds='$rm $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+      fi
+      hardcode_libdir_flag_spec='${wl}+b ${wl}$libdir'
+      hardcode_libdir_separator=:
+      hardcode_direct=yes
+
+      # hardcode_minus_L: Not really in the search PATH,
+      # but as the default location of the library.
+      hardcode_minus_L=yes
+      export_dynamic_flag_spec='${wl}-E'
+      ;;
+
+    hpux10*)
+      if test "$GCC" = yes -a "$with_gnu_ld" = no; then
+	archive_cmds='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'
+      fi
+      if test "$with_gnu_ld" = no; then
+	hardcode_libdir_flag_spec='${wl}+b ${wl}$libdir'
+	hardcode_libdir_separator=:
+
+	hardcode_direct=yes
+	export_dynamic_flag_spec='${wl}-E'
+
+	# hardcode_minus_L: Not really in the search PATH,
+	# but as the default location of the library.
+	hardcode_minus_L=yes
+      fi
+      ;;
+
+    hpux11*)
+      if test "$GCC" = yes -a "$with_gnu_ld" = no; then
+	case $host_cpu in
+	hppa*64*)
+	  archive_cmds='$CC -shared ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	ia64*)
+	  archive_cmds='$CC -shared ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	*)
+	  archive_cmds='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	esac
+      else
+	case $host_cpu in
+	hppa*64*)
+	  archive_cmds='$CC -b ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	ia64*)
+	  archive_cmds='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	*)
+	  archive_cmds='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	esac
+      fi
+      if test "$with_gnu_ld" = no; then
+	hardcode_libdir_flag_spec='${wl}+b ${wl}$libdir'
+	hardcode_libdir_separator=:
+
+	case $host_cpu in
+	hppa*64*|ia64*)
+	  hardcode_libdir_flag_spec_ld='+b $libdir'
+	  hardcode_direct=no
+	  hardcode_shlibpath_var=no
+	  ;;
+	*)
+	  hardcode_direct=yes
+	  export_dynamic_flag_spec='${wl}-E'
+
+	  # hardcode_minus_L: Not really in the search PATH,
+	  # but as the default location of the library.
+	  hardcode_minus_L=yes
+	  ;;
+	esac
+      fi
+      ;;
+
+    irix5* | irix6* | nonstopux*)
+      if test "$GCC" = yes; then
+	archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+      else
+	archive_cmds='$LD -shared $libobjs $deplibs $linker_flags -soname $soname `test -n "$verstring" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'
+	hardcode_libdir_flag_spec_ld='-rpath $libdir'
+      fi
+      hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+      hardcode_libdir_separator=:
+      link_all_deplibs=yes
+      ;;
+
+    netbsd* | netbsdelf*-gnu)
+      if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+	archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
+      else
+	archive_cmds='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF
+      fi
+      hardcode_libdir_flag_spec='-R$libdir'
+      hardcode_direct=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    newsos6)
+      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_direct=yes
+      hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+      hardcode_libdir_separator=:
+      hardcode_shlibpath_var=no
+      ;;
+
+    openbsd*)
+      hardcode_direct=yes
+      hardcode_shlibpath_var=no
+      if test -z "`echo __ELF__ | $CC -E - | grep __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+	archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-retain-symbols-file,$export_symbols'
+	hardcode_libdir_flag_spec='${wl}-rpath,$libdir'
+	export_dynamic_flag_spec='${wl}-E'
+      else
+       case $host_os in
+	 openbsd[01].* | openbsd2.[0-7] | openbsd2.[0-7].*)
+	   archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+	   hardcode_libdir_flag_spec='-R$libdir'
+	   ;;
+	 *)
+	   archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
+	   hardcode_libdir_flag_spec='${wl}-rpath,$libdir'
+	   ;;
+       esac
+      fi
+      ;;
+
+    os2*)
+      hardcode_libdir_flag_spec='-L$libdir'
+      hardcode_minus_L=yes
+      allow_undefined_flag=unsupported
+      archive_cmds='$echo "LIBRARY $libname INITINSTANCE" > $output_objdir/$libname.def~$echo "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~$echo DATA >> $output_objdir/$libname.def~$echo " SINGLE NONSHARED" >> $output_objdir/$libname.def~$echo EXPORTS >> $output_objdir/$libname.def~emxexp $libobjs >> $output_objdir/$libname.def~$CC -Zdll -Zcrtdll -o $lib $libobjs $deplibs $compiler_flags $output_objdir/$libname.def'
+      old_archive_From_new_cmds='emximp -o $output_objdir/$libname.a $output_objdir/$libname.def'
+      ;;
+
+    osf3*)
+      if test "$GCC" = yes; then
+	allow_undefined_flag=' ${wl}-expect_unresolved ${wl}\*'
+	archive_cmds='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+      else
+	allow_undefined_flag=' -expect_unresolved \*'
+	archive_cmds='$LD -shared${allow_undefined_flag} $libobjs $deplibs $linker_flags -soname $soname `test -n "$verstring" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'
+      fi
+      hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+      hardcode_libdir_separator=:
+      ;;
+
+    osf4* | osf5*)	# as osf3* with the addition of -msym flag
+      if test "$GCC" = yes; then
+	allow_undefined_flag=' ${wl}-expect_unresolved ${wl}\*'
+	archive_cmds='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n "$verstring" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+	hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+      else
+	allow_undefined_flag=' -expect_unresolved \*'
+	archive_cmds='$LD -shared${allow_undefined_flag} $libobjs $deplibs $linker_flags -msym -soname $soname `test -n "$verstring" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'
+	archive_expsym_cmds='for i in `cat $export_symbols`; do printf "%s %s\\n" -exported_symbol "\$i" >> $lib.exp; done; echo "-hidden">> $lib.exp~
+	$LD -shared${allow_undefined_flag} -input $lib.exp $linker_flags $libobjs $deplibs -soname $soname `test -n "$verstring" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib~$rm $lib.exp'
+
+	# Both c and cxx compiler support -rpath directly
+	hardcode_libdir_flag_spec='-rpath $libdir'
+      fi
+      hardcode_libdir_separator=:
+      ;;
+
+    solaris*)
+      no_undefined_flag=' -z text'
+      if test "$GCC" = yes; then
+	wlarc='${wl}'
+	archive_cmds='$CC -shared ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='$echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~$echo "local: *; };" >> $lib.exp~
+	  $CC -shared ${wl}-M ${wl}$lib.exp ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags~$rm $lib.exp'
+      else
+	wlarc=''
+	archive_cmds='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	archive_expsym_cmds='$echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~$echo "local: *; };" >> $lib.exp~
+  	$LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$rm $lib.exp'
+      fi
+      hardcode_libdir_flag_spec='-R$libdir'
+      hardcode_shlibpath_var=no
+      case $host_os in
+      solaris2.[0-5] | solaris2.[0-5].*) ;;
+      *)
+ 	# The compiler driver will combine linker options so we
+ 	# cannot just pass the convience library names through
+ 	# without $wl, iff we do not link with $LD.
+ 	# Luckily, gcc supports the same syntax we need for Sun Studio.
+ 	# Supported since Solaris 2.6 (maybe 2.5.1?)
+ 	case $wlarc in
+ 	'')
+ 	  whole_archive_flag_spec='-z allextract$convenience -z defaultextract' ;;
+ 	*)
+ 	  whole_archive_flag_spec='${wl}-z ${wl}allextract`for conv in $convenience\"\"; do test -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $echo \"$new_convenience\"` ${wl}-z ${wl}defaultextract' ;;
+ 	esac ;;
+      esac
+      link_all_deplibs=yes
+      ;;
+
+    sunos4*)
+      if test "x$host_vendor" = xsequent; then
+	# Use $CC to link under sequent, because it throws in some extra .o
+	# files that make .init and .fini sections work.
+	archive_cmds='$CC -G ${wl}-h $soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'
+      fi
+      hardcode_libdir_flag_spec='-L$libdir'
+      hardcode_direct=yes
+      hardcode_minus_L=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    sysv4)
+      case $host_vendor in
+	sni)
+	  archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	  hardcode_direct=yes # is this really true???
+	;;
+	siemens)
+	  ## LD is ld it makes a PLAMLIB
+	  ## CC just makes a GrossModule.
+	  archive_cmds='$LD -G -o $lib $libobjs $deplibs $linker_flags'
+	  reload_cmds='$CC -r -o $output$reload_objs'
+	  hardcode_direct=no
+        ;;
+	motorola)
+	  archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	  hardcode_direct=no #Motorola manual says yes, but my tests say they lie
+	;;
+      esac
+      runpath_var='LD_RUN_PATH'
+      hardcode_shlibpath_var=no
+      ;;
+
+    sysv4.3*)
+      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_shlibpath_var=no
+      export_dynamic_flag_spec='-Bexport'
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec; then
+	archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	hardcode_shlibpath_var=no
+	runpath_var=LD_RUN_PATH
+	hardcode_runpath_var=yes
+	ld_shlibs=yes
+      fi
+      ;;
+
+    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[01].[10]* | unixware7*)
+      no_undefined_flag='${wl}-z,text'
+      archive_cmds_need_lc=no
+      hardcode_shlibpath_var=no
+      runpath_var='LD_RUN_PATH'
+
+      if test "$GCC" = yes; then
+	archive_cmds='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      fi
+      ;;
+
+    sysv5* | sco3.2v5* | sco5v6*)
+      # Note: We can NOT use -z defs as we might desire, because we do not
+      # link with -lc, and that would cause any symbols used from libc to
+      # always be unresolved, which means just about no library would
+      # ever link correctly.  If we're not using GNU ld we use -z text
+      # though, which does catch some bad symbols but isn't as heavy-handed
+      # as -z defs.
+      no_undefined_flag='${wl}-z,text'
+      allow_undefined_flag='${wl}-z,nodefs'
+      archive_cmds_need_lc=no
+      hardcode_shlibpath_var=no
+      hardcode_libdir_flag_spec='`test -z "$SCOABSPATH" && echo ${wl}-R,$libdir`'
+      hardcode_libdir_separator=':'
+      link_all_deplibs=yes
+      export_dynamic_flag_spec='${wl}-Bexport'
+      runpath_var='LD_RUN_PATH'
+
+      if test "$GCC" = yes; then
+	archive_cmds='$CC -shared ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds='$CC -G ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+      fi
+      ;;
+
+    uts4*)
+      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_libdir_flag_spec='-L$libdir'
+      hardcode_shlibpath_var=no
+      ;;
+
+    *)
+      ld_shlibs=no
+      ;;
+    esac
+  fi
+
+{ echo "$as_me:$LINENO: result: $ld_shlibs" >&5
+echo "${ECHO_T}$ld_shlibs" >&6; }
+test "$ld_shlibs" = no && can_build_shared=no
+
+#
+# Do we need to explicitly link libc?
+#
+case "x$archive_cmds_need_lc" in
+x|xyes)
+  # Assume -lc should be added
+  archive_cmds_need_lc=yes
+
+  if test "$enable_shared" = yes && test "$GCC" = yes; then
+    case $archive_cmds in
+    *'~'*)
+      # FIXME: we may have to deal with multi-command sequences.
+      ;;
+    '$CC '*)
+      # Test whether the compiler implicitly links with -lc since on some
+      # systems, -lgcc has to come before -lc. If gcc already passes -lc
+      # to ld, don't add -lc before -lgcc.
+      { echo "$as_me:$LINENO: checking whether -lc should be explicitly linked in" >&5
+echo $ECHO_N "checking whether -lc should be explicitly linked in... $ECHO_C" >&6; }
+      $rm conftest*
+      printf "$lt_simple_compile_test_code" > conftest.$ac_ext
+
+      if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } 2>conftest.err; then
+        soname=conftest
+        lib=conftest
+        libobjs=conftest.$ac_objext
+        deplibs=
+        wl=$lt_prog_compiler_wl
+	pic_flag=$lt_prog_compiler_pic
+        compiler_flags=-v
+        linker_flags=-v
+        verstring=
+        output_objdir=.
+        libname=conftest
+        lt_save_allow_undefined_flag=$allow_undefined_flag
+        allow_undefined_flag=
+        if { (eval echo "$as_me:$LINENO: \"$archive_cmds 2\>\&1 \| grep \" -lc \" \>/dev/null 2\>\&1\"") >&5
+  (eval $archive_cmds 2\>\&1 \| grep \" -lc \" \>/dev/null 2\>\&1) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }
+        then
+	  archive_cmds_need_lc=no
+        else
+	  archive_cmds_need_lc=yes
+        fi
+        allow_undefined_flag=$lt_save_allow_undefined_flag
+      else
+        cat conftest.err 1>&5
+      fi
+      $rm conftest*
+      { echo "$as_me:$LINENO: result: $archive_cmds_need_lc" >&5
+echo "${ECHO_T}$archive_cmds_need_lc" >&6; }
+      ;;
+    esac
+  fi
+  ;;
+esac
+
+{ echo "$as_me:$LINENO: checking dynamic linker characteristics" >&5
+echo $ECHO_N "checking dynamic linker characteristics... $ECHO_C" >&6; }
+library_names_spec=
+libname_spec='lib$name'
+soname_spec=
+shrext_cmds=".so"
+postinstall_cmds=
+postuninstall_cmds=
+finish_cmds=
+finish_eval=
+shlibpath_var=
+shlibpath_overrides_runpath=unknown
+version_type=none
+dynamic_linker="$host_os ld.so"
+sys_lib_dlsearch_path_spec="/lib /usr/lib"
+if test "$GCC" = yes; then
+  sys_lib_search_path_spec=`$CC -print-search-dirs | grep "^libraries:" | $SED -e "s/^libraries://" -e "s,=/,/,g"`
+  if echo "$sys_lib_search_path_spec" | grep ';' >/dev/null ; then
+    # if the path contains ";" then we assume it to be the separator
+    # otherwise default to the standard path separator (i.e. ":") - it is
+    # assumed that no part of a normal pathname contains ";" but that should
+    # okay in the real world where ";" in dirpaths is itself problematic.
+    sys_lib_search_path_spec=`echo "$sys_lib_search_path_spec" | $SED -e 's/;/ /g'`
+  else
+    sys_lib_search_path_spec=`echo "$sys_lib_search_path_spec" | $SED  -e "s/$PATH_SEPARATOR/ /g"`
+  fi
+else
+  sys_lib_search_path_spec="/lib /usr/lib /usr/local/lib"
+fi
+need_lib_prefix=unknown
+hardcode_into_libs=no
+
+# when you set need_version to no, make sure it does not cause -set_version
+# flags to be left without arguments
+need_version=unknown
+
+case $host_os in
+aix3*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix $libname.a'
+  shlibpath_var=LIBPATH
+
+  # AIX 3 has no versioning support, so we append a major version to the name.
+  soname_spec='${libname}${release}${shared_ext}$major'
+  ;;
+
+aix4* | aix5*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  hardcode_into_libs=yes
+  if test "$host_cpu" = ia64; then
+    # AIX 5 supports IA64
+    library_names_spec='${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext}$versuffix $libname${shared_ext}'
+    shlibpath_var=LD_LIBRARY_PATH
+  else
+    # With GCC up to 2.95.x, collect2 would create an import file
+    # for dependence libraries.  The import file would start with
+    # the line `#! .'.  This would cause the generated library to
+    # depend on `.', always an invalid library.  This was fixed in
+    # development snapshots of GCC prior to 3.0.
+    case $host_os in
+      aix4 | aix4.[01] | aix4.[01].*)
+      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'
+	   echo ' yes '
+	   echo '#endif'; } | ${CC} -E - | grep yes > /dev/null; then
+	:
+      else
+	can_build_shared=no
+      fi
+      ;;
+    esac
+    # AIX (on Power*) has no versioning support, so currently we can not hardcode correct
+    # soname into executable. Probably we can add versioning support to
+    # collect2, so additional links can be useful in future.
+    if test "$aix_use_runtimelinking" = yes; then
+      # If using run time linking (on AIX 4.2 or later) use lib<name>.so
+      # instead of lib<name>.a to let people know that these are not
+      # typical AIX shared libraries.
+      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    else
+      # We preserve .a as extension for shared libraries through AIX4.2
+      # and later when we are not doing run time linking.
+      library_names_spec='${libname}${release}.a $libname.a'
+      soname_spec='${libname}${release}${shared_ext}$major'
+    fi
+    shlibpath_var=LIBPATH
+  fi
+  ;;
+
+amigaos*)
+  library_names_spec='$libname.ixlibrary $libname.a'
+  # Create ${libname}_ixlibrary.a entries in /sys/libs.
+  finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`$echo "X$lib" | $Xsed -e '\''s%^.*/\([^/]*\)\.ixlibrary$%\1%'\''`; test $rm /sys/libs/${libname}_ixlibrary.a; $show "cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'
+  ;;
+
+beos*)
+  library_names_spec='${libname}${shared_ext}'
+  dynamic_linker="$host_os ld.so"
+  shlibpath_var=LIBRARY_PATH
+  ;;
+
+bsdi[45]*)
+  version_type=linux
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  sys_lib_search_path_spec="/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib"
+  sys_lib_dlsearch_path_spec="/shlib /usr/lib /usr/local/lib"
+  # the default ld.so.conf also contains /usr/contrib/lib and
+  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow
+  # libtool to hard-code these into programs
+  ;;
+
+cygwin* | mingw* | pw32*)
+  version_type=windows
+  shrext_cmds=".dll"
+  need_version=no
+  need_lib_prefix=no
+
+  case $GCC,$host_os in
+  yes,cygwin* | yes,mingw* | yes,pw32*)
+    library_names_spec='$libname.dll.a'
+    # DLL is installed to $(libdir)/../bin by postinstall_cmds
+    postinstall_cmds='base_file=`basename \${file}`~
+      dlpath=`$SHELL 2>&1 -c '\''. $dir/'\''\${base_file}'\''i;echo \$dlname'\''`~
+      dldir=$destdir/`dirname \$dlpath`~
+      test -d \$dldir || mkdir -p \$dldir~
+      $install_prog $dir/$dlname \$dldir/$dlname~
+      chmod a+x \$dldir/$dlname'
+    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\''. $file; echo \$dlname'\''`~
+      dlpath=$dir/\$dldll~
+       $rm \$dlpath'
+    shlibpath_overrides_runpath=yes
+
+    case $host_os in
+    cygwin*)
+      # Cygwin DLLs use 'cyg' prefix rather than 'lib'
+      soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      sys_lib_search_path_spec="/usr/lib /lib/w32api /lib /usr/local/lib"
+      ;;
+    mingw*)
+      # MinGW DLLs use traditional 'lib' prefix
+      soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      sys_lib_search_path_spec=`$CC -print-search-dirs | grep "^libraries:" | $SED -e "s/^libraries://" -e "s,=/,/,g"`
+      if echo "$sys_lib_search_path_spec" | grep ';[c-zC-Z]:/' >/dev/null; then
+        # It is most probably a Windows format PATH printed by
+        # mingw gcc, but we are running on Cygwin. Gcc prints its search
+        # path with ; separators, and with drive letters. We can handle the
+        # drive letters (cygwin fileutils understands them), so leave them,
+        # especially as we might pass files found there to a mingw objdump,
+        # which wouldn't understand a cygwinified path. Ahh.
+        sys_lib_search_path_spec=`echo "$sys_lib_search_path_spec" | $SED -e 's/;/ /g'`
+      else
+        sys_lib_search_path_spec=`echo "$sys_lib_search_path_spec" | $SED  -e "s/$PATH_SEPARATOR/ /g"`
+      fi
+      ;;
+    pw32*)
+      # pw32 DLLs use 'pw' prefix rather than 'lib'
+      library_names_spec='`echo ${libname} | sed -e 's/^lib/pw/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      ;;
+    esac
+    ;;
+
+  *)
+    library_names_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext} $libname.lib'
+    ;;
+  esac
+  dynamic_linker='Win32 ld.exe'
+  # FIXME: first we should search . and the directory the executable is in
+  shlibpath_var=PATH
+  ;;
+
+darwin* | rhapsody*)
+  dynamic_linker="$host_os dyld"
+  version_type=darwin
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${versuffix}$shared_ext ${libname}${release}${major}$shared_ext ${libname}$shared_ext'
+  soname_spec='${libname}${release}${major}$shared_ext'
+  shlibpath_overrides_runpath=yes
+  shlibpath_var=DYLD_LIBRARY_PATH
+  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'
+  # Apple's gcc prints 'gcc -print-search-dirs' doesn't operate the same.
+  if test "$GCC" = yes; then
+    sys_lib_search_path_spec=`$CC -print-search-dirs | tr "\n" "$PATH_SEPARATOR" | sed -e 's/libraries:/@libraries:/' | tr "@" "\n" | grep "^libraries:" | sed -e "s/^libraries://" -e "s,=/,/,g" -e "s,$PATH_SEPARATOR, ,g" -e "s,.*,& /lib /usr/lib /usr/local/lib,g"`
+  else
+    sys_lib_search_path_spec='/lib /usr/lib /usr/local/lib'
+  fi
+  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'
+  ;;
+
+dgux*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname$shared_ext'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  ;;
+
+freebsd1*)
+  dynamic_linker=no
+  ;;
+
+freebsd* | dragonfly*)
+  # DragonFly does not have aout.  When/if they implement a new
+  # versioning mechanism, adjust this.
+  if test -x /usr/bin/objformat; then
+    objformat=`/usr/bin/objformat`
+  else
+    case $host_os in
+    freebsd[123]*) objformat=aout ;;
+    *) objformat=elf ;;
+    esac
+  fi
+  version_type=freebsd-$objformat
+  case $version_type in
+    freebsd-elf*)
+      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'
+      need_version=no
+      need_lib_prefix=no
+      ;;
+    freebsd-*)
+      library_names_spec='${libname}${release}${shared_ext}$versuffix $libname${shared_ext}$versuffix'
+      need_version=yes
+      ;;
+  esac
+  shlibpath_var=LD_LIBRARY_PATH
+  case $host_os in
+  freebsd2*)
+    shlibpath_overrides_runpath=yes
+    ;;
+  freebsd3.[01]* | freebsdelf3.[01]*)
+    shlibpath_overrides_runpath=yes
+    hardcode_into_libs=yes
+    ;;
+  freebsd3.[2-9]* | freebsdelf3.[2-9]* | \
+  freebsd4.[0-5] | freebsdelf4.[0-5] | freebsd4.1.1 | freebsdelf4.1.1)
+    shlibpath_overrides_runpath=no
+    hardcode_into_libs=yes
+    ;;
+  freebsd*) # from 4.6 on
+    shlibpath_overrides_runpath=yes
+    hardcode_into_libs=yes
+    ;;
+  esac
+  ;;
+
+gnu*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  hardcode_into_libs=yes
+  ;;
+
+hpux9* | hpux10* | hpux11*)
+  # Give a soname corresponding to the major version so that dld.sl refuses to
+  # link against other versions.
+  version_type=sunos
+  need_lib_prefix=no
+  need_version=no
+  case $host_cpu in
+  ia64*)
+    shrext_cmds='.so'
+    hardcode_into_libs=yes
+    dynamic_linker="$host_os dld.so"
+    shlibpath_var=LD_LIBRARY_PATH
+    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    if test "X$HPUX_IA64_MODE" = X32; then
+      sys_lib_search_path_spec="/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib"
+    else
+      sys_lib_search_path_spec="/usr/lib/hpux64 /usr/local/lib/hpux64"
+    fi
+    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
+    ;;
+   hppa*64*)
+     shrext_cmds='.sl'
+     hardcode_into_libs=yes
+     dynamic_linker="$host_os dld.sl"
+     shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH
+     shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
+     library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+     soname_spec='${libname}${release}${shared_ext}$major'
+     sys_lib_search_path_spec="/usr/lib/pa20_64 /usr/ccs/lib/pa20_64"
+     sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
+     ;;
+   *)
+    shrext_cmds='.sl'
+    dynamic_linker="$host_os dld.sl"
+    shlibpath_var=SHLIB_PATH
+    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    ;;
+  esac
+  # HP-UX runs *really* slowly unless shared libraries are mode 555.
+  postinstall_cmds='chmod 555 $lib'
+  ;;
+
+interix3*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  ;;
+
+irix5* | irix6* | nonstopux*)
+  case $host_os in
+    nonstopux*) version_type=nonstopux ;;
+    *)
+	if test "$lt_cv_prog_gnu_ld" = yes; then
+		version_type=linux
+	else
+		version_type=irix
+	fi ;;
+  esac
+  need_lib_prefix=no
+  need_version=no
+  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext} $libname${shared_ext}'
+  case $host_os in
+  irix5* | nonstopux*)
+    libsuff= shlibsuff=
+    ;;
+  *)
+    case $LD in # libtool.m4 will add one of these switches to LD
+    *-32|*"-32 "|*-melf32bsmip|*"-melf32bsmip ")
+      libsuff= shlibsuff= libmagic=32-bit;;
+    *-n32|*"-n32 "|*-melf32bmipn32|*"-melf32bmipn32 ")
+      libsuff=32 shlibsuff=N32 libmagic=N32;;
+    *-64|*"-64 "|*-melf64bmip|*"-melf64bmip ")
+      libsuff=64 shlibsuff=64 libmagic=64-bit;;
+    *) libsuff= shlibsuff= libmagic=never-match;;
+    esac
+    ;;
+  esac
+  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH
+  shlibpath_overrides_runpath=no
+  sys_lib_search_path_spec="/usr/lib${libsuff} /lib${libsuff} /usr/local/lib${libsuff}"
+  sys_lib_dlsearch_path_spec="/usr/lib${libsuff} /lib${libsuff}"
+  hardcode_into_libs=yes
+  ;;
+
+# No shared lib support for Linux oldld, aout, or coff.
+linux*oldld* | linux*aout* | linux*coff*)
+  dynamic_linker=no
+  ;;
+
+# This must be Linux ELF.
+linux* | k*bsd*-gnu)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig -n $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  # This implies no fast_install, which is unacceptable.
+  # Some rework will be needed to allow for fast_install
+  # before this can be enabled.
+  hardcode_into_libs=yes
+
+  # Append ld.so.conf contents to the search path
+  if test -f /etc/ld.so.conf; then
+    lt_ld_extra=`awk '/^include / { system(sprintf("cd /etc; cat %s", \$2)); skip = 1; } { if (!skip) print \$0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;s/[:,	]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;/^$/d' | tr '\n' ' '`
+    sys_lib_dlsearch_path_spec="/lib /usr/lib $lt_ld_extra"
+  fi
+
+  # We used to test for /lib/ld.so.1 and disable shared libraries on
+  # powerpc, because MkLinux only supported shared libraries with the
+  # GNU dynamic linker.  Since this was broken with cross compilers,
+  # most powerpc-linux boxes support dynamic linking these days and
+  # people can always --disable-shared, the test was removed, and we
+  # assume the GNU/Linux dynamic linker is in use.
+  dynamic_linker='GNU/Linux ld.so'
+  ;;
+
+netbsdelf*-gnu)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  dynamic_linker='NetBSD ld.elf_so'
+  ;;
+
+netbsd*)
+  version_type=sunos
+  need_lib_prefix=no
+  need_version=no
+  if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+    finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
+    dynamic_linker='NetBSD (a.out) ld.so'
+  else
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    dynamic_linker='NetBSD ld.elf_so'
+  fi
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  hardcode_into_libs=yes
+  ;;
+
+newsos6)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  ;;
+
+nto-qnx*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  ;;
+
+openbsd*)
+  version_type=sunos
+  sys_lib_dlsearch_path_spec="/usr/lib"
+  need_lib_prefix=no
+  # Some older versions of OpenBSD (3.3 at least) *do* need versioned libs.
+  case $host_os in
+    openbsd3.3 | openbsd3.3.*) need_version=yes ;;
+    *)                         need_version=no  ;;
+  esac
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  if test -z "`echo __ELF__ | $CC -E - | grep __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+    case $host_os in
+      openbsd2.[89] | openbsd2.[89].*)
+	shlibpath_overrides_runpath=no
+	;;
+      *)
+	shlibpath_overrides_runpath=yes
+	;;
+      esac
+  else
+    shlibpath_overrides_runpath=yes
+  fi
+  ;;
+
+os2*)
+  libname_spec='$name'
+  shrext_cmds=".dll"
+  need_lib_prefix=no
+  library_names_spec='$libname${shared_ext} $libname.a'
+  dynamic_linker='OS/2 ld.exe'
+  shlibpath_var=LIBPATH
+  ;;
+
+osf3* | osf4* | osf5*)
+  version_type=osf
+  need_lib_prefix=no
+  need_version=no
+  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  shlibpath_var=LD_LIBRARY_PATH
+  sys_lib_search_path_spec="/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib"
+  sys_lib_dlsearch_path_spec="$sys_lib_search_path_spec"
+  ;;
+
+solaris*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  hardcode_into_libs=yes
+  # ldd complains unless libraries are executable
+  postinstall_cmds='chmod +x $lib'
+  ;;
+
+sunos4*)
+  version_type=sunos
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+  finish_cmds='PATH="\$PATH:/usr/etc" ldconfig $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  if test "$with_gnu_ld" = yes; then
+    need_lib_prefix=no
+  fi
+  need_version=yes
+  ;;
+
+sysv4 | sysv4.3*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  case $host_vendor in
+    sni)
+      shlibpath_overrides_runpath=no
+      need_lib_prefix=no
+      export_dynamic_flag_spec='${wl}-Blargedynsym'
+      runpath_var=LD_RUN_PATH
+      ;;
+    siemens)
+      need_lib_prefix=no
+      ;;
+    motorola)
+      need_lib_prefix=no
+      need_version=no
+      shlibpath_overrides_runpath=no
+      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'
+      ;;
+  esac
+  ;;
+
+sysv4*MP*)
+  if test -d /usr/nec ;then
+    version_type=linux
+    library_names_spec='$libname${shared_ext}.$versuffix $libname${shared_ext}.$major $libname${shared_ext}'
+    soname_spec='$libname${shared_ext}.$major'
+    shlibpath_var=LD_LIBRARY_PATH
+  fi
+  ;;
+
+sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
+  version_type=freebsd-elf
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  hardcode_into_libs=yes
+  if test "$with_gnu_ld" = yes; then
+    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'
+    shlibpath_overrides_runpath=no
+  else
+    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'
+    shlibpath_overrides_runpath=yes
+    case $host_os in
+      sco3.2v5*)
+        sys_lib_search_path_spec="$sys_lib_search_path_spec /lib"
+	;;
+    esac
+  fi
+  sys_lib_dlsearch_path_spec='/usr/lib'
+  ;;
+
+uts4*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  ;;
+
+*)
+  dynamic_linker=no
+  ;;
+esac
+{ echo "$as_me:$LINENO: result: $dynamic_linker" >&5
+echo "${ECHO_T}$dynamic_linker" >&6; }
+test "$dynamic_linker" = no && can_build_shared=no
+
+variables_saved_for_relink="PATH $shlibpath_var $runpath_var"
+if test "$GCC" = yes; then
+  variables_saved_for_relink="$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH"
+fi
+
+{ echo "$as_me:$LINENO: checking how to hardcode library paths into programs" >&5
+echo $ECHO_N "checking how to hardcode library paths into programs... $ECHO_C" >&6; }
+hardcode_action=
+if test -n "$hardcode_libdir_flag_spec" || \
+   test -n "$runpath_var" || \
+   test "X$hardcode_automatic" = "Xyes" ; then
+
+  # We can hardcode non-existant directories.
+  if test "$hardcode_direct" != no &&
+     # If the only mechanism to avoid hardcoding is shlibpath_var, we
+     # have to relink, otherwise we might link with an installed library
+     # when we should be linking with a yet-to-be-installed one
+     ## test "$_LT_AC_TAGVAR(hardcode_shlibpath_var, )" != no &&
+     test "$hardcode_minus_L" != no; then
+    # Linking always hardcodes the temporary library directory.
+    hardcode_action=relink
+  else
+    # We can link without hardcoding, and we can hardcode nonexisting dirs.
+    hardcode_action=immediate
+  fi
+else
+  # We cannot hardcode anything, or else we can only hardcode existing
+  # directories.
+  hardcode_action=unsupported
+fi
+{ echo "$as_me:$LINENO: result: $hardcode_action" >&5
+echo "${ECHO_T}$hardcode_action" >&6; }
+
+if test "$hardcode_action" = relink; then
+  # Fast installation is not supported
+  enable_fast_install=no
+elif test "$shlibpath_overrides_runpath" = yes ||
+     test "$enable_shared" = no; then
+  # Fast installation is not necessary
+  enable_fast_install=needless
+fi
+
+striplib=
+old_striplib=
+{ echo "$as_me:$LINENO: checking whether stripping libraries is possible" >&5
+echo $ECHO_N "checking whether stripping libraries is possible... $ECHO_C" >&6; }
+if test -n "$STRIP" && $STRIP -V 2>&1 | grep "GNU strip" >/dev/null; then
+  test -z "$old_striplib" && old_striplib="$STRIP --strip-debug"
+  test -z "$striplib" && striplib="$STRIP --strip-unneeded"
+  { echo "$as_me:$LINENO: result: yes" >&5
+echo "${ECHO_T}yes" >&6; }
+else
+# FIXME - insert some real tests, host_os isn't really good enough
+  case $host_os in
+   darwin*)
+       if test -n "$STRIP" ; then
+         striplib="$STRIP -x"
+         { echo "$as_me:$LINENO: result: yes" >&5
+echo "${ECHO_T}yes" >&6; }
+       else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+       ;;
+   *)
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+    ;;
+  esac
+fi
+
+if test "x$enable_dlopen" != xyes; then
+  enable_dlopen=unknown
+  enable_dlopen_self=unknown
+  enable_dlopen_self_static=unknown
+else
+  lt_cv_dlopen=no
+  lt_cv_dlopen_libs=
+
+  case $host_os in
+  beos*)
+    lt_cv_dlopen="load_add_on"
+    lt_cv_dlopen_libs=
+    lt_cv_dlopen_self=yes
+    ;;
+
+  mingw* | pw32*)
+    lt_cv_dlopen="LoadLibrary"
+    lt_cv_dlopen_libs=
+   ;;
+
+  cygwin*)
+    lt_cv_dlopen="dlopen"
+    lt_cv_dlopen_libs=
+   ;;
+
+  darwin*)
+  # if libdl is installed we need to link against it
+    { echo "$as_me:$LINENO: checking for dlopen in -ldl" >&5
+echo $ECHO_N "checking for dlopen in -ldl... $ECHO_C" >&6; }
+if test "${ac_cv_lib_dl_dlopen+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-ldl  $LIBS"
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char dlopen ();
+int
+main ()
+{
+return dlopen ();
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+  ac_cv_lib_dl_dlopen=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_cv_lib_dl_dlopen=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_lib_dl_dlopen" >&5
+echo "${ECHO_T}$ac_cv_lib_dl_dlopen" >&6; }
+if test $ac_cv_lib_dl_dlopen = yes; then
+  lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"
+else
+
+    lt_cv_dlopen="dyld"
+    lt_cv_dlopen_libs=
+    lt_cv_dlopen_self=yes
+
+fi
+
+   ;;
+
+  *)
+    { echo "$as_me:$LINENO: checking for shl_load" >&5
+echo $ECHO_N "checking for shl_load... $ECHO_C" >&6; }
+if test "${ac_cv_func_shl_load+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+/* Define shl_load to an innocuous variant, in case <limits.h> declares shl_load.
+   For example, HP-UX 11i <limits.h> declares gettimeofday.  */
+#define shl_load innocuous_shl_load
+
+/* System header to define __stub macros and hopefully few prototypes,
+    which can conflict with char shl_load (); below.
+    Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+    <limits.h> exists even on freestanding compilers.  */
+
+#ifdef __STDC__
+# include <limits.h>
+#else
+# include <assert.h>
+#endif
+
+#undef shl_load
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char shl_load ();
+/* The GNU C library defines this for functions which it implements
+    to always fail with ENOSYS.  Some functions are actually named
+    something starting with __ and the normal name is an alias.  */
+#if defined __stub_shl_load || defined __stub___shl_load
+choke me
+#endif
+
+int
+main ()
+{
+return shl_load ();
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+  ac_cv_func_shl_load=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_cv_func_shl_load=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_func_shl_load" >&5
+echo "${ECHO_T}$ac_cv_func_shl_load" >&6; }
+if test $ac_cv_func_shl_load = yes; then
+  lt_cv_dlopen="shl_load"
+else
+  { echo "$as_me:$LINENO: checking for shl_load in -ldld" >&5
+echo $ECHO_N "checking for shl_load in -ldld... $ECHO_C" >&6; }
+if test "${ac_cv_lib_dld_shl_load+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-ldld  $LIBS"
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char shl_load ();
+int
+main ()
+{
+return shl_load ();
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+  ac_cv_lib_dld_shl_load=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_cv_lib_dld_shl_load=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_lib_dld_shl_load" >&5
+echo "${ECHO_T}$ac_cv_lib_dld_shl_load" >&6; }
+if test $ac_cv_lib_dld_shl_load = yes; then
+  lt_cv_dlopen="shl_load" lt_cv_dlopen_libs="-dld"
+else
+  { echo "$as_me:$LINENO: checking for dlopen" >&5
+echo $ECHO_N "checking for dlopen... $ECHO_C" >&6; }
+if test "${ac_cv_func_dlopen+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+/* Define dlopen to an innocuous variant, in case <limits.h> declares dlopen.
+   For example, HP-UX 11i <limits.h> declares gettimeofday.  */
+#define dlopen innocuous_dlopen
+
+/* System header to define __stub macros and hopefully few prototypes,
+    which can conflict with char dlopen (); below.
+    Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+    <limits.h> exists even on freestanding compilers.  */
+
+#ifdef __STDC__
+# include <limits.h>
+#else
+# include <assert.h>
+#endif
+
+#undef dlopen
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char dlopen ();
+/* The GNU C library defines this for functions which it implements
+    to always fail with ENOSYS.  Some functions are actually named
+    something starting with __ and the normal name is an alias.  */
+#if defined __stub_dlopen || defined __stub___dlopen
+choke me
+#endif
+
+int
+main ()
+{
+return dlopen ();
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+  ac_cv_func_dlopen=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_cv_func_dlopen=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_func_dlopen" >&5
+echo "${ECHO_T}$ac_cv_func_dlopen" >&6; }
+if test $ac_cv_func_dlopen = yes; then
+  lt_cv_dlopen="dlopen"
+else
+  { echo "$as_me:$LINENO: checking for dlopen in -ldl" >&5
+echo $ECHO_N "checking for dlopen in -ldl... $ECHO_C" >&6; }
+if test "${ac_cv_lib_dl_dlopen+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-ldl  $LIBS"
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char dlopen ();
+int
+main ()
+{
+return dlopen ();
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+  ac_cv_lib_dl_dlopen=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_cv_lib_dl_dlopen=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_lib_dl_dlopen" >&5
+echo "${ECHO_T}$ac_cv_lib_dl_dlopen" >&6; }
+if test $ac_cv_lib_dl_dlopen = yes; then
+  lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"
+else
+  { echo "$as_me:$LINENO: checking for dlopen in -lsvld" >&5
+echo $ECHO_N "checking for dlopen in -lsvld... $ECHO_C" >&6; }
+if test "${ac_cv_lib_svld_dlopen+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-lsvld  $LIBS"
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char dlopen ();
+int
+main ()
+{
+return dlopen ();
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+  ac_cv_lib_svld_dlopen=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_cv_lib_svld_dlopen=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_lib_svld_dlopen" >&5
+echo "${ECHO_T}$ac_cv_lib_svld_dlopen" >&6; }
+if test $ac_cv_lib_svld_dlopen = yes; then
+  lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-lsvld"
+else
+  { echo "$as_me:$LINENO: checking for dld_link in -ldld" >&5
+echo $ECHO_N "checking for dld_link in -ldld... $ECHO_C" >&6; }
+if test "${ac_cv_lib_dld_dld_link+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-ldld  $LIBS"
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char dld_link ();
+int
+main ()
+{
+return dld_link ();
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+  ac_cv_lib_dld_dld_link=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_cv_lib_dld_dld_link=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_lib_dld_dld_link" >&5
+echo "${ECHO_T}$ac_cv_lib_dld_dld_link" >&6; }
+if test $ac_cv_lib_dld_dld_link = yes; then
+  lt_cv_dlopen="dld_link" lt_cv_dlopen_libs="-dld"
+fi
+
+
+fi
+
+
+fi
+
+
+fi
+
+
+fi
+
+
+fi
+
+    ;;
+  esac
+
+  if test "x$lt_cv_dlopen" != xno; then
+    enable_dlopen=yes
+  else
+    enable_dlopen=no
+  fi
+
+  case $lt_cv_dlopen in
+  dlopen)
+    save_CPPFLAGS="$CPPFLAGS"
+    test "x$ac_cv_header_dlfcn_h" = xyes && CPPFLAGS="$CPPFLAGS -DHAVE_DLFCN_H"
+
+    save_LDFLAGS="$LDFLAGS"
+    wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $export_dynamic_flag_spec\"
+
+    save_LIBS="$LIBS"
+    LIBS="$lt_cv_dlopen_libs $LIBS"
+
+    { echo "$as_me:$LINENO: checking whether a program can dlopen itself" >&5
+echo $ECHO_N "checking whether a program can dlopen itself... $ECHO_C" >&6; }
+if test "${lt_cv_dlopen_self+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  	  if test "$cross_compiling" = yes; then :
+  lt_cv_dlopen_self=cross
+else
+  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
+  lt_status=$lt_dlunknown
+  cat > conftest.$ac_ext <<EOF
+#line 9763 "configure"
+#include "confdefs.h"
+
+#if HAVE_DLFCN_H
+#include <dlfcn.h>
+#endif
+
+#include <stdio.h>
+
+#ifdef RTLD_GLOBAL
+#  define LT_DLGLOBAL		RTLD_GLOBAL
+#else
+#  ifdef DL_GLOBAL
+#    define LT_DLGLOBAL		DL_GLOBAL
+#  else
+#    define LT_DLGLOBAL		0
+#  endif
+#endif
+
+/* We may have to define LT_DLLAZY_OR_NOW in the command line if we
+   find out it does not work in some platform. */
+#ifndef LT_DLLAZY_OR_NOW
+#  ifdef RTLD_LAZY
+#    define LT_DLLAZY_OR_NOW		RTLD_LAZY
+#  else
+#    ifdef DL_LAZY
+#      define LT_DLLAZY_OR_NOW		DL_LAZY
+#    else
+#      ifdef RTLD_NOW
+#        define LT_DLLAZY_OR_NOW	RTLD_NOW
+#      else
+#        ifdef DL_NOW
+#          define LT_DLLAZY_OR_NOW	DL_NOW
+#        else
+#          define LT_DLLAZY_OR_NOW	0
+#        endif
+#      endif
+#    endif
+#  endif
+#endif
+
+#ifdef __cplusplus
+extern "C" void exit (int);
+#endif
+
+void fnord() { int i=42;}
+int main ()
+{
+  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);
+  int status = $lt_dlunknown;
+
+  if (self)
+    {
+      if (dlsym (self,"fnord"))       status = $lt_dlno_uscore;
+      else if (dlsym( self,"_fnord")) status = $lt_dlneed_uscore;
+      /* dlclose (self); */
+    }
+  else
+    puts (dlerror ());
+
+    exit (status);
+}
+EOF
+  if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
+  (eval $ac_link) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && test -s conftest${ac_exeext} 2>/dev/null; then
+    (./conftest; exit; ) >&5 2>/dev/null
+    lt_status=$?
+    case x$lt_status in
+      x$lt_dlno_uscore) lt_cv_dlopen_self=yes ;;
+      x$lt_dlneed_uscore) lt_cv_dlopen_self=yes ;;
+      x$lt_dlunknown|x*) lt_cv_dlopen_self=no ;;
+    esac
+  else :
+    # compilation failed
+    lt_cv_dlopen_self=no
+  fi
+fi
+rm -fr conftest*
+
+
+fi
+{ echo "$as_me:$LINENO: result: $lt_cv_dlopen_self" >&5
+echo "${ECHO_T}$lt_cv_dlopen_self" >&6; }
+
+    if test "x$lt_cv_dlopen_self" = xyes; then
+      wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $lt_prog_compiler_static\"
+      { echo "$as_me:$LINENO: checking whether a statically linked program can dlopen itself" >&5
+echo $ECHO_N "checking whether a statically linked program can dlopen itself... $ECHO_C" >&6; }
+if test "${lt_cv_dlopen_self_static+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  	  if test "$cross_compiling" = yes; then :
+  lt_cv_dlopen_self_static=cross
+else
+  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
+  lt_status=$lt_dlunknown
+  cat > conftest.$ac_ext <<EOF
+#line 9863 "configure"
+#include "confdefs.h"
+
+#if HAVE_DLFCN_H
+#include <dlfcn.h>
+#endif
+
+#include <stdio.h>
+
+#ifdef RTLD_GLOBAL
+#  define LT_DLGLOBAL		RTLD_GLOBAL
+#else
+#  ifdef DL_GLOBAL
+#    define LT_DLGLOBAL		DL_GLOBAL
+#  else
+#    define LT_DLGLOBAL		0
+#  endif
+#endif
+
+/* We may have to define LT_DLLAZY_OR_NOW in the command line if we
+   find out it does not work in some platform. */
+#ifndef LT_DLLAZY_OR_NOW
+#  ifdef RTLD_LAZY
+#    define LT_DLLAZY_OR_NOW		RTLD_LAZY
+#  else
+#    ifdef DL_LAZY
+#      define LT_DLLAZY_OR_NOW		DL_LAZY
+#    else
+#      ifdef RTLD_NOW
+#        define LT_DLLAZY_OR_NOW	RTLD_NOW
+#      else
+#        ifdef DL_NOW
+#          define LT_DLLAZY_OR_NOW	DL_NOW
+#        else
+#          define LT_DLLAZY_OR_NOW	0
+#        endif
+#      endif
+#    endif
+#  endif
+#endif
+
+#ifdef __cplusplus
+extern "C" void exit (int);
+#endif
+
+void fnord() { int i=42;}
+int main ()
+{
+  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);
+  int status = $lt_dlunknown;
+
+  if (self)
+    {
+      if (dlsym (self,"fnord"))       status = $lt_dlno_uscore;
+      else if (dlsym( self,"_fnord")) status = $lt_dlneed_uscore;
+      /* dlclose (self); */
+    }
+  else
+    puts (dlerror ());
+
+    exit (status);
+}
+EOF
+  if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
+  (eval $ac_link) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && test -s conftest${ac_exeext} 2>/dev/null; then
+    (./conftest; exit; ) >&5 2>/dev/null
+    lt_status=$?
+    case x$lt_status in
+      x$lt_dlno_uscore) lt_cv_dlopen_self_static=yes ;;
+      x$lt_dlneed_uscore) lt_cv_dlopen_self_static=yes ;;
+      x$lt_dlunknown|x*) lt_cv_dlopen_self_static=no ;;
+    esac
+  else :
+    # compilation failed
+    lt_cv_dlopen_self_static=no
+  fi
+fi
+rm -fr conftest*
+
+
+fi
+{ echo "$as_me:$LINENO: result: $lt_cv_dlopen_self_static" >&5
+echo "${ECHO_T}$lt_cv_dlopen_self_static" >&6; }
+    fi
+
+    CPPFLAGS="$save_CPPFLAGS"
+    LDFLAGS="$save_LDFLAGS"
+    LIBS="$save_LIBS"
+    ;;
+  esac
+
+  case $lt_cv_dlopen_self in
+  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;
+  *) enable_dlopen_self=unknown ;;
+  esac
+
+  case $lt_cv_dlopen_self_static in
+  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;
+  *) enable_dlopen_self_static=unknown ;;
+  esac
+fi
+
+
+# Report which library types will actually be built
+{ echo "$as_me:$LINENO: checking if libtool supports shared libraries" >&5
+echo $ECHO_N "checking if libtool supports shared libraries... $ECHO_C" >&6; }
+{ echo "$as_me:$LINENO: result: $can_build_shared" >&5
+echo "${ECHO_T}$can_build_shared" >&6; }
+
+{ echo "$as_me:$LINENO: checking whether to build shared libraries" >&5
+echo $ECHO_N "checking whether to build shared libraries... $ECHO_C" >&6; }
+test "$can_build_shared" = "no" && enable_shared=no
+
+# On AIX, shared libraries and static libraries use the same namespace, and
+# are all built from PIC.
+case $host_os in
+aix3*)
+  test "$enable_shared" = yes && enable_static=no
+  if test -n "$RANLIB"; then
+    archive_cmds="$archive_cmds~\$RANLIB \$lib"
+    postinstall_cmds='$RANLIB $lib'
+  fi
+  ;;
+
+aix4* | aix5*)
+  if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
+    test "$enable_shared" = yes && enable_static=no
+  fi
+    ;;
+esac
+{ echo "$as_me:$LINENO: result: $enable_shared" >&5
+echo "${ECHO_T}$enable_shared" >&6; }
+
+{ echo "$as_me:$LINENO: checking whether to build static libraries" >&5
+echo $ECHO_N "checking whether to build static libraries... $ECHO_C" >&6; }
+# Make sure either enable_shared or enable_static is yes.
+test "$enable_shared" = yes || enable_static=yes
+{ echo "$as_me:$LINENO: result: $enable_static" >&5
+echo "${ECHO_T}$enable_static" >&6; }
+
+# The else clause should only fire when bootstrapping the
+# libtool distribution, otherwise you forgot to ship ltmain.sh
+# with your package, and you will get complaints that there are
+# no rules to generate ltmain.sh.
+if test -f "$ltmain"; then
+  # See if we are running on zsh, and set the options which allow our commands through
+  # without removal of \ escapes.
+  if test -n "${ZSH_VERSION+set}" ; then
+    setopt NO_GLOB_SUBST
+  fi
+  # Now quote all the things that may contain metacharacters while being
+  # careful not to overquote the AC_SUBSTed values.  We take copies of the
+  # variables and quote the copies for generation of the libtool script.
+  for var in echo old_CC old_CFLAGS AR AR_FLAGS EGREP RANLIB LN_S LTCC LTCFLAGS NM \
+    SED SHELL STRIP \
+    libname_spec library_names_spec soname_spec extract_expsyms_cmds \
+    old_striplib striplib file_magic_cmd finish_cmds finish_eval \
+    deplibs_check_method reload_flag reload_cmds need_locks \
+    lt_cv_sys_global_symbol_pipe lt_cv_sys_global_symbol_to_cdecl \
+    lt_cv_sys_global_symbol_to_c_name_address \
+    sys_lib_search_path_spec sys_lib_dlsearch_path_spec \
+    old_postinstall_cmds old_postuninstall_cmds \
+    compiler \
+    CC \
+    LD \
+    lt_prog_compiler_wl \
+    lt_prog_compiler_pic \
+    lt_prog_compiler_static \
+    lt_prog_compiler_no_builtin_flag \
+    export_dynamic_flag_spec \
+    thread_safe_flag_spec \
+    whole_archive_flag_spec \
+    enable_shared_with_static_runtimes \
+    old_archive_cmds \
+    old_archive_from_new_cmds \
+    predep_objects \
+    postdep_objects \
+    predeps \
+    postdeps \
+    compiler_lib_search_path \
+    archive_cmds \
+    archive_expsym_cmds \
+    postinstall_cmds \
+    postuninstall_cmds \
+    old_archive_from_expsyms_cmds \
+    allow_undefined_flag \
+    no_undefined_flag \
+    export_symbols_cmds \
+    hardcode_libdir_flag_spec \
+    hardcode_libdir_flag_spec_ld \
+    hardcode_libdir_separator \
+    hardcode_automatic \
+    module_cmds \
+    module_expsym_cmds \
+    lt_cv_prog_compiler_c_o \
+    exclude_expsyms \
+    include_expsyms; do
+
+    case $var in
+    old_archive_cmds | \
+    old_archive_from_new_cmds | \
+    archive_cmds | \
+    archive_expsym_cmds | \
+    module_cmds | \
+    module_expsym_cmds | \
+    old_archive_from_expsyms_cmds | \
+    export_symbols_cmds | \
+    extract_expsyms_cmds | reload_cmds | finish_cmds | \
+    postinstall_cmds | postuninstall_cmds | \
+    old_postinstall_cmds | old_postuninstall_cmds | \
+    sys_lib_search_path_spec | sys_lib_dlsearch_path_spec)
+      # Double-quote double-evaled strings.
+      eval "lt_$var=\\\"\`\$echo \"X\$$var\" | \$Xsed -e \"\$double_quote_subst\" -e \"\$sed_quote_subst\" -e \"\$delay_variable_subst\"\`\\\""
+      ;;
+    *)
+      eval "lt_$var=\\\"\`\$echo \"X\$$var\" | \$Xsed -e \"\$sed_quote_subst\"\`\\\""
+      ;;
+    esac
+  done
+
+  case $lt_echo in
+  *'\$0 --fallback-echo"')
+    lt_echo=`$echo "X$lt_echo" | $Xsed -e 's/\\\\\\\$0 --fallback-echo"$/$0 --fallback-echo"/'`
+    ;;
+  esac
+
+cfgfile="${ofile}T"
+  trap "$rm \"$cfgfile\"; exit 1" 1 2 15
+  $rm -f "$cfgfile"
+  { echo "$as_me:$LINENO: creating $ofile" >&5
+echo "$as_me: creating $ofile" >&6;}
+
+  cat <<__EOF__ >> "$cfgfile"
+#! $SHELL
+
+# `$echo "$cfgfile" | sed 's%^.*/%%'` - Provide generalized library-building support services.
+# Generated automatically by $PROGRAM (GNU $PACKAGE $VERSION$TIMESTAMP)
+# NOTE: Changes made to this file will be lost: look at ltmain.sh.
+#
+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001
+# Free Software Foundation, Inc.
+#
+# This file is part of GNU Libtool:
+# Originally by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+#
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+# A sed program that does not truncate output.
+SED=$lt_SED
+
+# Sed that helps us avoid accidentally triggering echo(1) options like -n.
+Xsed="$SED -e 1s/^X//"
+
+# The HP-UX ksh and POSIX shell print the target directory to stdout
+# if CDPATH is set.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+# The names of the tagged configurations supported by this script.
+available_tags=
+
+# ### BEGIN LIBTOOL CONFIG
+
+# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
+
+# Shell to use when invoking shell scripts.
+SHELL=$lt_SHELL
+
+# Whether or not to build shared libraries.
+build_libtool_libs=$enable_shared
+
+# Whether or not to build static libraries.
+build_old_libs=$enable_static
+
+# Whether or not to add -lc for building shared libraries.
+build_libtool_need_lc=$archive_cmds_need_lc
+
+# Whether or not to disallow shared libs when runtime libs are static
+allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes
+
+# Whether or not to optimize for fast installation.
+fast_install=$enable_fast_install
+
+# The host system.
+host_alias=$host_alias
+host=$host
+host_os=$host_os
+
+# The build system.
+build_alias=$build_alias
+build=$build
+build_os=$build_os
+
+# An echo program that does not interpret backslashes.
+echo=$lt_echo
+
+# The archiver.
+AR=$lt_AR
+AR_FLAGS=$lt_AR_FLAGS
+
+# A C compiler.
+LTCC=$lt_LTCC
+
+# LTCC compiler flags.
+LTCFLAGS=$lt_LTCFLAGS
+
+# A language-specific compiler.
+CC=$lt_compiler
+
+# Is the compiler the GNU C compiler?
+with_gcc=$GCC
+
+# An ERE matcher.
+EGREP=$lt_EGREP
+
+# The linker used to build libraries.
+LD=$lt_LD
+
+# Whether we need hard or soft links.
+LN_S=$lt_LN_S
+
+# A BSD-compatible nm program.
+NM=$lt_NM
+
+# A symbol stripping program
+STRIP=$lt_STRIP
+
+# Used to examine libraries when file_magic_cmd begins "file"
+MAGIC_CMD=$MAGIC_CMD
+
+# Used on cygwin: DLL creation program.
+DLLTOOL="$DLLTOOL"
+
+# Used on cygwin: object dumper.
+OBJDUMP="$OBJDUMP"
+
+# Used on cygwin: assembler.
+AS="$AS"
+
+# The name of the directory that contains temporary libtool files.
+objdir=$objdir
+
+# How to create reloadable object files.
+reload_flag=$lt_reload_flag
+reload_cmds=$lt_reload_cmds
+
+# How to pass a linker flag through the compiler.
+wl=$lt_lt_prog_compiler_wl
+
+# Object file suffix (normally "o").
+objext="$ac_objext"
+
+# Old archive suffix (normally "a").
+libext="$libext"
+
+# Shared library suffix (normally ".so").
+shrext_cmds='$shrext_cmds'
+
+# Executable file suffix (normally "").
+exeext="$exeext"
+
+# Additional compiler flags for building library objects.
+pic_flag=$lt_lt_prog_compiler_pic
+pic_mode=$pic_mode
+
+# What is the maximum length of a command?
+max_cmd_len=$lt_cv_sys_max_cmd_len
+
+# Does compiler simultaneously support -c and -o options?
+compiler_c_o=$lt_lt_cv_prog_compiler_c_o
+
+# Must we lock files when doing compilation?
+need_locks=$lt_need_locks
+
+# Do we need the lib prefix for modules?
+need_lib_prefix=$need_lib_prefix
+
+# Do we need a version for libraries?
+need_version=$need_version
+
+# Whether dlopen is supported.
+dlopen_support=$enable_dlopen
+
+# Whether dlopen of programs is supported.
+dlopen_self=$enable_dlopen_self
+
+# Whether dlopen of statically linked programs is supported.
+dlopen_self_static=$enable_dlopen_self_static
+
+# Compiler flag to prevent dynamic linking.
+link_static_flag=$lt_lt_prog_compiler_static
+
+# Compiler flag to turn off builtin functions.
+no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag
+
+# Compiler flag to allow reflexive dlopens.
+export_dynamic_flag_spec=$lt_export_dynamic_flag_spec
+
+# Compiler flag to generate shared objects directly from archives.
+whole_archive_flag_spec=$lt_whole_archive_flag_spec
+
+# Compiler flag to generate thread-safe objects.
+thread_safe_flag_spec=$lt_thread_safe_flag_spec
+
+# Library versioning type.
+version_type=$version_type
+
+# Format of library name prefix.
+libname_spec=$lt_libname_spec
+
+# List of archive names.  First name is the real one, the rest are links.
+# The last name is the one that the linker finds with -lNAME.
+library_names_spec=$lt_library_names_spec
+
+# The coded name of the library, if different from the real name.
+soname_spec=$lt_soname_spec
+
+# Commands used to build and install an old-style archive.
+RANLIB=$lt_RANLIB
+old_archive_cmds=$lt_old_archive_cmds
+old_postinstall_cmds=$lt_old_postinstall_cmds
+old_postuninstall_cmds=$lt_old_postuninstall_cmds
+
+# Create an old-style archive from a shared archive.
+old_archive_from_new_cmds=$lt_old_archive_from_new_cmds
+
+# Create a temporary old-style archive to link instead of a shared archive.
+old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds
+
+# Commands used to build and install a shared archive.
+archive_cmds=$lt_archive_cmds
+archive_expsym_cmds=$lt_archive_expsym_cmds
+postinstall_cmds=$lt_postinstall_cmds
+postuninstall_cmds=$lt_postuninstall_cmds
+
+# Commands used to build a loadable module (assumed same as above if empty)
+module_cmds=$lt_module_cmds
+module_expsym_cmds=$lt_module_expsym_cmds
+
+# Commands to strip libraries.
+old_striplib=$lt_old_striplib
+striplib=$lt_striplib
+
+# Dependencies to place before the objects being linked to create a
+# shared library.
+predep_objects=$lt_predep_objects
+
+# Dependencies to place after the objects being linked to create a
+# shared library.
+postdep_objects=$lt_postdep_objects
+
+# Dependencies to place before the objects being linked to create a
+# shared library.
+predeps=$lt_predeps
+
+# Dependencies to place after the objects being linked to create a
+# shared library.
+postdeps=$lt_postdeps
+
+# The library search path used internally by the compiler when linking
+# a shared library.
+compiler_lib_search_path=$lt_compiler_lib_search_path
+
+# Method to check whether dependent libraries are shared objects.
+deplibs_check_method=$lt_deplibs_check_method
+
+# Command to use when deplibs_check_method == file_magic.
+file_magic_cmd=$lt_file_magic_cmd
+
+# Flag that allows shared libraries with undefined symbols to be built.
+allow_undefined_flag=$lt_allow_undefined_flag
+
+# Flag that forces no undefined symbols.
+no_undefined_flag=$lt_no_undefined_flag
+
+# Commands used to finish a libtool library installation in a directory.
+finish_cmds=$lt_finish_cmds
+
+# Same as above, but a single script fragment to be evaled but not shown.
+finish_eval=$lt_finish_eval
+
+# Take the output of nm and produce a listing of raw symbols and C names.
+global_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe
+
+# Transform the output of nm in a proper C declaration
+global_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl
+
+# Transform the output of nm in a C name address pair
+global_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address
+
+# This is the shared library runtime path variable.
+runpath_var=$runpath_var
+
+# This is the shared library path variable.
+shlibpath_var=$shlibpath_var
+
+# Is shlibpath searched before the hard-coded library search path?
+shlibpath_overrides_runpath=$shlibpath_overrides_runpath
+
+# How to hardcode a shared library path into an executable.
+hardcode_action=$hardcode_action
+
+# Whether we should hardcode library paths into libraries.
+hardcode_into_libs=$hardcode_into_libs
+
+# Flag to hardcode \$libdir into a binary during linking.
+# This must work even if \$libdir does not exist.
+hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec
+
+# If ld is used when linking, flag to hardcode \$libdir into
+# a binary during linking. This must work even if \$libdir does
+# not exist.
+hardcode_libdir_flag_spec_ld=$lt_hardcode_libdir_flag_spec_ld
+
+# Whether we need a single -rpath flag with a separated argument.
+hardcode_libdir_separator=$lt_hardcode_libdir_separator
+
+# Set to yes if using DIR/libNAME${shared_ext} during linking hardcodes DIR into the
+# resulting binary.
+hardcode_direct=$hardcode_direct
+
+# Set to yes if using the -LDIR flag during linking hardcodes DIR into the
+# resulting binary.
+hardcode_minus_L=$hardcode_minus_L
+
+# Set to yes if using SHLIBPATH_VAR=DIR during linking hardcodes DIR into
+# the resulting binary.
+hardcode_shlibpath_var=$hardcode_shlibpath_var
+
+# Set to yes if building a shared library automatically hardcodes DIR into the library
+# and all subsequent libraries and executables linked against it.
+hardcode_automatic=$hardcode_automatic
+
+# Variables whose values should be saved in libtool wrapper scripts and
+# restored at relink time.
+variables_saved_for_relink="$variables_saved_for_relink"
+
+# Whether libtool must link a program against all its dependency libraries.
+link_all_deplibs=$link_all_deplibs
+
+# Compile-time system search path for libraries
+sys_lib_search_path_spec=$lt_sys_lib_search_path_spec
+
+# Run-time system search path for libraries
+sys_lib_dlsearch_path_spec=$lt_sys_lib_dlsearch_path_spec
+
+# Fix the shell variable \$srcfile for the compiler.
+fix_srcfile_path="$fix_srcfile_path"
+
+# Set to yes if exported symbols are required.
+always_export_symbols=$always_export_symbols
+
+# The commands to list exported symbols.
+export_symbols_cmds=$lt_export_symbols_cmds
+
+# The commands to extract the exported symbol list from a shared archive.
+extract_expsyms_cmds=$lt_extract_expsyms_cmds
+
+# Symbols that should not be listed in the preloaded symbols.
+exclude_expsyms=$lt_exclude_expsyms
+
+# Symbols that must always be exported.
+include_expsyms=$lt_include_expsyms
+
+# ### END LIBTOOL CONFIG
+
+__EOF__
+
+
+  case $host_os in
+  aix3*)
+    cat <<\EOF >> "$cfgfile"
+
+# AIX sometimes has problems with the GCC collect2 program.  For some
+# reason, if we set the COLLECT_NAMES environment variable, the problems
+# vanish in a puff of smoke.
+if test "X${COLLECT_NAMES+set}" != Xset; then
+  COLLECT_NAMES=
+  export COLLECT_NAMES
+fi
+EOF
+    ;;
+  esac
+
+  # We use sed instead of cat because bash on DJGPP gets confused if
+  # if finds mixed CR/LF and LF-only lines.  Since sed operates in
+  # text mode, it properly converts lines to CR/LF.  This bash problem
+  # is reportedly fixed, but why not run on old versions too?
+  sed '$q' "$ltmain" >> "$cfgfile" || (rm -f "$cfgfile"; exit 1)
+
+  mv -f "$cfgfile" "$ofile" || \
+    (rm -f "$ofile" && cp "$cfgfile" "$ofile" && rm -f "$cfgfile")
+  chmod +x "$ofile"
+
+else
+  # If there is no Makefile yet, we rely on a make rule to execute
+  # `config.status --recheck' to rerun these tests and create the
+  # libtool script then.
+  ltmain_in=`echo $ltmain | sed -e 's/\.sh$/.in/'`
+  if test -f "$ltmain_in"; then
+    test -f Makefile && make "$ltmain"
+  fi
+fi
+
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+CC="$lt_save_CC"
+
+
+# Check whether --with-tags was given.
+if test "${with_tags+set}" = set; then
+  withval=$with_tags; tagnames="$withval"
+fi
+
+
+if test -f "$ltmain" && test -n "$tagnames"; then
+  if test ! -f "${ofile}"; then
+    { echo "$as_me:$LINENO: WARNING: output file \`$ofile' does not exist" >&5
+echo "$as_me: WARNING: output file \`$ofile' does not exist" >&2;}
+  fi
+
+  if test -z "$LTCC"; then
+    eval "`$SHELL ${ofile} --config | grep '^LTCC='`"
+    if test -z "$LTCC"; then
+      { echo "$as_me:$LINENO: WARNING: output file \`$ofile' does not look like a libtool script" >&5
+echo "$as_me: WARNING: output file \`$ofile' does not look like a libtool script" >&2;}
+    else
+      { echo "$as_me:$LINENO: WARNING: using \`LTCC=$LTCC', extracted from \`$ofile'" >&5
+echo "$as_me: WARNING: using \`LTCC=$LTCC', extracted from \`$ofile'" >&2;}
+    fi
+  fi
+  if test -z "$LTCFLAGS"; then
+    eval "`$SHELL ${ofile} --config | grep '^LTCFLAGS='`"
+  fi
+
+  # Extract list of available tagged configurations in $ofile.
+  # Note that this assumes the entire list is on one line.
+  available_tags=`grep "^available_tags=" "${ofile}" | $SED -e 's/available_tags=\(.*$\)/\1/' -e 's/\"//g'`
+
+  lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+  for tagname in $tagnames; do
+    IFS="$lt_save_ifs"
+    # Check whether tagname contains only valid characters
+    case `$echo "X$tagname" | $Xsed -e 's:[-_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890,/]::g'` in
+    "") ;;
+    *)  { { echo "$as_me:$LINENO: error: invalid tag name: $tagname" >&5
+echo "$as_me: error: invalid tag name: $tagname" >&2;}
+   { (exit 1); exit 1; }; }
+	;;
+    esac
+
+    if grep "^# ### BEGIN LIBTOOL TAG CONFIG: $tagname$" < "${ofile}" > /dev/null
+    then
+      { { echo "$as_me:$LINENO: error: tag name \"$tagname\" already exists" >&5
+echo "$as_me: error: tag name \"$tagname\" already exists" >&2;}
+   { (exit 1); exit 1; }; }
+    fi
+
+    # Update the list of available tags.
+    if test -n "$tagname"; then
+      echo appending configuration tag \"$tagname\" to $ofile
+
+      case $tagname in
+      CXX)
+	if test -n "$CXX" && ( test "X$CXX" != "Xno" &&
+	    ( (test "X$CXX" = "Xg++" && `g++ -v >/dev/null 2>&1` ) ||
+	    (test "X$CXX" != "Xg++"))) ; then
+	  ac_ext=cpp
+ac_cpp='$CXXCPP $CPPFLAGS'
+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu
+
+
+
+
+archive_cmds_need_lc_CXX=no
+allow_undefined_flag_CXX=
+always_export_symbols_CXX=no
+archive_expsym_cmds_CXX=
+export_dynamic_flag_spec_CXX=
+hardcode_direct_CXX=no
+hardcode_libdir_flag_spec_CXX=
+hardcode_libdir_flag_spec_ld_CXX=
+hardcode_libdir_separator_CXX=
+hardcode_minus_L_CXX=no
+hardcode_shlibpath_var_CXX=unsupported
+hardcode_automatic_CXX=no
+module_cmds_CXX=
+module_expsym_cmds_CXX=
+link_all_deplibs_CXX=unknown
+old_archive_cmds_CXX=$old_archive_cmds
+no_undefined_flag_CXX=
+whole_archive_flag_spec_CXX=
+enable_shared_with_static_runtimes_CXX=no
+
+# Dependencies to place before and after the object being linked:
+predep_objects_CXX=
+postdep_objects_CXX=
+predeps_CXX=
+postdeps_CXX=
+compiler_lib_search_path_CXX=
+
+# Source file extension for C++ test sources.
+ac_ext=cpp
+
+# Object file extension for compiled C++ test sources.
+objext=o
+objext_CXX=$objext
+
+# Code to be used in simple compile tests
+lt_simple_compile_test_code="int some_variable = 0;\n"
+
+# Code to be used in simple link tests
+lt_simple_link_test_code='int main(int, char *[]) { return(0); }\n'
+
+# ltmain only uses $CC for tagged configurations so make sure $CC is set.
+
+# If no C compiler was specified, use CC.
+LTCC=${LTCC-"$CC"}
+
+# If no C compiler flags were specified, use CFLAGS.
+LTCFLAGS=${LTCFLAGS-"$CFLAGS"}
+
+# Allow CC to be a program name with arguments.
+compiler=$CC
+
+
+# save warnings/boilerplate of simple test code
+ac_outfile=conftest.$ac_objext
+printf "$lt_simple_compile_test_code" >conftest.$ac_ext
+eval "$ac_compile" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
+_lt_compiler_boilerplate=`cat conftest.err`
+$rm conftest*
+
+ac_outfile=conftest.$ac_objext
+printf "$lt_simple_link_test_code" >conftest.$ac_ext
+eval "$ac_link" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
+_lt_linker_boilerplate=`cat conftest.err`
+$rm conftest*
+
+
+# Allow CC to be a program name with arguments.
+lt_save_CC=$CC
+lt_save_LD=$LD
+lt_save_GCC=$GCC
+GCC=$GXX
+lt_save_with_gnu_ld=$with_gnu_ld
+lt_save_path_LD=$lt_cv_path_LD
+if test -n "${lt_cv_prog_gnu_ldcxx+set}"; then
+  lt_cv_prog_gnu_ld=$lt_cv_prog_gnu_ldcxx
+else
+  $as_unset lt_cv_prog_gnu_ld
+fi
+if test -n "${lt_cv_path_LDCXX+set}"; then
+  lt_cv_path_LD=$lt_cv_path_LDCXX
+else
+  $as_unset lt_cv_path_LD
+fi
+test -z "${LDCXX+set}" || LD=$LDCXX
+CC=${CXX-"c++"}
+compiler=$CC
+compiler_CXX=$CC
+for cc_temp in $compiler""; do
+  case $cc_temp in
+    compile | *[\\/]compile | ccache | *[\\/]ccache ) ;;
+    distcc | *[\\/]distcc | purify | *[\\/]purify ) ;;
+    \-*) ;;
+    *) break;;
+  esac
+done
+cc_basename=`$echo "X$cc_temp" | $Xsed -e 's%.*/%%' -e "s%^$host_alias-%%"`
+
+
+# We don't want -fno-exception wen compiling C++ code, so set the
+# no_builtin_flag separately
+if test "$GXX" = yes; then
+  lt_prog_compiler_no_builtin_flag_CXX=' -fno-builtin'
+else
+  lt_prog_compiler_no_builtin_flag_CXX=
+fi
+
+if test "$GXX" = yes; then
+  # Set up default GNU C++ configuration
+
+
+# Check whether --with-gnu-ld was given.
+if test "${with_gnu_ld+set}" = set; then
+  withval=$with_gnu_ld; test "$withval" = no || with_gnu_ld=yes
+else
+  with_gnu_ld=no
+fi
+
+ac_prog=ld
+if test "$GCC" = yes; then
+  # Check if gcc -print-prog-name=ld gives a path.
+  { echo "$as_me:$LINENO: checking for ld used by $CC" >&5
+echo $ECHO_N "checking for ld used by $CC... $ECHO_C" >&6; }
+  case $host in
+  *-*-mingw*)
+    # gcc leaves a trailing carriage return which upsets mingw
+    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
+  *)
+    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;
+  esac
+  case $ac_prog in
+    # Accept absolute paths.
+    [\\/]* | ?:[\\/]*)
+      re_direlt='/[^/][^/]*/\.\./'
+      # Canonicalize the pathname of ld
+      ac_prog=`echo $ac_prog| $SED 's%\\\\%/%g'`
+      while echo $ac_prog | grep "$re_direlt" > /dev/null 2>&1; do
+	ac_prog=`echo $ac_prog| $SED "s%$re_direlt%/%"`
+      done
+      test -z "$LD" && LD="$ac_prog"
+      ;;
+  "")
+    # If it fails, then pretend we aren't using GCC.
+    ac_prog=ld
+    ;;
+  *)
+    # If it is relative, then search for the first ld in PATH.
+    with_gnu_ld=unknown
+    ;;
+  esac
+elif test "$with_gnu_ld" = yes; then
+  { echo "$as_me:$LINENO: checking for GNU ld" >&5
+echo $ECHO_N "checking for GNU ld... $ECHO_C" >&6; }
+else
+  { echo "$as_me:$LINENO: checking for non-GNU ld" >&5
+echo $ECHO_N "checking for non-GNU ld... $ECHO_C" >&6; }
+fi
+if test "${lt_cv_path_LD+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -z "$LD"; then
+  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+  for ac_dir in $PATH; do
+    IFS="$lt_save_ifs"
+    test -z "$ac_dir" && ac_dir=.
+    if test -f "$ac_dir/$ac_prog" || test -f "$ac_dir/$ac_prog$ac_exeext"; then
+      lt_cv_path_LD="$ac_dir/$ac_prog"
+      # Check to see if the program is GNU ld.  I'd rather use --version,
+      # but apparently some variants of GNU ld only accept -v.
+      # Break only if it was the GNU/non-GNU ld that we prefer.
+      case `"$lt_cv_path_LD" -v 2>&1 </dev/null` in
+      *GNU* | *'with BFD'*)
+	test "$with_gnu_ld" != no && break
+	;;
+      *)
+	test "$with_gnu_ld" != yes && break
+	;;
+      esac
+    fi
+  done
+  IFS="$lt_save_ifs"
+else
+  lt_cv_path_LD="$LD" # Let the user override the test with a path.
+fi
+fi
+
+LD="$lt_cv_path_LD"
+if test -n "$LD"; then
+  { echo "$as_me:$LINENO: result: $LD" >&5
+echo "${ECHO_T}$LD" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+test -z "$LD" && { { echo "$as_me:$LINENO: error: no acceptable ld found in \$PATH" >&5
+echo "$as_me: error: no acceptable ld found in \$PATH" >&2;}
+   { (exit 1); exit 1; }; }
+{ echo "$as_me:$LINENO: checking if the linker ($LD) is GNU ld" >&5
+echo $ECHO_N "checking if the linker ($LD) is GNU ld... $ECHO_C" >&6; }
+if test "${lt_cv_prog_gnu_ld+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  # I'd rather use --version here, but apparently some GNU lds only accept -v.
+case `$LD -v 2>&1 </dev/null` in
+*GNU* | *'with BFD'*)
+  lt_cv_prog_gnu_ld=yes
+  ;;
+*)
+  lt_cv_prog_gnu_ld=no
+  ;;
+esac
+fi
+{ echo "$as_me:$LINENO: result: $lt_cv_prog_gnu_ld" >&5
+echo "${ECHO_T}$lt_cv_prog_gnu_ld" >&6; }
+with_gnu_ld=$lt_cv_prog_gnu_ld
+
+
+
+  # Check if GNU C++ uses GNU ld as the underlying linker, since the
+  # archiving commands below assume that GNU ld is being used.
+  if test "$with_gnu_ld" = yes; then
+    archive_cmds_CXX='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'
+    archive_expsym_cmds_CXX='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+
+    hardcode_libdir_flag_spec_CXX='${wl}--rpath ${wl}$libdir'
+    export_dynamic_flag_spec_CXX='${wl}--export-dynamic'
+
+    # If archive_cmds runs LD, not CC, wlarc should be empty
+    # XXX I think wlarc can be eliminated in ltcf-cxx, but I need to
+    #     investigate it a little bit more. (MM)
+    wlarc='${wl}'
+
+    # ancient GNU ld didn't support --whole-archive et. al.
+    if eval "`$CC -print-prog-name=ld` --help 2>&1" | \
+	grep 'no-whole-archive' > /dev/null; then
+      whole_archive_flag_spec_CXX="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
+    else
+      whole_archive_flag_spec_CXX=
+    fi
+  else
+    with_gnu_ld=no
+    wlarc=
+
+    # A generic and very simple default shared library creation
+    # command for GNU C++ for the case where it uses the native
+    # linker, instead of GNU ld.  If possible, this setting should
+    # overridden to take advantage of the native linker features on
+    # the platform it is being used on.
+    archive_cmds_CXX='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'
+  fi
+
+  # Commands to make compiler produce verbose output that lists
+  # what "hidden" libraries, object files and flags are used when
+  # linking a shared library.
+  output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep "\-L"'
+
+else
+  GXX=no
+  with_gnu_ld=no
+  wlarc=
+fi
+
+# PORTME: fill in a description of your system's C++ link characteristics
+{ echo "$as_me:$LINENO: checking whether the $compiler linker ($LD) supports shared libraries" >&5
+echo $ECHO_N "checking whether the $compiler linker ($LD) supports shared libraries... $ECHO_C" >&6; }
+ld_shlibs_CXX=yes
+case $host_os in
+  aix3*)
+    # FIXME: insert proper C++ library support
+    ld_shlibs_CXX=no
+    ;;
+  aix4* | aix5*)
+    if test "$host_cpu" = ia64; then
+      # On IA64, the linker does run time linking by default, so we don't
+      # have to do anything special.
+      aix_use_runtimelinking=no
+      exp_sym_flag='-Bexport'
+      no_entry_flag=""
+    else
+      aix_use_runtimelinking=no
+
+      # Test if we are trying to use run time linking or normal
+      # AIX style linking. If -brtl is somewhere in LDFLAGS, we
+      # need to do runtime linking.
+      case $host_os in aix4.[23]|aix4.[23].*|aix5*)
+	for ld_flag in $LDFLAGS; do
+	  case $ld_flag in
+	  *-brtl*)
+	    aix_use_runtimelinking=yes
+	    break
+	    ;;
+	  esac
+	done
+	;;
+      esac
+
+      exp_sym_flag='-bexport'
+      no_entry_flag='-bnoentry'
+    fi
+
+    # When large executables or shared objects are built, AIX ld can
+    # have problems creating the table of contents.  If linking a library
+    # or program results in "error TOC overflow" add -mminimal-toc to
+    # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not
+    # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.
+
+    archive_cmds_CXX=''
+    hardcode_direct_CXX=yes
+    hardcode_libdir_separator_CXX=':'
+    link_all_deplibs_CXX=yes
+
+    if test "$GXX" = yes; then
+      case $host_os in aix4.[012]|aix4.[012].*)
+      # We only want to do this on AIX 4.2 and lower, the check
+      # below for broken collect2 doesn't work under 4.3+
+	collect2name=`${CC} -print-prog-name=collect2`
+	if test -f "$collect2name" && \
+	   strings "$collect2name" | grep resolve_lib_name >/dev/null
+	then
+	  # We have reworked collect2
+	  hardcode_direct_CXX=yes
+	else
+	  # We have old collect2
+	  hardcode_direct_CXX=unsupported
+	  # It fails to find uninstalled libraries when the uninstalled
+	  # path is not listed in the libpath.  Setting hardcode_minus_L
+	  # to unsupported forces relinking
+	  hardcode_minus_L_CXX=yes
+	  hardcode_libdir_flag_spec_CXX='-L$libdir'
+	  hardcode_libdir_separator_CXX=
+	fi
+	;;
+      esac
+      shared_flag='-shared'
+      if test "$aix_use_runtimelinking" = yes; then
+	shared_flag="$shared_flag "'${wl}-G'
+      fi
+    else
+      # not using gcc
+      if test "$host_cpu" = ia64; then
+	# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release
+	# chokes on -Wl,-G. The following line is correct:
+	shared_flag='-G'
+      else
+	if test "$aix_use_runtimelinking" = yes; then
+	  shared_flag='${wl}-G'
+	else
+	  shared_flag='${wl}-bM:SRE'
+	fi
+      fi
+    fi
+
+    # It seems that -bexpall does not export symbols beginning with
+    # underscore (_), so it is better to generate a list of symbols to export.
+    always_export_symbols_CXX=yes
+    if test "$aix_use_runtimelinking" = yes; then
+      # Warning - without using the other runtime loading flags (-brtl),
+      # -berok will link without error, but may produce a broken library.
+      allow_undefined_flag_CXX='-berok'
+      # Determine the default libpath from the value encoded in an empty executable.
+      cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_cxx_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+
+aix_libpath=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\(.*\)$/\1/; p; }
+}'`
+# Check for a 64-bit object if we didn't find anything.
+if test -z "$aix_libpath"; then aix_libpath=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\(.*\)$/\1/; p; }
+}'`; fi
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
+
+      hardcode_libdir_flag_spec_CXX='${wl}-blibpath:$libdir:'"$aix_libpath"
+
+      archive_expsym_cmds_CXX="\$CC"' -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags `if test "x${allow_undefined_flag}" != "x"; then echo "${wl}${allow_undefined_flag}"; else :; fi` '"\${wl}$exp_sym_flag:\$export_symbols $shared_flag"
+     else
+      if test "$host_cpu" = ia64; then
+	hardcode_libdir_flag_spec_CXX='${wl}-R $libdir:/usr/lib:/lib'
+	allow_undefined_flag_CXX="-z nodefs"
+	archive_expsym_cmds_CXX="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags ${wl}${allow_undefined_flag} '"\${wl}$exp_sym_flag:\$export_symbols"
+      else
+	# Determine the default libpath from the value encoded in an empty executable.
+	cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_cxx_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+
+aix_libpath=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\(.*\)$/\1/; p; }
+}'`
+# Check for a 64-bit object if we didn't find anything.
+if test -z "$aix_libpath"; then aix_libpath=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\(.*\)$/\1/; p; }
+}'`; fi
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
+
+	hardcode_libdir_flag_spec_CXX='${wl}-blibpath:$libdir:'"$aix_libpath"
+	# Warning - without using the other run time loading flags,
+	# -berok will link without error, but may produce a broken library.
+	no_undefined_flag_CXX=' ${wl}-bernotok'
+	allow_undefined_flag_CXX=' ${wl}-berok'
+	# Exported symbols can be pulled into shared objects from archives
+	whole_archive_flag_spec_CXX='$convenience'
+	archive_cmds_need_lc_CXX=yes
+	# This is similar to how AIX traditionally builds its shared libraries.
+	archive_expsym_cmds_CXX="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'
+      fi
+    fi
+    ;;
+
+  beos*)
+    if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
+      allow_undefined_flag_CXX=unsupported
+      # Joseph Beckenbach <jrb3@best.com> says some releases of gcc
+      # support --undefined.  This deserves some investigation.  FIXME
+      archive_cmds_CXX='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+    else
+      ld_shlibs_CXX=no
+    fi
+    ;;
+
+  chorus*)
+    case $cc_basename in
+      *)
+	# FIXME: insert proper C++ library support
+	ld_shlibs_CXX=no
+	;;
+    esac
+    ;;
+
+  cygwin* | mingw* | pw32*)
+    # _LT_AC_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,
+    # as there is no search path for DLLs.
+    hardcode_libdir_flag_spec_CXX='-L$libdir'
+    allow_undefined_flag_CXX=unsupported
+    always_export_symbols_CXX=no
+    enable_shared_with_static_runtimes_CXX=yes
+
+    if $LD --help 2>&1 | grep 'auto-import' > /dev/null; then
+      archive_cmds_CXX='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+      # If the export-symbols file already is a .def file (1st line
+      # is EXPORTS), use it as is; otherwise, prepend...
+      archive_expsym_cmds_CXX='if test "x`$SED 1q $export_symbols`" = xEXPORTS; then
+	cp $export_symbols $output_objdir/$soname.def;
+      else
+	echo EXPORTS > $output_objdir/$soname.def;
+	cat $export_symbols >> $output_objdir/$soname.def;
+      fi~
+      $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+    else
+      ld_shlibs_CXX=no
+    fi
+  ;;
+      darwin* | rhapsody*)
+        case $host_os in
+        rhapsody* | darwin1.[012])
+         allow_undefined_flag_CXX='${wl}-undefined ${wl}suppress'
+         ;;
+       *) # Darwin 1.3 on
+         if test -z ${MACOSX_DEPLOYMENT_TARGET} ; then
+           allow_undefined_flag_CXX='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'
+         else
+           case ${MACOSX_DEPLOYMENT_TARGET} in
+             10.[012])
+               allow_undefined_flag_CXX='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'
+               ;;
+             10.*)
+               allow_undefined_flag_CXX='${wl}-undefined ${wl}dynamic_lookup'
+               ;;
+           esac
+         fi
+         ;;
+        esac
+      archive_cmds_need_lc_CXX=no
+      hardcode_direct_CXX=no
+      hardcode_automatic_CXX=yes
+      hardcode_shlibpath_var_CXX=unsupported
+      whole_archive_flag_spec_CXX=''
+      link_all_deplibs_CXX=yes
+
+    if test "$GXX" = yes ; then
+      lt_int_apple_cc_single_mod=no
+      output_verbose_link_cmd='echo'
+      if $CC -dumpspecs 2>&1 | $EGREP 'single_module' >/dev/null ; then
+       lt_int_apple_cc_single_mod=yes
+      fi
+      if test "X$lt_int_apple_cc_single_mod" = Xyes ; then
+       archive_cmds_CXX='$CC -dynamiclib -single_module $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring'
+      else
+          archive_cmds_CXX='$CC -r -keep_private_externs -nostdlib -o ${lib}-master.o $libobjs~$CC -dynamiclib $allow_undefined_flag -o $lib ${lib}-master.o $deplibs $compiler_flags -install_name $rpath/$soname $verstring'
+        fi
+        module_cmds_CXX='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'
+        # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin lds
+          if test "X$lt_int_apple_cc_single_mod" = Xyes ; then
+            archive_expsym_cmds_CXX='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -dynamiclib -single_module $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+          else
+            archive_expsym_cmds_CXX='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -r -keep_private_externs -nostdlib -o ${lib}-master.o $libobjs~$CC -dynamiclib $allow_undefined_flag -o $lib ${lib}-master.o $deplibs $compiler_flags -install_name $rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+          fi
+            module_expsym_cmds_CXX='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+      else
+      case $cc_basename in
+        xlc*)
+         output_verbose_link_cmd='echo'
+          archive_cmds_CXX='$CC -qmkshrobj ${wl}-single_module $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}`echo $rpath/$soname` $verstring'
+          module_cmds_CXX='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'
+          # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin lds
+          archive_expsym_cmds_CXX='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -qmkshrobj ${wl}-single_module $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}$rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+          module_expsym_cmds_CXX='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+          ;;
+       *)
+         ld_shlibs_CXX=no
+          ;;
+      esac
+      fi
+        ;;
+
+  dgux*)
+    case $cc_basename in
+      ec++*)
+	# FIXME: insert proper C++ library support
+	ld_shlibs_CXX=no
+	;;
+      ghcx*)
+	# Green Hills C++ Compiler
+	# FIXME: insert proper C++ library support
+	ld_shlibs_CXX=no
+	;;
+      *)
+	# FIXME: insert proper C++ library support
+	ld_shlibs_CXX=no
+	;;
+    esac
+    ;;
+  freebsd[12]*)
+    # C++ shared libraries reported to be fairly broken before switch to ELF
+    ld_shlibs_CXX=no
+    ;;
+  freebsd-elf*)
+    archive_cmds_need_lc_CXX=no
+    ;;
+  freebsd* | dragonfly*)
+    # FreeBSD 3 and later use GNU C++ and GNU ld with standard ELF
+    # conventions
+    ld_shlibs_CXX=yes
+    ;;
+  gnu*)
+    ;;
+  hpux9*)
+    hardcode_libdir_flag_spec_CXX='${wl}+b ${wl}$libdir'
+    hardcode_libdir_separator_CXX=:
+    export_dynamic_flag_spec_CXX='${wl}-E'
+    hardcode_direct_CXX=yes
+    hardcode_minus_L_CXX=yes # Not in the search PATH,
+				# but as the default
+				# location of the library.
+
+    case $cc_basename in
+    CC*)
+      # FIXME: insert proper C++ library support
+      ld_shlibs_CXX=no
+      ;;
+    aCC*)
+      archive_cmds_CXX='$rm $output_objdir/$soname~$CC -b ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+      # Commands to make compiler produce verbose output that lists
+      # what "hidden" libraries, object files and flags are used when
+      # linking a shared library.
+      #
+      # There doesn't appear to be a way to prevent this compiler from
+      # explicitly linking system object files so we need to strip them
+      # from the output so that they don't get included in the library
+      # dependencies.
+      output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | grep "[-]L"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; echo $list'
+      ;;
+    *)
+      if test "$GXX" = yes; then
+        archive_cmds_CXX='$rm $output_objdir/$soname~$CC -shared -nostdlib -fPIC ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+      else
+        # FIXME: insert proper C++ library support
+        ld_shlibs_CXX=no
+      fi
+      ;;
+    esac
+    ;;
+  hpux10*|hpux11*)
+    if test $with_gnu_ld = no; then
+      hardcode_libdir_flag_spec_CXX='${wl}+b ${wl}$libdir'
+      hardcode_libdir_separator_CXX=:
+
+      case $host_cpu in
+      hppa*64*|ia64*)
+	hardcode_libdir_flag_spec_ld_CXX='+b $libdir'
+        ;;
+      *)
+	export_dynamic_flag_spec_CXX='${wl}-E'
+        ;;
+      esac
+    fi
+    case $host_cpu in
+    hppa*64*|ia64*)
+      hardcode_direct_CXX=no
+      hardcode_shlibpath_var_CXX=no
+      ;;
+    *)
+      hardcode_direct_CXX=yes
+      hardcode_minus_L_CXX=yes # Not in the search PATH,
+					      # but as the default
+					      # location of the library.
+      ;;
+    esac
+
+    case $cc_basename in
+      CC*)
+	# FIXME: insert proper C++ library support
+	ld_shlibs_CXX=no
+	;;
+      aCC*)
+	case $host_cpu in
+	hppa*64*)
+	  archive_cmds_CXX='$CC -b ${wl}+h ${wl}$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	  ;;
+	ia64*)
+	  archive_cmds_CXX='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	  ;;
+	*)
+	  archive_cmds_CXX='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	  ;;
+	esac
+	# Commands to make compiler produce verbose output that lists
+	# what "hidden" libraries, object files and flags are used when
+	# linking a shared library.
+	#
+	# There doesn't appear to be a way to prevent this compiler from
+	# explicitly linking system object files so we need to strip them
+	# from the output so that they don't get included in the library
+	# dependencies.
+	output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | grep "\-L"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; echo $list'
+	;;
+      *)
+	if test "$GXX" = yes; then
+	  if test $with_gnu_ld = no; then
+	    case $host_cpu in
+	    hppa*64*)
+	      archive_cmds_CXX='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	      ;;
+	    ia64*)
+	      archive_cmds_CXX='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	      ;;
+	    *)
+	      archive_cmds_CXX='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	      ;;
+	    esac
+	  fi
+	else
+	  # FIXME: insert proper C++ library support
+	  ld_shlibs_CXX=no
+	fi
+	;;
+    esac
+    ;;
+  interix3*)
+    hardcode_direct_CXX=no
+    hardcode_shlibpath_var_CXX=no
+    hardcode_libdir_flag_spec_CXX='${wl}-rpath,$libdir'
+    export_dynamic_flag_spec_CXX='${wl}-E'
+    # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.
+    # Instead, shared libraries are loaded at an image base (0x10000000 by
+    # default) and relocated if they conflict, which is a slow very memory
+    # consuming and fragmenting process.  To avoid this, we pick a random,
+    # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
+    # time.  Moving up from 0x10000000 also allows more sbrk(2) space.
+    archive_cmds_CXX='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+    archive_expsym_cmds_CXX='sed "s,^,_," $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+    ;;
+  irix5* | irix6*)
+    case $cc_basename in
+      CC*)
+	# SGI C++
+	archive_cmds_CXX='$CC -shared -all -multigot $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -soname $soname `test -n "$verstring" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'
+
+	# Archives containing C++ object files must be created using
+	# "CC -ar", where "CC" is the IRIX C++ compiler.  This is
+	# necessary to make sure instantiated templates are included
+	# in the archive.
+	old_archive_cmds_CXX='$CC -ar -WR,-u -o $oldlib $oldobjs'
+	;;
+      *)
+	if test "$GXX" = yes; then
+	  if test "$with_gnu_ld" = no; then
+	    archive_cmds_CXX='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+	  else
+	    archive_cmds_CXX='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && echo ${wl}-set_version ${wl}$verstring` -o $lib'
+	  fi
+	fi
+	link_all_deplibs_CXX=yes
+	;;
+    esac
+    hardcode_libdir_flag_spec_CXX='${wl}-rpath ${wl}$libdir'
+    hardcode_libdir_separator_CXX=:
+    ;;
+  linux* | k*bsd*-gnu)
+    case $cc_basename in
+      KCC*)
+	# Kuck and Associates, Inc. (KAI) C++ Compiler
+
+	# KCC will only create a shared library if the output file
+	# ends with ".so" (or ".sl" for HP-UX), so rename the library
+	# to its proper name (with version) after linking.
+	archive_cmds_CXX='tempext=`echo $shared_ext | $SED -e '\''s/\([^()0-9A-Za-z{}]\)/\\\\\1/g'\''`; templib=`echo $lib | $SED -e "s/\${tempext}\..*/.so/"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \$templib; mv \$templib $lib'
+	archive_expsym_cmds_CXX='tempext=`echo $shared_ext | $SED -e '\''s/\([^()0-9A-Za-z{}]\)/\\\\\1/g'\''`; templib=`echo $lib | $SED -e "s/\${tempext}\..*/.so/"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \$templib ${wl}-retain-symbols-file,$export_symbols; mv \$templib $lib'
+	# Commands to make compiler produce verbose output that lists
+	# what "hidden" libraries, object files and flags are used when
+	# linking a shared library.
+	#
+	# There doesn't appear to be a way to prevent this compiler from
+	# explicitly linking system object files so we need to strip them
+	# from the output so that they don't get included in the library
+	# dependencies.
+	output_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | grep "ld"`; rm -f libconftest$shared_ext; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; echo $list'
+
+	hardcode_libdir_flag_spec_CXX='${wl}--rpath,$libdir'
+	export_dynamic_flag_spec_CXX='${wl}--export-dynamic'
+
+	# Archives containing C++ object files must be created using
+	# "CC -Bstatic", where "CC" is the KAI C++ compiler.
+	old_archive_cmds_CXX='$CC -Bstatic -o $oldlib $oldobjs'
+	;;
+      icpc*)
+	# Intel C++
+	with_gnu_ld=yes
+	# version 8.0 and above of icpc choke on multiply defined symbols
+	# if we add $predep_objects and $postdep_objects, however 7.1 and
+	# earlier do not add the objects themselves.
+	case `$CC -V 2>&1` in
+	*"Version 7."*)
+  	  archive_cmds_CXX='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'
+  	  archive_expsym_cmds_CXX='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+	  ;;
+	*)  # Version 8.0 or newer
+	  tmp_idyn=
+	  case $host_cpu in
+	    ia64*) tmp_idyn=' -i_dynamic';;
+	  esac
+  	  archive_cmds_CXX='$CC -shared'"$tmp_idyn"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	  archive_expsym_cmds_CXX='$CC -shared'"$tmp_idyn"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+	  ;;
+	esac
+	archive_cmds_need_lc_CXX=no
+	hardcode_libdir_flag_spec_CXX='${wl}-rpath,$libdir'
+	export_dynamic_flag_spec_CXX='${wl}--export-dynamic'
+	whole_archive_flag_spec_CXX='${wl}--whole-archive$convenience ${wl}--no-whole-archive'
+	;;
+      pgCC*)
+        # Portland Group C++ compiler
+	archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'
+  	archive_expsym_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'
+
+	hardcode_libdir_flag_spec_CXX='${wl}--rpath ${wl}$libdir'
+	export_dynamic_flag_spec_CXX='${wl}--export-dynamic'
+	whole_archive_flag_spec_CXX='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $echo \"$new_convenience\"` ${wl}--no-whole-archive'
+        ;;
+      cxx*)
+	# Compaq C++
+	archive_cmds_CXX='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	archive_expsym_cmds_CXX='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname  -o $lib ${wl}-retain-symbols-file $wl$export_symbols'
+
+	runpath_var=LD_RUN_PATH
+	hardcode_libdir_flag_spec_CXX='-rpath $libdir'
+	hardcode_libdir_separator_CXX=:
+
+	# Commands to make compiler produce verbose output that lists
+	# what "hidden" libraries, object files and flags are used when
+	# linking a shared library.
+	#
+	# There doesn't appear to be a way to prevent this compiler from
+	# explicitly linking system object files so we need to strip them
+	# from the output so that they don't get included in the library
+	# dependencies.
+	output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep "ld"`; templist=`echo $templist | $SED "s/\(^.*ld.*\)\( .*ld .*$\)/\1/"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; echo $list'
+	;;
+    esac
+    ;;
+  lynxos*)
+    # FIXME: insert proper C++ library support
+    ld_shlibs_CXX=no
+    ;;
+  m88k*)
+    # FIXME: insert proper C++ library support
+    ld_shlibs_CXX=no
+    ;;
+  mvs*)
+    case $cc_basename in
+      cxx*)
+	# FIXME: insert proper C++ library support
+	ld_shlibs_CXX=no
+	;;
+      *)
+	# FIXME: insert proper C++ library support
+	ld_shlibs_CXX=no
+	;;
+    esac
+    ;;
+  netbsd* | netbsdelf*-gnu)
+    if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+      archive_cmds_CXX='$LD -Bshareable  -o $lib $predep_objects $libobjs $deplibs $postdep_objects $linker_flags'
+      wlarc=
+      hardcode_libdir_flag_spec_CXX='-R$libdir'
+      hardcode_direct_CXX=yes
+      hardcode_shlibpath_var_CXX=no
+    fi
+    # Workaround some broken pre-1.5 toolchains
+    output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep conftest.$objext | $SED -e "s:-lgcc -lc -lgcc::"'
+    ;;
+  openbsd2*)
+    # C++ shared libraries are fairly broken
+    ld_shlibs_CXX=no
+    ;;
+  openbsd*)
+    hardcode_direct_CXX=yes
+    hardcode_shlibpath_var_CXX=no
+    archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'
+    hardcode_libdir_flag_spec_CXX='${wl}-rpath,$libdir'
+    if test -z "`echo __ELF__ | $CC -E - | grep __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+      archive_expsym_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-retain-symbols-file,$export_symbols -o $lib'
+      export_dynamic_flag_spec_CXX='${wl}-E'
+      whole_archive_flag_spec_CXX="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
+    fi
+    output_verbose_link_cmd='echo'
+    ;;
+  osf3*)
+    case $cc_basename in
+      KCC*)
+	# Kuck and Associates, Inc. (KAI) C++ Compiler
+
+	# KCC will only create a shared library if the output file
+	# ends with ".so" (or ".sl" for HP-UX), so rename the library
+	# to its proper name (with version) after linking.
+	archive_cmds_CXX='tempext=`echo $shared_ext | $SED -e '\''s/\([^()0-9A-Za-z{}]\)/\\\\\1/g'\''`; templib=`echo $lib | $SED -e "s/\${tempext}\..*/.so/"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \$templib; mv \$templib $lib'
+
+	hardcode_libdir_flag_spec_CXX='${wl}-rpath,$libdir'
+	hardcode_libdir_separator_CXX=:
+
+	# Archives containing C++ object files must be created using
+	# "CC -Bstatic", where "CC" is the KAI C++ compiler.
+	old_archive_cmds_CXX='$CC -Bstatic -o $oldlib $oldobjs'
+
+	;;
+      RCC*)
+	# Rational C++ 2.4.1
+	# FIXME: insert proper C++ library support
+	ld_shlibs_CXX=no
+	;;
+      cxx*)
+	allow_undefined_flag_CXX=' ${wl}-expect_unresolved ${wl}\*'
+	archive_cmds_CXX='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $soname `test -n "$verstring" && echo ${wl}-set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'
+
+	hardcode_libdir_flag_spec_CXX='${wl}-rpath ${wl}$libdir'
+	hardcode_libdir_separator_CXX=:
+
+	# Commands to make compiler produce verbose output that lists
+	# what "hidden" libraries, object files and flags are used when
+	# linking a shared library.
+	#
+	# There doesn't appear to be a way to prevent this compiler from
+	# explicitly linking system object files so we need to strip them
+	# from the output so that they don't get included in the library
+	# dependencies.
+	output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep "ld" | grep -v "ld:"`; templist=`echo $templist | $SED "s/\(^.*ld.*\)\( .*ld.*$\)/\1/"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; echo $list'
+	;;
+      *)
+	if test "$GXX" = yes && test "$with_gnu_ld" = no; then
+	  allow_undefined_flag_CXX=' ${wl}-expect_unresolved ${wl}\*'
+	  archive_cmds_CXX='$CC -shared -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+
+	  hardcode_libdir_flag_spec_CXX='${wl}-rpath ${wl}$libdir'
+	  hardcode_libdir_separator_CXX=:
+
+	  # Commands to make compiler produce verbose output that lists
+	  # what "hidden" libraries, object files and flags are used when
+	  # linking a shared library.
+	  output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep "\-L"'
+
+	else
+	  # FIXME: insert proper C++ library support
+	  ld_shlibs_CXX=no
+	fi
+	;;
+    esac
+    ;;
+  osf4* | osf5*)
+    case $cc_basename in
+      KCC*)
+	# Kuck and Associates, Inc. (KAI) C++ Compiler
+
+	# KCC will only create a shared library if the output file
+	# ends with ".so" (or ".sl" for HP-UX), so rename the library
+	# to its proper name (with version) after linking.
+	archive_cmds_CXX='tempext=`echo $shared_ext | $SED -e '\''s/\([^()0-9A-Za-z{}]\)/\\\\\1/g'\''`; templib=`echo $lib | $SED -e "s/\${tempext}\..*/.so/"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \$templib; mv \$templib $lib'
+
+	hardcode_libdir_flag_spec_CXX='${wl}-rpath,$libdir'
+	hardcode_libdir_separator_CXX=:
+
+	# Archives containing C++ object files must be created using
+	# the KAI C++ compiler.
+	old_archive_cmds_CXX='$CC -o $oldlib $oldobjs'
+	;;
+      RCC*)
+	# Rational C++ 2.4.1
+	# FIXME: insert proper C++ library support
+	ld_shlibs_CXX=no
+	;;
+      cxx*)
+	allow_undefined_flag_CXX=' -expect_unresolved \*'
+	archive_cmds_CXX='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname `test -n "$verstring" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'
+	archive_expsym_cmds_CXX='for i in `cat $export_symbols`; do printf "%s %s\\n" -exported_symbol "\$i" >> $lib.exp; done~
+	  echo "-hidden">> $lib.exp~
+	  $CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname -Wl,-input -Wl,$lib.exp  `test -n "$verstring" && echo -set_version	$verstring` -update_registry ${output_objdir}/so_locations -o $lib~
+	  $rm $lib.exp'
+
+	hardcode_libdir_flag_spec_CXX='-rpath $libdir'
+	hardcode_libdir_separator_CXX=:
+
+	# Commands to make compiler produce verbose output that lists
+	# what "hidden" libraries, object files and flags are used when
+	# linking a shared library.
+	#
+	# There doesn't appear to be a way to prevent this compiler from
+	# explicitly linking system object files so we need to strip them
+	# from the output so that they don't get included in the library
+	# dependencies.
+	output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep "ld" | grep -v "ld:"`; templist=`echo $templist | $SED "s/\(^.*ld.*\)\( .*ld.*$\)/\1/"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; echo $list'
+	;;
+      *)
+	if test "$GXX" = yes && test "$with_gnu_ld" = no; then
+	  allow_undefined_flag_CXX=' ${wl}-expect_unresolved ${wl}\*'
+	 archive_cmds_CXX='$CC -shared -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n "$verstring" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+
+	  hardcode_libdir_flag_spec_CXX='${wl}-rpath ${wl}$libdir'
+	  hardcode_libdir_separator_CXX=:
+
+	  # Commands to make compiler produce verbose output that lists
+	  # what "hidden" libraries, object files and flags are used when
+	  # linking a shared library.
+	  output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep "\-L"'
+
+	else
+	  # FIXME: insert proper C++ library support
+	  ld_shlibs_CXX=no
+	fi
+	;;
+    esac
+    ;;
+  psos*)
+    # FIXME: insert proper C++ library support
+    ld_shlibs_CXX=no
+    ;;
+  sunos4*)
+    case $cc_basename in
+      CC*)
+	# Sun C++ 4.x
+	# FIXME: insert proper C++ library support
+	ld_shlibs_CXX=no
+	;;
+      lcc*)
+	# Lucid
+	# FIXME: insert proper C++ library support
+	ld_shlibs_CXX=no
+	;;
+      *)
+	# FIXME: insert proper C++ library support
+	ld_shlibs_CXX=no
+	;;
+    esac
+    ;;
+  solaris*)
+    case $cc_basename in
+      CC*)
+	# Sun C++ 4.2, 5.x and Centerline C++
+        archive_cmds_need_lc_CXX=yes
+	no_undefined_flag_CXX=' -zdefs'
+	archive_cmds_CXX='$CC -G${allow_undefined_flag}  -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	archive_expsym_cmds_CXX='$echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~$echo "local: *; };" >> $lib.exp~
+	$CC -G${allow_undefined_flag}  ${wl}-M ${wl}$lib.exp -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$rm $lib.exp'
+
+	hardcode_libdir_flag_spec_CXX='-R$libdir'
+	hardcode_shlibpath_var_CXX=no
+	case $host_os in
+	  solaris2.[0-5] | solaris2.[0-5].*) ;;
+	  *)
+	    # The C++ compiler is used as linker so we must use $wl
+	    # flag to pass the commands to the underlying system
+	    # linker. We must also pass each convience library through
+	    # to the system linker between allextract/defaultextract.
+	    # The C++ compiler will combine linker options so we
+	    # cannot just pass the convience library names through
+	    # without $wl.
+	    # Supported since Solaris 2.6 (maybe 2.5.1?)
+	    whole_archive_flag_spec_CXX='${wl}-z ${wl}allextract`for conv in $convenience\"\"; do test -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $echo \"$new_convenience\"` ${wl}-z ${wl}defaultextract'
+	    ;;
+	esac
+	link_all_deplibs_CXX=yes
+
+	output_verbose_link_cmd='echo'
+
+	# Archives containing C++ object files must be created using
+	# "CC -xar", where "CC" is the Sun C++ compiler.  This is
+	# necessary to make sure instantiated templates are included
+	# in the archive.
+	old_archive_cmds_CXX='$CC -xar -o $oldlib $oldobjs'
+	;;
+      gcx*)
+	# Green Hills C++ Compiler
+	archive_cmds_CXX='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'
+
+	# The C++ compiler must be used to create the archive.
+	old_archive_cmds_CXX='$CC $LDFLAGS -archive -o $oldlib $oldobjs'
+	;;
+      *)
+	# GNU C++ compiler with Solaris linker
+	if test "$GXX" = yes && test "$with_gnu_ld" = no; then
+	  no_undefined_flag_CXX=' ${wl}-z ${wl}defs'
+	  if $CC --version | grep -v '^2\.7' > /dev/null; then
+	    archive_cmds_CXX='$CC -shared -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'
+	    archive_expsym_cmds_CXX='$echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~$echo "local: *; };" >> $lib.exp~
+		$CC -shared -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$rm $lib.exp'
+
+	    # Commands to make compiler produce verbose output that lists
+	    # what "hidden" libraries, object files and flags are used when
+	    # linking a shared library.
+	    output_verbose_link_cmd="$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep \"\-L\""
+	  else
+	    # g++ 2.7 appears to require `-G' NOT `-shared' on this
+	    # platform.
+	    archive_cmds_CXX='$CC -G -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'
+	    archive_expsym_cmds_CXX='$echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~$echo "local: *; };" >> $lib.exp~
+		$CC -G -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$rm $lib.exp'
+
+	    # Commands to make compiler produce verbose output that lists
+	    # what "hidden" libraries, object files and flags are used when
+	    # linking a shared library.
+	    output_verbose_link_cmd="$CC -G $CFLAGS -v conftest.$objext 2>&1 | grep \"\-L\""
+	  fi
+
+	  hardcode_libdir_flag_spec_CXX='${wl}-R $wl$libdir'
+	fi
+	;;
+    esac
+    ;;
+  sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[01].[10]* | unixware7* | sco3.2v5.0.[024]*)
+    no_undefined_flag_CXX='${wl}-z,text'
+    archive_cmds_need_lc_CXX=no
+    hardcode_shlibpath_var_CXX=no
+    runpath_var='LD_RUN_PATH'
+
+    case $cc_basename in
+      CC*)
+	archive_cmds_CXX='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds_CXX='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	;;
+      *)
+	archive_cmds_CXX='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds_CXX='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	;;
+    esac
+    ;;
+  sysv5* | sco3.2v5* | sco5v6*)
+    # Note: We can NOT use -z defs as we might desire, because we do not
+    # link with -lc, and that would cause any symbols used from libc to
+    # always be unresolved, which means just about no library would
+    # ever link correctly.  If we're not using GNU ld we use -z text
+    # though, which does catch some bad symbols but isn't as heavy-handed
+    # as -z defs.
+    # For security reasons, it is highly recommended that you always
+    # use absolute paths for naming shared libraries, and exclude the
+    # DT_RUNPATH tag from executables and libraries.  But doing so
+    # requires that you compile everything twice, which is a pain.
+    # So that behaviour is only enabled if SCOABSPATH is set to a
+    # non-empty value in the environment.  Most likely only useful for
+    # creating official distributions of packages.
+    # This is a hack until libtool officially supports absolute path
+    # names for shared libraries.
+    no_undefined_flag_CXX='${wl}-z,text'
+    allow_undefined_flag_CXX='${wl}-z,nodefs'
+    archive_cmds_need_lc_CXX=no
+    hardcode_shlibpath_var_CXX=no
+    hardcode_libdir_flag_spec_CXX='`test -z "$SCOABSPATH" && echo ${wl}-R,$libdir`'
+    hardcode_libdir_separator_CXX=':'
+    link_all_deplibs_CXX=yes
+    export_dynamic_flag_spec_CXX='${wl}-Bexport'
+    runpath_var='LD_RUN_PATH'
+
+    case $cc_basename in
+      CC*)
+	archive_cmds_CXX='$CC -G ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds_CXX='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	;;
+      *)
+	archive_cmds_CXX='$CC -shared ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds_CXX='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	;;
+    esac
+    ;;
+  tandem*)
+    case $cc_basename in
+      NCC*)
+	# NonStop-UX NCC 3.20
+	# FIXME: insert proper C++ library support
+	ld_shlibs_CXX=no
+	;;
+      *)
+	# FIXME: insert proper C++ library support
+	ld_shlibs_CXX=no
+	;;
+    esac
+    ;;
+  vxworks*)
+    # FIXME: insert proper C++ library support
+    ld_shlibs_CXX=no
+    ;;
+  *)
+    # FIXME: insert proper C++ library support
+    ld_shlibs_CXX=no
+    ;;
+esac
+{ echo "$as_me:$LINENO: result: $ld_shlibs_CXX" >&5
+echo "${ECHO_T}$ld_shlibs_CXX" >&6; }
+test "$ld_shlibs_CXX" = no && can_build_shared=no
+
+GCC_CXX="$GXX"
+LD_CXX="$LD"
+
+
+cat > conftest.$ac_ext <<EOF
+class Foo
+{
+public:
+  Foo (void) { a = 0; }
+private:
+  int a;
+};
+EOF
+
+if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; then
+  # Parse the compiler output and extract the necessary
+  # objects, libraries and library flags.
+
+  # Sentinel used to keep track of whether or not we are before
+  # the conftest object file.
+  pre_test_object_deps_done=no
+
+  # The `*' in the case matches for architectures that use `case' in
+  # $output_verbose_cmd can trigger glob expansion during the loop
+  # eval without this substitution.
+  output_verbose_link_cmd=`$echo "X$output_verbose_link_cmd" | $Xsed -e "$no_glob_subst"`
+
+  for p in `eval $output_verbose_link_cmd`; do
+    case $p in
+
+    -L* | -R* | -l*)
+       # Some compilers place space between "-{L,R}" and the path.
+       # Remove the space.
+       if test $p = "-L" \
+	  || test $p = "-R"; then
+	 prev=$p
+	 continue
+       else
+	 prev=
+       fi
+
+       if test "$pre_test_object_deps_done" = no; then
+	 case $p in
+	 -L* | -R*)
+	   # Internal compiler library paths should come after those
+	   # provided the user.  The postdeps already come after the
+	   # user supplied libs so there is no need to process them.
+	   if test -z "$compiler_lib_search_path_CXX"; then
+	     compiler_lib_search_path_CXX="${prev}${p}"
+	   else
+	     compiler_lib_search_path_CXX="${compiler_lib_search_path_CXX} ${prev}${p}"
+	   fi
+	   ;;
+	 # The "-l" case would never come before the object being
+	 # linked, so don't bother handling this case.
+	 esac
+       else
+	 if test -z "$postdeps_CXX"; then
+	   postdeps_CXX="${prev}${p}"
+	 else
+	   postdeps_CXX="${postdeps_CXX} ${prev}${p}"
+	 fi
+       fi
+       ;;
+
+    *.$objext)
+       # This assumes that the test object file only shows up
+       # once in the compiler output.
+       if test "$p" = "conftest.$objext"; then
+	 pre_test_object_deps_done=yes
+	 continue
+       fi
+
+       if test "$pre_test_object_deps_done" = no; then
+	 if test -z "$predep_objects_CXX"; then
+	   predep_objects_CXX="$p"
+	 else
+	   predep_objects_CXX="$predep_objects_CXX $p"
+	 fi
+       else
+	 if test -z "$postdep_objects_CXX"; then
+	   postdep_objects_CXX="$p"
+	 else
+	   postdep_objects_CXX="$postdep_objects_CXX $p"
+	 fi
+       fi
+       ;;
+
+    *) ;; # Ignore the rest.
+
+    esac
+  done
+
+  # Clean up.
+  rm -f a.out a.exe
+else
+  echo "libtool.m4: error: problem compiling CXX test program"
+fi
+
+$rm -f confest.$objext
+
+# PORTME: override above test on systems where it is broken
+case $host_os in
+interix3*)
+  # Interix 3.5 installs completely hosed .la files for C++, so rather than
+  # hack all around it, let's just trust "g++" to DTRT.
+  predep_objects_CXX=
+  postdep_objects_CXX=
+  postdeps_CXX=
+  ;;
+
+solaris*)
+  case $cc_basename in
+  CC*)
+    # Adding this requires a known-good setup of shared libraries for
+    # Sun compiler versions before 5.6, else PIC objects from an old
+    # archive will be linked into the output, leading to subtle bugs.
+    postdeps_CXX='-lCstd -lCrun'
+    ;;
+  esac
+  ;;
+esac
+
+
+case " $postdeps_CXX " in
+*" -lc "*) archive_cmds_need_lc_CXX=no ;;
+esac
+
+lt_prog_compiler_wl_CXX=
+lt_prog_compiler_pic_CXX=
+lt_prog_compiler_static_CXX=
+
+{ echo "$as_me:$LINENO: checking for $compiler option to produce PIC" >&5
+echo $ECHO_N "checking for $compiler option to produce PIC... $ECHO_C" >&6; }
+
+  # C++ specific cases for pic, static, wl, etc.
+  if test "$GXX" = yes; then
+    lt_prog_compiler_wl_CXX='-Wl,'
+    lt_prog_compiler_static_CXX='-static'
+
+    case $host_os in
+    aix*)
+      # All AIX code is PIC.
+      if test "$host_cpu" = ia64; then
+	# AIX 5 now supports IA64 processor
+	lt_prog_compiler_static_CXX='-Bstatic'
+      fi
+      ;;
+    amigaos*)
+      # FIXME: we need at least 68020 code to build shared libraries, but
+      # adding the `-m68020' flag to GCC prevents building anything better,
+      # like `-m68040'.
+      lt_prog_compiler_pic_CXX='-m68020 -resident32 -malways-restore-a4'
+      ;;
+    beos* | cygwin* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)
+      # PIC is the default for these OSes.
+      ;;
+    mingw* | os2* | pw32*)
+      # This hack is so that the source file can tell whether it is being
+      # built for inclusion in a dll (and should export symbols for example).
+      lt_prog_compiler_pic_CXX='-DDLL_EXPORT'
+      ;;
+    darwin* | rhapsody*)
+      # PIC is the default on this platform
+      # Common symbols not allowed in MH_DYLIB files
+      lt_prog_compiler_pic_CXX='-fno-common'
+      ;;
+    *djgpp*)
+      # DJGPP does not support shared libraries at all
+      lt_prog_compiler_pic_CXX=
+      ;;
+    interix3*)
+      # Interix 3.x gcc -fpic/-fPIC options generate broken code.
+      # Instead, we relocate shared libraries at runtime.
+      ;;
+    sysv4*MP*)
+      if test -d /usr/nec; then
+	lt_prog_compiler_pic_CXX=-Kconform_pic
+      fi
+      ;;
+    hpux*)
+      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but
+      # not for PA HP-UX.
+      case $host_cpu in
+      hppa*64*|ia64*)
+	;;
+      *)
+	lt_prog_compiler_pic_CXX='-fPIC'
+	;;
+      esac
+      ;;
+    *)
+      lt_prog_compiler_pic_CXX='-fPIC'
+      ;;
+    esac
+  else
+    case $host_os in
+      aix4* | aix5*)
+	# All AIX code is PIC.
+	if test "$host_cpu" = ia64; then
+	  # AIX 5 now supports IA64 processor
+	  lt_prog_compiler_static_CXX='-Bstatic'
+	else
+	  lt_prog_compiler_static_CXX='-bnso -bI:/lib/syscalls.exp'
+	fi
+	;;
+      chorus*)
+	case $cc_basename in
+	cxch68*)
+	  # Green Hills C++ Compiler
+	  # _LT_AC_TAGVAR(lt_prog_compiler_static, CXX)="--no_auto_instantiation -u __main -u __premain -u _abort -r $COOL_DIR/lib/libOrb.a $MVME_DIR/lib/CC/libC.a $MVME_DIR/lib/classix/libcx.s.a"
+	  ;;
+	esac
+	;;
+       darwin*)
+         # PIC is the default on this platform
+         # Common symbols not allowed in MH_DYLIB files
+         case $cc_basename in
+           xlc*)
+           lt_prog_compiler_pic_CXX='-qnocommon'
+           lt_prog_compiler_wl_CXX='-Wl,'
+           ;;
+         esac
+       ;;
+      dgux*)
+	case $cc_basename in
+	  ec++*)
+	    lt_prog_compiler_pic_CXX='-KPIC'
+	    ;;
+	  ghcx*)
+	    # Green Hills C++ Compiler
+	    lt_prog_compiler_pic_CXX='-pic'
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      freebsd* | dragonfly*)
+	# FreeBSD uses GNU C++
+	;;
+      hpux9* | hpux10* | hpux11*)
+	case $cc_basename in
+	  CC*)
+	    lt_prog_compiler_wl_CXX='-Wl,'
+	    lt_prog_compiler_static_CXX='${wl}-a ${wl}archive'
+	    if test "$host_cpu" != ia64; then
+	      lt_prog_compiler_pic_CXX='+Z'
+	    fi
+	    ;;
+	  aCC*)
+	    lt_prog_compiler_wl_CXX='-Wl,'
+	    lt_prog_compiler_static_CXX='${wl}-a ${wl}archive'
+	    case $host_cpu in
+	    hppa*64*|ia64*)
+	      # +Z the default
+	      ;;
+	    *)
+	      lt_prog_compiler_pic_CXX='+Z'
+	      ;;
+	    esac
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      interix*)
+	# This is c89, which is MS Visual C++ (no shared libs)
+	# Anyone wants to do a port?
+	;;
+      irix5* | irix6* | nonstopux*)
+	case $cc_basename in
+	  CC*)
+	    lt_prog_compiler_wl_CXX='-Wl,'
+	    lt_prog_compiler_static_CXX='-non_shared'
+	    # CC pic flag -KPIC is the default.
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      linux* | k*bsd*-gnu)
+	case $cc_basename in
+	  KCC*)
+	    # KAI C++ Compiler
+	    lt_prog_compiler_wl_CXX='--backend -Wl,'
+	    lt_prog_compiler_pic_CXX='-fPIC'
+	    ;;
+	  icpc* | ecpc*)
+	    # Intel C++
+	    lt_prog_compiler_wl_CXX='-Wl,'
+	    lt_prog_compiler_pic_CXX='-KPIC'
+	    lt_prog_compiler_static_CXX='-static'
+	    ;;
+	  pgCC*)
+	    # Portland Group C++ compiler.
+	    lt_prog_compiler_wl_CXX='-Wl,'
+	    lt_prog_compiler_pic_CXX='-fpic'
+	    lt_prog_compiler_static_CXX='-Bstatic'
+	    ;;
+	  cxx*)
+	    # Compaq C++
+	    # Make sure the PIC flag is empty.  It appears that all Alpha
+	    # Linux and Compaq Tru64 Unix objects are PIC.
+	    lt_prog_compiler_pic_CXX=
+	    lt_prog_compiler_static_CXX='-non_shared'
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      lynxos*)
+	;;
+      m88k*)
+	;;
+      mvs*)
+	case $cc_basename in
+	  cxx*)
+	    lt_prog_compiler_pic_CXX='-W c,exportall'
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      netbsd* | netbsdelf*-gnu)
+	;;
+      osf3* | osf4* | osf5*)
+	case $cc_basename in
+	  KCC*)
+	    lt_prog_compiler_wl_CXX='--backend -Wl,'
+	    ;;
+	  RCC*)
+	    # Rational C++ 2.4.1
+	    lt_prog_compiler_pic_CXX='-pic'
+	    ;;
+	  cxx*)
+	    # Digital/Compaq C++
+	    lt_prog_compiler_wl_CXX='-Wl,'
+	    # Make sure the PIC flag is empty.  It appears that all Alpha
+	    # Linux and Compaq Tru64 Unix objects are PIC.
+	    lt_prog_compiler_pic_CXX=
+	    lt_prog_compiler_static_CXX='-non_shared'
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      psos*)
+	;;
+      solaris*)
+	case $cc_basename in
+	  CC*)
+	    # Sun C++ 4.2, 5.x and Centerline C++
+	    lt_prog_compiler_pic_CXX='-KPIC'
+	    lt_prog_compiler_static_CXX='-Bstatic'
+	    lt_prog_compiler_wl_CXX='-Qoption ld '
+	    ;;
+	  gcx*)
+	    # Green Hills C++ Compiler
+	    lt_prog_compiler_pic_CXX='-PIC'
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      sunos4*)
+	case $cc_basename in
+	  CC*)
+	    # Sun C++ 4.x
+	    lt_prog_compiler_pic_CXX='-pic'
+	    lt_prog_compiler_static_CXX='-Bstatic'
+	    ;;
+	  lcc*)
+	    # Lucid
+	    lt_prog_compiler_pic_CXX='-pic'
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      tandem*)
+	case $cc_basename in
+	  NCC*)
+	    # NonStop-UX NCC 3.20
+	    lt_prog_compiler_pic_CXX='-KPIC'
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)
+	case $cc_basename in
+	  CC*)
+	    lt_prog_compiler_wl_CXX='-Wl,'
+	    lt_prog_compiler_pic_CXX='-KPIC'
+	    lt_prog_compiler_static_CXX='-Bstatic'
+	    ;;
+	esac
+	;;
+      vxworks*)
+	;;
+      *)
+	lt_prog_compiler_can_build_shared_CXX=no
+	;;
+    esac
+  fi
+
+{ echo "$as_me:$LINENO: result: $lt_prog_compiler_pic_CXX" >&5
+echo "${ECHO_T}$lt_prog_compiler_pic_CXX" >&6; }
+
+#
+# Check to make sure the PIC flag actually works.
+#
+if test -n "$lt_prog_compiler_pic_CXX"; then
+
+{ echo "$as_me:$LINENO: checking if $compiler PIC flag $lt_prog_compiler_pic_CXX works" >&5
+echo $ECHO_N "checking if $compiler PIC flag $lt_prog_compiler_pic_CXX works... $ECHO_C" >&6; }
+if test "${lt_prog_compiler_pic_works_CXX+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  lt_prog_compiler_pic_works_CXX=no
+  ac_outfile=conftest.$ac_objext
+   printf "$lt_simple_compile_test_code" > conftest.$ac_ext
+   lt_compiler_flag="$lt_prog_compiler_pic_CXX -DPIC"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   # The option is referenced via a variable to avoid confusing sed.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:12199: $lt_compile\"" >&5)
+   (eval "$lt_compile" 2>conftest.err)
+   ac_status=$?
+   cat conftest.err >&5
+   echo "$as_me:12203: \$? = $ac_status" >&5
+   if (exit $ac_status) && test -s "$ac_outfile"; then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings other than the usual output.
+     $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
+     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
+     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
+       lt_prog_compiler_pic_works_CXX=yes
+     fi
+   fi
+   $rm conftest*
+
+fi
+{ echo "$as_me:$LINENO: result: $lt_prog_compiler_pic_works_CXX" >&5
+echo "${ECHO_T}$lt_prog_compiler_pic_works_CXX" >&6; }
+
+if test x"$lt_prog_compiler_pic_works_CXX" = xyes; then
+    case $lt_prog_compiler_pic_CXX in
+     "" | " "*) ;;
+     *) lt_prog_compiler_pic_CXX=" $lt_prog_compiler_pic_CXX" ;;
+     esac
+else
+    lt_prog_compiler_pic_CXX=
+     lt_prog_compiler_can_build_shared_CXX=no
+fi
+
+fi
+case $host_os in
+  # For platforms which do not support PIC, -DPIC is meaningless:
+  *djgpp*)
+    lt_prog_compiler_pic_CXX=
+    ;;
+  *)
+    lt_prog_compiler_pic_CXX="$lt_prog_compiler_pic_CXX -DPIC"
+    ;;
+esac
+
+#
+# Check to make sure the static flag actually works.
+#
+wl=$lt_prog_compiler_wl_CXX eval lt_tmp_static_flag=\"$lt_prog_compiler_static_CXX\"
+{ echo "$as_me:$LINENO: checking if $compiler static flag $lt_tmp_static_flag works" >&5
+echo $ECHO_N "checking if $compiler static flag $lt_tmp_static_flag works... $ECHO_C" >&6; }
+if test "${lt_prog_compiler_static_works_CXX+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  lt_prog_compiler_static_works_CXX=no
+   save_LDFLAGS="$LDFLAGS"
+   LDFLAGS="$LDFLAGS $lt_tmp_static_flag"
+   printf "$lt_simple_link_test_code" > conftest.$ac_ext
+   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
+     # The linker can only warn and ignore the option if not recognized
+     # So say no if there are warnings
+     if test -s conftest.err; then
+       # Append any errors to the config.log.
+       cat conftest.err 1>&5
+       $echo "X$_lt_linker_boilerplate" | $Xsed -e '/^$/d' > conftest.exp
+       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
+       if diff conftest.exp conftest.er2 >/dev/null; then
+         lt_prog_compiler_static_works_CXX=yes
+       fi
+     else
+       lt_prog_compiler_static_works_CXX=yes
+     fi
+   fi
+   $rm conftest*
+   LDFLAGS="$save_LDFLAGS"
+
+fi
+{ echo "$as_me:$LINENO: result: $lt_prog_compiler_static_works_CXX" >&5
+echo "${ECHO_T}$lt_prog_compiler_static_works_CXX" >&6; }
+
+if test x"$lt_prog_compiler_static_works_CXX" = xyes; then
+    :
+else
+    lt_prog_compiler_static_CXX=
+fi
+
+
+{ echo "$as_me:$LINENO: checking if $compiler supports -c -o file.$ac_objext" >&5
+echo $ECHO_N "checking if $compiler supports -c -o file.$ac_objext... $ECHO_C" >&6; }
+if test "${lt_cv_prog_compiler_c_o_CXX+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  lt_cv_prog_compiler_c_o_CXX=no
+   $rm -r conftest 2>/dev/null
+   mkdir conftest
+   cd conftest
+   mkdir out
+   printf "$lt_simple_compile_test_code" > conftest.$ac_ext
+
+   lt_compiler_flag="-o out/conftest2.$ac_objext"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:12303: $lt_compile\"" >&5)
+   (eval "$lt_compile" 2>out/conftest.err)
+   ac_status=$?
+   cat out/conftest.err >&5
+   echo "$as_me:12307: \$? = $ac_status" >&5
+   if (exit $ac_status) && test -s out/conftest2.$ac_objext
+   then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings
+     $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' > out/conftest.exp
+     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
+     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then
+       lt_cv_prog_compiler_c_o_CXX=yes
+     fi
+   fi
+   chmod u+w . 2>&5
+   $rm conftest*
+   # SGI C++ compiler will create directory out/ii_files/ for
+   # template instantiation
+   test -d out/ii_files && $rm out/ii_files/* && rmdir out/ii_files
+   $rm out/* && rmdir out
+   cd ..
+   rmdir conftest
+   $rm conftest*
+
+fi
+{ echo "$as_me:$LINENO: result: $lt_cv_prog_compiler_c_o_CXX" >&5
+echo "${ECHO_T}$lt_cv_prog_compiler_c_o_CXX" >&6; }
+
+
+hard_links="nottested"
+if test "$lt_cv_prog_compiler_c_o_CXX" = no && test "$need_locks" != no; then
+  # do not overwrite the value of need_locks provided by the user
+  { echo "$as_me:$LINENO: checking if we can lock with hard links" >&5
+echo $ECHO_N "checking if we can lock with hard links... $ECHO_C" >&6; }
+  hard_links=yes
+  $rm conftest*
+  ln conftest.a conftest.b 2>/dev/null && hard_links=no
+  touch conftest.a
+  ln conftest.a conftest.b 2>&5 || hard_links=no
+  ln conftest.a conftest.b 2>/dev/null && hard_links=no
+  { echo "$as_me:$LINENO: result: $hard_links" >&5
+echo "${ECHO_T}$hard_links" >&6; }
+  if test "$hard_links" = no; then
+    { echo "$as_me:$LINENO: WARNING: \`$CC' does not support \`-c -o', so \`make -j' may be unsafe" >&5
+echo "$as_me: WARNING: \`$CC' does not support \`-c -o', so \`make -j' may be unsafe" >&2;}
+    need_locks=warn
+  fi
+else
+  need_locks=no
+fi
+
+{ echo "$as_me:$LINENO: checking whether the $compiler linker ($LD) supports shared libraries" >&5
+echo $ECHO_N "checking whether the $compiler linker ($LD) supports shared libraries... $ECHO_C" >&6; }
+
+  export_symbols_cmds_CXX='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
+  case $host_os in
+  aix4* | aix5*)
+    # If we're using GNU nm, then we don't want the "-C" option.
+    # -C means demangle to AIX nm, but means don't demangle with GNU nm
+    if $NM -V 2>&1 | grep 'GNU' > /dev/null; then
+      export_symbols_cmds_CXX='$NM -Bpg $libobjs $convenience | awk '\''{ if (((\$2 == "T") || (\$2 == "D") || (\$2 == "B")) && (substr(\$3,1,1) != ".")) { print \$3 } }'\'' | sort -u > $export_symbols'
+    else
+      export_symbols_cmds_CXX='$NM -BCpg $libobjs $convenience | awk '\''{ if (((\$2 == "T") || (\$2 == "D") || (\$2 == "B")) && (substr(\$3,1,1) != ".")) { print \$3 } }'\'' | sort -u > $export_symbols'
+    fi
+    ;;
+  pw32*)
+    export_symbols_cmds_CXX="$ltdll_cmds"
+  ;;
+  cygwin* | mingw*)
+    export_symbols_cmds_CXX='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\''/^[BCDGRS] /s/.* \([^ ]*\)/\1 DATA/;/^.* __nm__/s/^.* __nm__\([^ ]*\) [^ ]*/\1 DATA/;/^I /d;/^[AITW] /s/.* //'\'' | sort | uniq > $export_symbols'
+  ;;
+  linux* | k*bsd*-gnu)
+    link_all_deplibs_CXX=no
+  ;;
+  *)
+    export_symbols_cmds_CXX='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
+  ;;
+  esac
+
+{ echo "$as_me:$LINENO: result: $ld_shlibs_CXX" >&5
+echo "${ECHO_T}$ld_shlibs_CXX" >&6; }
+test "$ld_shlibs_CXX" = no && can_build_shared=no
+
+#
+# Do we need to explicitly link libc?
+#
+case "x$archive_cmds_need_lc_CXX" in
+x|xyes)
+  # Assume -lc should be added
+  archive_cmds_need_lc_CXX=yes
+
+  if test "$enable_shared" = yes && test "$GCC" = yes; then
+    case $archive_cmds_CXX in
+    *'~'*)
+      # FIXME: we may have to deal with multi-command sequences.
+      ;;
+    '$CC '*)
+      # Test whether the compiler implicitly links with -lc since on some
+      # systems, -lgcc has to come before -lc. If gcc already passes -lc
+      # to ld, don't add -lc before -lgcc.
+      { echo "$as_me:$LINENO: checking whether -lc should be explicitly linked in" >&5
+echo $ECHO_N "checking whether -lc should be explicitly linked in... $ECHO_C" >&6; }
+      $rm conftest*
+      printf "$lt_simple_compile_test_code" > conftest.$ac_ext
+
+      if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } 2>conftest.err; then
+        soname=conftest
+        lib=conftest
+        libobjs=conftest.$ac_objext
+        deplibs=
+        wl=$lt_prog_compiler_wl_CXX
+	pic_flag=$lt_prog_compiler_pic_CXX
+        compiler_flags=-v
+        linker_flags=-v
+        verstring=
+        output_objdir=.
+        libname=conftest
+        lt_save_allow_undefined_flag=$allow_undefined_flag_CXX
+        allow_undefined_flag_CXX=
+        if { (eval echo "$as_me:$LINENO: \"$archive_cmds_CXX 2\>\&1 \| grep \" -lc \" \>/dev/null 2\>\&1\"") >&5
+  (eval $archive_cmds_CXX 2\>\&1 \| grep \" -lc \" \>/dev/null 2\>\&1) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }
+        then
+	  archive_cmds_need_lc_CXX=no
+        else
+	  archive_cmds_need_lc_CXX=yes
+        fi
+        allow_undefined_flag_CXX=$lt_save_allow_undefined_flag
+      else
+        cat conftest.err 1>&5
+      fi
+      $rm conftest*
+      { echo "$as_me:$LINENO: result: $archive_cmds_need_lc_CXX" >&5
+echo "${ECHO_T}$archive_cmds_need_lc_CXX" >&6; }
+      ;;
+    esac
+  fi
+  ;;
+esac
+
+{ echo "$as_me:$LINENO: checking dynamic linker characteristics" >&5
+echo $ECHO_N "checking dynamic linker characteristics... $ECHO_C" >&6; }
+library_names_spec=
+libname_spec='lib$name'
+soname_spec=
+shrext_cmds=".so"
+postinstall_cmds=
+postuninstall_cmds=
+finish_cmds=
+finish_eval=
+shlibpath_var=
+shlibpath_overrides_runpath=unknown
+version_type=none
+dynamic_linker="$host_os ld.so"
+sys_lib_dlsearch_path_spec="/lib /usr/lib"
+if test "$GCC" = yes; then
+  sys_lib_search_path_spec=`$CC -print-search-dirs | grep "^libraries:" | $SED -e "s/^libraries://" -e "s,=/,/,g"`
+  if echo "$sys_lib_search_path_spec" | grep ';' >/dev/null ; then
+    # if the path contains ";" then we assume it to be the separator
+    # otherwise default to the standard path separator (i.e. ":") - it is
+    # assumed that no part of a normal pathname contains ";" but that should
+    # okay in the real world where ";" in dirpaths is itself problematic.
+    sys_lib_search_path_spec=`echo "$sys_lib_search_path_spec" | $SED -e 's/;/ /g'`
+  else
+    sys_lib_search_path_spec=`echo "$sys_lib_search_path_spec" | $SED  -e "s/$PATH_SEPARATOR/ /g"`
+  fi
+else
+  sys_lib_search_path_spec="/lib /usr/lib /usr/local/lib"
+fi
+need_lib_prefix=unknown
+hardcode_into_libs=no
+
+# when you set need_version to no, make sure it does not cause -set_version
+# flags to be left without arguments
+need_version=unknown
+
+case $host_os in
+aix3*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix $libname.a'
+  shlibpath_var=LIBPATH
+
+  # AIX 3 has no versioning support, so we append a major version to the name.
+  soname_spec='${libname}${release}${shared_ext}$major'
+  ;;
+
+aix4* | aix5*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  hardcode_into_libs=yes
+  if test "$host_cpu" = ia64; then
+    # AIX 5 supports IA64
+    library_names_spec='${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext}$versuffix $libname${shared_ext}'
+    shlibpath_var=LD_LIBRARY_PATH
+  else
+    # With GCC up to 2.95.x, collect2 would create an import file
+    # for dependence libraries.  The import file would start with
+    # the line `#! .'.  This would cause the generated library to
+    # depend on `.', always an invalid library.  This was fixed in
+    # development snapshots of GCC prior to 3.0.
+    case $host_os in
+      aix4 | aix4.[01] | aix4.[01].*)
+      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'
+	   echo ' yes '
+	   echo '#endif'; } | ${CC} -E - | grep yes > /dev/null; then
+	:
+      else
+	can_build_shared=no
+      fi
+      ;;
+    esac
+    # AIX (on Power*) has no versioning support, so currently we can not hardcode correct
+    # soname into executable. Probably we can add versioning support to
+    # collect2, so additional links can be useful in future.
+    if test "$aix_use_runtimelinking" = yes; then
+      # If using run time linking (on AIX 4.2 or later) use lib<name>.so
+      # instead of lib<name>.a to let people know that these are not
+      # typical AIX shared libraries.
+      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    else
+      # We preserve .a as extension for shared libraries through AIX4.2
+      # and later when we are not doing run time linking.
+      library_names_spec='${libname}${release}.a $libname.a'
+      soname_spec='${libname}${release}${shared_ext}$major'
+    fi
+    shlibpath_var=LIBPATH
+  fi
+  ;;
+
+amigaos*)
+  library_names_spec='$libname.ixlibrary $libname.a'
+  # Create ${libname}_ixlibrary.a entries in /sys/libs.
+  finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`$echo "X$lib" | $Xsed -e '\''s%^.*/\([^/]*\)\.ixlibrary$%\1%'\''`; test $rm /sys/libs/${libname}_ixlibrary.a; $show "cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'
+  ;;
+
+beos*)
+  library_names_spec='${libname}${shared_ext}'
+  dynamic_linker="$host_os ld.so"
+  shlibpath_var=LIBRARY_PATH
+  ;;
+
+bsdi[45]*)
+  version_type=linux
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  sys_lib_search_path_spec="/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib"
+  sys_lib_dlsearch_path_spec="/shlib /usr/lib /usr/local/lib"
+  # the default ld.so.conf also contains /usr/contrib/lib and
+  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow
+  # libtool to hard-code these into programs
+  ;;
+
+cygwin* | mingw* | pw32*)
+  version_type=windows
+  shrext_cmds=".dll"
+  need_version=no
+  need_lib_prefix=no
+
+  case $GCC,$host_os in
+  yes,cygwin* | yes,mingw* | yes,pw32*)
+    library_names_spec='$libname.dll.a'
+    # DLL is installed to $(libdir)/../bin by postinstall_cmds
+    postinstall_cmds='base_file=`basename \${file}`~
+      dlpath=`$SHELL 2>&1 -c '\''. $dir/'\''\${base_file}'\''i;echo \$dlname'\''`~
+      dldir=$destdir/`dirname \$dlpath`~
+      test -d \$dldir || mkdir -p \$dldir~
+      $install_prog $dir/$dlname \$dldir/$dlname~
+      chmod a+x \$dldir/$dlname'
+    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\''. $file; echo \$dlname'\''`~
+      dlpath=$dir/\$dldll~
+       $rm \$dlpath'
+    shlibpath_overrides_runpath=yes
+
+    case $host_os in
+    cygwin*)
+      # Cygwin DLLs use 'cyg' prefix rather than 'lib'
+      soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      sys_lib_search_path_spec="/usr/lib /lib/w32api /lib /usr/local/lib"
+      ;;
+    mingw*)
+      # MinGW DLLs use traditional 'lib' prefix
+      soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      sys_lib_search_path_spec=`$CC -print-search-dirs | grep "^libraries:" | $SED -e "s/^libraries://" -e "s,=/,/,g"`
+      if echo "$sys_lib_search_path_spec" | grep ';[c-zC-Z]:/' >/dev/null; then
+        # It is most probably a Windows format PATH printed by
+        # mingw gcc, but we are running on Cygwin. Gcc prints its search
+        # path with ; separators, and with drive letters. We can handle the
+        # drive letters (cygwin fileutils understands them), so leave them,
+        # especially as we might pass files found there to a mingw objdump,
+        # which wouldn't understand a cygwinified path. Ahh.
+        sys_lib_search_path_spec=`echo "$sys_lib_search_path_spec" | $SED -e 's/;/ /g'`
+      else
+        sys_lib_search_path_spec=`echo "$sys_lib_search_path_spec" | $SED  -e "s/$PATH_SEPARATOR/ /g"`
+      fi
+      ;;
+    pw32*)
+      # pw32 DLLs use 'pw' prefix rather than 'lib'
+      library_names_spec='`echo ${libname} | sed -e 's/^lib/pw/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      ;;
+    esac
+    ;;
+
+  *)
+    library_names_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext} $libname.lib'
+    ;;
+  esac
+  dynamic_linker='Win32 ld.exe'
+  # FIXME: first we should search . and the directory the executable is in
+  shlibpath_var=PATH
+  ;;
+
+darwin* | rhapsody*)
+  dynamic_linker="$host_os dyld"
+  version_type=darwin
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${versuffix}$shared_ext ${libname}${release}${major}$shared_ext ${libname}$shared_ext'
+  soname_spec='${libname}${release}${major}$shared_ext'
+  shlibpath_overrides_runpath=yes
+  shlibpath_var=DYLD_LIBRARY_PATH
+  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'
+  # Apple's gcc prints 'gcc -print-search-dirs' doesn't operate the same.
+  if test "$GCC" = yes; then
+    sys_lib_search_path_spec=`$CC -print-search-dirs | tr "\n" "$PATH_SEPARATOR" | sed -e 's/libraries:/@libraries:/' | tr "@" "\n" | grep "^libraries:" | sed -e "s/^libraries://" -e "s,=/,/,g" -e "s,$PATH_SEPARATOR, ,g" -e "s,.*,& /lib /usr/lib /usr/local/lib,g"`
+  else
+    sys_lib_search_path_spec='/lib /usr/lib /usr/local/lib'
+  fi
+  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'
+  ;;
+
+dgux*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname$shared_ext'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  ;;
+
+freebsd1*)
+  dynamic_linker=no
+  ;;
+
+freebsd* | dragonfly*)
+  # DragonFly does not have aout.  When/if they implement a new
+  # versioning mechanism, adjust this.
+  if test -x /usr/bin/objformat; then
+    objformat=`/usr/bin/objformat`
+  else
+    case $host_os in
+    freebsd[123]*) objformat=aout ;;
+    *) objformat=elf ;;
+    esac
+  fi
+  version_type=freebsd-$objformat
+  case $version_type in
+    freebsd-elf*)
+      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'
+      need_version=no
+      need_lib_prefix=no
+      ;;
+    freebsd-*)
+      library_names_spec='${libname}${release}${shared_ext}$versuffix $libname${shared_ext}$versuffix'
+      need_version=yes
+      ;;
+  esac
+  shlibpath_var=LD_LIBRARY_PATH
+  case $host_os in
+  freebsd2*)
+    shlibpath_overrides_runpath=yes
+    ;;
+  freebsd3.[01]* | freebsdelf3.[01]*)
+    shlibpath_overrides_runpath=yes
+    hardcode_into_libs=yes
+    ;;
+  freebsd3.[2-9]* | freebsdelf3.[2-9]* | \
+  freebsd4.[0-5] | freebsdelf4.[0-5] | freebsd4.1.1 | freebsdelf4.1.1)
+    shlibpath_overrides_runpath=no
+    hardcode_into_libs=yes
+    ;;
+  freebsd*) # from 4.6 on
+    shlibpath_overrides_runpath=yes
+    hardcode_into_libs=yes
+    ;;
+  esac
+  ;;
+
+gnu*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  hardcode_into_libs=yes
+  ;;
+
+hpux9* | hpux10* | hpux11*)
+  # Give a soname corresponding to the major version so that dld.sl refuses to
+  # link against other versions.
+  version_type=sunos
+  need_lib_prefix=no
+  need_version=no
+  case $host_cpu in
+  ia64*)
+    shrext_cmds='.so'
+    hardcode_into_libs=yes
+    dynamic_linker="$host_os dld.so"
+    shlibpath_var=LD_LIBRARY_PATH
+    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    if test "X$HPUX_IA64_MODE" = X32; then
+      sys_lib_search_path_spec="/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib"
+    else
+      sys_lib_search_path_spec="/usr/lib/hpux64 /usr/local/lib/hpux64"
+    fi
+    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
+    ;;
+   hppa*64*)
+     shrext_cmds='.sl'
+     hardcode_into_libs=yes
+     dynamic_linker="$host_os dld.sl"
+     shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH
+     shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
+     library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+     soname_spec='${libname}${release}${shared_ext}$major'
+     sys_lib_search_path_spec="/usr/lib/pa20_64 /usr/ccs/lib/pa20_64"
+     sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
+     ;;
+   *)
+    shrext_cmds='.sl'
+    dynamic_linker="$host_os dld.sl"
+    shlibpath_var=SHLIB_PATH
+    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    ;;
+  esac
+  # HP-UX runs *really* slowly unless shared libraries are mode 555.
+  postinstall_cmds='chmod 555 $lib'
+  ;;
+
+interix3*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  ;;
+
+irix5* | irix6* | nonstopux*)
+  case $host_os in
+    nonstopux*) version_type=nonstopux ;;
+    *)
+	if test "$lt_cv_prog_gnu_ld" = yes; then
+		version_type=linux
+	else
+		version_type=irix
+	fi ;;
+  esac
+  need_lib_prefix=no
+  need_version=no
+  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext} $libname${shared_ext}'
+  case $host_os in
+  irix5* | nonstopux*)
+    libsuff= shlibsuff=
+    ;;
+  *)
+    case $LD in # libtool.m4 will add one of these switches to LD
+    *-32|*"-32 "|*-melf32bsmip|*"-melf32bsmip ")
+      libsuff= shlibsuff= libmagic=32-bit;;
+    *-n32|*"-n32 "|*-melf32bmipn32|*"-melf32bmipn32 ")
+      libsuff=32 shlibsuff=N32 libmagic=N32;;
+    *-64|*"-64 "|*-melf64bmip|*"-melf64bmip ")
+      libsuff=64 shlibsuff=64 libmagic=64-bit;;
+    *) libsuff= shlibsuff= libmagic=never-match;;
+    esac
+    ;;
+  esac
+  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH
+  shlibpath_overrides_runpath=no
+  sys_lib_search_path_spec="/usr/lib${libsuff} /lib${libsuff} /usr/local/lib${libsuff}"
+  sys_lib_dlsearch_path_spec="/usr/lib${libsuff} /lib${libsuff}"
+  hardcode_into_libs=yes
+  ;;
+
+# No shared lib support for Linux oldld, aout, or coff.
+linux*oldld* | linux*aout* | linux*coff*)
+  dynamic_linker=no
+  ;;
+
+# This must be Linux ELF.
+linux* | k*bsd*-gnu)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig -n $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  # This implies no fast_install, which is unacceptable.
+  # Some rework will be needed to allow for fast_install
+  # before this can be enabled.
+  hardcode_into_libs=yes
+
+  # Append ld.so.conf contents to the search path
+  if test -f /etc/ld.so.conf; then
+    lt_ld_extra=`awk '/^include / { system(sprintf("cd /etc; cat %s", \$2)); skip = 1; } { if (!skip) print \$0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;s/[:,	]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;/^$/d' | tr '\n' ' '`
+    sys_lib_dlsearch_path_spec="/lib /usr/lib $lt_ld_extra"
+  fi
+
+  # We used to test for /lib/ld.so.1 and disable shared libraries on
+  # powerpc, because MkLinux only supported shared libraries with the
+  # GNU dynamic linker.  Since this was broken with cross compilers,
+  # most powerpc-linux boxes support dynamic linking these days and
+  # people can always --disable-shared, the test was removed, and we
+  # assume the GNU/Linux dynamic linker is in use.
+  dynamic_linker='GNU/Linux ld.so'
+  ;;
+
+netbsdelf*-gnu)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  dynamic_linker='NetBSD ld.elf_so'
+  ;;
+
+netbsd*)
+  version_type=sunos
+  need_lib_prefix=no
+  need_version=no
+  if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+    finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
+    dynamic_linker='NetBSD (a.out) ld.so'
+  else
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    dynamic_linker='NetBSD ld.elf_so'
+  fi
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  hardcode_into_libs=yes
+  ;;
+
+newsos6)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  ;;
+
+nto-qnx*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  ;;
+
+openbsd*)
+  version_type=sunos
+  sys_lib_dlsearch_path_spec="/usr/lib"
+  need_lib_prefix=no
+  # Some older versions of OpenBSD (3.3 at least) *do* need versioned libs.
+  case $host_os in
+    openbsd3.3 | openbsd3.3.*) need_version=yes ;;
+    *)                         need_version=no  ;;
+  esac
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  if test -z "`echo __ELF__ | $CC -E - | grep __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+    case $host_os in
+      openbsd2.[89] | openbsd2.[89].*)
+	shlibpath_overrides_runpath=no
+	;;
+      *)
+	shlibpath_overrides_runpath=yes
+	;;
+      esac
+  else
+    shlibpath_overrides_runpath=yes
+  fi
+  ;;
+
+os2*)
+  libname_spec='$name'
+  shrext_cmds=".dll"
+  need_lib_prefix=no
+  library_names_spec='$libname${shared_ext} $libname.a'
+  dynamic_linker='OS/2 ld.exe'
+  shlibpath_var=LIBPATH
+  ;;
+
+osf3* | osf4* | osf5*)
+  version_type=osf
+  need_lib_prefix=no
+  need_version=no
+  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  shlibpath_var=LD_LIBRARY_PATH
+  sys_lib_search_path_spec="/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib"
+  sys_lib_dlsearch_path_spec="$sys_lib_search_path_spec"
+  ;;
+
+solaris*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  hardcode_into_libs=yes
+  # ldd complains unless libraries are executable
+  postinstall_cmds='chmod +x $lib'
+  ;;
+
+sunos4*)
+  version_type=sunos
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+  finish_cmds='PATH="\$PATH:/usr/etc" ldconfig $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  if test "$with_gnu_ld" = yes; then
+    need_lib_prefix=no
+  fi
+  need_version=yes
+  ;;
+
+sysv4 | sysv4.3*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  case $host_vendor in
+    sni)
+      shlibpath_overrides_runpath=no
+      need_lib_prefix=no
+      export_dynamic_flag_spec='${wl}-Blargedynsym'
+      runpath_var=LD_RUN_PATH
+      ;;
+    siemens)
+      need_lib_prefix=no
+      ;;
+    motorola)
+      need_lib_prefix=no
+      need_version=no
+      shlibpath_overrides_runpath=no
+      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'
+      ;;
+  esac
+  ;;
+
+sysv4*MP*)
+  if test -d /usr/nec ;then
+    version_type=linux
+    library_names_spec='$libname${shared_ext}.$versuffix $libname${shared_ext}.$major $libname${shared_ext}'
+    soname_spec='$libname${shared_ext}.$major'
+    shlibpath_var=LD_LIBRARY_PATH
+  fi
+  ;;
+
+sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
+  version_type=freebsd-elf
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  hardcode_into_libs=yes
+  if test "$with_gnu_ld" = yes; then
+    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'
+    shlibpath_overrides_runpath=no
+  else
+    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'
+    shlibpath_overrides_runpath=yes
+    case $host_os in
+      sco3.2v5*)
+        sys_lib_search_path_spec="$sys_lib_search_path_spec /lib"
+	;;
+    esac
+  fi
+  sys_lib_dlsearch_path_spec='/usr/lib'
+  ;;
+
+uts4*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  ;;
+
+*)
+  dynamic_linker=no
+  ;;
+esac
+{ echo "$as_me:$LINENO: result: $dynamic_linker" >&5
+echo "${ECHO_T}$dynamic_linker" >&6; }
+test "$dynamic_linker" = no && can_build_shared=no
+
+variables_saved_for_relink="PATH $shlibpath_var $runpath_var"
+if test "$GCC" = yes; then
+  variables_saved_for_relink="$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH"
+fi
+
+{ echo "$as_me:$LINENO: checking how to hardcode library paths into programs" >&5
+echo $ECHO_N "checking how to hardcode library paths into programs... $ECHO_C" >&6; }
+hardcode_action_CXX=
+if test -n "$hardcode_libdir_flag_spec_CXX" || \
+   test -n "$runpath_var_CXX" || \
+   test "X$hardcode_automatic_CXX" = "Xyes" ; then
+
+  # We can hardcode non-existant directories.
+  if test "$hardcode_direct_CXX" != no &&
+     # If the only mechanism to avoid hardcoding is shlibpath_var, we
+     # have to relink, otherwise we might link with an installed library
+     # when we should be linking with a yet-to-be-installed one
+     ## test "$_LT_AC_TAGVAR(hardcode_shlibpath_var, CXX)" != no &&
+     test "$hardcode_minus_L_CXX" != no; then
+    # Linking always hardcodes the temporary library directory.
+    hardcode_action_CXX=relink
+  else
+    # We can link without hardcoding, and we can hardcode nonexisting dirs.
+    hardcode_action_CXX=immediate
+  fi
+else
+  # We cannot hardcode anything, or else we can only hardcode existing
+  # directories.
+  hardcode_action_CXX=unsupported
+fi
+{ echo "$as_me:$LINENO: result: $hardcode_action_CXX" >&5
+echo "${ECHO_T}$hardcode_action_CXX" >&6; }
+
+if test "$hardcode_action_CXX" = relink; then
+  # Fast installation is not supported
+  enable_fast_install=no
+elif test "$shlibpath_overrides_runpath" = yes ||
+     test "$enable_shared" = no; then
+  # Fast installation is not necessary
+  enable_fast_install=needless
+fi
+
+
+# The else clause should only fire when bootstrapping the
+# libtool distribution, otherwise you forgot to ship ltmain.sh
+# with your package, and you will get complaints that there are
+# no rules to generate ltmain.sh.
+if test -f "$ltmain"; then
+  # See if we are running on zsh, and set the options which allow our commands through
+  # without removal of \ escapes.
+  if test -n "${ZSH_VERSION+set}" ; then
+    setopt NO_GLOB_SUBST
+  fi
+  # Now quote all the things that may contain metacharacters while being
+  # careful not to overquote the AC_SUBSTed values.  We take copies of the
+  # variables and quote the copies for generation of the libtool script.
+  for var in echo old_CC old_CFLAGS AR AR_FLAGS EGREP RANLIB LN_S LTCC LTCFLAGS NM \
+    SED SHELL STRIP \
+    libname_spec library_names_spec soname_spec extract_expsyms_cmds \
+    old_striplib striplib file_magic_cmd finish_cmds finish_eval \
+    deplibs_check_method reload_flag reload_cmds need_locks \
+    lt_cv_sys_global_symbol_pipe lt_cv_sys_global_symbol_to_cdecl \
+    lt_cv_sys_global_symbol_to_c_name_address \
+    sys_lib_search_path_spec sys_lib_dlsearch_path_spec \
+    old_postinstall_cmds old_postuninstall_cmds \
+    compiler_CXX \
+    CC_CXX \
+    LD_CXX \
+    lt_prog_compiler_wl_CXX \
+    lt_prog_compiler_pic_CXX \
+    lt_prog_compiler_static_CXX \
+    lt_prog_compiler_no_builtin_flag_CXX \
+    export_dynamic_flag_spec_CXX \
+    thread_safe_flag_spec_CXX \
+    whole_archive_flag_spec_CXX \
+    enable_shared_with_static_runtimes_CXX \
+    old_archive_cmds_CXX \
+    old_archive_from_new_cmds_CXX \
+    predep_objects_CXX \
+    postdep_objects_CXX \
+    predeps_CXX \
+    postdeps_CXX \
+    compiler_lib_search_path_CXX \
+    archive_cmds_CXX \
+    archive_expsym_cmds_CXX \
+    postinstall_cmds_CXX \
+    postuninstall_cmds_CXX \
+    old_archive_from_expsyms_cmds_CXX \
+    allow_undefined_flag_CXX \
+    no_undefined_flag_CXX \
+    export_symbols_cmds_CXX \
+    hardcode_libdir_flag_spec_CXX \
+    hardcode_libdir_flag_spec_ld_CXX \
+    hardcode_libdir_separator_CXX \
+    hardcode_automatic_CXX \
+    module_cmds_CXX \
+    module_expsym_cmds_CXX \
+    lt_cv_prog_compiler_c_o_CXX \
+    exclude_expsyms_CXX \
+    include_expsyms_CXX; do
+
+    case $var in
+    old_archive_cmds_CXX | \
+    old_archive_from_new_cmds_CXX | \
+    archive_cmds_CXX | \
+    archive_expsym_cmds_CXX | \
+    module_cmds_CXX | \
+    module_expsym_cmds_CXX | \
+    old_archive_from_expsyms_cmds_CXX | \
+    export_symbols_cmds_CXX | \
+    extract_expsyms_cmds | reload_cmds | finish_cmds | \
+    postinstall_cmds | postuninstall_cmds | \
+    old_postinstall_cmds | old_postuninstall_cmds | \
+    sys_lib_search_path_spec | sys_lib_dlsearch_path_spec)
+      # Double-quote double-evaled strings.
+      eval "lt_$var=\\\"\`\$echo \"X\$$var\" | \$Xsed -e \"\$double_quote_subst\" -e \"\$sed_quote_subst\" -e \"\$delay_variable_subst\"\`\\\""
+      ;;
+    *)
+      eval "lt_$var=\\\"\`\$echo \"X\$$var\" | \$Xsed -e \"\$sed_quote_subst\"\`\\\""
+      ;;
+    esac
+  done
+
+  case $lt_echo in
+  *'\$0 --fallback-echo"')
+    lt_echo=`$echo "X$lt_echo" | $Xsed -e 's/\\\\\\\$0 --fallback-echo"$/$0 --fallback-echo"/'`
+    ;;
+  esac
+
+cfgfile="$ofile"
+
+  cat <<__EOF__ >> "$cfgfile"
+# ### BEGIN LIBTOOL TAG CONFIG: $tagname
+
+# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
+
+# Shell to use when invoking shell scripts.
+SHELL=$lt_SHELL
+
+# Whether or not to build shared libraries.
+build_libtool_libs=$enable_shared
+
+# Whether or not to build static libraries.
+build_old_libs=$enable_static
+
+# Whether or not to add -lc for building shared libraries.
+build_libtool_need_lc=$archive_cmds_need_lc_CXX
+
+# Whether or not to disallow shared libs when runtime libs are static
+allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes_CXX
+
+# Whether or not to optimize for fast installation.
+fast_install=$enable_fast_install
+
+# The host system.
+host_alias=$host_alias
+host=$host
+host_os=$host_os
+
+# The build system.
+build_alias=$build_alias
+build=$build
+build_os=$build_os
+
+# An echo program that does not interpret backslashes.
+echo=$lt_echo
+
+# The archiver.
+AR=$lt_AR
+AR_FLAGS=$lt_AR_FLAGS
+
+# A C compiler.
+LTCC=$lt_LTCC
+
+# LTCC compiler flags.
+LTCFLAGS=$lt_LTCFLAGS
+
+# A language-specific compiler.
+CC=$lt_compiler_CXX
+
+# Is the compiler the GNU C compiler?
+with_gcc=$GCC_CXX
+
+# An ERE matcher.
+EGREP=$lt_EGREP
+
+# The linker used to build libraries.
+LD=$lt_LD_CXX
+
+# Whether we need hard or soft links.
+LN_S=$lt_LN_S
+
+# A BSD-compatible nm program.
+NM=$lt_NM
+
+# A symbol stripping program
+STRIP=$lt_STRIP
+
+# Used to examine libraries when file_magic_cmd begins "file"
+MAGIC_CMD=$MAGIC_CMD
+
+# Used on cygwin: DLL creation program.
+DLLTOOL="$DLLTOOL"
+
+# Used on cygwin: object dumper.
+OBJDUMP="$OBJDUMP"
+
+# Used on cygwin: assembler.
+AS="$AS"
+
+# The name of the directory that contains temporary libtool files.
+objdir=$objdir
+
+# How to create reloadable object files.
+reload_flag=$lt_reload_flag
+reload_cmds=$lt_reload_cmds
+
+# How to pass a linker flag through the compiler.
+wl=$lt_lt_prog_compiler_wl_CXX
+
+# Object file suffix (normally "o").
+objext="$ac_objext"
+
+# Old archive suffix (normally "a").
+libext="$libext"
+
+# Shared library suffix (normally ".so").
+shrext_cmds='$shrext_cmds'
+
+# Executable file suffix (normally "").
+exeext="$exeext"
+
+# Additional compiler flags for building library objects.
+pic_flag=$lt_lt_prog_compiler_pic_CXX
+pic_mode=$pic_mode
+
+# What is the maximum length of a command?
+max_cmd_len=$lt_cv_sys_max_cmd_len
+
+# Does compiler simultaneously support -c and -o options?
+compiler_c_o=$lt_lt_cv_prog_compiler_c_o_CXX
+
+# Must we lock files when doing compilation?
+need_locks=$lt_need_locks
+
+# Do we need the lib prefix for modules?
+need_lib_prefix=$need_lib_prefix
+
+# Do we need a version for libraries?
+need_version=$need_version
+
+# Whether dlopen is supported.
+dlopen_support=$enable_dlopen
+
+# Whether dlopen of programs is supported.
+dlopen_self=$enable_dlopen_self
+
+# Whether dlopen of statically linked programs is supported.
+dlopen_self_static=$enable_dlopen_self_static
+
+# Compiler flag to prevent dynamic linking.
+link_static_flag=$lt_lt_prog_compiler_static_CXX
+
+# Compiler flag to turn off builtin functions.
+no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag_CXX
+
+# Compiler flag to allow reflexive dlopens.
+export_dynamic_flag_spec=$lt_export_dynamic_flag_spec_CXX
+
+# Compiler flag to generate shared objects directly from archives.
+whole_archive_flag_spec=$lt_whole_archive_flag_spec_CXX
+
+# Compiler flag to generate thread-safe objects.
+thread_safe_flag_spec=$lt_thread_safe_flag_spec_CXX
+
+# Library versioning type.
+version_type=$version_type
+
+# Format of library name prefix.
+libname_spec=$lt_libname_spec
+
+# List of archive names.  First name is the real one, the rest are links.
+# The last name is the one that the linker finds with -lNAME.
+library_names_spec=$lt_library_names_spec
+
+# The coded name of the library, if different from the real name.
+soname_spec=$lt_soname_spec
+
+# Commands used to build and install an old-style archive.
+RANLIB=$lt_RANLIB
+old_archive_cmds=$lt_old_archive_cmds_CXX
+old_postinstall_cmds=$lt_old_postinstall_cmds
+old_postuninstall_cmds=$lt_old_postuninstall_cmds
+
+# Create an old-style archive from a shared archive.
+old_archive_from_new_cmds=$lt_old_archive_from_new_cmds_CXX
+
+# Create a temporary old-style archive to link instead of a shared archive.
+old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds_CXX
+
+# Commands used to build and install a shared archive.
+archive_cmds=$lt_archive_cmds_CXX
+archive_expsym_cmds=$lt_archive_expsym_cmds_CXX
+postinstall_cmds=$lt_postinstall_cmds
+postuninstall_cmds=$lt_postuninstall_cmds
+
+# Commands used to build a loadable module (assumed same as above if empty)
+module_cmds=$lt_module_cmds_CXX
+module_expsym_cmds=$lt_module_expsym_cmds_CXX
+
+# Commands to strip libraries.
+old_striplib=$lt_old_striplib
+striplib=$lt_striplib
+
+# Dependencies to place before the objects being linked to create a
+# shared library.
+predep_objects=$lt_predep_objects_CXX
+
+# Dependencies to place after the objects being linked to create a
+# shared library.
+postdep_objects=$lt_postdep_objects_CXX
+
+# Dependencies to place before the objects being linked to create a
+# shared library.
+predeps=$lt_predeps_CXX
+
+# Dependencies to place after the objects being linked to create a
+# shared library.
+postdeps=$lt_postdeps_CXX
+
+# The library search path used internally by the compiler when linking
+# a shared library.
+compiler_lib_search_path=$lt_compiler_lib_search_path_CXX
+
+# Method to check whether dependent libraries are shared objects.
+deplibs_check_method=$lt_deplibs_check_method
+
+# Command to use when deplibs_check_method == file_magic.
+file_magic_cmd=$lt_file_magic_cmd
+
+# Flag that allows shared libraries with undefined symbols to be built.
+allow_undefined_flag=$lt_allow_undefined_flag_CXX
+
+# Flag that forces no undefined symbols.
+no_undefined_flag=$lt_no_undefined_flag_CXX
+
+# Commands used to finish a libtool library installation in a directory.
+finish_cmds=$lt_finish_cmds
+
+# Same as above, but a single script fragment to be evaled but not shown.
+finish_eval=$lt_finish_eval
+
+# Take the output of nm and produce a listing of raw symbols and C names.
+global_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe
+
+# Transform the output of nm in a proper C declaration
+global_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl
+
+# Transform the output of nm in a C name address pair
+global_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address
+
+# This is the shared library runtime path variable.
+runpath_var=$runpath_var
+
+# This is the shared library path variable.
+shlibpath_var=$shlibpath_var
+
+# Is shlibpath searched before the hard-coded library search path?
+shlibpath_overrides_runpath=$shlibpath_overrides_runpath
+
+# How to hardcode a shared library path into an executable.
+hardcode_action=$hardcode_action_CXX
+
+# Whether we should hardcode library paths into libraries.
+hardcode_into_libs=$hardcode_into_libs
+
+# Flag to hardcode \$libdir into a binary during linking.
+# This must work even if \$libdir does not exist.
+hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_CXX
+
+# If ld is used when linking, flag to hardcode \$libdir into
+# a binary during linking. This must work even if \$libdir does
+# not exist.
+hardcode_libdir_flag_spec_ld=$lt_hardcode_libdir_flag_spec_ld_CXX
+
+# Whether we need a single -rpath flag with a separated argument.
+hardcode_libdir_separator=$lt_hardcode_libdir_separator_CXX
+
+# Set to yes if using DIR/libNAME${shared_ext} during linking hardcodes DIR into the
+# resulting binary.
+hardcode_direct=$hardcode_direct_CXX
+
+# Set to yes if using the -LDIR flag during linking hardcodes DIR into the
+# resulting binary.
+hardcode_minus_L=$hardcode_minus_L_CXX
+
+# Set to yes if using SHLIBPATH_VAR=DIR during linking hardcodes DIR into
+# the resulting binary.
+hardcode_shlibpath_var=$hardcode_shlibpath_var_CXX
+
+# Set to yes if building a shared library automatically hardcodes DIR into the library
+# and all subsequent libraries and executables linked against it.
+hardcode_automatic=$hardcode_automatic_CXX
+
+# Variables whose values should be saved in libtool wrapper scripts and
+# restored at relink time.
+variables_saved_for_relink="$variables_saved_for_relink"
+
+# Whether libtool must link a program against all its dependency libraries.
+link_all_deplibs=$link_all_deplibs_CXX
+
+# Compile-time system search path for libraries
+sys_lib_search_path_spec=$lt_sys_lib_search_path_spec
+
+# Run-time system search path for libraries
+sys_lib_dlsearch_path_spec=$lt_sys_lib_dlsearch_path_spec
+
+# Fix the shell variable \$srcfile for the compiler.
+fix_srcfile_path="$fix_srcfile_path_CXX"
+
+# Set to yes if exported symbols are required.
+always_export_symbols=$always_export_symbols_CXX
+
+# The commands to list exported symbols.
+export_symbols_cmds=$lt_export_symbols_cmds_CXX
+
+# The commands to extract the exported symbol list from a shared archive.
+extract_expsyms_cmds=$lt_extract_expsyms_cmds
+
+# Symbols that should not be listed in the preloaded symbols.
+exclude_expsyms=$lt_exclude_expsyms_CXX
+
+# Symbols that must always be exported.
+include_expsyms=$lt_include_expsyms_CXX
+
+# ### END LIBTOOL TAG CONFIG: $tagname
+
+__EOF__
+
+
+else
+  # If there is no Makefile yet, we rely on a make rule to execute
+  # `config.status --recheck' to rerun these tests and create the
+  # libtool script then.
+  ltmain_in=`echo $ltmain | sed -e 's/\.sh$/.in/'`
+  if test -f "$ltmain_in"; then
+    test -f Makefile && make "$ltmain"
+  fi
+fi
+
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+CC=$lt_save_CC
+LDCXX=$LD
+LD=$lt_save_LD
+GCC=$lt_save_GCC
+with_gnu_ldcxx=$with_gnu_ld
+with_gnu_ld=$lt_save_with_gnu_ld
+lt_cv_path_LDCXX=$lt_cv_path_LD
+lt_cv_path_LD=$lt_save_path_LD
+lt_cv_prog_gnu_ldcxx=$lt_cv_prog_gnu_ld
+lt_cv_prog_gnu_ld=$lt_save_with_gnu_ld
+
+	else
+	  tagname=""
+	fi
+	;;
+
+      F77)
+	if test -n "$F77" && test "X$F77" != "Xno"; then
+
+ac_ext=f
+ac_compile='$F77 -c $FFLAGS conftest.$ac_ext >&5'
+ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_f77_compiler_gnu
+
+
+archive_cmds_need_lc_F77=no
+allow_undefined_flag_F77=
+always_export_symbols_F77=no
+archive_expsym_cmds_F77=
+export_dynamic_flag_spec_F77=
+hardcode_direct_F77=no
+hardcode_libdir_flag_spec_F77=
+hardcode_libdir_flag_spec_ld_F77=
+hardcode_libdir_separator_F77=
+hardcode_minus_L_F77=no
+hardcode_automatic_F77=no
+module_cmds_F77=
+module_expsym_cmds_F77=
+link_all_deplibs_F77=unknown
+old_archive_cmds_F77=$old_archive_cmds
+no_undefined_flag_F77=
+whole_archive_flag_spec_F77=
+enable_shared_with_static_runtimes_F77=no
+
+# Source file extension for f77 test sources.
+ac_ext=f
+
+# Object file extension for compiled f77 test sources.
+objext=o
+objext_F77=$objext
+
+# Code to be used in simple compile tests
+lt_simple_compile_test_code="      subroutine t\n      return\n      end\n"
+
+# Code to be used in simple link tests
+lt_simple_link_test_code="      program t\n      end\n"
+
+# ltmain only uses $CC for tagged configurations so make sure $CC is set.
+
+# If no C compiler was specified, use CC.
+LTCC=${LTCC-"$CC"}
+
+# If no C compiler flags were specified, use CFLAGS.
+LTCFLAGS=${LTCFLAGS-"$CFLAGS"}
+
+# Allow CC to be a program name with arguments.
+compiler=$CC
+
+
+# save warnings/boilerplate of simple test code
+ac_outfile=conftest.$ac_objext
+printf "$lt_simple_compile_test_code" >conftest.$ac_ext
+eval "$ac_compile" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
+_lt_compiler_boilerplate=`cat conftest.err`
+$rm conftest*
+
+ac_outfile=conftest.$ac_objext
+printf "$lt_simple_link_test_code" >conftest.$ac_ext
+eval "$ac_link" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
+_lt_linker_boilerplate=`cat conftest.err`
+$rm conftest*
+
+
+# Allow CC to be a program name with arguments.
+lt_save_CC="$CC"
+CC=${F77-"f77"}
+compiler=$CC
+compiler_F77=$CC
+for cc_temp in $compiler""; do
+  case $cc_temp in
+    compile | *[\\/]compile | ccache | *[\\/]ccache ) ;;
+    distcc | *[\\/]distcc | purify | *[\\/]purify ) ;;
+    \-*) ;;
+    *) break;;
+  esac
+done
+cc_basename=`$echo "X$cc_temp" | $Xsed -e 's%.*/%%' -e "s%^$host_alias-%%"`
+
+
+{ echo "$as_me:$LINENO: checking if libtool supports shared libraries" >&5
+echo $ECHO_N "checking if libtool supports shared libraries... $ECHO_C" >&6; }
+{ echo "$as_me:$LINENO: result: $can_build_shared" >&5
+echo "${ECHO_T}$can_build_shared" >&6; }
+
+{ echo "$as_me:$LINENO: checking whether to build shared libraries" >&5
+echo $ECHO_N "checking whether to build shared libraries... $ECHO_C" >&6; }
+test "$can_build_shared" = "no" && enable_shared=no
+
+# On AIX, shared libraries and static libraries use the same namespace, and
+# are all built from PIC.
+case $host_os in
+aix3*)
+  test "$enable_shared" = yes && enable_static=no
+  if test -n "$RANLIB"; then
+    archive_cmds="$archive_cmds~\$RANLIB \$lib"
+    postinstall_cmds='$RANLIB $lib'
+  fi
+  ;;
+aix4* | aix5*)
+  if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
+    test "$enable_shared" = yes && enable_static=no
+  fi
+  ;;
+esac
+{ echo "$as_me:$LINENO: result: $enable_shared" >&5
+echo "${ECHO_T}$enable_shared" >&6; }
+
+{ echo "$as_me:$LINENO: checking whether to build static libraries" >&5
+echo $ECHO_N "checking whether to build static libraries... $ECHO_C" >&6; }
+# Make sure either enable_shared or enable_static is yes.
+test "$enable_shared" = yes || enable_static=yes
+{ echo "$as_me:$LINENO: result: $enable_static" >&5
+echo "${ECHO_T}$enable_static" >&6; }
+
+GCC_F77="$G77"
+LD_F77="$LD"
+
+lt_prog_compiler_wl_F77=
+lt_prog_compiler_pic_F77=
+lt_prog_compiler_static_F77=
+
+{ echo "$as_me:$LINENO: checking for $compiler option to produce PIC" >&5
+echo $ECHO_N "checking for $compiler option to produce PIC... $ECHO_C" >&6; }
+
+  if test "$GCC" = yes; then
+    lt_prog_compiler_wl_F77='-Wl,'
+    lt_prog_compiler_static_F77='-static'
+
+    case $host_os in
+      aix*)
+      # All AIX code is PIC.
+      if test "$host_cpu" = ia64; then
+	# AIX 5 now supports IA64 processor
+	lt_prog_compiler_static_F77='-Bstatic'
+      fi
+      ;;
+
+    amigaos*)
+      # FIXME: we need at least 68020 code to build shared libraries, but
+      # adding the `-m68020' flag to GCC prevents building anything better,
+      # like `-m68040'.
+      lt_prog_compiler_pic_F77='-m68020 -resident32 -malways-restore-a4'
+      ;;
+
+    beos* | cygwin* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)
+      # PIC is the default for these OSes.
+      ;;
+
+    mingw* | pw32* | os2*)
+      # This hack is so that the source file can tell whether it is being
+      # built for inclusion in a dll (and should export symbols for example).
+      lt_prog_compiler_pic_F77='-DDLL_EXPORT'
+      ;;
+
+    darwin* | rhapsody*)
+      # PIC is the default on this platform
+      # Common symbols not allowed in MH_DYLIB files
+      lt_prog_compiler_pic_F77='-fno-common'
+      ;;
+
+    interix3*)
+      # Interix 3.x gcc -fpic/-fPIC options generate broken code.
+      # Instead, we relocate shared libraries at runtime.
+      ;;
+
+    msdosdjgpp*)
+      # Just because we use GCC doesn't mean we suddenly get shared libraries
+      # on systems that don't support them.
+      lt_prog_compiler_can_build_shared_F77=no
+      enable_shared=no
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec; then
+	lt_prog_compiler_pic_F77=-Kconform_pic
+      fi
+      ;;
+
+    hpux*)
+      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but
+      # not for PA HP-UX.
+      case $host_cpu in
+      hppa*64*|ia64*)
+	# +Z the default
+	;;
+      *)
+	lt_prog_compiler_pic_F77='-fPIC'
+	;;
+      esac
+      ;;
+
+    *)
+      lt_prog_compiler_pic_F77='-fPIC'
+      ;;
+    esac
+  else
+    # PORTME Check for flag to pass linker flags through the system compiler.
+    case $host_os in
+    aix*)
+      lt_prog_compiler_wl_F77='-Wl,'
+      if test "$host_cpu" = ia64; then
+	# AIX 5 now supports IA64 processor
+	lt_prog_compiler_static_F77='-Bstatic'
+      else
+	lt_prog_compiler_static_F77='-bnso -bI:/lib/syscalls.exp'
+      fi
+      ;;
+      darwin*)
+        # PIC is the default on this platform
+        # Common symbols not allowed in MH_DYLIB files
+       case $cc_basename in
+         xlc*)
+         lt_prog_compiler_pic_F77='-qnocommon'
+         lt_prog_compiler_wl_F77='-Wl,'
+         ;;
+       esac
+       ;;
+
+    mingw* | pw32* | os2*)
+      # This hack is so that the source file can tell whether it is being
+      # built for inclusion in a dll (and should export symbols for example).
+      lt_prog_compiler_pic_F77='-DDLL_EXPORT'
+      ;;
+
+    hpux9* | hpux10* | hpux11*)
+      lt_prog_compiler_wl_F77='-Wl,'
+      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but
+      # not for PA HP-UX.
+      case $host_cpu in
+      hppa*64*|ia64*)
+	# +Z the default
+	;;
+      *)
+	lt_prog_compiler_pic_F77='+Z'
+	;;
+      esac
+      # Is there a better lt_prog_compiler_static that works with the bundled CC?
+      lt_prog_compiler_static_F77='${wl}-a ${wl}archive'
+      ;;
+
+    irix5* | irix6* | nonstopux*)
+      lt_prog_compiler_wl_F77='-Wl,'
+      # PIC (with -KPIC) is the default.
+      lt_prog_compiler_static_F77='-non_shared'
+      ;;
+
+    newsos6)
+      lt_prog_compiler_pic_F77='-KPIC'
+      lt_prog_compiler_static_F77='-Bstatic'
+      ;;
+
+    linux* | k*bsd*-gnu)
+      case $cc_basename in
+      icc* | ecc*)
+	lt_prog_compiler_wl_F77='-Wl,'
+	lt_prog_compiler_pic_F77='-KPIC'
+	lt_prog_compiler_static_F77='-static'
+        ;;
+      pgcc* | pgf77* | pgf90* | pgf95*)
+        # Portland Group compilers (*not* the Pentium gcc compiler,
+	# which looks to be a dead project)
+	lt_prog_compiler_wl_F77='-Wl,'
+	lt_prog_compiler_pic_F77='-fpic'
+	lt_prog_compiler_static_F77='-Bstatic'
+        ;;
+      ccc*)
+        lt_prog_compiler_wl_F77='-Wl,'
+        # All Alpha code is PIC.
+        lt_prog_compiler_static_F77='-non_shared'
+        ;;
+      esac
+      ;;
+
+    osf3* | osf4* | osf5*)
+      lt_prog_compiler_wl_F77='-Wl,'
+      # All OSF/1 code is PIC.
+      lt_prog_compiler_static_F77='-non_shared'
+      ;;
+
+    solaris*)
+      lt_prog_compiler_pic_F77='-KPIC'
+      lt_prog_compiler_static_F77='-Bstatic'
+      case $cc_basename in
+      f77* | f90* | f95*)
+	lt_prog_compiler_wl_F77='-Qoption ld ';;
+      *)
+	lt_prog_compiler_wl_F77='-Wl,';;
+      esac
+      ;;
+
+    sunos4*)
+      lt_prog_compiler_wl_F77='-Qoption ld '
+      lt_prog_compiler_pic_F77='-PIC'
+      lt_prog_compiler_static_F77='-Bstatic'
+      ;;
+
+    sysv4 | sysv4.2uw2* | sysv4.3*)
+      lt_prog_compiler_wl_F77='-Wl,'
+      lt_prog_compiler_pic_F77='-KPIC'
+      lt_prog_compiler_static_F77='-Bstatic'
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec ;then
+	lt_prog_compiler_pic_F77='-Kconform_pic'
+	lt_prog_compiler_static_F77='-Bstatic'
+      fi
+      ;;
+
+    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)
+      lt_prog_compiler_wl_F77='-Wl,'
+      lt_prog_compiler_pic_F77='-KPIC'
+      lt_prog_compiler_static_F77='-Bstatic'
+      ;;
+
+    unicos*)
+      lt_prog_compiler_wl_F77='-Wl,'
+      lt_prog_compiler_can_build_shared_F77=no
+      ;;
+
+    uts4*)
+      lt_prog_compiler_pic_F77='-pic'
+      lt_prog_compiler_static_F77='-Bstatic'
+      ;;
+
+    *)
+      lt_prog_compiler_can_build_shared_F77=no
+      ;;
+    esac
+  fi
+
+{ echo "$as_me:$LINENO: result: $lt_prog_compiler_pic_F77" >&5
+echo "${ECHO_T}$lt_prog_compiler_pic_F77" >&6; }
+
+#
+# Check to make sure the PIC flag actually works.
+#
+if test -n "$lt_prog_compiler_pic_F77"; then
+
+{ echo "$as_me:$LINENO: checking if $compiler PIC flag $lt_prog_compiler_pic_F77 works" >&5
+echo $ECHO_N "checking if $compiler PIC flag $lt_prog_compiler_pic_F77 works... $ECHO_C" >&6; }
+if test "${lt_prog_compiler_pic_works_F77+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  lt_prog_compiler_pic_works_F77=no
+  ac_outfile=conftest.$ac_objext
+   printf "$lt_simple_compile_test_code" > conftest.$ac_ext
+   lt_compiler_flag="$lt_prog_compiler_pic_F77"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   # The option is referenced via a variable to avoid confusing sed.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:13864: $lt_compile\"" >&5)
+   (eval "$lt_compile" 2>conftest.err)
+   ac_status=$?
+   cat conftest.err >&5
+   echo "$as_me:13868: \$? = $ac_status" >&5
+   if (exit $ac_status) && test -s "$ac_outfile"; then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings other than the usual output.
+     $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
+     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
+     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
+       lt_prog_compiler_pic_works_F77=yes
+     fi
+   fi
+   $rm conftest*
+
+fi
+{ echo "$as_me:$LINENO: result: $lt_prog_compiler_pic_works_F77" >&5
+echo "${ECHO_T}$lt_prog_compiler_pic_works_F77" >&6; }
+
+if test x"$lt_prog_compiler_pic_works_F77" = xyes; then
+    case $lt_prog_compiler_pic_F77 in
+     "" | " "*) ;;
+     *) lt_prog_compiler_pic_F77=" $lt_prog_compiler_pic_F77" ;;
+     esac
+else
+    lt_prog_compiler_pic_F77=
+     lt_prog_compiler_can_build_shared_F77=no
+fi
+
+fi
+case $host_os in
+  # For platforms which do not support PIC, -DPIC is meaningless:
+  *djgpp*)
+    lt_prog_compiler_pic_F77=
+    ;;
+  *)
+    lt_prog_compiler_pic_F77="$lt_prog_compiler_pic_F77"
+    ;;
+esac
+
+#
+# Check to make sure the static flag actually works.
+#
+wl=$lt_prog_compiler_wl_F77 eval lt_tmp_static_flag=\"$lt_prog_compiler_static_F77\"
+{ echo "$as_me:$LINENO: checking if $compiler static flag $lt_tmp_static_flag works" >&5
+echo $ECHO_N "checking if $compiler static flag $lt_tmp_static_flag works... $ECHO_C" >&6; }
+if test "${lt_prog_compiler_static_works_F77+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  lt_prog_compiler_static_works_F77=no
+   save_LDFLAGS="$LDFLAGS"
+   LDFLAGS="$LDFLAGS $lt_tmp_static_flag"
+   printf "$lt_simple_link_test_code" > conftest.$ac_ext
+   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
+     # The linker can only warn and ignore the option if not recognized
+     # So say no if there are warnings
+     if test -s conftest.err; then
+       # Append any errors to the config.log.
+       cat conftest.err 1>&5
+       $echo "X$_lt_linker_boilerplate" | $Xsed -e '/^$/d' > conftest.exp
+       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
+       if diff conftest.exp conftest.er2 >/dev/null; then
+         lt_prog_compiler_static_works_F77=yes
+       fi
+     else
+       lt_prog_compiler_static_works_F77=yes
+     fi
+   fi
+   $rm conftest*
+   LDFLAGS="$save_LDFLAGS"
+
+fi
+{ echo "$as_me:$LINENO: result: $lt_prog_compiler_static_works_F77" >&5
+echo "${ECHO_T}$lt_prog_compiler_static_works_F77" >&6; }
+
+if test x"$lt_prog_compiler_static_works_F77" = xyes; then
+    :
+else
+    lt_prog_compiler_static_F77=
+fi
+
+
+{ echo "$as_me:$LINENO: checking if $compiler supports -c -o file.$ac_objext" >&5
+echo $ECHO_N "checking if $compiler supports -c -o file.$ac_objext... $ECHO_C" >&6; }
+if test "${lt_cv_prog_compiler_c_o_F77+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  lt_cv_prog_compiler_c_o_F77=no
+   $rm -r conftest 2>/dev/null
+   mkdir conftest
+   cd conftest
+   mkdir out
+   printf "$lt_simple_compile_test_code" > conftest.$ac_ext
+
+   lt_compiler_flag="-o out/conftest2.$ac_objext"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:13968: $lt_compile\"" >&5)
+   (eval "$lt_compile" 2>out/conftest.err)
+   ac_status=$?
+   cat out/conftest.err >&5
+   echo "$as_me:13972: \$? = $ac_status" >&5
+   if (exit $ac_status) && test -s out/conftest2.$ac_objext
+   then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings
+     $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' > out/conftest.exp
+     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
+     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then
+       lt_cv_prog_compiler_c_o_F77=yes
+     fi
+   fi
+   chmod u+w . 2>&5
+   $rm conftest*
+   # SGI C++ compiler will create directory out/ii_files/ for
+   # template instantiation
+   test -d out/ii_files && $rm out/ii_files/* && rmdir out/ii_files
+   $rm out/* && rmdir out
+   cd ..
+   rmdir conftest
+   $rm conftest*
+
+fi
+{ echo "$as_me:$LINENO: result: $lt_cv_prog_compiler_c_o_F77" >&5
+echo "${ECHO_T}$lt_cv_prog_compiler_c_o_F77" >&6; }
+
+
+hard_links="nottested"
+if test "$lt_cv_prog_compiler_c_o_F77" = no && test "$need_locks" != no; then
+  # do not overwrite the value of need_locks provided by the user
+  { echo "$as_me:$LINENO: checking if we can lock with hard links" >&5
+echo $ECHO_N "checking if we can lock with hard links... $ECHO_C" >&6; }
+  hard_links=yes
+  $rm conftest*
+  ln conftest.a conftest.b 2>/dev/null && hard_links=no
+  touch conftest.a
+  ln conftest.a conftest.b 2>&5 || hard_links=no
+  ln conftest.a conftest.b 2>/dev/null && hard_links=no
+  { echo "$as_me:$LINENO: result: $hard_links" >&5
+echo "${ECHO_T}$hard_links" >&6; }
+  if test "$hard_links" = no; then
+    { echo "$as_me:$LINENO: WARNING: \`$CC' does not support \`-c -o', so \`make -j' may be unsafe" >&5
+echo "$as_me: WARNING: \`$CC' does not support \`-c -o', so \`make -j' may be unsafe" >&2;}
+    need_locks=warn
+  fi
+else
+  need_locks=no
+fi
+
+{ echo "$as_me:$LINENO: checking whether the $compiler linker ($LD) supports shared libraries" >&5
+echo $ECHO_N "checking whether the $compiler linker ($LD) supports shared libraries... $ECHO_C" >&6; }
+
+  runpath_var=
+  allow_undefined_flag_F77=
+  enable_shared_with_static_runtimes_F77=no
+  archive_cmds_F77=
+  archive_expsym_cmds_F77=
+  old_archive_From_new_cmds_F77=
+  old_archive_from_expsyms_cmds_F77=
+  export_dynamic_flag_spec_F77=
+  whole_archive_flag_spec_F77=
+  thread_safe_flag_spec_F77=
+  hardcode_libdir_flag_spec_F77=
+  hardcode_libdir_flag_spec_ld_F77=
+  hardcode_libdir_separator_F77=
+  hardcode_direct_F77=no
+  hardcode_minus_L_F77=no
+  hardcode_shlibpath_var_F77=unsupported
+  link_all_deplibs_F77=unknown
+  hardcode_automatic_F77=no
+  module_cmds_F77=
+  module_expsym_cmds_F77=
+  always_export_symbols_F77=no
+  export_symbols_cmds_F77='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
+  # include_expsyms should be a list of space-separated symbols to be *always*
+  # included in the symbol list
+  include_expsyms_F77=
+  # exclude_expsyms can be an extended regexp of symbols to exclude
+  # it will be wrapped by ` (' and `)$', so one must not match beginning or
+  # end of line.  Example: `a|bc|.*d.*' will exclude the symbols `a' and `bc',
+  # as well as any symbol that contains `d'.
+  exclude_expsyms_F77="_GLOBAL_OFFSET_TABLE_"
+  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out
+  # platforms (ab)use it in PIC code, but their linkers get confused if
+  # the symbol is explicitly referenced.  Since portable code cannot
+  # rely on this symbol name, it's probably fine to never include it in
+  # preloaded symbol tables.
+  extract_expsyms_cmds=
+  # Just being paranoid about ensuring that cc_basename is set.
+  for cc_temp in $compiler""; do
+  case $cc_temp in
+    compile | *[\\/]compile | ccache | *[\\/]ccache ) ;;
+    distcc | *[\\/]distcc | purify | *[\\/]purify ) ;;
+    \-*) ;;
+    *) break;;
+  esac
+done
+cc_basename=`$echo "X$cc_temp" | $Xsed -e 's%.*/%%' -e "s%^$host_alias-%%"`
+
+  case $host_os in
+  cygwin* | mingw* | pw32*)
+    # FIXME: the MSVC++ port hasn't been tested in a loooong time
+    # When not using gcc, we currently assume that we are using
+    # Microsoft Visual C++.
+    if test "$GCC" != yes; then
+      with_gnu_ld=no
+    fi
+    ;;
+  interix*)
+    # we just hope/assume this is gcc and not c89 (= MSVC++)
+    with_gnu_ld=yes
+    ;;
+  openbsd*)
+    with_gnu_ld=no
+    ;;
+  esac
+
+  ld_shlibs_F77=yes
+  if test "$with_gnu_ld" = yes; then
+    # If archive_cmds runs LD, not CC, wlarc should be empty
+    wlarc='${wl}'
+
+    # Set some defaults for GNU ld with shared library support. These
+    # are reset later if shared libraries are not supported. Putting them
+    # here allows them to be overridden if necessary.
+    runpath_var=LD_RUN_PATH
+    hardcode_libdir_flag_spec_F77='${wl}--rpath ${wl}$libdir'
+    export_dynamic_flag_spec_F77='${wl}--export-dynamic'
+    # ancient GNU ld didn't support --whole-archive et. al.
+    if $LD --help 2>&1 | grep 'no-whole-archive' > /dev/null; then
+	whole_archive_flag_spec_F77="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
+      else
+  	whole_archive_flag_spec_F77=
+    fi
+    supports_anon_versioning=no
+    case `$LD -v 2>/dev/null` in
+      *\ [01].* | *\ 2.[0-9].* | *\ 2.10.*) ;; # catch versions < 2.11
+      *\ 2.11.93.0.2\ *) supports_anon_versioning=yes ;; # RH7.3 ...
+      *\ 2.11.92.0.12\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...
+      *\ 2.11.*) ;; # other 2.11 versions
+      *) supports_anon_versioning=yes ;;
+    esac
+
+    # See if GNU ld supports shared libraries.
+    case $host_os in
+    aix3* | aix4* | aix5*)
+      # On AIX/PPC, the GNU linker is very broken
+      if test "$host_cpu" != ia64; then
+	ld_shlibs_F77=no
+	cat <<EOF 1>&2
+
+*** Warning: the GNU linker, at least up to release 2.9.1, is reported
+*** to be unable to reliably create shared libraries on AIX.
+*** Therefore, libtool is disabling shared libraries support.  If you
+*** really care for shared libraries, you may want to modify your PATH
+*** so that a non-GNU linker is found, and then restart.
+
+EOF
+      fi
+      ;;
+
+    amigaos*)
+      archive_cmds_F77='$rm $output_objdir/a2ixlibrary.data~$echo "#define NAME $libname" > $output_objdir/a2ixlibrary.data~$echo "#define LIBRARY_ID 1" >> $output_objdir/a2ixlibrary.data~$echo "#define VERSION $major" >> $output_objdir/a2ixlibrary.data~$echo "#define REVISION $revision" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'
+      hardcode_libdir_flag_spec_F77='-L$libdir'
+      hardcode_minus_L_F77=yes
+
+      # Samuel A. Falvo II <kc5tja@dolphin.openprojects.net> reports
+      # that the semantics of dynamic libraries on AmigaOS, at least up
+      # to version 4, is to share data among multiple programs linked
+      # with the same dynamic library.  Since this doesn't match the
+      # behavior of shared libraries on other platforms, we can't use
+      # them.
+      ld_shlibs_F77=no
+      ;;
+
+    beos*)
+      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
+	allow_undefined_flag_F77=unsupported
+	# Joseph Beckenbach <jrb3@best.com> says some releases of gcc
+	# support --undefined.  This deserves some investigation.  FIXME
+	archive_cmds_F77='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+      else
+	ld_shlibs_F77=no
+      fi
+      ;;
+
+    cygwin* | mingw* | pw32*)
+      # _LT_AC_TAGVAR(hardcode_libdir_flag_spec, F77) is actually meaningless,
+      # as there is no search path for DLLs.
+      hardcode_libdir_flag_spec_F77='-L$libdir'
+      allow_undefined_flag_F77=unsupported
+      always_export_symbols_F77=no
+      enable_shared_with_static_runtimes_F77=yes
+      export_symbols_cmds_F77='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\''/^[BCDGRS] /s/.* \([^ ]*\)/\1 DATA/'\'' | $SED -e '\''/^[AITW] /s/.* //'\'' | sort | uniq > $export_symbols'
+
+      if $LD --help 2>&1 | grep 'auto-import' > /dev/null; then
+        archive_cmds_F77='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+	# If the export-symbols file already is a .def file (1st line
+	# is EXPORTS), use it as is; otherwise, prepend...
+	archive_expsym_cmds_F77='if test "x`$SED 1q $export_symbols`" = xEXPORTS; then
+	  cp $export_symbols $output_objdir/$soname.def;
+	else
+	  echo EXPORTS > $output_objdir/$soname.def;
+	  cat $export_symbols >> $output_objdir/$soname.def;
+	fi~
+	$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+      else
+	ld_shlibs_F77=no
+      fi
+      ;;
+
+    interix3*)
+      hardcode_direct_F77=no
+      hardcode_shlibpath_var_F77=no
+      hardcode_libdir_flag_spec_F77='${wl}-rpath,$libdir'
+      export_dynamic_flag_spec_F77='${wl}-E'
+      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.
+      # Instead, shared libraries are loaded at an image base (0x10000000 by
+      # default) and relocated if they conflict, which is a slow very memory
+      # consuming and fragmenting process.  To avoid this, we pick a random,
+      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
+      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.
+      archive_cmds_F77='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+      archive_expsym_cmds_F77='sed "s,^,_," $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+      ;;
+
+    linux* | k*bsd*-gnu)
+      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
+	tmp_addflag=
+	case $cc_basename,$host_cpu in
+	pgcc*)				# Portland Group C compiler
+	  whole_archive_flag_spec_F77='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $echo \"$new_convenience\"` ${wl}--no-whole-archive'
+	  tmp_addflag=' $pic_flag'
+	  ;;
+	pgf77* | pgf90* | pgf95*)	# Portland Group f77 and f90 compilers
+	  whole_archive_flag_spec_F77='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $echo \"$new_convenience\"` ${wl}--no-whole-archive'
+	  tmp_addflag=' $pic_flag -Mnomain' ;;
+	ecc*,ia64* | icc*,ia64*)		# Intel C compiler on ia64
+	  tmp_addflag=' -i_dynamic' ;;
+	efc*,ia64* | ifort*,ia64*)	# Intel Fortran compiler on ia64
+	  tmp_addflag=' -i_dynamic -nofor_main' ;;
+	ifc* | ifort*)			# Intel Fortran compiler
+	  tmp_addflag=' -nofor_main' ;;
+	esac
+	archive_cmds_F77='$CC -shared'"$tmp_addflag"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+
+	if test $supports_anon_versioning = yes; then
+	  archive_expsym_cmds_F77='$echo "{ global:" > $output_objdir/$libname.ver~
+  cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
+  $echo "local: *; };" >> $output_objdir/$libname.ver~
+	  $CC -shared'"$tmp_addflag"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'
+	fi
+	link_all_deplibs_F77=no
+      else
+	ld_shlibs_F77=no
+      fi
+      ;;
+
+    netbsd* | netbsdelf*-gnu)
+      if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+	archive_cmds_F77='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
+	wlarc=
+      else
+	archive_cmds_F77='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	archive_expsym_cmds_F77='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      fi
+      ;;
+
+    solaris*)
+      if $LD -v 2>&1 | grep 'BFD 2\.8' > /dev/null; then
+	ld_shlibs_F77=no
+	cat <<EOF 1>&2
+
+*** Warning: The releases 2.8.* of the GNU linker cannot reliably
+*** create shared libraries on Solaris systems.  Therefore, libtool
+*** is disabling shared libraries support.  We urge you to upgrade GNU
+*** binutils to release 2.9.1 or newer.  Another option is to modify
+*** your PATH or compiler configuration so that the native linker is
+*** used, and then restart.
+
+EOF
+      elif $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
+	archive_cmds_F77='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	archive_expsym_cmds_F77='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      else
+	ld_shlibs_F77=no
+      fi
+      ;;
+
+    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)
+      case `$LD -v 2>&1` in
+        *\ [01].* | *\ 2.[0-9].* | *\ 2.1[0-5].*)
+	ld_shlibs_F77=no
+	cat <<_LT_EOF 1>&2
+
+*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 can not
+*** reliably create shared libraries on SCO systems.  Therefore, libtool
+*** is disabling shared libraries support.  We urge you to upgrade GNU
+*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify
+*** your PATH or compiler configuration so that the native linker is
+*** used, and then restart.
+
+_LT_EOF
+	;;
+	*)
+	  if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
+	    hardcode_libdir_flag_spec_F77='`test -z "$SCOABSPATH" && echo ${wl}-rpath,$libdir`'
+	    archive_cmds_F77='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib'
+	    archive_expsym_cmds_F77='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname,\${SCOABSPATH:+${install_libdir}/}$soname,-retain-symbols-file,$export_symbols -o $lib'
+	  else
+	    ld_shlibs_F77=no
+	  fi
+	;;
+      esac
+      ;;
+
+    sunos4*)
+      archive_cmds_F77='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+      wlarc=
+      hardcode_direct_F77=yes
+      hardcode_shlibpath_var_F77=no
+      ;;
+
+    *)
+      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
+	archive_cmds_F77='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	archive_expsym_cmds_F77='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      else
+	ld_shlibs_F77=no
+      fi
+      ;;
+    esac
+
+    if test "$ld_shlibs_F77" = no; then
+      runpath_var=
+      hardcode_libdir_flag_spec_F77=
+      export_dynamic_flag_spec_F77=
+      whole_archive_flag_spec_F77=
+    fi
+  else
+    # PORTME fill in a description of your system's linker (not GNU ld)
+    case $host_os in
+    aix3*)
+      allow_undefined_flag_F77=unsupported
+      always_export_symbols_F77=yes
+      archive_expsym_cmds_F77='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'
+      # Note: this linker hardcodes the directories in LIBPATH if there
+      # are no directories specified by -L.
+      hardcode_minus_L_F77=yes
+      if test "$GCC" = yes && test -z "$lt_prog_compiler_static"; then
+	# Neither direct hardcoding nor static linking is supported with a
+	# broken collect2.
+	hardcode_direct_F77=unsupported
+      fi
+      ;;
+
+    aix4* | aix5*)
+      if test "$host_cpu" = ia64; then
+	# On IA64, the linker does run time linking by default, so we don't
+	# have to do anything special.
+	aix_use_runtimelinking=no
+	exp_sym_flag='-Bexport'
+	no_entry_flag=""
+      else
+	# If we're using GNU nm, then we don't want the "-C" option.
+	# -C means demangle to AIX nm, but means don't demangle with GNU nm
+	if $NM -V 2>&1 | grep 'GNU' > /dev/null; then
+	  export_symbols_cmds_F77='$NM -Bpg $libobjs $convenience | awk '\''{ if (((\$2 == "T") || (\$2 == "D") || (\$2 == "B")) && (substr(\$3,1,1) != ".")) { print \$3 } }'\'' | sort -u > $export_symbols'
+	else
+	  export_symbols_cmds_F77='$NM -BCpg $libobjs $convenience | awk '\''{ if (((\$2 == "T") || (\$2 == "D") || (\$2 == "B")) && (substr(\$3,1,1) != ".")) { print \$3 } }'\'' | sort -u > $export_symbols'
+	fi
+	aix_use_runtimelinking=no
+
+	# Test if we are trying to use run time linking or normal
+	# AIX style linking. If -brtl is somewhere in LDFLAGS, we
+	# need to do runtime linking.
+	case $host_os in aix4.[23]|aix4.[23].*|aix5*)
+	  for ld_flag in $LDFLAGS; do
+  	  if (test $ld_flag = "-brtl" || test $ld_flag = "-Wl,-brtl"); then
+  	    aix_use_runtimelinking=yes
+  	    break
+  	  fi
+	  done
+	  ;;
+	esac
+
+	exp_sym_flag='-bexport'
+	no_entry_flag='-bnoentry'
+      fi
+
+      # When large executables or shared objects are built, AIX ld can
+      # have problems creating the table of contents.  If linking a library
+      # or program results in "error TOC overflow" add -mminimal-toc to
+      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not
+      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.
+
+      archive_cmds_F77=''
+      hardcode_direct_F77=yes
+      hardcode_libdir_separator_F77=':'
+      link_all_deplibs_F77=yes
+
+      if test "$GCC" = yes; then
+	case $host_os in aix4.[012]|aix4.[012].*)
+	# We only want to do this on AIX 4.2 and lower, the check
+	# below for broken collect2 doesn't work under 4.3+
+	  collect2name=`${CC} -print-prog-name=collect2`
+	  if test -f "$collect2name" && \
+  	   strings "$collect2name" | grep resolve_lib_name >/dev/null
+	  then
+  	  # We have reworked collect2
+  	  hardcode_direct_F77=yes
+	  else
+  	  # We have old collect2
+  	  hardcode_direct_F77=unsupported
+  	  # It fails to find uninstalled libraries when the uninstalled
+  	  # path is not listed in the libpath.  Setting hardcode_minus_L
+  	  # to unsupported forces relinking
+  	  hardcode_minus_L_F77=yes
+  	  hardcode_libdir_flag_spec_F77='-L$libdir'
+  	  hardcode_libdir_separator_F77=
+	  fi
+	  ;;
+	esac
+	shared_flag='-shared'
+	if test "$aix_use_runtimelinking" = yes; then
+	  shared_flag="$shared_flag "'${wl}-G'
+	fi
+      else
+	# not using gcc
+	if test "$host_cpu" = ia64; then
+  	# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release
+  	# chokes on -Wl,-G. The following line is correct:
+	  shared_flag='-G'
+	else
+	  if test "$aix_use_runtimelinking" = yes; then
+	    shared_flag='${wl}-G'
+	  else
+	    shared_flag='${wl}-bM:SRE'
+	  fi
+	fi
+      fi
+
+      # It seems that -bexpall does not export symbols beginning with
+      # underscore (_), so it is better to generate a list of symbols to export.
+      always_export_symbols_F77=yes
+      if test "$aix_use_runtimelinking" = yes; then
+	# Warning - without using the other runtime loading flags (-brtl),
+	# -berok will link without error, but may produce a broken library.
+	allow_undefined_flag_F77='-berok'
+       # Determine the default libpath from the value encoded in an empty executable.
+       cat >conftest.$ac_ext <<_ACEOF
+      program main
+
+      end
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_f77_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+
+aix_libpath=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\(.*\)$/\1/; p; }
+}'`
+# Check for a 64-bit object if we didn't find anything.
+if test -z "$aix_libpath"; then aix_libpath=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\(.*\)$/\1/; p; }
+}'`; fi
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
+
+       hardcode_libdir_flag_spec_F77='${wl}-blibpath:$libdir:'"$aix_libpath"
+	archive_expsym_cmds_F77="\$CC"' -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags `if test "x${allow_undefined_flag}" != "x"; then echo "${wl}${allow_undefined_flag}"; else :; fi` '"\${wl}$exp_sym_flag:\$export_symbols $shared_flag"
+       else
+	if test "$host_cpu" = ia64; then
+	  hardcode_libdir_flag_spec_F77='${wl}-R $libdir:/usr/lib:/lib'
+	  allow_undefined_flag_F77="-z nodefs"
+	  archive_expsym_cmds_F77="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags ${wl}${allow_undefined_flag} '"\${wl}$exp_sym_flag:\$export_symbols"
+	else
+	 # Determine the default libpath from the value encoded in an empty executable.
+	 cat >conftest.$ac_ext <<_ACEOF
+      program main
+
+      end
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_f77_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+
+aix_libpath=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\(.*\)$/\1/; p; }
+}'`
+# Check for a 64-bit object if we didn't find anything.
+if test -z "$aix_libpath"; then aix_libpath=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\(.*\)$/\1/; p; }
+}'`; fi
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
+
+	 hardcode_libdir_flag_spec_F77='${wl}-blibpath:$libdir:'"$aix_libpath"
+	  # Warning - without using the other run time loading flags,
+	  # -berok will link without error, but may produce a broken library.
+	  no_undefined_flag_F77=' ${wl}-bernotok'
+	  allow_undefined_flag_F77=' ${wl}-berok'
+	  # Exported symbols can be pulled into shared objects from archives
+	  whole_archive_flag_spec_F77='$convenience'
+	  archive_cmds_need_lc_F77=yes
+	  # This is similar to how AIX traditionally builds its shared libraries.
+	  archive_expsym_cmds_F77="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'
+	fi
+      fi
+      ;;
+
+    amigaos*)
+      archive_cmds_F77='$rm $output_objdir/a2ixlibrary.data~$echo "#define NAME $libname" > $output_objdir/a2ixlibrary.data~$echo "#define LIBRARY_ID 1" >> $output_objdir/a2ixlibrary.data~$echo "#define VERSION $major" >> $output_objdir/a2ixlibrary.data~$echo "#define REVISION $revision" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'
+      hardcode_libdir_flag_spec_F77='-L$libdir'
+      hardcode_minus_L_F77=yes
+      # see comment about different semantics on the GNU ld section
+      ld_shlibs_F77=no
+      ;;
+
+    bsdi[45]*)
+      export_dynamic_flag_spec_F77=-rdynamic
+      ;;
+
+    cygwin* | mingw* | pw32*)
+      # When not using gcc, we currently assume that we are using
+      # Microsoft Visual C++.
+      # hardcode_libdir_flag_spec is actually meaningless, as there is
+      # no search path for DLLs.
+      hardcode_libdir_flag_spec_F77=' '
+      allow_undefined_flag_F77=unsupported
+      # Tell ltmain to make .lib files, not .a files.
+      libext=lib
+      # Tell ltmain to make .dll files, not .so files.
+      shrext_cmds=".dll"
+      # FIXME: Setting linknames here is a bad hack.
+      archive_cmds_F77='$CC -o $lib $libobjs $compiler_flags `echo "$deplibs" | $SED -e '\''s/ -lc$//'\''` -link -dll~linknames='
+      # The linker will automatically build a .lib file if we build a DLL.
+      old_archive_From_new_cmds_F77='true'
+      # FIXME: Should let the user specify the lib program.
+      old_archive_cmds_F77='lib /OUT:$oldlib$oldobjs$old_deplibs'
+      fix_srcfile_path_F77='`cygpath -w "$srcfile"`'
+      enable_shared_with_static_runtimes_F77=yes
+      ;;
+
+    darwin* | rhapsody*)
+      case $host_os in
+        rhapsody* | darwin1.[012])
+         allow_undefined_flag_F77='${wl}-undefined ${wl}suppress'
+         ;;
+       *) # Darwin 1.3 on
+         if test -z ${MACOSX_DEPLOYMENT_TARGET} ; then
+           allow_undefined_flag_F77='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'
+         else
+           case ${MACOSX_DEPLOYMENT_TARGET} in
+             10.[012])
+               allow_undefined_flag_F77='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'
+               ;;
+             10.*)
+               allow_undefined_flag_F77='${wl}-undefined ${wl}dynamic_lookup'
+               ;;
+           esac
+         fi
+         ;;
+      esac
+      archive_cmds_need_lc_F77=no
+      hardcode_direct_F77=no
+      hardcode_automatic_F77=yes
+      hardcode_shlibpath_var_F77=unsupported
+      whole_archive_flag_spec_F77=''
+      link_all_deplibs_F77=yes
+    if test "$GCC" = yes ; then
+    	output_verbose_link_cmd='echo'
+        archive_cmds_F77='$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring'
+      module_cmds_F77='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'
+      # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin lds
+      archive_expsym_cmds_F77='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+      module_expsym_cmds_F77='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+    else
+      case $cc_basename in
+        xlc*)
+         output_verbose_link_cmd='echo'
+         archive_cmds_F77='$CC -qmkshrobj $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}`echo $rpath/$soname` $verstring'
+         module_cmds_F77='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'
+          # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin lds
+         archive_expsym_cmds_F77='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -qmkshrobj $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}$rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+          module_expsym_cmds_F77='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+          ;;
+       *)
+         ld_shlibs_F77=no
+          ;;
+      esac
+    fi
+      ;;
+
+    dgux*)
+      archive_cmds_F77='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_libdir_flag_spec_F77='-L$libdir'
+      hardcode_shlibpath_var_F77=no
+      ;;
+
+    freebsd1*)
+      ld_shlibs_F77=no
+      ;;
+
+    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor
+    # support.  Future versions do this automatically, but an explicit c++rt0.o
+    # does not break anything, and helps significantly (at the cost of a little
+    # extra space).
+    freebsd2.2*)
+      archive_cmds_F77='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'
+      hardcode_libdir_flag_spec_F77='-R$libdir'
+      hardcode_direct_F77=yes
+      hardcode_shlibpath_var_F77=no
+      ;;
+
+    # Unfortunately, older versions of FreeBSD 2 do not have this feature.
+    freebsd2*)
+      archive_cmds_F77='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_direct_F77=yes
+      hardcode_minus_L_F77=yes
+      hardcode_shlibpath_var_F77=no
+      ;;
+
+    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.
+    freebsd* | dragonfly*)
+      archive_cmds_F77='$CC -shared -o $lib $libobjs $deplibs $compiler_flags'
+      hardcode_libdir_flag_spec_F77='-R$libdir'
+      hardcode_direct_F77=yes
+      hardcode_shlibpath_var_F77=no
+      ;;
+
+    hpux9*)
+      if test "$GCC" = yes; then
+	archive_cmds_F77='$rm $output_objdir/$soname~$CC -shared -fPIC ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+      else
+	archive_cmds_F77='$rm $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+      fi
+      hardcode_libdir_flag_spec_F77='${wl}+b ${wl}$libdir'
+      hardcode_libdir_separator_F77=:
+      hardcode_direct_F77=yes
+
+      # hardcode_minus_L: Not really in the search PATH,
+      # but as the default location of the library.
+      hardcode_minus_L_F77=yes
+      export_dynamic_flag_spec_F77='${wl}-E'
+      ;;
+
+    hpux10*)
+      if test "$GCC" = yes -a "$with_gnu_ld" = no; then
+	archive_cmds_F77='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds_F77='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'
+      fi
+      if test "$with_gnu_ld" = no; then
+	hardcode_libdir_flag_spec_F77='${wl}+b ${wl}$libdir'
+	hardcode_libdir_separator_F77=:
+
+	hardcode_direct_F77=yes
+	export_dynamic_flag_spec_F77='${wl}-E'
+
+	# hardcode_minus_L: Not really in the search PATH,
+	# but as the default location of the library.
+	hardcode_minus_L_F77=yes
+      fi
+      ;;
+
+    hpux11*)
+      if test "$GCC" = yes -a "$with_gnu_ld" = no; then
+	case $host_cpu in
+	hppa*64*)
+	  archive_cmds_F77='$CC -shared ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	ia64*)
+	  archive_cmds_F77='$CC -shared ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	*)
+	  archive_cmds_F77='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	esac
+      else
+	case $host_cpu in
+	hppa*64*)
+	  archive_cmds_F77='$CC -b ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	ia64*)
+	  archive_cmds_F77='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	*)
+	  archive_cmds_F77='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	esac
+      fi
+      if test "$with_gnu_ld" = no; then
+	hardcode_libdir_flag_spec_F77='${wl}+b ${wl}$libdir'
+	hardcode_libdir_separator_F77=:
+
+	case $host_cpu in
+	hppa*64*|ia64*)
+	  hardcode_libdir_flag_spec_ld_F77='+b $libdir'
+	  hardcode_direct_F77=no
+	  hardcode_shlibpath_var_F77=no
+	  ;;
+	*)
+	  hardcode_direct_F77=yes
+	  export_dynamic_flag_spec_F77='${wl}-E'
+
+	  # hardcode_minus_L: Not really in the search PATH,
+	  # but as the default location of the library.
+	  hardcode_minus_L_F77=yes
+	  ;;
+	esac
+      fi
+      ;;
+
+    irix5* | irix6* | nonstopux*)
+      if test "$GCC" = yes; then
+	archive_cmds_F77='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+      else
+	archive_cmds_F77='$LD -shared $libobjs $deplibs $linker_flags -soname $soname `test -n "$verstring" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'
+	hardcode_libdir_flag_spec_ld_F77='-rpath $libdir'
+      fi
+      hardcode_libdir_flag_spec_F77='${wl}-rpath ${wl}$libdir'
+      hardcode_libdir_separator_F77=:
+      link_all_deplibs_F77=yes
+      ;;
+
+    netbsd* | netbsdelf*-gnu)
+      if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+	archive_cmds_F77='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
+      else
+	archive_cmds_F77='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF
+      fi
+      hardcode_libdir_flag_spec_F77='-R$libdir'
+      hardcode_direct_F77=yes
+      hardcode_shlibpath_var_F77=no
+      ;;
+
+    newsos6)
+      archive_cmds_F77='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_direct_F77=yes
+      hardcode_libdir_flag_spec_F77='${wl}-rpath ${wl}$libdir'
+      hardcode_libdir_separator_F77=:
+      hardcode_shlibpath_var_F77=no
+      ;;
+
+    openbsd*)
+      hardcode_direct_F77=yes
+      hardcode_shlibpath_var_F77=no
+      if test -z "`echo __ELF__ | $CC -E - | grep __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+	archive_cmds_F77='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds_F77='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-retain-symbols-file,$export_symbols'
+	hardcode_libdir_flag_spec_F77='${wl}-rpath,$libdir'
+	export_dynamic_flag_spec_F77='${wl}-E'
+      else
+       case $host_os in
+	 openbsd[01].* | openbsd2.[0-7] | openbsd2.[0-7].*)
+	   archive_cmds_F77='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+	   hardcode_libdir_flag_spec_F77='-R$libdir'
+	   ;;
+	 *)
+	   archive_cmds_F77='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
+	   hardcode_libdir_flag_spec_F77='${wl}-rpath,$libdir'
+	   ;;
+       esac
+      fi
+      ;;
+
+    os2*)
+      hardcode_libdir_flag_spec_F77='-L$libdir'
+      hardcode_minus_L_F77=yes
+      allow_undefined_flag_F77=unsupported
+      archive_cmds_F77='$echo "LIBRARY $libname INITINSTANCE" > $output_objdir/$libname.def~$echo "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~$echo DATA >> $output_objdir/$libname.def~$echo " SINGLE NONSHARED" >> $output_objdir/$libname.def~$echo EXPORTS >> $output_objdir/$libname.def~emxexp $libobjs >> $output_objdir/$libname.def~$CC -Zdll -Zcrtdll -o $lib $libobjs $deplibs $compiler_flags $output_objdir/$libname.def'
+      old_archive_From_new_cmds_F77='emximp -o $output_objdir/$libname.a $output_objdir/$libname.def'
+      ;;
+
+    osf3*)
+      if test "$GCC" = yes; then
+	allow_undefined_flag_F77=' ${wl}-expect_unresolved ${wl}\*'
+	archive_cmds_F77='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+      else
+	allow_undefined_flag_F77=' -expect_unresolved \*'
+	archive_cmds_F77='$LD -shared${allow_undefined_flag} $libobjs $deplibs $linker_flags -soname $soname `test -n "$verstring" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'
+      fi
+      hardcode_libdir_flag_spec_F77='${wl}-rpath ${wl}$libdir'
+      hardcode_libdir_separator_F77=:
+      ;;
+
+    osf4* | osf5*)	# as osf3* with the addition of -msym flag
+      if test "$GCC" = yes; then
+	allow_undefined_flag_F77=' ${wl}-expect_unresolved ${wl}\*'
+	archive_cmds_F77='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n "$verstring" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+	hardcode_libdir_flag_spec_F77='${wl}-rpath ${wl}$libdir'
+      else
+	allow_undefined_flag_F77=' -expect_unresolved \*'
+	archive_cmds_F77='$LD -shared${allow_undefined_flag} $libobjs $deplibs $linker_flags -msym -soname $soname `test -n "$verstring" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'
+	archive_expsym_cmds_F77='for i in `cat $export_symbols`; do printf "%s %s\\n" -exported_symbol "\$i" >> $lib.exp; done; echo "-hidden">> $lib.exp~
+	$LD -shared${allow_undefined_flag} -input $lib.exp $linker_flags $libobjs $deplibs -soname $soname `test -n "$verstring" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib~$rm $lib.exp'
+
+	# Both c and cxx compiler support -rpath directly
+	hardcode_libdir_flag_spec_F77='-rpath $libdir'
+      fi
+      hardcode_libdir_separator_F77=:
+      ;;
+
+    solaris*)
+      no_undefined_flag_F77=' -z text'
+      if test "$GCC" = yes; then
+	wlarc='${wl}'
+	archive_cmds_F77='$CC -shared ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds_F77='$echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~$echo "local: *; };" >> $lib.exp~
+	  $CC -shared ${wl}-M ${wl}$lib.exp ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags~$rm $lib.exp'
+      else
+	wlarc=''
+	archive_cmds_F77='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	archive_expsym_cmds_F77='$echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~$echo "local: *; };" >> $lib.exp~
+  	$LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$rm $lib.exp'
+      fi
+      hardcode_libdir_flag_spec_F77='-R$libdir'
+      hardcode_shlibpath_var_F77=no
+      case $host_os in
+      solaris2.[0-5] | solaris2.[0-5].*) ;;
+      *)
+ 	# The compiler driver will combine linker options so we
+ 	# cannot just pass the convience library names through
+ 	# without $wl, iff we do not link with $LD.
+ 	# Luckily, gcc supports the same syntax we need for Sun Studio.
+ 	# Supported since Solaris 2.6 (maybe 2.5.1?)
+ 	case $wlarc in
+ 	'')
+ 	  whole_archive_flag_spec_F77='-z allextract$convenience -z defaultextract' ;;
+ 	*)
+ 	  whole_archive_flag_spec_F77='${wl}-z ${wl}allextract`for conv in $convenience\"\"; do test -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $echo \"$new_convenience\"` ${wl}-z ${wl}defaultextract' ;;
+ 	esac ;;
+      esac
+      link_all_deplibs_F77=yes
+      ;;
+
+    sunos4*)
+      if test "x$host_vendor" = xsequent; then
+	# Use $CC to link under sequent, because it throws in some extra .o
+	# files that make .init and .fini sections work.
+	archive_cmds_F77='$CC -G ${wl}-h $soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds_F77='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'
+      fi
+      hardcode_libdir_flag_spec_F77='-L$libdir'
+      hardcode_direct_F77=yes
+      hardcode_minus_L_F77=yes
+      hardcode_shlibpath_var_F77=no
+      ;;
+
+    sysv4)
+      case $host_vendor in
+	sni)
+	  archive_cmds_F77='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	  hardcode_direct_F77=yes # is this really true???
+	;;
+	siemens)
+	  ## LD is ld it makes a PLAMLIB
+	  ## CC just makes a GrossModule.
+	  archive_cmds_F77='$LD -G -o $lib $libobjs $deplibs $linker_flags'
+	  reload_cmds_F77='$CC -r -o $output$reload_objs'
+	  hardcode_direct_F77=no
+        ;;
+	motorola)
+	  archive_cmds_F77='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	  hardcode_direct_F77=no #Motorola manual says yes, but my tests say they lie
+	;;
+      esac
+      runpath_var='LD_RUN_PATH'
+      hardcode_shlibpath_var_F77=no
+      ;;
+
+    sysv4.3*)
+      archive_cmds_F77='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_shlibpath_var_F77=no
+      export_dynamic_flag_spec_F77='-Bexport'
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec; then
+	archive_cmds_F77='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	hardcode_shlibpath_var_F77=no
+	runpath_var=LD_RUN_PATH
+	hardcode_runpath_var=yes
+	ld_shlibs_F77=yes
+      fi
+      ;;
+
+    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[01].[10]* | unixware7*)
+      no_undefined_flag_F77='${wl}-z,text'
+      archive_cmds_need_lc_F77=no
+      hardcode_shlibpath_var_F77=no
+      runpath_var='LD_RUN_PATH'
+
+      if test "$GCC" = yes; then
+	archive_cmds_F77='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds_F77='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds_F77='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds_F77='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      fi
+      ;;
+
+    sysv5* | sco3.2v5* | sco5v6*)
+      # Note: We can NOT use -z defs as we might desire, because we do not
+      # link with -lc, and that would cause any symbols used from libc to
+      # always be unresolved, which means just about no library would
+      # ever link correctly.  If we're not using GNU ld we use -z text
+      # though, which does catch some bad symbols but isn't as heavy-handed
+      # as -z defs.
+      no_undefined_flag_F77='${wl}-z,text'
+      allow_undefined_flag_F77='${wl}-z,nodefs'
+      archive_cmds_need_lc_F77=no
+      hardcode_shlibpath_var_F77=no
+      hardcode_libdir_flag_spec_F77='`test -z "$SCOABSPATH" && echo ${wl}-R,$libdir`'
+      hardcode_libdir_separator_F77=':'
+      link_all_deplibs_F77=yes
+      export_dynamic_flag_spec_F77='${wl}-Bexport'
+      runpath_var='LD_RUN_PATH'
+
+      if test "$GCC" = yes; then
+	archive_cmds_F77='$CC -shared ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds_F77='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds_F77='$CC -G ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds_F77='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+      fi
+      ;;
+
+    uts4*)
+      archive_cmds_F77='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_libdir_flag_spec_F77='-L$libdir'
+      hardcode_shlibpath_var_F77=no
+      ;;
+
+    *)
+      ld_shlibs_F77=no
+      ;;
+    esac
+  fi
+
+{ echo "$as_me:$LINENO: result: $ld_shlibs_F77" >&5
+echo "${ECHO_T}$ld_shlibs_F77" >&6; }
+test "$ld_shlibs_F77" = no && can_build_shared=no
+
+#
+# Do we need to explicitly link libc?
+#
+case "x$archive_cmds_need_lc_F77" in
+x|xyes)
+  # Assume -lc should be added
+  archive_cmds_need_lc_F77=yes
+
+  if test "$enable_shared" = yes && test "$GCC" = yes; then
+    case $archive_cmds_F77 in
+    *'~'*)
+      # FIXME: we may have to deal with multi-command sequences.
+      ;;
+    '$CC '*)
+      # Test whether the compiler implicitly links with -lc since on some
+      # systems, -lgcc has to come before -lc. If gcc already passes -lc
+      # to ld, don't add -lc before -lgcc.
+      { echo "$as_me:$LINENO: checking whether -lc should be explicitly linked in" >&5
+echo $ECHO_N "checking whether -lc should be explicitly linked in... $ECHO_C" >&6; }
+      $rm conftest*
+      printf "$lt_simple_compile_test_code" > conftest.$ac_ext
+
+      if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } 2>conftest.err; then
+        soname=conftest
+        lib=conftest
+        libobjs=conftest.$ac_objext
+        deplibs=
+        wl=$lt_prog_compiler_wl_F77
+	pic_flag=$lt_prog_compiler_pic_F77
+        compiler_flags=-v
+        linker_flags=-v
+        verstring=
+        output_objdir=.
+        libname=conftest
+        lt_save_allow_undefined_flag=$allow_undefined_flag_F77
+        allow_undefined_flag_F77=
+        if { (eval echo "$as_me:$LINENO: \"$archive_cmds_F77 2\>\&1 \| grep \" -lc \" \>/dev/null 2\>\&1\"") >&5
+  (eval $archive_cmds_F77 2\>\&1 \| grep \" -lc \" \>/dev/null 2\>\&1) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }
+        then
+	  archive_cmds_need_lc_F77=no
+        else
+	  archive_cmds_need_lc_F77=yes
+        fi
+        allow_undefined_flag_F77=$lt_save_allow_undefined_flag
+      else
+        cat conftest.err 1>&5
+      fi
+      $rm conftest*
+      { echo "$as_me:$LINENO: result: $archive_cmds_need_lc_F77" >&5
+echo "${ECHO_T}$archive_cmds_need_lc_F77" >&6; }
+      ;;
+    esac
+  fi
+  ;;
+esac
+
+{ echo "$as_me:$LINENO: checking dynamic linker characteristics" >&5
+echo $ECHO_N "checking dynamic linker characteristics... $ECHO_C" >&6; }
+library_names_spec=
+libname_spec='lib$name'
+soname_spec=
+shrext_cmds=".so"
+postinstall_cmds=
+postuninstall_cmds=
+finish_cmds=
+finish_eval=
+shlibpath_var=
+shlibpath_overrides_runpath=unknown
+version_type=none
+dynamic_linker="$host_os ld.so"
+sys_lib_dlsearch_path_spec="/lib /usr/lib"
+if test "$GCC" = yes; then
+  sys_lib_search_path_spec=`$CC -print-search-dirs | grep "^libraries:" | $SED -e "s/^libraries://" -e "s,=/,/,g"`
+  if echo "$sys_lib_search_path_spec" | grep ';' >/dev/null ; then
+    # if the path contains ";" then we assume it to be the separator
+    # otherwise default to the standard path separator (i.e. ":") - it is
+    # assumed that no part of a normal pathname contains ";" but that should
+    # okay in the real world where ";" in dirpaths is itself problematic.
+    sys_lib_search_path_spec=`echo "$sys_lib_search_path_spec" | $SED -e 's/;/ /g'`
+  else
+    sys_lib_search_path_spec=`echo "$sys_lib_search_path_spec" | $SED  -e "s/$PATH_SEPARATOR/ /g"`
+  fi
+else
+  sys_lib_search_path_spec="/lib /usr/lib /usr/local/lib"
+fi
+need_lib_prefix=unknown
+hardcode_into_libs=no
+
+# when you set need_version to no, make sure it does not cause -set_version
+# flags to be left without arguments
+need_version=unknown
+
+case $host_os in
+aix3*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix $libname.a'
+  shlibpath_var=LIBPATH
+
+  # AIX 3 has no versioning support, so we append a major version to the name.
+  soname_spec='${libname}${release}${shared_ext}$major'
+  ;;
+
+aix4* | aix5*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  hardcode_into_libs=yes
+  if test "$host_cpu" = ia64; then
+    # AIX 5 supports IA64
+    library_names_spec='${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext}$versuffix $libname${shared_ext}'
+    shlibpath_var=LD_LIBRARY_PATH
+  else
+    # With GCC up to 2.95.x, collect2 would create an import file
+    # for dependence libraries.  The import file would start with
+    # the line `#! .'.  This would cause the generated library to
+    # depend on `.', always an invalid library.  This was fixed in
+    # development snapshots of GCC prior to 3.0.
+    case $host_os in
+      aix4 | aix4.[01] | aix4.[01].*)
+      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'
+	   echo ' yes '
+	   echo '#endif'; } | ${CC} -E - | grep yes > /dev/null; then
+	:
+      else
+	can_build_shared=no
+      fi
+      ;;
+    esac
+    # AIX (on Power*) has no versioning support, so currently we can not hardcode correct
+    # soname into executable. Probably we can add versioning support to
+    # collect2, so additional links can be useful in future.
+    if test "$aix_use_runtimelinking" = yes; then
+      # If using run time linking (on AIX 4.2 or later) use lib<name>.so
+      # instead of lib<name>.a to let people know that these are not
+      # typical AIX shared libraries.
+      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    else
+      # We preserve .a as extension for shared libraries through AIX4.2
+      # and later when we are not doing run time linking.
+      library_names_spec='${libname}${release}.a $libname.a'
+      soname_spec='${libname}${release}${shared_ext}$major'
+    fi
+    shlibpath_var=LIBPATH
+  fi
+  ;;
+
+amigaos*)
+  library_names_spec='$libname.ixlibrary $libname.a'
+  # Create ${libname}_ixlibrary.a entries in /sys/libs.
+  finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`$echo "X$lib" | $Xsed -e '\''s%^.*/\([^/]*\)\.ixlibrary$%\1%'\''`; test $rm /sys/libs/${libname}_ixlibrary.a; $show "cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'
+  ;;
+
+beos*)
+  library_names_spec='${libname}${shared_ext}'
+  dynamic_linker="$host_os ld.so"
+  shlibpath_var=LIBRARY_PATH
+  ;;
+
+bsdi[45]*)
+  version_type=linux
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  sys_lib_search_path_spec="/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib"
+  sys_lib_dlsearch_path_spec="/shlib /usr/lib /usr/local/lib"
+  # the default ld.so.conf also contains /usr/contrib/lib and
+  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow
+  # libtool to hard-code these into programs
+  ;;
+
+cygwin* | mingw* | pw32*)
+  version_type=windows
+  shrext_cmds=".dll"
+  need_version=no
+  need_lib_prefix=no
+
+  case $GCC,$host_os in
+  yes,cygwin* | yes,mingw* | yes,pw32*)
+    library_names_spec='$libname.dll.a'
+    # DLL is installed to $(libdir)/../bin by postinstall_cmds
+    postinstall_cmds='base_file=`basename \${file}`~
+      dlpath=`$SHELL 2>&1 -c '\''. $dir/'\''\${base_file}'\''i;echo \$dlname'\''`~
+      dldir=$destdir/`dirname \$dlpath`~
+      test -d \$dldir || mkdir -p \$dldir~
+      $install_prog $dir/$dlname \$dldir/$dlname~
+      chmod a+x \$dldir/$dlname'
+    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\''. $file; echo \$dlname'\''`~
+      dlpath=$dir/\$dldll~
+       $rm \$dlpath'
+    shlibpath_overrides_runpath=yes
+
+    case $host_os in
+    cygwin*)
+      # Cygwin DLLs use 'cyg' prefix rather than 'lib'
+      soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      sys_lib_search_path_spec="/usr/lib /lib/w32api /lib /usr/local/lib"
+      ;;
+    mingw*)
+      # MinGW DLLs use traditional 'lib' prefix
+      soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      sys_lib_search_path_spec=`$CC -print-search-dirs | grep "^libraries:" | $SED -e "s/^libraries://" -e "s,=/,/,g"`
+      if echo "$sys_lib_search_path_spec" | grep ';[c-zC-Z]:/' >/dev/null; then
+        # It is most probably a Windows format PATH printed by
+        # mingw gcc, but we are running on Cygwin. Gcc prints its search
+        # path with ; separators, and with drive letters. We can handle the
+        # drive letters (cygwin fileutils understands them), so leave them,
+        # especially as we might pass files found there to a mingw objdump,
+        # which wouldn't understand a cygwinified path. Ahh.
+        sys_lib_search_path_spec=`echo "$sys_lib_search_path_spec" | $SED -e 's/;/ /g'`
+      else
+        sys_lib_search_path_spec=`echo "$sys_lib_search_path_spec" | $SED  -e "s/$PATH_SEPARATOR/ /g"`
+      fi
+      ;;
+    pw32*)
+      # pw32 DLLs use 'pw' prefix rather than 'lib'
+      library_names_spec='`echo ${libname} | sed -e 's/^lib/pw/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      ;;
+    esac
+    ;;
+
+  *)
+    library_names_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext} $libname.lib'
+    ;;
+  esac
+  dynamic_linker='Win32 ld.exe'
+  # FIXME: first we should search . and the directory the executable is in
+  shlibpath_var=PATH
+  ;;
+
+darwin* | rhapsody*)
+  dynamic_linker="$host_os dyld"
+  version_type=darwin
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${versuffix}$shared_ext ${libname}${release}${major}$shared_ext ${libname}$shared_ext'
+  soname_spec='${libname}${release}${major}$shared_ext'
+  shlibpath_overrides_runpath=yes
+  shlibpath_var=DYLD_LIBRARY_PATH
+  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'
+  # Apple's gcc prints 'gcc -print-search-dirs' doesn't operate the same.
+  if test "$GCC" = yes; then
+    sys_lib_search_path_spec=`$CC -print-search-dirs | tr "\n" "$PATH_SEPARATOR" | sed -e 's/libraries:/@libraries:/' | tr "@" "\n" | grep "^libraries:" | sed -e "s/^libraries://" -e "s,=/,/,g" -e "s,$PATH_SEPARATOR, ,g" -e "s,.*,& /lib /usr/lib /usr/local/lib,g"`
+  else
+    sys_lib_search_path_spec='/lib /usr/lib /usr/local/lib'
+  fi
+  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'
+  ;;
+
+dgux*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname$shared_ext'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  ;;
+
+freebsd1*)
+  dynamic_linker=no
+  ;;
+
+freebsd* | dragonfly*)
+  # DragonFly does not have aout.  When/if they implement a new
+  # versioning mechanism, adjust this.
+  if test -x /usr/bin/objformat; then
+    objformat=`/usr/bin/objformat`
+  else
+    case $host_os in
+    freebsd[123]*) objformat=aout ;;
+    *) objformat=elf ;;
+    esac
+  fi
+  version_type=freebsd-$objformat
+  case $version_type in
+    freebsd-elf*)
+      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'
+      need_version=no
+      need_lib_prefix=no
+      ;;
+    freebsd-*)
+      library_names_spec='${libname}${release}${shared_ext}$versuffix $libname${shared_ext}$versuffix'
+      need_version=yes
+      ;;
+  esac
+  shlibpath_var=LD_LIBRARY_PATH
+  case $host_os in
+  freebsd2*)
+    shlibpath_overrides_runpath=yes
+    ;;
+  freebsd3.[01]* | freebsdelf3.[01]*)
+    shlibpath_overrides_runpath=yes
+    hardcode_into_libs=yes
+    ;;
+  freebsd3.[2-9]* | freebsdelf3.[2-9]* | \
+  freebsd4.[0-5] | freebsdelf4.[0-5] | freebsd4.1.1 | freebsdelf4.1.1)
+    shlibpath_overrides_runpath=no
+    hardcode_into_libs=yes
+    ;;
+  freebsd*) # from 4.6 on
+    shlibpath_overrides_runpath=yes
+    hardcode_into_libs=yes
+    ;;
+  esac
+  ;;
+
+gnu*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  hardcode_into_libs=yes
+  ;;
+
+hpux9* | hpux10* | hpux11*)
+  # Give a soname corresponding to the major version so that dld.sl refuses to
+  # link against other versions.
+  version_type=sunos
+  need_lib_prefix=no
+  need_version=no
+  case $host_cpu in
+  ia64*)
+    shrext_cmds='.so'
+    hardcode_into_libs=yes
+    dynamic_linker="$host_os dld.so"
+    shlibpath_var=LD_LIBRARY_PATH
+    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    if test "X$HPUX_IA64_MODE" = X32; then
+      sys_lib_search_path_spec="/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib"
+    else
+      sys_lib_search_path_spec="/usr/lib/hpux64 /usr/local/lib/hpux64"
+    fi
+    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
+    ;;
+   hppa*64*)
+     shrext_cmds='.sl'
+     hardcode_into_libs=yes
+     dynamic_linker="$host_os dld.sl"
+     shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH
+     shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
+     library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+     soname_spec='${libname}${release}${shared_ext}$major'
+     sys_lib_search_path_spec="/usr/lib/pa20_64 /usr/ccs/lib/pa20_64"
+     sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
+     ;;
+   *)
+    shrext_cmds='.sl'
+    dynamic_linker="$host_os dld.sl"
+    shlibpath_var=SHLIB_PATH
+    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    ;;
+  esac
+  # HP-UX runs *really* slowly unless shared libraries are mode 555.
+  postinstall_cmds='chmod 555 $lib'
+  ;;
+
+interix3*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  ;;
+
+irix5* | irix6* | nonstopux*)
+  case $host_os in
+    nonstopux*) version_type=nonstopux ;;
+    *)
+	if test "$lt_cv_prog_gnu_ld" = yes; then
+		version_type=linux
+	else
+		version_type=irix
+	fi ;;
+  esac
+  need_lib_prefix=no
+  need_version=no
+  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext} $libname${shared_ext}'
+  case $host_os in
+  irix5* | nonstopux*)
+    libsuff= shlibsuff=
+    ;;
+  *)
+    case $LD in # libtool.m4 will add one of these switches to LD
+    *-32|*"-32 "|*-melf32bsmip|*"-melf32bsmip ")
+      libsuff= shlibsuff= libmagic=32-bit;;
+    *-n32|*"-n32 "|*-melf32bmipn32|*"-melf32bmipn32 ")
+      libsuff=32 shlibsuff=N32 libmagic=N32;;
+    *-64|*"-64 "|*-melf64bmip|*"-melf64bmip ")
+      libsuff=64 shlibsuff=64 libmagic=64-bit;;
+    *) libsuff= shlibsuff= libmagic=never-match;;
+    esac
+    ;;
+  esac
+  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH
+  shlibpath_overrides_runpath=no
+  sys_lib_search_path_spec="/usr/lib${libsuff} /lib${libsuff} /usr/local/lib${libsuff}"
+  sys_lib_dlsearch_path_spec="/usr/lib${libsuff} /lib${libsuff}"
+  hardcode_into_libs=yes
+  ;;
+
+# No shared lib support for Linux oldld, aout, or coff.
+linux*oldld* | linux*aout* | linux*coff*)
+  dynamic_linker=no
+  ;;
+
+# This must be Linux ELF.
+linux* | k*bsd*-gnu)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig -n $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  # This implies no fast_install, which is unacceptable.
+  # Some rework will be needed to allow for fast_install
+  # before this can be enabled.
+  hardcode_into_libs=yes
+
+  # Append ld.so.conf contents to the search path
+  if test -f /etc/ld.so.conf; then
+    lt_ld_extra=`awk '/^include / { system(sprintf("cd /etc; cat %s", \$2)); skip = 1; } { if (!skip) print \$0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;s/[:,	]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;/^$/d' | tr '\n' ' '`
+    sys_lib_dlsearch_path_spec="/lib /usr/lib $lt_ld_extra"
+  fi
+
+  # We used to test for /lib/ld.so.1 and disable shared libraries on
+  # powerpc, because MkLinux only supported shared libraries with the
+  # GNU dynamic linker.  Since this was broken with cross compilers,
+  # most powerpc-linux boxes support dynamic linking these days and
+  # people can always --disable-shared, the test was removed, and we
+  # assume the GNU/Linux dynamic linker is in use.
+  dynamic_linker='GNU/Linux ld.so'
+  ;;
+
+netbsdelf*-gnu)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  dynamic_linker='NetBSD ld.elf_so'
+  ;;
+
+netbsd*)
+  version_type=sunos
+  need_lib_prefix=no
+  need_version=no
+  if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+    finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
+    dynamic_linker='NetBSD (a.out) ld.so'
+  else
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    dynamic_linker='NetBSD ld.elf_so'
+  fi
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  hardcode_into_libs=yes
+  ;;
+
+newsos6)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  ;;
+
+nto-qnx*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  ;;
+
+openbsd*)
+  version_type=sunos
+  sys_lib_dlsearch_path_spec="/usr/lib"
+  need_lib_prefix=no
+  # Some older versions of OpenBSD (3.3 at least) *do* need versioned libs.
+  case $host_os in
+    openbsd3.3 | openbsd3.3.*) need_version=yes ;;
+    *)                         need_version=no  ;;
+  esac
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  if test -z "`echo __ELF__ | $CC -E - | grep __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+    case $host_os in
+      openbsd2.[89] | openbsd2.[89].*)
+	shlibpath_overrides_runpath=no
+	;;
+      *)
+	shlibpath_overrides_runpath=yes
+	;;
+      esac
+  else
+    shlibpath_overrides_runpath=yes
+  fi
+  ;;
+
+os2*)
+  libname_spec='$name'
+  shrext_cmds=".dll"
+  need_lib_prefix=no
+  library_names_spec='$libname${shared_ext} $libname.a'
+  dynamic_linker='OS/2 ld.exe'
+  shlibpath_var=LIBPATH
+  ;;
+
+osf3* | osf4* | osf5*)
+  version_type=osf
+  need_lib_prefix=no
+  need_version=no
+  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  shlibpath_var=LD_LIBRARY_PATH
+  sys_lib_search_path_spec="/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib"
+  sys_lib_dlsearch_path_spec="$sys_lib_search_path_spec"
+  ;;
+
+solaris*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  hardcode_into_libs=yes
+  # ldd complains unless libraries are executable
+  postinstall_cmds='chmod +x $lib'
+  ;;
+
+sunos4*)
+  version_type=sunos
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+  finish_cmds='PATH="\$PATH:/usr/etc" ldconfig $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  if test "$with_gnu_ld" = yes; then
+    need_lib_prefix=no
+  fi
+  need_version=yes
+  ;;
+
+sysv4 | sysv4.3*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  case $host_vendor in
+    sni)
+      shlibpath_overrides_runpath=no
+      need_lib_prefix=no
+      export_dynamic_flag_spec='${wl}-Blargedynsym'
+      runpath_var=LD_RUN_PATH
+      ;;
+    siemens)
+      need_lib_prefix=no
+      ;;
+    motorola)
+      need_lib_prefix=no
+      need_version=no
+      shlibpath_overrides_runpath=no
+      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'
+      ;;
+  esac
+  ;;
+
+sysv4*MP*)
+  if test -d /usr/nec ;then
+    version_type=linux
+    library_names_spec='$libname${shared_ext}.$versuffix $libname${shared_ext}.$major $libname${shared_ext}'
+    soname_spec='$libname${shared_ext}.$major'
+    shlibpath_var=LD_LIBRARY_PATH
+  fi
+  ;;
+
+sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
+  version_type=freebsd-elf
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  hardcode_into_libs=yes
+  if test "$with_gnu_ld" = yes; then
+    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'
+    shlibpath_overrides_runpath=no
+  else
+    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'
+    shlibpath_overrides_runpath=yes
+    case $host_os in
+      sco3.2v5*)
+        sys_lib_search_path_spec="$sys_lib_search_path_spec /lib"
+	;;
+    esac
+  fi
+  sys_lib_dlsearch_path_spec='/usr/lib'
+  ;;
+
+uts4*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  ;;
+
+*)
+  dynamic_linker=no
+  ;;
+esac
+{ echo "$as_me:$LINENO: result: $dynamic_linker" >&5
+echo "${ECHO_T}$dynamic_linker" >&6; }
+test "$dynamic_linker" = no && can_build_shared=no
+
+variables_saved_for_relink="PATH $shlibpath_var $runpath_var"
+if test "$GCC" = yes; then
+  variables_saved_for_relink="$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH"
+fi
+
+{ echo "$as_me:$LINENO: checking how to hardcode library paths into programs" >&5
+echo $ECHO_N "checking how to hardcode library paths into programs... $ECHO_C" >&6; }
+hardcode_action_F77=
+if test -n "$hardcode_libdir_flag_spec_F77" || \
+   test -n "$runpath_var_F77" || \
+   test "X$hardcode_automatic_F77" = "Xyes" ; then
+
+  # We can hardcode non-existant directories.
+  if test "$hardcode_direct_F77" != no &&
+     # If the only mechanism to avoid hardcoding is shlibpath_var, we
+     # have to relink, otherwise we might link with an installed library
+     # when we should be linking with a yet-to-be-installed one
+     ## test "$_LT_AC_TAGVAR(hardcode_shlibpath_var, F77)" != no &&
+     test "$hardcode_minus_L_F77" != no; then
+    # Linking always hardcodes the temporary library directory.
+    hardcode_action_F77=relink
+  else
+    # We can link without hardcoding, and we can hardcode nonexisting dirs.
+    hardcode_action_F77=immediate
+  fi
+else
+  # We cannot hardcode anything, or else we can only hardcode existing
+  # directories.
+  hardcode_action_F77=unsupported
+fi
+{ echo "$as_me:$LINENO: result: $hardcode_action_F77" >&5
+echo "${ECHO_T}$hardcode_action_F77" >&6; }
+
+if test "$hardcode_action_F77" = relink; then
+  # Fast installation is not supported
+  enable_fast_install=no
+elif test "$shlibpath_overrides_runpath" = yes ||
+     test "$enable_shared" = no; then
+  # Fast installation is not necessary
+  enable_fast_install=needless
+fi
+
+
+# The else clause should only fire when bootstrapping the
+# libtool distribution, otherwise you forgot to ship ltmain.sh
+# with your package, and you will get complaints that there are
+# no rules to generate ltmain.sh.
+if test -f "$ltmain"; then
+  # See if we are running on zsh, and set the options which allow our commands through
+  # without removal of \ escapes.
+  if test -n "${ZSH_VERSION+set}" ; then
+    setopt NO_GLOB_SUBST
+  fi
+  # Now quote all the things that may contain metacharacters while being
+  # careful not to overquote the AC_SUBSTed values.  We take copies of the
+  # variables and quote the copies for generation of the libtool script.
+  for var in echo old_CC old_CFLAGS AR AR_FLAGS EGREP RANLIB LN_S LTCC LTCFLAGS NM \
+    SED SHELL STRIP \
+    libname_spec library_names_spec soname_spec extract_expsyms_cmds \
+    old_striplib striplib file_magic_cmd finish_cmds finish_eval \
+    deplibs_check_method reload_flag reload_cmds need_locks \
+    lt_cv_sys_global_symbol_pipe lt_cv_sys_global_symbol_to_cdecl \
+    lt_cv_sys_global_symbol_to_c_name_address \
+    sys_lib_search_path_spec sys_lib_dlsearch_path_spec \
+    old_postinstall_cmds old_postuninstall_cmds \
+    compiler_F77 \
+    CC_F77 \
+    LD_F77 \
+    lt_prog_compiler_wl_F77 \
+    lt_prog_compiler_pic_F77 \
+    lt_prog_compiler_static_F77 \
+    lt_prog_compiler_no_builtin_flag_F77 \
+    export_dynamic_flag_spec_F77 \
+    thread_safe_flag_spec_F77 \
+    whole_archive_flag_spec_F77 \
+    enable_shared_with_static_runtimes_F77 \
+    old_archive_cmds_F77 \
+    old_archive_from_new_cmds_F77 \
+    predep_objects_F77 \
+    postdep_objects_F77 \
+    predeps_F77 \
+    postdeps_F77 \
+    compiler_lib_search_path_F77 \
+    archive_cmds_F77 \
+    archive_expsym_cmds_F77 \
+    postinstall_cmds_F77 \
+    postuninstall_cmds_F77 \
+    old_archive_from_expsyms_cmds_F77 \
+    allow_undefined_flag_F77 \
+    no_undefined_flag_F77 \
+    export_symbols_cmds_F77 \
+    hardcode_libdir_flag_spec_F77 \
+    hardcode_libdir_flag_spec_ld_F77 \
+    hardcode_libdir_separator_F77 \
+    hardcode_automatic_F77 \
+    module_cmds_F77 \
+    module_expsym_cmds_F77 \
+    lt_cv_prog_compiler_c_o_F77 \
+    exclude_expsyms_F77 \
+    include_expsyms_F77; do
+
+    case $var in
+    old_archive_cmds_F77 | \
+    old_archive_from_new_cmds_F77 | \
+    archive_cmds_F77 | \
+    archive_expsym_cmds_F77 | \
+    module_cmds_F77 | \
+    module_expsym_cmds_F77 | \
+    old_archive_from_expsyms_cmds_F77 | \
+    export_symbols_cmds_F77 | \
+    extract_expsyms_cmds | reload_cmds | finish_cmds | \
+    postinstall_cmds | postuninstall_cmds | \
+    old_postinstall_cmds | old_postuninstall_cmds | \
+    sys_lib_search_path_spec | sys_lib_dlsearch_path_spec)
+      # Double-quote double-evaled strings.
+      eval "lt_$var=\\\"\`\$echo \"X\$$var\" | \$Xsed -e \"\$double_quote_subst\" -e \"\$sed_quote_subst\" -e \"\$delay_variable_subst\"\`\\\""
+      ;;
+    *)
+      eval "lt_$var=\\\"\`\$echo \"X\$$var\" | \$Xsed -e \"\$sed_quote_subst\"\`\\\""
+      ;;
+    esac
+  done
+
+  case $lt_echo in
+  *'\$0 --fallback-echo"')
+    lt_echo=`$echo "X$lt_echo" | $Xsed -e 's/\\\\\\\$0 --fallback-echo"$/$0 --fallback-echo"/'`
+    ;;
+  esac
+
+cfgfile="$ofile"
+
+  cat <<__EOF__ >> "$cfgfile"
+# ### BEGIN LIBTOOL TAG CONFIG: $tagname
+
+# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
+
+# Shell to use when invoking shell scripts.
+SHELL=$lt_SHELL
+
+# Whether or not to build shared libraries.
+build_libtool_libs=$enable_shared
+
+# Whether or not to build static libraries.
+build_old_libs=$enable_static
+
+# Whether or not to add -lc for building shared libraries.
+build_libtool_need_lc=$archive_cmds_need_lc_F77
+
+# Whether or not to disallow shared libs when runtime libs are static
+allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes_F77
+
+# Whether or not to optimize for fast installation.
+fast_install=$enable_fast_install
+
+# The host system.
+host_alias=$host_alias
+host=$host
+host_os=$host_os
+
+# The build system.
+build_alias=$build_alias
+build=$build
+build_os=$build_os
+
+# An echo program that does not interpret backslashes.
+echo=$lt_echo
+
+# The archiver.
+AR=$lt_AR
+AR_FLAGS=$lt_AR_FLAGS
+
+# A C compiler.
+LTCC=$lt_LTCC
+
+# LTCC compiler flags.
+LTCFLAGS=$lt_LTCFLAGS
+
+# A language-specific compiler.
+CC=$lt_compiler_F77
+
+# Is the compiler the GNU C compiler?
+with_gcc=$GCC_F77
+
+# An ERE matcher.
+EGREP=$lt_EGREP
+
+# The linker used to build libraries.
+LD=$lt_LD_F77
+
+# Whether we need hard or soft links.
+LN_S=$lt_LN_S
+
+# A BSD-compatible nm program.
+NM=$lt_NM
+
+# A symbol stripping program
+STRIP=$lt_STRIP
+
+# Used to examine libraries when file_magic_cmd begins "file"
+MAGIC_CMD=$MAGIC_CMD
+
+# Used on cygwin: DLL creation program.
+DLLTOOL="$DLLTOOL"
+
+# Used on cygwin: object dumper.
+OBJDUMP="$OBJDUMP"
+
+# Used on cygwin: assembler.
+AS="$AS"
+
+# The name of the directory that contains temporary libtool files.
+objdir=$objdir
+
+# How to create reloadable object files.
+reload_flag=$lt_reload_flag
+reload_cmds=$lt_reload_cmds
+
+# How to pass a linker flag through the compiler.
+wl=$lt_lt_prog_compiler_wl_F77
+
+# Object file suffix (normally "o").
+objext="$ac_objext"
+
+# Old archive suffix (normally "a").
+libext="$libext"
+
+# Shared library suffix (normally ".so").
+shrext_cmds='$shrext_cmds'
+
+# Executable file suffix (normally "").
+exeext="$exeext"
+
+# Additional compiler flags for building library objects.
+pic_flag=$lt_lt_prog_compiler_pic_F77
+pic_mode=$pic_mode
+
+# What is the maximum length of a command?
+max_cmd_len=$lt_cv_sys_max_cmd_len
+
+# Does compiler simultaneously support -c and -o options?
+compiler_c_o=$lt_lt_cv_prog_compiler_c_o_F77
+
+# Must we lock files when doing compilation?
+need_locks=$lt_need_locks
+
+# Do we need the lib prefix for modules?
+need_lib_prefix=$need_lib_prefix
+
+# Do we need a version for libraries?
+need_version=$need_version
+
+# Whether dlopen is supported.
+dlopen_support=$enable_dlopen
+
+# Whether dlopen of programs is supported.
+dlopen_self=$enable_dlopen_self
+
+# Whether dlopen of statically linked programs is supported.
+dlopen_self_static=$enable_dlopen_self_static
+
+# Compiler flag to prevent dynamic linking.
+link_static_flag=$lt_lt_prog_compiler_static_F77
+
+# Compiler flag to turn off builtin functions.
+no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag_F77
+
+# Compiler flag to allow reflexive dlopens.
+export_dynamic_flag_spec=$lt_export_dynamic_flag_spec_F77
+
+# Compiler flag to generate shared objects directly from archives.
+whole_archive_flag_spec=$lt_whole_archive_flag_spec_F77
+
+# Compiler flag to generate thread-safe objects.
+thread_safe_flag_spec=$lt_thread_safe_flag_spec_F77
+
+# Library versioning type.
+version_type=$version_type
+
+# Format of library name prefix.
+libname_spec=$lt_libname_spec
+
+# List of archive names.  First name is the real one, the rest are links.
+# The last name is the one that the linker finds with -lNAME.
+library_names_spec=$lt_library_names_spec
+
+# The coded name of the library, if different from the real name.
+soname_spec=$lt_soname_spec
+
+# Commands used to build and install an old-style archive.
+RANLIB=$lt_RANLIB
+old_archive_cmds=$lt_old_archive_cmds_F77
+old_postinstall_cmds=$lt_old_postinstall_cmds
+old_postuninstall_cmds=$lt_old_postuninstall_cmds
+
+# Create an old-style archive from a shared archive.
+old_archive_from_new_cmds=$lt_old_archive_from_new_cmds_F77
+
+# Create a temporary old-style archive to link instead of a shared archive.
+old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds_F77
+
+# Commands used to build and install a shared archive.
+archive_cmds=$lt_archive_cmds_F77
+archive_expsym_cmds=$lt_archive_expsym_cmds_F77
+postinstall_cmds=$lt_postinstall_cmds
+postuninstall_cmds=$lt_postuninstall_cmds
+
+# Commands used to build a loadable module (assumed same as above if empty)
+module_cmds=$lt_module_cmds_F77
+module_expsym_cmds=$lt_module_expsym_cmds_F77
+
+# Commands to strip libraries.
+old_striplib=$lt_old_striplib
+striplib=$lt_striplib
+
+# Dependencies to place before the objects being linked to create a
+# shared library.
+predep_objects=$lt_predep_objects_F77
+
+# Dependencies to place after the objects being linked to create a
+# shared library.
+postdep_objects=$lt_postdep_objects_F77
+
+# Dependencies to place before the objects being linked to create a
+# shared library.
+predeps=$lt_predeps_F77
+
+# Dependencies to place after the objects being linked to create a
+# shared library.
+postdeps=$lt_postdeps_F77
+
+# The library search path used internally by the compiler when linking
+# a shared library.
+compiler_lib_search_path=$lt_compiler_lib_search_path_F77
+
+# Method to check whether dependent libraries are shared objects.
+deplibs_check_method=$lt_deplibs_check_method
+
+# Command to use when deplibs_check_method == file_magic.
+file_magic_cmd=$lt_file_magic_cmd
+
+# Flag that allows shared libraries with undefined symbols to be built.
+allow_undefined_flag=$lt_allow_undefined_flag_F77
+
+# Flag that forces no undefined symbols.
+no_undefined_flag=$lt_no_undefined_flag_F77
+
+# Commands used to finish a libtool library installation in a directory.
+finish_cmds=$lt_finish_cmds
+
+# Same as above, but a single script fragment to be evaled but not shown.
+finish_eval=$lt_finish_eval
+
+# Take the output of nm and produce a listing of raw symbols and C names.
+global_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe
+
+# Transform the output of nm in a proper C declaration
+global_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl
+
+# Transform the output of nm in a C name address pair
+global_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address
+
+# This is the shared library runtime path variable.
+runpath_var=$runpath_var
+
+# This is the shared library path variable.
+shlibpath_var=$shlibpath_var
+
+# Is shlibpath searched before the hard-coded library search path?
+shlibpath_overrides_runpath=$shlibpath_overrides_runpath
+
+# How to hardcode a shared library path into an executable.
+hardcode_action=$hardcode_action_F77
+
+# Whether we should hardcode library paths into libraries.
+hardcode_into_libs=$hardcode_into_libs
+
+# Flag to hardcode \$libdir into a binary during linking.
+# This must work even if \$libdir does not exist.
+hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_F77
+
+# If ld is used when linking, flag to hardcode \$libdir into
+# a binary during linking. This must work even if \$libdir does
+# not exist.
+hardcode_libdir_flag_spec_ld=$lt_hardcode_libdir_flag_spec_ld_F77
+
+# Whether we need a single -rpath flag with a separated argument.
+hardcode_libdir_separator=$lt_hardcode_libdir_separator_F77
+
+# Set to yes if using DIR/libNAME${shared_ext} during linking hardcodes DIR into the
+# resulting binary.
+hardcode_direct=$hardcode_direct_F77
+
+# Set to yes if using the -LDIR flag during linking hardcodes DIR into the
+# resulting binary.
+hardcode_minus_L=$hardcode_minus_L_F77
+
+# Set to yes if using SHLIBPATH_VAR=DIR during linking hardcodes DIR into
+# the resulting binary.
+hardcode_shlibpath_var=$hardcode_shlibpath_var_F77
+
+# Set to yes if building a shared library automatically hardcodes DIR into the library
+# and all subsequent libraries and executables linked against it.
+hardcode_automatic=$hardcode_automatic_F77
+
+# Variables whose values should be saved in libtool wrapper scripts and
+# restored at relink time.
+variables_saved_for_relink="$variables_saved_for_relink"
+
+# Whether libtool must link a program against all its dependency libraries.
+link_all_deplibs=$link_all_deplibs_F77
+
+# Compile-time system search path for libraries
+sys_lib_search_path_spec=$lt_sys_lib_search_path_spec
+
+# Run-time system search path for libraries
+sys_lib_dlsearch_path_spec=$lt_sys_lib_dlsearch_path_spec
+
+# Fix the shell variable \$srcfile for the compiler.
+fix_srcfile_path="$fix_srcfile_path_F77"
+
+# Set to yes if exported symbols are required.
+always_export_symbols=$always_export_symbols_F77
+
+# The commands to list exported symbols.
+export_symbols_cmds=$lt_export_symbols_cmds_F77
+
+# The commands to extract the exported symbol list from a shared archive.
+extract_expsyms_cmds=$lt_extract_expsyms_cmds
+
+# Symbols that should not be listed in the preloaded symbols.
+exclude_expsyms=$lt_exclude_expsyms_F77
+
+# Symbols that must always be exported.
+include_expsyms=$lt_include_expsyms_F77
+
+# ### END LIBTOOL TAG CONFIG: $tagname
+
+__EOF__
+
+
+else
+  # If there is no Makefile yet, we rely on a make rule to execute
+  # `config.status --recheck' to rerun these tests and create the
+  # libtool script then.
+  ltmain_in=`echo $ltmain | sed -e 's/\.sh$/.in/'`
+  if test -f "$ltmain_in"; then
+    test -f Makefile && make "$ltmain"
+  fi
+fi
+
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+CC="$lt_save_CC"
+
+	else
+	  tagname=""
+	fi
+	;;
+
+      GCJ)
+	if test -n "$GCJ" && test "X$GCJ" != "Xno"; then
+
+
+# Source file extension for Java test sources.
+ac_ext=java
+
+# Object file extension for compiled Java test sources.
+objext=o
+objext_GCJ=$objext
+
+# Code to be used in simple compile tests
+lt_simple_compile_test_code="class foo {}\n"
+
+# Code to be used in simple link tests
+lt_simple_link_test_code='public class conftest { public static void main(String[] argv) {}; }\n'
+
+# ltmain only uses $CC for tagged configurations so make sure $CC is set.
+
+# If no C compiler was specified, use CC.
+LTCC=${LTCC-"$CC"}
+
+# If no C compiler flags were specified, use CFLAGS.
+LTCFLAGS=${LTCFLAGS-"$CFLAGS"}
+
+# Allow CC to be a program name with arguments.
+compiler=$CC
+
+
+# save warnings/boilerplate of simple test code
+ac_outfile=conftest.$ac_objext
+printf "$lt_simple_compile_test_code" >conftest.$ac_ext
+eval "$ac_compile" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
+_lt_compiler_boilerplate=`cat conftest.err`
+$rm conftest*
+
+ac_outfile=conftest.$ac_objext
+printf "$lt_simple_link_test_code" >conftest.$ac_ext
+eval "$ac_link" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
+_lt_linker_boilerplate=`cat conftest.err`
+$rm conftest*
+
+
+# Allow CC to be a program name with arguments.
+lt_save_CC="$CC"
+CC=${GCJ-"gcj"}
+compiler=$CC
+compiler_GCJ=$CC
+for cc_temp in $compiler""; do
+  case $cc_temp in
+    compile | *[\\/]compile | ccache | *[\\/]ccache ) ;;
+    distcc | *[\\/]distcc | purify | *[\\/]purify ) ;;
+    \-*) ;;
+    *) break;;
+  esac
+done
+cc_basename=`$echo "X$cc_temp" | $Xsed -e 's%.*/%%' -e "s%^$host_alias-%%"`
+
+
+# GCJ did not exist at the time GCC didn't implicitly link libc in.
+archive_cmds_need_lc_GCJ=no
+
+old_archive_cmds_GCJ=$old_archive_cmds
+
+
+lt_prog_compiler_no_builtin_flag_GCJ=
+
+if test "$GCC" = yes; then
+  lt_prog_compiler_no_builtin_flag_GCJ=' -fno-builtin'
+
+
+{ echo "$as_me:$LINENO: checking if $compiler supports -fno-rtti -fno-exceptions" >&5
+echo $ECHO_N "checking if $compiler supports -fno-rtti -fno-exceptions... $ECHO_C" >&6; }
+if test "${lt_cv_prog_compiler_rtti_exceptions+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  lt_cv_prog_compiler_rtti_exceptions=no
+  ac_outfile=conftest.$ac_objext
+   printf "$lt_simple_compile_test_code" > conftest.$ac_ext
+   lt_compiler_flag="-fno-rtti -fno-exceptions"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   # The option is referenced via a variable to avoid confusing sed.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:16155: $lt_compile\"" >&5)
+   (eval "$lt_compile" 2>conftest.err)
+   ac_status=$?
+   cat conftest.err >&5
+   echo "$as_me:16159: \$? = $ac_status" >&5
+   if (exit $ac_status) && test -s "$ac_outfile"; then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings other than the usual output.
+     $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
+     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
+     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
+       lt_cv_prog_compiler_rtti_exceptions=yes
+     fi
+   fi
+   $rm conftest*
+
+fi
+{ echo "$as_me:$LINENO: result: $lt_cv_prog_compiler_rtti_exceptions" >&5
+echo "${ECHO_T}$lt_cv_prog_compiler_rtti_exceptions" >&6; }
+
+if test x"$lt_cv_prog_compiler_rtti_exceptions" = xyes; then
+    lt_prog_compiler_no_builtin_flag_GCJ="$lt_prog_compiler_no_builtin_flag_GCJ -fno-rtti -fno-exceptions"
+else
+    :
+fi
+
+fi
+
+lt_prog_compiler_wl_GCJ=
+lt_prog_compiler_pic_GCJ=
+lt_prog_compiler_static_GCJ=
+
+{ echo "$as_me:$LINENO: checking for $compiler option to produce PIC" >&5
+echo $ECHO_N "checking for $compiler option to produce PIC... $ECHO_C" >&6; }
+
+  if test "$GCC" = yes; then
+    lt_prog_compiler_wl_GCJ='-Wl,'
+    lt_prog_compiler_static_GCJ='-static'
+
+    case $host_os in
+      aix*)
+      # All AIX code is PIC.
+      if test "$host_cpu" = ia64; then
+	# AIX 5 now supports IA64 processor
+	lt_prog_compiler_static_GCJ='-Bstatic'
+      fi
+      ;;
+
+    amigaos*)
+      # FIXME: we need at least 68020 code to build shared libraries, but
+      # adding the `-m68020' flag to GCC prevents building anything better,
+      # like `-m68040'.
+      lt_prog_compiler_pic_GCJ='-m68020 -resident32 -malways-restore-a4'
+      ;;
+
+    beos* | cygwin* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)
+      # PIC is the default for these OSes.
+      ;;
+
+    mingw* | pw32* | os2*)
+      # This hack is so that the source file can tell whether it is being
+      # built for inclusion in a dll (and should export symbols for example).
+      lt_prog_compiler_pic_GCJ='-DDLL_EXPORT'
+      ;;
+
+    darwin* | rhapsody*)
+      # PIC is the default on this platform
+      # Common symbols not allowed in MH_DYLIB files
+      lt_prog_compiler_pic_GCJ='-fno-common'
+      ;;
+
+    interix3*)
+      # Interix 3.x gcc -fpic/-fPIC options generate broken code.
+      # Instead, we relocate shared libraries at runtime.
+      ;;
+
+    msdosdjgpp*)
+      # Just because we use GCC doesn't mean we suddenly get shared libraries
+      # on systems that don't support them.
+      lt_prog_compiler_can_build_shared_GCJ=no
+      enable_shared=no
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec; then
+	lt_prog_compiler_pic_GCJ=-Kconform_pic
+      fi
+      ;;
+
+    hpux*)
+      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but
+      # not for PA HP-UX.
+      case $host_cpu in
+      hppa*64*|ia64*)
+	# +Z the default
+	;;
+      *)
+	lt_prog_compiler_pic_GCJ='-fPIC'
+	;;
+      esac
+      ;;
+
+    *)
+      lt_prog_compiler_pic_GCJ='-fPIC'
+      ;;
+    esac
+  else
+    # PORTME Check for flag to pass linker flags through the system compiler.
+    case $host_os in
+    aix*)
+      lt_prog_compiler_wl_GCJ='-Wl,'
+      if test "$host_cpu" = ia64; then
+	# AIX 5 now supports IA64 processor
+	lt_prog_compiler_static_GCJ='-Bstatic'
+      else
+	lt_prog_compiler_static_GCJ='-bnso -bI:/lib/syscalls.exp'
+      fi
+      ;;
+      darwin*)
+        # PIC is the default on this platform
+        # Common symbols not allowed in MH_DYLIB files
+       case $cc_basename in
+         xlc*)
+         lt_prog_compiler_pic_GCJ='-qnocommon'
+         lt_prog_compiler_wl_GCJ='-Wl,'
+         ;;
+       esac
+       ;;
+
+    mingw* | pw32* | os2*)
+      # This hack is so that the source file can tell whether it is being
+      # built for inclusion in a dll (and should export symbols for example).
+      lt_prog_compiler_pic_GCJ='-DDLL_EXPORT'
+      ;;
+
+    hpux9* | hpux10* | hpux11*)
+      lt_prog_compiler_wl_GCJ='-Wl,'
+      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but
+      # not for PA HP-UX.
+      case $host_cpu in
+      hppa*64*|ia64*)
+	# +Z the default
+	;;
+      *)
+	lt_prog_compiler_pic_GCJ='+Z'
+	;;
+      esac
+      # Is there a better lt_prog_compiler_static that works with the bundled CC?
+      lt_prog_compiler_static_GCJ='${wl}-a ${wl}archive'
+      ;;
+
+    irix5* | irix6* | nonstopux*)
+      lt_prog_compiler_wl_GCJ='-Wl,'
+      # PIC (with -KPIC) is the default.
+      lt_prog_compiler_static_GCJ='-non_shared'
+      ;;
+
+    newsos6)
+      lt_prog_compiler_pic_GCJ='-KPIC'
+      lt_prog_compiler_static_GCJ='-Bstatic'
+      ;;
+
+    linux* | k*bsd*-gnu)
+      case $cc_basename in
+      icc* | ecc*)
+	lt_prog_compiler_wl_GCJ='-Wl,'
+	lt_prog_compiler_pic_GCJ='-KPIC'
+	lt_prog_compiler_static_GCJ='-static'
+        ;;
+      pgcc* | pgf77* | pgf90* | pgf95*)
+        # Portland Group compilers (*not* the Pentium gcc compiler,
+	# which looks to be a dead project)
+	lt_prog_compiler_wl_GCJ='-Wl,'
+	lt_prog_compiler_pic_GCJ='-fpic'
+	lt_prog_compiler_static_GCJ='-Bstatic'
+        ;;
+      ccc*)
+        lt_prog_compiler_wl_GCJ='-Wl,'
+        # All Alpha code is PIC.
+        lt_prog_compiler_static_GCJ='-non_shared'
+        ;;
+      esac
+      ;;
+
+    osf3* | osf4* | osf5*)
+      lt_prog_compiler_wl_GCJ='-Wl,'
+      # All OSF/1 code is PIC.
+      lt_prog_compiler_static_GCJ='-non_shared'
+      ;;
+
+    solaris*)
+      lt_prog_compiler_pic_GCJ='-KPIC'
+      lt_prog_compiler_static_GCJ='-Bstatic'
+      case $cc_basename in
+      f77* | f90* | f95*)
+	lt_prog_compiler_wl_GCJ='-Qoption ld ';;
+      *)
+	lt_prog_compiler_wl_GCJ='-Wl,';;
+      esac
+      ;;
+
+    sunos4*)
+      lt_prog_compiler_wl_GCJ='-Qoption ld '
+      lt_prog_compiler_pic_GCJ='-PIC'
+      lt_prog_compiler_static_GCJ='-Bstatic'
+      ;;
+
+    sysv4 | sysv4.2uw2* | sysv4.3*)
+      lt_prog_compiler_wl_GCJ='-Wl,'
+      lt_prog_compiler_pic_GCJ='-KPIC'
+      lt_prog_compiler_static_GCJ='-Bstatic'
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec ;then
+	lt_prog_compiler_pic_GCJ='-Kconform_pic'
+	lt_prog_compiler_static_GCJ='-Bstatic'
+      fi
+      ;;
+
+    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)
+      lt_prog_compiler_wl_GCJ='-Wl,'
+      lt_prog_compiler_pic_GCJ='-KPIC'
+      lt_prog_compiler_static_GCJ='-Bstatic'
+      ;;
+
+    unicos*)
+      lt_prog_compiler_wl_GCJ='-Wl,'
+      lt_prog_compiler_can_build_shared_GCJ=no
+      ;;
+
+    uts4*)
+      lt_prog_compiler_pic_GCJ='-pic'
+      lt_prog_compiler_static_GCJ='-Bstatic'
+      ;;
+
+    *)
+      lt_prog_compiler_can_build_shared_GCJ=no
+      ;;
+    esac
+  fi
+
+{ echo "$as_me:$LINENO: result: $lt_prog_compiler_pic_GCJ" >&5
+echo "${ECHO_T}$lt_prog_compiler_pic_GCJ" >&6; }
+
+#
+# Check to make sure the PIC flag actually works.
+#
+if test -n "$lt_prog_compiler_pic_GCJ"; then
+
+{ echo "$as_me:$LINENO: checking if $compiler PIC flag $lt_prog_compiler_pic_GCJ works" >&5
+echo $ECHO_N "checking if $compiler PIC flag $lt_prog_compiler_pic_GCJ works... $ECHO_C" >&6; }
+if test "${lt_prog_compiler_pic_works_GCJ+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  lt_prog_compiler_pic_works_GCJ=no
+  ac_outfile=conftest.$ac_objext
+   printf "$lt_simple_compile_test_code" > conftest.$ac_ext
+   lt_compiler_flag="$lt_prog_compiler_pic_GCJ"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   # The option is referenced via a variable to avoid confusing sed.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:16423: $lt_compile\"" >&5)
+   (eval "$lt_compile" 2>conftest.err)
+   ac_status=$?
+   cat conftest.err >&5
+   echo "$as_me:16427: \$? = $ac_status" >&5
+   if (exit $ac_status) && test -s "$ac_outfile"; then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings other than the usual output.
+     $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
+     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
+     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
+       lt_prog_compiler_pic_works_GCJ=yes
+     fi
+   fi
+   $rm conftest*
+
+fi
+{ echo "$as_me:$LINENO: result: $lt_prog_compiler_pic_works_GCJ" >&5
+echo "${ECHO_T}$lt_prog_compiler_pic_works_GCJ" >&6; }
+
+if test x"$lt_prog_compiler_pic_works_GCJ" = xyes; then
+    case $lt_prog_compiler_pic_GCJ in
+     "" | " "*) ;;
+     *) lt_prog_compiler_pic_GCJ=" $lt_prog_compiler_pic_GCJ" ;;
+     esac
+else
+    lt_prog_compiler_pic_GCJ=
+     lt_prog_compiler_can_build_shared_GCJ=no
+fi
+
+fi
+case $host_os in
+  # For platforms which do not support PIC, -DPIC is meaningless:
+  *djgpp*)
+    lt_prog_compiler_pic_GCJ=
+    ;;
+  *)
+    lt_prog_compiler_pic_GCJ="$lt_prog_compiler_pic_GCJ"
+    ;;
+esac
+
+#
+# Check to make sure the static flag actually works.
+#
+wl=$lt_prog_compiler_wl_GCJ eval lt_tmp_static_flag=\"$lt_prog_compiler_static_GCJ\"
+{ echo "$as_me:$LINENO: checking if $compiler static flag $lt_tmp_static_flag works" >&5
+echo $ECHO_N "checking if $compiler static flag $lt_tmp_static_flag works... $ECHO_C" >&6; }
+if test "${lt_prog_compiler_static_works_GCJ+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  lt_prog_compiler_static_works_GCJ=no
+   save_LDFLAGS="$LDFLAGS"
+   LDFLAGS="$LDFLAGS $lt_tmp_static_flag"
+   printf "$lt_simple_link_test_code" > conftest.$ac_ext
+   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
+     # The linker can only warn and ignore the option if not recognized
+     # So say no if there are warnings
+     if test -s conftest.err; then
+       # Append any errors to the config.log.
+       cat conftest.err 1>&5
+       $echo "X$_lt_linker_boilerplate" | $Xsed -e '/^$/d' > conftest.exp
+       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
+       if diff conftest.exp conftest.er2 >/dev/null; then
+         lt_prog_compiler_static_works_GCJ=yes
+       fi
+     else
+       lt_prog_compiler_static_works_GCJ=yes
+     fi
+   fi
+   $rm conftest*
+   LDFLAGS="$save_LDFLAGS"
+
+fi
+{ echo "$as_me:$LINENO: result: $lt_prog_compiler_static_works_GCJ" >&5
+echo "${ECHO_T}$lt_prog_compiler_static_works_GCJ" >&6; }
+
+if test x"$lt_prog_compiler_static_works_GCJ" = xyes; then
+    :
+else
+    lt_prog_compiler_static_GCJ=
+fi
+
+
+{ echo "$as_me:$LINENO: checking if $compiler supports -c -o file.$ac_objext" >&5
+echo $ECHO_N "checking if $compiler supports -c -o file.$ac_objext... $ECHO_C" >&6; }
+if test "${lt_cv_prog_compiler_c_o_GCJ+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  lt_cv_prog_compiler_c_o_GCJ=no
+   $rm -r conftest 2>/dev/null
+   mkdir conftest
+   cd conftest
+   mkdir out
+   printf "$lt_simple_compile_test_code" > conftest.$ac_ext
+
+   lt_compiler_flag="-o out/conftest2.$ac_objext"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:16527: $lt_compile\"" >&5)
+   (eval "$lt_compile" 2>out/conftest.err)
+   ac_status=$?
+   cat out/conftest.err >&5
+   echo "$as_me:16531: \$? = $ac_status" >&5
+   if (exit $ac_status) && test -s out/conftest2.$ac_objext
+   then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings
+     $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' > out/conftest.exp
+     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
+     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then
+       lt_cv_prog_compiler_c_o_GCJ=yes
+     fi
+   fi
+   chmod u+w . 2>&5
+   $rm conftest*
+   # SGI C++ compiler will create directory out/ii_files/ for
+   # template instantiation
+   test -d out/ii_files && $rm out/ii_files/* && rmdir out/ii_files
+   $rm out/* && rmdir out
+   cd ..
+   rmdir conftest
+   $rm conftest*
+
+fi
+{ echo "$as_me:$LINENO: result: $lt_cv_prog_compiler_c_o_GCJ" >&5
+echo "${ECHO_T}$lt_cv_prog_compiler_c_o_GCJ" >&6; }
+
+
+hard_links="nottested"
+if test "$lt_cv_prog_compiler_c_o_GCJ" = no && test "$need_locks" != no; then
+  # do not overwrite the value of need_locks provided by the user
+  { echo "$as_me:$LINENO: checking if we can lock with hard links" >&5
+echo $ECHO_N "checking if we can lock with hard links... $ECHO_C" >&6; }
+  hard_links=yes
+  $rm conftest*
+  ln conftest.a conftest.b 2>/dev/null && hard_links=no
+  touch conftest.a
+  ln conftest.a conftest.b 2>&5 || hard_links=no
+  ln conftest.a conftest.b 2>/dev/null && hard_links=no
+  { echo "$as_me:$LINENO: result: $hard_links" >&5
+echo "${ECHO_T}$hard_links" >&6; }
+  if test "$hard_links" = no; then
+    { echo "$as_me:$LINENO: WARNING: \`$CC' does not support \`-c -o', so \`make -j' may be unsafe" >&5
+echo "$as_me: WARNING: \`$CC' does not support \`-c -o', so \`make -j' may be unsafe" >&2;}
+    need_locks=warn
+  fi
+else
+  need_locks=no
+fi
+
+{ echo "$as_me:$LINENO: checking whether the $compiler linker ($LD) supports shared libraries" >&5
+echo $ECHO_N "checking whether the $compiler linker ($LD) supports shared libraries... $ECHO_C" >&6; }
+
+  runpath_var=
+  allow_undefined_flag_GCJ=
+  enable_shared_with_static_runtimes_GCJ=no
+  archive_cmds_GCJ=
+  archive_expsym_cmds_GCJ=
+  old_archive_From_new_cmds_GCJ=
+  old_archive_from_expsyms_cmds_GCJ=
+  export_dynamic_flag_spec_GCJ=
+  whole_archive_flag_spec_GCJ=
+  thread_safe_flag_spec_GCJ=
+  hardcode_libdir_flag_spec_GCJ=
+  hardcode_libdir_flag_spec_ld_GCJ=
+  hardcode_libdir_separator_GCJ=
+  hardcode_direct_GCJ=no
+  hardcode_minus_L_GCJ=no
+  hardcode_shlibpath_var_GCJ=unsupported
+  link_all_deplibs_GCJ=unknown
+  hardcode_automatic_GCJ=no
+  module_cmds_GCJ=
+  module_expsym_cmds_GCJ=
+  always_export_symbols_GCJ=no
+  export_symbols_cmds_GCJ='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
+  # include_expsyms should be a list of space-separated symbols to be *always*
+  # included in the symbol list
+  include_expsyms_GCJ=
+  # exclude_expsyms can be an extended regexp of symbols to exclude
+  # it will be wrapped by ` (' and `)$', so one must not match beginning or
+  # end of line.  Example: `a|bc|.*d.*' will exclude the symbols `a' and `bc',
+  # as well as any symbol that contains `d'.
+  exclude_expsyms_GCJ="_GLOBAL_OFFSET_TABLE_"
+  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out
+  # platforms (ab)use it in PIC code, but their linkers get confused if
+  # the symbol is explicitly referenced.  Since portable code cannot
+  # rely on this symbol name, it's probably fine to never include it in
+  # preloaded symbol tables.
+  extract_expsyms_cmds=
+  # Just being paranoid about ensuring that cc_basename is set.
+  for cc_temp in $compiler""; do
+  case $cc_temp in
+    compile | *[\\/]compile | ccache | *[\\/]ccache ) ;;
+    distcc | *[\\/]distcc | purify | *[\\/]purify ) ;;
+    \-*) ;;
+    *) break;;
+  esac
+done
+cc_basename=`$echo "X$cc_temp" | $Xsed -e 's%.*/%%' -e "s%^$host_alias-%%"`
+
+  case $host_os in
+  cygwin* | mingw* | pw32*)
+    # FIXME: the MSVC++ port hasn't been tested in a loooong time
+    # When not using gcc, we currently assume that we are using
+    # Microsoft Visual C++.
+    if test "$GCC" != yes; then
+      with_gnu_ld=no
+    fi
+    ;;
+  interix*)
+    # we just hope/assume this is gcc and not c89 (= MSVC++)
+    with_gnu_ld=yes
+    ;;
+  openbsd*)
+    with_gnu_ld=no
+    ;;
+  esac
+
+  ld_shlibs_GCJ=yes
+  if test "$with_gnu_ld" = yes; then
+    # If archive_cmds runs LD, not CC, wlarc should be empty
+    wlarc='${wl}'
+
+    # Set some defaults for GNU ld with shared library support. These
+    # are reset later if shared libraries are not supported. Putting them
+    # here allows them to be overridden if necessary.
+    runpath_var=LD_RUN_PATH
+    hardcode_libdir_flag_spec_GCJ='${wl}--rpath ${wl}$libdir'
+    export_dynamic_flag_spec_GCJ='${wl}--export-dynamic'
+    # ancient GNU ld didn't support --whole-archive et. al.
+    if $LD --help 2>&1 | grep 'no-whole-archive' > /dev/null; then
+	whole_archive_flag_spec_GCJ="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
+      else
+  	whole_archive_flag_spec_GCJ=
+    fi
+    supports_anon_versioning=no
+    case `$LD -v 2>/dev/null` in
+      *\ [01].* | *\ 2.[0-9].* | *\ 2.10.*) ;; # catch versions < 2.11
+      *\ 2.11.93.0.2\ *) supports_anon_versioning=yes ;; # RH7.3 ...
+      *\ 2.11.92.0.12\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...
+      *\ 2.11.*) ;; # other 2.11 versions
+      *) supports_anon_versioning=yes ;;
+    esac
+
+    # See if GNU ld supports shared libraries.
+    case $host_os in
+    aix3* | aix4* | aix5*)
+      # On AIX/PPC, the GNU linker is very broken
+      if test "$host_cpu" != ia64; then
+	ld_shlibs_GCJ=no
+	cat <<EOF 1>&2
+
+*** Warning: the GNU linker, at least up to release 2.9.1, is reported
+*** to be unable to reliably create shared libraries on AIX.
+*** Therefore, libtool is disabling shared libraries support.  If you
+*** really care for shared libraries, you may want to modify your PATH
+*** so that a non-GNU linker is found, and then restart.
+
+EOF
+      fi
+      ;;
+
+    amigaos*)
+      archive_cmds_GCJ='$rm $output_objdir/a2ixlibrary.data~$echo "#define NAME $libname" > $output_objdir/a2ixlibrary.data~$echo "#define LIBRARY_ID 1" >> $output_objdir/a2ixlibrary.data~$echo "#define VERSION $major" >> $output_objdir/a2ixlibrary.data~$echo "#define REVISION $revision" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'
+      hardcode_libdir_flag_spec_GCJ='-L$libdir'
+      hardcode_minus_L_GCJ=yes
+
+      # Samuel A. Falvo II <kc5tja@dolphin.openprojects.net> reports
+      # that the semantics of dynamic libraries on AmigaOS, at least up
+      # to version 4, is to share data among multiple programs linked
+      # with the same dynamic library.  Since this doesn't match the
+      # behavior of shared libraries on other platforms, we can't use
+      # them.
+      ld_shlibs_GCJ=no
+      ;;
+
+    beos*)
+      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
+	allow_undefined_flag_GCJ=unsupported
+	# Joseph Beckenbach <jrb3@best.com> says some releases of gcc
+	# support --undefined.  This deserves some investigation.  FIXME
+	archive_cmds_GCJ='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+      else
+	ld_shlibs_GCJ=no
+      fi
+      ;;
+
+    cygwin* | mingw* | pw32*)
+      # _LT_AC_TAGVAR(hardcode_libdir_flag_spec, GCJ) is actually meaningless,
+      # as there is no search path for DLLs.
+      hardcode_libdir_flag_spec_GCJ='-L$libdir'
+      allow_undefined_flag_GCJ=unsupported
+      always_export_symbols_GCJ=no
+      enable_shared_with_static_runtimes_GCJ=yes
+      export_symbols_cmds_GCJ='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\''/^[BCDGRS] /s/.* \([^ ]*\)/\1 DATA/'\'' | $SED -e '\''/^[AITW] /s/.* //'\'' | sort | uniq > $export_symbols'
+
+      if $LD --help 2>&1 | grep 'auto-import' > /dev/null; then
+        archive_cmds_GCJ='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+	# If the export-symbols file already is a .def file (1st line
+	# is EXPORTS), use it as is; otherwise, prepend...
+	archive_expsym_cmds_GCJ='if test "x`$SED 1q $export_symbols`" = xEXPORTS; then
+	  cp $export_symbols $output_objdir/$soname.def;
+	else
+	  echo EXPORTS > $output_objdir/$soname.def;
+	  cat $export_symbols >> $output_objdir/$soname.def;
+	fi~
+	$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+      else
+	ld_shlibs_GCJ=no
+      fi
+      ;;
+
+    interix3*)
+      hardcode_direct_GCJ=no
+      hardcode_shlibpath_var_GCJ=no
+      hardcode_libdir_flag_spec_GCJ='${wl}-rpath,$libdir'
+      export_dynamic_flag_spec_GCJ='${wl}-E'
+      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.
+      # Instead, shared libraries are loaded at an image base (0x10000000 by
+      # default) and relocated if they conflict, which is a slow very memory
+      # consuming and fragmenting process.  To avoid this, we pick a random,
+      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
+      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.
+      archive_cmds_GCJ='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+      archive_expsym_cmds_GCJ='sed "s,^,_," $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+      ;;
+
+    linux* | k*bsd*-gnu)
+      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
+	tmp_addflag=
+	case $cc_basename,$host_cpu in
+	pgcc*)				# Portland Group C compiler
+	  whole_archive_flag_spec_GCJ='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $echo \"$new_convenience\"` ${wl}--no-whole-archive'
+	  tmp_addflag=' $pic_flag'
+	  ;;
+	pgf77* | pgf90* | pgf95*)	# Portland Group f77 and f90 compilers
+	  whole_archive_flag_spec_GCJ='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $echo \"$new_convenience\"` ${wl}--no-whole-archive'
+	  tmp_addflag=' $pic_flag -Mnomain' ;;
+	ecc*,ia64* | icc*,ia64*)		# Intel C compiler on ia64
+	  tmp_addflag=' -i_dynamic' ;;
+	efc*,ia64* | ifort*,ia64*)	# Intel Fortran compiler on ia64
+	  tmp_addflag=' -i_dynamic -nofor_main' ;;
+	ifc* | ifort*)			# Intel Fortran compiler
+	  tmp_addflag=' -nofor_main' ;;
+	esac
+	archive_cmds_GCJ='$CC -shared'"$tmp_addflag"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+
+	if test $supports_anon_versioning = yes; then
+	  archive_expsym_cmds_GCJ='$echo "{ global:" > $output_objdir/$libname.ver~
+  cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
+  $echo "local: *; };" >> $output_objdir/$libname.ver~
+	  $CC -shared'"$tmp_addflag"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'
+	fi
+	link_all_deplibs_GCJ=no
+      else
+	ld_shlibs_GCJ=no
+      fi
+      ;;
+
+    netbsd* | netbsdelf*-gnu)
+      if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+	archive_cmds_GCJ='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
+	wlarc=
+      else
+	archive_cmds_GCJ='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	archive_expsym_cmds_GCJ='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      fi
+      ;;
+
+    solaris*)
+      if $LD -v 2>&1 | grep 'BFD 2\.8' > /dev/null; then
+	ld_shlibs_GCJ=no
+	cat <<EOF 1>&2
+
+*** Warning: The releases 2.8.* of the GNU linker cannot reliably
+*** create shared libraries on Solaris systems.  Therefore, libtool
+*** is disabling shared libraries support.  We urge you to upgrade GNU
+*** binutils to release 2.9.1 or newer.  Another option is to modify
+*** your PATH or compiler configuration so that the native linker is
+*** used, and then restart.
+
+EOF
+      elif $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
+	archive_cmds_GCJ='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	archive_expsym_cmds_GCJ='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      else
+	ld_shlibs_GCJ=no
+      fi
+      ;;
+
+    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)
+      case `$LD -v 2>&1` in
+        *\ [01].* | *\ 2.[0-9].* | *\ 2.1[0-5].*)
+	ld_shlibs_GCJ=no
+	cat <<_LT_EOF 1>&2
+
+*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 can not
+*** reliably create shared libraries on SCO systems.  Therefore, libtool
+*** is disabling shared libraries support.  We urge you to upgrade GNU
+*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify
+*** your PATH or compiler configuration so that the native linker is
+*** used, and then restart.
+
+_LT_EOF
+	;;
+	*)
+	  if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
+	    hardcode_libdir_flag_spec_GCJ='`test -z "$SCOABSPATH" && echo ${wl}-rpath,$libdir`'
+	    archive_cmds_GCJ='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib'
+	    archive_expsym_cmds_GCJ='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname,\${SCOABSPATH:+${install_libdir}/}$soname,-retain-symbols-file,$export_symbols -o $lib'
+	  else
+	    ld_shlibs_GCJ=no
+	  fi
+	;;
+      esac
+      ;;
+
+    sunos4*)
+      archive_cmds_GCJ='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+      wlarc=
+      hardcode_direct_GCJ=yes
+      hardcode_shlibpath_var_GCJ=no
+      ;;
+
+    *)
+      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
+	archive_cmds_GCJ='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	archive_expsym_cmds_GCJ='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      else
+	ld_shlibs_GCJ=no
+      fi
+      ;;
+    esac
+
+    if test "$ld_shlibs_GCJ" = no; then
+      runpath_var=
+      hardcode_libdir_flag_spec_GCJ=
+      export_dynamic_flag_spec_GCJ=
+      whole_archive_flag_spec_GCJ=
+    fi
+  else
+    # PORTME fill in a description of your system's linker (not GNU ld)
+    case $host_os in
+    aix3*)
+      allow_undefined_flag_GCJ=unsupported
+      always_export_symbols_GCJ=yes
+      archive_expsym_cmds_GCJ='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'
+      # Note: this linker hardcodes the directories in LIBPATH if there
+      # are no directories specified by -L.
+      hardcode_minus_L_GCJ=yes
+      if test "$GCC" = yes && test -z "$lt_prog_compiler_static"; then
+	# Neither direct hardcoding nor static linking is supported with a
+	# broken collect2.
+	hardcode_direct_GCJ=unsupported
+      fi
+      ;;
+
+    aix4* | aix5*)
+      if test "$host_cpu" = ia64; then
+	# On IA64, the linker does run time linking by default, so we don't
+	# have to do anything special.
+	aix_use_runtimelinking=no
+	exp_sym_flag='-Bexport'
+	no_entry_flag=""
+      else
+	# If we're using GNU nm, then we don't want the "-C" option.
+	# -C means demangle to AIX nm, but means don't demangle with GNU nm
+	if $NM -V 2>&1 | grep 'GNU' > /dev/null; then
+	  export_symbols_cmds_GCJ='$NM -Bpg $libobjs $convenience | awk '\''{ if (((\$2 == "T") || (\$2 == "D") || (\$2 == "B")) && (substr(\$3,1,1) != ".")) { print \$3 } }'\'' | sort -u > $export_symbols'
+	else
+	  export_symbols_cmds_GCJ='$NM -BCpg $libobjs $convenience | awk '\''{ if (((\$2 == "T") || (\$2 == "D") || (\$2 == "B")) && (substr(\$3,1,1) != ".")) { print \$3 } }'\'' | sort -u > $export_symbols'
+	fi
+	aix_use_runtimelinking=no
+
+	# Test if we are trying to use run time linking or normal
+	# AIX style linking. If -brtl is somewhere in LDFLAGS, we
+	# need to do runtime linking.
+	case $host_os in aix4.[23]|aix4.[23].*|aix5*)
+	  for ld_flag in $LDFLAGS; do
+  	  if (test $ld_flag = "-brtl" || test $ld_flag = "-Wl,-brtl"); then
+  	    aix_use_runtimelinking=yes
+  	    break
+  	  fi
+	  done
+	  ;;
+	esac
+
+	exp_sym_flag='-bexport'
+	no_entry_flag='-bnoentry'
+      fi
+
+      # When large executables or shared objects are built, AIX ld can
+      # have problems creating the table of contents.  If linking a library
+      # or program results in "error TOC overflow" add -mminimal-toc to
+      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not
+      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.
+
+      archive_cmds_GCJ=''
+      hardcode_direct_GCJ=yes
+      hardcode_libdir_separator_GCJ=':'
+      link_all_deplibs_GCJ=yes
+
+      if test "$GCC" = yes; then
+	case $host_os in aix4.[012]|aix4.[012].*)
+	# We only want to do this on AIX 4.2 and lower, the check
+	# below for broken collect2 doesn't work under 4.3+
+	  collect2name=`${CC} -print-prog-name=collect2`
+	  if test -f "$collect2name" && \
+  	   strings "$collect2name" | grep resolve_lib_name >/dev/null
+	  then
+  	  # We have reworked collect2
+  	  hardcode_direct_GCJ=yes
+	  else
+  	  # We have old collect2
+  	  hardcode_direct_GCJ=unsupported
+  	  # It fails to find uninstalled libraries when the uninstalled
+  	  # path is not listed in the libpath.  Setting hardcode_minus_L
+  	  # to unsupported forces relinking
+  	  hardcode_minus_L_GCJ=yes
+  	  hardcode_libdir_flag_spec_GCJ='-L$libdir'
+  	  hardcode_libdir_separator_GCJ=
+	  fi
+	  ;;
+	esac
+	shared_flag='-shared'
+	if test "$aix_use_runtimelinking" = yes; then
+	  shared_flag="$shared_flag "'${wl}-G'
+	fi
+      else
+	# not using gcc
+	if test "$host_cpu" = ia64; then
+  	# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release
+  	# chokes on -Wl,-G. The following line is correct:
+	  shared_flag='-G'
+	else
+	  if test "$aix_use_runtimelinking" = yes; then
+	    shared_flag='${wl}-G'
+	  else
+	    shared_flag='${wl}-bM:SRE'
+	  fi
+	fi
+      fi
+
+      # It seems that -bexpall does not export symbols beginning with
+      # underscore (_), so it is better to generate a list of symbols to export.
+      always_export_symbols_GCJ=yes
+      if test "$aix_use_runtimelinking" = yes; then
+	# Warning - without using the other runtime loading flags (-brtl),
+	# -berok will link without error, but may produce a broken library.
+	allow_undefined_flag_GCJ='-berok'
+       # Determine the default libpath from the value encoded in an empty executable.
+       cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+
+aix_libpath=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\(.*\)$/\1/; p; }
+}'`
+# Check for a 64-bit object if we didn't find anything.
+if test -z "$aix_libpath"; then aix_libpath=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\(.*\)$/\1/; p; }
+}'`; fi
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
+
+       hardcode_libdir_flag_spec_GCJ='${wl}-blibpath:$libdir:'"$aix_libpath"
+	archive_expsym_cmds_GCJ="\$CC"' -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags `if test "x${allow_undefined_flag}" != "x"; then echo "${wl}${allow_undefined_flag}"; else :; fi` '"\${wl}$exp_sym_flag:\$export_symbols $shared_flag"
+       else
+	if test "$host_cpu" = ia64; then
+	  hardcode_libdir_flag_spec_GCJ='${wl}-R $libdir:/usr/lib:/lib'
+	  allow_undefined_flag_GCJ="-z nodefs"
+	  archive_expsym_cmds_GCJ="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags ${wl}${allow_undefined_flag} '"\${wl}$exp_sym_flag:\$export_symbols"
+	else
+	 # Determine the default libpath from the value encoded in an empty executable.
+	 cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+
+aix_libpath=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\(.*\)$/\1/; p; }
+}'`
+# Check for a 64-bit object if we didn't find anything.
+if test -z "$aix_libpath"; then aix_libpath=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\(.*\)$/\1/; p; }
+}'`; fi
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
+
+	 hardcode_libdir_flag_spec_GCJ='${wl}-blibpath:$libdir:'"$aix_libpath"
+	  # Warning - without using the other run time loading flags,
+	  # -berok will link without error, but may produce a broken library.
+	  no_undefined_flag_GCJ=' ${wl}-bernotok'
+	  allow_undefined_flag_GCJ=' ${wl}-berok'
+	  # Exported symbols can be pulled into shared objects from archives
+	  whole_archive_flag_spec_GCJ='$convenience'
+	  archive_cmds_need_lc_GCJ=yes
+	  # This is similar to how AIX traditionally builds its shared libraries.
+	  archive_expsym_cmds_GCJ="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'
+	fi
+      fi
+      ;;
+
+    amigaos*)
+      archive_cmds_GCJ='$rm $output_objdir/a2ixlibrary.data~$echo "#define NAME $libname" > $output_objdir/a2ixlibrary.data~$echo "#define LIBRARY_ID 1" >> $output_objdir/a2ixlibrary.data~$echo "#define VERSION $major" >> $output_objdir/a2ixlibrary.data~$echo "#define REVISION $revision" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'
+      hardcode_libdir_flag_spec_GCJ='-L$libdir'
+      hardcode_minus_L_GCJ=yes
+      # see comment about different semantics on the GNU ld section
+      ld_shlibs_GCJ=no
+      ;;
+
+    bsdi[45]*)
+      export_dynamic_flag_spec_GCJ=-rdynamic
+      ;;
+
+    cygwin* | mingw* | pw32*)
+      # When not using gcc, we currently assume that we are using
+      # Microsoft Visual C++.
+      # hardcode_libdir_flag_spec is actually meaningless, as there is
+      # no search path for DLLs.
+      hardcode_libdir_flag_spec_GCJ=' '
+      allow_undefined_flag_GCJ=unsupported
+      # Tell ltmain to make .lib files, not .a files.
+      libext=lib
+      # Tell ltmain to make .dll files, not .so files.
+      shrext_cmds=".dll"
+      # FIXME: Setting linknames here is a bad hack.
+      archive_cmds_GCJ='$CC -o $lib $libobjs $compiler_flags `echo "$deplibs" | $SED -e '\''s/ -lc$//'\''` -link -dll~linknames='
+      # The linker will automatically build a .lib file if we build a DLL.
+      old_archive_From_new_cmds_GCJ='true'
+      # FIXME: Should let the user specify the lib program.
+      old_archive_cmds_GCJ='lib /OUT:$oldlib$oldobjs$old_deplibs'
+      fix_srcfile_path_GCJ='`cygpath -w "$srcfile"`'
+      enable_shared_with_static_runtimes_GCJ=yes
+      ;;
+
+    darwin* | rhapsody*)
+      case $host_os in
+        rhapsody* | darwin1.[012])
+         allow_undefined_flag_GCJ='${wl}-undefined ${wl}suppress'
+         ;;
+       *) # Darwin 1.3 on
+         if test -z ${MACOSX_DEPLOYMENT_TARGET} ; then
+           allow_undefined_flag_GCJ='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'
+         else
+           case ${MACOSX_DEPLOYMENT_TARGET} in
+             10.[012])
+               allow_undefined_flag_GCJ='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'
+               ;;
+             10.*)
+               allow_undefined_flag_GCJ='${wl}-undefined ${wl}dynamic_lookup'
+               ;;
+           esac
+         fi
+         ;;
+      esac
+      archive_cmds_need_lc_GCJ=no
+      hardcode_direct_GCJ=no
+      hardcode_automatic_GCJ=yes
+      hardcode_shlibpath_var_GCJ=unsupported
+      whole_archive_flag_spec_GCJ=''
+      link_all_deplibs_GCJ=yes
+    if test "$GCC" = yes ; then
+    	output_verbose_link_cmd='echo'
+        archive_cmds_GCJ='$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring'
+      module_cmds_GCJ='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'
+      # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin lds
+      archive_expsym_cmds_GCJ='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+      module_expsym_cmds_GCJ='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+    else
+      case $cc_basename in
+        xlc*)
+         output_verbose_link_cmd='echo'
+         archive_cmds_GCJ='$CC -qmkshrobj $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}`echo $rpath/$soname` $verstring'
+         module_cmds_GCJ='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'
+          # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin lds
+         archive_expsym_cmds_GCJ='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -qmkshrobj $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}$rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+          module_expsym_cmds_GCJ='sed -e "s,#.*,," -e "s,^[    ]*,," -e "s,^\(..*\),_&," < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'
+          ;;
+       *)
+         ld_shlibs_GCJ=no
+          ;;
+      esac
+    fi
+      ;;
+
+    dgux*)
+      archive_cmds_GCJ='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_libdir_flag_spec_GCJ='-L$libdir'
+      hardcode_shlibpath_var_GCJ=no
+      ;;
+
+    freebsd1*)
+      ld_shlibs_GCJ=no
+      ;;
+
+    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor
+    # support.  Future versions do this automatically, but an explicit c++rt0.o
+    # does not break anything, and helps significantly (at the cost of a little
+    # extra space).
+    freebsd2.2*)
+      archive_cmds_GCJ='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'
+      hardcode_libdir_flag_spec_GCJ='-R$libdir'
+      hardcode_direct_GCJ=yes
+      hardcode_shlibpath_var_GCJ=no
+      ;;
+
+    # Unfortunately, older versions of FreeBSD 2 do not have this feature.
+    freebsd2*)
+      archive_cmds_GCJ='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_direct_GCJ=yes
+      hardcode_minus_L_GCJ=yes
+      hardcode_shlibpath_var_GCJ=no
+      ;;
+
+    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.
+    freebsd* | dragonfly*)
+      archive_cmds_GCJ='$CC -shared -o $lib $libobjs $deplibs $compiler_flags'
+      hardcode_libdir_flag_spec_GCJ='-R$libdir'
+      hardcode_direct_GCJ=yes
+      hardcode_shlibpath_var_GCJ=no
+      ;;
+
+    hpux9*)
+      if test "$GCC" = yes; then
+	archive_cmds_GCJ='$rm $output_objdir/$soname~$CC -shared -fPIC ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+      else
+	archive_cmds_GCJ='$rm $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+      fi
+      hardcode_libdir_flag_spec_GCJ='${wl}+b ${wl}$libdir'
+      hardcode_libdir_separator_GCJ=:
+      hardcode_direct_GCJ=yes
+
+      # hardcode_minus_L: Not really in the search PATH,
+      # but as the default location of the library.
+      hardcode_minus_L_GCJ=yes
+      export_dynamic_flag_spec_GCJ='${wl}-E'
+      ;;
+
+    hpux10*)
+      if test "$GCC" = yes -a "$with_gnu_ld" = no; then
+	archive_cmds_GCJ='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds_GCJ='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'
+      fi
+      if test "$with_gnu_ld" = no; then
+	hardcode_libdir_flag_spec_GCJ='${wl}+b ${wl}$libdir'
+	hardcode_libdir_separator_GCJ=:
+
+	hardcode_direct_GCJ=yes
+	export_dynamic_flag_spec_GCJ='${wl}-E'
+
+	# hardcode_minus_L: Not really in the search PATH,
+	# but as the default location of the library.
+	hardcode_minus_L_GCJ=yes
+      fi
+      ;;
+
+    hpux11*)
+      if test "$GCC" = yes -a "$with_gnu_ld" = no; then
+	case $host_cpu in
+	hppa*64*)
+	  archive_cmds_GCJ='$CC -shared ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	ia64*)
+	  archive_cmds_GCJ='$CC -shared ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	*)
+	  archive_cmds_GCJ='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	esac
+      else
+	case $host_cpu in
+	hppa*64*)
+	  archive_cmds_GCJ='$CC -b ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	ia64*)
+	  archive_cmds_GCJ='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	*)
+	  archive_cmds_GCJ='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	esac
+      fi
+      if test "$with_gnu_ld" = no; then
+	hardcode_libdir_flag_spec_GCJ='${wl}+b ${wl}$libdir'
+	hardcode_libdir_separator_GCJ=:
+
+	case $host_cpu in
+	hppa*64*|ia64*)
+	  hardcode_libdir_flag_spec_ld_GCJ='+b $libdir'
+	  hardcode_direct_GCJ=no
+	  hardcode_shlibpath_var_GCJ=no
+	  ;;
+	*)
+	  hardcode_direct_GCJ=yes
+	  export_dynamic_flag_spec_GCJ='${wl}-E'
+
+	  # hardcode_minus_L: Not really in the search PATH,
+	  # but as the default location of the library.
+	  hardcode_minus_L_GCJ=yes
+	  ;;
+	esac
+      fi
+      ;;
+
+    irix5* | irix6* | nonstopux*)
+      if test "$GCC" = yes; then
+	archive_cmds_GCJ='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+      else
+	archive_cmds_GCJ='$LD -shared $libobjs $deplibs $linker_flags -soname $soname `test -n "$verstring" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'
+	hardcode_libdir_flag_spec_ld_GCJ='-rpath $libdir'
+      fi
+      hardcode_libdir_flag_spec_GCJ='${wl}-rpath ${wl}$libdir'
+      hardcode_libdir_separator_GCJ=:
+      link_all_deplibs_GCJ=yes
+      ;;
+
+    netbsd* | netbsdelf*-gnu)
+      if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+	archive_cmds_GCJ='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
+      else
+	archive_cmds_GCJ='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF
+      fi
+      hardcode_libdir_flag_spec_GCJ='-R$libdir'
+      hardcode_direct_GCJ=yes
+      hardcode_shlibpath_var_GCJ=no
+      ;;
+
+    newsos6)
+      archive_cmds_GCJ='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_direct_GCJ=yes
+      hardcode_libdir_flag_spec_GCJ='${wl}-rpath ${wl}$libdir'
+      hardcode_libdir_separator_GCJ=:
+      hardcode_shlibpath_var_GCJ=no
+      ;;
+
+    openbsd*)
+      hardcode_direct_GCJ=yes
+      hardcode_shlibpath_var_GCJ=no
+      if test -z "`echo __ELF__ | $CC -E - | grep __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+	archive_cmds_GCJ='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds_GCJ='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-retain-symbols-file,$export_symbols'
+	hardcode_libdir_flag_spec_GCJ='${wl}-rpath,$libdir'
+	export_dynamic_flag_spec_GCJ='${wl}-E'
+      else
+       case $host_os in
+	 openbsd[01].* | openbsd2.[0-7] | openbsd2.[0-7].*)
+	   archive_cmds_GCJ='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+	   hardcode_libdir_flag_spec_GCJ='-R$libdir'
+	   ;;
+	 *)
+	   archive_cmds_GCJ='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
+	   hardcode_libdir_flag_spec_GCJ='${wl}-rpath,$libdir'
+	   ;;
+       esac
+      fi
+      ;;
+
+    os2*)
+      hardcode_libdir_flag_spec_GCJ='-L$libdir'
+      hardcode_minus_L_GCJ=yes
+      allow_undefined_flag_GCJ=unsupported
+      archive_cmds_GCJ='$echo "LIBRARY $libname INITINSTANCE" > $output_objdir/$libname.def~$echo "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~$echo DATA >> $output_objdir/$libname.def~$echo " SINGLE NONSHARED" >> $output_objdir/$libname.def~$echo EXPORTS >> $output_objdir/$libname.def~emxexp $libobjs >> $output_objdir/$libname.def~$CC -Zdll -Zcrtdll -o $lib $libobjs $deplibs $compiler_flags $output_objdir/$libname.def'
+      old_archive_From_new_cmds_GCJ='emximp -o $output_objdir/$libname.a $output_objdir/$libname.def'
+      ;;
+
+    osf3*)
+      if test "$GCC" = yes; then
+	allow_undefined_flag_GCJ=' ${wl}-expect_unresolved ${wl}\*'
+	archive_cmds_GCJ='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+      else
+	allow_undefined_flag_GCJ=' -expect_unresolved \*'
+	archive_cmds_GCJ='$LD -shared${allow_undefined_flag} $libobjs $deplibs $linker_flags -soname $soname `test -n "$verstring" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'
+      fi
+      hardcode_libdir_flag_spec_GCJ='${wl}-rpath ${wl}$libdir'
+      hardcode_libdir_separator_GCJ=:
+      ;;
+
+    osf4* | osf5*)	# as osf3* with the addition of -msym flag
+      if test "$GCC" = yes; then
+	allow_undefined_flag_GCJ=' ${wl}-expect_unresolved ${wl}\*'
+	archive_cmds_GCJ='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n "$verstring" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+	hardcode_libdir_flag_spec_GCJ='${wl}-rpath ${wl}$libdir'
+      else
+	allow_undefined_flag_GCJ=' -expect_unresolved \*'
+	archive_cmds_GCJ='$LD -shared${allow_undefined_flag} $libobjs $deplibs $linker_flags -msym -soname $soname `test -n "$verstring" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'
+	archive_expsym_cmds_GCJ='for i in `cat $export_symbols`; do printf "%s %s\\n" -exported_symbol "\$i" >> $lib.exp; done; echo "-hidden">> $lib.exp~
+	$LD -shared${allow_undefined_flag} -input $lib.exp $linker_flags $libobjs $deplibs -soname $soname `test -n "$verstring" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib~$rm $lib.exp'
+
+	# Both c and cxx compiler support -rpath directly
+	hardcode_libdir_flag_spec_GCJ='-rpath $libdir'
+      fi
+      hardcode_libdir_separator_GCJ=:
+      ;;
+
+    solaris*)
+      no_undefined_flag_GCJ=' -z text'
+      if test "$GCC" = yes; then
+	wlarc='${wl}'
+	archive_cmds_GCJ='$CC -shared ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds_GCJ='$echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~$echo "local: *; };" >> $lib.exp~
+	  $CC -shared ${wl}-M ${wl}$lib.exp ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags~$rm $lib.exp'
+      else
+	wlarc=''
+	archive_cmds_GCJ='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	archive_expsym_cmds_GCJ='$echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~$echo "local: *; };" >> $lib.exp~
+  	$LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$rm $lib.exp'
+      fi
+      hardcode_libdir_flag_spec_GCJ='-R$libdir'
+      hardcode_shlibpath_var_GCJ=no
+      case $host_os in
+      solaris2.[0-5] | solaris2.[0-5].*) ;;
+      *)
+ 	# The compiler driver will combine linker options so we
+ 	# cannot just pass the convience library names through
+ 	# without $wl, iff we do not link with $LD.
+ 	# Luckily, gcc supports the same syntax we need for Sun Studio.
+ 	# Supported since Solaris 2.6 (maybe 2.5.1?)
+ 	case $wlarc in
+ 	'')
+ 	  whole_archive_flag_spec_GCJ='-z allextract$convenience -z defaultextract' ;;
+ 	*)
+ 	  whole_archive_flag_spec_GCJ='${wl}-z ${wl}allextract`for conv in $convenience\"\"; do test -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $echo \"$new_convenience\"` ${wl}-z ${wl}defaultextract' ;;
+ 	esac ;;
+      esac
+      link_all_deplibs_GCJ=yes
+      ;;
+
+    sunos4*)
+      if test "x$host_vendor" = xsequent; then
+	# Use $CC to link under sequent, because it throws in some extra .o
+	# files that make .init and .fini sections work.
+	archive_cmds_GCJ='$CC -G ${wl}-h $soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds_GCJ='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'
+      fi
+      hardcode_libdir_flag_spec_GCJ='-L$libdir'
+      hardcode_direct_GCJ=yes
+      hardcode_minus_L_GCJ=yes
+      hardcode_shlibpath_var_GCJ=no
+      ;;
+
+    sysv4)
+      case $host_vendor in
+	sni)
+	  archive_cmds_GCJ='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	  hardcode_direct_GCJ=yes # is this really true???
+	;;
+	siemens)
+	  ## LD is ld it makes a PLAMLIB
+	  ## CC just makes a GrossModule.
+	  archive_cmds_GCJ='$LD -G -o $lib $libobjs $deplibs $linker_flags'
+	  reload_cmds_GCJ='$CC -r -o $output$reload_objs'
+	  hardcode_direct_GCJ=no
+        ;;
+	motorola)
+	  archive_cmds_GCJ='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	  hardcode_direct_GCJ=no #Motorola manual says yes, but my tests say they lie
+	;;
+      esac
+      runpath_var='LD_RUN_PATH'
+      hardcode_shlibpath_var_GCJ=no
+      ;;
+
+    sysv4.3*)
+      archive_cmds_GCJ='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_shlibpath_var_GCJ=no
+      export_dynamic_flag_spec_GCJ='-Bexport'
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec; then
+	archive_cmds_GCJ='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	hardcode_shlibpath_var_GCJ=no
+	runpath_var=LD_RUN_PATH
+	hardcode_runpath_var=yes
+	ld_shlibs_GCJ=yes
+      fi
+      ;;
+
+    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[01].[10]* | unixware7*)
+      no_undefined_flag_GCJ='${wl}-z,text'
+      archive_cmds_need_lc_GCJ=no
+      hardcode_shlibpath_var_GCJ=no
+      runpath_var='LD_RUN_PATH'
+
+      if test "$GCC" = yes; then
+	archive_cmds_GCJ='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds_GCJ='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds_GCJ='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds_GCJ='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      fi
+      ;;
+
+    sysv5* | sco3.2v5* | sco5v6*)
+      # Note: We can NOT use -z defs as we might desire, because we do not
+      # link with -lc, and that would cause any symbols used from libc to
+      # always be unresolved, which means just about no library would
+      # ever link correctly.  If we're not using GNU ld we use -z text
+      # though, which does catch some bad symbols but isn't as heavy-handed
+      # as -z defs.
+      no_undefined_flag_GCJ='${wl}-z,text'
+      allow_undefined_flag_GCJ='${wl}-z,nodefs'
+      archive_cmds_need_lc_GCJ=no
+      hardcode_shlibpath_var_GCJ=no
+      hardcode_libdir_flag_spec_GCJ='`test -z "$SCOABSPATH" && echo ${wl}-R,$libdir`'
+      hardcode_libdir_separator_GCJ=':'
+      link_all_deplibs_GCJ=yes
+      export_dynamic_flag_spec_GCJ='${wl}-Bexport'
+      runpath_var='LD_RUN_PATH'
+
+      if test "$GCC" = yes; then
+	archive_cmds_GCJ='$CC -shared ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds_GCJ='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds_GCJ='$CC -G ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds_GCJ='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'
+      fi
+      ;;
+
+    uts4*)
+      archive_cmds_GCJ='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_libdir_flag_spec_GCJ='-L$libdir'
+      hardcode_shlibpath_var_GCJ=no
+      ;;
+
+    *)
+      ld_shlibs_GCJ=no
+      ;;
+    esac
+  fi
+
+{ echo "$as_me:$LINENO: result: $ld_shlibs_GCJ" >&5
+echo "${ECHO_T}$ld_shlibs_GCJ" >&6; }
+test "$ld_shlibs_GCJ" = no && can_build_shared=no
+
+#
+# Do we need to explicitly link libc?
+#
+case "x$archive_cmds_need_lc_GCJ" in
+x|xyes)
+  # Assume -lc should be added
+  archive_cmds_need_lc_GCJ=yes
+
+  if test "$enable_shared" = yes && test "$GCC" = yes; then
+    case $archive_cmds_GCJ in
+    *'~'*)
+      # FIXME: we may have to deal with multi-command sequences.
+      ;;
+    '$CC '*)
+      # Test whether the compiler implicitly links with -lc since on some
+      # systems, -lgcc has to come before -lc. If gcc already passes -lc
+      # to ld, don't add -lc before -lgcc.
+      { echo "$as_me:$LINENO: checking whether -lc should be explicitly linked in" >&5
+echo $ECHO_N "checking whether -lc should be explicitly linked in... $ECHO_C" >&6; }
+      $rm conftest*
+      printf "$lt_simple_compile_test_code" > conftest.$ac_ext
+
+      if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } 2>conftest.err; then
+        soname=conftest
+        lib=conftest
+        libobjs=conftest.$ac_objext
+        deplibs=
+        wl=$lt_prog_compiler_wl_GCJ
+	pic_flag=$lt_prog_compiler_pic_GCJ
+        compiler_flags=-v
+        linker_flags=-v
+        verstring=
+        output_objdir=.
+        libname=conftest
+        lt_save_allow_undefined_flag=$allow_undefined_flag_GCJ
+        allow_undefined_flag_GCJ=
+        if { (eval echo "$as_me:$LINENO: \"$archive_cmds_GCJ 2\>\&1 \| grep \" -lc \" \>/dev/null 2\>\&1\"") >&5
+  (eval $archive_cmds_GCJ 2\>\&1 \| grep \" -lc \" \>/dev/null 2\>\&1) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }
+        then
+	  archive_cmds_need_lc_GCJ=no
+        else
+	  archive_cmds_need_lc_GCJ=yes
+        fi
+        allow_undefined_flag_GCJ=$lt_save_allow_undefined_flag
+      else
+        cat conftest.err 1>&5
+      fi
+      $rm conftest*
+      { echo "$as_me:$LINENO: result: $archive_cmds_need_lc_GCJ" >&5
+echo "${ECHO_T}$archive_cmds_need_lc_GCJ" >&6; }
+      ;;
+    esac
+  fi
+  ;;
+esac
+
+{ echo "$as_me:$LINENO: checking dynamic linker characteristics" >&5
+echo $ECHO_N "checking dynamic linker characteristics... $ECHO_C" >&6; }
+library_names_spec=
+libname_spec='lib$name'
+soname_spec=
+shrext_cmds=".so"
+postinstall_cmds=
+postuninstall_cmds=
+finish_cmds=
+finish_eval=
+shlibpath_var=
+shlibpath_overrides_runpath=unknown
+version_type=none
+dynamic_linker="$host_os ld.so"
+sys_lib_dlsearch_path_spec="/lib /usr/lib"
+if test "$GCC" = yes; then
+  sys_lib_search_path_spec=`$CC -print-search-dirs | grep "^libraries:" | $SED -e "s/^libraries://" -e "s,=/,/,g"`
+  if echo "$sys_lib_search_path_spec" | grep ';' >/dev/null ; then
+    # if the path contains ";" then we assume it to be the separator
+    # otherwise default to the standard path separator (i.e. ":") - it is
+    # assumed that no part of a normal pathname contains ";" but that should
+    # okay in the real world where ";" in dirpaths is itself problematic.
+    sys_lib_search_path_spec=`echo "$sys_lib_search_path_spec" | $SED -e 's/;/ /g'`
+  else
+    sys_lib_search_path_spec=`echo "$sys_lib_search_path_spec" | $SED  -e "s/$PATH_SEPARATOR/ /g"`
+  fi
+else
+  sys_lib_search_path_spec="/lib /usr/lib /usr/local/lib"
+fi
+need_lib_prefix=unknown
+hardcode_into_libs=no
+
+# when you set need_version to no, make sure it does not cause -set_version
+# flags to be left without arguments
+need_version=unknown
+
+case $host_os in
+aix3*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix $libname.a'
+  shlibpath_var=LIBPATH
+
+  # AIX 3 has no versioning support, so we append a major version to the name.
+  soname_spec='${libname}${release}${shared_ext}$major'
+  ;;
+
+aix4* | aix5*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  hardcode_into_libs=yes
+  if test "$host_cpu" = ia64; then
+    # AIX 5 supports IA64
+    library_names_spec='${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext}$versuffix $libname${shared_ext}'
+    shlibpath_var=LD_LIBRARY_PATH
+  else
+    # With GCC up to 2.95.x, collect2 would create an import file
+    # for dependence libraries.  The import file would start with
+    # the line `#! .'.  This would cause the generated library to
+    # depend on `.', always an invalid library.  This was fixed in
+    # development snapshots of GCC prior to 3.0.
+    case $host_os in
+      aix4 | aix4.[01] | aix4.[01].*)
+      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'
+	   echo ' yes '
+	   echo '#endif'; } | ${CC} -E - | grep yes > /dev/null; then
+	:
+      else
+	can_build_shared=no
+      fi
+      ;;
+    esac
+    # AIX (on Power*) has no versioning support, so currently we can not hardcode correct
+    # soname into executable. Probably we can add versioning support to
+    # collect2, so additional links can be useful in future.
+    if test "$aix_use_runtimelinking" = yes; then
+      # If using run time linking (on AIX 4.2 or later) use lib<name>.so
+      # instead of lib<name>.a to let people know that these are not
+      # typical AIX shared libraries.
+      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    else
+      # We preserve .a as extension for shared libraries through AIX4.2
+      # and later when we are not doing run time linking.
+      library_names_spec='${libname}${release}.a $libname.a'
+      soname_spec='${libname}${release}${shared_ext}$major'
+    fi
+    shlibpath_var=LIBPATH
+  fi
+  ;;
+
+amigaos*)
+  library_names_spec='$libname.ixlibrary $libname.a'
+  # Create ${libname}_ixlibrary.a entries in /sys/libs.
+  finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`$echo "X$lib" | $Xsed -e '\''s%^.*/\([^/]*\)\.ixlibrary$%\1%'\''`; test $rm /sys/libs/${libname}_ixlibrary.a; $show "cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'
+  ;;
+
+beos*)
+  library_names_spec='${libname}${shared_ext}'
+  dynamic_linker="$host_os ld.so"
+  shlibpath_var=LIBRARY_PATH
+  ;;
+
+bsdi[45]*)
+  version_type=linux
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  sys_lib_search_path_spec="/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib"
+  sys_lib_dlsearch_path_spec="/shlib /usr/lib /usr/local/lib"
+  # the default ld.so.conf also contains /usr/contrib/lib and
+  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow
+  # libtool to hard-code these into programs
+  ;;
+
+cygwin* | mingw* | pw32*)
+  version_type=windows
+  shrext_cmds=".dll"
+  need_version=no
+  need_lib_prefix=no
+
+  case $GCC,$host_os in
+  yes,cygwin* | yes,mingw* | yes,pw32*)
+    library_names_spec='$libname.dll.a'
+    # DLL is installed to $(libdir)/../bin by postinstall_cmds
+    postinstall_cmds='base_file=`basename \${file}`~
+      dlpath=`$SHELL 2>&1 -c '\''. $dir/'\''\${base_file}'\''i;echo \$dlname'\''`~
+      dldir=$destdir/`dirname \$dlpath`~
+      test -d \$dldir || mkdir -p \$dldir~
+      $install_prog $dir/$dlname \$dldir/$dlname~
+      chmod a+x \$dldir/$dlname'
+    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\''. $file; echo \$dlname'\''`~
+      dlpath=$dir/\$dldll~
+       $rm \$dlpath'
+    shlibpath_overrides_runpath=yes
+
+    case $host_os in
+    cygwin*)
+      # Cygwin DLLs use 'cyg' prefix rather than 'lib'
+      soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      sys_lib_search_path_spec="/usr/lib /lib/w32api /lib /usr/local/lib"
+      ;;
+    mingw*)
+      # MinGW DLLs use traditional 'lib' prefix
+      soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      sys_lib_search_path_spec=`$CC -print-search-dirs | grep "^libraries:" | $SED -e "s/^libraries://" -e "s,=/,/,g"`
+      if echo "$sys_lib_search_path_spec" | grep ';[c-zC-Z]:/' >/dev/null; then
+        # It is most probably a Windows format PATH printed by
+        # mingw gcc, but we are running on Cygwin. Gcc prints its search
+        # path with ; separators, and with drive letters. We can handle the
+        # drive letters (cygwin fileutils understands them), so leave them,
+        # especially as we might pass files found there to a mingw objdump,
+        # which wouldn't understand a cygwinified path. Ahh.
+        sys_lib_search_path_spec=`echo "$sys_lib_search_path_spec" | $SED -e 's/;/ /g'`
+      else
+        sys_lib_search_path_spec=`echo "$sys_lib_search_path_spec" | $SED  -e "s/$PATH_SEPARATOR/ /g"`
+      fi
+      ;;
+    pw32*)
+      # pw32 DLLs use 'pw' prefix rather than 'lib'
+      library_names_spec='`echo ${libname} | sed -e 's/^lib/pw/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      ;;
+    esac
+    ;;
+
+  *)
+    library_names_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext} $libname.lib'
+    ;;
+  esac
+  dynamic_linker='Win32 ld.exe'
+  # FIXME: first we should search . and the directory the executable is in
+  shlibpath_var=PATH
+  ;;
+
+darwin* | rhapsody*)
+  dynamic_linker="$host_os dyld"
+  version_type=darwin
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${versuffix}$shared_ext ${libname}${release}${major}$shared_ext ${libname}$shared_ext'
+  soname_spec='${libname}${release}${major}$shared_ext'
+  shlibpath_overrides_runpath=yes
+  shlibpath_var=DYLD_LIBRARY_PATH
+  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'
+  # Apple's gcc prints 'gcc -print-search-dirs' doesn't operate the same.
+  if test "$GCC" = yes; then
+    sys_lib_search_path_spec=`$CC -print-search-dirs | tr "\n" "$PATH_SEPARATOR" | sed -e 's/libraries:/@libraries:/' | tr "@" "\n" | grep "^libraries:" | sed -e "s/^libraries://" -e "s,=/,/,g" -e "s,$PATH_SEPARATOR, ,g" -e "s,.*,& /lib /usr/lib /usr/local/lib,g"`
+  else
+    sys_lib_search_path_spec='/lib /usr/lib /usr/local/lib'
+  fi
+  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'
+  ;;
+
+dgux*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname$shared_ext'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  ;;
+
+freebsd1*)
+  dynamic_linker=no
+  ;;
+
+freebsd* | dragonfly*)
+  # DragonFly does not have aout.  When/if they implement a new
+  # versioning mechanism, adjust this.
+  if test -x /usr/bin/objformat; then
+    objformat=`/usr/bin/objformat`
+  else
+    case $host_os in
+    freebsd[123]*) objformat=aout ;;
+    *) objformat=elf ;;
+    esac
+  fi
+  version_type=freebsd-$objformat
+  case $version_type in
+    freebsd-elf*)
+      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'
+      need_version=no
+      need_lib_prefix=no
+      ;;
+    freebsd-*)
+      library_names_spec='${libname}${release}${shared_ext}$versuffix $libname${shared_ext}$versuffix'
+      need_version=yes
+      ;;
+  esac
+  shlibpath_var=LD_LIBRARY_PATH
+  case $host_os in
+  freebsd2*)
+    shlibpath_overrides_runpath=yes
+    ;;
+  freebsd3.[01]* | freebsdelf3.[01]*)
+    shlibpath_overrides_runpath=yes
+    hardcode_into_libs=yes
+    ;;
+  freebsd3.[2-9]* | freebsdelf3.[2-9]* | \
+  freebsd4.[0-5] | freebsdelf4.[0-5] | freebsd4.1.1 | freebsdelf4.1.1)
+    shlibpath_overrides_runpath=no
+    hardcode_into_libs=yes
+    ;;
+  freebsd*) # from 4.6 on
+    shlibpath_overrides_runpath=yes
+    hardcode_into_libs=yes
+    ;;
+  esac
+  ;;
+
+gnu*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  hardcode_into_libs=yes
+  ;;
+
+hpux9* | hpux10* | hpux11*)
+  # Give a soname corresponding to the major version so that dld.sl refuses to
+  # link against other versions.
+  version_type=sunos
+  need_lib_prefix=no
+  need_version=no
+  case $host_cpu in
+  ia64*)
+    shrext_cmds='.so'
+    hardcode_into_libs=yes
+    dynamic_linker="$host_os dld.so"
+    shlibpath_var=LD_LIBRARY_PATH
+    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    if test "X$HPUX_IA64_MODE" = X32; then
+      sys_lib_search_path_spec="/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib"
+    else
+      sys_lib_search_path_spec="/usr/lib/hpux64 /usr/local/lib/hpux64"
+    fi
+    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
+    ;;
+   hppa*64*)
+     shrext_cmds='.sl'
+     hardcode_into_libs=yes
+     dynamic_linker="$host_os dld.sl"
+     shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH
+     shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
+     library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+     soname_spec='${libname}${release}${shared_ext}$major'
+     sys_lib_search_path_spec="/usr/lib/pa20_64 /usr/ccs/lib/pa20_64"
+     sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
+     ;;
+   *)
+    shrext_cmds='.sl'
+    dynamic_linker="$host_os dld.sl"
+    shlibpath_var=SHLIB_PATH
+    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    ;;
+  esac
+  # HP-UX runs *really* slowly unless shared libraries are mode 555.
+  postinstall_cmds='chmod 555 $lib'
+  ;;
+
+interix3*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  ;;
+
+irix5* | irix6* | nonstopux*)
+  case $host_os in
+    nonstopux*) version_type=nonstopux ;;
+    *)
+	if test "$lt_cv_prog_gnu_ld" = yes; then
+		version_type=linux
+	else
+		version_type=irix
+	fi ;;
+  esac
+  need_lib_prefix=no
+  need_version=no
+  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext} $libname${shared_ext}'
+  case $host_os in
+  irix5* | nonstopux*)
+    libsuff= shlibsuff=
+    ;;
+  *)
+    case $LD in # libtool.m4 will add one of these switches to LD
+    *-32|*"-32 "|*-melf32bsmip|*"-melf32bsmip ")
+      libsuff= shlibsuff= libmagic=32-bit;;
+    *-n32|*"-n32 "|*-melf32bmipn32|*"-melf32bmipn32 ")
+      libsuff=32 shlibsuff=N32 libmagic=N32;;
+    *-64|*"-64 "|*-melf64bmip|*"-melf64bmip ")
+      libsuff=64 shlibsuff=64 libmagic=64-bit;;
+    *) libsuff= shlibsuff= libmagic=never-match;;
+    esac
+    ;;
+  esac
+  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH
+  shlibpath_overrides_runpath=no
+  sys_lib_search_path_spec="/usr/lib${libsuff} /lib${libsuff} /usr/local/lib${libsuff}"
+  sys_lib_dlsearch_path_spec="/usr/lib${libsuff} /lib${libsuff}"
+  hardcode_into_libs=yes
+  ;;
+
+# No shared lib support for Linux oldld, aout, or coff.
+linux*oldld* | linux*aout* | linux*coff*)
+  dynamic_linker=no
+  ;;
+
+# This must be Linux ELF.
+linux* | k*bsd*-gnu)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig -n $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  # This implies no fast_install, which is unacceptable.
+  # Some rework will be needed to allow for fast_install
+  # before this can be enabled.
+  hardcode_into_libs=yes
+
+  # Append ld.so.conf contents to the search path
+  if test -f /etc/ld.so.conf; then
+    lt_ld_extra=`awk '/^include / { system(sprintf("cd /etc; cat %s", \$2)); skip = 1; } { if (!skip) print \$0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;s/[:,	]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;/^$/d' | tr '\n' ' '`
+    sys_lib_dlsearch_path_spec="/lib /usr/lib $lt_ld_extra"
+  fi
+
+  # We used to test for /lib/ld.so.1 and disable shared libraries on
+  # powerpc, because MkLinux only supported shared libraries with the
+  # GNU dynamic linker.  Since this was broken with cross compilers,
+  # most powerpc-linux boxes support dynamic linking these days and
+  # people can always --disable-shared, the test was removed, and we
+  # assume the GNU/Linux dynamic linker is in use.
+  dynamic_linker='GNU/Linux ld.so'
+  ;;
+
+netbsdelf*-gnu)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  dynamic_linker='NetBSD ld.elf_so'
+  ;;
+
+netbsd*)
+  version_type=sunos
+  need_lib_prefix=no
+  need_version=no
+  if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+    finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
+    dynamic_linker='NetBSD (a.out) ld.so'
+  else
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    dynamic_linker='NetBSD ld.elf_so'
+  fi
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  hardcode_into_libs=yes
+  ;;
+
+newsos6)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  ;;
+
+nto-qnx*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  ;;
+
+openbsd*)
+  version_type=sunos
+  sys_lib_dlsearch_path_spec="/usr/lib"
+  need_lib_prefix=no
+  # Some older versions of OpenBSD (3.3 at least) *do* need versioned libs.
+  case $host_os in
+    openbsd3.3 | openbsd3.3.*) need_version=yes ;;
+    *)                         need_version=no  ;;
+  esac
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  if test -z "`echo __ELF__ | $CC -E - | grep __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+    case $host_os in
+      openbsd2.[89] | openbsd2.[89].*)
+	shlibpath_overrides_runpath=no
+	;;
+      *)
+	shlibpath_overrides_runpath=yes
+	;;
+      esac
+  else
+    shlibpath_overrides_runpath=yes
+  fi
+  ;;
+
+os2*)
+  libname_spec='$name'
+  shrext_cmds=".dll"
+  need_lib_prefix=no
+  library_names_spec='$libname${shared_ext} $libname.a'
+  dynamic_linker='OS/2 ld.exe'
+  shlibpath_var=LIBPATH
+  ;;
+
+osf3* | osf4* | osf5*)
+  version_type=osf
+  need_lib_prefix=no
+  need_version=no
+  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  shlibpath_var=LD_LIBRARY_PATH
+  sys_lib_search_path_spec="/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib"
+  sys_lib_dlsearch_path_spec="$sys_lib_search_path_spec"
+  ;;
+
+solaris*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  hardcode_into_libs=yes
+  # ldd complains unless libraries are executable
+  postinstall_cmds='chmod +x $lib'
+  ;;
+
+sunos4*)
+  version_type=sunos
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+  finish_cmds='PATH="\$PATH:/usr/etc" ldconfig $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  if test "$with_gnu_ld" = yes; then
+    need_lib_prefix=no
+  fi
+  need_version=yes
+  ;;
+
+sysv4 | sysv4.3*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  case $host_vendor in
+    sni)
+      shlibpath_overrides_runpath=no
+      need_lib_prefix=no
+      export_dynamic_flag_spec='${wl}-Blargedynsym'
+      runpath_var=LD_RUN_PATH
+      ;;
+    siemens)
+      need_lib_prefix=no
+      ;;
+    motorola)
+      need_lib_prefix=no
+      need_version=no
+      shlibpath_overrides_runpath=no
+      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'
+      ;;
+  esac
+  ;;
+
+sysv4*MP*)
+  if test -d /usr/nec ;then
+    version_type=linux
+    library_names_spec='$libname${shared_ext}.$versuffix $libname${shared_ext}.$major $libname${shared_ext}'
+    soname_spec='$libname${shared_ext}.$major'
+    shlibpath_var=LD_LIBRARY_PATH
+  fi
+  ;;
+
+sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
+  version_type=freebsd-elf
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  hardcode_into_libs=yes
+  if test "$with_gnu_ld" = yes; then
+    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'
+    shlibpath_overrides_runpath=no
+  else
+    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'
+    shlibpath_overrides_runpath=yes
+    case $host_os in
+      sco3.2v5*)
+        sys_lib_search_path_spec="$sys_lib_search_path_spec /lib"
+	;;
+    esac
+  fi
+  sys_lib_dlsearch_path_spec='/usr/lib'
+  ;;
+
+uts4*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  ;;
+
+*)
+  dynamic_linker=no
+  ;;
+esac
+{ echo "$as_me:$LINENO: result: $dynamic_linker" >&5
+echo "${ECHO_T}$dynamic_linker" >&6; }
+test "$dynamic_linker" = no && can_build_shared=no
+
+variables_saved_for_relink="PATH $shlibpath_var $runpath_var"
+if test "$GCC" = yes; then
+  variables_saved_for_relink="$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH"
+fi
+
+{ echo "$as_me:$LINENO: checking how to hardcode library paths into programs" >&5
+echo $ECHO_N "checking how to hardcode library paths into programs... $ECHO_C" >&6; }
+hardcode_action_GCJ=
+if test -n "$hardcode_libdir_flag_spec_GCJ" || \
+   test -n "$runpath_var_GCJ" || \
+   test "X$hardcode_automatic_GCJ" = "Xyes" ; then
+
+  # We can hardcode non-existant directories.
+  if test "$hardcode_direct_GCJ" != no &&
+     # If the only mechanism to avoid hardcoding is shlibpath_var, we
+     # have to relink, otherwise we might link with an installed library
+     # when we should be linking with a yet-to-be-installed one
+     ## test "$_LT_AC_TAGVAR(hardcode_shlibpath_var, GCJ)" != no &&
+     test "$hardcode_minus_L_GCJ" != no; then
+    # Linking always hardcodes the temporary library directory.
+    hardcode_action_GCJ=relink
+  else
+    # We can link without hardcoding, and we can hardcode nonexisting dirs.
+    hardcode_action_GCJ=immediate
+  fi
+else
+  # We cannot hardcode anything, or else we can only hardcode existing
+  # directories.
+  hardcode_action_GCJ=unsupported
+fi
+{ echo "$as_me:$LINENO: result: $hardcode_action_GCJ" >&5
+echo "${ECHO_T}$hardcode_action_GCJ" >&6; }
+
+if test "$hardcode_action_GCJ" = relink; then
+  # Fast installation is not supported
+  enable_fast_install=no
+elif test "$shlibpath_overrides_runpath" = yes ||
+     test "$enable_shared" = no; then
+  # Fast installation is not necessary
+  enable_fast_install=needless
+fi
+
+
+# The else clause should only fire when bootstrapping the
+# libtool distribution, otherwise you forgot to ship ltmain.sh
+# with your package, and you will get complaints that there are
+# no rules to generate ltmain.sh.
+if test -f "$ltmain"; then
+  # See if we are running on zsh, and set the options which allow our commands through
+  # without removal of \ escapes.
+  if test -n "${ZSH_VERSION+set}" ; then
+    setopt NO_GLOB_SUBST
+  fi
+  # Now quote all the things that may contain metacharacters while being
+  # careful not to overquote the AC_SUBSTed values.  We take copies of the
+  # variables and quote the copies for generation of the libtool script.
+  for var in echo old_CC old_CFLAGS AR AR_FLAGS EGREP RANLIB LN_S LTCC LTCFLAGS NM \
+    SED SHELL STRIP \
+    libname_spec library_names_spec soname_spec extract_expsyms_cmds \
+    old_striplib striplib file_magic_cmd finish_cmds finish_eval \
+    deplibs_check_method reload_flag reload_cmds need_locks \
+    lt_cv_sys_global_symbol_pipe lt_cv_sys_global_symbol_to_cdecl \
+    lt_cv_sys_global_symbol_to_c_name_address \
+    sys_lib_search_path_spec sys_lib_dlsearch_path_spec \
+    old_postinstall_cmds old_postuninstall_cmds \
+    compiler_GCJ \
+    CC_GCJ \
+    LD_GCJ \
+    lt_prog_compiler_wl_GCJ \
+    lt_prog_compiler_pic_GCJ \
+    lt_prog_compiler_static_GCJ \
+    lt_prog_compiler_no_builtin_flag_GCJ \
+    export_dynamic_flag_spec_GCJ \
+    thread_safe_flag_spec_GCJ \
+    whole_archive_flag_spec_GCJ \
+    enable_shared_with_static_runtimes_GCJ \
+    old_archive_cmds_GCJ \
+    old_archive_from_new_cmds_GCJ \
+    predep_objects_GCJ \
+    postdep_objects_GCJ \
+    predeps_GCJ \
+    postdeps_GCJ \
+    compiler_lib_search_path_GCJ \
+    archive_cmds_GCJ \
+    archive_expsym_cmds_GCJ \
+    postinstall_cmds_GCJ \
+    postuninstall_cmds_GCJ \
+    old_archive_from_expsyms_cmds_GCJ \
+    allow_undefined_flag_GCJ \
+    no_undefined_flag_GCJ \
+    export_symbols_cmds_GCJ \
+    hardcode_libdir_flag_spec_GCJ \
+    hardcode_libdir_flag_spec_ld_GCJ \
+    hardcode_libdir_separator_GCJ \
+    hardcode_automatic_GCJ \
+    module_cmds_GCJ \
+    module_expsym_cmds_GCJ \
+    lt_cv_prog_compiler_c_o_GCJ \
+    exclude_expsyms_GCJ \
+    include_expsyms_GCJ; do
+
+    case $var in
+    old_archive_cmds_GCJ | \
+    old_archive_from_new_cmds_GCJ | \
+    archive_cmds_GCJ | \
+    archive_expsym_cmds_GCJ | \
+    module_cmds_GCJ | \
+    module_expsym_cmds_GCJ | \
+    old_archive_from_expsyms_cmds_GCJ | \
+    export_symbols_cmds_GCJ | \
+    extract_expsyms_cmds | reload_cmds | finish_cmds | \
+    postinstall_cmds | postuninstall_cmds | \
+    old_postinstall_cmds | old_postuninstall_cmds | \
+    sys_lib_search_path_spec | sys_lib_dlsearch_path_spec)
+      # Double-quote double-evaled strings.
+      eval "lt_$var=\\\"\`\$echo \"X\$$var\" | \$Xsed -e \"\$double_quote_subst\" -e \"\$sed_quote_subst\" -e \"\$delay_variable_subst\"\`\\\""
+      ;;
+    *)
+      eval "lt_$var=\\\"\`\$echo \"X\$$var\" | \$Xsed -e \"\$sed_quote_subst\"\`\\\""
+      ;;
+    esac
+  done
+
+  case $lt_echo in
+  *'\$0 --fallback-echo"')
+    lt_echo=`$echo "X$lt_echo" | $Xsed -e 's/\\\\\\\$0 --fallback-echo"$/$0 --fallback-echo"/'`
+    ;;
+  esac
+
+cfgfile="$ofile"
+
+  cat <<__EOF__ >> "$cfgfile"
+# ### BEGIN LIBTOOL TAG CONFIG: $tagname
+
+# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
+
+# Shell to use when invoking shell scripts.
+SHELL=$lt_SHELL
+
+# Whether or not to build shared libraries.
+build_libtool_libs=$enable_shared
+
+# Whether or not to build static libraries.
+build_old_libs=$enable_static
+
+# Whether or not to add -lc for building shared libraries.
+build_libtool_need_lc=$archive_cmds_need_lc_GCJ
+
+# Whether or not to disallow shared libs when runtime libs are static
+allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes_GCJ
+
+# Whether or not to optimize for fast installation.
+fast_install=$enable_fast_install
+
+# The host system.
+host_alias=$host_alias
+host=$host
+host_os=$host_os
+
+# The build system.
+build_alias=$build_alias
+build=$build
+build_os=$build_os
+
+# An echo program that does not interpret backslashes.
+echo=$lt_echo
+
+# The archiver.
+AR=$lt_AR
+AR_FLAGS=$lt_AR_FLAGS
+
+# A C compiler.
+LTCC=$lt_LTCC
+
+# LTCC compiler flags.
+LTCFLAGS=$lt_LTCFLAGS
+
+# A language-specific compiler.
+CC=$lt_compiler_GCJ
+
+# Is the compiler the GNU C compiler?
+with_gcc=$GCC_GCJ
+
+# An ERE matcher.
+EGREP=$lt_EGREP
+
+# The linker used to build libraries.
+LD=$lt_LD_GCJ
+
+# Whether we need hard or soft links.
+LN_S=$lt_LN_S
+
+# A BSD-compatible nm program.
+NM=$lt_NM
+
+# A symbol stripping program
+STRIP=$lt_STRIP
+
+# Used to examine libraries when file_magic_cmd begins "file"
+MAGIC_CMD=$MAGIC_CMD
+
+# Used on cygwin: DLL creation program.
+DLLTOOL="$DLLTOOL"
+
+# Used on cygwin: object dumper.
+OBJDUMP="$OBJDUMP"
+
+# Used on cygwin: assembler.
+AS="$AS"
+
+# The name of the directory that contains temporary libtool files.
+objdir=$objdir
+
+# How to create reloadable object files.
+reload_flag=$lt_reload_flag
+reload_cmds=$lt_reload_cmds
+
+# How to pass a linker flag through the compiler.
+wl=$lt_lt_prog_compiler_wl_GCJ
+
+# Object file suffix (normally "o").
+objext="$ac_objext"
+
+# Old archive suffix (normally "a").
+libext="$libext"
+
+# Shared library suffix (normally ".so").
+shrext_cmds='$shrext_cmds'
+
+# Executable file suffix (normally "").
+exeext="$exeext"
+
+# Additional compiler flags for building library objects.
+pic_flag=$lt_lt_prog_compiler_pic_GCJ
+pic_mode=$pic_mode
+
+# What is the maximum length of a command?
+max_cmd_len=$lt_cv_sys_max_cmd_len
+
+# Does compiler simultaneously support -c and -o options?
+compiler_c_o=$lt_lt_cv_prog_compiler_c_o_GCJ
+
+# Must we lock files when doing compilation?
+need_locks=$lt_need_locks
+
+# Do we need the lib prefix for modules?
+need_lib_prefix=$need_lib_prefix
+
+# Do we need a version for libraries?
+need_version=$need_version
+
+# Whether dlopen is supported.
+dlopen_support=$enable_dlopen
+
+# Whether dlopen of programs is supported.
+dlopen_self=$enable_dlopen_self
+
+# Whether dlopen of statically linked programs is supported.
+dlopen_self_static=$enable_dlopen_self_static
+
+# Compiler flag to prevent dynamic linking.
+link_static_flag=$lt_lt_prog_compiler_static_GCJ
+
+# Compiler flag to turn off builtin functions.
+no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag_GCJ
+
+# Compiler flag to allow reflexive dlopens.
+export_dynamic_flag_spec=$lt_export_dynamic_flag_spec_GCJ
+
+# Compiler flag to generate shared objects directly from archives.
+whole_archive_flag_spec=$lt_whole_archive_flag_spec_GCJ
+
+# Compiler flag to generate thread-safe objects.
+thread_safe_flag_spec=$lt_thread_safe_flag_spec_GCJ
+
+# Library versioning type.
+version_type=$version_type
+
+# Format of library name prefix.
+libname_spec=$lt_libname_spec
+
+# List of archive names.  First name is the real one, the rest are links.
+# The last name is the one that the linker finds with -lNAME.
+library_names_spec=$lt_library_names_spec
+
+# The coded name of the library, if different from the real name.
+soname_spec=$lt_soname_spec
+
+# Commands used to build and install an old-style archive.
+RANLIB=$lt_RANLIB
+old_archive_cmds=$lt_old_archive_cmds_GCJ
+old_postinstall_cmds=$lt_old_postinstall_cmds
+old_postuninstall_cmds=$lt_old_postuninstall_cmds
+
+# Create an old-style archive from a shared archive.
+old_archive_from_new_cmds=$lt_old_archive_from_new_cmds_GCJ
+
+# Create a temporary old-style archive to link instead of a shared archive.
+old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds_GCJ
+
+# Commands used to build and install a shared archive.
+archive_cmds=$lt_archive_cmds_GCJ
+archive_expsym_cmds=$lt_archive_expsym_cmds_GCJ
+postinstall_cmds=$lt_postinstall_cmds
+postuninstall_cmds=$lt_postuninstall_cmds
+
+# Commands used to build a loadable module (assumed same as above if empty)
+module_cmds=$lt_module_cmds_GCJ
+module_expsym_cmds=$lt_module_expsym_cmds_GCJ
+
+# Commands to strip libraries.
+old_striplib=$lt_old_striplib
+striplib=$lt_striplib
+
+# Dependencies to place before the objects being linked to create a
+# shared library.
+predep_objects=$lt_predep_objects_GCJ
+
+# Dependencies to place after the objects being linked to create a
+# shared library.
+postdep_objects=$lt_postdep_objects_GCJ
+
+# Dependencies to place before the objects being linked to create a
+# shared library.
+predeps=$lt_predeps_GCJ
+
+# Dependencies to place after the objects being linked to create a
+# shared library.
+postdeps=$lt_postdeps_GCJ
+
+# The library search path used internally by the compiler when linking
+# a shared library.
+compiler_lib_search_path=$lt_compiler_lib_search_path_GCJ
+
+# Method to check whether dependent libraries are shared objects.
+deplibs_check_method=$lt_deplibs_check_method
+
+# Command to use when deplibs_check_method == file_magic.
+file_magic_cmd=$lt_file_magic_cmd
+
+# Flag that allows shared libraries with undefined symbols to be built.
+allow_undefined_flag=$lt_allow_undefined_flag_GCJ
+
+# Flag that forces no undefined symbols.
+no_undefined_flag=$lt_no_undefined_flag_GCJ
+
+# Commands used to finish a libtool library installation in a directory.
+finish_cmds=$lt_finish_cmds
+
+# Same as above, but a single script fragment to be evaled but not shown.
+finish_eval=$lt_finish_eval
+
+# Take the output of nm and produce a listing of raw symbols and C names.
+global_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe
+
+# Transform the output of nm in a proper C declaration
+global_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl
+
+# Transform the output of nm in a C name address pair
+global_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address
+
+# This is the shared library runtime path variable.
+runpath_var=$runpath_var
+
+# This is the shared library path variable.
+shlibpath_var=$shlibpath_var
+
+# Is shlibpath searched before the hard-coded library search path?
+shlibpath_overrides_runpath=$shlibpath_overrides_runpath
+
+# How to hardcode a shared library path into an executable.
+hardcode_action=$hardcode_action_GCJ
+
+# Whether we should hardcode library paths into libraries.
+hardcode_into_libs=$hardcode_into_libs
+
+# Flag to hardcode \$libdir into a binary during linking.
+# This must work even if \$libdir does not exist.
+hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_GCJ
+
+# If ld is used when linking, flag to hardcode \$libdir into
+# a binary during linking. This must work even if \$libdir does
+# not exist.
+hardcode_libdir_flag_spec_ld=$lt_hardcode_libdir_flag_spec_ld_GCJ
+
+# Whether we need a single -rpath flag with a separated argument.
+hardcode_libdir_separator=$lt_hardcode_libdir_separator_GCJ
+
+# Set to yes if using DIR/libNAME${shared_ext} during linking hardcodes DIR into the
+# resulting binary.
+hardcode_direct=$hardcode_direct_GCJ
+
+# Set to yes if using the -LDIR flag during linking hardcodes DIR into the
+# resulting binary.
+hardcode_minus_L=$hardcode_minus_L_GCJ
+
+# Set to yes if using SHLIBPATH_VAR=DIR during linking hardcodes DIR into
+# the resulting binary.
+hardcode_shlibpath_var=$hardcode_shlibpath_var_GCJ
+
+# Set to yes if building a shared library automatically hardcodes DIR into the library
+# and all subsequent libraries and executables linked against it.
+hardcode_automatic=$hardcode_automatic_GCJ
+
+# Variables whose values should be saved in libtool wrapper scripts and
+# restored at relink time.
+variables_saved_for_relink="$variables_saved_for_relink"
+
+# Whether libtool must link a program against all its dependency libraries.
+link_all_deplibs=$link_all_deplibs_GCJ
+
+# Compile-time system search path for libraries
+sys_lib_search_path_spec=$lt_sys_lib_search_path_spec
+
+# Run-time system search path for libraries
+sys_lib_dlsearch_path_spec=$lt_sys_lib_dlsearch_path_spec
+
+# Fix the shell variable \$srcfile for the compiler.
+fix_srcfile_path="$fix_srcfile_path_GCJ"
+
+# Set to yes if exported symbols are required.
+always_export_symbols=$always_export_symbols_GCJ
+
+# The commands to list exported symbols.
+export_symbols_cmds=$lt_export_symbols_cmds_GCJ
+
+# The commands to extract the exported symbol list from a shared archive.
+extract_expsyms_cmds=$lt_extract_expsyms_cmds
+
+# Symbols that should not be listed in the preloaded symbols.
+exclude_expsyms=$lt_exclude_expsyms_GCJ
+
+# Symbols that must always be exported.
+include_expsyms=$lt_include_expsyms_GCJ
+
+# ### END LIBTOOL TAG CONFIG: $tagname
+
+__EOF__
+
+
+else
+  # If there is no Makefile yet, we rely on a make rule to execute
+  # `config.status --recheck' to rerun these tests and create the
+  # libtool script then.
+  ltmain_in=`echo $ltmain | sed -e 's/\.sh$/.in/'`
+  if test -f "$ltmain_in"; then
+    test -f Makefile && make "$ltmain"
+  fi
+fi
+
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+CC="$lt_save_CC"
+
+	else
+	  tagname=""
+	fi
+	;;
+
+      RC)
+
+
+# Source file extension for RC test sources.
+ac_ext=rc
+
+# Object file extension for compiled RC test sources.
+objext=o
+objext_RC=$objext
+
+# Code to be used in simple compile tests
+lt_simple_compile_test_code='sample MENU { MENUITEM "&Soup", 100, CHECKED }\n'
+
+# Code to be used in simple link tests
+lt_simple_link_test_code="$lt_simple_compile_test_code"
+
+# ltmain only uses $CC for tagged configurations so make sure $CC is set.
+
+# If no C compiler was specified, use CC.
+LTCC=${LTCC-"$CC"}
+
+# If no C compiler flags were specified, use CFLAGS.
+LTCFLAGS=${LTCFLAGS-"$CFLAGS"}
+
+# Allow CC to be a program name with arguments.
+compiler=$CC
+
+
+# save warnings/boilerplate of simple test code
+ac_outfile=conftest.$ac_objext
+printf "$lt_simple_compile_test_code" >conftest.$ac_ext
+eval "$ac_compile" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
+_lt_compiler_boilerplate=`cat conftest.err`
+$rm conftest*
+
+ac_outfile=conftest.$ac_objext
+printf "$lt_simple_link_test_code" >conftest.$ac_ext
+eval "$ac_link" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
+_lt_linker_boilerplate=`cat conftest.err`
+$rm conftest*
+
+
+# Allow CC to be a program name with arguments.
+lt_save_CC="$CC"
+CC=${RC-"windres"}
+compiler=$CC
+compiler_RC=$CC
+for cc_temp in $compiler""; do
+  case $cc_temp in
+    compile | *[\\/]compile | ccache | *[\\/]ccache ) ;;
+    distcc | *[\\/]distcc | purify | *[\\/]purify ) ;;
+    \-*) ;;
+    *) break;;
+  esac
+done
+cc_basename=`$echo "X$cc_temp" | $Xsed -e 's%.*/%%' -e "s%^$host_alias-%%"`
+
+lt_cv_prog_compiler_c_o_RC=yes
+
+# The else clause should only fire when bootstrapping the
+# libtool distribution, otherwise you forgot to ship ltmain.sh
+# with your package, and you will get complaints that there are
+# no rules to generate ltmain.sh.
+if test -f "$ltmain"; then
+  # See if we are running on zsh, and set the options which allow our commands through
+  # without removal of \ escapes.
+  if test -n "${ZSH_VERSION+set}" ; then
+    setopt NO_GLOB_SUBST
+  fi
+  # Now quote all the things that may contain metacharacters while being
+  # careful not to overquote the AC_SUBSTed values.  We take copies of the
+  # variables and quote the copies for generation of the libtool script.
+  for var in echo old_CC old_CFLAGS AR AR_FLAGS EGREP RANLIB LN_S LTCC LTCFLAGS NM \
+    SED SHELL STRIP \
+    libname_spec library_names_spec soname_spec extract_expsyms_cmds \
+    old_striplib striplib file_magic_cmd finish_cmds finish_eval \
+    deplibs_check_method reload_flag reload_cmds need_locks \
+    lt_cv_sys_global_symbol_pipe lt_cv_sys_global_symbol_to_cdecl \
+    lt_cv_sys_global_symbol_to_c_name_address \
+    sys_lib_search_path_spec sys_lib_dlsearch_path_spec \
+    old_postinstall_cmds old_postuninstall_cmds \
+    compiler_RC \
+    CC_RC \
+    LD_RC \
+    lt_prog_compiler_wl_RC \
+    lt_prog_compiler_pic_RC \
+    lt_prog_compiler_static_RC \
+    lt_prog_compiler_no_builtin_flag_RC \
+    export_dynamic_flag_spec_RC \
+    thread_safe_flag_spec_RC \
+    whole_archive_flag_spec_RC \
+    enable_shared_with_static_runtimes_RC \
+    old_archive_cmds_RC \
+    old_archive_from_new_cmds_RC \
+    predep_objects_RC \
+    postdep_objects_RC \
+    predeps_RC \
+    postdeps_RC \
+    compiler_lib_search_path_RC \
+    archive_cmds_RC \
+    archive_expsym_cmds_RC \
+    postinstall_cmds_RC \
+    postuninstall_cmds_RC \
+    old_archive_from_expsyms_cmds_RC \
+    allow_undefined_flag_RC \
+    no_undefined_flag_RC \
+    export_symbols_cmds_RC \
+    hardcode_libdir_flag_spec_RC \
+    hardcode_libdir_flag_spec_ld_RC \
+    hardcode_libdir_separator_RC \
+    hardcode_automatic_RC \
+    module_cmds_RC \
+    module_expsym_cmds_RC \
+    lt_cv_prog_compiler_c_o_RC \
+    exclude_expsyms_RC \
+    include_expsyms_RC; do
+
+    case $var in
+    old_archive_cmds_RC | \
+    old_archive_from_new_cmds_RC | \
+    archive_cmds_RC | \
+    archive_expsym_cmds_RC | \
+    module_cmds_RC | \
+    module_expsym_cmds_RC | \
+    old_archive_from_expsyms_cmds_RC | \
+    export_symbols_cmds_RC | \
+    extract_expsyms_cmds | reload_cmds | finish_cmds | \
+    postinstall_cmds | postuninstall_cmds | \
+    old_postinstall_cmds | old_postuninstall_cmds | \
+    sys_lib_search_path_spec | sys_lib_dlsearch_path_spec)
+      # Double-quote double-evaled strings.
+      eval "lt_$var=\\\"\`\$echo \"X\$$var\" | \$Xsed -e \"\$double_quote_subst\" -e \"\$sed_quote_subst\" -e \"\$delay_variable_subst\"\`\\\""
+      ;;
+    *)
+      eval "lt_$var=\\\"\`\$echo \"X\$$var\" | \$Xsed -e \"\$sed_quote_subst\"\`\\\""
+      ;;
+    esac
+  done
+
+  case $lt_echo in
+  *'\$0 --fallback-echo"')
+    lt_echo=`$echo "X$lt_echo" | $Xsed -e 's/\\\\\\\$0 --fallback-echo"$/$0 --fallback-echo"/'`
+    ;;
+  esac
+
+cfgfile="$ofile"
+
+  cat <<__EOF__ >> "$cfgfile"
+# ### BEGIN LIBTOOL TAG CONFIG: $tagname
+
+# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
+
+# Shell to use when invoking shell scripts.
+SHELL=$lt_SHELL
+
+# Whether or not to build shared libraries.
+build_libtool_libs=$enable_shared
+
+# Whether or not to build static libraries.
+build_old_libs=$enable_static
+
+# Whether or not to add -lc for building shared libraries.
+build_libtool_need_lc=$archive_cmds_need_lc_RC
+
+# Whether or not to disallow shared libs when runtime libs are static
+allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes_RC
+
+# Whether or not to optimize for fast installation.
+fast_install=$enable_fast_install
+
+# The host system.
+host_alias=$host_alias
+host=$host
+host_os=$host_os
+
+# The build system.
+build_alias=$build_alias
+build=$build
+build_os=$build_os
+
+# An echo program that does not interpret backslashes.
+echo=$lt_echo
+
+# The archiver.
+AR=$lt_AR
+AR_FLAGS=$lt_AR_FLAGS
+
+# A C compiler.
+LTCC=$lt_LTCC
+
+# LTCC compiler flags.
+LTCFLAGS=$lt_LTCFLAGS
+
+# A language-specific compiler.
+CC=$lt_compiler_RC
+
+# Is the compiler the GNU C compiler?
+with_gcc=$GCC_RC
+
+# An ERE matcher.
+EGREP=$lt_EGREP
+
+# The linker used to build libraries.
+LD=$lt_LD_RC
+
+# Whether we need hard or soft links.
+LN_S=$lt_LN_S
+
+# A BSD-compatible nm program.
+NM=$lt_NM
+
+# A symbol stripping program
+STRIP=$lt_STRIP
+
+# Used to examine libraries when file_magic_cmd begins "file"
+MAGIC_CMD=$MAGIC_CMD
+
+# Used on cygwin: DLL creation program.
+DLLTOOL="$DLLTOOL"
+
+# Used on cygwin: object dumper.
+OBJDUMP="$OBJDUMP"
+
+# Used on cygwin: assembler.
+AS="$AS"
+
+# The name of the directory that contains temporary libtool files.
+objdir=$objdir
+
+# How to create reloadable object files.
+reload_flag=$lt_reload_flag
+reload_cmds=$lt_reload_cmds
+
+# How to pass a linker flag through the compiler.
+wl=$lt_lt_prog_compiler_wl_RC
+
+# Object file suffix (normally "o").
+objext="$ac_objext"
+
+# Old archive suffix (normally "a").
+libext="$libext"
+
+# Shared library suffix (normally ".so").
+shrext_cmds='$shrext_cmds'
+
+# Executable file suffix (normally "").
+exeext="$exeext"
+
+# Additional compiler flags for building library objects.
+pic_flag=$lt_lt_prog_compiler_pic_RC
+pic_mode=$pic_mode
+
+# What is the maximum length of a command?
+max_cmd_len=$lt_cv_sys_max_cmd_len
+
+# Does compiler simultaneously support -c and -o options?
+compiler_c_o=$lt_lt_cv_prog_compiler_c_o_RC
+
+# Must we lock files when doing compilation?
+need_locks=$lt_need_locks
+
+# Do we need the lib prefix for modules?
+need_lib_prefix=$need_lib_prefix
+
+# Do we need a version for libraries?
+need_version=$need_version
+
+# Whether dlopen is supported.
+dlopen_support=$enable_dlopen
+
+# Whether dlopen of programs is supported.
+dlopen_self=$enable_dlopen_self
+
+# Whether dlopen of statically linked programs is supported.
+dlopen_self_static=$enable_dlopen_self_static
+
+# Compiler flag to prevent dynamic linking.
+link_static_flag=$lt_lt_prog_compiler_static_RC
+
+# Compiler flag to turn off builtin functions.
+no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag_RC
+
+# Compiler flag to allow reflexive dlopens.
+export_dynamic_flag_spec=$lt_export_dynamic_flag_spec_RC
+
+# Compiler flag to generate shared objects directly from archives.
+whole_archive_flag_spec=$lt_whole_archive_flag_spec_RC
+
+# Compiler flag to generate thread-safe objects.
+thread_safe_flag_spec=$lt_thread_safe_flag_spec_RC
+
+# Library versioning type.
+version_type=$version_type
+
+# Format of library name prefix.
+libname_spec=$lt_libname_spec
+
+# List of archive names.  First name is the real one, the rest are links.
+# The last name is the one that the linker finds with -lNAME.
+library_names_spec=$lt_library_names_spec
+
+# The coded name of the library, if different from the real name.
+soname_spec=$lt_soname_spec
+
+# Commands used to build and install an old-style archive.
+RANLIB=$lt_RANLIB
+old_archive_cmds=$lt_old_archive_cmds_RC
+old_postinstall_cmds=$lt_old_postinstall_cmds
+old_postuninstall_cmds=$lt_old_postuninstall_cmds
+
+# Create an old-style archive from a shared archive.
+old_archive_from_new_cmds=$lt_old_archive_from_new_cmds_RC
+
+# Create a temporary old-style archive to link instead of a shared archive.
+old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds_RC
+
+# Commands used to build and install a shared archive.
+archive_cmds=$lt_archive_cmds_RC
+archive_expsym_cmds=$lt_archive_expsym_cmds_RC
+postinstall_cmds=$lt_postinstall_cmds
+postuninstall_cmds=$lt_postuninstall_cmds
+
+# Commands used to build a loadable module (assumed same as above if empty)
+module_cmds=$lt_module_cmds_RC
+module_expsym_cmds=$lt_module_expsym_cmds_RC
+
+# Commands to strip libraries.
+old_striplib=$lt_old_striplib
+striplib=$lt_striplib
+
+# Dependencies to place before the objects being linked to create a
+# shared library.
+predep_objects=$lt_predep_objects_RC
+
+# Dependencies to place after the objects being linked to create a
+# shared library.
+postdep_objects=$lt_postdep_objects_RC
+
+# Dependencies to place before the objects being linked to create a
+# shared library.
+predeps=$lt_predeps_RC
+
+# Dependencies to place after the objects being linked to create a
+# shared library.
+postdeps=$lt_postdeps_RC
+
+# The library search path used internally by the compiler when linking
+# a shared library.
+compiler_lib_search_path=$lt_compiler_lib_search_path_RC
+
+# Method to check whether dependent libraries are shared objects.
+deplibs_check_method=$lt_deplibs_check_method
+
+# Command to use when deplibs_check_method == file_magic.
+file_magic_cmd=$lt_file_magic_cmd
+
+# Flag that allows shared libraries with undefined symbols to be built.
+allow_undefined_flag=$lt_allow_undefined_flag_RC
+
+# Flag that forces no undefined symbols.
+no_undefined_flag=$lt_no_undefined_flag_RC
+
+# Commands used to finish a libtool library installation in a directory.
+finish_cmds=$lt_finish_cmds
+
+# Same as above, but a single script fragment to be evaled but not shown.
+finish_eval=$lt_finish_eval
+
+# Take the output of nm and produce a listing of raw symbols and C names.
+global_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe
+
+# Transform the output of nm in a proper C declaration
+global_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl
+
+# Transform the output of nm in a C name address pair
+global_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address
+
+# This is the shared library runtime path variable.
+runpath_var=$runpath_var
+
+# This is the shared library path variable.
+shlibpath_var=$shlibpath_var
+
+# Is shlibpath searched before the hard-coded library search path?
+shlibpath_overrides_runpath=$shlibpath_overrides_runpath
+
+# How to hardcode a shared library path into an executable.
+hardcode_action=$hardcode_action_RC
+
+# Whether we should hardcode library paths into libraries.
+hardcode_into_libs=$hardcode_into_libs
+
+# Flag to hardcode \$libdir into a binary during linking.
+# This must work even if \$libdir does not exist.
+hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_RC
+
+# If ld is used when linking, flag to hardcode \$libdir into
+# a binary during linking. This must work even if \$libdir does
+# not exist.
+hardcode_libdir_flag_spec_ld=$lt_hardcode_libdir_flag_spec_ld_RC
+
+# Whether we need a single -rpath flag with a separated argument.
+hardcode_libdir_separator=$lt_hardcode_libdir_separator_RC
+
+# Set to yes if using DIR/libNAME${shared_ext} during linking hardcodes DIR into the
+# resulting binary.
+hardcode_direct=$hardcode_direct_RC
+
+# Set to yes if using the -LDIR flag during linking hardcodes DIR into the
+# resulting binary.
+hardcode_minus_L=$hardcode_minus_L_RC
+
+# Set to yes if using SHLIBPATH_VAR=DIR during linking hardcodes DIR into
+# the resulting binary.
+hardcode_shlibpath_var=$hardcode_shlibpath_var_RC
+
+# Set to yes if building a shared library automatically hardcodes DIR into the library
+# and all subsequent libraries and executables linked against it.
+hardcode_automatic=$hardcode_automatic_RC
+
+# Variables whose values should be saved in libtool wrapper scripts and
+# restored at relink time.
+variables_saved_for_relink="$variables_saved_for_relink"
+
+# Whether libtool must link a program against all its dependency libraries.
+link_all_deplibs=$link_all_deplibs_RC
+
+# Compile-time system search path for libraries
+sys_lib_search_path_spec=$lt_sys_lib_search_path_spec
+
+# Run-time system search path for libraries
+sys_lib_dlsearch_path_spec=$lt_sys_lib_dlsearch_path_spec
+
+# Fix the shell variable \$srcfile for the compiler.
+fix_srcfile_path="$fix_srcfile_path_RC"
+
+# Set to yes if exported symbols are required.
+always_export_symbols=$always_export_symbols_RC
+
+# The commands to list exported symbols.
+export_symbols_cmds=$lt_export_symbols_cmds_RC
+
+# The commands to extract the exported symbol list from a shared archive.
+extract_expsyms_cmds=$lt_extract_expsyms_cmds
+
+# Symbols that should not be listed in the preloaded symbols.
+exclude_expsyms=$lt_exclude_expsyms_RC
+
+# Symbols that must always be exported.
+include_expsyms=$lt_include_expsyms_RC
+
+# ### END LIBTOOL TAG CONFIG: $tagname
+
+__EOF__
+
+
+else
+  # If there is no Makefile yet, we rely on a make rule to execute
+  # `config.status --recheck' to rerun these tests and create the
+  # libtool script then.
+  ltmain_in=`echo $ltmain | sed -e 's/\.sh$/.in/'`
+  if test -f "$ltmain_in"; then
+    test -f Makefile && make "$ltmain"
+  fi
+fi
+
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+CC="$lt_save_CC"
+
+	;;
+
+      *)
+	{ { echo "$as_me:$LINENO: error: Unsupported tag name: $tagname" >&5
+echo "$as_me: error: Unsupported tag name: $tagname" >&2;}
+   { (exit 1); exit 1; }; }
+	;;
+      esac
+
+      # Append the new tag name to the list of available tags.
+      if test -n "$tagname" ; then
+      available_tags="$available_tags $tagname"
+    fi
+    fi
+  done
+  IFS="$lt_save_ifs"
+
+  # Now substitute the updated list of available tags.
+  if eval "sed -e 's/^available_tags=.*\$/available_tags=\"$available_tags\"/' \"$ofile\" > \"${ofile}T\""; then
+    mv "${ofile}T" "$ofile"
+    chmod +x "$ofile"
+  else
+    rm -f "${ofile}T"
+    { { echo "$as_me:$LINENO: error: unable to update list of available tagged configurations." >&5
+echo "$as_me: error: unable to update list of available tagged configurations." >&2;}
+   { (exit 1); exit 1; }; }
+  fi
+fi
+
+
+
+# This can be used to rebuild libtool when needed
+LIBTOOL_DEPS="$ac_aux_dir/ltmain.sh"
+
+# Always use our own libtool.
+LIBTOOL='$(SHELL) $(top_builddir)/libtool'
+
+# Prevent multiple expansion
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+if test $is_release -eq 0; then
+	default_enable_debug="yes"
+else
+	default_enable_debug="no"
+fi
+# Check whether --enable-debug was given.
+if test "${enable_debug+set}" = set; then
+  enableval=$enable_debug;
+else
+  enable_debug=$default_enable_debug
+fi
+
+if test "x${enable_debug}" = "xyes"; then
+		append_to_EMKOPTS "debug_info"
+	append_to_EMKOPTS "{d, debug}"
+else
+	CPPFLAGS="-DNDEBUG ${CPPFLAGS# }"
+fi
+
+if test "x$GCC" = "xyes"; then
+	CFLAGS="${CFLAGS% } -Wall"
+fi
+append_to_EMKOPTS "report_warnings"
+append_to_EMKOPTS "{warn_format, 1}"
+append_to_EMKOPTS "warn_export_vars"
+append_to_EMKOPTS "warn_shadow_vars"
+append_to_EMKOPTS "warn_unused_import"
+
+# Check whether --enable-warnings was given.
+if test "${enable_warnings+set}" = set; then
+  enableval=$enable_warnings;
+else
+  enable_warnings="yes"
+fi
+
+if test "x${enable_warnings}" = "xyes" -a "x${GCC}" = "xyes"; then
+	CFLAGS="${CFLAGS% } -Werror"
+fi
+
+# Check whether --enable-compat was given.
+if test "${enable_compat+set}" = set; then
+  enableval=$enable_compat;
+else
+  enable_compat="no"
+fi
+
+if test "x${enable_compat}" = "xyes"; then
+	COMPAT_MODULES_START=","
+	COMPAT_MODULES=""
+else
+	COMPAT_MODULES_START=" % Compatibility modules disabled:"
+	COMPAT_MODULES="%"
+fi
+
+
+if test "x${enable_compat}" = "xyes"; then
+  BUILD_COMPAT_TRUE=
+  BUILD_COMPAT_FALSE='#'
+else
+  BUILD_COMPAT_TRUE='#'
+  BUILD_COMPAT_FALSE=
+fi
+
+
+
+
+# Check whether --enable-documentation was given.
+if test "${enable_documentation+set}" = set; then
+  enableval=$enable_documentation;
+else
+  enable_documentation="yes"
+fi
+
+
+
+if test "x${enable_documentation}" = "xyes"; then
+  ENABLE_DOCUMENTATION_TRUE=
+  ENABLE_DOCUMENTATION_FALSE='#'
+else
+  ENABLE_DOCUMENTATION_TRUE='#'
+  ENABLE_DOCUMENTATION_FALSE=
+fi
+
+
+# Check whether --enable-examples was given.
+if test "${enable_examples+set}" = set; then
+  enableval=$enable_examples;
+else
+  enable_examples="no"
+fi
+
+
+
+if test "x${enable_examples}" = "xyes"; then
+  ENABLE_EXAMPLES_TRUE=
+  ENABLE_EXAMPLES_FALSE='#'
+else
+  ENABLE_EXAMPLES_TRUE='#'
+  ENABLE_EXAMPLES_FALSE=
+fi
+
+
+# Check whether --enable-escaping-using-cdata was given.
+if test "${enable_escaping_using_cdata+set}" = set; then
+  enableval=$enable_escaping_using_cdata;
+else
+  enable_escaping_using_cdata="no"
+fi
+
+if test "x${enable_escaping_using_cdata}" = "xyes"; then
+	append_to_EMKOPTS "{d, 'ESCAPE_USING_CDATA_SECTIONS'}"
+fi
+
+
+echo
+
+  text=`$ECHO $seo "%BErlang environment%b" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "%BErlang environment%b" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+
+
+# Check whether --with-erlang was given.
+if test "${with_erlang+set}" = set; then
+  withval=$with_erlang; with_erlang=${withval%/}
+else
+  with_erlang=""
+fi
+
+
+if test "x${with_erlang}" = "x"; then
+	if test -n "$ERL"; then
+    { echo "$as_me:$LINENO: checking for erl" >&5
+echo $ECHO_N "checking for erl... $ECHO_C" >&6; }
+    { echo "$as_me:$LINENO: result: $ERL" >&5
+echo "${ECHO_T}$ERL" >&6; }
+else
+    if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}erl", so it can be a program name with args.
+set dummy ${ac_tool_prefix}erl; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_path_ERL+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  case $ERL in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_ERL="$ERL" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_ERL="$as_dir/$ac_word$ac_exec_ext"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+ERL=$ac_cv_path_ERL
+if test -n "$ERL"; then
+  { echo "$as_me:$LINENO: result: $ERL" >&5
+echo "${ECHO_T}$ERL" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_path_ERL"; then
+  ac_pt_ERL=$ERL
+  # Extract the first word of "erl", so it can be a program name with args.
+set dummy erl; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_path_ac_pt_ERL+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  case $ac_pt_ERL in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_ac_pt_ERL="$ac_pt_ERL" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_ac_pt_ERL="$as_dir/$ac_word$ac_exec_ext"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+ac_pt_ERL=$ac_cv_path_ac_pt_ERL
+if test -n "$ac_pt_ERL"; then
+  { echo "$as_me:$LINENO: result: $ac_pt_ERL" >&5
+echo "${ECHO_T}$ac_pt_ERL" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+  if test "x$ac_pt_ERL" = x; then
+    ERL=""
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ echo "$as_me:$LINENO: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&5
+echo "$as_me: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&2;}
+ac_tool_warned=yes ;;
+esac
+    ERL=$ac_pt_ERL
+  fi
+else
+  ERL="$ac_cv_path_ERL"
+fi
+fi
+
+	if test -n "$ERLC"; then
+    { echo "$as_me:$LINENO: checking for erlc" >&5
+echo $ECHO_N "checking for erlc... $ECHO_C" >&6; }
+    { echo "$as_me:$LINENO: result: $ERLC" >&5
+echo "${ECHO_T}$ERLC" >&6; }
+else
+    if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}erlc", so it can be a program name with args.
+set dummy ${ac_tool_prefix}erlc; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_path_ERLC+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  case $ERLC in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_ERLC="$ERLC" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_ERLC="$as_dir/$ac_word$ac_exec_ext"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+ERLC=$ac_cv_path_ERLC
+if test -n "$ERLC"; then
+  { echo "$as_me:$LINENO: result: $ERLC" >&5
+echo "${ECHO_T}$ERLC" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_path_ERLC"; then
+  ac_pt_ERLC=$ERLC
+  # Extract the first word of "erlc", so it can be a program name with args.
+set dummy erlc; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_path_ac_pt_ERLC+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  case $ac_pt_ERLC in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_ac_pt_ERLC="$ac_pt_ERLC" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_ac_pt_ERLC="$as_dir/$ac_word$ac_exec_ext"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+ac_pt_ERLC=$ac_cv_path_ac_pt_ERLC
+if test -n "$ac_pt_ERLC"; then
+  { echo "$as_me:$LINENO: result: $ac_pt_ERLC" >&5
+echo "${ECHO_T}$ac_pt_ERLC" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+  if test "x$ac_pt_ERLC" = x; then
+    ERLC=""
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ echo "$as_me:$LINENO: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&5
+echo "$as_me: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&2;}
+ac_tool_warned=yes ;;
+esac
+    ERLC=$ac_pt_ERLC
+  fi
+else
+  ERLC="$ac_cv_path_ERLC"
+fi
+
+fi
+
+else
+	erl_path="${with_erlang}/bin"
+	if test -n "$ERL"; then
+    { echo "$as_me:$LINENO: checking for erl" >&5
+echo $ECHO_N "checking for erl... $ECHO_C" >&6; }
+    { echo "$as_me:$LINENO: result: $ERL" >&5
+echo "${ECHO_T}$ERL" >&6; }
+else
+    if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}erl", so it can be a program name with args.
+set dummy ${ac_tool_prefix}erl; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_path_ERL+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  case $ERL in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_ERL="$ERL" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $erl_path$PATH_SEPARATOR$PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_ERL="$as_dir/$ac_word$ac_exec_ext"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+ERL=$ac_cv_path_ERL
+if test -n "$ERL"; then
+  { echo "$as_me:$LINENO: result: $ERL" >&5
+echo "${ECHO_T}$ERL" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_path_ERL"; then
+  ac_pt_ERL=$ERL
+  # Extract the first word of "erl", so it can be a program name with args.
+set dummy erl; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_path_ac_pt_ERL+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  case $ac_pt_ERL in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_ac_pt_ERL="$ac_pt_ERL" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $erl_path$PATH_SEPARATOR$PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_ac_pt_ERL="$as_dir/$ac_word$ac_exec_ext"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+ac_pt_ERL=$ac_cv_path_ac_pt_ERL
+if test -n "$ac_pt_ERL"; then
+  { echo "$as_me:$LINENO: result: $ac_pt_ERL" >&5
+echo "${ECHO_T}$ac_pt_ERL" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+  if test "x$ac_pt_ERL" = x; then
+    ERL=""
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ echo "$as_me:$LINENO: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&5
+echo "$as_me: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&2;}
+ac_tool_warned=yes ;;
+esac
+    ERL=$ac_pt_ERL
+  fi
+else
+  ERL="$ac_cv_path_ERL"
+fi
+fi
+
+	if test -n "$ERLC"; then
+    { echo "$as_me:$LINENO: checking for erlc" >&5
+echo $ECHO_N "checking for erlc... $ECHO_C" >&6; }
+    { echo "$as_me:$LINENO: result: $ERLC" >&5
+echo "${ECHO_T}$ERLC" >&6; }
+else
+    if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}erlc", so it can be a program name with args.
+set dummy ${ac_tool_prefix}erlc; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_path_ERLC+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  case $ERLC in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_ERLC="$ERLC" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $erl_path$PATH_SEPARATOR$PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_ERLC="$as_dir/$ac_word$ac_exec_ext"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+ERLC=$ac_cv_path_ERLC
+if test -n "$ERLC"; then
+  { echo "$as_me:$LINENO: result: $ERLC" >&5
+echo "${ECHO_T}$ERLC" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_path_ERLC"; then
+  ac_pt_ERLC=$ERLC
+  # Extract the first word of "erlc", so it can be a program name with args.
+set dummy erlc; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_path_ac_pt_ERLC+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  case $ac_pt_ERLC in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_ac_pt_ERLC="$ac_pt_ERLC" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $erl_path$PATH_SEPARATOR$PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_ac_pt_ERLC="$as_dir/$ac_word$ac_exec_ext"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+ac_pt_ERLC=$ac_cv_path_ac_pt_ERLC
+if test -n "$ac_pt_ERLC"; then
+  { echo "$as_me:$LINENO: result: $ac_pt_ERLC" >&5
+echo "${ECHO_T}$ac_pt_ERLC" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+  if test "x$ac_pt_ERLC" = x; then
+    ERLC=""
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ echo "$as_me:$LINENO: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&5
+echo "$as_me: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&2;}
+ac_tool_warned=yes ;;
+esac
+    ERLC=$ac_pt_ERLC
+  fi
+else
+  ERLC="$ac_cv_path_ERLC"
+fi
+
+fi
+
+fi
+
+if test "x${ERL}" = "x"; then
+	{ { echo "$as_me:$LINENO: error:
+Erlang not found. Fill the ERL variable with erl(1) path or provide
+Erlang prefix with --with-erlang." >&5
+echo "$as_me: error:
+Erlang not found. Fill the ERL variable with erl(1) path or provide
+Erlang prefix with --with-erlang." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+
+
+if test "x${ESCRIPT}" = "x"; then
+	if test "x${with_erlang}" = "x"; then
+		# Extract the first word of "escript", so it can be a program name with args.
+set dummy escript; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_path_ESCRIPT+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  case $ESCRIPT in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_ESCRIPT="$ESCRIPT" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_ESCRIPT="$as_dir/$ac_word$ac_exec_ext"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+ESCRIPT=$ac_cv_path_ESCRIPT
+if test -n "$ESCRIPT"; then
+  { echo "$as_me:$LINENO: result: $ESCRIPT" >&5
+echo "${ECHO_T}$ESCRIPT" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+
+	else
+		erl_path="${with_erlang}/bin"
+		# Extract the first word of "escript", so it can be a program name with args.
+set dummy escript; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_path_ESCRIPT+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  case $ESCRIPT in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_ESCRIPT="$ESCRIPT" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $erl_path$PATH_SEPARATOR$PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_ESCRIPT="$as_dir/$ac_word$ac_exec_ext"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+ESCRIPT=$ac_cv_path_ESCRIPT
+if test -n "$ESCRIPT"; then
+  { echo "$as_me:$LINENO: result: $ESCRIPT" >&5
+echo "${ECHO_T}$ESCRIPT" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+
+	fi
+else
+	{ echo "$as_me:$LINENO: checking for escript" >&5
+echo $ECHO_N "checking for escript... $ECHO_C" >&6; }
+	{ echo "$as_me:$LINENO: result: $ESCRIPT" >&5
+echo "${ECHO_T}$ESCRIPT" >&6; }
+fi
+
+if test "x${ESCRIPT}" = "x"; then
+	{ echo "$as_me:$LINENO: WARNING:
+escript(1) not found. Fill the ESCRIPT variable with escript(1) path if
+you want to use the testsuite." >&5
+echo "$as_me: WARNING:
+escript(1) not found. Fill the ESCRIPT variable with escript(1) path if
+you want to use the testsuite." >&2;}
+fi
+
+if test -n "$ERLC"; then
+    { echo "$as_me:$LINENO: checking for erlc" >&5
+echo $ECHO_N "checking for erlc... $ECHO_C" >&6; }
+    { echo "$as_me:$LINENO: result: $ERLC" >&5
+echo "${ECHO_T}$ERLC" >&6; }
+else
+    if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}erlc", so it can be a program name with args.
+set dummy ${ac_tool_prefix}erlc; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_path_ERLC+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  case $ERLC in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_ERLC="$ERLC" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_ERLC="$as_dir/$ac_word$ac_exec_ext"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+ERLC=$ac_cv_path_ERLC
+if test -n "$ERLC"; then
+  { echo "$as_me:$LINENO: result: $ERLC" >&5
+echo "${ECHO_T}$ERLC" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_path_ERLC"; then
+  ac_pt_ERLC=$ERLC
+  # Extract the first word of "erlc", so it can be a program name with args.
+set dummy erlc; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_path_ac_pt_ERLC+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  case $ac_pt_ERLC in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_ac_pt_ERLC="$ac_pt_ERLC" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_ac_pt_ERLC="$as_dir/$ac_word$ac_exec_ext"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+ac_pt_ERLC=$ac_cv_path_ac_pt_ERLC
+if test -n "$ac_pt_ERLC"; then
+  { echo "$as_me:$LINENO: result: $ac_pt_ERLC" >&5
+echo "${ECHO_T}$ac_pt_ERLC" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+  if test "x$ac_pt_ERLC" = x; then
+    ERLC="not found"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ echo "$as_me:$LINENO: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&5
+echo "$as_me: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&2;}
+ac_tool_warned=yes ;;
+esac
+    ERLC=$ac_pt_ERLC
+  fi
+else
+  ERLC="$ac_cv_path_ERLC"
+fi
+
+fi
+
+if test "$ERLC" = "not found"; then
+    { { echo "$as_me:$LINENO: error: Erlang/OTP compiler (erlc) not found but required" >&5
+echo "$as_me: error: Erlang/OTP compiler (erlc) not found but required" >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+if test -n "$ERL"; then
+    { echo "$as_me:$LINENO: checking for erl" >&5
+echo $ECHO_N "checking for erl... $ECHO_C" >&6; }
+    { echo "$as_me:$LINENO: result: $ERL" >&5
+echo "${ECHO_T}$ERL" >&6; }
+else
+    if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}erl", so it can be a program name with args.
+set dummy ${ac_tool_prefix}erl; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_path_ERL+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  case $ERL in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_ERL="$ERL" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_ERL="$as_dir/$ac_word$ac_exec_ext"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+ERL=$ac_cv_path_ERL
+if test -n "$ERL"; then
+  { echo "$as_me:$LINENO: result: $ERL" >&5
+echo "${ECHO_T}$ERL" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_path_ERL"; then
+  ac_pt_ERL=$ERL
+  # Extract the first word of "erl", so it can be a program name with args.
+set dummy erl; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_path_ac_pt_ERL+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  case $ac_pt_ERL in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_ac_pt_ERL="$ac_pt_ERL" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_ac_pt_ERL="$as_dir/$ac_word$ac_exec_ext"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+ac_pt_ERL=$ac_cv_path_ac_pt_ERL
+if test -n "$ac_pt_ERL"; then
+  { echo "$as_me:$LINENO: result: $ac_pt_ERL" >&5
+echo "${ECHO_T}$ac_pt_ERL" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+  if test "x$ac_pt_ERL" = x; then
+    ERL="not found"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ echo "$as_me:$LINENO: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&5
+echo "$as_me: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&2;}
+ac_tool_warned=yes ;;
+esac
+    ERL=$ac_pt_ERL
+  fi
+else
+  ERL="$ac_cv_path_ERL"
+fi
+fi
+
+if test "$ERL" = "not found"; then
+    { { echo "$as_me:$LINENO: error: Erlang/OTP interpreter (erl) not found but required" >&5
+echo "$as_me: error: Erlang/OTP interpreter (erl) not found but required" >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+
+{ echo "$as_me:$LINENO: checking for Erlang/OTP root directory" >&5
+echo $ECHO_N "checking for Erlang/OTP root directory... $ECHO_C" >&6; }
+if test "${erlang_cv_root_dir+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_ext=erl
+ac_compile='$ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&5'
+ac_link='$ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&5 ; echo "#!/bin/sh" > conftest$ac_exeext ; echo "\"$ERL\" -run conftest start -run init stop -noshell" >> conftest$ac_exeext ; chmod +x conftest$ac_exeext'
+     if test "$cross_compiling" = yes; then
+  { { echo "$as_me:$LINENO: error: cannot run test program while cross compiling
+See \`config.log' for more details." >&5
+echo "$as_me: error: cannot run test program while cross compiling
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+else
+  cat >conftest.$ac_ext <<_ACEOF
+-module(conftest).
+-export([start/0]).
+
+start() ->
+            RootDir = code:root_dir(),
+            file:write_file("conftest.out", RootDir),
+            ReturnValue = 0,
+            halt(ReturnValue)
+.
+
+_ACEOF
+rm -f conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && { ac_try='./conftest$ac_exeext'
+  { (case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_try") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+  erlang_cv_root_dir=`cat conftest.out`
+else
+  echo "$as_me: program exited with status $ac_status" >&5
+echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+( exit $ac_status )
+{ { echo "$as_me:$LINENO: error: test Erlang program execution failed
+See \`config.log' for more details." >&5
+echo "$as_me: error: test Erlang program execution failed
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext
+fi
+
+
+     ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+fi
+{ echo "$as_me:$LINENO: result: $erlang_cv_root_dir" >&5
+echo "${ECHO_T}$erlang_cv_root_dir" >&6; }
+ERLANG_ROOT_DIR=$erlang_cv_root_dir
+
+
+{ echo "$as_me:$LINENO: checking for Erlang/OTP library base directory" >&5
+echo $ECHO_N "checking for Erlang/OTP library base directory... $ECHO_C" >&6; }
+if test "${erlang_cv_lib_dir+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_ext=erl
+ac_compile='$ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&5'
+ac_link='$ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&5 ; echo "#!/bin/sh" > conftest$ac_exeext ; echo "\"$ERL\" -run conftest start -run init stop -noshell" >> conftest$ac_exeext ; chmod +x conftest$ac_exeext'
+     if test "$cross_compiling" = yes; then
+  { { echo "$as_me:$LINENO: error: cannot run test program while cross compiling
+See \`config.log' for more details." >&5
+echo "$as_me: error: cannot run test program while cross compiling
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+else
+  cat >conftest.$ac_ext <<_ACEOF
+-module(conftest).
+-export([start/0]).
+
+start() ->
+            LibDir = code:lib_dir(),
+            file:write_file("conftest.out", LibDir),
+            ReturnValue = 0,
+            halt(ReturnValue)
+.
+
+_ACEOF
+rm -f conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && { ac_try='./conftest$ac_exeext'
+  { (case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_try") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+  erlang_cv_lib_dir=`cat conftest.out`
+else
+  echo "$as_me: program exited with status $ac_status" >&5
+echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+( exit $ac_status )
+{ { echo "$as_me:$LINENO: error: test Erlang program execution failed
+See \`config.log' for more details." >&5
+echo "$as_me: error: test Erlang program execution failed
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext
+fi
+
+
+     ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+fi
+{ echo "$as_me:$LINENO: result: $erlang_cv_lib_dir" >&5
+echo "${ECHO_T}$erlang_cv_lib_dir" >&6; }
+ERLANG_LIB_DIR=$erlang_cv_lib_dir
+
+
+
+
+{ echo "$as_me:$LINENO: checking for Erlang/OTP ERTS version" >&5
+echo $ECHO_N "checking for Erlang/OTP ERTS version... $ECHO_C" >&6; }
+if test "${erlang_cv_erts_ver+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+
+    ac_ext=erl
+ac_compile='$ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&5'
+ac_link='$ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&5 ; echo "#!/bin/sh" > conftest$ac_exeext ; echo "\"$ERL\" -run conftest start -run init stop -noshell" >> conftest$ac_exeext ; chmod +x conftest$ac_exeext'
+    if test "$cross_compiling" = yes; then
+  { { echo "$as_me:$LINENO: error: cannot run test program while cross compiling
+See \`config.log' for more details." >&5
+echo "$as_me: error: cannot run test program while cross compiling
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+else
+  cat >conftest.$ac_ext <<_ACEOF
+-module(conftest).
+-export([start/0]).
+
+start() ->
+        file:write_file("conftest.out", erlang:system_info(version)),
+        halt(0)
+.
+
+_ACEOF
+rm -f conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && { ac_try='./conftest$ac_exeext'
+  { (case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_try") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+  erlang_cv_erts_ver=`cat conftest.out`
+else
+  echo "$as_me: program exited with status $ac_status" >&5
+echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+( exit $ac_status )
+if test ! -f conftest.out; then
+         { { echo "$as_me:$LINENO: error: test Erlang program execution failed
+See \`config.log' for more details." >&5
+echo "$as_me: error: test Erlang program execution failed
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+       else
+         erlang_cv_erts_ver="not found"
+       fi
+fi
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext
+fi
+
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+fi
+{ echo "$as_me:$LINENO: result: $erlang_cv_erts_ver" >&5
+echo "${ECHO_T}$erlang_cv_erts_ver" >&6; }
+{ echo "$as_me:$LINENO: checking for Erlang/OTP ERTS directory" >&5
+echo $ECHO_N "checking for Erlang/OTP ERTS directory... $ECHO_C" >&6; }
+if test "${erlang_cv_erts_dir+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+
+    erlang_cv_erts_dir="${ERLANG_ROOT_DIR}/erts-$erlang_cv_erts_ver"
+    if test ! -d "$erlang_cv_erts_dir"; then
+      erlang_cv_erts_dir="${ERLANG_ROOT_DIR}/usr"
+    fi
+
+fi
+{ echo "$as_me:$LINENO: result: $erlang_cv_erts_dir" >&5
+echo "${ECHO_T}$erlang_cv_erts_dir" >&6; }
+ERLANG_ERTS_DIR=$erlang_cv_erts_dir
+
+ERLANG_ERTS_VER=$erlang_cv_erts_ver
+
+
+
+
+{ echo "$as_me:$LINENO: checking for Erlang/OTP release" >&5
+echo $ECHO_N "checking for Erlang/OTP release... $ECHO_C" >&6; }
+if test "${erlang_cv_release+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+
+    ac_ext=erl
+ac_compile='$ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&5'
+ac_link='$ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&5 ; echo "#!/bin/sh" > conftest$ac_exeext ; echo "\"$ERL\" -run conftest start -run init stop -noshell" >> conftest$ac_exeext ; chmod +x conftest$ac_exeext'
+    if test "$cross_compiling" = yes; then
+  { { echo "$as_me:$LINENO: error: cannot run test program while cross compiling
+See \`config.log' for more details." >&5
+echo "$as_me: error: cannot run test program while cross compiling
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+else
+  cat >conftest.$ac_ext <<_ACEOF
+-module(conftest).
+-export([start/0]).
+
+start() ->
+        file:write_file("conftest.out", erlang:system_info(otp_release)),
+        halt(0)
+.
+
+_ACEOF
+rm -f conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && { ac_try='./conftest$ac_exeext'
+  { (case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_try") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+  erlang_cv_release=`cat conftest.out`
+else
+  echo "$as_me: program exited with status $ac_status" >&5
+echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+( exit $ac_status )
+if test ! -f conftest.out; then
+         { { echo "$as_me:$LINENO: error: test Erlang program execution failed
+See \`config.log' for more details." >&5
+echo "$as_me: error: test Erlang program execution failed
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+       else
+         erlang_cv_release="not found"
+       fi
+fi
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext
+fi
+
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+fi
+{ echo "$as_me:$LINENO: result: $erlang_cv_release" >&5
+echo "${ECHO_T}$erlang_cv_release" >&6; }
+ERLANG_RELEASE=$erlang_cv_release
+
+
+
+
+  # Used to indicate true or false condition
+  ax_compare_version=false
+
+  # Convert the two version strings to be compared into a format that
+  # allows a simple string comparison.  The end result is that a version
+  # string of the form 1.12.5-r617 will be converted to the form
+  # 0001001200050617.  In other words, each number is zero padded to four
+  # digits, and non digits are removed.
+
+  ax_compare_version_A=`echo "${ERLANG_ERTS_VER}" | sed -e 's/\([0-9]*\)/Z\1Z/g' \
+                     -e 's/Z\([0-9]\)Z/Z0\1Z/g' \
+                     -e 's/Z\([0-9][0-9]\)Z/Z0\1Z/g' \
+                     -e 's/Z\([0-9][0-9][0-9]\)Z/Z0\1Z/g' \
+                     -e 's/[^0-9]//g'`
+
+
+  ax_compare_version_B=`echo "5.6" | sed -e 's/\([0-9]*\)/Z\1Z/g' \
+                     -e 's/Z\([0-9]\)Z/Z0\1Z/g' \
+                     -e 's/Z\([0-9][0-9]\)Z/Z0\1Z/g' \
+                     -e 's/Z\([0-9][0-9][0-9]\)Z/Z0\1Z/g' \
+                     -e 's/[^0-9]//g'`
+
+
+    ax_compare_version=`echo "x$ax_compare_version_A
+x$ax_compare_version_B" | sed 's/^ *//' | sort -r | sed "s/x${ax_compare_version_A}/true/;s/x${ax_compare_version_B}/false/;1q"`
+
+
+
+    if test "$ax_compare_version" = "true" ; then
+    is_erlang_r12b="yes"
+    else is_erlang_r12b="no"
+  fi
+
+if test "x${is_erlang_r12b}" = "xno"; then
+	{ { echo "$as_me:$LINENO: error:
+Erlang R12B is required to build Exmpp but only Erlang $ERLANG_RELEASE was found!" >&5
+echo "$as_me: error:
+Erlang R12B is required to build Exmpp but only Erlang $ERLANG_RELEASE was found!" >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+
+{ echo "$as_me:$LINENO: checking for Erlang/OTP 'erl_interface' library subdirectory" >&5
+echo $ECHO_N "checking for Erlang/OTP 'erl_interface' library subdirectory... $ECHO_C" >&6; }
+if test "${erlang_cv_lib_dir_erl_interface+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_ext=erl
+ac_compile='$ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&5'
+ac_link='$ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&5 ; echo "#!/bin/sh" > conftest$ac_exeext ; echo "\"$ERL\" -run conftest start -run init stop -noshell" >> conftest$ac_exeext ; chmod +x conftest$ac_exeext'
+     if test "$cross_compiling" = yes; then
+  { { echo "$as_me:$LINENO: error: cannot run test program while cross compiling
+See \`config.log' for more details." >&5
+echo "$as_me: error: cannot run test program while cross compiling
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+else
+  cat >conftest.$ac_ext <<_ACEOF
+-module(conftest).
+-export([start/0]).
+
+start() ->
+            ReturnValue = case code:lib_dir("erl_interface") of
+            {error, bad_name} ->
+                file:write_file("conftest.out", "not found\n"),
+                1;
+            LibDir ->
+                file:write_file("conftest.out", LibDir),
+                0
+            end,
+            halt(ReturnValue)
+.
+
+_ACEOF
+rm -f conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && { ac_try='./conftest$ac_exeext'
+  { (case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_try") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+  erlang_cv_lib_dir_erl_interface=`cat conftest.out`
+else
+  echo "$as_me: program exited with status $ac_status" >&5
+echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+( exit $ac_status )
+if test ! -f conftest.out; then
+             { { echo "$as_me:$LINENO: error: test Erlang program execution failed
+See \`config.log' for more details." >&5
+echo "$as_me: error: test Erlang program execution failed
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+         else
+             erlang_cv_lib_dir_erl_interface="not found"
+         fi
+fi
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext
+fi
+
+
+     ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+fi
+{ echo "$as_me:$LINENO: result: $erlang_cv_lib_dir_erl_interface" >&5
+echo "${ECHO_T}$erlang_cv_lib_dir_erl_interface" >&6; }
+{ echo "$as_me:$LINENO: checking for Erlang/OTP 'erl_interface' library version" >&5
+echo $ECHO_N "checking for Erlang/OTP 'erl_interface' library version... $ECHO_C" >&6; }
+if test "${erlang_cv_lib_ver_erl_interface+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test "$erlang_cv_lib_dir_erl_interface" = "not found"; then
+  erlang_cv_lib_ver_erl_interface="not found"
+else
+  erlang_cv_lib_ver_erl_interface=`echo "$erlang_cv_lib_dir_erl_interface" | sed -n -e 's,^.*-\([^/-]*\)$,\1,p'`
+fi
+
+fi
+{ echo "$as_me:$LINENO: result: $erlang_cv_lib_ver_erl_interface" >&5
+echo "${ECHO_T}$erlang_cv_lib_ver_erl_interface" >&6; }
+ERLANG_LIB_DIR_erl_interface=$erlang_cv_lib_dir_erl_interface
+
+ERLANG_LIB_VER_erl_interface=$erlang_cv_lib_ver_erl_interface
+
+if test "$erlang_cv_lib_dir_erl_interface" = "not found"; then
+  { { echo "$as_me:$LINENO: error: erl_interface was not found!" >&5
+echo "$as_me: error: erl_interface was not found!" >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+
+
+if test "x${ESCRIPT}" = "x"; then
+	{ echo "$as_me:$LINENO: checking for Erlang/OTP 'eunit' library subdirectory" >&5
+echo $ECHO_N "checking for Erlang/OTP 'eunit' library subdirectory... $ECHO_C" >&6; }
+if test "${erlang_cv_lib_dir_eunit+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_ext=erl
+ac_compile='$ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&5'
+ac_link='$ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&5 ; echo "#!/bin/sh" > conftest$ac_exeext ; echo "\"$ERL\" -run conftest start -run init stop -noshell" >> conftest$ac_exeext ; chmod +x conftest$ac_exeext'
+     if test "$cross_compiling" = yes; then
+  { { echo "$as_me:$LINENO: error: cannot run test program while cross compiling
+See \`config.log' for more details." >&5
+echo "$as_me: error: cannot run test program while cross compiling
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+else
+  cat >conftest.$ac_ext <<_ACEOF
+-module(conftest).
+-export([start/0]).
+
+start() ->
+            ReturnValue = case code:lib_dir("eunit") of
+            {error, bad_name} ->
+                file:write_file("conftest.out", "not found\n"),
+                1;
+            LibDir ->
+                file:write_file("conftest.out", LibDir),
+                0
+            end,
+            halt(ReturnValue)
+.
+
+_ACEOF
+rm -f conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && { ac_try='./conftest$ac_exeext'
+  { (case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_try") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+  erlang_cv_lib_dir_eunit=`cat conftest.out`
+else
+  echo "$as_me: program exited with status $ac_status" >&5
+echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+( exit $ac_status )
+if test ! -f conftest.out; then
+             { { echo "$as_me:$LINENO: error: test Erlang program execution failed
+See \`config.log' for more details." >&5
+echo "$as_me: error: test Erlang program execution failed
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+         else
+             erlang_cv_lib_dir_eunit="not found"
+         fi
+fi
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext
+fi
+
+
+     ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+fi
+{ echo "$as_me:$LINENO: result: $erlang_cv_lib_dir_eunit" >&5
+echo "${ECHO_T}$erlang_cv_lib_dir_eunit" >&6; }
+{ echo "$as_me:$LINENO: checking for Erlang/OTP 'eunit' library version" >&5
+echo $ECHO_N "checking for Erlang/OTP 'eunit' library version... $ECHO_C" >&6; }
+if test "${erlang_cv_lib_ver_eunit+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test "$erlang_cv_lib_dir_eunit" = "not found"; then
+  erlang_cv_lib_ver_eunit="not found"
+else
+  erlang_cv_lib_ver_eunit=`echo "$erlang_cv_lib_dir_eunit" | sed -n -e 's,^.*-\([^/-]*\)$,\1,p'`
+fi
+
+fi
+{ echo "$as_me:$LINENO: result: $erlang_cv_lib_ver_eunit" >&5
+echo "${ECHO_T}$erlang_cv_lib_ver_eunit" >&6; }
+ERLANG_LIB_DIR_eunit=$erlang_cv_lib_dir_eunit
+
+ERLANG_LIB_VER_eunit=$erlang_cv_lib_ver_eunit
+
+
+
+fi
+
+if test "x${prefix}" = "xNONE"; then
+		ERLANG_INSTALL_LIB_DIR="${ERLANG_LIB_DIR}"
+else
+		ERLANG_INSTALL_LIB_DIR="${prefix}"
+fi
+
+{ echo "$as_me:$LINENO: checking for Erlang/OTP library installation base directory" >&5
+echo $ECHO_N "checking for Erlang/OTP library installation base directory... $ECHO_C" >&6; }
+
+if test -n "$ERLANG_INSTALL_LIB_DIR"; then
+    { echo "$as_me:$LINENO: result: $ERLANG_INSTALL_LIB_DIR" >&5
+echo "${ECHO_T}$ERLANG_INSTALL_LIB_DIR" >&6; }
+else
+    ERLANG_INSTALL_LIB_DIR='${libdir}/erlang/lib'
+
+    { echo "$as_me:$LINENO: result: $libdir/erlang/lib" >&5
+echo "${ECHO_T}$libdir/erlang/lib" >&6; }
+fi
+
+{ echo "$as_me:$LINENO: checking for Erlang/OTP 'exmpp' library installation subdirectory" >&5
+echo $ECHO_N "checking for Erlang/OTP 'exmpp' library installation subdirectory... $ECHO_C" >&6; }
+
+if test -n "$ERLANG_INSTALL_LIB_DIR_exmpp"; then
+    { echo "$as_me:$LINENO: result: $ERLANG_INSTALL_LIB_DIR_exmpp" >&5
+echo "${ECHO_T}$ERLANG_INSTALL_LIB_DIR_exmpp" >&6; }
+else
+    ERLANG_INSTALL_LIB_DIR_exmpp='${ERLANG_INSTALL_LIB_DIR}/exmpp-${VERSION}'
+
+    { echo "$as_me:$LINENO: result: $ERLANG_INSTALL_LIB_DIR/exmpp-${VERSION}" >&5
+echo "${ECHO_T}$ERLANG_INSTALL_LIB_DIR/exmpp-${VERSION}" >&6; }
+fi
+
+
+{ echo "$as_me:$LINENO: checking for SMP support" >&5
+echo $ECHO_N "checking for SMP support... $ECHO_C" >&6; }
+
+# Check whether --enable-smp-support was given.
+if test "${enable_smp_support+set}" = set; then
+  enableval=$enable_smp_support;
+else
+  enable_smp_support="yes"
+fi
+
+
+
+if test "x${enable_smp_support}" = "xyes"; then
+  ENABLE_SMP_SUPPORT_TRUE=
+  ENABLE_SMP_SUPPORT_FALSE='#'
+else
+  ENABLE_SMP_SUPPORT_TRUE='#'
+  ENABLE_SMP_SUPPORT_FALSE=
+fi
+
+
+if test "x${enable_smp_support}" = "xyes"; then
+
+cat >>confdefs.h <<\_ACEOF
+#define SMP_SUPPORT
+_ACEOF
+
+
+cat >>confdefs.h <<\_ACEOF
+#define USE_RWLOCK
+_ACEOF
+
+
+cat >>confdefs.h <<\_ACEOF
+#define _REENTRANT
+_ACEOF
+
+
+	{ echo "$as_me:$LINENO: result: yes (Erlang $ERLANG_RELEASE)" >&5
+echo "${ECHO_T}yes (Erlang $ERLANG_RELEASE)" >&6; }
+else
+	{ echo "$as_me:$LINENO: result: no (disabled by user)" >&5
+echo "${ECHO_T}no (disabled by user)" >&6; }
+fi
+
+if test "x${ERLANG_LIB_DIR_eunit}" != "xnot found" -a "x${ESCRIPT}" != "x"; then
+	enable_testsuite="yes"
+else
+	enable_testsuite="no"
+fi
+
+
+if test "x${enable_testsuite}" = "xyes"; then
+  ENABLE_TESTSUITE_TRUE=
+  ENABLE_TESTSUITE_FALSE='#'
+else
+  ENABLE_TESTSUITE_TRUE='#'
+  ENABLE_TESTSUITE_FALSE=
+fi
+
+
+
+echo
+
+  text=`$ECHO $seo "%BXML parsers dependencies%b" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "%BXML parsers dependencies%b" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+
+
+
+# Check whether --with-expat was given.
+if test "${with_expat+set}" = set; then
+  withval=$with_expat; expat_prefix="$withval"
+fi
+
+
+  no_expat=""
+  EXPAT_CPPFLAGS=""
+  EXPAT_LDFLAGS=""
+  EXPAT_LIBS="-lexpat"
+
+  if test x"${expat_prefix:+set}" = "xset"; then
+    EXPAT_CPPFLAGS="-I${expat_prefix%%\/}/include ${EXPAT_CPPFLAGS}"
+    EXPAT_LDFLAGS="-L${expat_prefix%%\/}/lib ${EXPAT_LDFLAGS}"
+  fi
+
+  ac_save_CPPFLAGS="$CPPFLAGS"
+  ac_save_LDFLAGS="$LDFLAGS"
+  ac_save_LIBS="$LIBS"
+  CPPFLAGS="$CPPFLAGS $EXPAT_CPPFLAGS"
+  LDFLAGS="$LDFLAGS $EXPAT_LDFLAGS"
+
+
+for ac_header in expat.h
+do
+as_ac_Header=`echo "ac_cv_header_$ac_header" | $as_tr_sh`
+if { as_var=$as_ac_Header; eval "test \"\${$as_var+set}\" = set"; }; then
+  { echo "$as_me:$LINENO: checking for $ac_header" >&5
+echo $ECHO_N "checking for $ac_header... $ECHO_C" >&6; }
+if { as_var=$as_ac_Header; eval "test \"\${$as_var+set}\" = set"; }; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+fi
+ac_res=`eval echo '${'$as_ac_Header'}'`
+	       { echo "$as_me:$LINENO: result: $ac_res" >&5
+echo "${ECHO_T}$ac_res" >&6; }
+else
+  # Is the header compilable?
+{ echo "$as_me:$LINENO: checking $ac_header usability" >&5
+echo $ECHO_N "checking $ac_header usability... $ECHO_C" >&6; }
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+$ac_includes_default
+#include <$ac_header>
+_ACEOF
+rm -f conftest.$ac_objext
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
+  ac_header_compiler=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_header_compiler=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+{ echo "$as_me:$LINENO: result: $ac_header_compiler" >&5
+echo "${ECHO_T}$ac_header_compiler" >&6; }
+
+# Is the header present?
+{ echo "$as_me:$LINENO: checking $ac_header presence" >&5
+echo $ECHO_N "checking $ac_header presence... $ECHO_C" >&6; }
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <$ac_header>
+_ACEOF
+if { (ac_try="$ac_cpp conftest.$ac_ext"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } >/dev/null && {
+	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       }; then
+  ac_header_preproc=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+  ac_header_preproc=no
+fi
+
+rm -f conftest.err conftest.$ac_ext
+{ echo "$as_me:$LINENO: result: $ac_header_preproc" >&5
+echo "${ECHO_T}$ac_header_preproc" >&6; }
+
+# So?  What about this header?
+case $ac_header_compiler:$ac_header_preproc:$ac_c_preproc_warn_flag in
+  yes:no: )
+    { echo "$as_me:$LINENO: WARNING: $ac_header: accepted by the compiler, rejected by the preprocessor!" >&5
+echo "$as_me: WARNING: $ac_header: accepted by the compiler, rejected by the preprocessor!" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header: proceeding with the compiler's result" >&5
+echo "$as_me: WARNING: $ac_header: proceeding with the compiler's result" >&2;}
+    ac_header_preproc=yes
+    ;;
+  no:yes:* )
+    { echo "$as_me:$LINENO: WARNING: $ac_header: present but cannot be compiled" >&5
+echo "$as_me: WARNING: $ac_header: present but cannot be compiled" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header:     check for missing prerequisite headers?" >&5
+echo "$as_me: WARNING: $ac_header:     check for missing prerequisite headers?" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header: see the Autoconf documentation" >&5
+echo "$as_me: WARNING: $ac_header: see the Autoconf documentation" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header:     section \"Present But Cannot Be Compiled\"" >&5
+echo "$as_me: WARNING: $ac_header:     section \"Present But Cannot Be Compiled\"" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header: proceeding with the preprocessor's result" >&5
+echo "$as_me: WARNING: $ac_header: proceeding with the preprocessor's result" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header: in the future, the compiler will take precedence" >&5
+echo "$as_me: WARNING: $ac_header: in the future, the compiler will take precedence" >&2;}
+    ( cat <<\_ASBOX
+## ---------------------------------------- ##
+## Report this to js.pedron@meetic-corp.com ##
+## ---------------------------------------- ##
+_ASBOX
+     ) | sed "s/^/$as_me: WARNING:     /" >&2
+    ;;
+esac
+{ echo "$as_me:$LINENO: checking for $ac_header" >&5
+echo $ECHO_N "checking for $ac_header... $ECHO_C" >&6; }
+if { as_var=$as_ac_Header; eval "test \"\${$as_var+set}\" = set"; }; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  eval "$as_ac_Header=\$ac_header_preproc"
+fi
+ac_res=`eval echo '${'$as_ac_Header'}'`
+	       { echo "$as_me:$LINENO: result: $ac_res" >&5
+echo "${ECHO_T}$ac_res" >&6; }
+
+fi
+if test `eval echo '${'$as_ac_Header'}'` = yes; then
+  cat >>confdefs.h <<_ACEOF
+#define `echo "HAVE_$ac_header" | $as_tr_cpp` 1
+_ACEOF
+
+else
+  no_expat="yes"
+fi
+
+done
+
+
+
+{ echo "$as_me:$LINENO: checking for XML_ParserCreate in -lexpat" >&5
+echo $ECHO_N "checking for XML_ParserCreate in -lexpat... $ECHO_C" >&6; }
+if test "${ac_cv_lib_expat_XML_ParserCreate+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-lexpat  $LIBS"
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char XML_ParserCreate ();
+int
+main ()
+{
+return XML_ParserCreate ();
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+  ac_cv_lib_expat_XML_ParserCreate=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_cv_lib_expat_XML_ParserCreate=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_lib_expat_XML_ParserCreate" >&5
+echo "${ECHO_T}$ac_cv_lib_expat_XML_ParserCreate" >&6; }
+if test $ac_cv_lib_expat_XML_ParserCreate = yes; then
+  cat >>confdefs.h <<_ACEOF
+#define HAVE_LIBEXPAT 1
+_ACEOF
+
+  LIBS="-lexpat $LIBS"
+
+else
+  no_expat="yes"
+fi
+
+
+  CPPFLAGS="$ac_save_CPPFLAGS"
+  LDFLAGS="$ac_save_LDFLAGS"
+  LIBS="$ac_save_LIBS"
+
+  { echo "$as_me:$LINENO: checking for Expat library" >&5
+echo $ECHO_N "checking for Expat library... $ECHO_C" >&6; }
+  if test x"$no_expat" = "x"; then
+    { echo "$as_me:$LINENO: result: yes" >&5
+echo "${ECHO_T}yes" >&6; }
+    build_with_expat="yes"
+  else
+    { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+    build_with_expat="no"
+
+    EXPAT_CPPFLAGS=""
+    EXPAT_LDFLAGS=""
+    EXPAT_LIBS=""
+  fi
+
+
+
+
+
+
+
+if test "x${build_with_expat}" = "xyes"; then
+  WITH_EXPAT_TRUE=
+  WITH_EXPAT_FALSE='#'
+else
+  WITH_EXPAT_TRUE='#'
+  WITH_EXPAT_FALSE=
+fi
+
+if test "x${build_with_expat}" = "xyes"; then
+	append_to_EMKOPTS "{d, 'HAVE_EXPAT'}"
+fi
+
+
+
+if test "x$ac_cv_env_PKG_CONFIG_set" != "xset"; then
+	if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}pkg-config", so it can be a program name with args.
+set dummy ${ac_tool_prefix}pkg-config; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_path_PKG_CONFIG+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  case $PKG_CONFIG in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_PKG_CONFIG="$PKG_CONFIG" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_PKG_CONFIG="$as_dir/$ac_word$ac_exec_ext"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+PKG_CONFIG=$ac_cv_path_PKG_CONFIG
+if test -n "$PKG_CONFIG"; then
+  { echo "$as_me:$LINENO: result: $PKG_CONFIG" >&5
+echo "${ECHO_T}$PKG_CONFIG" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_path_PKG_CONFIG"; then
+  ac_pt_PKG_CONFIG=$PKG_CONFIG
+  # Extract the first word of "pkg-config", so it can be a program name with args.
+set dummy pkg-config; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_path_ac_pt_PKG_CONFIG+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  case $ac_pt_PKG_CONFIG in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_ac_pt_PKG_CONFIG="$ac_pt_PKG_CONFIG" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_ac_pt_PKG_CONFIG="$as_dir/$ac_word$ac_exec_ext"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+ac_pt_PKG_CONFIG=$ac_cv_path_ac_pt_PKG_CONFIG
+if test -n "$ac_pt_PKG_CONFIG"; then
+  { echo "$as_me:$LINENO: result: $ac_pt_PKG_CONFIG" >&5
+echo "${ECHO_T}$ac_pt_PKG_CONFIG" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+  if test "x$ac_pt_PKG_CONFIG" = x; then
+    PKG_CONFIG=""
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ echo "$as_me:$LINENO: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&5
+echo "$as_me: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&2;}
+ac_tool_warned=yes ;;
+esac
+    PKG_CONFIG=$ac_pt_PKG_CONFIG
+  fi
+else
+  PKG_CONFIG="$ac_cv_path_PKG_CONFIG"
+fi
+
+fi
+if test -n "$PKG_CONFIG"; then
+	_pkg_min_version=0.9.0
+	{ echo "$as_me:$LINENO: checking pkg-config is at least version $_pkg_min_version" >&5
+echo $ECHO_N "checking pkg-config is at least version $_pkg_min_version... $ECHO_C" >&6; }
+	if $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then
+		{ echo "$as_me:$LINENO: result: yes" >&5
+echo "${ECHO_T}yes" >&6; }
+	else
+		{ echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+		PKG_CONFIG=""
+	fi
+
+fi
+
+pkg_failed=no
+{ echo "$as_me:$LINENO: checking for LIBXML2" >&5
+echo $ECHO_N "checking for LIBXML2... $ECHO_C" >&6; }
+
+if test -n "$LIBXML2_CFLAGS"; then
+    pkg_cv_LIBXML2_CFLAGS="$LIBXML2_CFLAGS"
+ elif test -n "$PKG_CONFIG"; then
+    if test -n "$PKG_CONFIG" && \
+    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"libxml-2.0\"") >&5
+  ($PKG_CONFIG --exists --print-errors "libxml-2.0") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; then
+  pkg_cv_LIBXML2_CFLAGS=`$PKG_CONFIG --cflags "libxml-2.0" 2>/dev/null`
+else
+  pkg_failed=yes
+fi
+ else
+    pkg_failed=untried
+fi
+if test -n "$LIBXML2_LIBS"; then
+    pkg_cv_LIBXML2_LIBS="$LIBXML2_LIBS"
+ elif test -n "$PKG_CONFIG"; then
+    if test -n "$PKG_CONFIG" && \
+    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"libxml-2.0\"") >&5
+  ($PKG_CONFIG --exists --print-errors "libxml-2.0") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; then
+  pkg_cv_LIBXML2_LIBS=`$PKG_CONFIG --libs "libxml-2.0" 2>/dev/null`
+else
+  pkg_failed=yes
+fi
+ else
+    pkg_failed=untried
+fi
+
+
+
+if test $pkg_failed = yes; then
+
+if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
+        _pkg_short_errors_supported=yes
+else
+        _pkg_short_errors_supported=no
+fi
+        if test $_pkg_short_errors_supported = yes; then
+	        LIBXML2_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors "libxml-2.0" 2>&1`
+        else
+	        LIBXML2_PKG_ERRORS=`$PKG_CONFIG --print-errors "libxml-2.0" 2>&1`
+        fi
+	# Put the nasty error message in config.log where it belongs
+	echo "$LIBXML2_PKG_ERRORS" >&5
+
+	{ echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+                build_with_libxml2="no"
+elif test $pkg_failed = untried; then
+	build_with_libxml2="no"
+else
+	LIBXML2_CFLAGS=$pkg_cv_LIBXML2_CFLAGS
+	LIBXML2_LIBS=$pkg_cv_LIBXML2_LIBS
+        { echo "$as_me:$LINENO: result: yes" >&5
+echo "${ECHO_T}yes" >&6; }
+	build_with_libxml2="yes"
+fi
+
+
+if test "x${build_with_libxml2}" = "xyes"; then
+  WITH_LIBXML2_TRUE=
+  WITH_LIBXML2_FALSE='#'
+else
+  WITH_LIBXML2_TRUE='#'
+  WITH_LIBXML2_FALSE=
+fi
+
+if test "x${build_with_libxml2}" = "xyes"; then
+	append_to_EMKOPTS "{d, 'HAVE_LIBXML2'}"
+fi
+
+echo
+
+  text=`$ECHO $seo "%BTLS engines dependencies%b" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "%BTLS engines dependencies%b" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+
+
+
+# Check whether --with-openssl was given.
+if test "${with_openssl+set}" = set; then
+  withval=$with_openssl; openssl_prefix="$withval"
+fi
+
+
+  no_openssl=""
+  OPENSSL_CPPFLAGS=""
+  OPENSSL_LDFLAGS=""
+  OPENSSL_LIBS="-lssl -lcrypto"
+
+  if test x"${openssl_prefix:+set}" = "xset"; then
+    OPENSSL_CPPFLAGS="-I${openssl_prefix%%\/}/include ${OPENSSL_CPPFLAGS}"
+    OPENSSL_LDFLAGS="-L${openssl_prefix%%\/}/lib ${OPENSSL_LDFLAGS}"
+  fi
+
+  ac_save_CPPFLAGS="$CPPFLAGS"
+  ac_save_LDFLAGS="$LDFLAGS"
+  ac_save_LIBS="$LIBS"
+  CPPFLAGS="$CPPFLAGS $OPENSSL_CPPFLAGS"
+  LDFLAGS="$LDFLAGS $OPENSSL_LDFLAGS"
+
+
+for ac_header in openssl/ssl.h
+do
+as_ac_Header=`echo "ac_cv_header_$ac_header" | $as_tr_sh`
+if { as_var=$as_ac_Header; eval "test \"\${$as_var+set}\" = set"; }; then
+  { echo "$as_me:$LINENO: checking for $ac_header" >&5
+echo $ECHO_N "checking for $ac_header... $ECHO_C" >&6; }
+if { as_var=$as_ac_Header; eval "test \"\${$as_var+set}\" = set"; }; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+fi
+ac_res=`eval echo '${'$as_ac_Header'}'`
+	       { echo "$as_me:$LINENO: result: $ac_res" >&5
+echo "${ECHO_T}$ac_res" >&6; }
+else
+  # Is the header compilable?
+{ echo "$as_me:$LINENO: checking $ac_header usability" >&5
+echo $ECHO_N "checking $ac_header usability... $ECHO_C" >&6; }
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+$ac_includes_default
+#include <$ac_header>
+_ACEOF
+rm -f conftest.$ac_objext
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
+  ac_header_compiler=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_header_compiler=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+{ echo "$as_me:$LINENO: result: $ac_header_compiler" >&5
+echo "${ECHO_T}$ac_header_compiler" >&6; }
+
+# Is the header present?
+{ echo "$as_me:$LINENO: checking $ac_header presence" >&5
+echo $ECHO_N "checking $ac_header presence... $ECHO_C" >&6; }
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <$ac_header>
+_ACEOF
+if { (ac_try="$ac_cpp conftest.$ac_ext"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } >/dev/null && {
+	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       }; then
+  ac_header_preproc=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+  ac_header_preproc=no
+fi
+
+rm -f conftest.err conftest.$ac_ext
+{ echo "$as_me:$LINENO: result: $ac_header_preproc" >&5
+echo "${ECHO_T}$ac_header_preproc" >&6; }
+
+# So?  What about this header?
+case $ac_header_compiler:$ac_header_preproc:$ac_c_preproc_warn_flag in
+  yes:no: )
+    { echo "$as_me:$LINENO: WARNING: $ac_header: accepted by the compiler, rejected by the preprocessor!" >&5
+echo "$as_me: WARNING: $ac_header: accepted by the compiler, rejected by the preprocessor!" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header: proceeding with the compiler's result" >&5
+echo "$as_me: WARNING: $ac_header: proceeding with the compiler's result" >&2;}
+    ac_header_preproc=yes
+    ;;
+  no:yes:* )
+    { echo "$as_me:$LINENO: WARNING: $ac_header: present but cannot be compiled" >&5
+echo "$as_me: WARNING: $ac_header: present but cannot be compiled" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header:     check for missing prerequisite headers?" >&5
+echo "$as_me: WARNING: $ac_header:     check for missing prerequisite headers?" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header: see the Autoconf documentation" >&5
+echo "$as_me: WARNING: $ac_header: see the Autoconf documentation" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header:     section \"Present But Cannot Be Compiled\"" >&5
+echo "$as_me: WARNING: $ac_header:     section \"Present But Cannot Be Compiled\"" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header: proceeding with the preprocessor's result" >&5
+echo "$as_me: WARNING: $ac_header: proceeding with the preprocessor's result" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header: in the future, the compiler will take precedence" >&5
+echo "$as_me: WARNING: $ac_header: in the future, the compiler will take precedence" >&2;}
+    ( cat <<\_ASBOX
+## ---------------------------------------- ##
+## Report this to js.pedron@meetic-corp.com ##
+## ---------------------------------------- ##
+_ASBOX
+     ) | sed "s/^/$as_me: WARNING:     /" >&2
+    ;;
+esac
+{ echo "$as_me:$LINENO: checking for $ac_header" >&5
+echo $ECHO_N "checking for $ac_header... $ECHO_C" >&6; }
+if { as_var=$as_ac_Header; eval "test \"\${$as_var+set}\" = set"; }; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  eval "$as_ac_Header=\$ac_header_preproc"
+fi
+ac_res=`eval echo '${'$as_ac_Header'}'`
+	       { echo "$as_me:$LINENO: result: $ac_res" >&5
+echo "${ECHO_T}$ac_res" >&6; }
+
+fi
+if test `eval echo '${'$as_ac_Header'}'` = yes; then
+  cat >>confdefs.h <<_ACEOF
+#define `echo "HAVE_$ac_header" | $as_tr_cpp` 1
+_ACEOF
+
+else
+  no_openssl="yes"
+fi
+
+done
+
+
+
+{ echo "$as_me:$LINENO: checking for SSL_CTX_new in -lssl" >&5
+echo $ECHO_N "checking for SSL_CTX_new in -lssl... $ECHO_C" >&6; }
+if test "${ac_cv_lib_ssl_SSL_CTX_new+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-lssl  $LIBS"
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char SSL_CTX_new ();
+int
+main ()
+{
+return SSL_CTX_new ();
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+  ac_cv_lib_ssl_SSL_CTX_new=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_cv_lib_ssl_SSL_CTX_new=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_lib_ssl_SSL_CTX_new" >&5
+echo "${ECHO_T}$ac_cv_lib_ssl_SSL_CTX_new" >&6; }
+if test $ac_cv_lib_ssl_SSL_CTX_new = yes; then
+  cat >>confdefs.h <<_ACEOF
+#define HAVE_LIBSSL 1
+_ACEOF
+
+  LIBS="-lssl $LIBS"
+
+else
+  no_openssl="yes"
+fi
+
+
+  CPPFLAGS="$ac_save_CPPFLAGS"
+  LDFLAGS="$ac_save_LDFLAGS"
+  LIBS="$ac_save_LIBS"
+
+  { echo "$as_me:$LINENO: checking for OpenSSL library" >&5
+echo $ECHO_N "checking for OpenSSL library... $ECHO_C" >&6; }
+  if test x"$no_openssl" = "x"; then
+    { echo "$as_me:$LINENO: result: yes" >&5
+echo "${ECHO_T}yes" >&6; }
+    build_with_openssl="yes"
+  else
+    { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+    build_with_openssl="no"
+
+    OPENSSL_CPPFLAGS=""
+    OPENSSL_LDFLAGS=""
+    OPENSSL_LIBS=""
+  fi
+
+
+
+
+
+
+
+if test "x${build_with_openssl}" = "xyes"; then
+  WITH_OPENSSL_TRUE=
+  WITH_OPENSSL_FALSE='#'
+else
+  WITH_OPENSSL_TRUE='#'
+  WITH_OPENSSL_FALSE=
+fi
+
+if test "x${build_with_openssl}" = "xyes"; then
+	append_to_EMKOPTS "{d, 'HAVE_OPENSSL'}"
+fi
+
+echo
+
+  text=`$ECHO $seo "%BCompression engines dependencies%b" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "%BCompression engines dependencies%b" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+
+
+
+# Check whether --with-zlib was given.
+if test "${with_zlib+set}" = set; then
+  withval=$with_zlib; zlib_prefix="$withval"
+fi
+
+
+  no_zlib=""
+  ZLIB_CPPFLAGS=""
+  ZLIB_LDFLAGS=""
+  ZLIB_LIBS="-lz"
+
+  if test x"${zlib_prefix:+set}" = "xset"; then
+    ZLIB_CPPFLAGS="-I${zlib_prefix%%\/}/include ${ZLIB_CPPFLAGS}"
+    ZLIB_LDFLAGS="-L${zlib_prefix%%\/}/lib ${ZLIB_LDFLAGS}"
+  fi
+
+  ac_save_CPPFLAGS="$CPPFLAGS"
+  ac_save_LDFLAGS="$LDFLAGS"
+  ac_save_LIBS="$LIBS"
+  CPPFLAGS="$CPPFLAGS $ZLIB_CPPFLAGS"
+  LDFLAGS="$LDFLAGS $ZLIB_LDFLAGS"
+
+
+for ac_header in zlib.h
+do
+as_ac_Header=`echo "ac_cv_header_$ac_header" | $as_tr_sh`
+if { as_var=$as_ac_Header; eval "test \"\${$as_var+set}\" = set"; }; then
+  { echo "$as_me:$LINENO: checking for $ac_header" >&5
+echo $ECHO_N "checking for $ac_header... $ECHO_C" >&6; }
+if { as_var=$as_ac_Header; eval "test \"\${$as_var+set}\" = set"; }; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+fi
+ac_res=`eval echo '${'$as_ac_Header'}'`
+	       { echo "$as_me:$LINENO: result: $ac_res" >&5
+echo "${ECHO_T}$ac_res" >&6; }
+else
+  # Is the header compilable?
+{ echo "$as_me:$LINENO: checking $ac_header usability" >&5
+echo $ECHO_N "checking $ac_header usability... $ECHO_C" >&6; }
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+$ac_includes_default
+#include <$ac_header>
+_ACEOF
+rm -f conftest.$ac_objext
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
+  ac_header_compiler=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_header_compiler=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+{ echo "$as_me:$LINENO: result: $ac_header_compiler" >&5
+echo "${ECHO_T}$ac_header_compiler" >&6; }
+
+# Is the header present?
+{ echo "$as_me:$LINENO: checking $ac_header presence" >&5
+echo $ECHO_N "checking $ac_header presence... $ECHO_C" >&6; }
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <$ac_header>
+_ACEOF
+if { (ac_try="$ac_cpp conftest.$ac_ext"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } >/dev/null && {
+	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       }; then
+  ac_header_preproc=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+  ac_header_preproc=no
+fi
+
+rm -f conftest.err conftest.$ac_ext
+{ echo "$as_me:$LINENO: result: $ac_header_preproc" >&5
+echo "${ECHO_T}$ac_header_preproc" >&6; }
+
+# So?  What about this header?
+case $ac_header_compiler:$ac_header_preproc:$ac_c_preproc_warn_flag in
+  yes:no: )
+    { echo "$as_me:$LINENO: WARNING: $ac_header: accepted by the compiler, rejected by the preprocessor!" >&5
+echo "$as_me: WARNING: $ac_header: accepted by the compiler, rejected by the preprocessor!" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header: proceeding with the compiler's result" >&5
+echo "$as_me: WARNING: $ac_header: proceeding with the compiler's result" >&2;}
+    ac_header_preproc=yes
+    ;;
+  no:yes:* )
+    { echo "$as_me:$LINENO: WARNING: $ac_header: present but cannot be compiled" >&5
+echo "$as_me: WARNING: $ac_header: present but cannot be compiled" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header:     check for missing prerequisite headers?" >&5
+echo "$as_me: WARNING: $ac_header:     check for missing prerequisite headers?" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header: see the Autoconf documentation" >&5
+echo "$as_me: WARNING: $ac_header: see the Autoconf documentation" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header:     section \"Present But Cannot Be Compiled\"" >&5
+echo "$as_me: WARNING: $ac_header:     section \"Present But Cannot Be Compiled\"" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header: proceeding with the preprocessor's result" >&5
+echo "$as_me: WARNING: $ac_header: proceeding with the preprocessor's result" >&2;}
+    { echo "$as_me:$LINENO: WARNING: $ac_header: in the future, the compiler will take precedence" >&5
+echo "$as_me: WARNING: $ac_header: in the future, the compiler will take precedence" >&2;}
+    ( cat <<\_ASBOX
+## ---------------------------------------- ##
+## Report this to js.pedron@meetic-corp.com ##
+## ---------------------------------------- ##
+_ASBOX
+     ) | sed "s/^/$as_me: WARNING:     /" >&2
+    ;;
+esac
+{ echo "$as_me:$LINENO: checking for $ac_header" >&5
+echo $ECHO_N "checking for $ac_header... $ECHO_C" >&6; }
+if { as_var=$as_ac_Header; eval "test \"\${$as_var+set}\" = set"; }; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  eval "$as_ac_Header=\$ac_header_preproc"
+fi
+ac_res=`eval echo '${'$as_ac_Header'}'`
+	       { echo "$as_me:$LINENO: result: $ac_res" >&5
+echo "${ECHO_T}$ac_res" >&6; }
+
+fi
+if test `eval echo '${'$as_ac_Header'}'` = yes; then
+  cat >>confdefs.h <<_ACEOF
+#define `echo "HAVE_$ac_header" | $as_tr_cpp` 1
+_ACEOF
+
+else
+  no_zlib="yes"
+fi
+
+done
+
+
+
+{ echo "$as_me:$LINENO: checking for zlibVersion in -lz" >&5
+echo $ECHO_N "checking for zlibVersion in -lz... $ECHO_C" >&6; }
+if test "${ac_cv_lib_z_zlibVersion+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-lz  $LIBS"
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char zlibVersion ();
+int
+main ()
+{
+return zlibVersion ();
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+  ac_cv_lib_z_zlibVersion=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_cv_lib_z_zlibVersion=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_lib_z_zlibVersion" >&5
+echo "${ECHO_T}$ac_cv_lib_z_zlibVersion" >&6; }
+if test $ac_cv_lib_z_zlibVersion = yes; then
+  cat >>confdefs.h <<_ACEOF
+#define HAVE_LIBZ 1
+_ACEOF
+
+  LIBS="-lz $LIBS"
+
+else
+  no_zlib="yes"
+fi
+
+
+  CPPFLAGS="$ac_save_CPPFLAGS"
+  LDFLAGS="$ac_save_LDFLAGS"
+  LIBS="$ac_save_LIBS"
+
+  { echo "$as_me:$LINENO: checking for Zlib library" >&5
+echo $ECHO_N "checking for Zlib library... $ECHO_C" >&6; }
+  if test x"$no_zlib" = "x"; then
+    { echo "$as_me:$LINENO: result: yes" >&5
+echo "${ECHO_T}yes" >&6; }
+    build_with_zlib="yes"
+  else
+    { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+    build_with_zlib="no"
+
+    ZLIB_CPPFLAGS=""
+    ZLIB_LDFLAGS=""
+    ZLIB_LIBS=""
+  fi
+
+
+
+
+
+
+
+if test "x${build_with_zlib}" = "xyes"; then
+  WITH_ZLIB_TRUE=
+  WITH_ZLIB_FALSE='#'
+else
+  WITH_ZLIB_TRUE='#'
+  WITH_ZLIB_FALSE=
+fi
+
+if test "x${build_with_zlib}" = "xyes"; then
+	append_to_EMKOPTS "{d, 'HAVE_ZLIB'}"
+fi
+
+
+echo
+
+  text=`$ECHO $seo "%BDetect Operating System%b" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "%BDetect Operating System%b" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+
+{ echo "$as_me:$LINENO: checking target system type" >&5
+echo $ECHO_N "checking target system type... $ECHO_C" >&6; }
+if test "${ac_cv_target+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test "x$target_alias" = x; then
+  ac_cv_target=$ac_cv_host
+else
+  ac_cv_target=`$SHELL "$ac_aux_dir/config.sub" $target_alias` ||
+    { { echo "$as_me:$LINENO: error: $SHELL $ac_aux_dir/config.sub $target_alias failed" >&5
+echo "$as_me: error: $SHELL $ac_aux_dir/config.sub $target_alias failed" >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_target" >&5
+echo "${ECHO_T}$ac_cv_target" >&6; }
+case $ac_cv_target in
+*-*-*) ;;
+*) { { echo "$as_me:$LINENO: error: invalid value of canonical target" >&5
+echo "$as_me: error: invalid value of canonical target" >&2;}
+   { (exit 1); exit 1; }; };;
+esac
+target=$ac_cv_target
+ac_save_IFS=$IFS; IFS='-'
+set x $ac_cv_target
+shift
+target_cpu=$1
+target_vendor=$2
+shift; shift
+# Remember, the first character of IFS is used to create $*,
+# except with old shells:
+target_os=$*
+IFS=$ac_save_IFS
+case $target_os in *\ *) target_os=`echo "$target_os" | sed 's/ /-/g'`;; esac
+
+
+# The aliases save the names the user supplied, while $host etc.
+# will get canonicalized.
+test -n "$target_alias" &&
+  test "$program_prefix$program_suffix$program_transform_name" = \
+    NONENONEs,x,x, &&
+  program_prefix=${target_alias}-
+#AC_DEFINE_UNQUOTED(CPU_VENDOR_OS, "$target")
+#AC_SUBST(target_os)
+case "$target_os" in
+    *darwin10*)
+	echo "Target OS is: Darwin10 (Mac OS X)"
+	ac_ext=erl
+ac_compile='$ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&5'
+ac_link='$ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&5 ; echo "#!/bin/sh" > conftest$ac_exeext ; echo "\"$ERL\" -run conftest start -run init stop -noshell" >> conftest$ac_exeext ; chmod +x conftest$ac_exeext'
+
+	if test "$cross_compiling" = yes; then
+  { { echo "$as_me:$LINENO: error: cannot run test program while cross compiling
+See \`config.log' for more details." >&5
+echo "$as_me: error: cannot run test program while cross compiling
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+else
+  cat >conftest.$ac_ext <<_ACEOF
+-module(conftest).
+-export([start/0]).
+
+start() ->
+	     halt(case erlang:system_info(wordsize) of
+	     8 -> 0; 4 -> 1 end)
+.
+
+_ACEOF
+rm -f conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && { ac_try='./conftest$ac_exeext'
+  { (case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_try") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+  { echo "$as_me:$LINENO: found 64-bit Erlang" >&5
+echo "$as_me: found 64-bit Erlang" >&6;}
+	     CBIT=-m64
+else
+  echo "$as_me: program exited with status $ac_status" >&5
+echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+( exit $ac_status )
+{ echo "$as_me:$LINENO: found 32-bit Erlang" >&5
+echo "$as_me: found 32-bit Erlang" >&6;}
+	     CBIT=-m32
+fi
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext
+fi
+
+
+	;;
+    *)
+	echo "Target OS is: '$target_os'"
+	CBIT=""
+	;;
+esac
+CFLAGS="$CFLAGS $CBIT"
+LD_SHARED="$LD_SHARED $CBIT"
+echo "CBIT = '$CBIT'"
+echo "CFLAGS = '$CFLAGS'"
+echo "LD_SHARED = '$LD_SHARED'"
+
+
+CPPFLAGS="${CPPFLAGS# }"
+CFLAGS="${CFLAGS# }"
+LDFLAGS="${LDFLAGS# }"
+
+CPPFLAGS="${CPPFLAGS% }"
+CFLAGS="${CFLAGS% }"
+LDFLAGS="${LDFLAGS% }"
+
+
+
+
+
+
+
+
+
+
+
+exp_ERLANG_INSTALL_LIB_DIR_exmpp=`expand_var ERLANG_INSTALL_LIB_DIR_exmpp`
+
+
+
+
+
+echo
+ac_config_headers="$ac_config_headers config.h"
+
+ac_config_files="$ac_config_files c_src/Makefile include/Makefile include/internal/Makefile src/Makefile src/Emakefile ebin/Makefile ebin/exmpp.app ebin/exmpp.appup doc/Makefile testsuite/Makefile examples/Makefile examples/Emakefile Makefile"
+
+ac_config_files="$ac_config_files testsuite/etest"
+
+cat >confcache <<\_ACEOF
+# This file is a shell script that caches the results of configure
+# tests run on this system so they can be shared between configure
+# scripts and configure runs, see configure's option --config-cache.
+# It is not useful on other systems.  If it contains results you don't
+# want to keep, you may remove or edit it.
+#
+# config.status only pays attention to the cache file if you give it
+# the --recheck option to rerun configure.
+#
+# `ac_cv_env_foo' variables (set or unset) will be overridden when
+# loading this file, other *unset* `ac_cv_foo' will be assigned the
+# following values.
+
+_ACEOF
+
+# The following way of writing the cache mishandles newlines in values,
+# but we know of no workaround that is simple, portable, and efficient.
+# So, we kill variables containing newlines.
+# Ultrix sh set writes to stderr and can't be redirected directly,
+# and sets the high bit in the cache file unless we assign to the vars.
+(
+  for ac_var in `(set) 2>&1 | sed -n 's/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'`; do
+    eval ac_val=\$$ac_var
+    case $ac_val in #(
+    *${as_nl}*)
+      case $ac_var in #(
+      *_cv_*) { echo "$as_me:$LINENO: WARNING: Cache variable $ac_var contains a newline." >&5
+echo "$as_me: WARNING: Cache variable $ac_var contains a newline." >&2;} ;;
+      esac
+      case $ac_var in #(
+      _ | IFS | as_nl) ;; #(
+      *) $as_unset $ac_var ;;
+      esac ;;
+    esac
+  done
+
+  (set) 2>&1 |
+    case $as_nl`(ac_space=' '; set) 2>&1` in #(
+    *${as_nl}ac_space=\ *)
+      # `set' does not quote correctly, so add quotes (double-quote
+      # substitution turns \\\\ into \\, and sed turns \\ into \).
+      sed -n \
+	"s/'/'\\\\''/g;
+	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\\2'/p"
+      ;; #(
+    *)
+      # `set' quotes correctly as required by POSIX, so do not add quotes.
+      sed -n "/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p"
+      ;;
+    esac |
+    sort
+) |
+  sed '
+     /^ac_cv_env_/b end
+     t clear
+     :clear
+     s/^\([^=]*\)=\(.*[{}].*\)$/test "${\1+set}" = set || &/
+     t end
+     s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
+     :end' >>confcache
+if diff "$cache_file" confcache >/dev/null 2>&1; then :; else
+  if test -w "$cache_file"; then
+    test "x$cache_file" != "x/dev/null" &&
+      { echo "$as_me:$LINENO: updating cache $cache_file" >&5
+echo "$as_me: updating cache $cache_file" >&6;}
+    cat confcache >$cache_file
+  else
+    { echo "$as_me:$LINENO: not updating unwritable cache $cache_file" >&5
+echo "$as_me: not updating unwritable cache $cache_file" >&6;}
+  fi
+fi
+rm -f confcache
+
+test "x$prefix" = xNONE && prefix=$ac_default_prefix
+# Let make expand exec_prefix.
+test "x$exec_prefix" = xNONE && exec_prefix='${prefix}'
+
+DEFS=-DHAVE_CONFIG_H
+
+ac_libobjs=
+ac_ltlibobjs=
+for ac_i in : $LIBOBJS; do test "x$ac_i" = x: && continue
+  # 1. Remove the extension, and $U if already installed.
+  ac_script='s/\$U\././;s/\.o$//;s/\.obj$//'
+  ac_i=`echo "$ac_i" | sed "$ac_script"`
+  # 2. Prepend LIBOBJDIR.  When used with automake>=1.10 LIBOBJDIR
+  #    will be set to the directory where LIBOBJS objects are built.
+  ac_libobjs="$ac_libobjs \${LIBOBJDIR}$ac_i\$U.$ac_objext"
+  ac_ltlibobjs="$ac_ltlibobjs \${LIBOBJDIR}$ac_i"'$U.lo'
+done
+LIBOBJS=$ac_libobjs
+
+LTLIBOBJS=$ac_ltlibobjs
+
+
+if test -z "${AMDEP_TRUE}" && test -z "${AMDEP_FALSE}"; then
+  { { echo "$as_me:$LINENO: error: conditional \"AMDEP\" was never defined.
+Usually this means the macro was only invoked conditionally." >&5
+echo "$as_me: error: conditional \"AMDEP\" was never defined.
+Usually this means the macro was only invoked conditionally." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+if test -z "${am__fastdepCC_TRUE}" && test -z "${am__fastdepCC_FALSE}"; then
+  { { echo "$as_me:$LINENO: error: conditional \"am__fastdepCC\" was never defined.
+Usually this means the macro was only invoked conditionally." >&5
+echo "$as_me: error: conditional \"am__fastdepCC\" was never defined.
+Usually this means the macro was only invoked conditionally." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+if test -z "${BUILD_COMPAT_TRUE}" && test -z "${BUILD_COMPAT_FALSE}"; then
+  { { echo "$as_me:$LINENO: error: conditional \"BUILD_COMPAT\" was never defined.
+Usually this means the macro was only invoked conditionally." >&5
+echo "$as_me: error: conditional \"BUILD_COMPAT\" was never defined.
+Usually this means the macro was only invoked conditionally." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+if test -z "${ENABLE_DOCUMENTATION_TRUE}" && test -z "${ENABLE_DOCUMENTATION_FALSE}"; then
+  { { echo "$as_me:$LINENO: error: conditional \"ENABLE_DOCUMENTATION\" was never defined.
+Usually this means the macro was only invoked conditionally." >&5
+echo "$as_me: error: conditional \"ENABLE_DOCUMENTATION\" was never defined.
+Usually this means the macro was only invoked conditionally." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+if test -z "${ENABLE_EXAMPLES_TRUE}" && test -z "${ENABLE_EXAMPLES_FALSE}"; then
+  { { echo "$as_me:$LINENO: error: conditional \"ENABLE_EXAMPLES\" was never defined.
+Usually this means the macro was only invoked conditionally." >&5
+echo "$as_me: error: conditional \"ENABLE_EXAMPLES\" was never defined.
+Usually this means the macro was only invoked conditionally." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+if test -z "${ENABLE_SMP_SUPPORT_TRUE}" && test -z "${ENABLE_SMP_SUPPORT_FALSE}"; then
+  { { echo "$as_me:$LINENO: error: conditional \"ENABLE_SMP_SUPPORT\" was never defined.
+Usually this means the macro was only invoked conditionally." >&5
+echo "$as_me: error: conditional \"ENABLE_SMP_SUPPORT\" was never defined.
+Usually this means the macro was only invoked conditionally." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+if test -z "${ENABLE_TESTSUITE_TRUE}" && test -z "${ENABLE_TESTSUITE_FALSE}"; then
+  { { echo "$as_me:$LINENO: error: conditional \"ENABLE_TESTSUITE\" was never defined.
+Usually this means the macro was only invoked conditionally." >&5
+echo "$as_me: error: conditional \"ENABLE_TESTSUITE\" was never defined.
+Usually this means the macro was only invoked conditionally." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+if test -z "${WITH_EXPAT_TRUE}" && test -z "${WITH_EXPAT_FALSE}"; then
+  { { echo "$as_me:$LINENO: error: conditional \"WITH_EXPAT\" was never defined.
+Usually this means the macro was only invoked conditionally." >&5
+echo "$as_me: error: conditional \"WITH_EXPAT\" was never defined.
+Usually this means the macro was only invoked conditionally." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+if test -z "${WITH_LIBXML2_TRUE}" && test -z "${WITH_LIBXML2_FALSE}"; then
+  { { echo "$as_me:$LINENO: error: conditional \"WITH_LIBXML2\" was never defined.
+Usually this means the macro was only invoked conditionally." >&5
+echo "$as_me: error: conditional \"WITH_LIBXML2\" was never defined.
+Usually this means the macro was only invoked conditionally." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+if test -z "${WITH_OPENSSL_TRUE}" && test -z "${WITH_OPENSSL_FALSE}"; then
+  { { echo "$as_me:$LINENO: error: conditional \"WITH_OPENSSL\" was never defined.
+Usually this means the macro was only invoked conditionally." >&5
+echo "$as_me: error: conditional \"WITH_OPENSSL\" was never defined.
+Usually this means the macro was only invoked conditionally." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+if test -z "${WITH_ZLIB_TRUE}" && test -z "${WITH_ZLIB_FALSE}"; then
+  { { echo "$as_me:$LINENO: error: conditional \"WITH_ZLIB\" was never defined.
+Usually this means the macro was only invoked conditionally." >&5
+echo "$as_me: error: conditional \"WITH_ZLIB\" was never defined.
+Usually this means the macro was only invoked conditionally." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+: ${CONFIG_STATUS=./config.status}
+ac_clean_files_save=$ac_clean_files
+ac_clean_files="$ac_clean_files $CONFIG_STATUS"
+{ echo "$as_me:$LINENO: creating $CONFIG_STATUS" >&5
+echo "$as_me: creating $CONFIG_STATUS" >&6;}
+cat >$CONFIG_STATUS <<_ACEOF
+#! $SHELL
+# Generated by $as_me.
+# Run this file to recreate the current configuration.
+# Compiler output produced by configure, useful for debugging
+# configure, is in config.log if it exists.
+
+debug=false
+ac_cs_recheck=false
+ac_cs_silent=false
+SHELL=\${CONFIG_SHELL-$SHELL}
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF
+## --------------------- ##
+## M4sh Initialization.  ##
+## --------------------- ##
+
+# Be more Bourne compatible
+DUALCASE=1; export DUALCASE # for MKS sh
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
+  emulate sh
+  NULLCMD=:
+  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '${1+"$@"}'='"$@"'
+  setopt NO_GLOB_SUBST
+else
+  case `(set -o) 2>/dev/null` in
+  *posix*) set -o posix ;;
+esac
+
+fi
+
+
+
+
+# PATH needs CR
+# Avoid depending upon Character Ranges.
+as_cr_letters='abcdefghijklmnopqrstuvwxyz'
+as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
+as_cr_Letters=$as_cr_letters$as_cr_LETTERS
+as_cr_digits='0123456789'
+as_cr_alnum=$as_cr_Letters$as_cr_digits
+
+# The user is always right.
+if test "${PATH_SEPARATOR+set}" != set; then
+  echo "#! /bin/sh" >conf$$.sh
+  echo  "exit 0"   >>conf$$.sh
+  chmod +x conf$$.sh
+  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+    PATH_SEPARATOR=';'
+  else
+    PATH_SEPARATOR=:
+  fi
+  rm -f conf$$.sh
+fi
+
+# Support unset when possible.
+if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
+  as_unset=unset
+else
+  as_unset=false
+fi
+
+
+# IFS
+# We need space, tab and new line, in precisely that order.  Quoting is
+# there to prevent editors from complaining about space-tab.
+# (If _AS_PATH_WALK were called with IFS unset, it would disable word
+# splitting by setting IFS to empty value.)
+as_nl='
+'
+IFS=" ""	$as_nl"
+
+# Find who we are.  Look in the path if we contain no directory separator.
+case $0 in
+  *[\\/]* ) as_myself=$0 ;;
+  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
+done
+IFS=$as_save_IFS
+
+     ;;
+esac
+# We did not find ourselves, most probably we were run as `sh COMMAND'
+# in which case we are not to be found in the path.
+if test "x$as_myself" = x; then
+  as_myself=$0
+fi
+if test ! -f "$as_myself"; then
+  echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
+  { (exit 1); exit 1; }
+fi
+
+# Work around bugs in pre-3.0 UWIN ksh.
+for as_var in ENV MAIL MAILPATH
+do ($as_unset $as_var) >/dev/null 2>&1 && $as_unset $as_var
+done
+PS1='$ '
+PS2='> '
+PS4='+ '
+
+# NLS nuisances.
+for as_var in \
+  LANG LANGUAGE LC_ADDRESS LC_ALL LC_COLLATE LC_CTYPE LC_IDENTIFICATION \
+  LC_MEASUREMENT LC_MESSAGES LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER \
+  LC_TELEPHONE LC_TIME
+do
+  if (set +x; test -z "`(eval $as_var=C; export $as_var) 2>&1`"); then
+    eval $as_var=C; export $as_var
+  else
+    ($as_unset $as_var) >/dev/null 2>&1 && $as_unset $as_var
+  fi
+done
+
+# Required to use basename.
+if expr a : '\(a\)' >/dev/null 2>&1 &&
+   test "X`expr 00001 : '.*\(...\)'`" = X001; then
+  as_expr=expr
+else
+  as_expr=false
+fi
+
+if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
+  as_basename=basename
+else
+  as_basename=false
+fi
+
+
+# Name of the executable.
+as_me=`$as_basename -- "$0" ||
+$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
+	 X"$0" : 'X\(//\)$' \| \
+	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
+echo X/"$0" |
+    sed '/^.*\/\([^/][^/]*\)\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+
+# CDPATH.
+$as_unset CDPATH
+
+
+
+  as_lineno_1=$LINENO
+  as_lineno_2=$LINENO
+  test "x$as_lineno_1" != "x$as_lineno_2" &&
+  test "x`expr $as_lineno_1 + 1`" = "x$as_lineno_2" || {
+
+  # Create $as_me.lineno as a copy of $as_myself, but with $LINENO
+  # uniformly replaced by the line number.  The first 'sed' inserts a
+  # line-number line after each line using $LINENO; the second 'sed'
+  # does the real work.  The second script uses 'N' to pair each
+  # line-number line with the line containing $LINENO, and appends
+  # trailing '-' during substitution so that $LINENO is not a special
+  # case at line end.
+  # (Raja R Harinath suggested sed '=', and Paul Eggert wrote the
+  # scripts with optimization help from Paolo Bonzini.  Blame Lee
+  # E. McMahon (1931-1989) for sed's syntax.  :-)
+  sed -n '
+    p
+    /[$]LINENO/=
+  ' <$as_myself |
+    sed '
+      s/[$]LINENO.*/&-/
+      t lineno
+      b
+      :lineno
+      N
+      :loop
+      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
+      t loop
+      s/-\n.*//
+    ' >$as_me.lineno &&
+  chmod +x "$as_me.lineno" ||
+    { echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2
+   { (exit 1); exit 1; }; }
+
+  # Don't try to exec as it changes $[0], causing all sort of problems
+  # (the dirname of $[0] is not the place where we might find the
+  # original and so on.  Autoconf is especially sensitive to this).
+  . "./$as_me.lineno"
+  # Exit status is that of the last command.
+  exit
+}
+
+
+if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
+  as_dirname=dirname
+else
+  as_dirname=false
+fi
+
+ECHO_C= ECHO_N= ECHO_T=
+case `echo -n x` in
+-n*)
+  case `echo 'x\c'` in
+  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
+  *)   ECHO_C='\c';;
+  esac;;
+*)
+  ECHO_N='-n';;
+esac
+
+if expr a : '\(a\)' >/dev/null 2>&1 &&
+   test "X`expr 00001 : '.*\(...\)'`" = X001; then
+  as_expr=expr
+else
+  as_expr=false
+fi
+
+rm -f conf$$ conf$$.exe conf$$.file
+if test -d conf$$.dir; then
+  rm -f conf$$.dir/conf$$.file
+else
+  rm -f conf$$.dir
+  mkdir conf$$.dir
+fi
+echo >conf$$.file
+if ln -s conf$$.file conf$$ 2>/dev/null; then
+  as_ln_s='ln -s'
+  # ... but there are two gotchas:
+  # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
+  # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
+  # In both cases, we have to default to `cp -p'.
+  ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
+    as_ln_s='cp -p'
+elif ln conf$$.file conf$$ 2>/dev/null; then
+  as_ln_s=ln
+else
+  as_ln_s='cp -p'
+fi
+rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
+rmdir conf$$.dir 2>/dev/null
+
+if mkdir -p . 2>/dev/null; then
+  as_mkdir_p=:
+else
+  test -d ./-p && rmdir ./-p
+  as_mkdir_p=false
+fi
+
+if test -x / >/dev/null 2>&1; then
+  as_test_x='test -x'
+else
+  if ls -dL / >/dev/null 2>&1; then
+    as_ls_L_option=L
+  else
+    as_ls_L_option=
+  fi
+  as_test_x='
+    eval sh -c '\''
+      if test -d "$1"; then
+        test -d "$1/.";
+      else
+	case $1 in
+        -*)set "./$1";;
+	esac;
+	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in
+	???[sx]*):;;*)false;;esac;fi
+    '\'' sh
+  '
+fi
+as_executable_p=$as_test_x
+
+# Sed expression to map a string onto a valid CPP name.
+as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"
+
+# Sed expression to map a string onto a valid variable name.
+as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"
+
+
+exec 6>&1
+
+# Save the log message, to keep $[0] and so on meaningful, and to
+# report actual input values of CONFIG_FILES etc. instead of their
+# values after options handling.
+ac_log="
+This file was extended by exmpp $as_me 0.9.2, which was
+generated by GNU Autoconf 2.61.  Invocation command line was
+
+  CONFIG_FILES    = $CONFIG_FILES
+  CONFIG_HEADERS  = $CONFIG_HEADERS
+  CONFIG_LINKS    = $CONFIG_LINKS
+  CONFIG_COMMANDS = $CONFIG_COMMANDS
+  $ $0 $@
+
+on `(hostname || uname -n) 2>/dev/null | sed 1q`
+"
+
+_ACEOF
+
+cat >>$CONFIG_STATUS <<_ACEOF
+# Files that config.status was made for.
+config_files="$ac_config_files"
+config_headers="$ac_config_headers"
+config_commands="$ac_config_commands"
+
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF
+ac_cs_usage="\
+\`$as_me' instantiates files from templates according to the
+current configuration.
+
+Usage: $0 [OPTIONS] [FILE]...
+
+  -h, --help       print this help, then exit
+  -V, --version    print version number and configuration settings, then exit
+  -q, --quiet      do not print progress messages
+  -d, --debug      don't remove temporary files
+      --recheck    update $as_me by reconfiguring in the same conditions
+  --file=FILE[:TEMPLATE]
+		   instantiate the configuration file FILE
+  --header=FILE[:TEMPLATE]
+		   instantiate the configuration header FILE
+
+Configuration files:
+$config_files
+
+Configuration headers:
+$config_headers
+
+Configuration commands:
+$config_commands
+
+Report bugs to <bug-autoconf@gnu.org>."
+
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF
+ac_cs_version="\\
+exmpp config.status 0.9.2
+configured by $0, generated by GNU Autoconf 2.61,
+  with options \\"`echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
+
+Copyright (C) 2006 Free Software Foundation, Inc.
+This config.status script is free software; the Free Software Foundation
+gives unlimited permission to copy, distribute and modify it."
+
+ac_pwd='$ac_pwd'
+srcdir='$srcdir'
+INSTALL='$INSTALL'
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF
+# If no file are specified by the user, then we need to provide default
+# value.  By we need to know if files were specified by the user.
+ac_need_defaults=:
+while test $# != 0
+do
+  case $1 in
+  --*=*)
+    ac_option=`expr "X$1" : 'X\([^=]*\)='`
+    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
+    ac_shift=:
+    ;;
+  *)
+    ac_option=$1
+    ac_optarg=$2
+    ac_shift=shift
+    ;;
+  esac
+
+  case $ac_option in
+  # Handling of the options.
+  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
+    ac_cs_recheck=: ;;
+  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
+    echo "$ac_cs_version"; exit ;;
+  --debug | --debu | --deb | --de | --d | -d )
+    debug=: ;;
+  --file | --fil | --fi | --f )
+    $ac_shift
+    CONFIG_FILES="$CONFIG_FILES $ac_optarg"
+    ac_need_defaults=false;;
+  --header | --heade | --head | --hea )
+    $ac_shift
+    CONFIG_HEADERS="$CONFIG_HEADERS $ac_optarg"
+    ac_need_defaults=false;;
+  --he | --h)
+    # Conflict between --help and --header
+    { echo "$as_me: error: ambiguous option: $1
+Try \`$0 --help' for more information." >&2
+   { (exit 1); exit 1; }; };;
+  --help | --hel | -h )
+    echo "$ac_cs_usage"; exit ;;
+  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
+  | -silent | --silent | --silen | --sile | --sil | --si | --s)
+    ac_cs_silent=: ;;
+
+  # This is an error.
+  -*) { echo "$as_me: error: unrecognized option: $1
+Try \`$0 --help' for more information." >&2
+   { (exit 1); exit 1; }; } ;;
+
+  *) ac_config_targets="$ac_config_targets $1"
+     ac_need_defaults=false ;;
+
+  esac
+  shift
+done
+
+ac_configure_extra_args=
+
+if $ac_cs_silent; then
+  exec 6>/dev/null
+  ac_configure_extra_args="$ac_configure_extra_args --silent"
+fi
+
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF
+if \$ac_cs_recheck; then
+  echo "running CONFIG_SHELL=$SHELL $SHELL $0 "$ac_configure_args \$ac_configure_extra_args " --no-create --no-recursion" >&6
+  CONFIG_SHELL=$SHELL
+  export CONFIG_SHELL
+  exec $SHELL "$0"$ac_configure_args \$ac_configure_extra_args --no-create --no-recursion
+fi
+
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF
+exec 5>>config.log
+{
+  echo
+  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
+## Running $as_me. ##
+_ASBOX
+  echo "$ac_log"
+} >&5
+
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF
+#
+# INIT-COMMANDS
+#
+AMDEP_TRUE="$AMDEP_TRUE" ac_aux_dir="$ac_aux_dir"
+
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF
+
+# Handling of arguments.
+for ac_config_target in $ac_config_targets
+do
+  case $ac_config_target in
+    "depfiles") CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
+    "config.h") CONFIG_HEADERS="$CONFIG_HEADERS config.h" ;;
+    "c_src/Makefile") CONFIG_FILES="$CONFIG_FILES c_src/Makefile" ;;
+    "include/Makefile") CONFIG_FILES="$CONFIG_FILES include/Makefile" ;;
+    "include/internal/Makefile") CONFIG_FILES="$CONFIG_FILES include/internal/Makefile" ;;
+    "src/Makefile") CONFIG_FILES="$CONFIG_FILES src/Makefile" ;;
+    "src/Emakefile") CONFIG_FILES="$CONFIG_FILES src/Emakefile" ;;
+    "ebin/Makefile") CONFIG_FILES="$CONFIG_FILES ebin/Makefile" ;;
+    "ebin/exmpp.app") CONFIG_FILES="$CONFIG_FILES ebin/exmpp.app" ;;
+    "ebin/exmpp.appup") CONFIG_FILES="$CONFIG_FILES ebin/exmpp.appup" ;;
+    "doc/Makefile") CONFIG_FILES="$CONFIG_FILES doc/Makefile" ;;
+    "testsuite/Makefile") CONFIG_FILES="$CONFIG_FILES testsuite/Makefile" ;;
+    "examples/Makefile") CONFIG_FILES="$CONFIG_FILES examples/Makefile" ;;
+    "examples/Emakefile") CONFIG_FILES="$CONFIG_FILES examples/Emakefile" ;;
+    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
+    "testsuite/etest") CONFIG_FILES="$CONFIG_FILES testsuite/etest" ;;
+
+  *) { { echo "$as_me:$LINENO: error: invalid argument: $ac_config_target" >&5
+echo "$as_me: error: invalid argument: $ac_config_target" >&2;}
+   { (exit 1); exit 1; }; };;
+  esac
+done
+
+
+# If the user did not use the arguments to specify the items to instantiate,
+# then the envvar interface is used.  Set only those that are not.
+# We use the long form for the default assignment because of an extremely
+# bizarre bug on SunOS 4.1.3.
+if $ac_need_defaults; then
+  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
+  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
+  test "${CONFIG_COMMANDS+set}" = set || CONFIG_COMMANDS=$config_commands
+fi
+
+# Have a temporary directory for convenience.  Make it in the build tree
+# simply because there is no reason against having it here, and in addition,
+# creating and moving files from /tmp can sometimes cause problems.
+# Hook for its removal unless debugging.
+# Note that there is a small window in which the directory will not be cleaned:
+# after its creation but before its name has been assigned to `$tmp'.
+$debug ||
+{
+  tmp=
+  trap 'exit_status=$?
+  { test -z "$tmp" || test ! -d "$tmp" || rm -fr "$tmp"; } && exit $exit_status
+' 0
+  trap '{ (exit 1); exit 1; }' 1 2 13 15
+}
+# Create a (secure) tmp directory for tmp files.
+
+{
+  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
+  test -n "$tmp" && test -d "$tmp"
+}  ||
+{
+  tmp=./conf$$-$RANDOM
+  (umask 077 && mkdir "$tmp")
+} ||
+{
+   echo "$me: cannot create a temporary directory in ." >&2
+   { (exit 1); exit 1; }
+}
+
+#
+# Set up the sed scripts for CONFIG_FILES section.
+#
+
+# No need to generate the scripts if there are no CONFIG_FILES.
+# This happens for instance when ./config.status config.h
+if test -n "$CONFIG_FILES"; then
+
+_ACEOF
+
+
+
+ac_delim='%!_!# '
+for ac_last_try in false false false false false :; do
+  cat >conf$$subs.sed <<_ACEOF
+SHELL!$SHELL$ac_delim
+PATH_SEPARATOR!$PATH_SEPARATOR$ac_delim
+PACKAGE_NAME!$PACKAGE_NAME$ac_delim
+PACKAGE_TARNAME!$PACKAGE_TARNAME$ac_delim
+PACKAGE_VERSION!$PACKAGE_VERSION$ac_delim
+PACKAGE_STRING!$PACKAGE_STRING$ac_delim
+PACKAGE_BUGREPORT!$PACKAGE_BUGREPORT$ac_delim
+exec_prefix!$exec_prefix$ac_delim
+prefix!$prefix$ac_delim
+program_transform_name!$program_transform_name$ac_delim
+bindir!$bindir$ac_delim
+sbindir!$sbindir$ac_delim
+libexecdir!$libexecdir$ac_delim
+datarootdir!$datarootdir$ac_delim
+datadir!$datadir$ac_delim
+sysconfdir!$sysconfdir$ac_delim
+sharedstatedir!$sharedstatedir$ac_delim
+localstatedir!$localstatedir$ac_delim
+includedir!$includedir$ac_delim
+oldincludedir!$oldincludedir$ac_delim
+docdir!$docdir$ac_delim
+infodir!$infodir$ac_delim
+htmldir!$htmldir$ac_delim
+dvidir!$dvidir$ac_delim
+pdfdir!$pdfdir$ac_delim
+psdir!$psdir$ac_delim
+libdir!$libdir$ac_delim
+localedir!$localedir$ac_delim
+mandir!$mandir$ac_delim
+DEFS!$DEFS$ac_delim
+ECHO_C!$ECHO_C$ac_delim
+ECHO_N!$ECHO_N$ac_delim
+ECHO_T!$ECHO_T$ac_delim
+LIBS!$LIBS$ac_delim
+build_alias!$build_alias$ac_delim
+host_alias!$host_alias$ac_delim
+target_alias!$target_alias$ac_delim
+build!$build$ac_delim
+build_cpu!$build_cpu$ac_delim
+build_vendor!$build_vendor$ac_delim
+build_os!$build_os$ac_delim
+host!$host$ac_delim
+host_cpu!$host_cpu$ac_delim
+host_vendor!$host_vendor$ac_delim
+host_os!$host_os$ac_delim
+target!$target$ac_delim
+target_cpu!$target_cpu$ac_delim
+target_vendor!$target_vendor$ac_delim
+target_os!$target_os$ac_delim
+INSTALL_PROGRAM!$INSTALL_PROGRAM$ac_delim
+INSTALL_SCRIPT!$INSTALL_SCRIPT$ac_delim
+INSTALL_DATA!$INSTALL_DATA$ac_delim
+CYGPATH_W!$CYGPATH_W$ac_delim
+PACKAGE!$PACKAGE$ac_delim
+VERSION!$VERSION$ac_delim
+ACLOCAL!$ACLOCAL$ac_delim
+AUTOCONF!$AUTOCONF$ac_delim
+AUTOMAKE!$AUTOMAKE$ac_delim
+AUTOHEADER!$AUTOHEADER$ac_delim
+MAKEINFO!$MAKEINFO$ac_delim
+install_sh!$install_sh$ac_delim
+STRIP!$STRIP$ac_delim
+INSTALL_STRIP_PROGRAM!$INSTALL_STRIP_PROGRAM$ac_delim
+mkdir_p!$mkdir_p$ac_delim
+AWK!$AWK$ac_delim
+SET_MAKE!$SET_MAKE$ac_delim
+am__leading_dot!$am__leading_dot$ac_delim
+AMTAR!$AMTAR$ac_delim
+am__tar!$am__tar$ac_delim
+am__untar!$am__untar$ac_delim
+CC!$CC$ac_delim
+CFLAGS!$CFLAGS$ac_delim
+LDFLAGS!$LDFLAGS$ac_delim
+CPPFLAGS!$CPPFLAGS$ac_delim
+ac_ct_CC!$ac_ct_CC$ac_delim
+EXEEXT!$EXEEXT$ac_delim
+OBJEXT!$OBJEXT$ac_delim
+DEPDIR!$DEPDIR$ac_delim
+am__include!$am__include$ac_delim
+am__quote!$am__quote$ac_delim
+AMDEP_TRUE!$AMDEP_TRUE$ac_delim
+AMDEP_FALSE!$AMDEP_FALSE$ac_delim
+AMDEPBACKSLASH!$AMDEPBACKSLASH$ac_delim
+CCDEPMODE!$CCDEPMODE$ac_delim
+am__fastdepCC_TRUE!$am__fastdepCC_TRUE$ac_delim
+am__fastdepCC_FALSE!$am__fastdepCC_FALSE$ac_delim
+GREP!$GREP$ac_delim
+EGREP!$EGREP$ac_delim
+SED!$SED$ac_delim
+LN_S!$LN_S$ac_delim
+ECHO!$ECHO$ac_delim
+AR!$AR$ac_delim
+RANLIB!$RANLIB$ac_delim
+CPP!$CPP$ac_delim
+CXXCPP!$CXXCPP$ac_delim
+LIBTOOL!$LIBTOOL$ac_delim
+BUILD_COMPAT_TRUE!$BUILD_COMPAT_TRUE$ac_delim
+_ACEOF
+
+  if test `sed -n "s/.*$ac_delim\$/X/p" conf$$subs.sed | grep -c X` = 97; then
+    break
+  elif $ac_last_try; then
+    { { echo "$as_me:$LINENO: error: could not make $CONFIG_STATUS" >&5
+echo "$as_me: error: could not make $CONFIG_STATUS" >&2;}
+   { (exit 1); exit 1; }; }
+  else
+    ac_delim="$ac_delim!$ac_delim _$ac_delim!! "
+  fi
+done
+
+ac_eof=`sed -n '/^CEOF[0-9]*$/s/CEOF/0/p' conf$$subs.sed`
+if test -n "$ac_eof"; then
+  ac_eof=`echo "$ac_eof" | sort -nru | sed 1q`
+  ac_eof=`expr $ac_eof + 1`
+fi
+
+cat >>$CONFIG_STATUS <<_ACEOF
+cat >"\$tmp/subs-1.sed" <<\CEOF$ac_eof
+/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
+_ACEOF
+sed '
+s/[,\\&]/\\&/g; s/@/@|#_!!_#|/g
+s/^/s,@/; s/!/@,|#_!!_#|/
+:n
+t n
+s/'"$ac_delim"'$/,g/; t
+s/$/\\/; p
+N; s/^.*\n//; s/[,\\&]/\\&/g; s/@/@|#_!!_#|/g; b n
+' >>$CONFIG_STATUS <conf$$subs.sed
+rm -f conf$$subs.sed
+cat >>$CONFIG_STATUS <<_ACEOF
+CEOF$ac_eof
+_ACEOF
+
+
+ac_delim='%!_!# '
+for ac_last_try in false false false false false :; do
+  cat >conf$$subs.sed <<_ACEOF
+BUILD_COMPAT_FALSE!$BUILD_COMPAT_FALSE$ac_delim
+COMPAT_MODULES_START!$COMPAT_MODULES_START$ac_delim
+COMPAT_MODULES!$COMPAT_MODULES$ac_delim
+ENABLE_DOCUMENTATION_TRUE!$ENABLE_DOCUMENTATION_TRUE$ac_delim
+ENABLE_DOCUMENTATION_FALSE!$ENABLE_DOCUMENTATION_FALSE$ac_delim
+ENABLE_EXAMPLES_TRUE!$ENABLE_EXAMPLES_TRUE$ac_delim
+ENABLE_EXAMPLES_FALSE!$ENABLE_EXAMPLES_FALSE$ac_delim
+ERL!$ERL$ac_delim
+ERLC!$ERLC$ac_delim
+ERLCFLAGS!$ERLCFLAGS$ac_delim
+ESCRIPT!$ESCRIPT$ac_delim
+ERLANG_ROOT_DIR!$ERLANG_ROOT_DIR$ac_delim
+ERLANG_LIB_DIR!$ERLANG_LIB_DIR$ac_delim
+ERLANG_ERTS_DIR!$ERLANG_ERTS_DIR$ac_delim
+ERLANG_ERTS_VER!$ERLANG_ERTS_VER$ac_delim
+ERLANG_RELEASE!$ERLANG_RELEASE$ac_delim
+ERLANG_LIB_DIR_erl_interface!$ERLANG_LIB_DIR_erl_interface$ac_delim
+ERLANG_LIB_VER_erl_interface!$ERLANG_LIB_VER_erl_interface$ac_delim
+ERLANG_LIB_DIR_eunit!$ERLANG_LIB_DIR_eunit$ac_delim
+ERLANG_LIB_VER_eunit!$ERLANG_LIB_VER_eunit$ac_delim
+ERLANG_INSTALL_LIB_DIR!$ERLANG_INSTALL_LIB_DIR$ac_delim
+ERLANG_INSTALL_LIB_DIR_exmpp!$ERLANG_INSTALL_LIB_DIR_exmpp$ac_delim
+ENABLE_SMP_SUPPORT_TRUE!$ENABLE_SMP_SUPPORT_TRUE$ac_delim
+ENABLE_SMP_SUPPORT_FALSE!$ENABLE_SMP_SUPPORT_FALSE$ac_delim
+ENABLE_TESTSUITE_TRUE!$ENABLE_TESTSUITE_TRUE$ac_delim
+ENABLE_TESTSUITE_FALSE!$ENABLE_TESTSUITE_FALSE$ac_delim
+EXPAT_CPPFLAGS!$EXPAT_CPPFLAGS$ac_delim
+EXPAT_LDFLAGS!$EXPAT_LDFLAGS$ac_delim
+EXPAT_LIBS!$EXPAT_LIBS$ac_delim
+WITH_EXPAT_TRUE!$WITH_EXPAT_TRUE$ac_delim
+WITH_EXPAT_FALSE!$WITH_EXPAT_FALSE$ac_delim
+PKG_CONFIG!$PKG_CONFIG$ac_delim
+LIBXML2_CFLAGS!$LIBXML2_CFLAGS$ac_delim
+LIBXML2_LIBS!$LIBXML2_LIBS$ac_delim
+WITH_LIBXML2_TRUE!$WITH_LIBXML2_TRUE$ac_delim
+WITH_LIBXML2_FALSE!$WITH_LIBXML2_FALSE$ac_delim
+OPENSSL_CPPFLAGS!$OPENSSL_CPPFLAGS$ac_delim
+OPENSSL_LDFLAGS!$OPENSSL_LDFLAGS$ac_delim
+OPENSSL_LIBS!$OPENSSL_LIBS$ac_delim
+WITH_OPENSSL_TRUE!$WITH_OPENSSL_TRUE$ac_delim
+WITH_OPENSSL_FALSE!$WITH_OPENSSL_FALSE$ac_delim
+ZLIB_CPPFLAGS!$ZLIB_CPPFLAGS$ac_delim
+ZLIB_LDFLAGS!$ZLIB_LDFLAGS$ac_delim
+ZLIB_LIBS!$ZLIB_LIBS$ac_delim
+WITH_ZLIB_TRUE!$WITH_ZLIB_TRUE$ac_delim
+WITH_ZLIB_FALSE!$WITH_ZLIB_FALSE$ac_delim
+EMKOPTS!$EMKOPTS$ac_delim
+EXMPP_RELEASE_DATE!$EXMPP_RELEASE_DATE$ac_delim
+EXMPP_SVNREV!$EXMPP_SVNREV$ac_delim
+EXMPP_DISTSUFFIX!$EXMPP_DISTSUFFIX$ac_delim
+EXMPP_BUILD_ARCH!$EXMPP_BUILD_ARCH$ac_delim
+EXMPP_HOST_ARCH!$EXMPP_HOST_ARCH$ac_delim
+exp_ERLANG_INSTALL_LIB_DIR_exmpp!$exp_ERLANG_INSTALL_LIB_DIR_exmpp$ac_delim
+ERL_DRIVER_LDFLAGS!$ERL_DRIVER_LDFLAGS$ac_delim
+LIBOBJS!$LIBOBJS$ac_delim
+LTLIBOBJS!$LTLIBOBJS$ac_delim
+_ACEOF
+
+  if test `sed -n "s/.*$ac_delim\$/X/p" conf$$subs.sed | grep -c X` = 56; then
+    break
+  elif $ac_last_try; then
+    { { echo "$as_me:$LINENO: error: could not make $CONFIG_STATUS" >&5
+echo "$as_me: error: could not make $CONFIG_STATUS" >&2;}
+   { (exit 1); exit 1; }; }
+  else
+    ac_delim="$ac_delim!$ac_delim _$ac_delim!! "
+  fi
+done
+
+ac_eof=`sed -n '/^CEOF[0-9]*$/s/CEOF/0/p' conf$$subs.sed`
+if test -n "$ac_eof"; then
+  ac_eof=`echo "$ac_eof" | sort -nru | sed 1q`
+  ac_eof=`expr $ac_eof + 1`
+fi
+
+cat >>$CONFIG_STATUS <<_ACEOF
+cat >"\$tmp/subs-2.sed" <<\CEOF$ac_eof
+/@[a-zA-Z_][a-zA-Z_0-9]*@/!b end
+_ACEOF
+sed '
+s/[,\\&]/\\&/g; s/@/@|#_!!_#|/g
+s/^/s,@/; s/!/@,|#_!!_#|/
+:n
+t n
+s/'"$ac_delim"'$/,g/; t
+s/$/\\/; p
+N; s/^.*\n//; s/[,\\&]/\\&/g; s/@/@|#_!!_#|/g; b n
+' >>$CONFIG_STATUS <conf$$subs.sed
+rm -f conf$$subs.sed
+cat >>$CONFIG_STATUS <<_ACEOF
+:end
+s/|#_!!_#|//g
+CEOF$ac_eof
+_ACEOF
+
+
+# VPATH may cause trouble with some makes, so we remove $(srcdir),
+# ${srcdir} and @srcdir@ from VPATH if srcdir is ".", strip leading and
+# trailing colons and then remove the whole line if VPATH becomes empty
+# (actually we leave an empty line to preserve line numbers).
+if test "x$srcdir" = x.; then
+  ac_vpsub='/^[	 ]*VPATH[	 ]*=/{
+s/:*\$(srcdir):*/:/
+s/:*\${srcdir}:*/:/
+s/:*@srcdir@:*/:/
+s/^\([^=]*=[	 ]*\):*/\1/
+s/:*$//
+s/^[^=]*=[	 ]*$//
+}'
+fi
+
+cat >>$CONFIG_STATUS <<\_ACEOF
+fi # test -n "$CONFIG_FILES"
+
+
+for ac_tag in  :F $CONFIG_FILES  :H $CONFIG_HEADERS    :C $CONFIG_COMMANDS
+do
+  case $ac_tag in
+  :[FHLC]) ac_mode=$ac_tag; continue;;
+  esac
+  case $ac_mode$ac_tag in
+  :[FHL]*:*);;
+  :L* | :C*:*) { { echo "$as_me:$LINENO: error: Invalid tag $ac_tag." >&5
+echo "$as_me: error: Invalid tag $ac_tag." >&2;}
+   { (exit 1); exit 1; }; };;
+  :[FH]-) ac_tag=-:-;;
+  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
+  esac
+  ac_save_IFS=$IFS
+  IFS=:
+  set x $ac_tag
+  IFS=$ac_save_IFS
+  shift
+  ac_file=$1
+  shift
+
+  case $ac_mode in
+  :L) ac_source=$1;;
+  :[FH])
+    ac_file_inputs=
+    for ac_f
+    do
+      case $ac_f in
+      -) ac_f="$tmp/stdin";;
+      *) # Look for the file first in the build tree, then in the source tree
+	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
+	 # because $ac_f cannot contain `:'.
+	 test -f "$ac_f" ||
+	   case $ac_f in
+	   [\\/$]*) false;;
+	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
+	   esac ||
+	   { { echo "$as_me:$LINENO: error: cannot find input file: $ac_f" >&5
+echo "$as_me: error: cannot find input file: $ac_f" >&2;}
+   { (exit 1); exit 1; }; };;
+      esac
+      ac_file_inputs="$ac_file_inputs $ac_f"
+    done
+
+    # Let's still pretend it is `configure' which instantiates (i.e., don't
+    # use $as_me), people would be surprised to read:
+    #    /* config.h.  Generated by config.status.  */
+    configure_input="Generated from "`IFS=:
+	  echo $* | sed 's|^[^:]*/||;s|:[^:]*/|, |g'`" by configure."
+    if test x"$ac_file" != x-; then
+      configure_input="$ac_file.  $configure_input"
+      { echo "$as_me:$LINENO: creating $ac_file" >&5
+echo "$as_me: creating $ac_file" >&6;}
+    fi
+
+    case $ac_tag in
+    *:-:* | *:-) cat >"$tmp/stdin";;
+    esac
+    ;;
+  esac
+
+  ac_dir=`$as_dirname -- "$ac_file" ||
+$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$ac_file" : 'X\(//\)[^/]' \| \
+	 X"$ac_file" : 'X\(//\)$' \| \
+	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
+echo X"$ac_file" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+  { as_dir="$ac_dir"
+  case $as_dir in #(
+  -*) as_dir=./$as_dir;;
+  esac
+  test -d "$as_dir" || { $as_mkdir_p && mkdir -p "$as_dir"; } || {
+    as_dirs=
+    while :; do
+      case $as_dir in #(
+      *\'*) as_qdir=`echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #(
+      *) as_qdir=$as_dir;;
+      esac
+      as_dirs="'$as_qdir' $as_dirs"
+      as_dir=`$as_dirname -- "$as_dir" ||
+$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$as_dir" : 'X\(//\)[^/]' \| \
+	 X"$as_dir" : 'X\(//\)$' \| \
+	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
+echo X"$as_dir" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+      test -d "$as_dir" && break
+    done
+    test -z "$as_dirs" || eval "mkdir $as_dirs"
+  } || test -d "$as_dir" || { { echo "$as_me:$LINENO: error: cannot create directory $as_dir" >&5
+echo "$as_me: error: cannot create directory $as_dir" >&2;}
+   { (exit 1); exit 1; }; }; }
+  ac_builddir=.
+
+case "$ac_dir" in
+.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
+*)
+  ac_dir_suffix=/`echo "$ac_dir" | sed 's,^\.[\\/],,'`
+  # A ".." for each directory in $ac_dir_suffix.
+  ac_top_builddir_sub=`echo "$ac_dir_suffix" | sed 's,/[^\\/]*,/..,g;s,/,,'`
+  case $ac_top_builddir_sub in
+  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
+  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
+  esac ;;
+esac
+ac_abs_top_builddir=$ac_pwd
+ac_abs_builddir=$ac_pwd$ac_dir_suffix
+# for backward compatibility:
+ac_top_builddir=$ac_top_build_prefix
+
+case $srcdir in
+  .)  # We are building in place.
+    ac_srcdir=.
+    ac_top_srcdir=$ac_top_builddir_sub
+    ac_abs_top_srcdir=$ac_pwd ;;
+  [\\/]* | ?:[\\/]* )  # Absolute name.
+    ac_srcdir=$srcdir$ac_dir_suffix;
+    ac_top_srcdir=$srcdir
+    ac_abs_top_srcdir=$srcdir ;;
+  *) # Relative name.
+    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
+    ac_top_srcdir=$ac_top_build_prefix$srcdir
+    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
+esac
+ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix
+
+
+  case $ac_mode in
+  :F)
+  #
+  # CONFIG_FILE
+  #
+
+  case $INSTALL in
+  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
+  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
+  esac
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF
+# If the template does not know about datarootdir, expand it.
+# FIXME: This hack should be removed a few years after 2.60.
+ac_datarootdir_hack=; ac_datarootdir_seen=
+
+case `sed -n '/datarootdir/ {
+  p
+  q
+}
+/@datadir@/p
+/@docdir@/p
+/@infodir@/p
+/@localedir@/p
+/@mandir@/p
+' $ac_file_inputs` in
+*datarootdir*) ac_datarootdir_seen=yes;;
+*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
+  { echo "$as_me:$LINENO: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
+echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF
+  ac_datarootdir_hack='
+  s&@datadir@&$datadir&g
+  s&@docdir@&$docdir&g
+  s&@infodir@&$infodir&g
+  s&@localedir@&$localedir&g
+  s&@mandir@&$mandir&g
+    s&\\\${datarootdir}&$datarootdir&g' ;;
+esac
+_ACEOF
+
+# Neutralize VPATH when `$srcdir' = `.'.
+# Shell code in configure.ac might set extrasub.
+# FIXME: do we really want to maintain this feature?
+cat >>$CONFIG_STATUS <<_ACEOF
+  sed "$ac_vpsub
+$extrasub
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF
+:t
+/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
+s&@configure_input@&$configure_input&;t t
+s&@top_builddir@&$ac_top_builddir_sub&;t t
+s&@srcdir@&$ac_srcdir&;t t
+s&@abs_srcdir@&$ac_abs_srcdir&;t t
+s&@top_srcdir@&$ac_top_srcdir&;t t
+s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
+s&@builddir@&$ac_builddir&;t t
+s&@abs_builddir@&$ac_abs_builddir&;t t
+s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
+s&@INSTALL@&$ac_INSTALL&;t t
+$ac_datarootdir_hack
+" $ac_file_inputs | sed -f "$tmp/subs-1.sed" | sed -f "$tmp/subs-2.sed" >$tmp/out
+
+test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
+  { ac_out=`sed -n '/\${datarootdir}/p' "$tmp/out"`; test -n "$ac_out"; } &&
+  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' "$tmp/out"`; test -z "$ac_out"; } &&
+  { echo "$as_me:$LINENO: WARNING: $ac_file contains a reference to the variable \`datarootdir'
+which seems to be undefined.  Please make sure it is defined." >&5
+echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
+which seems to be undefined.  Please make sure it is defined." >&2;}
+
+  rm -f "$tmp/stdin"
+  case $ac_file in
+  -) cat "$tmp/out"; rm -f "$tmp/out";;
+  *) rm -f "$ac_file"; mv "$tmp/out" $ac_file;;
+  esac
+ ;;
+  :H)
+  #
+  # CONFIG_HEADER
+  #
+_ACEOF
+
+# Transform confdefs.h into a sed script `conftest.defines', that
+# substitutes the proper values into config.h.in to produce config.h.
+rm -f conftest.defines conftest.tail
+# First, append a space to every undef/define line, to ease matching.
+echo 's/$/ /' >conftest.defines
+# Then, protect against being on the right side of a sed subst, or in
+# an unquoted here document, in config.status.  If some macros were
+# called several times there might be several #defines for the same
+# symbol, which is useless.  But do not sort them, since the last
+# AC_DEFINE must be honored.
+ac_word_re=[_$as_cr_Letters][_$as_cr_alnum]*
+# These sed commands are passed to sed as "A NAME B PARAMS C VALUE D", where
+# NAME is the cpp macro being defined, VALUE is the value it is being given.
+# PARAMS is the parameter list in the macro definition--in most cases, it's
+# just an empty string.
+ac_dA='s,^\\([	 #]*\\)[^	 ]*\\([	 ]*'
+ac_dB='\\)[	 (].*,\\1define\\2'
+ac_dC=' '
+ac_dD=' ,'
+
+uniq confdefs.h |
+  sed -n '
+	t rset
+	:rset
+	s/^[	 ]*#[	 ]*define[	 ][	 ]*//
+	t ok
+	d
+	:ok
+	s/[\\&,]/\\&/g
+	s/^\('"$ac_word_re"'\)\(([^()]*)\)[	 ]*\(.*\)/ '"$ac_dA"'\1'"$ac_dB"'\2'"${ac_dC}"'\3'"$ac_dD"'/p
+	s/^\('"$ac_word_re"'\)[	 ]*\(.*\)/'"$ac_dA"'\1'"$ac_dB$ac_dC"'\2'"$ac_dD"'/p
+  ' >>conftest.defines
+
+# Remove the space that was appended to ease matching.
+# Then replace #undef with comments.  This is necessary, for
+# example, in the case of _POSIX_SOURCE, which is predefined and required
+# on some systems where configure will not decide to define it.
+# (The regexp can be short, since the line contains either #define or #undef.)
+echo 's/ $//
+s,^[	 #]*u.*,/* & */,' >>conftest.defines
+
+# Break up conftest.defines:
+ac_max_sed_lines=50
+
+# First sed command is:	 sed -f defines.sed $ac_file_inputs >"$tmp/out1"
+# Second one is:	 sed -f defines.sed "$tmp/out1" >"$tmp/out2"
+# Third one will be:	 sed -f defines.sed "$tmp/out2" >"$tmp/out1"
+# et cetera.
+ac_in='$ac_file_inputs'
+ac_out='"$tmp/out1"'
+ac_nxt='"$tmp/out2"'
+
+while :
+do
+  # Write a here document:
+    cat >>$CONFIG_STATUS <<_ACEOF
+    # First, check the format of the line:
+    cat >"\$tmp/defines.sed" <<\\CEOF
+/^[	 ]*#[	 ]*undef[	 ][	 ]*$ac_word_re[	 ]*\$/b def
+/^[	 ]*#[	 ]*define[	 ][	 ]*$ac_word_re[(	 ]/b def
+b
+:def
+_ACEOF
+  sed ${ac_max_sed_lines}q conftest.defines >>$CONFIG_STATUS
+  echo 'CEOF
+    sed -f "$tmp/defines.sed"' "$ac_in >$ac_out" >>$CONFIG_STATUS
+  ac_in=$ac_out; ac_out=$ac_nxt; ac_nxt=$ac_in
+  sed 1,${ac_max_sed_lines}d conftest.defines >conftest.tail
+  grep . conftest.tail >/dev/null || break
+  rm -f conftest.defines
+  mv conftest.tail conftest.defines
+done
+rm -f conftest.defines conftest.tail
+
+echo "ac_result=$ac_in" >>$CONFIG_STATUS
+cat >>$CONFIG_STATUS <<\_ACEOF
+  if test x"$ac_file" != x-; then
+    echo "/* $configure_input  */" >"$tmp/config.h"
+    cat "$ac_result" >>"$tmp/config.h"
+    if diff $ac_file "$tmp/config.h" >/dev/null 2>&1; then
+      { echo "$as_me:$LINENO: $ac_file is unchanged" >&5
+echo "$as_me: $ac_file is unchanged" >&6;}
+    else
+      rm -f $ac_file
+      mv "$tmp/config.h" $ac_file
+    fi
+  else
+    echo "/* $configure_input  */"
+    cat "$ac_result"
+  fi
+  rm -f "$tmp/out12"
+# Compute $ac_file's index in $config_headers.
+_am_stamp_count=1
+for _am_header in $config_headers :; do
+  case $_am_header in
+    $ac_file | $ac_file:* )
+      break ;;
+    * )
+      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
+  esac
+done
+echo "timestamp for $ac_file" >`$as_dirname -- $ac_file ||
+$as_expr X$ac_file : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X$ac_file : 'X\(//\)[^/]' \| \
+	 X$ac_file : 'X\(//\)$' \| \
+	 X$ac_file : 'X\(/\)' \| . 2>/dev/null ||
+echo X$ac_file |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`/stamp-h$_am_stamp_count
+ ;;
+
+  :C)  { echo "$as_me:$LINENO: executing $ac_file commands" >&5
+echo "$as_me: executing $ac_file commands" >&6;}
+ ;;
+  esac
+
+
+  case $ac_file$ac_mode in
+    "depfiles":C) test x"$AMDEP_TRUE" != x"" || for mf in $CONFIG_FILES; do
+  # Strip MF so we end up with the name of the file.
+  mf=`echo "$mf" | sed -e 's/:.*$//'`
+  # Check whether this is an Automake generated Makefile or not.
+  # We used to match only the files named `Makefile.in', but
+  # some people rename them; so instead we look at the file content.
+  # Grep'ing the first line is not enough: some people post-process
+  # each Makefile.in and add a new line on top of each file to say so.
+  # So let's grep whole file.
+  if grep '^#.*generated by automake' $mf > /dev/null 2>&1; then
+    dirpart=`$as_dirname -- "$mf" ||
+$as_expr X"$mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$mf" : 'X\(//\)[^/]' \| \
+	 X"$mf" : 'X\(//\)$' \| \
+	 X"$mf" : 'X\(/\)' \| . 2>/dev/null ||
+echo X"$mf" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+  else
+    continue
+  fi
+  # Extract the definition of DEPDIR, am__include, and am__quote
+  # from the Makefile without running `make'.
+  DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
+  test -z "$DEPDIR" && continue
+  am__include=`sed -n 's/^am__include = //p' < "$mf"`
+  test -z "am__include" && continue
+  am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
+  # When using ansi2knr, U may be empty or an underscore; expand it
+  U=`sed -n 's/^U = //p' < "$mf"`
+  # Find all dependency output files, they are included files with
+  # $(DEPDIR) in their names.  We invoke sed twice because it is the
+  # simplest approach to changing $(DEPDIR) to its actual value in the
+  # expansion.
+  for file in `sed -n "
+    s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
+       sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
+    # Make sure the directory exists.
+    test -f "$dirpart/$file" && continue
+    fdir=`$as_dirname -- "$file" ||
+$as_expr X"$file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$file" : 'X\(//\)[^/]' \| \
+	 X"$file" : 'X\(//\)$' \| \
+	 X"$file" : 'X\(/\)' \| . 2>/dev/null ||
+echo X"$file" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+    { as_dir=$dirpart/$fdir
+  case $as_dir in #(
+  -*) as_dir=./$as_dir;;
+  esac
+  test -d "$as_dir" || { $as_mkdir_p && mkdir -p "$as_dir"; } || {
+    as_dirs=
+    while :; do
+      case $as_dir in #(
+      *\'*) as_qdir=`echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #(
+      *) as_qdir=$as_dir;;
+      esac
+      as_dirs="'$as_qdir' $as_dirs"
+      as_dir=`$as_dirname -- "$as_dir" ||
+$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$as_dir" : 'X\(//\)[^/]' \| \
+	 X"$as_dir" : 'X\(//\)$' \| \
+	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
+echo X"$as_dir" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+      test -d "$as_dir" && break
+    done
+    test -z "$as_dirs" || eval "mkdir $as_dirs"
+  } || test -d "$as_dir" || { { echo "$as_me:$LINENO: error: cannot create directory $as_dir" >&5
+echo "$as_me: error: cannot create directory $as_dir" >&2;}
+   { (exit 1); exit 1; }; }; }
+    # echo "creating $dirpart/$file"
+    echo '# dummy' > "$dirpart/$file"
+  done
+done
+ ;;
+    "testsuite/etest":F) chmod +x testsuite/etest ;;
+
+  esac
+done # for ac_tag
+
+
+{ (exit 0); exit 0; }
+_ACEOF
+chmod +x $CONFIG_STATUS
+ac_clean_files=$ac_clean_files_save
+
+
+# configure is writing to config.log, and then calls config.status.
+# config.status does its own redirection, appending to config.log.
+# Unfortunately, on DOS this fails, as config.log is still kept open
+# by configure, so config.status won't be able to write to it; its
+# output is simply discarded.  So we exec the FD to /dev/null,
+# effectively closing config.log, so it can be properly (re)opened and
+# appended to by config.status.  When coming back to configure, we
+# need to make the FD available again.
+if test "$no_create" != yes; then
+  ac_cs_success=:
+  ac_config_status_args=
+  test "$silent" = yes &&
+    ac_config_status_args="$ac_config_status_args --quiet"
+  exec 5>/dev/null
+  $SHELL $CONFIG_STATUS $ac_config_status_args || ac_cs_success=false
+  exec 5>>config.log
+  # Use ||, not &&, to avoid exiting from the if with $? = 1, which
+  # would make configure fail if this is the last instruction.
+  $ac_cs_success || { (exit 1); exit 1; }
+fi
+
+
+
+echo
+
+  text=`$ECHO $seo " %B== exmpp ${PACKAGE_VERSION}${EXMPP_DISTSUFFIX} ==%b" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec " %B== exmpp ${PACKAGE_VERSION}${EXMPP_DISTSUFFIX} ==%b" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+echo
+
+  text=`$ECHO $seo "Configuration:" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "Configuration:" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+
+  text=`$ECHO $seo "    Prefix:             ${prefix}" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "    Prefix:             ${prefix}" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+
+  text=`$ECHO $seo "    Application dir.:   ${exp_ERLANG_INSTALL_LIB_DIR_exmpp}" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "    Application dir.:   ${exp_ERLANG_INSTALL_LIB_DIR_exmpp}" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+echo
+
+  text=`$ECHO $seo "    C compiler:         ${CC} ${CFLAGS}" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "    C compiler:         ${CC} ${CFLAGS}" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+
+  text=`$ECHO $seo "    Erlang emulator:    ${ERL}" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "    Erlang emulator:    ${ERL}" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+
+  text=`$ECHO $seo "    Erlang compiler:    ${ERLC}" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "    Erlang compiler:    ${ERLC}" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+
+  text=`$ECHO $seo "    Erlang interpreter: ${ESCRIPT}" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "    Erlang interpreter: ${ESCRIPT}" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+echo
+
+  text=`$ECHO $seo "    Debug/warnings:     ${enable_debug}/${enable_warnings}" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "    Debug/warnings:     ${enable_debug}/${enable_warnings}" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+
+  text=`$ECHO $seo "    Compat modules:     ${enable_compat}" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "    Compat modules:     ${enable_compat}" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+
+  text=`$ECHO $seo "    Documentation:      ${enable_documentation}" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "    Documentation:      ${enable_documentation}" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+
+  text=`$ECHO $seo "    Testsuite:          ${enable_testsuite}" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "    Testsuite:          ${enable_testsuite}" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+
+  text=`$ECHO $seo "    Examples:           ${enable_examples}" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "    Examples:           ${enable_examples}" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+echo
+
+  text=`$ECHO $seo "    XML parsers:" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "    XML parsers:" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+
+  text=`$ECHO $seo "      . Expat:          ${build_with_expat}" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "      . Expat:          ${build_with_expat}" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+
+  text=`$ECHO $seo "      . LibXML2:        ${build_with_libxml2}" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "      . LibXML2:        ${build_with_libxml2}" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+echo
+
+  text=`$ECHO $seo "    TLS engines:" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "    TLS engines:" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+
+  text=`$ECHO $seo "      . OpenSSL:        ${build_with_openssl}" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "      . OpenSSL:        ${build_with_openssl}" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+echo
+
+  text=`$ECHO $seo "    Compression engines:" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "    Compression engines:" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+
+  text=`$ECHO $seo "      . Zlib:           ${build_with_zlib}" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "      . Zlib:           ${build_with_zlib}" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  echo "$as_me:$LINENO: $text" >&5
+
+echo
diff -r d551623afde5 deps/exmpp/configure.ac
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/configure.ac	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,455 @@
+dnl ------------------------------------------------------------------
+dnl Autoconf initialization.
+dnl ------------------------------------------------------------------
+
+AC_INIT([exmpp], [0.9.2], [js.pedron@meetic-corp.com], [exmpp])
+AC_CONFIG_SRCDIR([include/exmpp.hrl])
+AC_CONFIG_MACRO_DIR([m4])
+AC_CONFIG_AUX_DIR([ac-aux])
+
+AC_CANONICAL_TARGET
+AM_INIT_AUTOMAKE([foreign])
+
+AC_PREREQ([2.60])
+AC_REVISION([$Revision: 890 $])
+
+dnl ------------------------------------------------------------------
+dnl Internal functions for this configure script.
+dnl ------------------------------------------------------------------
+
+dnl EMKOPTS is used by Emakefile(s).
+append_to_EMKOPTS () {
+	if test -z "[$]EMKOPTS"; then
+		EMKOPTS="[$]1"
+	else
+		EMKOPTS="[$]{EMKOPTS% }, [$]1"
+	fi
+}
+
+dnl Expand shell variables to have a nice output in the final report.
+expand_var () {
+	local v=`eval echo '$'[$]1`
+	while test "`echo [$]v | grep [[$]] > /dev/null && echo nok`"; do
+		v=`eval echo [$]v`
+	done
+	echo [$]v
+}
+
+dnl ------------------------------------------------------------------
+dnl Versionning.
+dnl ------------------------------------------------------------------
+
+dnl Release date.
+dnl EXMPP_RELEASE_DATE=
+
+dnl Is this a final release?
+is_release=0
+if test "x${EXMPP_RELEASE_DATE}" != "x"; then
+	is_release=1
+fi
+
+dnl Subversion revision.
+if test $is_release -eq 0; then
+	EXMPP_SVNREV=`svnversion $srcdir | sed 's/^[[^:]]*://'`
+	which svnversion > /dev/null; \
+	if test $? -ne 0 -o "x$EXMPP_SVNREV" = "xexported"; then
+		EXMPP_SVNREV=`cat $srcdir/SVNREV`
+	else
+		echo $EXMPP_SVNREV > $srcdir/SVNREV
+	fi
+	if test $EXMPP_SVNREV; then
+		EXMPP_DISTSUFFIX="-r$EXMPP_SVNREV"
+	fi
+fi
+
+dnl ------------------------------------------------------------------
+dnl Compilater and other tools.
+dnl ------------------------------------------------------------------
+
+AC_PROG_CC_STDC
+
+AC_PROG_LD
+AC_PROG_INSTALL
+AC_PROG_MAKE_SET
+AC_PROG_SED
+
+COLORED_ECHO_INIT
+
+dnl ------------------------------------------------------------------
+dnl Libtool.
+dnl ------------------------------------------------------------------
+
+dnl Hack to skip C++/Fortran tests (stolen from Beep Media Player)
+m4_undefine([AC_PROG_CXX])
+m4_defun([AC_PROG_CXX],[])
+m4_undefine([AC_PROG_F77])
+m4_defun([AC_PROG_F77],[])
+
+AM_DISABLE_STATIC
+AM_ENABLE_SHARED
+
+AM_PROG_LIBTOOL
+
+dnl ------------------------------------------------------------------
+dnl Options.
+dnl ------------------------------------------------------------------
+
+dnl Debugging option.
+if test $is_release -eq 0; then
+	default_enable_debug="yes"
+else
+	default_enable_debug="no"
+fi
+AC_ARG_ENABLE([debug],
+	AC_HELP_STRING([--enable-debug],
+	    [turn on debugging [[default=auto]]]),,
+	enable_debug=$default_enable_debug)
+if test "x${enable_debug}" = "xyes"; then
+	dnl AC_DEFINE([DEBUG], [], [Enable debug])
+	append_to_EMKOPTS "debug_info"
+	append_to_EMKOPTS "{d, debug}"
+else
+	CPPFLAGS="-DNDEBUG ${CPPFLAGS# }"
+fi
+
+dnl Print any warnings.
+if test "x$GCC" = "xyes"; then
+	CFLAGS="${CFLAGS% } -Wall"
+fi
+append_to_EMKOPTS "report_warnings"
+append_to_EMKOPTS "{warn_format, 1}"
+append_to_EMKOPTS "warn_export_vars"
+append_to_EMKOPTS "warn_shadow_vars"
+append_to_EMKOPTS "warn_unused_import"
+
+dnl Treat warnings as errors.
+AC_ARG_ENABLE([warnings],
+	AC_HELP_STRING([--enable-warnings],
+	    [treat warnings as errors [[default=yes]]]),,
+	enable_warnings="yes")
+if test "x${enable_warnings}" = "xyes" -a "x${GCC}" = "xyes"; then
+	CFLAGS="${CFLAGS% } -Werror"
+fi
+
+dnl Compatibility modules.
+AC_ARG_ENABLE([compat],
+	AC_HELP_STRING([--enable-compat],
+	    [build compatibility modules [[default=no]]]),,
+	enable_compat="no")
+if test "x${enable_compat}" = "xyes"; then
+	COMPAT_MODULES_START=","
+	COMPAT_MODULES=""
+else
+	COMPAT_MODULES_START=" % Compatibility modules disabled:"
+	COMPAT_MODULES="%"
+fi
+AM_CONDITIONAL(BUILD_COMPAT, test "x${enable_compat}" = "xyes")
+AC_SUBST(COMPAT_MODULES_START)
+AC_SUBST(COMPAT_MODULES)
+
+dnl Documentation.
+AC_ARG_ENABLE([documentation],
+	AC_HELP_STRING([--enable-documentation],
+	    [build documentation [[default=yes]]]),,
+	enable_documentation="yes")
+AM_CONDITIONAL(ENABLE_DOCUMENTATION, test "x${enable_documentation}" = "xyes")
+
+dnl Examples.
+AC_ARG_ENABLE([examples],
+	AC_HELP_STRING([--enable-examples],
+	    [build examples [[default=no]]]),,
+	enable_examples="no")
+AM_CONDITIONAL(ENABLE_EXAMPLES, test "x${enable_examples}" = "xyes")
+
+dnl Internal escaping function to use.
+AC_ARG_ENABLE([escaping-using-cdata],
+	AC_HELP_STRING([--enable-escaping-using-cdata],
+	    [escape XML text node with CDATA sections [[default=off]]]),,
+	enable_escaping_using_cdata="no")
+if test "x${enable_escaping_using_cdata}" = "xyes"; then
+	append_to_EMKOPTS "{d, 'ESCAPE_USING_CDATA_SECTIONS'}"
+fi
+
+dnl ------------------------------------------------------------------
+dnl Erlang environment.
+dnl ------------------------------------------------------------------
+
+echo
+COLORED_ECHO([%BErlang environment%b])
+
+dnl Available flags.
+AC_ARG_WITH([erlang],
+	AC_HELP_STRING([--with-erlang=PREFIX],
+	    [prefix where build machine's Erlang is installed (optional)]),
+	with_erlang=${withval%/},
+	with_erlang="")
+
+dnl erl(1) is used to compile Erlang modules.
+if test "x${with_erlang}" = "x"; then
+	AC_ERLANG_PATH_ERL
+	AC_ERLANG_PATH_ERLC
+else
+	erl_path="${with_erlang}/bin"
+	AC_ERLANG_PATH_ERL(, [$erl_path$PATH_SEPARATOR$PATH])
+	AC_ERLANG_PATH_ERLC(, [$erl_path$PATH_SEPARATOR$PATH])
+fi
+
+if test "x${ERL}" = "x"; then
+	AC_MSG_ERROR([
+Erlang not found. Fill the ERL variable with erl(1) path or provide
+Erlang prefix with --with-erlang.])
+fi
+
+dnl escript(1) is used by the testsuite.
+AC_ARG_VAR([ESCRIPT], [Erlang/OTP interpreter command [autodetected]])
+
+if test "x${ESCRIPT}" = "x"; then
+	if test "x${with_erlang}" = "x"; then
+		AC_PATH_PROG([ESCRIPT], [escript],,)
+	else
+		erl_path="${with_erlang}/bin"
+		AC_PATH_PROG([ESCRIPT], [escript],,
+		    [$erl_path$PATH_SEPARATOR$PATH])
+	fi
+else
+	AC_MSG_CHECKING([for escript])
+	AC_MSG_RESULT([$ESCRIPT])
+fi
+
+if test "x${ESCRIPT}" = "x"; then
+	AC_MSG_WARN([
+escript(1) not found. Fill the ESCRIPT variable with escript(1) path if
+you want to use the testsuite.])
+fi
+
+dnl Get Erlang $ROOT dir and lib dir.
+AC_ERLANG_SUBST_ROOT_DIR
+AC_ERLANG_SUBST_LIB_DIR
+
+dnl Get ERTS version.
+ERLANG_CHECK_ERTS
+ERLANG_CHECK_RELEASE
+
+dnl Erlang R12B-0 (ERTS 5.6) is required to build Exmpp.
+AX_COMPARE_VERSION([${ERLANG_ERTS_VER}], [ge], [5.6],
+    [is_erlang_r12b="yes"],
+    [is_erlang_r12b="no"])
+if test "x${is_erlang_r12b}" = "xno"; then
+	AC_MSG_ERROR([
+Erlang R12B is required to build Exmpp but only Erlang $ERLANG_RELEASE was found!])
+fi
+
+dnl Check for Erlang applications.
+
+dnl Check for erl_interface (used by port drivers).
+AC_ERLANG_CHECK_LIB([erl_interface],,
+    [AC_MSG_ERROR([erl_interface was not found!])])
+
+dnl Check for EUnit (used for the testsuite).
+if test "x${ESCRIPT}" = "x"; then
+	AC_ERLANG_CHECK_LIB([eunit],,)
+fi
+
+dnl Determine directories for installation.
+if test "x${prefix}" = "xNONE"; then
+	dnl Inside Erlang lib directory.
+	ERLANG_INSTALL_LIB_DIR="${ERLANG_LIB_DIR}"
+else
+	dnl Under $prefix
+	ERLANG_INSTALL_LIB_DIR="${prefix}"
+fi
+
+AC_ERLANG_SUBST_INSTALL_LIB_DIR
+AC_ERLANG_SUBST_INSTALL_LIB_SUBDIR(exmpp, ${VERSION})
+
+dnl SMP support.
+dnl
+dnl Support is enabled by default for Erlang R12B and later ; disabled
+dnl otherwise.
+AC_MSG_CHECKING([for SMP support])
+
+AC_ARG_ENABLE([smp-support],
+	AC_HELP_STRING([--enable-smp-support],
+	    [enable SMP support [[default=yes]]]),,
+	enable_smp_support="yes")
+AM_CONDITIONAL(ENABLE_SMP_SUPPORT, test "x${enable_smp_support}" = "xyes")
+
+if test "x${enable_smp_support}" = "xyes"; then
+	AC_DEFINE(SMP_SUPPORT, [], [SMP support enabled in port drivers.])
+	AC_DEFINE(USE_RWLOCK, [], [Use rwlocks.])
+	AC_DEFINE(_REENTRANT, [], [_REENTRANT])
+
+	AC_MSG_RESULT([yes (Erlang $ERLANG_RELEASE)])
+else
+	AC_MSG_RESULT([no (disabled by user)])
+fi
+
+dnl Do we have all the tools for the testsuite to be used.
+if test "x${ERLANG_LIB_DIR_eunit}" != "xnot found" -a "x${ESCRIPT}" != "x"; then
+	enable_testsuite="yes"
+else
+	enable_testsuite="no"
+fi
+AM_CONDITIONAL([ENABLE_TESTSUITE], [test "x${enable_testsuite}" = "xyes"])
+
+dnl ------------------------------------------------------------------
+dnl Dependencies.
+dnl ------------------------------------------------------------------
+
+echo
+COLORED_ECHO([%BXML parsers dependencies%b])
+
+dnl Expat port driver.
+EXMPP_EXPAT(build_with_expat="yes", build_with_expat="no")
+AM_CONDITIONAL(WITH_EXPAT, test "x${build_with_expat}" = "xyes")
+if test "x${build_with_expat}" = "xyes"; then
+	append_to_EMKOPTS "{d, 'HAVE_EXPAT'}"
+fi
+
+dnl LibXML2 port driver.
+PKG_CHECK_MODULES([LIBXML2], [libxml-2.0],
+    build_with_libxml2="yes", build_with_libxml2="no")
+AM_CONDITIONAL(WITH_LIBXML2, test "x${build_with_libxml2}" = "xyes")
+if test "x${build_with_libxml2}" = "xyes"; then
+	append_to_EMKOPTS "{d, 'HAVE_LIBXML2'}"
+fi
+
+echo
+COLORED_ECHO([%BTLS engines dependencies%b])
+
+dnl OpenSSL TLS port driver.
+EXMPP_OPENSSL(build_with_openssl="yes", build_with_openssl="no")
+AM_CONDITIONAL(WITH_OPENSSL, test "x${build_with_openssl}" = "xyes")
+if test "x${build_with_openssl}" = "xyes"; then
+	append_to_EMKOPTS "{d, 'HAVE_OPENSSL'}"
+fi
+
+echo
+COLORED_ECHO([%BCompression engines dependencies%b])
+
+dnl Zlib compression port driver.
+EXMPP_ZLIB(build_with_zlib="yes", build_with_zlib="no")
+AM_CONDITIONAL(WITH_ZLIB, test "x${build_with_zlib}" = "xyes")
+if test "x${build_with_zlib}" = "xyes"; then
+	append_to_EMKOPTS "{d, 'HAVE_ZLIB'}"
+fi
+
+dnl ------------------------------------------------------------------
+dnl Detect Operating System.
+dnl ------------------------------------------------------------------
+
+echo
+COLORED_ECHO([%BDetect Operating System%b])
+
+AC_CANONICAL_SYSTEM
+#AC_DEFINE_UNQUOTED(CPU_VENDOR_OS, "$target")
+#AC_SUBST(target_os)
+case "$target_os" in
+    *darwin10*)
+	echo "Target OS is: Darwin10 (Mac OS X)"
+	AC_LANG(Erlang)
+	AC_RUN_IFELSE(
+	    [AC_LANG_PROGRAM([],[dnl
+	     halt(case erlang:system_info(wordsize) of
+	     8 -> 0; 4 -> 1 end)])],
+	    [AC_MSG_NOTICE(found 64-bit Erlang)
+	     CBIT=-m64],
+	    [AC_MSG_NOTICE(found 32-bit Erlang)
+	     CBIT=-m32])
+	;;
+    *)        
+	echo "Target OS is: '$target_os'"
+	CBIT=""
+	;;
+esac
+CFLAGS="$CFLAGS $CBIT"
+LD_SHARED="$LD_SHARED $CBIT"
+echo "CBIT = '$CBIT'"
+echo "CFLAGS = '$CFLAGS'"
+echo "LD_SHARED = '$LD_SHARED'"
+
+dnl ------------------------------------------------------------------
+dnl Finale substitutions.
+dnl ------------------------------------------------------------------
+
+CPPFLAGS="${CPPFLAGS# }"
+CFLAGS="${CFLAGS# }"
+LDFLAGS="${LDFLAGS# }"
+
+CPPFLAGS="${CPPFLAGS% }"
+CFLAGS="${CFLAGS% }"
+LDFLAGS="${LDFLAGS% }"
+
+AC_SUBST(EMKOPTS)
+
+AC_SUBST(EXMPP_RELEASE_DATE)
+
+AC_SUBST(EXMPP_SVNREV)
+AC_SUBST(EXMPP_DISTSUFFIX)
+
+AC_SUBST(EXMPP_BUILD_ARCH)
+AC_SUBST(EXMPP_HOST_ARCH)
+
+exp_ERLANG_INSTALL_LIB_DIR_exmpp=`expand_var ERLANG_INSTALL_LIB_DIR_exmpp`
+AC_SUBST(exp_ERLANG_INSTALL_LIB_DIR_exmpp)
+
+AC_SUBST(ERL_DRIVER_LDFLAGS)
+
+dnl ------------------------------------------------------------------
+dnl Autoconf output.
+dnl ------------------------------------------------------------------
+
+echo
+AM_CONFIG_HEADER([config.h])
+AC_CONFIG_FILES([
+	c_src/Makefile
+	include/Makefile
+	include/internal/Makefile
+	src/Makefile
+	src/Emakefile
+	ebin/Makefile
+	ebin/exmpp.app
+	ebin/exmpp.appup
+	doc/Makefile
+	testsuite/Makefile
+	examples/Makefile
+	examples/Emakefile
+	Makefile
+])
+AC_CONFIG_FILES([
+	testsuite/etest
+], [chmod +x testsuite/etest])
+AC_OUTPUT
+
+dnl --------------------------------------------------
+dnl Configuration report
+dnl --------------------------------------------------
+
+echo
+COLORED_ECHO([ %B== exmpp ${PACKAGE_VERSION}${EXMPP_DISTSUFFIX} ==%b])
+echo
+COLORED_ECHO([Configuration:])
+COLORED_ECHO([    Prefix:             ${prefix}])
+COLORED_ECHO([    Application dir.:   ${exp_ERLANG_INSTALL_LIB_DIR_exmpp}])
+echo
+COLORED_ECHO([    C compiler:         ${CC} ${CFLAGS}])
+COLORED_ECHO([    Erlang emulator:    ${ERL}])
+COLORED_ECHO([    Erlang compiler:    ${ERLC}])
+COLORED_ECHO([    Erlang interpreter: ${ESCRIPT}])
+echo
+COLORED_ECHO([    Debug/warnings:     ${enable_debug}/${enable_warnings}])
+COLORED_ECHO([    Compat modules:     ${enable_compat}])
+COLORED_ECHO([    Documentation:      ${enable_documentation}])
+COLORED_ECHO([    Testsuite:          ${enable_testsuite}])
+COLORED_ECHO([    Examples:           ${enable_examples}])
+echo
+COLORED_ECHO([    XML parsers:])
+COLORED_ECHO([      . Expat:          ${build_with_expat}])
+COLORED_ECHO([      . LibXML2:        ${build_with_libxml2}])
+echo
+COLORED_ECHO([    TLS engines:])
+COLORED_ECHO([      . OpenSSL:        ${build_with_openssl}])
+echo
+COLORED_ECHO([    Compression engines:])
+COLORED_ECHO([      . Zlib:           ${build_with_zlib}])
+echo
diff -r d551623afde5 deps/exmpp/doc/Makefile
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/doc/Makefile	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,485 @@
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
+# doc/Makefile.  Generated from Makefile.in by configure.
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+
+
+srcdir = .
+top_srcdir = ..
+
+pkgdatadir = $(datadir)/exmpp
+pkglibdir = $(libdir)/exmpp
+pkgincludedir = $(includedir)/exmpp
+top_builddir = ..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = /usr/bin/install -c
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = i686-pc-linux-gnu
+host_triplet = i686-pc-linux-gnu
+target_triplet = i686-pc-linux-gnu
+subdir = doc
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_compare_version.m4 \
+	$(top_srcdir)/m4/colored-echo.m4 $(top_srcdir)/m4/erlang.m4 \
+	$(top_srcdir)/m4/expat.m4 $(top_srcdir)/m4/openssl.m4 \
+	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/zlib.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES =
+SOURCES =
+DIST_SOURCES =
+am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
+am__vpath_adj = case $$p in \
+    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
+    *) f=$$p;; \
+  esac;
+am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
+am__installdirs = "$(DESTDIR)$(htmldocdir)"
+htmldocDATA_INSTALL = $(INSTALL_DATA)
+DATA = $(htmldoc_DATA)
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run aclocal-1.9
+AMDEP_FALSE = #
+AMDEP_TRUE = 
+AMTAR = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run tar
+AR = ar
+AUTOCONF = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run autoconf
+AUTOHEADER = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run autoheader
+AUTOMAKE = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run automake-1.9
+AWK = mawk
+BUILD_COMPAT_FALSE = 
+BUILD_COMPAT_TRUE = #
+CC = gcc -std=gnu99
+CCDEPMODE = depmode=gcc3
+CFLAGS = -g -O2 -Wall -Werror
+COMPAT_MODULES = %
+COMPAT_MODULES_START =  % Compatibility modules disabled:
+CPP = gcc -std=gnu99 -E
+CPPFLAGS = 
+CXXCPP = 
+CYGPATH_W = echo
+DEFS = -DHAVE_CONFIG_H
+DEPDIR = .deps
+ECHO = echo
+ECHO_C = 
+ECHO_N = -n
+ECHO_T = 
+EGREP = /bin/grep -E
+EMKOPTS = debug_info, {d, debug}, report_warnings, {warn_format, 1}, warn_export_vars, warn_shadow_vars, warn_unused_import, {d, 'HAVE_EXPAT'}, {d, 'HAVE_LIBXML2'}, {d, 'HAVE_OPENSSL'}, {d, 'HAVE_ZLIB'}
+ENABLE_DOCUMENTATION_FALSE = 
+ENABLE_DOCUMENTATION_TRUE = #
+ENABLE_EXAMPLES_FALSE = 
+ENABLE_EXAMPLES_TRUE = #
+ENABLE_SMP_SUPPORT_FALSE = #
+ENABLE_SMP_SUPPORT_TRUE = 
+ENABLE_TESTSUITE_FALSE = #
+ENABLE_TESTSUITE_TRUE = 
+ERL = /usr/bin/erl
+ERLANG_ERTS_DIR = /usr/lib/erlang/erts-5.7.2
+ERLANG_ERTS_VER = 5.7.2
+ERLANG_INSTALL_LIB_DIR = /usr/lib/erlang/lib
+ERLANG_INSTALL_LIB_DIR_exmpp = ${ERLANG_INSTALL_LIB_DIR}/exmpp-${VERSION}
+ERLANG_LIB_DIR = /usr/lib/erlang/lib
+ERLANG_LIB_DIR_erl_interface = /usr/lib/erlang/lib/erl_interface-3.6.2
+ERLANG_LIB_DIR_eunit = 
+ERLANG_LIB_VER_erl_interface = 3.6.2
+ERLANG_LIB_VER_eunit = 
+ERLANG_RELEASE = R13B01
+ERLANG_ROOT_DIR = /usr/lib/erlang
+ERLC = /usr/bin/erlc
+ERLCFLAGS = 
+ERL_DRIVER_LDFLAGS = 
+ESCRIPT = /usr/bin/escript
+EXEEXT = 
+EXMPP_BUILD_ARCH = 
+EXMPP_DISTSUFFIX = -r903
+EXMPP_HOST_ARCH = 
+EXMPP_RELEASE_DATE = 
+EXMPP_SVNREV = 903
+EXPAT_CPPFLAGS = 
+EXPAT_LDFLAGS = 
+EXPAT_LIBS = -lexpat
+GREP = /bin/grep
+INSTALL_DATA = ${INSTALL} -m 644
+INSTALL_PROGRAM = ${INSTALL}
+INSTALL_SCRIPT = ${INSTALL}
+INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
+LDFLAGS = 
+LIBOBJS = 
+LIBS = 
+LIBTOOL = $(SHELL) $(top_builddir)/libtool
+LIBXML2_CFLAGS = -I/usr/include/libxml2  
+LIBXML2_LIBS = -lxml2  
+LN_S = ln -s
+LTLIBOBJS = 
+MAKEINFO = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run makeinfo
+OBJEXT = o
+OPENSSL_CPPFLAGS = 
+OPENSSL_LDFLAGS = 
+OPENSSL_LIBS = -lssl -lcrypto
+PACKAGE = exmpp
+PACKAGE_BUGREPORT = js.pedron@meetic-corp.com
+PACKAGE_NAME = exmpp
+PACKAGE_STRING = exmpp 0.9.2
+PACKAGE_TARNAME = exmpp
+PACKAGE_VERSION = 0.9.2
+PATH_SEPARATOR = :
+PKG_CONFIG = /usr/bin/pkg-config
+RANLIB = ranlib
+SED = /bin/sed
+SET_MAKE = 
+SHELL = /bin/bash
+STRIP = strip
+VERSION = 0.9.2
+WITH_EXPAT_FALSE = #
+WITH_EXPAT_TRUE = 
+WITH_LIBXML2_FALSE = #
+WITH_LIBXML2_TRUE = 
+WITH_OPENSSL_FALSE = #
+WITH_OPENSSL_TRUE = 
+WITH_ZLIB_FALSE = #
+WITH_ZLIB_TRUE = 
+ZLIB_CPPFLAGS = 
+ZLIB_LDFLAGS = 
+ZLIB_LIBS = -lz
+ac_ct_CC = gcc
+am__fastdepCC_FALSE = #
+am__fastdepCC_TRUE = 
+am__include = include
+am__leading_dot = .
+am__quote = 
+am__tar = ${AMTAR} chof - "$$tardir"
+am__untar = ${AMTAR} xf -
+bindir = ${exec_prefix}/bin
+build = i686-pc-linux-gnu
+build_alias = 
+build_cpu = i686
+build_os = linux-gnu
+build_vendor = pc
+datadir = ${datarootdir}
+datarootdir = ${prefix}/share
+docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
+dvidir = ${docdir}
+exec_prefix = ${prefix}
+exp_ERLANG_INSTALL_LIB_DIR_exmpp = /usr/lib/erlang/lib/exmpp-0.9.2
+host = i686-pc-linux-gnu
+host_alias = 
+host_cpu = i686
+host_os = linux-gnu
+host_vendor = pc
+htmldir = ${docdir}
+includedir = ${prefix}/include
+infodir = ${datarootdir}/info
+install_sh = /home/arjan/devel/zotonic/deps/exmpp/ac-aux/install-sh
+libdir = ${exec_prefix}/lib
+libexecdir = ${exec_prefix}/libexec
+localedir = ${datarootdir}/locale
+localstatedir = ${prefix}/var
+mandir = ${datarootdir}/man
+mkdir_p = mkdir -p --
+oldincludedir = /usr/include
+pdfdir = ${docdir}
+prefix = /usr/local
+program_transform_name = s,x,x,
+psdir = ${docdir}
+sbindir = ${exec_prefix}/sbin
+sharedstatedir = ${prefix}/com
+sysconfdir = ${prefix}/etc
+target = i686-pc-linux-gnu
+target_alias = 
+target_cpu = i686
+target_os = linux-gnu
+target_vendor = pc
+EXTRA_DIST = overview.edoc stylesheet.css
+ERL_SRCS = $(top_srcdir)/src/core/*.erl					\
+	   $(top_srcdir)/src/server/*.erl				\
+	   $(top_srcdir)/src/client/*.erl				\
+	   $(top_srcdir)/src/compat/*.erl
+
+HTML_FILES = index.html							\
+	     modules-frame.html						\
+	     overview-summary.html					\
+	     packages-frame.html					\
+	     exmpp.html							\
+	     exmpp_client_binding.html					\
+	     exmpp_client_compression.html				\
+	     exmpp_client_disco.html				\
+	     exmpp_client_legacy_auth.html				\
+	     exmpp_client_privacy.html					\
+	     exmpp_client_pubsub.html					\
+	     exmpp_client_register.html					\
+	     exmpp_client_roster.html					\
+	     exmpp_client_sasl.html					\
+	     exmpp_client_session.html					\
+	     exmpp_client_tls.html					\
+	     exmpp_compress.html					\
+	     exmpp_component.html					\
+	     exmpp_dialback.html					\
+	     exmpp_internals.html					\
+	     exmpp_iq.html						\
+	     exmpp_jid.html						\
+	     exmpp_message.html						\
+	     exmpp_presence.html					\
+	     exmpp_server_binding.html					\
+	     exmpp_server_compression.html				\
+	     exmpp_server_legacy_auth.html				\
+	     exmpp_server_privacy.html					\
+	     exmpp_server_sasl.html					\
+	     exmpp_server_session.html					\
+	     exmpp_server_tls.html					\
+	     exmpp_session.html						\
+	     exmpp_ssl.html						\
+	     exmpp_stanza.html						\
+	     exmpp_stream.html						\
+	     exmpp_stringprep.html					\
+	     exmpp_sup.html						\
+	     exmpp_tcp.html						\
+	     exmpp_bosh.html						\
+	     exmpp_tls.html						\
+	     exmpp_utils.html						\
+	     exmpp_xml.html						\
+	     exmpp_xmlstream.html					\
+	     ejabberd_socket.html					\
+	     ejabberd_zlib.html						\
+	     jlib.html							\
+	     stringprep.html						\
+	     tls.html							\
+	     xml.html							\
+	     xml_stream.html
+
+htmldocdir = $(ERLANG_INSTALL_LIB_DIR_exmpp)/doc/html
+htmldoc_DATA = $(HTML_FILES) stylesheet.css erlang.png
+CLEANFILES = $(HTML_FILES) edoc-info erlang.png
+all: all-am
+
+.SUFFIXES:
+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  doc/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --foreign  doc/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure:  $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+distclean-libtool:
+	-rm -f libtool
+uninstall-info-am:
+install-htmldocDATA: $(htmldoc_DATA)
+	@$(NORMAL_INSTALL)
+	test -z "$(htmldocdir)" || $(mkdir_p) "$(DESTDIR)$(htmldocdir)"
+	@list='$(htmldoc_DATA)'; for p in $$list; do \
+	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
+	  f=$(am__strip_dir) \
+	  echo " $(htmldocDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(htmldocdir)/$$f'"; \
+	  $(htmldocDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(htmldocdir)/$$f"; \
+	done
+
+uninstall-htmldocDATA:
+	@$(NORMAL_UNINSTALL)
+	@list='$(htmldoc_DATA)'; for p in $$list; do \
+	  f=$(am__strip_dir) \
+	  echo " rm -f '$(DESTDIR)$(htmldocdir)/$$f'"; \
+	  rm -f "$(DESTDIR)$(htmldocdir)/$$f"; \
+	done
+tags: TAGS
+TAGS:
+
+ctags: CTAGS
+CTAGS:
+
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile $(DATA) all-local
+installdirs:
+	for dir in "$(DESTDIR)$(htmldocdir)"; do \
+	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
+	done
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic clean-libtool clean-local mostlyclean-am
+
+distclean: distclean-am
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-libtool
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am: install-htmldocDATA
+
+install-exec-am:
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-generic mostlyclean-libtool
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-htmldocDATA uninstall-info-am
+
+.PHONY: all all-am all-local check check-am clean clean-generic \
+	clean-libtool clean-local distclean distclean-generic \
+	distclean-libtool distdir dvi dvi-am html html-am info info-am \
+	install install-am install-data install-data-am install-exec \
+	install-exec-am install-htmldocDATA install-info \
+	install-info-am install-man install-strip installcheck \
+	installcheck-am installdirs maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-generic \
+	mostlyclean-libtool pdf pdf-am ps ps-am uninstall uninstall-am \
+	uninstall-htmldocDATA uninstall-info-am
+
+
+stylesheet.css:
+	(test "$(srcdir)" != "." &&\
+	 (test ! -e "$@" || test "$(srcdir)/$@" -nt "$@") &&\
+	 cp "$(srcdir)/$@" "$@") || :
+
+erlang.png:
+
+$(HTML_FILES): overview.edoc $(ERL_SRCS) stylesheet.css
+	$(ERL) +B -noshell\
+		-run edoc_run application "'$(PACKAGE_NAME)'" '"$(top_srcdir)"'\
+		'[{def, {vsn, "$(PACKAGE_VERSION)"}}, {dir, "."}, {stylesheet, "stylesheet.css"}, {preprocess, true}, {includes, ["$(top_builddir)/include"]}, no_packages]'\
+		-s erlang halt
+	@for f in $(HTML_FILES); do					\
+		$(SED) -i.bak						\
+		-e 's|</title>|</title><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">|'						\
+		-e 's|\xa9|\&copy;|g' $$f &&				\
+		rm -f $$f.bak;						\
+	done
+
+all-local: $(HTML_FILES)
+
+clean-local:
+	(test "$(srcdir)" != "." && rm -f stylesheet.css) || :
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff -r d551623afde5 deps/exmpp/doc/Makefile.am
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/doc/Makefile.am	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,87 @@
+EXTRA_DIST = overview.edoc stylesheet.css
+
+stylesheet.css:
+	(test "$(srcdir)" != "." &&\
+	 (test ! -e "$@" || test "$(srcdir)/$@" -nt "$@") &&\
+	 cp "$(srcdir)/$@" "$@") || :
+
+erlang.png:
+
+ERL_SRCS = $(top_srcdir)/src/core/*.erl					\
+	   $(top_srcdir)/src/server/*.erl				\
+	   $(top_srcdir)/src/client/*.erl				\
+	   $(top_srcdir)/src/compat/*.erl
+
+HTML_FILES = index.html							\
+	     modules-frame.html						\
+	     overview-summary.html					\
+	     packages-frame.html					\
+	     exmpp.html							\
+	     exmpp_client_binding.html					\
+	     exmpp_client_compression.html				\
+	     exmpp_client_disco.html				\
+	     exmpp_client_legacy_auth.html				\
+	     exmpp_client_privacy.html					\
+	     exmpp_client_pubsub.html					\
+	     exmpp_client_register.html					\
+	     exmpp_client_roster.html					\
+	     exmpp_client_sasl.html					\
+	     exmpp_client_session.html					\
+	     exmpp_client_tls.html					\
+	     exmpp_compress.html					\
+	     exmpp_component.html					\
+	     exmpp_dialback.html					\
+	     exmpp_internals.html					\
+	     exmpp_iq.html						\
+	     exmpp_jid.html						\
+	     exmpp_message.html						\
+	     exmpp_presence.html					\
+	     exmpp_server_binding.html					\
+	     exmpp_server_compression.html				\
+	     exmpp_server_legacy_auth.html				\
+	     exmpp_server_privacy.html					\
+	     exmpp_server_sasl.html					\
+	     exmpp_server_session.html					\
+	     exmpp_server_tls.html					\
+	     exmpp_session.html						\
+	     exmpp_ssl.html						\
+	     exmpp_stanza.html						\
+	     exmpp_stream.html						\
+	     exmpp_stringprep.html					\
+	     exmpp_sup.html						\
+	     exmpp_tcp.html						\
+	     exmpp_bosh.html						\
+	     exmpp_tls.html						\
+	     exmpp_utils.html						\
+	     exmpp_xml.html						\
+	     exmpp_xmlstream.html					\
+	     ejabberd_socket.html					\
+	     ejabberd_zlib.html						\
+	     jlib.html							\
+	     stringprep.html						\
+	     tls.html							\
+	     xml.html							\
+	     xml_stream.html
+
+$(HTML_FILES): overview.edoc $(ERL_SRCS) stylesheet.css
+	$(ERL) +B -noshell\
+		-run edoc_run application "'$(PACKAGE_NAME)'" '"$(top_srcdir)"'\
+		'[{def, {vsn, "$(PACKAGE_VERSION)"}}, {dir, "."}, {stylesheet, "stylesheet.css"}, {preprocess, true}, {includes, ["$(top_builddir)/include"]}, no_packages]'\
+		-s erlang halt
+	@for f in $(HTML_FILES); do					\
+		$(SED) -i.bak						\
+		-e 's|</title>|</title><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">|'						\
+		-e 's|\xa9|\&copy;|g' $$f &&				\
+		rm -f $$f.bak;						\
+	done
+
+all-local: $(HTML_FILES)
+
+clean-local:
+	(test "$(srcdir)" != "." && rm -f stylesheet.css) || :
+
+htmldocdir = $(ERLANG_INSTALL_LIB_DIR_exmpp)/doc/html
+
+htmldoc_DATA = $(HTML_FILES) stylesheet.css erlang.png
+
+CLEANFILES = $(HTML_FILES) edoc-info erlang.png
diff -r d551623afde5 deps/exmpp/doc/Makefile.in
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/doc/Makefile.in	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,485 @@
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = @build@
+host_triplet = @host@
+target_triplet = @target@
+subdir = doc
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_compare_version.m4 \
+	$(top_srcdir)/m4/colored-echo.m4 $(top_srcdir)/m4/erlang.m4 \
+	$(top_srcdir)/m4/expat.m4 $(top_srcdir)/m4/openssl.m4 \
+	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/zlib.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES =
+SOURCES =
+DIST_SOURCES =
+am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
+am__vpath_adj = case $$p in \
+    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
+    *) f=$$p;; \
+  esac;
+am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
+am__installdirs = "$(DESTDIR)$(htmldocdir)"
+htmldocDATA_INSTALL = $(INSTALL_DATA)
+DATA = $(htmldoc_DATA)
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BUILD_COMPAT_FALSE = @BUILD_COMPAT_FALSE@
+BUILD_COMPAT_TRUE = @BUILD_COMPAT_TRUE@
+CC = @CC@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+COMPAT_MODULES = @COMPAT_MODULES@
+COMPAT_MODULES_START = @COMPAT_MODULES_START@
+CPP = @CPP@
+CPPFLAGS = @CPPFLAGS@
+CXXCPP = @CXXCPP@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+ECHO = @ECHO@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EGREP = @EGREP@
+EMKOPTS = @EMKOPTS@
+ENABLE_DOCUMENTATION_FALSE = @ENABLE_DOCUMENTATION_FALSE@
+ENABLE_DOCUMENTATION_TRUE = @ENABLE_DOCUMENTATION_TRUE@
+ENABLE_EXAMPLES_FALSE = @ENABLE_EXAMPLES_FALSE@
+ENABLE_EXAMPLES_TRUE = @ENABLE_EXAMPLES_TRUE@
+ENABLE_SMP_SUPPORT_FALSE = @ENABLE_SMP_SUPPORT_FALSE@
+ENABLE_SMP_SUPPORT_TRUE = @ENABLE_SMP_SUPPORT_TRUE@
+ENABLE_TESTSUITE_FALSE = @ENABLE_TESTSUITE_FALSE@
+ENABLE_TESTSUITE_TRUE = @ENABLE_TESTSUITE_TRUE@
+ERL = @ERL@
+ERLANG_ERTS_DIR = @ERLANG_ERTS_DIR@
+ERLANG_ERTS_VER = @ERLANG_ERTS_VER@
+ERLANG_INSTALL_LIB_DIR = @ERLANG_INSTALL_LIB_DIR@
+ERLANG_INSTALL_LIB_DIR_exmpp = @ERLANG_INSTALL_LIB_DIR_exmpp@
+ERLANG_LIB_DIR = @ERLANG_LIB_DIR@
+ERLANG_LIB_DIR_erl_interface = @ERLANG_LIB_DIR_erl_interface@
+ERLANG_LIB_DIR_eunit = @ERLANG_LIB_DIR_eunit@
+ERLANG_LIB_VER_erl_interface = @ERLANG_LIB_VER_erl_interface@
+ERLANG_LIB_VER_eunit = @ERLANG_LIB_VER_eunit@
+ERLANG_RELEASE = @ERLANG_RELEASE@
+ERLANG_ROOT_DIR = @ERLANG_ROOT_DIR@
+ERLC = @ERLC@
+ERLCFLAGS = @ERLCFLAGS@
+ERL_DRIVER_LDFLAGS = @ERL_DRIVER_LDFLAGS@
+ESCRIPT = @ESCRIPT@
+EXEEXT = @EXEEXT@
+EXMPP_BUILD_ARCH = @EXMPP_BUILD_ARCH@
+EXMPP_DISTSUFFIX = @EXMPP_DISTSUFFIX@
+EXMPP_HOST_ARCH = @EXMPP_HOST_ARCH@
+EXMPP_RELEASE_DATE = @EXMPP_RELEASE_DATE@
+EXMPP_SVNREV = @EXMPP_SVNREV@
+EXPAT_CPPFLAGS = @EXPAT_CPPFLAGS@
+EXPAT_LDFLAGS = @EXPAT_LDFLAGS@
+EXPAT_LIBS = @EXPAT_LIBS@
+GREP = @GREP@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LIBTOOL = @LIBTOOL@
+LIBXML2_CFLAGS = @LIBXML2_CFLAGS@
+LIBXML2_LIBS = @LIBXML2_LIBS@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAKEINFO = @MAKEINFO@
+OBJEXT = @OBJEXT@
+OPENSSL_CPPFLAGS = @OPENSSL_CPPFLAGS@
+OPENSSL_LDFLAGS = @OPENSSL_LDFLAGS@
+OPENSSL_LIBS = @OPENSSL_LIBS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+PKG_CONFIG = @PKG_CONFIG@
+RANLIB = @RANLIB@
+SED = @SED@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+WITH_EXPAT_FALSE = @WITH_EXPAT_FALSE@
+WITH_EXPAT_TRUE = @WITH_EXPAT_TRUE@
+WITH_LIBXML2_FALSE = @WITH_LIBXML2_FALSE@
+WITH_LIBXML2_TRUE = @WITH_LIBXML2_TRUE@
+WITH_OPENSSL_FALSE = @WITH_OPENSSL_FALSE@
+WITH_OPENSSL_TRUE = @WITH_OPENSSL_TRUE@
+WITH_ZLIB_FALSE = @WITH_ZLIB_FALSE@
+WITH_ZLIB_TRUE = @WITH_ZLIB_TRUE@
+ZLIB_CPPFLAGS = @ZLIB_CPPFLAGS@
+ZLIB_LDFLAGS = @ZLIB_LDFLAGS@
+ZLIB_LIBS = @ZLIB_LIBS@
+ac_ct_CC = @ac_ct_CC@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+am__tar = @am__tar@
+am__untar = @am__untar@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+datarootdir = @datarootdir@
+docdir = @docdir@
+dvidir = @dvidir@
+exec_prefix = @exec_prefix@
+exp_ERLANG_INSTALL_LIB_DIR_exmpp = @exp_ERLANG_INSTALL_LIB_DIR_exmpp@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+htmldir = @htmldir@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localedir = @localedir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+pdfdir = @pdfdir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+psdir = @psdir@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target = @target@
+target_alias = @target_alias@
+target_cpu = @target_cpu@
+target_os = @target_os@
+target_vendor = @target_vendor@
+EXTRA_DIST = overview.edoc stylesheet.css
+ERL_SRCS = $(top_srcdir)/src/core/*.erl					\
+	   $(top_srcdir)/src/server/*.erl				\
+	   $(top_srcdir)/src/client/*.erl				\
+	   $(top_srcdir)/src/compat/*.erl
+
+HTML_FILES = index.html							\
+	     modules-frame.html						\
+	     overview-summary.html					\
+	     packages-frame.html					\
+	     exmpp.html							\
+	     exmpp_client_binding.html					\
+	     exmpp_client_compression.html				\
+	     exmpp_client_disco.html				\
+	     exmpp_client_legacy_auth.html				\
+	     exmpp_client_privacy.html					\
+	     exmpp_client_pubsub.html					\
+	     exmpp_client_register.html					\
+	     exmpp_client_roster.html					\
+	     exmpp_client_sasl.html					\
+	     exmpp_client_session.html					\
+	     exmpp_client_tls.html					\
+	     exmpp_compress.html					\
+	     exmpp_component.html					\
+	     exmpp_dialback.html					\
+	     exmpp_internals.html					\
+	     exmpp_iq.html						\
+	     exmpp_jid.html						\
+	     exmpp_message.html						\
+	     exmpp_presence.html					\
+	     exmpp_server_binding.html					\
+	     exmpp_server_compression.html				\
+	     exmpp_server_legacy_auth.html				\
+	     exmpp_server_privacy.html					\
+	     exmpp_server_sasl.html					\
+	     exmpp_server_session.html					\
+	     exmpp_server_tls.html					\
+	     exmpp_session.html						\
+	     exmpp_ssl.html						\
+	     exmpp_stanza.html						\
+	     exmpp_stream.html						\
+	     exmpp_stringprep.html					\
+	     exmpp_sup.html						\
+	     exmpp_tcp.html						\
+	     exmpp_bosh.html						\
+	     exmpp_tls.html						\
+	     exmpp_utils.html						\
+	     exmpp_xml.html						\
+	     exmpp_xmlstream.html					\
+	     ejabberd_socket.html					\
+	     ejabberd_zlib.html						\
+	     jlib.html							\
+	     stringprep.html						\
+	     tls.html							\
+	     xml.html							\
+	     xml_stream.html
+
+htmldocdir = $(ERLANG_INSTALL_LIB_DIR_exmpp)/doc/html
+htmldoc_DATA = $(HTML_FILES) stylesheet.css erlang.png
+CLEANFILES = $(HTML_FILES) edoc-info erlang.png
+all: all-am
+
+.SUFFIXES:
+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  doc/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --foreign  doc/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure:  $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+distclean-libtool:
+	-rm -f libtool
+uninstall-info-am:
+install-htmldocDATA: $(htmldoc_DATA)
+	@$(NORMAL_INSTALL)
+	test -z "$(htmldocdir)" || $(mkdir_p) "$(DESTDIR)$(htmldocdir)"
+	@list='$(htmldoc_DATA)'; for p in $$list; do \
+	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
+	  f=$(am__strip_dir) \
+	  echo " $(htmldocDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(htmldocdir)/$$f'"; \
+	  $(htmldocDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(htmldocdir)/$$f"; \
+	done
+
+uninstall-htmldocDATA:
+	@$(NORMAL_UNINSTALL)
+	@list='$(htmldoc_DATA)'; for p in $$list; do \
+	  f=$(am__strip_dir) \
+	  echo " rm -f '$(DESTDIR)$(htmldocdir)/$$f'"; \
+	  rm -f "$(DESTDIR)$(htmldocdir)/$$f"; \
+	done
+tags: TAGS
+TAGS:
+
+ctags: CTAGS
+CTAGS:
+
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile $(DATA) all-local
+installdirs:
+	for dir in "$(DESTDIR)$(htmldocdir)"; do \
+	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
+	done
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic clean-libtool clean-local mostlyclean-am
+
+distclean: distclean-am
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-libtool
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am: install-htmldocDATA
+
+install-exec-am:
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-generic mostlyclean-libtool
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-htmldocDATA uninstall-info-am
+
+.PHONY: all all-am all-local check check-am clean clean-generic \
+	clean-libtool clean-local distclean distclean-generic \
+	distclean-libtool distdir dvi dvi-am html html-am info info-am \
+	install install-am install-data install-data-am install-exec \
+	install-exec-am install-htmldocDATA install-info \
+	install-info-am install-man install-strip installcheck \
+	installcheck-am installdirs maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-generic \
+	mostlyclean-libtool pdf pdf-am ps ps-am uninstall uninstall-am \
+	uninstall-htmldocDATA uninstall-info-am
+
+
+stylesheet.css:
+	(test "$(srcdir)" != "." &&\
+	 (test ! -e "$@" || test "$(srcdir)/$@" -nt "$@") &&\
+	 cp "$(srcdir)/$@" "$@") || :
+
+erlang.png:
+
+$(HTML_FILES): overview.edoc $(ERL_SRCS) stylesheet.css
+	$(ERL) +B -noshell\
+		-run edoc_run application "'$(PACKAGE_NAME)'" '"$(top_srcdir)"'\
+		'[{def, {vsn, "$(PACKAGE_VERSION)"}}, {dir, "."}, {stylesheet, "stylesheet.css"}, {preprocess, true}, {includes, ["$(top_builddir)/include"]}, no_packages]'\
+		-s erlang halt
+	@for f in $(HTML_FILES); do					\
+		$(SED) -i.bak						\
+		-e 's|</title>|</title><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">|'						\
+		-e 's|\xa9|\&copy;|g' $$f &&				\
+		rm -f $$f.bak;						\
+	done
+
+all-local: $(HTML_FILES)
+
+clean-local:
+	(test "$(srcdir)" != "." && rm -f stylesheet.css) || :
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff -r d551623afde5 deps/exmpp/doc/exmpp_client_muc.html
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/doc/exmpp_client_muc.html	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,87 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
+<html>
+<head>
+<title>Module exmpp_client_muc</title>
+<link rel="stylesheet" type="text/css" href="stylesheet.css" title="EDoc">
+</head>
+<body bgcolor="white">
+<div class="navbar"><a name="#navbar_top"></a><table width="100%" border="0" cellspacing="0" cellpadding="2" summary="navigation bar"><tr><td><a href="overview-summary.html" target="overviewFrame">Overview</a></td><td><a href="http://www.erlang.org/"><img src="erlang.png" align="right" border="0" alt="erlang logo"></a></td></tr></table></div>
+<hr>
+
+<h1>Module exmpp_client_muc</h1>
+<ul class="index"><li><a href="#description">Description</a></li><li><a href="#index">Function Index</a></li><li><a href="#functions">Function Details</a></li></ul>Helper functions for generating MUC related stanzas.
+
+<p><b>Authors:</b> Pablo Polvorin (<a href="mailto:pablo.polvorin@process-one.net"><tt>pablo.polvorin@process-one.net</tt></a>).</p>
+
+<h2><a name="description">Description</a></h2>Helper functions for generating MUC related stanzas.
+       Very incomplete, now it only generates kick and ban stanzas.
+<h2><a name="index">Function Index</a></h2>
+<table width="100%" border="1" cellspacing="0" cellpadding="2" summary="function index"><tr><td valign="top"><a href="#ban-2">ban/2</a></td><td></td></tr>
+<tr><td valign="top"><a href="#ban-3">ban/3</a></td><td></td></tr>
+<tr><td valign="top"><a href="#ban-4">ban/4</a></td><td></td></tr>
+<tr><td valign="top"><a href="#get_banlist-1">get_banlist/1</a></td><td></td></tr>
+<tr><td valign="top"><a href="#get_banlist-2">get_banlist/2</a></td><td></td></tr>
+<tr><td valign="top"><a href="#kick-2">kick/2</a></td><td></td></tr>
+<tr><td valign="top"><a href="#kick-3">kick/3</a></td><td></td></tr>
+<tr><td valign="top"><a href="#kick-4">kick/4</a></td><td></td></tr>
+<tr><td valign="top"><a href="#update_banlist-2">update_banlist/2</a></td><td></td></tr>
+<tr><td valign="top"><a href="#update_banlist-3">update_banlist/3</a></td><td></td></tr>
+</table>
+
+<h2><a name="functions">Function Details</a></h2>
+
+<h3 class="function"><a name="ban-2">ban/2</a></h3>
+<div class="spec">
+<p><tt>ban(Room, JID) -&gt; any()</tt></p>
+</div>
+
+<h3 class="function"><a name="ban-3">ban/3</a></h3>
+<div class="spec">
+<p><tt>ban(NS, Room, JID) -&gt; any()</tt></p>
+</div>
+
+<h3 class="function"><a name="ban-4">ban/4</a></h3>
+<div class="spec">
+<p><tt>ban(NS, Room, JID, Reason) -&gt; any()</tt></p>
+</div>
+
+<h3 class="function"><a name="get_banlist-1">get_banlist/1</a></h3>
+<div class="spec">
+<p><tt>get_banlist(Room) -&gt; any()</tt></p>
+</div>
+
+<h3 class="function"><a name="get_banlist-2">get_banlist/2</a></h3>
+<div class="spec">
+<p><tt>get_banlist(NS, Room) -&gt; any()</tt></p>
+</div>
+
+<h3 class="function"><a name="kick-2">kick/2</a></h3>
+<div class="spec">
+<p><tt>kick(Room, Nick) -&gt; any()</tt></p>
+</div>
+
+<h3 class="function"><a name="kick-3">kick/3</a></h3>
+<div class="spec">
+<p><tt>kick(NS, Room, Nick) -&gt; any()</tt></p>
+</div>
+
+<h3 class="function"><a name="kick-4">kick/4</a></h3>
+<div class="spec">
+<p><tt>kick(NS, Room, Nick, Reason) -&gt; any()</tt></p>
+</div>
+
+<h3 class="function"><a name="update_banlist-2">update_banlist/2</a></h3>
+<div class="spec">
+<p><tt>update_banlist(Room, BanList) -&gt; any()</tt></p>
+</div>
+
+<h3 class="function"><a name="update_banlist-3">update_banlist/3</a></h3>
+<div class="spec">
+<p><tt>update_banlist(NS, Room, BanList) -&gt; any()</tt></p>
+</div>
+<hr>
+
+<div class="navbar"><a name="#navbar_bottom"></a><table width="100%" border="0" cellspacing="0" cellpadding="2" summary="navigation bar"><tr><td><a href="overview-summary.html" target="overviewFrame">Overview</a></td><td><a href="http://www.erlang.org/"><img src="erlang.png" align="right" border="0" alt="erlang logo"></a></td></tr></table></div>
+<p><i>Generated by EDoc, Jan 31 2010, 11:52:38.</i></p>
+</body>
+</html>
diff -r d551623afde5 deps/exmpp/doc/exmpp_known_attrs.html
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/doc/exmpp_known_attrs.html	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,30 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
+<html>
+<head>
+<title>Module exmpp_known_attrs</title>
+<link rel="stylesheet" type="text/css" href="stylesheet.css" title="EDoc">
+</head>
+<body bgcolor="white">
+<div class="navbar"><a name="#navbar_top"></a><table width="100%" border="0" cellspacing="0" cellpadding="2" summary="navigation bar"><tr><td><a href="overview-summary.html" target="overviewFrame">Overview</a></td><td><a href="http://www.erlang.org/"><img src="erlang.png" align="right" border="0" alt="erlang logo"></a></td></tr></table></div>
+<hr>
+
+<h1>Module exmpp_known_attrs</h1>
+<ul class="index"><li><a href="#index">Function Index</a></li><li><a href="#functions">Function Details</a></li></ul>
+
+
+<h2><a name="index">Function Index</a></h2>
+<table width="100%" border="1" cellspacing="0" cellpadding="2" summary="function index"><tr><td valign="top"><a href="#attr_as_list-1">attr_as_list/1</a></td><td></td></tr>
+</table>
+
+<h2><a name="functions">Function Details</a></h2>
+
+<h3 class="function"><a name="attr_as_list-1">attr_as_list/1</a></h3>
+<div class="spec">
+<p><tt>attr_as_list(Attr) -&gt; any()</tt></p>
+</div>
+<hr>
+
+<div class="navbar"><a name="#navbar_bottom"></a><table width="100%" border="0" cellspacing="0" cellpadding="2" summary="navigation bar"><tr><td><a href="overview-summary.html" target="overviewFrame">Overview</a></td><td><a href="http://www.erlang.org/"><img src="erlang.png" align="right" border="0" alt="erlang logo"></a></td></tr></table></div>
+<p><i>Generated by EDoc, Jan 31 2010, 11:52:39.</i></p>
+</body>
+</html>
diff -r d551623afde5 deps/exmpp/doc/exmpp_known_elems.html
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/doc/exmpp_known_elems.html	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,30 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
+<html>
+<head>
+<title>Module exmpp_known_elems</title>
+<link rel="stylesheet" type="text/css" href="stylesheet.css" title="EDoc">
+</head>
+<body bgcolor="white">
+<div class="navbar"><a name="#navbar_top"></a><table width="100%" border="0" cellspacing="0" cellpadding="2" summary="navigation bar"><tr><td><a href="overview-summary.html" target="overviewFrame">Overview</a></td><td><a href="http://www.erlang.org/"><img src="erlang.png" align="right" border="0" alt="erlang logo"></a></td></tr></table></div>
+<hr>
+
+<h1>Module exmpp_known_elems</h1>
+<ul class="index"><li><a href="#index">Function Index</a></li><li><a href="#functions">Function Details</a></li></ul>
+
+
+<h2><a name="index">Function Index</a></h2>
+<table width="100%" border="1" cellspacing="0" cellpadding="2" summary="function index"><tr><td valign="top"><a href="#elem_as_list-1">elem_as_list/1</a></td><td></td></tr>
+</table>
+
+<h2><a name="functions">Function Details</a></h2>
+
+<h3 class="function"><a name="elem_as_list-1">elem_as_list/1</a></h3>
+<div class="spec">
+<p><tt>elem_as_list(Elem) -&gt; any()</tt></p>
+</div>
+<hr>
+
+<div class="navbar"><a name="#navbar_bottom"></a><table width="100%" border="0" cellspacing="0" cellpadding="2" summary="navigation bar"><tr><td><a href="overview-summary.html" target="overviewFrame">Overview</a></td><td><a href="http://www.erlang.org/"><img src="erlang.png" align="right" border="0" alt="erlang logo"></a></td></tr></table></div>
+<p><i>Generated by EDoc, Jan 31 2010, 11:52:39.</i></p>
+</body>
+</html>
diff -r d551623afde5 deps/exmpp/doc/exmpp_known_nss.html
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/doc/exmpp_known_nss.html	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,30 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
+<html>
+<head>
+<title>Module exmpp_known_nss</title>
+<link rel="stylesheet" type="text/css" href="stylesheet.css" title="EDoc">
+</head>
+<body bgcolor="white">
+<div class="navbar"><a name="#navbar_top"></a><table width="100%" border="0" cellspacing="0" cellpadding="2" summary="navigation bar"><tr><td><a href="overview-summary.html" target="overviewFrame">Overview</a></td><td><a href="http://www.erlang.org/"><img src="erlang.png" align="right" border="0" alt="erlang logo"></a></td></tr></table></div>
+<hr>
+
+<h1>Module exmpp_known_nss</h1>
+<ul class="index"><li><a href="#index">Function Index</a></li><li><a href="#functions">Function Details</a></li></ul>
+
+
+<h2><a name="index">Function Index</a></h2>
+<table width="100%" border="1" cellspacing="0" cellpadding="2" summary="function index"><tr><td valign="top"><a href="#ns_as_list-1">ns_as_list/1</a></td><td></td></tr>
+</table>
+
+<h2><a name="functions">Function Details</a></h2>
+
+<h3 class="function"><a name="ns_as_list-1">ns_as_list/1</a></h3>
+<div class="spec">
+<p><tt>ns_as_list(NS) -&gt; any()</tt></p>
+</div>
+<hr>
+
+<div class="navbar"><a name="#navbar_bottom"></a><table width="100%" border="0" cellspacing="0" cellpadding="2" summary="navigation bar"><tr><td><a href="overview-summary.html" target="overviewFrame">Overview</a></td><td><a href="http://www.erlang.org/"><img src="erlang.png" align="right" border="0" alt="erlang logo"></a></td></tr></table></div>
+<p><i>Generated by EDoc, Jan 31 2010, 11:52:39.</i></p>
+</body>
+</html>
diff -r d551623afde5 deps/exmpp/doc/overview.edoc
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/doc/overview.edoc	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,49 @@
+@author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+@author Pablo Polvorin <pablo.polvorin@process-one.net>
+@version {@vsn}
+@title exmpp
+@copyright ProcessOne 2006-2010
+
+@doc
+<p>
+This library is composed of modules providing <strong>utilities to
+ease</strong> the <strong>development</strong> of an <strong>XMPP
+entity</strong> (a client or a server for instance).
+</p>
+
+<h2>Goals</h2>
+<p>
+The code was derivated from
+<a href="http://www.process-one.net/en/ejabberd/">ejabberd</a> 1.1.1. The
+reason was that several new projects were based on ejabberd directly,
+resulting in a lot of code duplication.
+</p>
+<p>
+The need for an independant library was clear. <strong>exmpp</strong>
+is a toolbox containing modules to help XMPP client and server
+developers. The library is made with the following objectives in mind:
+</p>
+<ul>
+  <li>Full XMPP 1.0 support</li>
+  <li>API cleanup</li>
+  <li>Testsuite and documentation</li>
+</ul>
+<p>
+To be clear, modules found in this toolkit will only provide functions
+to build and interpret XML stanzas. They won't take care of neither the
+communication with a remote entity, nor the logical stanzas flow.
+</p>
+
+<h2>TODO</h2>
+<h3>Possible bugs</h3>
+<ul>
+  <li>Fix `maxsize' handling in the parser.</li>
+</ul>
+<h3>Improvements</h3>
+<ul>
+  <li>Rework {@link exmpp_xml:node_to_iolist/3} serializer to transform
+  directly {@link exmpp_xml:xmlel()} to text without converting it to
+  {@link exmpp_xml:xmlel_old()} first.</li>
+</ul>
+<h3>New features</h3>
+<!-- vim:set ft=xhtml: -->
diff -r d551623afde5 deps/exmpp/doc/stylesheet.css
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/doc/stylesheet.css	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,44 @@
+body {
+  color: #000;
+  background-color: #fff;
+}
+
+h1 {
+  border-bottom: solid 1px #000;
+}
+
+h2 {
+  border-bottom: dashed 1px #bbb;
+}
+
+pre {
+  color: #461b7e;
+  margin-left: 1em;
+}
+
+code {
+  color: #007a00;
+}
+
+a code {
+  color: inherit;
+}
+
+caption {
+  font-style: italic;
+  color: #009;
+  margin-left: 20px;
+}
+
+table[border="1"], table.illustration {
+  border-collapse: collapse;
+  margin-bottom: 1em;
+}
+
+table[border="1"] td, table.illustration td {
+  border: 1px solid #ddd;
+}
+
+table.illustration td {
+  padding: 4px;
+}
diff -r d551623afde5 deps/exmpp/examples/Emakefile
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/examples/Emakefile	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,14 @@
+{
+	[
+		'./echo_client',
+		'./bosh_client'
+	],
+	[
+		debug_info, {d, debug}, report_warnings, {warn_format, 1}, warn_export_vars, warn_shadow_vars, warn_unused_import, {d, 'HAVE_EXPAT'}, {d, 'HAVE_LIBXML2'}, {d, 'HAVE_OPENSSL'}, {d, 'HAVE_ZLIB'},
+		{outdir, "./../ebin"},
+		{i, "../include"},
+		{i, "../include"}
+	]
+}.
+
+% vim:ft=erlang:
diff -r d551623afde5 deps/exmpp/examples/Emakefile.in
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/examples/Emakefile.in	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,14 @@
+{
+	[
+		'@srcdir@/echo_client',
+		'@srcdir@/bosh_client'
+	],
+	[
+		@EMKOPTS@,
+		{outdir, "@builddir@/../ebin"},
+		{i, "@top_srcdir@/include"},
+		{i, "@top_builddir@/include"}
+	]
+}.
+
+% vim:ft=erlang:
diff -r d551623afde5 deps/exmpp/examples/Makefile
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/examples/Makefile	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,382 @@
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
+# examples/Makefile.  Generated from Makefile.in by configure.
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+
+srcdir = .
+top_srcdir = ..
+
+pkgdatadir = $(datadir)/exmpp
+pkglibdir = $(libdir)/exmpp
+pkgincludedir = $(includedir)/exmpp
+top_builddir = ..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = /usr/bin/install -c
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = i686-pc-linux-gnu
+host_triplet = i686-pc-linux-gnu
+target_triplet = i686-pc-linux-gnu
+subdir = examples
+DIST_COMMON = $(srcdir)/Emakefile.in $(srcdir)/Makefile.am \
+	$(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_compare_version.m4 \
+	$(top_srcdir)/m4/colored-echo.m4 $(top_srcdir)/m4/erlang.m4 \
+	$(top_srcdir)/m4/expat.m4 $(top_srcdir)/m4/openssl.m4 \
+	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/zlib.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES = Emakefile
+SOURCES =
+DIST_SOURCES =
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run aclocal-1.9
+AMDEP_FALSE = #
+AMDEP_TRUE = 
+AMTAR = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run tar
+AR = ar
+AUTOCONF = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run autoconf
+AUTOHEADER = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run autoheader
+AUTOMAKE = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run automake-1.9
+AWK = mawk
+BUILD_COMPAT_FALSE = 
+BUILD_COMPAT_TRUE = #
+CC = gcc -std=gnu99
+CCDEPMODE = depmode=gcc3
+CFLAGS = -g -O2 -Wall -Werror
+COMPAT_MODULES = %
+COMPAT_MODULES_START =  % Compatibility modules disabled:
+CPP = gcc -std=gnu99 -E
+CPPFLAGS = 
+CXXCPP = 
+CYGPATH_W = echo
+DEFS = -DHAVE_CONFIG_H
+DEPDIR = .deps
+ECHO = echo
+ECHO_C = 
+ECHO_N = -n
+ECHO_T = 
+EGREP = /bin/grep -E
+EMKOPTS = debug_info, {d, debug}, report_warnings, {warn_format, 1}, warn_export_vars, warn_shadow_vars, warn_unused_import, {d, 'HAVE_EXPAT'}, {d, 'HAVE_LIBXML2'}, {d, 'HAVE_OPENSSL'}, {d, 'HAVE_ZLIB'}
+ENABLE_DOCUMENTATION_FALSE = 
+ENABLE_DOCUMENTATION_TRUE = #
+ENABLE_EXAMPLES_FALSE = 
+ENABLE_EXAMPLES_TRUE = #
+ENABLE_SMP_SUPPORT_FALSE = #
+ENABLE_SMP_SUPPORT_TRUE = 
+ENABLE_TESTSUITE_FALSE = #
+ENABLE_TESTSUITE_TRUE = 
+ERL = /usr/bin/erl
+ERLANG_ERTS_DIR = /usr/lib/erlang/erts-5.7.2
+ERLANG_ERTS_VER = 5.7.2
+ERLANG_INSTALL_LIB_DIR = /usr/lib/erlang/lib
+ERLANG_INSTALL_LIB_DIR_exmpp = ${ERLANG_INSTALL_LIB_DIR}/exmpp-${VERSION}
+ERLANG_LIB_DIR = /usr/lib/erlang/lib
+ERLANG_LIB_DIR_erl_interface = /usr/lib/erlang/lib/erl_interface-3.6.2
+ERLANG_LIB_DIR_eunit = 
+ERLANG_LIB_VER_erl_interface = 3.6.2
+ERLANG_LIB_VER_eunit = 
+ERLANG_RELEASE = R13B01
+ERLANG_ROOT_DIR = /usr/lib/erlang
+ERLC = /usr/bin/erlc
+ERLCFLAGS = 
+ERL_DRIVER_LDFLAGS = 
+ESCRIPT = /usr/bin/escript
+EXEEXT = 
+EXMPP_BUILD_ARCH = 
+EXMPP_DISTSUFFIX = -r903
+EXMPP_HOST_ARCH = 
+EXMPP_RELEASE_DATE = 
+EXMPP_SVNREV = 903
+EXPAT_CPPFLAGS = 
+EXPAT_LDFLAGS = 
+EXPAT_LIBS = -lexpat
+GREP = /bin/grep
+INSTALL_DATA = ${INSTALL} -m 644
+INSTALL_PROGRAM = ${INSTALL}
+INSTALL_SCRIPT = ${INSTALL}
+INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
+LDFLAGS = 
+LIBOBJS = 
+LIBS = 
+LIBTOOL = $(SHELL) $(top_builddir)/libtool
+LIBXML2_CFLAGS = -I/usr/include/libxml2  
+LIBXML2_LIBS = -lxml2  
+LN_S = ln -s
+LTLIBOBJS = 
+MAKEINFO = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run makeinfo
+OBJEXT = o
+OPENSSL_CPPFLAGS = 
+OPENSSL_LDFLAGS = 
+OPENSSL_LIBS = -lssl -lcrypto
+PACKAGE = exmpp
+PACKAGE_BUGREPORT = js.pedron@meetic-corp.com
+PACKAGE_NAME = exmpp
+PACKAGE_STRING = exmpp 0.9.2
+PACKAGE_TARNAME = exmpp
+PACKAGE_VERSION = 0.9.2
+PATH_SEPARATOR = :
+PKG_CONFIG = /usr/bin/pkg-config
+RANLIB = ranlib
+SED = /bin/sed
+SET_MAKE = 
+SHELL = /bin/bash
+STRIP = strip
+VERSION = 0.9.2
+WITH_EXPAT_FALSE = #
+WITH_EXPAT_TRUE = 
+WITH_LIBXML2_FALSE = #
+WITH_LIBXML2_TRUE = 
+WITH_OPENSSL_FALSE = #
+WITH_OPENSSL_TRUE = 
+WITH_ZLIB_FALSE = #
+WITH_ZLIB_TRUE = 
+ZLIB_CPPFLAGS = 
+ZLIB_LDFLAGS = 
+ZLIB_LIBS = -lz
+ac_ct_CC = gcc
+am__fastdepCC_FALSE = #
+am__fastdepCC_TRUE = 
+am__include = include
+am__leading_dot = .
+am__quote = 
+am__tar = ${AMTAR} chof - "$$tardir"
+am__untar = ${AMTAR} xf -
+bindir = ${exec_prefix}/bin
+build = i686-pc-linux-gnu
+build_alias = 
+build_cpu = i686
+build_os = linux-gnu
+build_vendor = pc
+datadir = ${datarootdir}
+datarootdir = ${prefix}/share
+docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
+dvidir = ${docdir}
+exec_prefix = ${prefix}
+exp_ERLANG_INSTALL_LIB_DIR_exmpp = /usr/lib/erlang/lib/exmpp-0.9.2
+host = i686-pc-linux-gnu
+host_alias = 
+host_cpu = i686
+host_os = linux-gnu
+host_vendor = pc
+htmldir = ${docdir}
+includedir = ${prefix}/include
+infodir = ${datarootdir}/info
+install_sh = /home/arjan/devel/zotonic/deps/exmpp/ac-aux/install-sh
+libdir = ${exec_prefix}/lib
+libexecdir = ${exec_prefix}/libexec
+localedir = ${datarootdir}/locale
+localstatedir = ${prefix}/var
+mandir = ${datarootdir}/man
+mkdir_p = mkdir -p --
+oldincludedir = /usr/include
+pdfdir = ${docdir}
+prefix = /usr/local
+program_transform_name = s,x,x,
+psdir = ${docdir}
+sbindir = ${exec_prefix}/sbin
+sharedstatedir = ${prefix}/com
+sysconfdir = ${prefix}/etc
+target = i686-pc-linux-gnu
+target_alias = 
+target_cpu = i686
+target_os = linux-gnu
+target_vendor = pc
+EXTRA_DIST = echo_client.erl bosh_client.erl
+all: all-am
+
+.SUFFIXES:
+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  examples/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --foreign  examples/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure:  $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+Emakefile: $(top_builddir)/config.status $(srcdir)/Emakefile.in
+	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+distclean-libtool:
+	-rm -f libtool
+uninstall-info-am:
+tags: TAGS
+TAGS:
+
+ctags: CTAGS
+CTAGS:
+
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile all-local
+installdirs:
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic clean-libtool mostlyclean-am
+
+distclean: distclean-am
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-libtool
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-generic mostlyclean-libtool
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+.PHONY: all all-am all-local check check-am clean clean-generic \
+	clean-libtool distclean distclean-generic distclean-libtool \
+	distdir dvi dvi-am html html-am info info-am install \
+	install-am install-data install-data-am install-exec \
+	install-exec-am install-info install-info-am install-man \
+	install-strip installcheck installcheck-am installdirs \
+	maintainer-clean maintainer-clean-generic mostlyclean \
+	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
+	uninstall uninstall-am uninstall-info-am
+
+
+all-local:
+	@$(ERL) +B -noshell -pa ../ebin			\
+		-eval "case make:all() of				\
+		         up_to_date -> halt(0);				\
+		         Err ->						\
+		           io:format(\"~p~n\", [Err]),			\
+		           halt(1)					\
+		       end"
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff -r d551623afde5 deps/exmpp/examples/Makefile.am
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/examples/Makefile.am	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,10 @@
+EXTRA_DIST = echo_client.erl bosh_client.erl
+
+all-local:
+	@$(ERL) +B -noshell -pa @top_builddir@/ebin			\
+		-eval "case make:all() of				\
+		         up_to_date -> halt(0);				\
+		         Err ->						\
+		           io:format(\"~p~n\", [Err]),			\
+		           halt(1)					\
+		       end"
diff -r d551623afde5 deps/exmpp/examples/Makefile.in
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/examples/Makefile.in	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,382 @@
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = @build@
+host_triplet = @host@
+target_triplet = @target@
+subdir = examples
+DIST_COMMON = $(srcdir)/Emakefile.in $(srcdir)/Makefile.am \
+	$(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_compare_version.m4 \
+	$(top_srcdir)/m4/colored-echo.m4 $(top_srcdir)/m4/erlang.m4 \
+	$(top_srcdir)/m4/expat.m4 $(top_srcdir)/m4/openssl.m4 \
+	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/zlib.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES = Emakefile
+SOURCES =
+DIST_SOURCES =
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BUILD_COMPAT_FALSE = @BUILD_COMPAT_FALSE@
+BUILD_COMPAT_TRUE = @BUILD_COMPAT_TRUE@
+CC = @CC@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+COMPAT_MODULES = @COMPAT_MODULES@
+COMPAT_MODULES_START = @COMPAT_MODULES_START@
+CPP = @CPP@
+CPPFLAGS = @CPPFLAGS@
+CXXCPP = @CXXCPP@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+ECHO = @ECHO@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EGREP = @EGREP@
+EMKOPTS = @EMKOPTS@
+ENABLE_DOCUMENTATION_FALSE = @ENABLE_DOCUMENTATION_FALSE@
+ENABLE_DOCUMENTATION_TRUE = @ENABLE_DOCUMENTATION_TRUE@
+ENABLE_EXAMPLES_FALSE = @ENABLE_EXAMPLES_FALSE@
+ENABLE_EXAMPLES_TRUE = @ENABLE_EXAMPLES_TRUE@
+ENABLE_SMP_SUPPORT_FALSE = @ENABLE_SMP_SUPPORT_FALSE@
+ENABLE_SMP_SUPPORT_TRUE = @ENABLE_SMP_SUPPORT_TRUE@
+ENABLE_TESTSUITE_FALSE = @ENABLE_TESTSUITE_FALSE@
+ENABLE_TESTSUITE_TRUE = @ENABLE_TESTSUITE_TRUE@
+ERL = @ERL@
+ERLANG_ERTS_DIR = @ERLANG_ERTS_DIR@
+ERLANG_ERTS_VER = @ERLANG_ERTS_VER@
+ERLANG_INSTALL_LIB_DIR = @ERLANG_INSTALL_LIB_DIR@
+ERLANG_INSTALL_LIB_DIR_exmpp = @ERLANG_INSTALL_LIB_DIR_exmpp@
+ERLANG_LIB_DIR = @ERLANG_LIB_DIR@
+ERLANG_LIB_DIR_erl_interface = @ERLANG_LIB_DIR_erl_interface@
+ERLANG_LIB_DIR_eunit = @ERLANG_LIB_DIR_eunit@
+ERLANG_LIB_VER_erl_interface = @ERLANG_LIB_VER_erl_interface@
+ERLANG_LIB_VER_eunit = @ERLANG_LIB_VER_eunit@
+ERLANG_RELEASE = @ERLANG_RELEASE@
+ERLANG_ROOT_DIR = @ERLANG_ROOT_DIR@
+ERLC = @ERLC@
+ERLCFLAGS = @ERLCFLAGS@
+ERL_DRIVER_LDFLAGS = @ERL_DRIVER_LDFLAGS@
+ESCRIPT = @ESCRIPT@
+EXEEXT = @EXEEXT@
+EXMPP_BUILD_ARCH = @EXMPP_BUILD_ARCH@
+EXMPP_DISTSUFFIX = @EXMPP_DISTSUFFIX@
+EXMPP_HOST_ARCH = @EXMPP_HOST_ARCH@
+EXMPP_RELEASE_DATE = @EXMPP_RELEASE_DATE@
+EXMPP_SVNREV = @EXMPP_SVNREV@
+EXPAT_CPPFLAGS = @EXPAT_CPPFLAGS@
+EXPAT_LDFLAGS = @EXPAT_LDFLAGS@
+EXPAT_LIBS = @EXPAT_LIBS@
+GREP = @GREP@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LIBTOOL = @LIBTOOL@
+LIBXML2_CFLAGS = @LIBXML2_CFLAGS@
+LIBXML2_LIBS = @LIBXML2_LIBS@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAKEINFO = @MAKEINFO@
+OBJEXT = @OBJEXT@
+OPENSSL_CPPFLAGS = @OPENSSL_CPPFLAGS@
+OPENSSL_LDFLAGS = @OPENSSL_LDFLAGS@
+OPENSSL_LIBS = @OPENSSL_LIBS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+PKG_CONFIG = @PKG_CONFIG@
+RANLIB = @RANLIB@
+SED = @SED@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+WITH_EXPAT_FALSE = @WITH_EXPAT_FALSE@
+WITH_EXPAT_TRUE = @WITH_EXPAT_TRUE@
+WITH_LIBXML2_FALSE = @WITH_LIBXML2_FALSE@
+WITH_LIBXML2_TRUE = @WITH_LIBXML2_TRUE@
+WITH_OPENSSL_FALSE = @WITH_OPENSSL_FALSE@
+WITH_OPENSSL_TRUE = @WITH_OPENSSL_TRUE@
+WITH_ZLIB_FALSE = @WITH_ZLIB_FALSE@
+WITH_ZLIB_TRUE = @WITH_ZLIB_TRUE@
+ZLIB_CPPFLAGS = @ZLIB_CPPFLAGS@
+ZLIB_LDFLAGS = @ZLIB_LDFLAGS@
+ZLIB_LIBS = @ZLIB_LIBS@
+ac_ct_CC = @ac_ct_CC@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+am__tar = @am__tar@
+am__untar = @am__untar@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+datarootdir = @datarootdir@
+docdir = @docdir@
+dvidir = @dvidir@
+exec_prefix = @exec_prefix@
+exp_ERLANG_INSTALL_LIB_DIR_exmpp = @exp_ERLANG_INSTALL_LIB_DIR_exmpp@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+htmldir = @htmldir@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localedir = @localedir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+pdfdir = @pdfdir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+psdir = @psdir@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target = @target@
+target_alias = @target_alias@
+target_cpu = @target_cpu@
+target_os = @target_os@
+target_vendor = @target_vendor@
+EXTRA_DIST = echo_client.erl bosh_client.erl
+all: all-am
+
+.SUFFIXES:
+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  examples/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --foreign  examples/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure:  $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+Emakefile: $(top_builddir)/config.status $(srcdir)/Emakefile.in
+	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+distclean-libtool:
+	-rm -f libtool
+uninstall-info-am:
+tags: TAGS
+TAGS:
+
+ctags: CTAGS
+CTAGS:
+
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile all-local
+installdirs:
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic clean-libtool mostlyclean-am
+
+distclean: distclean-am
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-libtool
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-generic mostlyclean-libtool
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+.PHONY: all all-am all-local check check-am clean clean-generic \
+	clean-libtool distclean distclean-generic distclean-libtool \
+	distdir dvi dvi-am html html-am info info-am install \
+	install-am install-data install-data-am install-exec \
+	install-exec-am install-info install-info-am install-man \
+	install-strip installcheck installcheck-am installdirs \
+	maintainer-clean maintainer-clean-generic mostlyclean \
+	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
+	uninstall uninstall-am uninstall-info-am
+
+
+all-local:
+	@$(ERL) +B -noshell -pa @top_builddir@/ebin			\
+		-eval "case make:all() of				\
+		         up_to_date -> halt(0);				\
+		         Err ->						\
+		           io:format(\"~p~n\", [Err]),			\
+		           halt(1)					\
+		       end"
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff -r d551623afde5 deps/exmpp/examples/bosh_client.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/examples/bosh_client.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,87 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Mickael Remond <mickael.remond@process-one.net>
+
+%% @doc
+%% The module <strong>{@module}</strong> implements a simple BOSH XMPP client.
+%%
+%% <p>
+%% This is a example use of the exmpp framework.
+%% </p>
+%%
+%% <p>
+%% Usage:
+%% </p>
+%% <pre>{ok, session} = bosh_client:start().
+%% bosh_client:stop(Session).</pre>
+
+-module(bosh_client).
+
+-include_lib("exmpp/include/exmpp.hrl").
+-include_lib("exmpp/include/exmpp_client.hrl").
+
+-export([start/0, stop/1]).
+-export([init/0]).
+
+start() ->
+    spawn(?MODULE, init, []).
+
+stop(EchoClientPid) ->
+    EchoClientPid ! stop.
+
+init() ->
+    ok = application:start(exmpp),
+    ok = application:start(lhttpc),
+    MySession = exmpp_session:start({1,0}),
+    MyJID = exmpp_jid:make("bosh", "localhost", random),
+    exmpp_session:auth_basic_digest(MySession, MyJID, "password"),
+    %% Connect in standard TCP:
+    {ok, _StreamId, _Features} = exmpp_session:connect_BOSH(MySession,
+					   "http://127.0.0.1:5280/http-bind",
+					   "localhost", []),
+    session(MySession, MyJID).
+
+%% We are connected. We now log in (and try registering if authentication fails)
+session(MySession, _MyJID) ->
+    %% Login with defined JID / Authentication:
+    try exmpp_session:login(MySession, "PLAIN")
+    catch
+	throw:{auth_error, 'not-authorized'} ->
+ 	    %% Try creating a new user:
+ 	    io:format("Register~n",[]),
+ 	    %% In a real life client, we should trap error case here
+	    %% and print the correct message.
+	    exmpp_session:register_account(MySession, "password"),
+	    %% After registration, retry to login:
+	    exmpp_session:login(MySession)
+    end,
+    %% We explicitely send presence:
+    exmpp_session:send_packet(MySession,
+ 			      exmpp_presence:set_status(
+ 				exmpp_presence:available(), "Echo Ready")),
+    loop(MySession).
+
+%% Process exmpp packet:
+loop(MySession) ->
+    receive
+        stop ->
+            exmpp_session:stop(MySession);
+        %% If we receive a message, we reply with the same message
+        Record = #received_packet{packet_type=message, raw_packet=_Packet} ->
+            io:format("message: ~p~n", [Record]),
+            loop(MySession);
+        Record ->
+            io:format("~p~n", [Record]),
+            loop(MySession)
+    end.
diff -r d551623afde5 deps/exmpp/examples/echo_client.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/examples/echo_client.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,99 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Mickael Remond <mickael.remond@process-one.net>
+
+%% @doc
+%% The module <strong>{@module}</strong> implements a simple XMPP echo client.
+%%
+%% <p>
+%% This is a example use of the exmpp framework.
+%% </p>
+%%
+%% <p>
+%% Usage:
+%% </p>
+%% <pre>{ok, session} = echo_client:start().
+%% echo_client:stop(Session).</pre>
+
+-module(echo_client).
+
+-include_lib("exmpp/include/exmpp.hrl").
+-include_lib("exmpp/include/exmpp_client.hrl").
+
+-export([start/0, stop/1]).
+-export([init/0]).
+
+start() ->
+    spawn(?MODULE, init, []).
+
+stop(EchoClientPid) ->
+    EchoClientPid ! stop.
+
+
+init() ->
+    application:start(exmpp),
+    %% Start XMPP session: Needed to start service (Like
+    %% exmpp_stringprep):
+    MySession = exmpp_session:start(),
+    %% Create XMPP ID (Session Key):
+    MyJID = exmpp_jid:make("echo", "localhost", random),
+    %% Create a new session with basic (digest) authentication:
+    exmpp_session:auth_basic_digest(MySession, MyJID, "password"),
+    %% Connect in standard TCP:
+    {ok, _StreamId} = exmpp_session:connect_TCP(MySession, "localhost", 5222),
+    session(MySession, MyJID).
+
+%% We are connected. We now log in (and try registering if authentication fails)
+session(MySession, _MyJID) ->
+    %% Login with defined JID / Authentication:
+    try exmpp_session:login(MySession)
+    catch
+	throw:{auth_error, 'not-authorized'} ->
+	    %% Try creating a new user:
+	    io:format("Register~n",[]),
+	    %% In a real life client, we should trap error case here
+	    %% and print the correct message.
+	    exmpp_session:register_account(MySession, "password"),
+	    %% After registration, retry to login:
+	    exmpp_session:login(MySession)
+    end,
+    %% We explicitely send presence:
+    exmpp_session:send_packet(MySession,
+			      exmpp_presence:set_status(
+				exmpp_presence:available(), "Echo Ready")),
+    loop(MySession).
+
+%% Process exmpp packet:
+loop(MySession) ->
+    receive
+        stop ->
+            exmpp_session:stop(MySession);
+        %% If we receive a message, we reply with the same message
+        Record = #received_packet{packet_type=message, raw_packet=Packet} ->
+            io:format("~p~n", [Record]),
+            echo_packet(MySession, Packet),
+            loop(MySession);
+        Record ->
+            io:format("~p~n", [Record]),
+            loop(MySession)
+    end.
+
+%% Send the same packet back for each message received
+echo_packet(MySession, Packet) ->
+    From = exmpp_xml:get_attribute(Packet, from, <<"unknown">>),
+    To = exmpp_xml:get_attribute(Packet, to, <<"unknown">>),
+    TmpPacket = exmpp_xml:set_attribute(Packet, from, To),
+    TmpPacket2 = exmpp_xml:set_attribute(TmpPacket, to, From),
+    NewPacket = exmpp_xml:remove_attribute(TmpPacket2, id),
+    exmpp_session:send_packet(MySession, NewPacket).
diff -r d551623afde5 deps/exmpp/include/Makefile
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/Makefile	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,565 @@
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
+# include/Makefile.  Generated from Makefile.in by configure.
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+
+
+srcdir = .
+top_srcdir = ..
+
+pkgdatadir = $(datadir)/exmpp
+pkglibdir = $(libdir)/exmpp
+pkgincludedir = $(includedir)/exmpp
+top_builddir = ..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = /usr/bin/install -c
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = i686-pc-linux-gnu
+host_triplet = i686-pc-linux-gnu
+target_triplet = i686-pc-linux-gnu
+#am__append_1 = jlib.hrl
+subdir = include
+DIST_COMMON = $(am__dist_headers_DATA_DIST) $(srcdir)/Makefile.am \
+	$(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_compare_version.m4 \
+	$(top_srcdir)/m4/colored-echo.m4 $(top_srcdir)/m4/erlang.m4 \
+	$(top_srcdir)/m4/expat.m4 $(top_srcdir)/m4/openssl.m4 \
+	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/zlib.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES =
+SOURCES =
+DIST_SOURCES =
+RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
+	html-recursive info-recursive install-data-recursive \
+	install-exec-recursive install-info-recursive \
+	install-recursive installcheck-recursive installdirs-recursive \
+	pdf-recursive ps-recursive uninstall-info-recursive \
+	uninstall-recursive
+am__dist_headers_DATA_DIST = exmpp.hrl exmpp_nss.hrl exmpp_xml.hrl \
+	exmpp_xmpp.hrl exmpp_client.hrl jlib.hrl
+am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
+am__vpath_adj = case $$p in \
+    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
+    *) f=$$p;; \
+  esac;
+am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
+am__installdirs = "$(DESTDIR)$(headersdir)"
+dist_headersDATA_INSTALL = $(INSTALL_DATA)
+DATA = $(dist_headers_DATA)
+ETAGS = etags
+CTAGS = ctags
+DIST_SUBDIRS = $(SUBDIRS)
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run aclocal-1.9
+AMDEP_FALSE = #
+AMDEP_TRUE = 
+AMTAR = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run tar
+AR = ar
+AUTOCONF = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run autoconf
+AUTOHEADER = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run autoheader
+AUTOMAKE = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run automake-1.9
+AWK = mawk
+BUILD_COMPAT_FALSE = 
+BUILD_COMPAT_TRUE = #
+CC = gcc -std=gnu99
+CCDEPMODE = depmode=gcc3
+CFLAGS = -g -O2 -Wall -Werror
+COMPAT_MODULES = %
+COMPAT_MODULES_START =  % Compatibility modules disabled:
+CPP = gcc -std=gnu99 -E
+CPPFLAGS = 
+CXXCPP = 
+CYGPATH_W = echo
+DEFS = -DHAVE_CONFIG_H
+DEPDIR = .deps
+ECHO = echo
+ECHO_C = 
+ECHO_N = -n
+ECHO_T = 
+EGREP = /bin/grep -E
+EMKOPTS = debug_info, {d, debug}, report_warnings, {warn_format, 1}, warn_export_vars, warn_shadow_vars, warn_unused_import, {d, 'HAVE_EXPAT'}, {d, 'HAVE_LIBXML2'}, {d, 'HAVE_OPENSSL'}, {d, 'HAVE_ZLIB'}
+ENABLE_DOCUMENTATION_FALSE = 
+ENABLE_DOCUMENTATION_TRUE = #
+ENABLE_EXAMPLES_FALSE = 
+ENABLE_EXAMPLES_TRUE = #
+ENABLE_SMP_SUPPORT_FALSE = #
+ENABLE_SMP_SUPPORT_TRUE = 
+ENABLE_TESTSUITE_FALSE = #
+ENABLE_TESTSUITE_TRUE = 
+ERL = /usr/bin/erl
+ERLANG_ERTS_DIR = /usr/lib/erlang/erts-5.7.2
+ERLANG_ERTS_VER = 5.7.2
+ERLANG_INSTALL_LIB_DIR = /usr/lib/erlang/lib
+ERLANG_INSTALL_LIB_DIR_exmpp = ${ERLANG_INSTALL_LIB_DIR}/exmpp-${VERSION}
+ERLANG_LIB_DIR = /usr/lib/erlang/lib
+ERLANG_LIB_DIR_erl_interface = /usr/lib/erlang/lib/erl_interface-3.6.2
+ERLANG_LIB_DIR_eunit = 
+ERLANG_LIB_VER_erl_interface = 3.6.2
+ERLANG_LIB_VER_eunit = 
+ERLANG_RELEASE = R13B01
+ERLANG_ROOT_DIR = /usr/lib/erlang
+ERLC = /usr/bin/erlc
+ERLCFLAGS = 
+ERL_DRIVER_LDFLAGS = 
+ESCRIPT = /usr/bin/escript
+EXEEXT = 
+EXMPP_BUILD_ARCH = 
+EXMPP_DISTSUFFIX = -r903
+EXMPP_HOST_ARCH = 
+EXMPP_RELEASE_DATE = 
+EXMPP_SVNREV = 903
+EXPAT_CPPFLAGS = 
+EXPAT_LDFLAGS = 
+EXPAT_LIBS = -lexpat
+GREP = /bin/grep
+INSTALL_DATA = ${INSTALL} -m 644
+INSTALL_PROGRAM = ${INSTALL}
+INSTALL_SCRIPT = ${INSTALL}
+INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
+LDFLAGS = 
+LIBOBJS = 
+LIBS = 
+LIBTOOL = $(SHELL) $(top_builddir)/libtool
+LIBXML2_CFLAGS = -I/usr/include/libxml2  
+LIBXML2_LIBS = -lxml2  
+LN_S = ln -s
+LTLIBOBJS = 
+MAKEINFO = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run makeinfo
+OBJEXT = o
+OPENSSL_CPPFLAGS = 
+OPENSSL_LDFLAGS = 
+OPENSSL_LIBS = -lssl -lcrypto
+PACKAGE = exmpp
+PACKAGE_BUGREPORT = js.pedron@meetic-corp.com
+PACKAGE_NAME = exmpp
+PACKAGE_STRING = exmpp 0.9.2
+PACKAGE_TARNAME = exmpp
+PACKAGE_VERSION = 0.9.2
+PATH_SEPARATOR = :
+PKG_CONFIG = /usr/bin/pkg-config
+RANLIB = ranlib
+SED = /bin/sed
+SET_MAKE = 
+SHELL = /bin/bash
+STRIP = strip
+VERSION = 0.9.2
+WITH_EXPAT_FALSE = #
+WITH_EXPAT_TRUE = 
+WITH_LIBXML2_FALSE = #
+WITH_LIBXML2_TRUE = 
+WITH_OPENSSL_FALSE = #
+WITH_OPENSSL_TRUE = 
+WITH_ZLIB_FALSE = #
+WITH_ZLIB_TRUE = 
+ZLIB_CPPFLAGS = 
+ZLIB_LDFLAGS = 
+ZLIB_LIBS = -lz
+ac_ct_CC = gcc
+am__fastdepCC_FALSE = #
+am__fastdepCC_TRUE = 
+am__include = include
+am__leading_dot = .
+am__quote = 
+am__tar = ${AMTAR} chof - "$$tardir"
+am__untar = ${AMTAR} xf -
+bindir = ${exec_prefix}/bin
+build = i686-pc-linux-gnu
+build_alias = 
+build_cpu = i686
+build_os = linux-gnu
+build_vendor = pc
+datadir = ${datarootdir}
+datarootdir = ${prefix}/share
+docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
+dvidir = ${docdir}
+exec_prefix = ${prefix}
+exp_ERLANG_INSTALL_LIB_DIR_exmpp = /usr/lib/erlang/lib/exmpp-0.9.2
+host = i686-pc-linux-gnu
+host_alias = 
+host_cpu = i686
+host_os = linux-gnu
+host_vendor = pc
+htmldir = ${docdir}
+includedir = ${prefix}/include
+infodir = ${datarootdir}/info
+install_sh = /home/arjan/devel/zotonic/deps/exmpp/ac-aux/install-sh
+libdir = ${exec_prefix}/lib
+libexecdir = ${exec_prefix}/libexec
+localedir = ${datarootdir}/locale
+localstatedir = ${prefix}/var
+mandir = ${datarootdir}/man
+mkdir_p = mkdir -p --
+oldincludedir = /usr/include
+pdfdir = ${docdir}
+prefix = /usr/local
+program_transform_name = s,x,x,
+psdir = ${docdir}
+sbindir = ${exec_prefix}/sbin
+sharedstatedir = ${prefix}/com
+sysconfdir = ${prefix}/etc
+target = i686-pc-linux-gnu
+target_alias = 
+target_cpu = i686
+target_os = linux-gnu
+target_vendor = pc
+SUBDIRS = internal
+headersdir = $(ERLANG_INSTALL_LIB_DIR_exmpp)/include
+dist_headers_DATA = exmpp.hrl exmpp_nss.hrl exmpp_xml.hrl \
+	exmpp_xmpp.hrl exmpp_client.hrl $(am__append_1)
+all: all-recursive
+
+.SUFFIXES:
+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  include/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --foreign  include/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure:  $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+distclean-libtool:
+	-rm -f libtool
+uninstall-info-am:
+install-dist_headersDATA: $(dist_headers_DATA)
+	@$(NORMAL_INSTALL)
+	test -z "$(headersdir)" || $(mkdir_p) "$(DESTDIR)$(headersdir)"
+	@list='$(dist_headers_DATA)'; for p in $$list; do \
+	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
+	  f=$(am__strip_dir) \
+	  echo " $(dist_headersDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(headersdir)/$$f'"; \
+	  $(dist_headersDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(headersdir)/$$f"; \
+	done
+
+uninstall-dist_headersDATA:
+	@$(NORMAL_UNINSTALL)
+	@list='$(dist_headers_DATA)'; for p in $$list; do \
+	  f=$(am__strip_dir) \
+	  echo " rm -f '$(DESTDIR)$(headersdir)/$$f'"; \
+	  rm -f "$(DESTDIR)$(headersdir)/$$f"; \
+	done
+
+# This directory's subdirectories are mostly independent; you can cd
+# into them and run `make' without going through this Makefile.
+# To change the values of `make' variables: instead of editing Makefiles,
+# (1) if the variable is set in `config.status', edit `config.status'
+#     (which will cause the Makefiles to be regenerated when you run `make');
+# (2) otherwise, pass the desired values on the `make' command line.
+$(RECURSIVE_TARGETS):
+	@failcom='exit 1'; \
+	for f in x $$MAKEFLAGS; do \
+	  case $$f in \
+	    *=* | --[!k]*);; \
+	    *k*) failcom='fail=yes';; \
+	  esac; \
+	done; \
+	dot_seen=no; \
+	target=`echo $@ | sed s/-recursive//`; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    dot_seen=yes; \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	  || eval $$failcom; \
+	done; \
+	if test "$$dot_seen" = "no"; then \
+	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
+	fi; test -z "$$fail"
+
+mostlyclean-recursive clean-recursive distclean-recursive \
+maintainer-clean-recursive:
+	@failcom='exit 1'; \
+	for f in x $$MAKEFLAGS; do \
+	  case $$f in \
+	    *=* | --[!k]*);; \
+	    *k*) failcom='fail=yes';; \
+	  esac; \
+	done; \
+	dot_seen=no; \
+	case "$@" in \
+	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
+	  *) list='$(SUBDIRS)' ;; \
+	esac; \
+	rev=''; for subdir in $$list; do \
+	  if test "$$subdir" = "."; then :; else \
+	    rev="$$subdir $$rev"; \
+	  fi; \
+	done; \
+	rev="$$rev ."; \
+	target=`echo $@ | sed s/-recursive//`; \
+	for subdir in $$rev; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	  || eval $$failcom; \
+	done && test -z "$$fail"
+tags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
+	done
+ctags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
+	done
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
+	  include_option=--etags-include; \
+	  empty_fix=.; \
+	else \
+	  include_option=--include; \
+	  empty_fix=; \
+	fi; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test ! -f $$subdir/TAGS || \
+	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
+	  fi; \
+	done; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
+	  test -n "$$unique" || unique=$$empty_fix; \
+	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	    $$tags $$unique; \
+	fi
+ctags: CTAGS
+CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test -d "$(distdir)/$$subdir" \
+	    || $(mkdir_p) "$(distdir)/$$subdir" \
+	    || exit 1; \
+	    distdir=`$(am__cd) $(distdir) && pwd`; \
+	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
+	    (cd $$subdir && \
+	      $(MAKE) $(AM_MAKEFLAGS) \
+	        top_distdir="$$top_distdir" \
+	        distdir="$$distdir/$$subdir" \
+	        distdir) \
+	      || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-recursive
+all-am: Makefile $(DATA)
+installdirs: installdirs-recursive
+installdirs-am:
+	for dir in "$(DESTDIR)$(headersdir)"; do \
+	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
+	done
+install: install-recursive
+install-exec: install-exec-recursive
+install-data: install-data-recursive
+uninstall: uninstall-recursive
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-recursive
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-recursive
+
+clean-am: clean-generic clean-libtool mostlyclean-am
+
+distclean: distclean-recursive
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-libtool \
+	distclean-tags
+
+dvi: dvi-recursive
+
+dvi-am:
+
+html: html-recursive
+
+info: info-recursive
+
+info-am:
+
+install-data-am: install-dist_headersDATA
+
+install-exec-am:
+
+install-info: install-info-recursive
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-recursive
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-recursive
+
+mostlyclean-am: mostlyclean-generic mostlyclean-libtool
+
+pdf: pdf-recursive
+
+pdf-am:
+
+ps: ps-recursive
+
+ps-am:
+
+uninstall-am: uninstall-dist_headersDATA uninstall-info-am
+
+uninstall-info: uninstall-info-recursive
+
+.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
+	clean clean-generic clean-libtool clean-recursive ctags \
+	ctags-recursive distclean distclean-generic distclean-libtool \
+	distclean-recursive distclean-tags distdir dvi dvi-am html \
+	html-am info info-am install install-am install-data \
+	install-data-am install-dist_headersDATA install-exec \
+	install-exec-am install-info install-info-am install-man \
+	install-strip installcheck installcheck-am installdirs \
+	installdirs-am maintainer-clean maintainer-clean-generic \
+	maintainer-clean-recursive mostlyclean mostlyclean-generic \
+	mostlyclean-libtool mostlyclean-recursive pdf pdf-am ps ps-am \
+	tags tags-recursive uninstall uninstall-am \
+	uninstall-dist_headersDATA uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff -r d551623afde5 deps/exmpp/include/Makefile.am
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/Makefile.am	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,13 @@
+SUBDIRS = internal
+
+headersdir = $(ERLANG_INSTALL_LIB_DIR_exmpp)/include
+
+dist_headers_DATA = exmpp.hrl						\
+		    exmpp_nss.hrl					\
+		    exmpp_xml.hrl					\
+		    exmpp_xmpp.hrl					\
+		    exmpp_client.hrl
+
+if BUILD_COMPAT
+dist_headers_DATA += jlib.hrl
+endif
diff -r d551623afde5 deps/exmpp/include/Makefile.in
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/Makefile.in	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,565 @@
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = @build@
+host_triplet = @host@
+target_triplet = @target@
+@BUILD_COMPAT_TRUE@am__append_1 = jlib.hrl
+subdir = include
+DIST_COMMON = $(am__dist_headers_DATA_DIST) $(srcdir)/Makefile.am \
+	$(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_compare_version.m4 \
+	$(top_srcdir)/m4/colored-echo.m4 $(top_srcdir)/m4/erlang.m4 \
+	$(top_srcdir)/m4/expat.m4 $(top_srcdir)/m4/openssl.m4 \
+	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/zlib.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES =
+SOURCES =
+DIST_SOURCES =
+RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
+	html-recursive info-recursive install-data-recursive \
+	install-exec-recursive install-info-recursive \
+	install-recursive installcheck-recursive installdirs-recursive \
+	pdf-recursive ps-recursive uninstall-info-recursive \
+	uninstall-recursive
+am__dist_headers_DATA_DIST = exmpp.hrl exmpp_nss.hrl exmpp_xml.hrl \
+	exmpp_xmpp.hrl exmpp_client.hrl jlib.hrl
+am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
+am__vpath_adj = case $$p in \
+    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
+    *) f=$$p;; \
+  esac;
+am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
+am__installdirs = "$(DESTDIR)$(headersdir)"
+dist_headersDATA_INSTALL = $(INSTALL_DATA)
+DATA = $(dist_headers_DATA)
+ETAGS = etags
+CTAGS = ctags
+DIST_SUBDIRS = $(SUBDIRS)
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BUILD_COMPAT_FALSE = @BUILD_COMPAT_FALSE@
+BUILD_COMPAT_TRUE = @BUILD_COMPAT_TRUE@
+CC = @CC@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+COMPAT_MODULES = @COMPAT_MODULES@
+COMPAT_MODULES_START = @COMPAT_MODULES_START@
+CPP = @CPP@
+CPPFLAGS = @CPPFLAGS@
+CXXCPP = @CXXCPP@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+ECHO = @ECHO@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EGREP = @EGREP@
+EMKOPTS = @EMKOPTS@
+ENABLE_DOCUMENTATION_FALSE = @ENABLE_DOCUMENTATION_FALSE@
+ENABLE_DOCUMENTATION_TRUE = @ENABLE_DOCUMENTATION_TRUE@
+ENABLE_EXAMPLES_FALSE = @ENABLE_EXAMPLES_FALSE@
+ENABLE_EXAMPLES_TRUE = @ENABLE_EXAMPLES_TRUE@
+ENABLE_SMP_SUPPORT_FALSE = @ENABLE_SMP_SUPPORT_FALSE@
+ENABLE_SMP_SUPPORT_TRUE = @ENABLE_SMP_SUPPORT_TRUE@
+ENABLE_TESTSUITE_FALSE = @ENABLE_TESTSUITE_FALSE@
+ENABLE_TESTSUITE_TRUE = @ENABLE_TESTSUITE_TRUE@
+ERL = @ERL@
+ERLANG_ERTS_DIR = @ERLANG_ERTS_DIR@
+ERLANG_ERTS_VER = @ERLANG_ERTS_VER@
+ERLANG_INSTALL_LIB_DIR = @ERLANG_INSTALL_LIB_DIR@
+ERLANG_INSTALL_LIB_DIR_exmpp = @ERLANG_INSTALL_LIB_DIR_exmpp@
+ERLANG_LIB_DIR = @ERLANG_LIB_DIR@
+ERLANG_LIB_DIR_erl_interface = @ERLANG_LIB_DIR_erl_interface@
+ERLANG_LIB_DIR_eunit = @ERLANG_LIB_DIR_eunit@
+ERLANG_LIB_VER_erl_interface = @ERLANG_LIB_VER_erl_interface@
+ERLANG_LIB_VER_eunit = @ERLANG_LIB_VER_eunit@
+ERLANG_RELEASE = @ERLANG_RELEASE@
+ERLANG_ROOT_DIR = @ERLANG_ROOT_DIR@
+ERLC = @ERLC@
+ERLCFLAGS = @ERLCFLAGS@
+ERL_DRIVER_LDFLAGS = @ERL_DRIVER_LDFLAGS@
+ESCRIPT = @ESCRIPT@
+EXEEXT = @EXEEXT@
+EXMPP_BUILD_ARCH = @EXMPP_BUILD_ARCH@
+EXMPP_DISTSUFFIX = @EXMPP_DISTSUFFIX@
+EXMPP_HOST_ARCH = @EXMPP_HOST_ARCH@
+EXMPP_RELEASE_DATE = @EXMPP_RELEASE_DATE@
+EXMPP_SVNREV = @EXMPP_SVNREV@
+EXPAT_CPPFLAGS = @EXPAT_CPPFLAGS@
+EXPAT_LDFLAGS = @EXPAT_LDFLAGS@
+EXPAT_LIBS = @EXPAT_LIBS@
+GREP = @GREP@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LIBTOOL = @LIBTOOL@
+LIBXML2_CFLAGS = @LIBXML2_CFLAGS@
+LIBXML2_LIBS = @LIBXML2_LIBS@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAKEINFO = @MAKEINFO@
+OBJEXT = @OBJEXT@
+OPENSSL_CPPFLAGS = @OPENSSL_CPPFLAGS@
+OPENSSL_LDFLAGS = @OPENSSL_LDFLAGS@
+OPENSSL_LIBS = @OPENSSL_LIBS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+PKG_CONFIG = @PKG_CONFIG@
+RANLIB = @RANLIB@
+SED = @SED@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+WITH_EXPAT_FALSE = @WITH_EXPAT_FALSE@
+WITH_EXPAT_TRUE = @WITH_EXPAT_TRUE@
+WITH_LIBXML2_FALSE = @WITH_LIBXML2_FALSE@
+WITH_LIBXML2_TRUE = @WITH_LIBXML2_TRUE@
+WITH_OPENSSL_FALSE = @WITH_OPENSSL_FALSE@
+WITH_OPENSSL_TRUE = @WITH_OPENSSL_TRUE@
+WITH_ZLIB_FALSE = @WITH_ZLIB_FALSE@
+WITH_ZLIB_TRUE = @WITH_ZLIB_TRUE@
+ZLIB_CPPFLAGS = @ZLIB_CPPFLAGS@
+ZLIB_LDFLAGS = @ZLIB_LDFLAGS@
+ZLIB_LIBS = @ZLIB_LIBS@
+ac_ct_CC = @ac_ct_CC@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+am__tar = @am__tar@
+am__untar = @am__untar@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+datarootdir = @datarootdir@
+docdir = @docdir@
+dvidir = @dvidir@
+exec_prefix = @exec_prefix@
+exp_ERLANG_INSTALL_LIB_DIR_exmpp = @exp_ERLANG_INSTALL_LIB_DIR_exmpp@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+htmldir = @htmldir@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localedir = @localedir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+pdfdir = @pdfdir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+psdir = @psdir@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target = @target@
+target_alias = @target_alias@
+target_cpu = @target_cpu@
+target_os = @target_os@
+target_vendor = @target_vendor@
+SUBDIRS = internal
+headersdir = $(ERLANG_INSTALL_LIB_DIR_exmpp)/include
+dist_headers_DATA = exmpp.hrl exmpp_nss.hrl exmpp_xml.hrl \
+	exmpp_xmpp.hrl exmpp_client.hrl $(am__append_1)
+all: all-recursive
+
+.SUFFIXES:
+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  include/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --foreign  include/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure:  $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+distclean-libtool:
+	-rm -f libtool
+uninstall-info-am:
+install-dist_headersDATA: $(dist_headers_DATA)
+	@$(NORMAL_INSTALL)
+	test -z "$(headersdir)" || $(mkdir_p) "$(DESTDIR)$(headersdir)"
+	@list='$(dist_headers_DATA)'; for p in $$list; do \
+	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
+	  f=$(am__strip_dir) \
+	  echo " $(dist_headersDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(headersdir)/$$f'"; \
+	  $(dist_headersDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(headersdir)/$$f"; \
+	done
+
+uninstall-dist_headersDATA:
+	@$(NORMAL_UNINSTALL)
+	@list='$(dist_headers_DATA)'; for p in $$list; do \
+	  f=$(am__strip_dir) \
+	  echo " rm -f '$(DESTDIR)$(headersdir)/$$f'"; \
+	  rm -f "$(DESTDIR)$(headersdir)/$$f"; \
+	done
+
+# This directory's subdirectories are mostly independent; you can cd
+# into them and run `make' without going through this Makefile.
+# To change the values of `make' variables: instead of editing Makefiles,
+# (1) if the variable is set in `config.status', edit `config.status'
+#     (which will cause the Makefiles to be regenerated when you run `make');
+# (2) otherwise, pass the desired values on the `make' command line.
+$(RECURSIVE_TARGETS):
+	@failcom='exit 1'; \
+	for f in x $$MAKEFLAGS; do \
+	  case $$f in \
+	    *=* | --[!k]*);; \
+	    *k*) failcom='fail=yes';; \
+	  esac; \
+	done; \
+	dot_seen=no; \
+	target=`echo $@ | sed s/-recursive//`; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    dot_seen=yes; \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	  || eval $$failcom; \
+	done; \
+	if test "$$dot_seen" = "no"; then \
+	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
+	fi; test -z "$$fail"
+
+mostlyclean-recursive clean-recursive distclean-recursive \
+maintainer-clean-recursive:
+	@failcom='exit 1'; \
+	for f in x $$MAKEFLAGS; do \
+	  case $$f in \
+	    *=* | --[!k]*);; \
+	    *k*) failcom='fail=yes';; \
+	  esac; \
+	done; \
+	dot_seen=no; \
+	case "$@" in \
+	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
+	  *) list='$(SUBDIRS)' ;; \
+	esac; \
+	rev=''; for subdir in $$list; do \
+	  if test "$$subdir" = "."; then :; else \
+	    rev="$$subdir $$rev"; \
+	  fi; \
+	done; \
+	rev="$$rev ."; \
+	target=`echo $@ | sed s/-recursive//`; \
+	for subdir in $$rev; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	  || eval $$failcom; \
+	done && test -z "$$fail"
+tags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
+	done
+ctags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
+	done
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
+	  include_option=--etags-include; \
+	  empty_fix=.; \
+	else \
+	  include_option=--include; \
+	  empty_fix=; \
+	fi; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test ! -f $$subdir/TAGS || \
+	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
+	  fi; \
+	done; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
+	  test -n "$$unique" || unique=$$empty_fix; \
+	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	    $$tags $$unique; \
+	fi
+ctags: CTAGS
+CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test -d "$(distdir)/$$subdir" \
+	    || $(mkdir_p) "$(distdir)/$$subdir" \
+	    || exit 1; \
+	    distdir=`$(am__cd) $(distdir) && pwd`; \
+	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
+	    (cd $$subdir && \
+	      $(MAKE) $(AM_MAKEFLAGS) \
+	        top_distdir="$$top_distdir" \
+	        distdir="$$distdir/$$subdir" \
+	        distdir) \
+	      || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-recursive
+all-am: Makefile $(DATA)
+installdirs: installdirs-recursive
+installdirs-am:
+	for dir in "$(DESTDIR)$(headersdir)"; do \
+	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
+	done
+install: install-recursive
+install-exec: install-exec-recursive
+install-data: install-data-recursive
+uninstall: uninstall-recursive
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-recursive
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-recursive
+
+clean-am: clean-generic clean-libtool mostlyclean-am
+
+distclean: distclean-recursive
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-libtool \
+	distclean-tags
+
+dvi: dvi-recursive
+
+dvi-am:
+
+html: html-recursive
+
+info: info-recursive
+
+info-am:
+
+install-data-am: install-dist_headersDATA
+
+install-exec-am:
+
+install-info: install-info-recursive
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-recursive
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-recursive
+
+mostlyclean-am: mostlyclean-generic mostlyclean-libtool
+
+pdf: pdf-recursive
+
+pdf-am:
+
+ps: ps-recursive
+
+ps-am:
+
+uninstall-am: uninstall-dist_headersDATA uninstall-info-am
+
+uninstall-info: uninstall-info-recursive
+
+.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
+	clean clean-generic clean-libtool clean-recursive ctags \
+	ctags-recursive distclean distclean-generic distclean-libtool \
+	distclean-recursive distclean-tags distdir dvi dvi-am html \
+	html-am info info-am install install-am install-data \
+	install-data-am install-dist_headersDATA install-exec \
+	install-exec-am install-info install-info-am install-man \
+	install-strip installcheck installcheck-am installdirs \
+	installdirs-am maintainer-clean maintainer-clean-generic \
+	maintainer-clean-recursive mostlyclean mostlyclean-generic \
+	mostlyclean-libtool mostlyclean-recursive pdf pdf-am ps ps-am \
+	tags tags-recursive uninstall uninstall-am \
+	uninstall-dist_headersDATA uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff -r d551623afde5 deps/exmpp/include/exmpp.hrl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/exmpp.hrl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,40 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+% Namespace and prefix macros.
+-include("exmpp_nss.hrl").
+
+% Records to represent XML nodes.
+-include("exmpp_xml.hrl").
+
+% Records to represent XMPP/Jabber specific structures.
+-include("exmpp_xmpp.hrl").
+
+% --------------------------------------------------------------------
+% Records to represent events.
+% --------------------------------------------------------------------
+
+% Stream start.
+-record(xmlstreamstart, {
+  element                 % #xmlel
+}).
+
+% Depth 1 element, inside a stream.
+-record(xmlstreamelement, {
+  element                 % #xmlel
+}).
+
+% Stream end.
+-record(xmlstreamend, {
+  endtag                  % xmlnsendelement
+}).
diff -r d551623afde5 deps/exmpp/include/exmpp_client.hrl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/exmpp_client.hrl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,26 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+
+%% This record is used to pass received packets back to client.
+%% The record is defined to make it easy to use pattern matching on
+%% the most used data received.
+-record(received_packet,
+        {
+          packet_type, % message, iq, presence
+          type_attr,   % depend on packet. Example: set, get, subscribe, etc
+          from,        % JID
+          id,          % Packet ID
+          queryns,     % IQ only: Namespace of the query
+          raw_packet   % raw exmpp record
+        }).
diff -r d551623afde5 deps/exmpp/include/exmpp_nss.hrl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/exmpp_nss.hrl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,553 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+% --------------------------------------------------------------------
+% Namespace and prefix macros.
+% --------------------------------------------------------------------
+
+% Defined by XML.
+-define(NS_XML,                      'http://www.w3.org/XML/1998/namespace').
+-define(NS_XML_s,                    "http://www.w3.org/XML/1998/namespace").
+-define(NS_XML_pfx,                  "xml").
+
+% Defined by XMPP Core (RFC 3920).
+-define(NS_XMPP,                     'http://etherx.jabber.org/streams').
+-define(NS_XMPP_s,                   "http://etherx.jabber.org/streams").
+-define(NS_XMPP_pfx,                 "stream").
+-define(NS_STREAM_ERRORS,            'urn:ietf:params:xml:ns:xmpp-streams').
+-define(NS_TLS,                      'urn:ietf:params:xml:ns:xmpp-tls').
+-define(NS_SASL,                     'urn:ietf:params:xml:ns:xmpp-sasl').
+-define(NS_BIND,                     'urn:ietf:params:xml:ns:xmpp-bind').
+-define(NS_STANZA_ERRORS,            'urn:ietf:params:xml:ns:xmpp-stanzas').
+
+% Defined by XMPP-IM (RFC 3921).
+-define(NS_JABBER_CLIENT,            'jabber:client').
+-define(NS_JABBER_CLIENT_s,          "jabber:client").
+-define(NS_JABBER_SERVER,            'jabber:server').
+-define(NS_SESSION,                  'urn:ietf:params:xml:ns:xmpp-session').
+-define(NS_ROSTER,                   'jabber:iq:roster').
+
+% Defined by End-to-End Signing and Object Encryption for XMPP (RFC 3923).
+-define(NS_E2E,                      'urn:ietf:params:xml:ns:xmpp-e2e').
+
+% Defined by XEP-0003: Proxy Accept Socket Service (PASS).
+-define(NS_PASS,                     'jabber:iq:pass').
+-define(NS_PASS_s,                   "jabber:iq:pass").
+
+% Defined by XEP-0004: Data Forms.
+-define(NS_DATA_FORMS,               'jabber:x:data').
+-define(NS_DATA_FORMS_s,             "jabber:x:data").
+
+% Defined by XEP-0009: Jabber-RPC.
+-define(NS_RPC,                      'jabber:iq:rpc').
+-define(NS_RPC_s,                    "jabber:iq:rpc").
+
+% Defined by XEP-0011: Jabber Browsing.
+-define(NS_BROWSE,                   'jabber:iq:browse').
+-define(NS_BROWSE_s,                 "jabber:iq:browse").
+
+% Defined by XEP-0012: Last Activity.
+-define(NS_LAST_ACTIVITY,            'jabber:iq:last').
+-define(NS_LAST_ACTIVITY_s,          "jabber:iq:last").
+
+% Defined by XEP-0013: Flexible Offline Message Retrieval.
+-define(NS_OFFLINE,                  'http://jabber.org/protocol/offline').
+-define(NS_OFFLINE_s,                "http://jabber.org/protocol/offline").
+
+% Defined by XEP-0016: Privacy Lists.
+-define(NS_PRIVACY,                  'jabber:iq:privacy').
+-define(NS_PRIVACY_s,                "jabber:iq:privacy").
+
+% Defined by XEP-0020: Feature Negotiation.
+-define(NS_FEATURE_NEG,              'http://jabber.org/protocol/feature-neg').
+-define(NS_FEATURE_NEG_s,            "http://jabber.org/protocol/feature-neg").
+
+% Defined by XEP-0022: Message Events.
+-define(NS_MESSAGE_EVENT,            'jabber:x:event').
+-define(NS_MESSAGE_EVENT_s,          "jabber:x:event").
+
+% Defined by XEP-0023: Message Expiration.
+-define(NS_MESSAGE_EXPIRE,           'jabber:x:expire').
+-define(NS_MESSAGE_EXPIRE_s,         "jabber:x:expire").
+
+% Defined by XEP-0027: Current Jabber OpenPGP Usage.
+-define(NS_PGP_ENCRYPTED,            'jabber:x:encrypted').
+-define(NS_PGP_SIGNED,               'jabber:x:signed').
+-define(NS_PGP_ENCRYPTED_s,          "jabber:x:encrypted").
+-define(NS_PGP_SIGNED_s,             "jabber:x:signed").
+
+% Defined by XEP-0030: Service Discovery.
+-define(NS_DISCO_INFO,               'http://jabber.org/protocol/disco#info').
+-define(NS_DISCO_ITEMS,              'http://jabber.org/protocol/disco#items').
+-define(NS_DISCO_INFO_s,             "http://jabber.org/protocol/disco#info").
+-define(NS_DISCO_ITEMS_s,            "http://jabber.org/protocol/disco#items").
+
+% Defined by XEP-0033: Extended Stanza Addressing.
+-define(NS_ADDRESS,                  'http://jabber.org/protocol/address').
+-define(NS_ADDRESS_s,                "http://jabber.org/protocol/address").
+
+% Defined by XEP-0039: Statistics Gathering.
+-define(NS_STATS,                    'http://jabber.org/protocol/stats').
+-define(NS_STATS_s,                  "http://jabber.org/protocol/stats").
+
+% Defined by XEP-0045: Multi-User Chat.
+-define(NS_MUC,                      'http://jabber.org/protocol/muc').
+-define(NS_MUC_ADMIN,                'http://jabber.org/protocol/muc#admin').
+-define(NS_MUC_OWNER,                'http://jabber.org/protocol/muc#owner').
+-define(NS_MUC_UNIQUE,               'http://jabber.org/protocol/muc#unique').
+-define(NS_MUC_USER,                 'http://jabber.org/protocol/muc#user').
+-define(NS_MUC_s,                    "http://jabber.org/protocol/muc").
+-define(NS_MUC_ADMIN_s,              "http://jabber.org/protocol/muc#admin").
+-define(NS_MUC_OWNER_s,              "http://jabber.org/protocol/muc#owner").
+-define(NS_MUC_UNIQUE_s,             "http://jabber.org/protocol/muc#unique").
+-define(NS_MUC_USER_s,               "http://jabber.org/protocol/muc#user").
+
+% Defined by XEP-0047: In-Band Bytestreams.
+-define(NS_IBB,                      'http://jabber.org/protocol/ibb').
+
+% Defined by XEP-0048: Bookmarks.
+-define(NS_BOOKMARKS,                'storage:bookmarks').
+-define(NS_BOOKMARKS_s,              "storage:bookmarks").
+
+% Defined by XEP-0049: Private XML Storage.
+-define(NS_PRIVATE,                  'jabber:iq:private').
+-define(NS_PRIVATE_s,                "jabber:iq:private").
+
+% Defined by XEP-0050: Ad-Hoc Commands.
+-define(NS_ADHOC,                    'http://jabber.org/protocol/commands').
+-define(NS_ADHOC_s,                  "http://jabber.org/protocol/commands").
+-define(NS_ADHOC_b,                  <<"http://jabber.org/protocol/commands">>).
+
+% Defined by XEP-0054: vcard-temp.
+-define(NS_VCARD,                    'vcard-temp').
+-define(NS_VCARD_s,                  "vcard-temp").
+
+% Defined by XEP-0055: Jabber Search.
+-define(NS_SEARCH,                   'jabber:iq:search').
+-define(NS_SEARCH_s,                 "jabber:iq:search").
+
+% Defined by XEP-0059: Result Set Management.
+-define(NS_RSM,                      'http://jabber.org/protocol/rsm').
+-define(NS_RSM_s,                    "http://jabber.org/protocol/rsm").
+
+% Defined by XEP-0060: Publish-Subscribe.
+-define(NS_PUBSUB,
+  'http://jabber.org/protocol/pubsub').
+-define(NS_PUBSUB_ERRORS,
+  'http://jabber.org/protocol/pubsub#errors').
+-define(NS_PUBSUB_EVENT,
+  'http://jabber.org/protocol/pubsub#event').
+-define(NS_PUBSUB_OWNER,
+  'http://jabber.org/protocol/pubsub#owner').
+-define(NS_PUBSUB_SUBSCRIBE_AUTH,
+  'http://jabber.org/protocol/pubsub#subscribe_authorization').
+-define(NS_PUBSUB_SUBSCRIBE_OPTIONS,
+  'http://jabber.org/protocol/pubsub#subscribe_options').
+-define(NS_PUBSUB_NODE_CONFIG,
+  'http://jabber.org/protocol/pubsub#node_config').
+-define(NS_PUBSUB_META_DATA,
+  'http://jabber.org/protocol/pubsub#meta-data').
+-define(NS_PUBSUB_PUBLISH_OPTIONS,
+  'http://jabber.org/protocol/pubsub#publish-options').
+-define(NS_PUBSUB_s,
+  "http://jabber.org/protocol/pubsub").
+-define(NS_PUBSUB_ERRORS_s,
+  "http://jabber.org/protocol/pubsub#errors").
+-define(NS_PUBSUB_EVENT_s,
+  "http://jabber.org/protocol/pubsub#event").
+-define(NS_PUBSUB_OWNER_s,
+  "http://jabber.org/protocol/pubsub#owner").
+-define(NS_PUBSUB_SUBSCRIBE_AUTH_s,
+  "http://jabber.org/protocol/pubsub#subscribe_authorization").
+-define(NS_PUBSUB_SUBSCRIBE_OPTIONS_s,
+  "http://jabber.org/protocol/pubsub#subscribe_options").
+-define(NS_PUBSUB_NODE_CONFIG_s,
+  "http://jabber.org/protocol/pubsub#node_config").
+-define(NS_PUBSUB_META_DATA_s,
+  "http://jabber.org/protocol/pubsub#meta-data").
+-define(NS_PUBSUB_PUBLISH_OPTIONS_s,
+  "http://jabber.org/protocol/pubsub#publish-options").
+
+% Defined by XEP-0065: SOCKS5 Bytestreams.
+-define(NS_BYTESTREAMS,              'http://jabber.org/protocol/bytestreams'.
+-define(NS_BYTESTREAMS_s,            "http://jabber.org/protocol/bytestreams".
+
+% Defined by XEP-0066: Out of Band Data.
+-define(NS_OOBD_IQ,                  'jabber:iq:oob').
+-define(NS_OOBD_X,                   'jabber:x:oob').
+-define(NS_OOBD_IQ_s,                "jabber:iq:oob").
+-define(NS_OOBD_X_s,                 "jabber:x:oob").
+
+% Defined by XEP-0070: Verifying HTTP Requests via XMPP.
+-define(NS_HTTP_AUTH,                'http://jabber.org/protocol/http-auth').
+-define(NS_HTTP_AUTH_s,              "http://jabber.org/protocol/http-auth").
+
+% Defined by XEP-0071: XHTML-IM.
+-define(NS_XHTML_IM,                 'http://jabber.org/protocol/xhtml-im').
+-define(NS_XHTML_IM_s,               "http://jabber.org/protocol/xhtml-im").
+
+% Defined by XEP-0072: SOAP Over XMPP.
+-define(NS_SOAP_FAULT,               'http://jabber.org/protocol/soap#fault').
+-define(NS_SOAP_FAULT_s,             "http://jabber.org/protocol/soap#fault").
+
+% Defined by XEP-0077: In-Band Registration.
+-define(NS_INBAND_REGISTER,          'jabber:iq:register').
+-define(NS_INBAND_REGISTER_FEAT,     'http://jabber.org/features/iq-register').
+-define(NS_INBAND_REGISTER_s,        "jabber:iq:register").
+-define(NS_INBAND_REGISTER_FEAT_s,   "http://jabber.org/features/iq-register").
+
+% Defined by XEP-0078: Non-SASL Authentication.
+-define(NS_LEGACY_AUTH,              'jabber:iq:auth').
+-define(NS_LEGACY_AUTH_FEAT,         'http://jabber.org/features/iq-aut').
+-define(NS_LEGACY_AUTH_s,            "jabber:iq:auth").
+-define(NS_LEGACY_AUTH_FEAT_s,       "http://jabber.org/features/iq-aut").
+
+% Defined by XEP-0079: Advanced Message Processing.
+-define(NS_AMP,                      'http://jabber.org/protocol/amp').
+-define(NS_AMP_ERRORS,               'http://jabber.org/protocol/amp#error').
+-define(NS_AMP_FEAT,                 'http://jabber.org/features/amp').
+-define(NS_AMP_s,                    "http://jabber.org/protocol/amp").
+-define(NS_AMP_ERRORS_s,             "http://jabber.org/protocol/amp#error").
+-define(NS_AMP_FEAT_s,               "http://jabber.org/features/amp").
+
+% Defined by XEP-0080: User Location.
+-define(NS_GEOLOC,                   'http://jabber.org/protocol/geoloc').
+-define(NS_GEOLOC_s,                 "http://jabber.org/protocol/geoloc").
+
+% Defined by XEP-0083: Nested Roster Groups.
+-define(NS_ROSTER_DELIMITER,         'roster:delimiter').
+-define(NS_ROSTER_DELIMITER_s,       "roster:delimiter").
+
+% Defined by XEP-0084: User Avatar.
+-define(NS_USER_AVATAR,              'urn:xmpp:avatar:metadata').
+-define(NS_USER_AVATAR_s,            "urn:xmpp:avatar:metadata").
+
+% Defined by XEP-0085: Chat State Notifications
+-define(NS_CHATSTATES,               'http://jabber.org/protocol/chatstates').
+-define(NS_CHATSTATES_s,             "http://jabber.org/protocol/chatstates").
+
+% Defined by XEP-0090: Entity Time.
+-define(NS_TIME_OLD,                 'jabber:iq:time').
+-define(NS_TIME_OLD_s,               "jabber:iq:time").
+
+% Defined by XEP-0091: Delayed Delivery.
+-define(NS_DELAY_OLD,                'jabber:x:delay').
+-define(NS_DELAY_OLD_s,              "jabber:x:delay").
+
+% Defined by XEP-0092: Software Version.
+-define(NS_SOFT_VERSION,             'jabber:iq:version').
+-define(NS_SOFT_VERSION_s,           "jabber:iq:version").
+
+% Defined by XEP-0093: Roster Item Exchange.
+-define(NS_ROSTER_EXCHANGE_OLD,      'jabber:x:roster').
+-define(NS_ROSTER_EXCHANGE_OLD_s,    "jabber:x:roster").
+
+% Defined by XEP-0095: Stream Initiation.
+-define(NS_SI,                       'http://jabber.org/protocol/si').
+-define(NS_SI_s,                     "http://jabber.org/protocol/si").
+
+% Defined by XEP-0096: File Transfer.
+-define(NS_FILE_TRANSFERT,
+  'http://jabber.org/protocol/si/profile/file-transfer').
+-define(NS_FILE_TRANSFERT_s,
+  "http://jabber.org/protocol/si/profile/file-transfer").
+
+% Defined by XEP-0100: Gateway Interaction.
+-define(NS_GATEWAY,                  'jabber:iq:gateway').
+-define(NS_GATEWAY_s,                "jabber:iq:gateway").
+
+% Defined by XEP-0107: User Mood.
+-define(NS_USER_MOOD,                'http://jabber.org/protocol/mood').
+-define(NS_USER_MOOD_s,              "http://jabber.org/protocol/mood").
+
+% Defined by XEP-0108: User Activity.
+-define(NS_USER_ACTIVITY,            'http://jabber.org/protocol/activity').
+-define(NS_USER_ACTIVITY_s,          "http://jabber.org/protocol/activity").
+
+% Defined by XEP-0114: Jabber Component Protocol.
+-define(NS_COMPONENT_ACCEPT,         'jabber:component:accept').
+-define(NS_COMPONENT_CONNECT,        'jabber:component:connect').
+-define(NS_COMPONENT_ACCEPT_s,       "jabber:component:accept").
+-define(NS_COMPONENT_CONNECT_s,      "jabber:component:connect").
+
+% Defined by XEP-0115: Entity Capabilities.
+-define(NS_CAPS,                     'http://jabber.org/protocol/caps').
+-define(NS_CAPS_s,                   "http://jabber.org/protocol/caps").
+
+% Defined by XEP-0118: User Tune.
+-define(NS_USER_TUNE,                'http://jabber.org/protocol/tune').
+-define(NS_USER_TUNE_s,              "http://jabber.org/protocol/tune").
+
+% Defined by XEP-0122: Data Forms Validation.
+-define(NS_DATA_FORMS_VALIDATE,
+  'http://jabber.org/protocol/xdata-validate').
+-define(NS_DATA_FORMS_VALIDATE_s,
+  "http://jabber.org/protocol/xdata-validate").
+
+% Defined by XEP-0124: Bidirectional-streams Over Synchronous HTTP.
+-define(NS_BOSH,                     'urn:xmpp:xbosh').
+-define(NS_BOSH_s,                   "urn:xmpp:xbosh").
+
+-define(NS_HTTP_BIND,                'http://jabber.org/protocol/httpbind').
+-define(NS_HTTP_BIND_s,              "http://jabber.org/protocol/httpbind").
+
+% Defined by XEP-0130: Waiting Lists.
+-define(NS_WAITING_LIST,             'http://jabber.org/protocol/waitinglist').
+-define(NS_WAITING_LIST_s,           "http://jabber.org/protocol/waitinglist").
+
+% Defined by XEP-0131: Stanza Headers and Internet Metadata (SHIM).
+-define(NS_SHIM,                     'http://jabber.org/protocol/shim').
+-define(NS_SHIM_s,                   "http://jabber.org/protocol/shim").
+
+% Defined by XEP-0136: Message Archiving.
+-define(NS_ARCHIVING,                'urn:xmpp:archive').
+-define(NS_ARCHIVING_s,              "urn:xmpp:archive").
+
+% Defined by XEP-0137: Publishing Stream Initiation Requests.
+-define(NS_SI_PUB,                   'http://jabber.org/protocol/sipub').
+-define(NS_SI_PUB_s,                 "http://jabber.org/protocol/sipub").
+
+% Defined by XEP-0138: Stream Compression.
+-define(NS_COMPRESS,                 'http://jabber.org/protocol/compress').
+-define(NS_COMPRESS_FEAT,            'http://jabber.org/features/compress').
+-define(NS_COMPRESS_s,               "http://jabber.org/protocol/compress").
+-define(NS_COMPRESS_FEAT_s,          "http://jabber.org/features/compress").
+
+% Defined by XEP-0141: Data Forms Layout.
+-define(NS_DATA_FORMS_LAYOUT,
+  'http://jabber.org/protocol/xdata-layout').
+-define(NS_DATA_FORMS_LAYOUT_s,
+  "http://jabber.org/protocol/xdata-layout").
+
+% Defined by XEP-0144: Roster Item Exchange.
+-define(NS_ROSTER_EXCHANGE,          'http://jabber.org/protocol/rosterx').
+-define(NS_ROSTER_EXCHANGE_s,        "http://jabber.org/protocol/rosterx").
+
+% Defined by XEP-0145: Annotations.
+-define(NS_ROSTER_NOTES,             'storage:rosternotes').
+-define(NS_ROSTER_NOTES_s,           "storage:rosternotes").
+
+% Defined by XEP-0153: vCard-Based Avatars.
+-define(NS_VCARD_UPDATE,             'vcard-temp:x:update').
+-define(NS_VCARD_UPDATE_s,           "vcard-temp:x:update").
+
+% Defined by XEP-0154: User Profile.
+-define(NS_USER_PROFILE,             'urn:xmpp:tmp:profile').
+-define(NS_USER_PROFILE_s,           "urn:xmpp:tmp:profile").
+
+% Defined by XEP-0157: Contact Addresses for XMPP Services.
+-define(NS_SERVERINFO,               'http://jabber.org/network/serverinfo').
+-define(NS_SERVERINFO_s,             "http://jabber.org/network/serverinfo").
+
+% Defined by XEP-0158: Robot Challenges.
+-define(NS_ROBOT_CHALLENGE,          'urn:xmpp:tmp:challenge').
+-define(NS_ROBOT_CHALLENGE_s,        "urn:xmpp:tmp:challenge").
+
+% Defined by XEP-0160: Best Practices for Handling Offline Messages.
+-define(NS_MSGOFFLINE,               'msgoffline').
+-define(NS_MSGOFFLINE_s,             "msgoffline").
+
+% Defined by XEP-0161: Abuse Reporting.
+-define(NS_ABUSE_REPORTING,          'urn:xmpp:tmp:abuse').
+-define(NS_ABUSE_REPORTING_s,        "urn:xmpp:tmp:abuse").
+
+% Defined by XEP-0166: Jingle.
+-define(NS_JINGLE,                   'urn:xmpp:tmp:jingle').
+-define(NS_JINGLE_ERRORS,            'urn:xmpp:tmp:jingle:errors').
+-define(NS_JINGLE_s,                 "urn:xmpp:tmp:jingle").
+-define(NS_JINGLE_ERRORS_s,          "urn:xmpp:tmp:jingle:errors").
+
+% Defined by XEP-0167: Jingle RTP Sessions.
+-define(NS_JINGLE_RPT,               'urn:xmpp:tmp:jingle:apps:rtp').
+-define(NS_JINGLE_RPT_INFO,          'urn:xmpp:tmp:jingle:apps:rtp:info').
+-define(NS_JINGLE_RPT_s,             "urn:xmpp:tmp:jingle:apps:rtp").
+-define(NS_JINGLE_RPT_INFO_s,        "urn:xmpp:tmp:jingle:apps:rtp:info").
+
+% Defined by XEP-0168: Resource Application Priority.
+-define(NS_RAP,
+  'http://www.xmpp.org/extensions/xep-0168.html#ns').
+-define(NS_RAP_ROUTE,
+  'http://www.xmpp.org/extensions/xep-0168.html#ns-route').
+-define(NS_RAP_s,
+  "http://www.xmpp.org/extensions/xep-0168.html#ns").
+-define(NS_RAP_ROUTE_s,
+  "http://www.xmpp.org/extensions/xep-0168.html#ns-route").
+
+% Defined by XEP-0171: Language Translation.
+-define(NS_LANG_TRANS,               'urn:xmpp:langtrans').
+-define(NS_LANG_TRANS_ITEMS,         'urn:xmpp:langtrans#items').
+-define(NS_LANG_TRANS_s,             "urn:xmpp:langtrans").
+-define(NS_LANG_TRANS_ITEMS_s,       "urn:xmpp:langtrans#items").
+
+% Defined by XEP-0172: User Nickname.
+-define(NS_USER_NICKNAME,            'http://jabber.org/protocol/nick').
+-define(NS_USER_NICKNAME_s,          "http://jabber.org/protocol/nick").
+
+% Defined by XEP-0176: Jingle ICE-UDP Transport Method.
+-define(NS_JINGLE_ICE_UDP,           'urn:xmpp:tmp:jingle:transports:ice-udp').
+-define(NS_JINGLE_ICE_UDP_s,         "urn:xmpp:tmp:jingle:transports:ice-udp").
+
+% Defined by XEP-0177: Jingle Raw UDP Transport Method.
+-define(NS_JINGLE_RAW_UDP,
+  'urn:xmpp:tmp:jingle:transports:raw-udp').
+-define(NS_JINGLE_RAW_UDP_INFO,
+  'urn:xmpp:tmp:jingle:transports:raw-udp:info').
+-define(NS_JINGLE_RAW_UDP_s,
+  "urn:xmpp:tmp:jingle:transports:raw-udp").
+-define(NS_JINGLE_RAW_UDP_INFO_s,
+  "urn:xmpp:tmp:jingle:transports:raw-udp:info").
+
+% Defined by XEP-0181: Jingle DTMF.
+-define(NS_JINGLE_DTMF,              'urn:xmpp:tmp:jingle:dtmf').
+-define(NS_JINGLE_DTMF_s,            "urn:xmpp:tmp:jingle:dtmf").
+
+% Defined by XEP-0184: Message Receipts.
+-define(NS_RECEIPTS,                 'urn:xmpp:receipts').
+-define(NS_RECEIPTS_s,               "urn:xmpp:receipts").
+
+% Defined by XEP-0186: Invisible Command.
+-define(NS_INVISIBLE_COMMAND,        'urn:xmpp:tmp:invisible').
+-define(NS_INVISIBLE_COMMAND_s,      "urn:xmpp:tmp:invisible").
+
+% Defined by XEP-0189: Public Key Publishing.
+-define(NS_PUBKEY,                   'urn:xmpp:tmp:pubkey').
+-define(NS_PUBKEY_s,                 "urn:xmpp:tmp:pubkey").
+
+% Defined by XEP-0191: Simple Communications Blocking.
+-define(NS_BLOCKING,                 'urn:xmpp:blocking').
+-define(NS_BLOCKING_ERRORS,          'urn:xmpp:blocking:errors').
+-define(NS_BLOCKING_s,               "urn:xmpp:blocking").
+-define(NS_BLOCKING_ERRORS_s,        "urn:xmpp:blocking:errors").
+
+% Defined by XEP-0194: User Chatting.
+-define(NS_USER_CHATTING,
+  'http://www.xmpp.org/extensions/xep-0194.html#ns').
+-define(NS_USER_CHATTING_s,
+  "http://www.xmpp.org/extensions/xep-0194.html#ns").
+
+% Defined by XEP-0195: User Browsing.
+-define(NS_USER_BROWSING,
+  'http://www.xmpp.org/extensions/xep-0195.html#ns').
+-define(NS_USER_BROWSING_s,
+  "http://www.xmpp.org/extensions/xep-0195.html#ns").
+
+% Defined by XEP-0196: User Gaming.
+-define(NS_USER_GAMING,
+  'http://www.xmpp.org/extensions/xep-0196.html#ns').
+-define(NS_USER_GAMING_s,
+  "http://www.xmpp.org/extensions/xep-0196.html#ns").
+
+% Defined by XEP-0197: User Viewing.
+-define(NS_USER_VIEWING,
+  'http://www.xmpp.org/extensions/xep-0197.html#ns').
+-define(NS_USER_VIEWING_s,
+  "http://www.xmpp.org/extensions/xep-0197.html#ns").
+
+% Defined by XEP-0198: Stanza Acknowledgements.
+-define(NS_STANZA_ACK,
+  'http://www.xmpp.org/extensions/xep-0198.html#ns').
+-define(NS_STANZA_ACK_s,
+  "http://www.xmpp.org/extensions/xep-0198.html#ns").
+
+% Defined by XEP-0199: XMPP Ping.
+-define(NS_PING,                     'urn:xmpp:ping').
+-define(NS_PING_s,                   "urn:xmpp:ping").
+
+% Defined by XEP-0202: Entity Time.
+-define(NS_TIME,                     'urn:xmpp:time').
+-define(NS_TIME_s,                   "urn:xmpp:time").
+
+% Defined by XEP-0203: Delayed Delivery.
+-define(NS_DELAY,                    'urn:xmpp:delay').
+-define(NS_DELAY_s,                  "urn:xmpp:delay").
+
+% Defined by XEP-0206: XMPP Over BOSH.
+-define(NS_XBOSH,                    'urn:xmpp:xbosh').
+-define(NS_XBOSH_s,                  "urn:xmpp:xbosh").
+-define(NS_XBOSH_pfx,                "xmpp").
+
+% Defined by XEP-0208: Bootstrapping Implementation of Jingle.
+-define(NS_JINGLE_BOOTSTRAPING,
+  'http://www.xmpp.org/extensions/xep-0208.html#ns').
+-define(NS_JINGLE_BOOTSTRAPING_s,
+  "http://www.xmpp.org/extensions/xep-0208.html#ns").
+
+% Defined by XEP-0209: Metacontacts.
+-define(NS_METACONTACTS,             'storage:metacontacts').
+-define(NS_METACONTACTS_s,           "storage:metacontacts").
+
+% Defined by XEP-0215: External Service Discovery.
+-define(NS_EXTERNAL_DISCO,
+  'http://www.xmpp.org/extensions/xep-0215.html#ns').
+-define(NS_EXTERNAL_DISCO_s,
+  "http://www.xmpp.org/extensions/xep-0215.html#ns").
+
+% Defined by XEP-0220: Server Dialback.
+-define(NS_DIALBACK,                 'jabber:server:dialback').
+-define(NS_DIALBACK_FEAT,            'urn:xmpp:features:dialback').
+-define(NS_DIALBACK_pfx,             "db").
+-define(NS_DIALBACK_s,               "jabber:server:dialback").
+-define(NS_DIALBACK_FEAT_s,          "urn:xmpp:features:dialback").
+
+% Defined by XEP-0221: Data Forms Media Element.
+-define(NS_DATA_FORMS_MEDIA,         'urn:xmpp:tmp:media-element').
+-define(NS_DATA_FORMS_MEDIA_s,       "urn:xmpp:tmp:media-element").
+
+% Defined by XEP-0224: Attention.
+-define(NS_ATTENTION,
+  'http://www.xmpp.org/extensions/xep-0224.html#ns').
+-define(NS_ATTENTION_s,
+  "http://www.xmpp.org/extensions/xep-0224.html#ns").
+
+% Defined by XEP-0225: Component Connections.
+-define(NS_COMPONENT_CONNECTION,     'urn:xmpp:tmp:component').
+-define(NS_COMPONENT_CONNECTION_s,   "urn:xmpp:tmp:component").
+
+% Defined by XEP-0227: Portable Import/Export Format for XMPP-IM Servers.
+-define(NS_SERVER_IMPORT_EXPORT,
+  'http://www.xmpp.org/extensions/xep-0227.html#ns').
+-define(NS_SERVER_IMPORT_EXPORT_s,
+  "http://www.xmpp.org/extensions/xep-0227.html#ns").
+
+% Defined by XEP-0231: Data Element.
+-define(NS_DATA,                     'urn:xmpp:tmp:data-element').
+-define(NS_DATA_s,                   "urn:xmpp:tmp:data-element").
+
+% Defined by XEP-0233: Use of Domain-Based Service Names in XMPP SASL
+% Negotiation.
+-define(NS_DOMAIN_BASED_NAME,        'urn:xmpp:tmp:domain-based-name').
+-define(NS_DOMAIN_BASED_NAME_s,      "urn:xmpp:tmp:domain-based-name").
+
+% Defined by XEP-0234: Jingle File Transfer.
+-define(NS_JINGLE_FILE_TRANSFERT,    'urn:xmpp:tmp:jingle:apps:file-transfer').
+-define(NS_JINGLE_FILE_TRANSFERT_s,  "urn:xmpp:tmp:jingle:apps:file-transfer").
+
+% Defined by XEP-0235: Authorization Tokens.
+-define(NS_AUTH_TOKEN,               'urn:xmpp:tmp:auth-token').
+-define(NS_AUTH_TOKEN_s,             "urn:xmpp:tmp:auth-token").
+
+% Defined by XEP-0237: Roster Sequencing.
+-define(NS_ROSTER_SEQ,               'urn:xmpp:tmp:roster-sequencing').
+-define(NS_ROSTER_SEQ_s,             "urn:xmpp:tmp:roster-sequencing").
+
+% Defined by XEP-0244: IO Data.
+-define(NS_IO_DATA,                  'urn:xmpp:tmp:io-data').
+-define(NS_IO_DATA_s,                "urn:xmpp:tmp:io-data").
+
+% Defined by XEP-0247: Jingle XML Streams.
+-define(NS_JINGLE_XML_STREAM,        'urn:xmpp:tmp:jingle:apps:xmlstream').
+-define(NS_JINGLE_XML_STREAM_s,      "urn:xmpp:tmp:jingle:apps:xmlstream").
+
+% Defined by XHTML 1.0.
+-define(NS_XHTML,                    'http://www.w3.org/1999/xhtml').
+-define(NS_XHTML_s,                  "http://www.w3.org/1999/xhtml").
diff -r d551623afde5 deps/exmpp/include/exmpp_xml.hrl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/exmpp_xml.hrl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,111 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+% --------------------------------------------------------------------
+% Type definition.
+% --------------------------------------------------------------------
+
+% NS, element's name and attribute's name.
+-type(xmlname() :: atom() | string()).
+
+% Structures used by XML serialization functions.
+-type(xmldefaultns()   :: xmlname() | [xmlname()]).
+-type(xmldefaultnss()  :: [xmldefaultns()]).
+-type(xmlprefixednss() :: [{xmlname(), string()}]).
+
+% Path description (to be used in exmpp_xml:get_path/2).
+-type(xmlpathcomponent() ::
+  {element, xmlname()} |
+  {element, xmlname(), xmlname()} |
+  {attribute, xmlname()} |
+  {attribute, xmlname(), xmlname()} |
+  cdata |
+  cdata_as_list).
+-type(xmlpath() :: [xmlpathcomponent()]).
+
+% --------------------------------------------------------------------
+% Records to represent XML nodes.
+% --------------------------------------------------------------------
+
+% Note: The records defined here are documented in exmpp_xml.
+
+% Character data.
+-record(xmlcdata, {
+  cdata = <<>>     :: binary()
+}).
+-type(xmlcdata() :: #xmlcdata{}).
+
+% Attributes.
+-record(xmlattr, {
+  ns = undefined   :: xmlname() | undefined,
+  name             :: xmlname(),
+  value            :: binary()
+}).
+-type(xmlattr() :: #xmlattr{}).
+
+% Old attribute isn't represented by a record.
+-type(xmlattr_old() :: {xmlname(), string()}).
+
+% Elements.
+-record(xmlel, {
+  ns = undefined   :: xmlname() | undefined,
+  declared_ns = [] :: [{xmlname(), string() | none}],
+  name             :: xmlname(),
+  attrs = []       :: [xmlattr()],
+  children = []    :: [#xmlel{} | xmlcdata()] | undefined
+}).
+-type(xmlel() :: #xmlel{}).
+
+% XML end tag.
+% To use when 'children' is undefined in xmlel or xmlelement.
+-record(xmlendtag, {
+  ns = undefined   :: xmlname() | undefined,
+  name             :: xmlname()
+}).
+-type(xmlendtag() :: #xmlendtag{}).
+
+% Old record for xmlel.
+-record(xmlelement, {
+  name             :: xmlname(),
+  attrs = []       :: [xmlattr_old()],
+  children = []    :: [#xmlelement{} | xmlcdata()] | undefined
+}).
+-type(xmlel_old() :: #xmlelement{}).
+
+% Processing Instruction.
+-record(xmlpi, {
+  target           :: binary(),
+  value            :: binary()
+}).
+-type(xmlpi() :: #xmlpi{}).
+
+-type(xmlattr_any() :: xmlattr() | xmlattr_old()).
+-type(xmlel_any()   :: xmlel() | xmlel_old()).
+-type(xmlnode()     :: xmlel() | xmlel_old() | xmlcdata()).
+
+% --------------------------------------------------------------------
+% Macros to help creation of XML nodes.
+% --------------------------------------------------------------------
+
+-define(XMLEL1(Name),
+  exmpp_xml:element(Name)).
+-define(XMLEL2(NS, Name),
+  exmpp_xml:element(NS, Name)).
+-define(XMLEL4(NS, Name, Attrs, Children),
+  exmpp_xml:element(NS, Name, Attrs, Children)).
+
+-define(XMLATTR(Name, Value),
+  exmpp_xml:attribute(Name, Value)).
+
+-define(XMLCDATA(CData),
+  exmpp_xml:cdata(CData)).
diff -r d551623afde5 deps/exmpp/include/exmpp_xmpp.hrl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/exmpp_xmpp.hrl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,81 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+% --------------------------------------------------------------------
+% Records to represent XMPP/Jabber specific structures.
+% --------------------------------------------------------------------
+
+% IQ stanza.
+-record(iq, {
+  kind    :: request | response,
+  type    :: get | set | result | error,
+  id      :: binary() | undefined,
+  ns      :: xmlname() | undefined,
+  payload :: #xmlel{} | undefined,
+  error   :: #xmlel{} | undefined,
+  lang    :: binary() | undefined,
+  iq_ns   :: xmlname() | undefined
+}).
+
+% --------------------------------------------------------------------
+% Macros for common tests.
+% --------------------------------------------------------------------
+
+% Guard expression to test a stanza as defined by XMPP-IM.
+-define(IS_IM_STANZA(El), (
+  El#xmlel.ns == ?NS_JABBER_CLIENT orelse
+  El#xmlel.ns == ?NS_JABBER_SERVER orelse
+  El#xmlel.ns == ?NS_COMPONENT_ACCEPT orelse
+  El#xmlel.ns == ?NS_COMPONENT_CONNECT
+)).
+
+% Guard expression to test a message.
+-define(IS_MESSAGE(El), (
+  ?IS_IM_STANZA(El) andalso El#xmlel.name == 'message'
+)).
+
+% Guard expression to test a presence.
+-define(IS_PRESENCE(El), (
+  ?IS_IM_STANZA(El) andalso El#xmlel.name == 'presence'
+)).
+
+% Guard expression to test an IQ.
+-define(IS_IQ(El), (
+  ?IS_IM_STANZA(El) andalso El#xmlel.name == 'iq'
+)).
+-define(IS_IQ_RECORD(IQ), (
+  is_record(IQ, iq)
+)).
+
+% Guard expression to test a JID.
+-define(IS_JID(Jid), (
+  element(1, Jid) =:= 'jid' andalso tuple_size(Jid) =:= 5
+)).
+
+% --------------------------------------------------------------------
+% Macros to represent <iq/>
+% --------------------------------------------------------------------
+
+-define(IQ(Type, To, Id), (
+  exmpp_xml:set_attributes(
+    #xmlel{ns = ?NS_JABBER_CLIENT, name = 'iq'},
+      [{'type', Type}, {'to', To}, {'id', Id}])
+)).
+
+-define(IQ_GET(To, Id), (
+  ?IQ("get", To, Id)
+)).
+
+-define(IQ_SET(To, Id), (
+  ?IQ("set", To, Id)
+)).
diff -r d551623afde5 deps/exmpp/include/internal/Makefile
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/internal/Makefile	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,501 @@
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
+# include/internal/Makefile.  Generated from Makefile.in by configure.
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+
+
+srcdir = .
+top_srcdir = ../..
+
+pkgdatadir = $(datadir)/exmpp
+pkglibdir = $(libdir)/exmpp
+pkgincludedir = $(includedir)/exmpp
+top_builddir = ../..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = /usr/bin/install -c
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = i686-pc-linux-gnu
+host_triplet = i686-pc-linux-gnu
+target_triplet = i686-pc-linux-gnu
+subdir = include/internal
+DIST_COMMON = $(internalheaders_HEADERS) $(srcdir)/Makefile.am \
+	$(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_compare_version.m4 \
+	$(top_srcdir)/m4/colored-echo.m4 $(top_srcdir)/m4/erlang.m4 \
+	$(top_srcdir)/m4/expat.m4 $(top_srcdir)/m4/openssl.m4 \
+	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/zlib.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES =
+SOURCES =
+DIST_SOURCES =
+am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
+am__vpath_adj = case $$p in \
+    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
+    *) f=$$p;; \
+  esac;
+am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
+am__installdirs = "$(DESTDIR)$(internalheadersdir)"
+internalheadersHEADERS_INSTALL = $(INSTALL_HEADER)
+HEADERS = $(internalheaders_HEADERS)
+ETAGS = etags
+CTAGS = ctags
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run aclocal-1.9
+AMDEP_FALSE = #
+AMDEP_TRUE = 
+AMTAR = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run tar
+AR = ar
+AUTOCONF = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run autoconf
+AUTOHEADER = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run autoheader
+AUTOMAKE = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run automake-1.9
+AWK = mawk
+BUILD_COMPAT_FALSE = 
+BUILD_COMPAT_TRUE = #
+CC = gcc -std=gnu99
+CCDEPMODE = depmode=gcc3
+CFLAGS = -g -O2 -Wall -Werror
+COMPAT_MODULES = %
+COMPAT_MODULES_START =  % Compatibility modules disabled:
+CPP = gcc -std=gnu99 -E
+CPPFLAGS = 
+CXXCPP = 
+CYGPATH_W = echo
+DEFS = -DHAVE_CONFIG_H
+DEPDIR = .deps
+ECHO = echo
+ECHO_C = 
+ECHO_N = -n
+ECHO_T = 
+EGREP = /bin/grep -E
+EMKOPTS = debug_info, {d, debug}, report_warnings, {warn_format, 1}, warn_export_vars, warn_shadow_vars, warn_unused_import, {d, 'HAVE_EXPAT'}, {d, 'HAVE_LIBXML2'}, {d, 'HAVE_OPENSSL'}, {d, 'HAVE_ZLIB'}
+ENABLE_DOCUMENTATION_FALSE = 
+ENABLE_DOCUMENTATION_TRUE = #
+ENABLE_EXAMPLES_FALSE = 
+ENABLE_EXAMPLES_TRUE = #
+ENABLE_SMP_SUPPORT_FALSE = #
+ENABLE_SMP_SUPPORT_TRUE = 
+ENABLE_TESTSUITE_FALSE = #
+ENABLE_TESTSUITE_TRUE = 
+ERL = /usr/bin/erl
+ERLANG_ERTS_DIR = /usr/lib/erlang/erts-5.7.2
+ERLANG_ERTS_VER = 5.7.2
+ERLANG_INSTALL_LIB_DIR = /usr/lib/erlang/lib
+ERLANG_INSTALL_LIB_DIR_exmpp = ${ERLANG_INSTALL_LIB_DIR}/exmpp-${VERSION}
+ERLANG_LIB_DIR = /usr/lib/erlang/lib
+ERLANG_LIB_DIR_erl_interface = /usr/lib/erlang/lib/erl_interface-3.6.2
+ERLANG_LIB_DIR_eunit = 
+ERLANG_LIB_VER_erl_interface = 3.6.2
+ERLANG_LIB_VER_eunit = 
+ERLANG_RELEASE = R13B01
+ERLANG_ROOT_DIR = /usr/lib/erlang
+ERLC = /usr/bin/erlc
+ERLCFLAGS = 
+ERL_DRIVER_LDFLAGS = 
+ESCRIPT = /usr/bin/escript
+EXEEXT = 
+EXMPP_BUILD_ARCH = 
+EXMPP_DISTSUFFIX = -r903
+EXMPP_HOST_ARCH = 
+EXMPP_RELEASE_DATE = 
+EXMPP_SVNREV = 903
+EXPAT_CPPFLAGS = 
+EXPAT_LDFLAGS = 
+EXPAT_LIBS = -lexpat
+GREP = /bin/grep
+INSTALL_DATA = ${INSTALL} -m 644
+INSTALL_PROGRAM = ${INSTALL}
+INSTALL_SCRIPT = ${INSTALL}
+INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
+LDFLAGS = 
+LIBOBJS = 
+LIBS = 
+LIBTOOL = $(SHELL) $(top_builddir)/libtool
+LIBXML2_CFLAGS = -I/usr/include/libxml2  
+LIBXML2_LIBS = -lxml2  
+LN_S = ln -s
+LTLIBOBJS = 
+MAKEINFO = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run makeinfo
+OBJEXT = o
+OPENSSL_CPPFLAGS = 
+OPENSSL_LDFLAGS = 
+OPENSSL_LIBS = -lssl -lcrypto
+PACKAGE = exmpp
+PACKAGE_BUGREPORT = js.pedron@meetic-corp.com
+PACKAGE_NAME = exmpp
+PACKAGE_STRING = exmpp 0.9.2
+PACKAGE_TARNAME = exmpp
+PACKAGE_VERSION = 0.9.2
+PATH_SEPARATOR = :
+PKG_CONFIG = /usr/bin/pkg-config
+RANLIB = ranlib
+SED = /bin/sed
+SET_MAKE = 
+SHELL = /bin/bash
+STRIP = strip
+VERSION = 0.9.2
+WITH_EXPAT_FALSE = #
+WITH_EXPAT_TRUE = 
+WITH_LIBXML2_FALSE = #
+WITH_LIBXML2_TRUE = 
+WITH_OPENSSL_FALSE = #
+WITH_OPENSSL_TRUE = 
+WITH_ZLIB_FALSE = #
+WITH_ZLIB_TRUE = 
+ZLIB_CPPFLAGS = 
+ZLIB_LDFLAGS = 
+ZLIB_LIBS = -lz
+ac_ct_CC = gcc
+am__fastdepCC_FALSE = #
+am__fastdepCC_TRUE = 
+am__include = include
+am__leading_dot = .
+am__quote = 
+am__tar = ${AMTAR} chof - "$$tardir"
+am__untar = ${AMTAR} xf -
+bindir = ${exec_prefix}/bin
+build = i686-pc-linux-gnu
+build_alias = 
+build_cpu = i686
+build_os = linux-gnu
+build_vendor = pc
+datadir = ${datarootdir}
+datarootdir = ${prefix}/share
+docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
+dvidir = ${docdir}
+exec_prefix = ${prefix}
+exp_ERLANG_INSTALL_LIB_DIR_exmpp = /usr/lib/erlang/lib/exmpp-0.9.2
+host = i686-pc-linux-gnu
+host_alias = 
+host_cpu = i686
+host_os = linux-gnu
+host_vendor = pc
+htmldir = ${docdir}
+includedir = ${prefix}/include
+infodir = ${datarootdir}/info
+install_sh = /home/arjan/devel/zotonic/deps/exmpp/ac-aux/install-sh
+libdir = ${exec_prefix}/lib
+libexecdir = ${exec_prefix}/libexec
+localedir = ${datarootdir}/locale
+localstatedir = ${prefix}/var
+mandir = ${datarootdir}/man
+mkdir_p = mkdir -p --
+oldincludedir = /usr/include
+pdfdir = ${docdir}
+prefix = /usr/local
+program_transform_name = s,x,x,
+psdir = ${docdir}
+sbindir = ${exec_prefix}/sbin
+sharedstatedir = ${prefix}/com
+sysconfdir = ${prefix}/etc
+target = i686-pc-linux-gnu
+target_alias = 
+target_cpu = i686
+target_os = linux-gnu
+target_vendor = pc
+MAKE_SPECS_LIST = $(srcdir)/make-specs-list
+EXTRACT_KNOWN = $(srcdir)/extract-known-from-specs
+KNOWN_NSS_SOURCE = $(srcdir)/exmpp_known_nss.in
+KNOWN_ELEMS_SOURCE = $(srcdir)/exmpp_known_elems.in
+KNOWN_ATTRS_SOURCE = $(srcdir)/exmpp_known_attrs.in
+EXTRA_DIST = $(MAKE_SPECS_LIST) $(EXTRACT_KNOWN)			\
+	     $(KNOWN_NSS_SOURCE)					\
+	     $(KNOWN_ELEMS_SOURCE)					\
+	     $(KNOWN_ATTRS_SOURCE)					\
+	     exmpp_known_nss.hrl.awk					\
+	     exmpp_known_nss.hrl.js					\
+	     exmpp_known_elems.hrl.awk					\
+	     exmpp_known_elems.hrl.js					\
+	     exmpp_known_attrs.hrl.awk					\
+	     exmpp_known_attrs.hrl.js
+
+BUILT_SOURCES = exmpp_known_nss.hrl					\
+		exmpp_known_elems.hrl					\
+		exmpp_known_attrs.hrl
+
+internalheadersdir = $(ERLANG_INSTALL_LIB_DIR_exmpp)/include/internal
+internalheaders_HEADERS = $(BUILT_SOURCES) exmpp_xmpp.hrl
+CLEANFILES = $(BUILT_SOURCES)
+all: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) all-am
+
+.SUFFIXES:
+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  include/internal/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --foreign  include/internal/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure:  $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+distclean-libtool:
+	-rm -f libtool
+uninstall-info-am:
+install-internalheadersHEADERS: $(internalheaders_HEADERS)
+	@$(NORMAL_INSTALL)
+	test -z "$(internalheadersdir)" || $(mkdir_p) "$(DESTDIR)$(internalheadersdir)"
+	@list='$(internalheaders_HEADERS)'; for p in $$list; do \
+	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
+	  f=$(am__strip_dir) \
+	  echo " $(internalheadersHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(internalheadersdir)/$$f'"; \
+	  $(internalheadersHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(internalheadersdir)/$$f"; \
+	done
+
+uninstall-internalheadersHEADERS:
+	@$(NORMAL_UNINSTALL)
+	@list='$(internalheaders_HEADERS)'; for p in $$list; do \
+	  f=$(am__strip_dir) \
+	  echo " rm -f '$(DESTDIR)$(internalheadersdir)/$$f'"; \
+	  rm -f "$(DESTDIR)$(internalheadersdir)/$$f"; \
+	done
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
+	  test -n "$$unique" || unique=$$empty_fix; \
+	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	    $$tags $$unique; \
+	fi
+ctags: CTAGS
+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	$(mkdir_p) $(distdir)/$(srcdir)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) check-am
+all-am: Makefile $(HEADERS)
+installdirs:
+	for dir in "$(DESTDIR)$(internalheadersdir)"; do \
+	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
+	done
+install: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
+clean: clean-am
+
+clean-am: clean-generic clean-libtool mostlyclean-am
+
+distclean: distclean-am
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-libtool \
+	distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am: install-internalheadersHEADERS
+
+install-exec-am:
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-generic mostlyclean-libtool
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-info-am uninstall-internalheadersHEADERS
+
+.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
+	clean-libtool ctags distclean distclean-generic \
+	distclean-libtool distclean-tags distdir dvi dvi-am html \
+	html-am info info-am install install-am install-data \
+	install-data-am install-exec install-exec-am install-info \
+	install-info-am install-internalheadersHEADERS install-man \
+	install-strip installcheck installcheck-am installdirs \
+	maintainer-clean maintainer-clean-generic mostlyclean \
+	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
+	tags uninstall uninstall-am uninstall-info-am \
+	uninstall-internalheadersHEADERS
+
+
+# --------------------------------------------------------------------
+# Known namespaces/names/attributes headers generation.
+# --------------------------------------------------------------------
+
+exmpp_known_nss.hrl: $(srcdir)/exmpp_known_nss.hrl.awk $(KNOWN_NSS_SOURCE)
+	$(AWK) -f $(srcdir)/exmpp_known_nss.hrl.awk $(KNOWN_NSS_SOURCE) > $@
+
+exmpp_known_elems.hrl: $(srcdir)/exmpp_known_elems.hrl.awk $(KNOWN_ELEMS_SOURCE)
+	$(AWK) -f $(srcdir)/exmpp_known_elems.hrl.awk $(KNOWN_ELEMS_SOURCE) > $@
+
+exmpp_known_attrs.hrl: $(srcdir)/exmpp_known_attrs.hrl.awk $(KNOWN_ATTRS_SOURCE)
+	$(AWK) -f $(srcdir)/exmpp_known_attrs.hrl.awk $(KNOWN_ATTRS_SOURCE) > $@
+
+# --------------------------------------------------------------------
+# Known namespaces/names/attributes updates.
+# --------------------------------------------------------------------
+
+updateknown: $(MAKE_SPECS_LIST) $(EXTRACT_KNOWN)
+	@$(MAKE_SPECS_LIST) | $(EXTRACT_KNOWN)				\
+		$(KNOWN_NSS_SOURCE)					\
+		$(KNOWN_NAMES_SOURCE)					\
+		$(KNOWN_ATTRS_SOURCE)
+
+.PHONY: updateknown
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff -r d551623afde5 deps/exmpp/include/internal/Makefile.am
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/internal/Makefile.am	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,52 @@
+MAKE_SPECS_LIST = $(srcdir)/make-specs-list
+EXTRACT_KNOWN = $(srcdir)/extract-known-from-specs
+
+KNOWN_NSS_SOURCE = $(srcdir)/exmpp_known_nss.in
+KNOWN_ELEMS_SOURCE = $(srcdir)/exmpp_known_elems.in
+KNOWN_ATTRS_SOURCE = $(srcdir)/exmpp_known_attrs.in
+
+EXTRA_DIST = $(MAKE_SPECS_LIST) $(EXTRACT_KNOWN)			\
+	     $(KNOWN_NSS_SOURCE)					\
+	     $(KNOWN_ELEMS_SOURCE)					\
+	     $(KNOWN_ATTRS_SOURCE)					\
+	     exmpp_known_nss.hrl.awk					\
+	     exmpp_known_nss.hrl.js					\
+	     exmpp_known_elems.hrl.awk					\
+	     exmpp_known_elems.hrl.js					\
+	     exmpp_known_attrs.hrl.awk					\
+	     exmpp_known_attrs.hrl.js
+
+BUILT_SOURCES = exmpp_known_nss.hrl					\
+		exmpp_known_elems.hrl					\
+		exmpp_known_attrs.hrl
+
+internalheadersdir = $(ERLANG_INSTALL_LIB_DIR_exmpp)/include/internal
+
+internalheaders_HEADERS = $(BUILT_SOURCES) exmpp_xmpp.hrl
+
+CLEANFILES = $(BUILT_SOURCES)
+
+# --------------------------------------------------------------------
+# Known namespaces/names/attributes headers generation.
+# --------------------------------------------------------------------
+
+exmpp_known_nss.hrl: $(srcdir)/exmpp_known_nss.hrl.awk $(KNOWN_NSS_SOURCE)
+	$(AWK) -f $(srcdir)/exmpp_known_nss.hrl.awk $(KNOWN_NSS_SOURCE) > $@
+
+exmpp_known_elems.hrl: $(srcdir)/exmpp_known_elems.hrl.awk $(KNOWN_ELEMS_SOURCE)
+	$(AWK) -f $(srcdir)/exmpp_known_elems.hrl.awk $(KNOWN_ELEMS_SOURCE) > $@
+
+exmpp_known_attrs.hrl: $(srcdir)/exmpp_known_attrs.hrl.awk $(KNOWN_ATTRS_SOURCE)
+	$(AWK) -f $(srcdir)/exmpp_known_attrs.hrl.awk $(KNOWN_ATTRS_SOURCE) > $@
+
+# --------------------------------------------------------------------
+# Known namespaces/names/attributes updates.
+# --------------------------------------------------------------------
+
+updateknown: $(MAKE_SPECS_LIST) $(EXTRACT_KNOWN)
+	@$(MAKE_SPECS_LIST) | $(EXTRACT_KNOWN)				\
+		$(KNOWN_NSS_SOURCE)					\
+		$(KNOWN_NAMES_SOURCE)					\
+		$(KNOWN_ATTRS_SOURCE)
+
+.PHONY: updateknown
diff -r d551623afde5 deps/exmpp/include/internal/Makefile.in
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/internal/Makefile.in	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,501 @@
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ../..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = @build@
+host_triplet = @host@
+target_triplet = @target@
+subdir = include/internal
+DIST_COMMON = $(internalheaders_HEADERS) $(srcdir)/Makefile.am \
+	$(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_compare_version.m4 \
+	$(top_srcdir)/m4/colored-echo.m4 $(top_srcdir)/m4/erlang.m4 \
+	$(top_srcdir)/m4/expat.m4 $(top_srcdir)/m4/openssl.m4 \
+	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/zlib.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES =
+SOURCES =
+DIST_SOURCES =
+am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
+am__vpath_adj = case $$p in \
+    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
+    *) f=$$p;; \
+  esac;
+am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
+am__installdirs = "$(DESTDIR)$(internalheadersdir)"
+internalheadersHEADERS_INSTALL = $(INSTALL_HEADER)
+HEADERS = $(internalheaders_HEADERS)
+ETAGS = etags
+CTAGS = ctags
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BUILD_COMPAT_FALSE = @BUILD_COMPAT_FALSE@
+BUILD_COMPAT_TRUE = @BUILD_COMPAT_TRUE@
+CC = @CC@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+COMPAT_MODULES = @COMPAT_MODULES@
+COMPAT_MODULES_START = @COMPAT_MODULES_START@
+CPP = @CPP@
+CPPFLAGS = @CPPFLAGS@
+CXXCPP = @CXXCPP@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+ECHO = @ECHO@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EGREP = @EGREP@
+EMKOPTS = @EMKOPTS@
+ENABLE_DOCUMENTATION_FALSE = @ENABLE_DOCUMENTATION_FALSE@
+ENABLE_DOCUMENTATION_TRUE = @ENABLE_DOCUMENTATION_TRUE@
+ENABLE_EXAMPLES_FALSE = @ENABLE_EXAMPLES_FALSE@
+ENABLE_EXAMPLES_TRUE = @ENABLE_EXAMPLES_TRUE@
+ENABLE_SMP_SUPPORT_FALSE = @ENABLE_SMP_SUPPORT_FALSE@
+ENABLE_SMP_SUPPORT_TRUE = @ENABLE_SMP_SUPPORT_TRUE@
+ENABLE_TESTSUITE_FALSE = @ENABLE_TESTSUITE_FALSE@
+ENABLE_TESTSUITE_TRUE = @ENABLE_TESTSUITE_TRUE@
+ERL = @ERL@
+ERLANG_ERTS_DIR = @ERLANG_ERTS_DIR@
+ERLANG_ERTS_VER = @ERLANG_ERTS_VER@
+ERLANG_INSTALL_LIB_DIR = @ERLANG_INSTALL_LIB_DIR@
+ERLANG_INSTALL_LIB_DIR_exmpp = @ERLANG_INSTALL_LIB_DIR_exmpp@
+ERLANG_LIB_DIR = @ERLANG_LIB_DIR@
+ERLANG_LIB_DIR_erl_interface = @ERLANG_LIB_DIR_erl_interface@
+ERLANG_LIB_DIR_eunit = @ERLANG_LIB_DIR_eunit@
+ERLANG_LIB_VER_erl_interface = @ERLANG_LIB_VER_erl_interface@
+ERLANG_LIB_VER_eunit = @ERLANG_LIB_VER_eunit@
+ERLANG_RELEASE = @ERLANG_RELEASE@
+ERLANG_ROOT_DIR = @ERLANG_ROOT_DIR@
+ERLC = @ERLC@
+ERLCFLAGS = @ERLCFLAGS@
+ERL_DRIVER_LDFLAGS = @ERL_DRIVER_LDFLAGS@
+ESCRIPT = @ESCRIPT@
+EXEEXT = @EXEEXT@
+EXMPP_BUILD_ARCH = @EXMPP_BUILD_ARCH@
+EXMPP_DISTSUFFIX = @EXMPP_DISTSUFFIX@
+EXMPP_HOST_ARCH = @EXMPP_HOST_ARCH@
+EXMPP_RELEASE_DATE = @EXMPP_RELEASE_DATE@
+EXMPP_SVNREV = @EXMPP_SVNREV@
+EXPAT_CPPFLAGS = @EXPAT_CPPFLAGS@
+EXPAT_LDFLAGS = @EXPAT_LDFLAGS@
+EXPAT_LIBS = @EXPAT_LIBS@
+GREP = @GREP@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LIBTOOL = @LIBTOOL@
+LIBXML2_CFLAGS = @LIBXML2_CFLAGS@
+LIBXML2_LIBS = @LIBXML2_LIBS@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAKEINFO = @MAKEINFO@
+OBJEXT = @OBJEXT@
+OPENSSL_CPPFLAGS = @OPENSSL_CPPFLAGS@
+OPENSSL_LDFLAGS = @OPENSSL_LDFLAGS@
+OPENSSL_LIBS = @OPENSSL_LIBS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+PKG_CONFIG = @PKG_CONFIG@
+RANLIB = @RANLIB@
+SED = @SED@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+WITH_EXPAT_FALSE = @WITH_EXPAT_FALSE@
+WITH_EXPAT_TRUE = @WITH_EXPAT_TRUE@
+WITH_LIBXML2_FALSE = @WITH_LIBXML2_FALSE@
+WITH_LIBXML2_TRUE = @WITH_LIBXML2_TRUE@
+WITH_OPENSSL_FALSE = @WITH_OPENSSL_FALSE@
+WITH_OPENSSL_TRUE = @WITH_OPENSSL_TRUE@
+WITH_ZLIB_FALSE = @WITH_ZLIB_FALSE@
+WITH_ZLIB_TRUE = @WITH_ZLIB_TRUE@
+ZLIB_CPPFLAGS = @ZLIB_CPPFLAGS@
+ZLIB_LDFLAGS = @ZLIB_LDFLAGS@
+ZLIB_LIBS = @ZLIB_LIBS@
+ac_ct_CC = @ac_ct_CC@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+am__tar = @am__tar@
+am__untar = @am__untar@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+datarootdir = @datarootdir@
+docdir = @docdir@
+dvidir = @dvidir@
+exec_prefix = @exec_prefix@
+exp_ERLANG_INSTALL_LIB_DIR_exmpp = @exp_ERLANG_INSTALL_LIB_DIR_exmpp@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+htmldir = @htmldir@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localedir = @localedir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+pdfdir = @pdfdir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+psdir = @psdir@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target = @target@
+target_alias = @target_alias@
+target_cpu = @target_cpu@
+target_os = @target_os@
+target_vendor = @target_vendor@
+MAKE_SPECS_LIST = $(srcdir)/make-specs-list
+EXTRACT_KNOWN = $(srcdir)/extract-known-from-specs
+KNOWN_NSS_SOURCE = $(srcdir)/exmpp_known_nss.in
+KNOWN_ELEMS_SOURCE = $(srcdir)/exmpp_known_elems.in
+KNOWN_ATTRS_SOURCE = $(srcdir)/exmpp_known_attrs.in
+EXTRA_DIST = $(MAKE_SPECS_LIST) $(EXTRACT_KNOWN)			\
+	     $(KNOWN_NSS_SOURCE)					\
+	     $(KNOWN_ELEMS_SOURCE)					\
+	     $(KNOWN_ATTRS_SOURCE)					\
+	     exmpp_known_nss.hrl.awk					\
+	     exmpp_known_nss.hrl.js					\
+	     exmpp_known_elems.hrl.awk					\
+	     exmpp_known_elems.hrl.js					\
+	     exmpp_known_attrs.hrl.awk					\
+	     exmpp_known_attrs.hrl.js
+
+BUILT_SOURCES = exmpp_known_nss.hrl					\
+		exmpp_known_elems.hrl					\
+		exmpp_known_attrs.hrl
+
+internalheadersdir = $(ERLANG_INSTALL_LIB_DIR_exmpp)/include/internal
+internalheaders_HEADERS = $(BUILT_SOURCES) exmpp_xmpp.hrl
+CLEANFILES = $(BUILT_SOURCES)
+all: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) all-am
+
+.SUFFIXES:
+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  include/internal/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --foreign  include/internal/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure:  $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+distclean-libtool:
+	-rm -f libtool
+uninstall-info-am:
+install-internalheadersHEADERS: $(internalheaders_HEADERS)
+	@$(NORMAL_INSTALL)
+	test -z "$(internalheadersdir)" || $(mkdir_p) "$(DESTDIR)$(internalheadersdir)"
+	@list='$(internalheaders_HEADERS)'; for p in $$list; do \
+	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
+	  f=$(am__strip_dir) \
+	  echo " $(internalheadersHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(internalheadersdir)/$$f'"; \
+	  $(internalheadersHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(internalheadersdir)/$$f"; \
+	done
+
+uninstall-internalheadersHEADERS:
+	@$(NORMAL_UNINSTALL)
+	@list='$(internalheaders_HEADERS)'; for p in $$list; do \
+	  f=$(am__strip_dir) \
+	  echo " rm -f '$(DESTDIR)$(internalheadersdir)/$$f'"; \
+	  rm -f "$(DESTDIR)$(internalheadersdir)/$$f"; \
+	done
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
+	  test -n "$$unique" || unique=$$empty_fix; \
+	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	    $$tags $$unique; \
+	fi
+ctags: CTAGS
+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	$(mkdir_p) $(distdir)/$(srcdir)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) check-am
+all-am: Makefile $(HEADERS)
+installdirs:
+	for dir in "$(DESTDIR)$(internalheadersdir)"; do \
+	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
+	done
+install: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
+clean: clean-am
+
+clean-am: clean-generic clean-libtool mostlyclean-am
+
+distclean: distclean-am
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-libtool \
+	distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am: install-internalheadersHEADERS
+
+install-exec-am:
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-generic mostlyclean-libtool
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-info-am uninstall-internalheadersHEADERS
+
+.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
+	clean-libtool ctags distclean distclean-generic \
+	distclean-libtool distclean-tags distdir dvi dvi-am html \
+	html-am info info-am install install-am install-data \
+	install-data-am install-exec install-exec-am install-info \
+	install-info-am install-internalheadersHEADERS install-man \
+	install-strip installcheck installcheck-am installdirs \
+	maintainer-clean maintainer-clean-generic mostlyclean \
+	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
+	tags uninstall uninstall-am uninstall-info-am \
+	uninstall-internalheadersHEADERS
+
+
+# --------------------------------------------------------------------
+# Known namespaces/names/attributes headers generation.
+# --------------------------------------------------------------------
+
+exmpp_known_nss.hrl: $(srcdir)/exmpp_known_nss.hrl.awk $(KNOWN_NSS_SOURCE)
+	$(AWK) -f $(srcdir)/exmpp_known_nss.hrl.awk $(KNOWN_NSS_SOURCE) > $@
+
+exmpp_known_elems.hrl: $(srcdir)/exmpp_known_elems.hrl.awk $(KNOWN_ELEMS_SOURCE)
+	$(AWK) -f $(srcdir)/exmpp_known_elems.hrl.awk $(KNOWN_ELEMS_SOURCE) > $@
+
+exmpp_known_attrs.hrl: $(srcdir)/exmpp_known_attrs.hrl.awk $(KNOWN_ATTRS_SOURCE)
+	$(AWK) -f $(srcdir)/exmpp_known_attrs.hrl.awk $(KNOWN_ATTRS_SOURCE) > $@
+
+# --------------------------------------------------------------------
+# Known namespaces/names/attributes updates.
+# --------------------------------------------------------------------
+
+updateknown: $(MAKE_SPECS_LIST) $(EXTRACT_KNOWN)
+	@$(MAKE_SPECS_LIST) | $(EXTRACT_KNOWN)				\
+		$(KNOWN_NSS_SOURCE)					\
+		$(KNOWN_NAMES_SOURCE)					\
+		$(KNOWN_ATTRS_SOURCE)
+
+.PHONY: updateknown
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff -r d551623afde5 deps/exmpp/include/internal/exmpp_known_attrs.hrl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/internal/exmpp_known_attrs.hrl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,156 @@
+% # Generated by extract-known-from-specs r560 on 2008-08-01T09:50:15Z
+
+-define(XMPP_KNOWN_ATTRS, [
+  'from',
+  'id',
+  'to',
+  'version',
+  'type',
+  'mechanism',
+  'code',
+  'name',
+  'action',
+  'order',
+  'value',
+  'ask',
+  'jid',
+  'subscription',
+  'port',
+  'label',
+  'var',
+  'category',
+  'node',
+  'seconds',
+  'stored',
+  'delivered',
+  'desc',
+  'uri',
+  'maxchars',
+  'maxstanzas',
+  'since',
+  'affiliation',
+  'nick',
+  'role',
+  'thread',
+  'sid',
+  'block-size',
+  'seq',
+  'autojoin',
+  'url',
+  'sessionid',
+  'status',
+  'execute',
+  'index',
+  'max_items',
+  'subid',
+  'notify',
+  'feature',
+  'expiry',
+  'mode',
+  'host',
+  'zeroconf',
+  'dstaddr',
+  'method',
+  'per-hop',
+  'condition',
+  'bytes',
+  'height',
+  'width',
+  'stamp',
+  'mime-type',
+  'profile',
+  'date',
+  'hash',
+  'size',
+  'length',
+  'offset',
+  'ext',
+  'ver',
+  'datatype',
+  'min',
+  'max',
+  'accept',
+  'ack',
+  'authid',
+  'charsets',
+  'content',
+  'hold',
+  'inactivity',
+  'key',
+  'maxpause',
+  'newkey',
+  'pause',
+  'polling',
+  'report',
+  'requests',
+  'rid',
+  'route',
+  'secure',
+  'stream',
+  'time',
+  'wait',
+  'scheme',
+  'save',
+  'exactmatch',
+  'start',
+  'with',
+  'subject',
+  'secs',
+  'utc',
+  'expire',
+  'otr',
+  'unset',
+  'end',
+  'use',
+  'open',
+  'cdate',
+  'mdate',
+  'initiator',
+  'responder',
+  'creator',
+  'senders',
+  'channels',
+  'clockrate',
+  'maxptime',
+  'ptime',
+  'ns',
+  'num',
+  'charset',
+  'source_lang',
+  'destination_lang',
+  'dictionary',
+  'engine',
+  'reviewed',
+  'pivotable',
+  'pwd',
+  'ufrag',
+  'component',
+  'foundation',
+  'generation',
+  'ip',
+  'network',
+  'priority',
+  'protocol',
+  'rel-addr',
+  'rel-port',
+  'rem-addr',
+  'rem-port',
+  'duration',
+  'volume',
+  'restart',
+  'tag',
+  'password',
+  'transport',
+  'username',
+  'alt',
+  'cid',
+  'consumer',
+  'expires',
+  'service',
+  'sequence',
+  'authentication',
+  'disclosure',
+  'logging',
+  'tls',
+  '$end_of_table'
+]).
diff -r d551623afde5 deps/exmpp/include/internal/exmpp_known_attrs.hrl.awk
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/internal/exmpp_known_attrs.hrl.awk	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,16 @@
+/^# Generated by/ {
+	print "% " $0 "\n";
+	print "-define(XMPP_KNOWN_ATTRS, [";
+}
+
+/^[^#]/ {
+	if (!already_processed[$1]) {
+		print "  '" $1 "',";
+		already_processed[$1] = 1;
+	}
+}
+
+END {
+	print "  '$end_of_table'";
+	print "]).";
+}
diff -r d551623afde5 deps/exmpp/include/internal/exmpp_known_attrs.hrl.js
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/internal/exmpp_known_attrs.hrl.js	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,34 @@
+var fso, fd, line, re_start, re, dict;
+
+if (WScript.Arguments.length != 1) {
+	WScript.Echo("Syntax: cscript " +
+	    "exmpp_known_attrs.hrl.js <exmpp_known_attrs.in>");
+} else {
+	/* Open the input file for reading (1). */
+	fso = new ActiveXObject("Scripting.FileSystemObject");
+	fd = fso.OpenTextFile(WScript.Arguments.Item(0), 1, false);
+
+	/* This regexp filters out comments. */
+	re_start = /^# Generated by/;
+	re = /^[^#]/;
+
+	/* We need a dictionnary to filter out duplicates. */
+	dict = new ActiveXObject("Scripting.Dictionary");
+
+	while (!fd.AtEndOfStream) {
+		line = fd.ReadLine();
+		if (line.match(re_start)) {
+			WScript.Echo("% " + line + "\n");
+			WScript.Echo("-define(XMPP_KNOWN_ATTRS, [");
+		}
+		if (!dict.Exists(line) && line.match(re)) {
+			WScript.Echo("  '" + line + "',");
+			dict.Add(line, 1);
+		}
+	}
+	WScript.Echo("  '$end_of_table'");
+	WScript.Echo("]).");
+
+	/* Done! */
+	fd.close();
+}
diff -r d551623afde5 deps/exmpp/include/internal/exmpp_known_attrs.in
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/internal/exmpp_known_attrs.in	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,1403 @@
+# Generated by extract-known-from-specs r560 on 2008-08-01T09:50:15Z
+# vim:ft=conf:
+
+# --------------------------------------------------------------------
+# XEP:		RFC 3920
+# NAME:		XMPP Core
+# URL:		http://www.xmpp.org/rfcs/rfc3920.html
+
+# http://etherx.jabber.org/streams
+from
+id
+to
+version
+
+# jabber:server:dialback
+from
+to
+type
+id
+
+# urn:ietf:params:xml:ns:xmpp-bind
+
+# urn:ietf:params:xml:ns:xmpp-sasl
+mechanism
+
+# urn:ietf:params:xml:ns:xmpp-stanzas
+
+# urn:ietf:params:xml:ns:xmpp-streams
+
+# urn:ietf:params:xml:ns:xmpp-tls
+
+# --------------------------------------------------------------------
+# XEP:		RFC 3921
+# NAME:		XMPP Instant Messaging and Presence
+# URL:		http://www.xmpp.org/rfcs/rfc3921.html
+
+# jabber:client
+from
+id
+to
+type
+code
+
+# jabber:iq:privacy
+name
+action
+order
+type
+value
+
+# jabber:iq:roster
+ask
+jid
+name
+subscription
+
+# jabber:server
+from
+id
+to
+type
+code
+
+# urn:ietf:params:xml:ns:xmpp-session
+
+# --------------------------------------------------------------------
+# XEP:		RFC 3923
+# NAME:		XMPP End-to-End Signing and Object Encryption
+# URL:		http://www.xmpp.org/rfcs/rfc3923.html
+
+# urn:ietf:params:xml:ns:xmpp-e2e
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0003
+# NAME:		Proxy Accept Socket Service (PASS)
+# URL:		http://www.xmpp.org/extensions/xep-0003.html
+# STATUS:	Deprecated
+# TYPE:		Historical
+# DATE:		2007-01-17
+
+# jabber:iq:pass
+port
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0004
+# NAME:		Data Forms
+# URL:		http://www.xmpp.org/extensions/xep-0004.html
+# STATUS:	Final
+# TYPE:		Standards Track
+# DATE:		2007-08-13
+
+# jabber:x:data
+type
+label
+var
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0009
+# NAME:		Jabber-RPC
+# URL:		http://www.xmpp.org/extensions/xep-0009.html
+# STATUS:	Final
+# TYPE:		Standards Track
+# DATE:		2006-02-09
+
+# jabber:iq:rpc
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0011
+# NAME:		Jabber Browsing
+# URL:		http://www.xmpp.org/extensions/xep-0011.html
+# STATUS:	Deprecated
+# TYPE:		Historical
+# DATE:		2004-11-12
+
+# jabber:iq:browse
+category
+jid
+name
+type
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0012
+# NAME:		Last Activity
+# URL:		http://www.xmpp.org/extensions/xep-0012.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-07-16
+
+# jabber:iq:last
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0013
+# NAME:		Flexible Offline Message Retrieval
+# URL:		http://www.xmpp.org/extensions/xep-0013.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-07-14
+
+# http://jabber.org/protocol/offline
+action
+jid
+node
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0016
+# NAME:		Privacy Lists
+# URL:		http://www.xmpp.org/extensions/xep-0016.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-02-15
+
+# jabber:iq:privacy
+name
+action
+order
+type
+value
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0020
+# NAME:		Feature Negotiation
+# URL:		http://www.xmpp.org/extensions/xep-0020.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2006-11-21
+
+# http://jabber.org/protocol/feature-neg
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0022
+# NAME:		Message Events
+# URL:		http://www.xmpp.org/extensions/xep-0022.html
+# STATUS:	Deprecated
+# TYPE:		Historical
+# DATE:		2007-09-26
+
+# jabber:x:event
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0023
+# NAME:		Message Expiration
+# URL:		http://www.xmpp.org/extensions/xep-0023.html
+# STATUS:	Deprecated
+# TYPE:		Historical
+# DATE:		2004-10-18
+
+# jabber:x:expire
+seconds
+stored
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0027
+# NAME:		Current Jabber OpenPGP Usage
+# URL:		http://www.xmpp.org/extensions/xep-0027.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2006-11-29
+
+# jabber:x:encrypted
+
+# jabber:x:signed
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0030
+# NAME:		Service Discovery
+# URL:		http://www.xmpp.org/extensions/xep-0030.html
+# STATUS:	Final
+# TYPE:		Standards Track
+# DATE:		2008-06-06
+
+# http://jabber.org/protocol/disco#info
+node
+category
+name
+type
+var
+
+# http://jabber.org/protocol/disco#items
+node
+jid
+name
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0033
+# NAME:		Extended Stanza Addressing
+# URL:		http://www.xmpp.org/extensions/xep-0033.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2004-09-16
+
+# http://jabber.org/protocol/address
+delivered
+desc
+jid
+node
+type
+uri
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0045
+# NAME:		Multi-User Chat
+# URL:		http://www.xmpp.org/extensions/xep-0045.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-07-16
+
+# http://jabber.org/protocol/muc
+maxchars
+maxstanzas
+seconds
+since
+
+# http://jabber.org/protocol/muc#admin
+affiliation
+jid
+nick
+role
+
+# http://jabber.org/protocol/muc#owner
+jid
+
+# http://jabber.org/protocol/muc#unique
+
+# http://jabber.org/protocol/muc#user
+from
+to
+jid
+affiliation
+nick
+role
+thread
+code
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0047
+# NAME:		In-Band Bytestreams (IBB)
+# URL:		http://www.xmpp.org/extensions/xep-0047.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2006-11-29
+
+# http://jabber.org/protocol/ibb
+sid
+block-size
+seq
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0048
+# NAME:		Bookmarks
+# URL:		http://www.xmpp.org/extensions/xep-0048.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-11-07
+
+# storage:bookmarks
+autojoin
+jid
+name
+url
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0049
+# NAME:		Private XML Storage
+# URL:		http://www.xmpp.org/extensions/xep-0049.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2004-03-01
+
+# jabber:iq:private
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0050
+# NAME:		Ad-Hoc Commands
+# URL:		http://www.xmpp.org/extensions/xep-0050.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-06-30
+
+# http://jabber.org/protocol/commands
+action
+node
+sessionid
+status
+execute
+type
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0054
+# NAME:		vcard-temp
+# URL:		http://www.xmpp.org/extensions/xep-0054.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2008-07-16
+
+# vcard-temp
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0055
+# NAME:		Jabber Search
+# URL:		http://www.xmpp.org/extensions/xep-0055.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2004-03-22
+
+# jabber:iq:search
+jid
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0059
+# NAME:		Result Set Management
+# URL:		http://www.xmpp.org/extensions/xep-0059.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2006-09-20
+
+# http://jabber.org/protocol/rsm
+index
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0060
+# NAME:		Publish-Subscribe
+# URL:		http://www.xmpp.org/extensions/xep-0060.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-03-05
+
+# http://jabber.org/protocol/pubsub
+affiliation
+node
+max_items
+subid
+id
+jid
+notify
+subscription
+
+# http://jabber.org/protocol/pubsub#errors
+feature
+
+# http://jabber.org/protocol/pubsub#event
+node
+id
+expiry
+jid
+subid
+subscription
+
+# http://jabber.org/protocol/pubsub#owner
+node
+affiliation
+jid
+subscription
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0065
+# NAME:		SOCKS5 Bytestreams
+# URL:		http://www.xmpp.org/extensions/xep-0065.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-05-21
+
+# http://jabber.org/protocol/bytestreams
+sid
+mode
+jid
+host
+zeroconf
+port
+dstaddr
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0066
+# NAME:		Out of Band Data
+# URL:		http://www.xmpp.org/extensions/xep-0066.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2006-08-16
+
+# jabber:iq:oob
+sid
+
+# jabber:x:oob
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0070
+# NAME:		Verifying HTTP Requests via XMPP
+# URL:		http://www.xmpp.org/extensions/xep-0070.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-12-14
+
+# http://jabber.org/protocol/http-auth
+id
+method
+url
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0071
+# NAME:		XHTML-IM
+# URL:		http://www.xmpp.org/extensions/xep-0071.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-08-29
+
+# http://jabber.org/protocol/xhtml-im
+
+# http://www.w3.org/1999/xhtml
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0072
+# NAME:		SOAP Over XMPP
+# URL:		http://www.xmpp.org/extensions/xep-0072.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-12-14
+
+# http://jabber.org/protocol/soap#fault
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0077
+# NAME:		In-Band Registration
+# URL:		http://www.xmpp.org/extensions/xep-0077.html
+# STATUS:	Final
+# TYPE:		Standards Track
+# DATE:		2006-01-24
+
+# http://jabber.org/features/iq-register
+
+# jabber:iq:register
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0078
+# NAME:		Non-SASL Authentication
+# URL:		http://www.xmpp.org/extensions/xep-0078.html
+# STATUS:	Deprecated
+# TYPE:		Standards Track
+# DATE:		2008-01-30
+
+# http://jabber.org/features/iq-auth
+
+# jabber:iq:auth
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0079
+# NAME:		Advanced Message Processing
+# URL:		http://www.xmpp.org/extensions/xep-0079.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-11-30
+
+# http://jabber.org/features/amp
+
+# http://jabber.org/protocol/amp
+from
+per-hop
+status
+to
+action
+condition
+value
+
+# http://jabber.org/protocol/amp#errors
+action
+condition
+value
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0080
+# NAME:		User Location
+# URL:		http://www.xmpp.org/extensions/xep-0080.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-01-30
+
+# http://jabber.org/protocol/geoloc
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0083
+# NAME:		Nested Roster Groups
+# URL:		http://www.xmpp.org/extensions/xep-0083.html
+# STATUS:	Active
+# TYPE:		Informational
+# DATE:		2004-10-11
+
+# roster:delimiter
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0084
+# NAME:		User Avatar
+# URL:		http://www.xmpp.org/extensions/xep-0084.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-11-07
+
+# urn:xmpp:avatar:metadata
+bytes
+height
+id
+type
+url
+width
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0085
+# NAME:		Chat State Notifications
+# URL:		http://www.xmpp.org/extensions/xep-0085.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2006-07-12
+
+# http://jabber.org/protocol/chatstates
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0090
+# NAME:		Entity Time
+# URL:		http://www.xmpp.org/extensions/xep-0090.html
+# STATUS:	Deprecated
+# TYPE:		Historical
+# DATE:		2007-03-28
+
+# jabber:iq:time
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0091
+# NAME:		Delayed Delivery
+# URL:		http://www.xmpp.org/extensions/xep-0091.html
+# STATUS:	Deprecated
+# TYPE:		Historical
+# DATE:		2007-03-29
+
+# jabber:x:delay
+from
+stamp
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0092
+# NAME:		Software Version
+# URL:		http://www.xmpp.org/extensions/xep-0092.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-02-16
+
+# jabber:iq:version
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0093
+# NAME:		Roster Item Exchange
+# URL:		http://www.xmpp.org/extensions/xep-0093.html
+# STATUS:	Deprecated
+# TYPE:		Historical
+# DATE:		2005-08-26
+
+# jabber:x:roster
+jid
+name
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0095
+# NAME:		Stream Initiation
+# URL:		http://www.xmpp.org/extensions/xep-0095.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2004-04-13
+
+# http://jabber.org/protocol/si
+id
+mime-type
+profile
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0096
+# NAME:		File Transfer
+# URL:		http://www.xmpp.org/extensions/xep-0096.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2004-04-13
+
+# http://jabber.org/protocol/si/profile/file-transfer
+date
+hash
+name
+size
+length
+offset
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0100
+# NAME:		Gateway Interaction
+# URL:		http://www.xmpp.org/extensions/xep-0100.html
+# STATUS:	Active
+# TYPE:		Informational
+# DATE:		2005-10-05
+
+# jabber:iq:gateway
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0107
+# NAME:		User Mood
+# URL:		http://www.xmpp.org/extensions/xep-0107.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-06-04
+
+# http://jabber.org/protocol/mood
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0108
+# NAME:		User Activity
+# URL:		http://www.xmpp.org/extensions/xep-0108.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-07-11
+
+# http://jabber.org/protocol/activity
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0114
+# NAME:		Jabber Component Protocol
+# URL:		http://www.xmpp.org/extensions/xep-0114.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2005-03-03
+
+# jabber:component:accept
+from
+id
+to
+type
+code
+
+# jabber:component:connect
+from
+id
+to
+type
+code
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0115
+# NAME:		Entity Capabilities
+# URL:		http://www.xmpp.org/extensions/xep-0115.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-02-25
+
+# http://jabber.org/protocol/caps
+ext
+hash
+node
+ver
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0118
+# NAME:		User Tune
+# URL:		http://www.xmpp.org/extensions/xep-0118.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-01-30
+
+# http://jabber.org/protocol/tune
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0122
+# NAME:		Data Forms Validation
+# URL:		http://www.xmpp.org/extensions/xep-0122.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2004-09-22
+
+# http://jabber.org/protocol/xdata-validate
+datatype
+min
+max
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0124
+# NAME:		Bidirectional-streams Over Synchronous HTTP (BOSH)
+# URL:		http://www.xmpp.org/extensions/xep-0124.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-02-28
+
+# http://jabber.org/protocol/httpbind
+accept
+ack
+authid
+charsets
+condition
+content
+from
+hold
+inactivity
+key
+maxpause
+newkey
+pause
+polling
+report
+requests
+rid
+route
+secure
+sid
+stream
+time
+to
+type
+ver
+wait
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0130
+# NAME:		Waiting Lists
+# URL:		http://www.xmpp.org/extensions/xep-0130.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2006-09-13
+
+# http://jabber.org/protocol/waitinglist
+id
+jid
+type
+scheme
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0131
+# NAME:		Stanza Headers and Internet Metadata (SHIM)
+# URL:		http://www.xmpp.org/extensions/xep-0131.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2006-07-12
+
+# http://jabber.org/protocol/shim
+name
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0136
+# NAME:		Message Archiving
+# URL:		http://www.xmpp.org/extensions/xep-0136.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-07-16
+
+# urn:xmpp:archive
+save
+exactmatch
+start
+with
+version
+subject
+thread
+jid
+name
+secs
+utc
+expire
+otr
+unset
+end
+type
+use
+open
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0137
+# NAME:		Publishing SI Requests
+# URL:		http://www.xmpp.org/extensions/xep-0137.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-08-26
+
+# http://jabber.org/protocol/sipub
+id
+from
+mime-type
+profile
+sid
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0138
+# NAME:		Stream Compression
+# URL:		http://www.xmpp.org/extensions/xep-0138.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-09-26
+
+# http://jabber.org/features/compress
+
+# http://jabber.org/protocol/compress
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0141
+# NAME:		Data Forms Layout
+# URL:		http://www.xmpp.org/extensions/xep-0141.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-05-12
+
+# http://jabber.org/protocol/xdata-layout
+label
+var
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0144
+# NAME:		Roster Item Exchange
+# URL:		http://www.xmpp.org/extensions/xep-0144.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-08-26
+
+# http://jabber.org/protocol/rosterx
+action
+jid
+name
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0145
+# NAME:		Annotations
+# URL:		http://www.xmpp.org/extensions/xep-0145.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2006-03-23
+
+# storage:rosternotes
+jid
+cdate
+mdate
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0153
+# NAME:		vCard-Based Avatars
+# URL:		http://www.xmpp.org/extensions/xep-0153.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2006-08-16
+
+# vcard-temp:x:update
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0154
+# NAME:		User Profile
+# URL:		http://www.xmpp.org/extensions/xep-0154.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-04-18
+
+# urn:xmpp:tmp:profile
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0158
+# NAME:		Robot Challenges
+# URL:		http://www.xmpp.org/extensions/xep-0158.html
+# STATUS:	Proposed
+# TYPE:		Standards Track
+# DATE:		2008-05-12
+
+# urn:xmpp:tmp:challenge
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0161
+# NAME:		Abuse Reporting
+# URL:		http://www.xmpp.org/extensions/xep-0161.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-05-06
+
+# urn:xmpp:tmp:abuse
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0166
+# NAME:		Jingle
+# URL:		http://www.xmpp.org/extensions/xep-0166.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-07-31
+
+# urn:xmpp:tmp:jingle
+action
+initiator
+responder
+sid
+creator
+name
+senders
+
+# urn:xmpp:tmp:jingle:errors
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0167
+# NAME:		Jingle RTP Sessions
+# URL:		http://www.xmpp.org/extensions/xep-0167.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-07-31
+
+# urn:xmpp:tmp:jingle:apps:rtp
+channels
+clockrate
+id
+maxptime
+name
+ptime
+value
+
+# urn:xmpp:tmp:jingle:apps:rtp:info
+name
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0168
+# NAME:		Resource Application Priority
+# URL:		http://www.xmpp.org/extensions/xep-0168.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-01-23
+
+# http://www.xmpp.org/extensions/xep-0168.html#ns
+ns
+num
+
+# http://www.xmpp.org/extensions/xep-0168.html#ns-route
+ns
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0171
+# NAME:		Language Translation
+# URL:		http://www.xmpp.org/extensions/xep-0171.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-05-09
+
+# urn:xmpp:langtrans
+charset
+source_lang
+destination_lang
+dictionary
+engine
+reviewed
+
+# urn:xmpp:langtrans#items
+dictionary
+destination_lang
+engine
+jid
+name
+pivotable
+source_lang
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0172
+# NAME:		User Nickname
+# URL:		http://www.xmpp.org/extensions/xep-0172.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2006-06-05
+
+# http://jabber.org/protocol/nick
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0176
+# NAME:		Jingle ICE-UDP Transport Method
+# URL:		http://www.xmpp.org/extensions/xep-0176.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-07-31
+
+# urn:xmpp:tmp:jingle:transports:ice-udp
+pwd
+ufrag
+component
+foundation
+generation
+ip
+network
+port
+priority
+protocol
+rel-addr
+rel-port
+rem-addr
+rem-port
+type
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0177
+# NAME:		Jingle Raw UDP Transport Method
+# URL:		http://www.xmpp.org/extensions/xep-0177.html
+# STATUS:	Proposed
+# TYPE:		Standards Track
+# DATE:		2007-11-27
+
+# urn:xmpp:tmp:jingle:transports:raw-udp
+generation
+ip
+port
+
+# urn:xmpp:tmp:jingle:transports:raw-udp:info
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0181
+# NAME:		Jingle DTMF
+# URL:		http://www.xmpp.org/extensions/xep-0181.html
+# STATUS:	Proposed
+# TYPE:		Standards Track
+# DATE:		2008-05-30
+
+# urn:xmpp:tmp:jingle:dtmf
+code
+duration
+volume
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0184
+# NAME:		Message Receipts
+# URL:		http://www.xmpp.org/extensions/xep-0184.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-09-26
+
+# urn:xmpp:receipts
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0186
+# NAME:		Invisible Command
+# URL:		http://www.xmpp.org/extensions/xep-0186.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-05-12
+
+# urn:xmpp:tmp:invisible
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0189
+# NAME:		Public Key Publishing
+# URL:		http://www.xmpp.org/extensions/xep-0189.html
+# STATUS:	Proposed
+# TYPE:		Standards Track
+# DATE:		2008-03-05
+
+# urn:xmpp:tmp:pubkey
+jid
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0191
+# NAME:		Simple Communications Blocking
+# URL:		http://www.xmpp.org/extensions/xep-0191.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-02-15
+
+# urn:xmpp:blocking
+jid
+
+# urn:xmpp:blocking:errors
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0192
+# NAME:		Proposed Stream Feature Improvements
+# URL:		http://www.xmpp.org/extensions/xep-0192.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-01-17
+
+# urn:ietf:params:xml:ns:xmpp-bind
+
+# urn:ietf:params:xml:ns:xmpp-sasl
+mechanism
+
+# urn:xmpp:features:dialback
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0193
+# NAME:		Proposed Resource Binding Improvements
+# URL:		http://www.xmpp.org/extensions/xep-0193.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-01-17
+
+# urn:ietf:params:xml:ns:xmpp-bind
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0194
+# NAME:		User Chatting
+# URL:		http://www.xmpp.org/extensions/xep-0194.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-10-02
+
+# http://www.xmpp.org/extensions/xep-0194.html#ns
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0195
+# NAME:		User Browsing
+# URL:		http://www.xmpp.org/extensions/xep-0195.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-10-02
+
+# http://www.xmpp.org/extensions/xep-0195.html#ns
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0196
+# NAME:		User Gaming
+# URL:		http://www.xmpp.org/extensions/xep-0196.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-10-02
+
+# http://www.xmpp.org/extensions/xep-0196.html#ns
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0197
+# NAME:		User Viewing
+# URL:		http://www.xmpp.org/extensions/xep-0197.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-10-02
+
+# http://www.xmpp.org/extensions/xep-0197.html#ns
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0198
+# NAME:		Stanza Acknowledgements
+# URL:		http://www.xmpp.org/extensions/xep-0198.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-10-03
+
+# http://www.xmpp.org/extensions/xep-0198.html#ns
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0199
+# NAME:		XMPP Ping
+# URL:		http://www.xmpp.org/extensions/xep-0199.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-06-12
+
+# urn:xmpp:ping
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0202
+# NAME:		Entity Time
+# URL:		http://www.xmpp.org/extensions/xep-0202.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-03-28
+
+# urn:xmpp:time
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0203
+# NAME:		Delayed Delivery
+# URL:		http://www.xmpp.org/extensions/xep-0203.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-03-29
+
+# urn:xmpp:delay
+from
+stamp
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0206
+# NAME:		XMPP Over BOSH
+# URL:		http://www.xmpp.org/extensions/xep-0206.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-06-04
+
+# urn:xmpp:xbosh
+restart
+version
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0208
+# NAME:		Bootstrapping Implementation of Jingle
+# URL:		http://www.xmpp.org/extensions/xep-0208.html
+# STATUS:	Experimental
+# TYPE:		Informational
+# DATE:		2008-01-23
+
+# http://www.xmpp.org/extensions/xep-0208.html#ns
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0209
+# NAME:		Metacontacts
+# URL:		http://www.xmpp.org/extensions/xep-0209.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-04-10
+
+# storage:metacontacts
+jid
+tag
+order
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0215
+# NAME:		External Service Discovery
+# URL:		http://www.xmpp.org/extensions/xep-0215.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-08-30
+
+# http://www.xmpp.org/extensions/xep-0215.html#ns
+type
+host
+name
+password
+port
+transport
+username
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0220
+# NAME:		Server Dialback
+# URL:		http://www.xmpp.org/extensions/xep-0220.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-06-18
+
+# jabber:server:dialback
+from
+to
+type
+id
+
+# urn:xmpp:features:dialback
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0221
+# NAME:		Data Forms Media Element
+# URL:		http://www.xmpp.org/extensions/xep-0221.html
+# STATUS:	Proposed
+# TYPE:		Standards Track
+# DATE:		2008-06-18
+
+# urn:xmpp:tmp:media-element
+height
+width
+type
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0224
+# NAME:		Attention
+# URL:		http://www.xmpp.org/extensions/xep-0224.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-08-08
+
+# http://www.xmpp.org/extensions/xep-0224.html#ns
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0225
+# NAME:		Component Connections
+# URL:		http://www.xmpp.org/extensions/xep-0225.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-08-08
+
+# urn:xmpp:tmp:component
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0227
+# NAME:		Portable Import/Export Format for XMPP-IM Servers
+# URL:		http://www.xmpp.org/extensions/xep-0227.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-12-13
+
+# http://www.xmpp.org/extensions/xep-0227.html#ns
+jid
+name
+password
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0231
+# NAME:		Data Element
+# URL:		http://www.xmpp.org/extensions/xep-0231.html
+# STATUS:	Proposed
+# TYPE:		Standards Track
+# DATE:		2008-06-18
+
+# urn:xmpp:tmp:data-element
+alt
+cid
+type
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0233
+# NAME:		Use of Domain-Based Service Names in XMPP SASL Negotiation
+# URL:		http://www.xmpp.org/extensions/xep-0233.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-01-30
+
+# urn:xmpp:tmp:domain-based-name
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0234
+# NAME:		Jingle File Transfer
+# URL:		http://www.xmpp.org/extensions/xep-0234.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-06-05
+
+# urn:xmpp:tmp:jingle:apps:file-transfer
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0235
+# NAME:		Authorization Tokens
+# URL:		http://www.xmpp.org/extensions/xep-0235.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-03-31
+
+# urn:xmpp:tmp:auth-token
+consumer
+expires
+node
+service
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0237
+# NAME:		Roster Sequencing
+# URL:		http://www.xmpp.org/extensions/xep-0237.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-04-21
+
+# jabber:iq:roster
+sequence
+ask
+jid
+name
+subscription
+
+# urn:xmpp:tmp:roster-sequencing
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0244
+# NAME:		IO Data
+# URL:		http://www.xmpp.org/extensions/xep-0244.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-06-18
+
+# urn:xmpp:tmp:io-data
+type
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0247
+# NAME:		Jingle XML Streams
+# URL:		http://www.xmpp.org/extensions/xep-0247.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-06-18
+
+# urn:xmpp:tmp:jingle:apps:xmlstream
+authentication
+disclosure
+logging
+tls
diff -r d551623afde5 deps/exmpp/include/internal/exmpp_known_elems.hrl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/internal/exmpp_known_elems.hrl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,640 @@
+% # Generated by extract-known-from-specs r560 on 2008-08-01T09:50:15Z
+
+-define(XMPP_KNOWN_ELEMS, [
+  'stream',
+  'features',
+  'error',
+  'result',
+  'verify',
+  'bind',
+  'resource',
+  'jid',
+  'mechanisms',
+  'mechanism',
+  'auth',
+  'challenge',
+  'response',
+  'abort',
+  'success',
+  'failure',
+  'aborted',
+  'incorrect-encoding',
+  'invalid-authzid',
+  'invalid-mechanism',
+  'mechanism-too-weak',
+  'not-authorized',
+  'temporary-auth-failure',
+  'bad-request',
+  'conflict',
+  'feature-not-implemented',
+  'forbidden',
+  'gone',
+  'internal-server-error',
+  'item-not-found',
+  'jid-malformed',
+  'not-acceptable',
+  'not-allowed',
+  'payment-required',
+  'recipient-unavailable',
+  'redirect',
+  'registration-required',
+  'remote-server-not-found',
+  'remote-server-timeout',
+  'resource-constraint',
+  'service-unavailable',
+  'subscription-required',
+  'undefined-condition',
+  'unexpected-request',
+  'text',
+  'bad-format',
+  'bad-namespace-prefix',
+  'connection-timeout',
+  'host-gone',
+  'host-unknown',
+  'improper-addressing',
+  'invalid-from',
+  'invalid-id',
+  'invalid-namespace',
+  'invalid-xml',
+  'policy-violation',
+  'remote-connection-failed',
+  'restricted-xml',
+  'see-other-host',
+  'system-shutdown',
+  'unsupported-encoding',
+  'unsupported-stanza-type',
+  'unsupported-version',
+  'xml-not-well-formed',
+  'starttls',
+  'proceed',
+  'message',
+  'body',
+  'subject',
+  'thread',
+  'presence',
+  'show',
+  'status',
+  'priority',
+  'iq',
+  'query',
+  'active',
+  'default',
+  'list',
+  'item',
+  'presence-in',
+  'presence-out',
+  'group',
+  'session',
+  'e2e',
+  'decryption-failed',
+  'signature-unverified',
+  'bad-timestamp',
+  'client',
+  'close',
+  'expire',
+  'oneshot',
+  'proxy',
+  'server',
+  'x',
+  'instructions',
+  'title',
+  'field',
+  'desc',
+  'required',
+  'option',
+  'value',
+  'reported',
+  'methodCall',
+  'methodName',
+  'params',
+  'param',
+  'methodResponse',
+  'fault',
+  'struct',
+  'member',
+  'i4',
+  'int',
+  'string',
+  'double',
+  'Base64',
+  'boolean',
+  'dateTime.iso8601',
+  'array',
+  'name',
+  'data',
+  'ns',
+  'offline',
+  'feature',
+  'delivered',
+  'displayed',
+  'composing',
+  'id',
+  'identity',
+  'addresses',
+  'address',
+  'password',
+  'history',
+  'actor',
+  'reason',
+  'destroy',
+  'unique',
+  'decline',
+  'invite',
+  'continue',
+  'open',
+  'storage',
+  'conference',
+  'nick',
+  'url',
+  'command',
+  'actions',
+  'prev',
+  'next',
+  'complete',
+  'note',
+  'bad-action',
+  'bad-locale',
+  'bad-payload',
+  'bad-sessionid',
+  'malformed-action',
+  'session-expired',
+  'xCard',
+  'vCard',
+  'VERSION',
+  'FN',
+  'N',
+  'FAMILY',
+  'GIVEN',
+  'MIDDLE',
+  'PREFIX',
+  'SUFFIX',
+  'NICKNAME',
+  'PHOTO',
+  'BDAY',
+  'ADR',
+  'POBOX',
+  'EXTADD',
+  'STREET',
+  'LOCALITY',
+  'REGION',
+  'PCODE',
+  'CTRY',
+  'LABEL',
+  'LINE',
+  'TEL',
+  'NUMBER',
+  'EMAIL',
+  'USERID',
+  'JABBERID',
+  'MAILER',
+  'TZ',
+  'GEO',
+  'LAT',
+  'LON',
+  'TITLE',
+  'ROLE',
+  'LOGO',
+  'AGENT',
+  'ORG',
+  'ORGNAME',
+  'ORGUNIT',
+  'CATEGORIES',
+  'KEYWORD',
+  'NOTE',
+  'PRODID',
+  'REV',
+  'SORT-STRING',
+  'SOUND',
+  'PHONETIC',
+  'UID',
+  'URL',
+  'DESC',
+  'CLASS',
+  'PUBLIC',
+  'PRIVATE',
+  'CONFIDENTIAL',
+  'KEY',
+  'CRED',
+  'HOME',
+  'WORK',
+  'POSTAL',
+  'PARCEL',
+  'DOM',
+  'INTL',
+  'PREF',
+  'VOICE',
+  'FAX',
+  'PAGER',
+  'MSG',
+  'CELL',
+  'VIDEO',
+  'BBS',
+  'MODEM',
+  'ISDN',
+  'PCS',
+  'INTERNET',
+  'X400',
+  'TYPE',
+  'BINVAL',
+  'EXTVAL',
+  'first',
+  'last',
+  'email',
+  'set',
+  'after',
+  'before',
+  'count',
+  'index',
+  'max',
+  'pubsub',
+  'affiliations',
+  'affiliation',
+  'configure',
+  'create',
+  'items',
+  'options',
+  'publish',
+  'retract',
+  'subscribe-options',
+  'subscribe',
+  'subscriptions',
+  'subscription',
+  'unsubscribe',
+  'closed-node',
+  'configuration-required',
+  'invalid-jid',
+  'invalid-options',
+  'invalid-payload',
+  'invalid-subid',
+  'item-forbidden',
+  'item-required',
+  'jid-required',
+  'max-items-exceeded',
+  'max-nodes-exceeded',
+  'nodeid-required',
+  'not-in-roster-group',
+  'not-subscribed',
+  'payload-too-big',
+  'payload-required',
+  'pending-subscription',
+  'presence-subscription-required',
+  'subid-required',
+  'unsupported',
+  'unsupported-access-model',
+  'event',
+  'collection',
+  'associate',
+  'disassociate',
+  'configuration',
+  'delete',
+  'purge',
+  'activate',
+  'streamhost',
+  'udpsuccess',
+  'streamhost-used',
+  'confirm',
+  'html',
+  'DataEncodingUnknown',
+  'MustUnderstand',
+  'Receiver',
+  'Sender',
+  'VersionMismatch',
+  'register',
+  'registered',
+  'username',
+  'city',
+  'state',
+  'zip',
+  'phone',
+  'date',
+  'misc',
+  'key',
+  'remove',
+  'digest',
+  'amp',
+  'invalid-rules',
+  'unsupported-actions',
+  'unsupported-conditions',
+  'rule',
+  'failed-rules',
+  'geoloc',
+  'alt',
+  'area',
+  'bearing',
+  'building',
+  'country',
+  'datum',
+  'description',
+  'floor',
+  'lat',
+  'locality',
+  'lon',
+  'postalcode',
+  'region',
+  'room',
+  'speed',
+  'street',
+  'timestamp',
+  'uri',
+  'roster',
+  'metadata',
+  'stop',
+  'info',
+  'pointer',
+  'inactive',
+  'paused',
+  'utc',
+  'tz',
+  'display',
+  'version',
+  'os',
+  'si',
+  'bad-profile',
+  'no-valid-streams',
+  'file',
+  'range',
+  'prompt',
+  'mood',
+  'afraid',
+  'amazed',
+  'angry',
+  'annoyed',
+  'anxious',
+  'aroused',
+  'ashamed',
+  'bored',
+  'brave',
+  'calm',
+  'cold',
+  'confused',
+  'contented',
+  'cranky',
+  'curious',
+  'depressed',
+  'disappointed',
+  'disgusted',
+  'distracted',
+  'embarrassed',
+  'excited',
+  'flirtatious',
+  'frustrated',
+  'grumpy',
+  'guilty',
+  'happy',
+  'hot',
+  'humbled',
+  'humiliated',
+  'hungry',
+  'hurt',
+  'impressed',
+  'in_awe',
+  'in_love',
+  'indignant',
+  'interested',
+  'intoxicated',
+  'invincible',
+  'jealous',
+  'lonely',
+  'mean',
+  'moody',
+  'nervous',
+  'neutral',
+  'offended',
+  'playful',
+  'proud',
+  'relieved',
+  'remorseful',
+  'restless',
+  'sad',
+  'sarcastic',
+  'serious',
+  'shocked',
+  'shy',
+  'sick',
+  'sleepy',
+  'stressed',
+  'surprised',
+  'thirsty',
+  'worried',
+  'activity',
+  'doing_chores',
+  'drinking',
+  'eating',
+  'exercising',
+  'grooming',
+  'having_appointment',
+  'relaxing',
+  'talking',
+  'traveling',
+  'working',
+  'at_the_spa',
+  'brushing_teeth',
+  'buying_groceries',
+  'cleaning',
+  'coding',
+  'commuting',
+  'cooking',
+  'cycling',
+  'day_off',
+  'doing_maintenance',
+  'doing_the_dishes',
+  'doing_the_laundry',
+  'driving',
+  'gaming',
+  'gardening',
+  'getting_a_haircut',
+  'going_out',
+  'hanging_out',
+  'having_a_beer',
+  'having_a_snack',
+  'having_breakfast',
+  'having_coffee',
+  'having_dinner',
+  'having_lunch',
+  'having_tea',
+  'hiking',
+  'in_a_car',
+  'in_a_meeting',
+  'in_real_life',
+  'jogging',
+  'on_a_bus',
+  'on_a_plane',
+  'on_a_train',
+  'on_a_trip',
+  'on_the_phone',
+  'on_vacation',
+  'on_video_phone',
+  'other',
+  'partying',
+  'playing_sports',
+  'reading',
+  'rehearsing',
+  'running',
+  'running_an_errand',
+  'scheduled_holiday',
+  'shaving',
+  'shopping',
+  'skiing',
+  'sleeping',
+  'socializing',
+  'studying',
+  'sunbathing',
+  'swimming',
+  'taking_a_bath',
+  'taking_a_shower',
+  'walking',
+  'walking_the_dog',
+  'watching_tv',
+  'watching_a_movie',
+  'working_out',
+  'writing',
+  'handshake',
+  'c',
+  'tune',
+  'artist',
+  'length',
+  'rating',
+  'source',
+  'track',
+  'validate',
+  'basic',
+  'regex',
+  'list-range',
+  'waitlist',
+  'headers',
+  'header',
+  'auto',
+  'changed',
+  'chat',
+  'from',
+  'previous',
+  'to',
+  'optional',
+  'method',
+  'modified',
+  'pref',
+  'itemremove',
+  'removed',
+  'retrieve',
+  'save',
+  'sipub',
+  'start',
+  'starting',
+  'compression',
+  'compress',
+  'compressed',
+  'setup-failed',
+  'processing-failed',
+  'unsupported-method',
+  'page',
+  'section',
+  'fieldref',
+  'reportedref',
+  'photo',
+  'profile',
+  'abuse',
+  'condition',
+  'gateway',
+  'muc',
+  'service',
+  'spam',
+  'stanza-too-big',
+  'too-many-recipients',
+  'too-many-stanzas',
+  'unacceptable-payload',
+  'unacceptable-text',
+  'undefined-abuse',
+  'stanzas',
+  'jingle',
+  'alternative-session',
+  'busy',
+  'connectivity-error',
+  'general-error',
+  'invalid-credentials',
+  'media-error',
+  'no-error',
+  'unsupported-applications',
+  'unsupported-transports',
+  'sid',
+  'out-of-order',
+  'unknown-session',
+  'unsupported-info',
+  'payload-type',
+  'crypto',
+  'parameter',
+  'hold',
+  'mute',
+  'ringing',
+  'rap',
+  'primary',
+  'route',
+  'translation',
+  'transport',
+  'candidate',
+  'received',
+  'trying',
+  'dtmf',
+  'request',
+  'invisible',
+  'visible',
+  'pubkeys',
+  'fprint',
+  'block',
+  'unblock',
+  'blocklist',
+  'blocked',
+  'dialback',
+  'unbind',
+  'topic',
+  'keywords',
+  'game',
+  'character_name',
+  'character_profile',
+  'level',
+  'server_address',
+  'server_name',
+  'author',
+  'cast',
+  'channel_name',
+  'duration',
+  'end_time',
+  'episode',
+  'program_name',
+  'program_type',
+  'start_time',
+  'subprogram_type',
+  'user_comment',
+  'user_rating',
+  'ack',
+  'enable',
+  'enabled',
+  'r',
+  'a',
+  'ping',
+  'pong',
+  'time',
+  'tzo',
+  'delay',
+  'metacontacts',
+  'meta',
+  'services',
+  'media',
+  'attention',
+  'hostname',
+  'server-data',
+  'host',
+  'user',
+  'offline-messages',
+  'offer',
+  'token',
+  'token-required',
+  'roster-sequencing',
+  'iodata',
+  'in',
+  'out',
+  'elapsed',
+  'remaining',
+  'percentage',
+  'information',
+  '$end_of_table'
+]).
diff -r d551623afde5 deps/exmpp/include/internal/exmpp_known_elems.hrl.awk
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/internal/exmpp_known_elems.hrl.awk	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,16 @@
+/^# Generated by/ {
+	print "% " $0 "\n";
+	print "-define(XMPP_KNOWN_ELEMS, [";
+}
+
+/^[^#]/ {
+	if (!already_processed[$1]) {
+		print "  '" $1 "',";
+		already_processed[$1] = 1;
+	}
+}
+
+END {
+	print "  '$end_of_table'";
+	print "]).";
+}
diff -r d551623afde5 deps/exmpp/include/internal/exmpp_known_elems.hrl.js
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/internal/exmpp_known_elems.hrl.js	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,34 @@
+var fso, fd, line, re_start, re, dict;
+
+if (WScript.Arguments.length != 1) {
+	WScript.Echo("Syntax: cscript " +
+	    "exmpp_known_elems.hrl.js <exmpp_known_elems.in>");
+} else {
+	/* Open the input file for reading (1). */
+	fso = new ActiveXObject("Scripting.FileSystemObject");
+	fd = fso.OpenTextFile(WScript.Arguments.Item(0), 1, false);
+
+	/* This regexp filters out comments. */
+	re_start = /^# Generated by/;
+	re = /^[^#]/;
+
+	/* We need a dictionnary to filter out duplicates. */
+	dict = new ActiveXObject("Scripting.Dictionary");
+
+	while (!fd.AtEndOfStream) {
+		line = fd.ReadLine();
+		if (line.match(re_start)) {
+			WScript.Echo("% " + line + "\n");
+			WScript.Echo("-define(XMPP_KNOWN_ELEMS, [");
+		}
+		if (!dict.Exists(line) && line.match(re)) {
+			WScript.Echo("  '" + line + "',");
+			dict.Add(line, 1);
+		}
+	}
+	WScript.Echo("  '$end_of_table'");
+	WScript.Echo("]).");
+
+	/* Done! */
+	fd.close();
+}
diff -r d551623afde5 deps/exmpp/include/internal/exmpp_known_elems.in
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/internal/exmpp_known_elems.in	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,1972 @@
+# Generated by extract-known-from-specs r560 on 2008-08-01T09:50:15Z
+# vim:ft=conf:
+
+# --------------------------------------------------------------------
+# XEP:		RFC 3920
+# NAME:		XMPP Core
+# URL:		http://www.xmpp.org/rfcs/rfc3920.html
+
+# http://etherx.jabber.org/streams
+stream
+features
+error
+
+# jabber:server:dialback
+result
+verify
+
+# urn:ietf:params:xml:ns:xmpp-bind
+bind
+resource
+jid
+
+# urn:ietf:params:xml:ns:xmpp-sasl
+mechanisms
+mechanism
+auth
+challenge
+response
+abort
+success
+failure
+aborted
+incorrect-encoding
+invalid-authzid
+invalid-mechanism
+mechanism-too-weak
+not-authorized
+temporary-auth-failure
+
+# urn:ietf:params:xml:ns:xmpp-stanzas
+bad-request
+conflict
+feature-not-implemented
+forbidden
+gone
+internal-server-error
+item-not-found
+jid-malformed
+not-acceptable
+not-allowed
+payment-required
+recipient-unavailable
+redirect
+registration-required
+remote-server-not-found
+remote-server-timeout
+resource-constraint
+service-unavailable
+subscription-required
+undefined-condition
+unexpected-request
+text
+
+# urn:ietf:params:xml:ns:xmpp-streams
+bad-format
+bad-namespace-prefix
+conflict
+connection-timeout
+host-gone
+host-unknown
+improper-addressing
+internal-server-error
+invalid-from
+invalid-id
+invalid-namespace
+invalid-xml
+not-authorized
+policy-violation
+remote-connection-failed
+resource-constraint
+restricted-xml
+see-other-host
+system-shutdown
+undefined-condition
+unsupported-encoding
+unsupported-stanza-type
+unsupported-version
+xml-not-well-formed
+text
+
+# urn:ietf:params:xml:ns:xmpp-tls
+starttls
+proceed
+failure
+
+# --------------------------------------------------------------------
+# XEP:		RFC 3921
+# NAME:		XMPP Instant Messaging and Presence
+# URL:		http://www.xmpp.org/rfcs/rfc3921.html
+
+# jabber:client
+message
+body
+subject
+thread
+presence
+show
+status
+priority
+iq
+error
+
+# jabber:iq:privacy
+query
+active
+default
+list
+item
+iq
+message
+presence-in
+presence-out
+
+# jabber:iq:roster
+query
+item
+group
+
+# jabber:server
+message
+body
+subject
+thread
+presence
+show
+status
+priority
+iq
+error
+
+# urn:ietf:params:xml:ns:xmpp-session
+session
+
+# --------------------------------------------------------------------
+# XEP:		RFC 3923
+# NAME:		XMPP End-to-End Signing and Object Encryption
+# URL:		http://www.xmpp.org/rfcs/rfc3923.html
+
+# urn:ietf:params:xml:ns:xmpp-e2e
+e2e
+decryption-failed
+signature-unverified
+bad-timestamp
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0003
+# NAME:		Proxy Accept Socket Service (PASS)
+# URL:		http://www.xmpp.org/extensions/xep-0003.html
+# STATUS:	Deprecated
+# TYPE:		Historical
+# DATE:		2007-01-17
+
+# jabber:iq:pass
+query
+client
+close
+expire
+oneshot
+proxy
+server
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0004
+# NAME:		Data Forms
+# URL:		http://www.xmpp.org/extensions/xep-0004.html
+# STATUS:	Final
+# TYPE:		Standards Track
+# DATE:		2007-08-13
+
+# jabber:x:data
+x
+instructions
+title
+field
+desc
+required
+option
+value
+reported
+item
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0009
+# NAME:		Jabber-RPC
+# URL:		http://www.xmpp.org/extensions/xep-0009.html
+# STATUS:	Final
+# TYPE:		Standards Track
+# DATE:		2006-02-09
+
+# jabber:iq:rpc
+query
+methodCall
+methodName
+params
+param
+methodResponse
+fault
+value
+struct
+member
+i4
+int
+string
+double
+Base64
+boolean
+dateTime.iso8601
+array
+name
+data
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0011
+# NAME:		Jabber Browsing
+# URL:		http://www.xmpp.org/extensions/xep-0011.html
+# STATUS:	Deprecated
+# TYPE:		Historical
+# DATE:		2004-11-12
+
+# jabber:iq:browse
+query
+item
+ns
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0012
+# NAME:		Last Activity
+# URL:		http://www.xmpp.org/extensions/xep-0012.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-07-16
+
+# jabber:iq:last
+query
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0013
+# NAME:		Flexible Offline Message Retrieval
+# URL:		http://www.xmpp.org/extensions/xep-0013.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-07-14
+
+# http://jabber.org/protocol/offline
+offline
+item
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0016
+# NAME:		Privacy Lists
+# URL:		http://www.xmpp.org/extensions/xep-0016.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-02-15
+
+# jabber:iq:privacy
+query
+active
+default
+list
+item
+iq
+message
+presence-in
+presence-out
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0020
+# NAME:		Feature Negotiation
+# URL:		http://www.xmpp.org/extensions/xep-0020.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2006-11-21
+
+# http://jabber.org/protocol/feature-neg
+feature
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0022
+# NAME:		Message Events
+# URL:		http://www.xmpp.org/extensions/xep-0022.html
+# STATUS:	Deprecated
+# TYPE:		Historical
+# DATE:		2007-09-26
+
+# jabber:x:event
+x
+offline
+delivered
+displayed
+composing
+id
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0023
+# NAME:		Message Expiration
+# URL:		http://www.xmpp.org/extensions/xep-0023.html
+# STATUS:	Deprecated
+# TYPE:		Historical
+# DATE:		2004-10-18
+
+# jabber:x:expire
+x
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0027
+# NAME:		Current Jabber OpenPGP Usage
+# URL:		http://www.xmpp.org/extensions/xep-0027.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2006-11-29
+
+# jabber:x:encrypted
+x
+
+# jabber:x:signed
+x
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0030
+# NAME:		Service Discovery
+# URL:		http://www.xmpp.org/extensions/xep-0030.html
+# STATUS:	Final
+# TYPE:		Standards Track
+# DATE:		2008-06-06
+
+# http://jabber.org/protocol/disco#info
+query
+identity
+feature
+
+# http://jabber.org/protocol/disco#items
+query
+item
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0033
+# NAME:		Extended Stanza Addressing
+# URL:		http://www.xmpp.org/extensions/xep-0033.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2004-09-16
+
+# http://jabber.org/protocol/address
+addresses
+address
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0045
+# NAME:		Multi-User Chat
+# URL:		http://www.xmpp.org/extensions/xep-0045.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-07-16
+
+# http://jabber.org/protocol/muc
+x
+password
+history
+
+# http://jabber.org/protocol/muc#admin
+query
+item
+actor
+reason
+
+# http://jabber.org/protocol/muc#owner
+query
+destroy
+password
+reason
+
+# http://jabber.org/protocol/muc#unique
+unique
+
+# http://jabber.org/protocol/muc#user
+x
+password
+decline
+destroy
+invite
+item
+actor
+continue
+status
+reason
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0047
+# NAME:		In-Band Bytestreams (IBB)
+# URL:		http://www.xmpp.org/extensions/xep-0047.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2006-11-29
+
+# http://jabber.org/protocol/ibb
+open
+close
+data
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0048
+# NAME:		Bookmarks
+# URL:		http://www.xmpp.org/extensions/xep-0048.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-11-07
+
+# storage:bookmarks
+storage
+conference
+nick
+password
+url
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0049
+# NAME:		Private XML Storage
+# URL:		http://www.xmpp.org/extensions/xep-0049.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2004-03-01
+
+# jabber:iq:private
+query
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0050
+# NAME:		Ad-Hoc Commands
+# URL:		http://www.xmpp.org/extensions/xep-0050.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-06-30
+
+# http://jabber.org/protocol/commands
+command
+actions
+prev
+next
+complete
+note
+bad-action
+bad-locale
+bad-payload
+bad-sessionid
+malformed-action
+session-expired
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0054
+# NAME:		vcard-temp
+# URL:		http://www.xmpp.org/extensions/xep-0054.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2008-07-16
+
+# vcard-temp
+xCard
+vCard
+VERSION
+FN
+N
+FAMILY
+GIVEN
+MIDDLE
+PREFIX
+SUFFIX
+NICKNAME
+PHOTO
+BDAY
+ADR
+POBOX
+EXTADD
+STREET
+LOCALITY
+REGION
+PCODE
+CTRY
+LABEL
+LINE
+TEL
+NUMBER
+EMAIL
+USERID
+JABBERID
+MAILER
+TZ
+GEO
+LAT
+LON
+TITLE
+ROLE
+LOGO
+AGENT
+ORG
+ORGNAME
+ORGUNIT
+CATEGORIES
+KEYWORD
+NOTE
+PRODID
+REV
+SORT-STRING
+SOUND
+PHONETIC
+UID
+URL
+DESC
+CLASS
+PUBLIC
+PRIVATE
+CONFIDENTIAL
+KEY
+CRED
+HOME
+WORK
+POSTAL
+PARCEL
+DOM
+INTL
+PREF
+VOICE
+FAX
+PAGER
+MSG
+CELL
+VIDEO
+BBS
+MODEM
+ISDN
+PCS
+INTERNET
+X400
+TYPE
+BINVAL
+EXTVAL
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0055
+# NAME:		Jabber Search
+# URL:		http://www.xmpp.org/extensions/xep-0055.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2004-03-22
+
+# jabber:iq:search
+query
+instructions
+first
+last
+nick
+email
+item
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0059
+# NAME:		Result Set Management
+# URL:		http://www.xmpp.org/extensions/xep-0059.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2006-09-20
+
+# http://jabber.org/protocol/rsm
+set
+after
+before
+count
+index
+last
+max
+first
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0060
+# NAME:		Publish-Subscribe
+# URL:		http://www.xmpp.org/extensions/xep-0060.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-03-05
+
+# http://jabber.org/protocol/pubsub
+pubsub
+affiliations
+affiliation
+configure
+create
+items
+item
+options
+publish
+retract
+subscribe-options
+required
+subscribe
+subscriptions
+subscription
+unsubscribe
+
+# http://jabber.org/protocol/pubsub#errors
+closed-node
+configuration-required
+invalid-jid
+invalid-options
+invalid-payload
+invalid-subid
+item-forbidden
+item-required
+jid-required
+max-items-exceeded
+max-nodes-exceeded
+nodeid-required
+not-in-roster-group
+not-subscribed
+payload-too-big
+payload-required
+pending-subscription
+presence-subscription-required
+subid-required
+unsupported
+unsupported-access-model
+
+# http://jabber.org/protocol/pubsub#event
+event
+collection
+associate
+disassociate
+configuration
+delete
+items
+item
+purge
+retract
+subscription
+
+# http://jabber.org/protocol/pubsub#owner
+pubsub
+affiliations
+affiliation
+configure
+default
+delete
+purge
+subscriptions
+subscription
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0065
+# NAME:		SOCKS5 Bytestreams
+# URL:		http://www.xmpp.org/extensions/xep-0065.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-05-21
+
+# http://jabber.org/protocol/bytestreams
+query
+activate
+streamhost
+udpsuccess
+streamhost-used
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0066
+# NAME:		Out of Band Data
+# URL:		http://www.xmpp.org/extensions/xep-0066.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2006-08-16
+
+# jabber:iq:oob
+query
+url
+desc
+
+# jabber:x:oob
+x
+url
+desc
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0070
+# NAME:		Verifying HTTP Requests via XMPP
+# URL:		http://www.xmpp.org/extensions/xep-0070.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-12-14
+
+# http://jabber.org/protocol/http-auth
+confirm
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0071
+# NAME:		XHTML-IM
+# URL:		http://www.xmpp.org/extensions/xep-0071.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-08-29
+
+# http://jabber.org/protocol/xhtml-im
+html
+
+# http://www.w3.org/1999/xhtml
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0072
+# NAME:		SOAP Over XMPP
+# URL:		http://www.xmpp.org/extensions/xep-0072.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-12-14
+
+# http://jabber.org/protocol/soap#fault
+DataEncodingUnknown
+MustUnderstand
+Receiver
+Sender
+VersionMismatch
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0077
+# NAME:		In-Band Registration
+# URL:		http://www.xmpp.org/extensions/xep-0077.html
+# STATUS:	Final
+# TYPE:		Standards Track
+# DATE:		2006-01-24
+
+# http://jabber.org/features/iq-register
+register
+
+# jabber:iq:register
+query
+registered
+instructions
+username
+nick
+password
+name
+first
+last
+email
+address
+city
+state
+zip
+phone
+url
+date
+misc
+text
+key
+remove
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0078
+# NAME:		Non-SASL Authentication
+# URL:		http://www.xmpp.org/extensions/xep-0078.html
+# STATUS:	Deprecated
+# TYPE:		Standards Track
+# DATE:		2008-01-30
+
+# http://jabber.org/features/iq-auth
+auth
+
+# jabber:iq:auth
+query
+username
+password
+digest
+resource
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0079
+# NAME:		Advanced Message Processing
+# URL:		http://www.xmpp.org/extensions/xep-0079.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-11-30
+
+# http://jabber.org/features/amp
+amp
+
+# http://jabber.org/protocol/amp
+amp
+invalid-rules
+unsupported-actions
+unsupported-conditions
+rule
+
+# http://jabber.org/protocol/amp#errors
+failed-rules
+rule
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0080
+# NAME:		User Location
+# URL:		http://www.xmpp.org/extensions/xep-0080.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-01-30
+
+# http://jabber.org/protocol/geoloc
+geoloc
+alt
+area
+bearing
+building
+country
+datum
+description
+error
+floor
+lat
+locality
+lon
+postalcode
+region
+room
+speed
+street
+text
+timestamp
+uri
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0083
+# NAME:		Nested Roster Groups
+# URL:		http://www.xmpp.org/extensions/xep-0083.html
+# STATUS:	Active
+# TYPE:		Informational
+# DATE:		2004-10-11
+
+# roster:delimiter
+roster
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0084
+# NAME:		User Avatar
+# URL:		http://www.xmpp.org/extensions/xep-0084.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-11-07
+
+# urn:xmpp:avatar:metadata
+data
+metadata
+stop
+info
+pointer
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0085
+# NAME:		Chat State Notifications
+# URL:		http://www.xmpp.org/extensions/xep-0085.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2006-07-12
+
+# http://jabber.org/protocol/chatstates
+active
+composing
+gone
+inactive
+paused
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0090
+# NAME:		Entity Time
+# URL:		http://www.xmpp.org/extensions/xep-0090.html
+# STATUS:	Deprecated
+# TYPE:		Historical
+# DATE:		2007-03-28
+
+# jabber:iq:time
+query
+utc
+tz
+display
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0091
+# NAME:		Delayed Delivery
+# URL:		http://www.xmpp.org/extensions/xep-0091.html
+# STATUS:	Deprecated
+# TYPE:		Historical
+# DATE:		2007-03-29
+
+# jabber:x:delay
+x
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0092
+# NAME:		Software Version
+# URL:		http://www.xmpp.org/extensions/xep-0092.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-02-16
+
+# jabber:iq:version
+query
+name
+version
+os
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0093
+# NAME:		Roster Item Exchange
+# URL:		http://www.xmpp.org/extensions/xep-0093.html
+# STATUS:	Deprecated
+# TYPE:		Historical
+# DATE:		2005-08-26
+
+# jabber:x:roster
+x
+item
+group
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0095
+# NAME:		Stream Initiation
+# URL:		http://www.xmpp.org/extensions/xep-0095.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2004-04-13
+
+# http://jabber.org/protocol/si
+si
+bad-profile
+no-valid-streams
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0096
+# NAME:		File Transfer
+# URL:		http://www.xmpp.org/extensions/xep-0096.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2004-04-13
+
+# http://jabber.org/protocol/si/profile/file-transfer
+file
+desc
+range
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0100
+# NAME:		Gateway Interaction
+# URL:		http://www.xmpp.org/extensions/xep-0100.html
+# STATUS:	Active
+# TYPE:		Informational
+# DATE:		2005-10-05
+
+# jabber:iq:gateway
+query
+desc
+prompt
+jid
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0107
+# NAME:		User Mood
+# URL:		http://www.xmpp.org/extensions/xep-0107.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-06-04
+
+# http://jabber.org/protocol/mood
+mood
+afraid
+amazed
+angry
+annoyed
+anxious
+aroused
+ashamed
+bored
+brave
+calm
+cold
+confused
+contented
+cranky
+curious
+depressed
+disappointed
+disgusted
+distracted
+embarrassed
+excited
+flirtatious
+frustrated
+grumpy
+guilty
+happy
+hot
+humbled
+humiliated
+hungry
+hurt
+impressed
+in_awe
+in_love
+indignant
+interested
+intoxicated
+invincible
+jealous
+lonely
+mean
+moody
+nervous
+neutral
+offended
+playful
+proud
+relieved
+remorseful
+restless
+sad
+sarcastic
+serious
+shocked
+shy
+sick
+sleepy
+stressed
+surprised
+thirsty
+worried
+text
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0108
+# NAME:		User Activity
+# URL:		http://www.xmpp.org/extensions/xep-0108.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-07-11
+
+# http://jabber.org/protocol/activity
+activity
+doing_chores
+drinking
+eating
+exercising
+grooming
+having_appointment
+inactive
+relaxing
+talking
+traveling
+working
+text
+at_the_spa
+brushing_teeth
+buying_groceries
+cleaning
+coding
+commuting
+cooking
+cycling
+day_off
+doing_maintenance
+doing_the_dishes
+doing_the_laundry
+driving
+gaming
+gardening
+getting_a_haircut
+going_out
+hanging_out
+having_a_beer
+having_a_snack
+having_breakfast
+having_coffee
+having_dinner
+having_lunch
+having_tea
+hiking
+in_a_car
+in_a_meeting
+in_real_life
+jogging
+on_a_bus
+on_a_plane
+on_a_train
+on_a_trip
+on_the_phone
+on_vacation
+on_video_phone
+other
+partying
+playing_sports
+reading
+rehearsing
+running
+running_an_errand
+scheduled_holiday
+shaving
+shopping
+skiing
+sleeping
+socializing
+studying
+sunbathing
+swimming
+taking_a_bath
+taking_a_shower
+walking
+walking_the_dog
+watching_tv
+watching_a_movie
+working_out
+writing
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0114
+# NAME:		Jabber Component Protocol
+# URL:		http://www.xmpp.org/extensions/xep-0114.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2005-03-03
+
+# jabber:component:accept
+handshake
+message
+body
+subject
+thread
+presence
+show
+status
+priority
+iq
+error
+
+# jabber:component:connect
+handshake
+message
+body
+subject
+thread
+presence
+show
+status
+priority
+iq
+error
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0115
+# NAME:		Entity Capabilities
+# URL:		http://www.xmpp.org/extensions/xep-0115.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-02-25
+
+# http://jabber.org/protocol/caps
+c
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0118
+# NAME:		User Tune
+# URL:		http://www.xmpp.org/extensions/xep-0118.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-01-30
+
+# http://jabber.org/protocol/tune
+tune
+artist
+length
+rating
+source
+title
+track
+uri
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0122
+# NAME:		Data Forms Validation
+# URL:		http://www.xmpp.org/extensions/xep-0122.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2004-09-22
+
+# http://jabber.org/protocol/xdata-validate
+validate
+basic
+open
+range
+regex
+list-range
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0124
+# NAME:		Bidirectional-streams Over Synchronous HTTP (BOSH)
+# URL:		http://www.xmpp.org/extensions/xep-0124.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-02-28
+
+# http://jabber.org/protocol/httpbind
+body
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0130
+# NAME:		Waiting Lists
+# URL:		http://www.xmpp.org/extensions/xep-0130.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2006-09-13
+
+# http://jabber.org/protocol/waitinglist
+waitlist
+query
+item
+uri
+name
+remove
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0131
+# NAME:		Stanza Headers and Internet Metadata (SHIM)
+# URL:		http://www.xmpp.org/extensions/xep-0131.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2006-07-12
+
+# http://jabber.org/protocol/shim
+headers
+header
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0136
+# NAME:		Message Archiving
+# URL:		http://www.xmpp.org/extensions/xep-0136.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-07-16
+
+# urn:xmpp:archive
+auto
+changed
+chat
+from
+next
+previous
+to
+body
+default
+feature
+optional
+item
+list
+method
+modified
+note
+pref
+itemremove
+remove
+removed
+retrieve
+save
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0137
+# NAME:		Publishing SI Requests
+# URL:		http://www.xmpp.org/extensions/xep-0137.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-08-26
+
+# http://jabber.org/protocol/sipub
+sipub
+start
+starting
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0138
+# NAME:		Stream Compression
+# URL:		http://www.xmpp.org/extensions/xep-0138.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-09-26
+
+# http://jabber.org/features/compress
+compression
+method
+
+# http://jabber.org/protocol/compress
+compress
+method
+compressed
+failure
+setup-failed
+processing-failed
+unsupported-method
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0141
+# NAME:		Data Forms Layout
+# URL:		http://www.xmpp.org/extensions/xep-0141.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-05-12
+
+# http://jabber.org/protocol/xdata-layout
+page
+section
+fieldref
+reportedref
+text
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0144
+# NAME:		Roster Item Exchange
+# URL:		http://www.xmpp.org/extensions/xep-0144.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-08-26
+
+# http://jabber.org/protocol/rosterx
+x
+item
+group
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0145
+# NAME:		Annotations
+# URL:		http://www.xmpp.org/extensions/xep-0145.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2006-03-23
+
+# storage:rosternotes
+storage
+note
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0153
+# NAME:		vCard-Based Avatars
+# URL:		http://www.xmpp.org/extensions/xep-0153.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2006-08-16
+
+# vcard-temp:x:update
+x
+photo
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0154
+# NAME:		User Profile
+# URL:		http://www.xmpp.org/extensions/xep-0154.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-04-18
+
+# urn:xmpp:tmp:profile
+profile
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0158
+# NAME:		Robot Challenges
+# URL:		http://www.xmpp.org/extensions/xep-0158.html
+# STATUS:	Proposed
+# TYPE:		Standards Track
+# DATE:		2008-05-12
+
+# urn:xmpp:tmp:challenge
+challenge
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0161
+# NAME:		Abuse Reporting
+# URL:		http://www.xmpp.org/extensions/xep-0161.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-05-06
+
+# urn:xmpp:tmp:abuse
+abuse
+condition
+gateway
+muc
+proxy
+pubsub
+service
+spam
+stanza-too-big
+too-many-recipients
+too-many-stanzas
+unacceptable-payload
+unacceptable-text
+undefined-abuse
+stanzas
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0166
+# NAME:		Jingle
+# URL:		http://www.xmpp.org/extensions/xep-0166.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-07-31
+
+# urn:xmpp:tmp:jingle
+jingle
+alternative-session
+busy
+connectivity-error
+decline
+general-error
+invalid-credentials
+media-error
+no-error
+success
+unsupported-applications
+unsupported-transports
+sid
+text
+
+# urn:xmpp:tmp:jingle:errors
+out-of-order
+unknown-session
+unsupported-info
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0167
+# NAME:		Jingle RTP Sessions
+# URL:		http://www.xmpp.org/extensions/xep-0167.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-07-31
+
+# urn:xmpp:tmp:jingle:apps:rtp
+description
+payload-type
+crypto
+parameter
+
+# urn:xmpp:tmp:jingle:apps:rtp:info
+active
+hold
+mute
+ringing
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0168
+# NAME:		Resource Application Priority
+# URL:		http://www.xmpp.org/extensions/xep-0168.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-01-23
+
+# http://www.xmpp.org/extensions/xep-0168.html#ns
+rap
+primary
+
+# http://www.xmpp.org/extensions/xep-0168.html#ns-route
+route
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0171
+# NAME:		Language Translation
+# URL:		http://www.xmpp.org/extensions/xep-0171.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-05-09
+
+# urn:xmpp:langtrans
+x
+source
+translation
+
+# urn:xmpp:langtrans#items
+query
+item
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0172
+# NAME:		User Nickname
+# URL:		http://www.xmpp.org/extensions/xep-0172.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2006-06-05
+
+# http://jabber.org/protocol/nick
+nick
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0176
+# NAME:		Jingle ICE-UDP Transport Method
+# URL:		http://www.xmpp.org/extensions/xep-0176.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-07-31
+
+# urn:xmpp:tmp:jingle:transports:ice-udp
+transport
+candidate
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0177
+# NAME:		Jingle Raw UDP Transport Method
+# URL:		http://www.xmpp.org/extensions/xep-0177.html
+# STATUS:	Proposed
+# TYPE:		Standards Track
+# DATE:		2007-11-27
+
+# urn:xmpp:tmp:jingle:transports:raw-udp
+transport
+candidate
+
+# urn:xmpp:tmp:jingle:transports:raw-udp:info
+received
+trying
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0181
+# NAME:		Jingle DTMF
+# URL:		http://www.xmpp.org/extensions/xep-0181.html
+# STATUS:	Proposed
+# TYPE:		Standards Track
+# DATE:		2008-05-30
+
+# urn:xmpp:tmp:jingle:dtmf
+dtmf
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0184
+# NAME:		Message Receipts
+# URL:		http://www.xmpp.org/extensions/xep-0184.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-09-26
+
+# urn:xmpp:receipts
+received
+request
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0186
+# NAME:		Invisible Command
+# URL:		http://www.xmpp.org/extensions/xep-0186.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-05-12
+
+# urn:xmpp:tmp:invisible
+invisible
+visible
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0189
+# NAME:		Public Key Publishing
+# URL:		http://www.xmpp.org/extensions/xep-0189.html
+# STATUS:	Proposed
+# TYPE:		Standards Track
+# DATE:		2008-03-05
+
+# urn:xmpp:tmp:pubkey
+pubkeys
+fprint
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0191
+# NAME:		Simple Communications Blocking
+# URL:		http://www.xmpp.org/extensions/xep-0191.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-02-15
+
+# urn:xmpp:blocking
+block
+unblock
+blocklist
+item
+
+# urn:xmpp:blocking:errors
+blocked
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0192
+# NAME:		Proposed Stream Feature Improvements
+# URL:		http://www.xmpp.org/extensions/xep-0192.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-01-17
+
+# urn:ietf:params:xml:ns:xmpp-bind
+bind
+resource
+jid
+required
+
+# urn:ietf:params:xml:ns:xmpp-sasl
+mechanisms
+mechanism
+required
+auth
+challenge
+response
+abort
+success
+failure
+aborted
+incorrect-encoding
+invalid-authzid
+invalid-mechanism
+mechanism-too-weak
+not-authorized
+temporary-auth-failure
+
+# urn:xmpp:features:dialback
+dialback
+required
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0193
+# NAME:		Proposed Resource Binding Improvements
+# URL:		http://www.xmpp.org/extensions/xep-0193.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-01-17
+
+# urn:ietf:params:xml:ns:xmpp-bind
+bind
+resource
+jid
+required
+unbind
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0194
+# NAME:		User Chatting
+# URL:		http://www.xmpp.org/extensions/xep-0194.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-10-02
+
+# http://www.xmpp.org/extensions/xep-0194.html#ns
+room
+name
+topic
+uri
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0195
+# NAME:		User Browsing
+# URL:		http://www.xmpp.org/extensions/xep-0195.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-10-02
+
+# http://www.xmpp.org/extensions/xep-0195.html#ns
+page
+description
+keywords
+title
+uri
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0196
+# NAME:		User Gaming
+# URL:		http://www.xmpp.org/extensions/xep-0196.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-10-02
+
+# http://www.xmpp.org/extensions/xep-0196.html#ns
+game
+character_name
+character_profile
+level
+name
+server_address
+server_name
+uri
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0197
+# NAME:		User Viewing
+# URL:		http://www.xmpp.org/extensions/xep-0197.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-10-02
+
+# http://www.xmpp.org/extensions/xep-0197.html#ns
+room
+author
+cast
+channel_name
+description
+duration
+end_time
+episode
+program_name
+program_type
+start_time
+subprogram_type
+uri
+user_comment
+user_rating
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0198
+# NAME:		Stanza Acknowledgements
+# URL:		http://www.xmpp.org/extensions/xep-0198.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-10-03
+
+# http://www.xmpp.org/extensions/xep-0198.html#ns
+ack
+enable
+enabled
+r
+a
+ping
+pong
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0199
+# NAME:		XMPP Ping
+# URL:		http://www.xmpp.org/extensions/xep-0199.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-06-12
+
+# urn:xmpp:ping
+ping
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0202
+# NAME:		Entity Time
+# URL:		http://www.xmpp.org/extensions/xep-0202.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-03-28
+
+# urn:xmpp:time
+time
+tzo
+utc
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0203
+# NAME:		Delayed Delivery
+# URL:		http://www.xmpp.org/extensions/xep-0203.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-03-29
+
+# urn:xmpp:delay
+delay
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0206
+# NAME:		XMPP Over BOSH
+# URL:		http://www.xmpp.org/extensions/xep-0206.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-06-04
+
+# urn:xmpp:xbosh
+body
+uri
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0208
+# NAME:		Bootstrapping Implementation of Jingle
+# URL:		http://www.xmpp.org/extensions/xep-0208.html
+# STATUS:	Experimental
+# TYPE:		Informational
+# DATE:		2008-01-23
+
+# http://www.xmpp.org/extensions/xep-0208.html#ns
+description
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0209
+# NAME:		Metacontacts
+# URL:		http://www.xmpp.org/extensions/xep-0209.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-04-10
+
+# storage:metacontacts
+metacontacts
+meta
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0215
+# NAME:		External Service Discovery
+# URL:		http://www.xmpp.org/extensions/xep-0215.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-08-30
+
+# http://www.xmpp.org/extensions/xep-0215.html#ns
+services
+service
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0220
+# NAME:		Server Dialback
+# URL:		http://www.xmpp.org/extensions/xep-0220.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-06-18
+
+# jabber:server:dialback
+result
+verify
+
+# urn:xmpp:features:dialback
+dialback
+optional
+required
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0221
+# NAME:		Data Forms Media Element
+# URL:		http://www.xmpp.org/extensions/xep-0221.html
+# STATUS:	Proposed
+# TYPE:		Standards Track
+# DATE:		2008-06-18
+
+# urn:xmpp:tmp:media-element
+media
+uri
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0224
+# NAME:		Attention
+# URL:		http://www.xmpp.org/extensions/xep-0224.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-08-08
+
+# http://www.xmpp.org/extensions/xep-0224.html#ns
+attention
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0225
+# NAME:		Component Connections
+# URL:		http://www.xmpp.org/extensions/xep-0225.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-08-08
+
+# urn:xmpp:tmp:component
+bind
+hostname
+required
+unbind
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0227
+# NAME:		Portable Import/Export Format for XMPP-IM Servers
+# URL:		http://www.xmpp.org/extensions/xep-0227.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-12-13
+
+# http://www.xmpp.org/extensions/xep-0227.html#ns
+server-data
+host
+user
+offline-messages
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0231
+# NAME:		Data Element
+# URL:		http://www.xmpp.org/extensions/xep-0231.html
+# STATUS:	Proposed
+# TYPE:		Standards Track
+# DATE:		2008-06-18
+
+# urn:xmpp:tmp:data-element
+data
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0233
+# NAME:		Use of Domain-Based Service Names in XMPP SASL Negotiation
+# URL:		http://www.xmpp.org/extensions/xep-0233.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-01-30
+
+# urn:xmpp:tmp:domain-based-name
+hostname
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0234
+# NAME:		Jingle File Transfer
+# URL:		http://www.xmpp.org/extensions/xep-0234.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-06-05
+
+# urn:xmpp:tmp:jingle:apps:file-transfer
+description
+offer
+request
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0235
+# NAME:		Authorization Tokens
+# URL:		http://www.xmpp.org/extensions/xep-0235.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-03-31
+
+# urn:xmpp:tmp:auth-token
+token
+token-required
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0237
+# NAME:		Roster Sequencing
+# URL:		http://www.xmpp.org/extensions/xep-0237.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-04-21
+
+# jabber:iq:roster
+query
+item
+group
+
+# urn:xmpp:tmp:roster-sequencing
+roster-sequencing
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0244
+# NAME:		IO Data
+# URL:		http://www.xmpp.org/extensions/xep-0244.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-06-18
+
+# urn:xmpp:tmp:io-data
+iodata
+desc
+in
+out
+error
+status
+elapsed
+remaining
+percentage
+information
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0247
+# NAME:		Jingle XML Streams
+# URL:		http://www.xmpp.org/extensions/xep-0247.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-06-18
+
+# urn:xmpp:tmp:jingle:apps:xmlstream
+description
diff -r d551623afde5 deps/exmpp/include/internal/exmpp_known_nss.hrl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/internal/exmpp_known_nss.hrl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,136 @@
+% # Generated by extract-known-from-specs r560 on 2008-08-01T09:50:15Z
+
+-define(XMPP_KNOWN_NSS, [
+  'http://etherx.jabber.org/streams',
+  'jabber:server:dialback',
+  'urn:ietf:params:xml:ns:xmpp-bind',
+  'urn:ietf:params:xml:ns:xmpp-sasl',
+  'urn:ietf:params:xml:ns:xmpp-stanzas',
+  'urn:ietf:params:xml:ns:xmpp-streams',
+  'urn:ietf:params:xml:ns:xmpp-tls',
+  'jabber:client',
+  'jabber:iq:privacy',
+  'jabber:iq:roster',
+  'jabber:server',
+  'urn:ietf:params:xml:ns:xmpp-session',
+  'urn:ietf:params:xml:ns:xmpp-e2e',
+  'jabber:iq:pass',
+  'jabber:x:data',
+  'jabber:iq:rpc',
+  'jabber:iq:browse',
+  'jabber:iq:last',
+  'http://jabber.org/protocol/offline',
+  'http://jabber.org/protocol/feature-neg',
+  'jabber:x:event',
+  'jabber:x:expire',
+  'jabber:x:encrypted',
+  'jabber:x:signed',
+  'http://jabber.org/protocol/disco#info',
+  'http://jabber.org/protocol/disco#items',
+  'http://jabber.org/protocol/address',
+  'http://jabber.org/protocol/muc',
+  'http://jabber.org/protocol/muc#admin',
+  'http://jabber.org/protocol/muc#owner',
+  'http://jabber.org/protocol/muc#unique',
+  'http://jabber.org/protocol/muc#user',
+  'http://jabber.org/protocol/ibb',
+  'storage:bookmarks',
+  'jabber:iq:private',
+  'http://jabber.org/protocol/commands',
+  'vcard-temp',
+  'jabber:iq:search',
+  'http://jabber.org/protocol/rsm',
+  'http://jabber.org/protocol/pubsub',
+  'http://jabber.org/protocol/pubsub#errors',
+  'http://jabber.org/protocol/pubsub#event',
+  'http://jabber.org/protocol/pubsub#owner',
+  'http://jabber.org/protocol/bytestreams',
+  'jabber:iq:oob',
+  'jabber:x:oob',
+  'http://jabber.org/protocol/http-auth',
+  'http://jabber.org/protocol/xhtml-im',
+  'http://www.w3.org/1999/xhtml',
+  'http://jabber.org/protocol/soap#fault',
+  'http://jabber.org/features/iq-register',
+  'jabber:iq:register',
+  'http://jabber.org/features/iq-auth',
+  'jabber:iq:auth',
+  'http://jabber.org/features/amp',
+  'http://jabber.org/protocol/amp',
+  'http://jabber.org/protocol/amp#errors',
+  'http://jabber.org/protocol/geoloc',
+  'roster:delimiter',
+  'urn:xmpp:avatar:metadata',
+  'http://jabber.org/protocol/chatstates',
+  'jabber:iq:time',
+  'jabber:x:delay',
+  'jabber:iq:version',
+  'jabber:x:roster',
+  'http://jabber.org/protocol/si',
+  'http://jabber.org/protocol/si/profile/file-transfer',
+  'jabber:iq:gateway',
+  'http://jabber.org/protocol/mood',
+  'http://jabber.org/protocol/activity',
+  'jabber:component:accept',
+  'jabber:component:connect',
+  'http://jabber.org/protocol/caps',
+  'http://jabber.org/protocol/tune',
+  'http://jabber.org/protocol/xdata-validate',
+  'http://jabber.org/protocol/httpbind',
+  'http://jabber.org/protocol/waitinglist',
+  'http://jabber.org/protocol/shim',
+  'urn:xmpp:archive',
+  'http://jabber.org/protocol/sipub',
+  'http://jabber.org/features/compress',
+  'http://jabber.org/protocol/compress',
+  'http://jabber.org/protocol/xdata-layout',
+  'http://jabber.org/protocol/rosterx',
+  'storage:rosternotes',
+  'vcard-temp:x:update',
+  'urn:xmpp:tmp:profile',
+  'urn:xmpp:tmp:challenge',
+  'urn:xmpp:tmp:abuse',
+  'urn:xmpp:tmp:jingle',
+  'urn:xmpp:tmp:jingle:errors',
+  'urn:xmpp:tmp:jingle:apps:rtp',
+  'urn:xmpp:tmp:jingle:apps:rtp:info',
+  'http://www.xmpp.org/extensions/xep-0168.html#ns',
+  'http://www.xmpp.org/extensions/xep-0168.html#ns-route',
+  'urn:xmpp:langtrans',
+  'urn:xmpp:langtrans#items',
+  'http://jabber.org/protocol/nick',
+  'urn:xmpp:tmp:jingle:transports:ice-udp',
+  'urn:xmpp:tmp:jingle:transports:raw-udp',
+  'urn:xmpp:tmp:jingle:transports:raw-udp:info',
+  'urn:xmpp:tmp:jingle:dtmf',
+  'urn:xmpp:receipts',
+  'urn:xmpp:tmp:invisible',
+  'urn:xmpp:tmp:pubkey',
+  'urn:xmpp:blocking',
+  'urn:xmpp:blocking:errors',
+  'urn:xmpp:features:dialback',
+  'http://www.xmpp.org/extensions/xep-0194.html#ns',
+  'http://www.xmpp.org/extensions/xep-0195.html#ns',
+  'http://www.xmpp.org/extensions/xep-0196.html#ns',
+  'http://www.xmpp.org/extensions/xep-0197.html#ns',
+  'http://www.xmpp.org/extensions/xep-0198.html#ns',
+  'urn:xmpp:ping',
+  'urn:xmpp:time',
+  'urn:xmpp:delay',
+  'urn:xmpp:xbosh',
+  'http://www.xmpp.org/extensions/xep-0208.html#ns',
+  'storage:metacontacts',
+  'http://www.xmpp.org/extensions/xep-0215.html#ns',
+  'urn:xmpp:tmp:media-element',
+  'http://www.xmpp.org/extensions/xep-0224.html#ns',
+  'urn:xmpp:tmp:component',
+  'http://www.xmpp.org/extensions/xep-0227.html#ns',
+  'urn:xmpp:tmp:data-element',
+  'urn:xmpp:tmp:domain-based-name',
+  'urn:xmpp:tmp:jingle:apps:file-transfer',
+  'urn:xmpp:tmp:auth-token',
+  'urn:xmpp:tmp:roster-sequencing',
+  'urn:xmpp:tmp:io-data',
+  'urn:xmpp:tmp:jingle:apps:xmlstream',
+  '$end_of_table'
+]).
diff -r d551623afde5 deps/exmpp/include/internal/exmpp_known_nss.hrl.awk
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/internal/exmpp_known_nss.hrl.awk	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,16 @@
+/^# Generated by/ {
+	print "% " $0 "\n";
+	print "-define(XMPP_KNOWN_NSS, [";
+}
+
+/^[^#]/ {
+	if (!already_processed[$1]) {
+		print "  '" $1 "',";
+		already_processed[$1] = 1;
+	}
+}
+
+END {
+	print "  '$end_of_table'";
+	print "]).";
+}
diff -r d551623afde5 deps/exmpp/include/internal/exmpp_known_nss.hrl.js
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/internal/exmpp_known_nss.hrl.js	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,34 @@
+var fso, fd, line, re_start, re, dict;
+
+if (WScript.Arguments.length != 1) {
+	WScript.Echo("Syntax: cscript " +
+	    "exmpp_known_nss.hrl.js <exmpp_known_nss.in>");
+} else {
+	/* Open the input file for reading (1). */
+	fso = new ActiveXObject("Scripting.FileSystemObject");
+	fd = fso.OpenTextFile(WScript.Arguments.Item(0), 1, false);
+
+	/* This regexp filters out comments. */
+	re_start = /^# Generated by/;
+	re = /^[^#]/;
+
+	/* We need a dictionnary to filter out duplicates. */
+	dict = new ActiveXObject("Scripting.Dictionary");
+
+	while (!fd.AtEndOfStream) {
+		line = fd.ReadLine();
+		if (line.match(re_start)) {
+			WScript.Echo("% " + line + "\n");
+			WScript.Echo("-define(XMPP_KNOWN_NSS, [");
+		}
+		if (!dict.Exists(line) && line.match(re)) {
+			WScript.Echo("  '" + line + "',");
+			dict.Add(line, 1);
+		}
+	}
+	WScript.Echo("  '$end_of_table'");
+	WScript.Echo("]).");
+
+	/* Done! */
+	fd.close();
+}
diff -r d551623afde5 deps/exmpp/include/internal/exmpp_known_nss.in
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/internal/exmpp_known_nss.in	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,1040 @@
+# Generated by extract-known-from-specs r560 on 2008-08-01T09:50:15Z
+# vim:ft=conf:
+
+# --------------------------------------------------------------------
+# XEP:		RFC 3920
+# NAME:		XMPP Core
+# URL:		http://www.xmpp.org/rfcs/rfc3920.html
+
+http://etherx.jabber.org/streams
+jabber:server:dialback
+urn:ietf:params:xml:ns:xmpp-bind
+urn:ietf:params:xml:ns:xmpp-sasl
+urn:ietf:params:xml:ns:xmpp-stanzas
+urn:ietf:params:xml:ns:xmpp-streams
+urn:ietf:params:xml:ns:xmpp-tls
+
+# --------------------------------------------------------------------
+# XEP:		RFC 3921
+# NAME:		XMPP Instant Messaging and Presence
+# URL:		http://www.xmpp.org/rfcs/rfc3921.html
+
+jabber:client
+jabber:iq:privacy
+jabber:iq:roster
+jabber:server
+urn:ietf:params:xml:ns:xmpp-session
+
+# --------------------------------------------------------------------
+# XEP:		RFC 3923
+# NAME:		XMPP End-to-End Signing and Object Encryption
+# URL:		http://www.xmpp.org/rfcs/rfc3923.html
+
+urn:ietf:params:xml:ns:xmpp-e2e
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0003
+# NAME:		Proxy Accept Socket Service (PASS)
+# URL:		http://www.xmpp.org/extensions/xep-0003.html
+# STATUS:	Deprecated
+# TYPE:		Historical
+# DATE:		2007-01-17
+
+jabber:iq:pass
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0004
+# NAME:		Data Forms
+# URL:		http://www.xmpp.org/extensions/xep-0004.html
+# STATUS:	Final
+# TYPE:		Standards Track
+# DATE:		2007-08-13
+
+jabber:x:data
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0009
+# NAME:		Jabber-RPC
+# URL:		http://www.xmpp.org/extensions/xep-0009.html
+# STATUS:	Final
+# TYPE:		Standards Track
+# DATE:		2006-02-09
+
+jabber:iq:rpc
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0011
+# NAME:		Jabber Browsing
+# URL:		http://www.xmpp.org/extensions/xep-0011.html
+# STATUS:	Deprecated
+# TYPE:		Historical
+# DATE:		2004-11-12
+
+jabber:iq:browse
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0012
+# NAME:		Last Activity
+# URL:		http://www.xmpp.org/extensions/xep-0012.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-07-16
+
+jabber:iq:last
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0013
+# NAME:		Flexible Offline Message Retrieval
+# URL:		http://www.xmpp.org/extensions/xep-0013.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-07-14
+
+http://jabber.org/protocol/offline
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0016
+# NAME:		Privacy Lists
+# URL:		http://www.xmpp.org/extensions/xep-0016.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-02-15
+
+jabber:iq:privacy
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0020
+# NAME:		Feature Negotiation
+# URL:		http://www.xmpp.org/extensions/xep-0020.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2006-11-21
+
+http://jabber.org/protocol/feature-neg
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0022
+# NAME:		Message Events
+# URL:		http://www.xmpp.org/extensions/xep-0022.html
+# STATUS:	Deprecated
+# TYPE:		Historical
+# DATE:		2007-09-26
+
+jabber:x:event
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0023
+# NAME:		Message Expiration
+# URL:		http://www.xmpp.org/extensions/xep-0023.html
+# STATUS:	Deprecated
+# TYPE:		Historical
+# DATE:		2004-10-18
+
+jabber:x:expire
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0027
+# NAME:		Current Jabber OpenPGP Usage
+# URL:		http://www.xmpp.org/extensions/xep-0027.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2006-11-29
+
+jabber:x:encrypted
+jabber:x:signed
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0030
+# NAME:		Service Discovery
+# URL:		http://www.xmpp.org/extensions/xep-0030.html
+# STATUS:	Final
+# TYPE:		Standards Track
+# DATE:		2008-06-06
+
+http://jabber.org/protocol/disco#info
+http://jabber.org/protocol/disco#items
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0033
+# NAME:		Extended Stanza Addressing
+# URL:		http://www.xmpp.org/extensions/xep-0033.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2004-09-16
+
+http://jabber.org/protocol/address
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0045
+# NAME:		Multi-User Chat
+# URL:		http://www.xmpp.org/extensions/xep-0045.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-07-16
+
+http://jabber.org/protocol/muc
+http://jabber.org/protocol/muc#admin
+http://jabber.org/protocol/muc#owner
+http://jabber.org/protocol/muc#unique
+http://jabber.org/protocol/muc#user
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0047
+# NAME:		In-Band Bytestreams (IBB)
+# URL:		http://www.xmpp.org/extensions/xep-0047.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2006-11-29
+
+http://jabber.org/protocol/ibb
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0048
+# NAME:		Bookmarks
+# URL:		http://www.xmpp.org/extensions/xep-0048.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-11-07
+
+storage:bookmarks
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0049
+# NAME:		Private XML Storage
+# URL:		http://www.xmpp.org/extensions/xep-0049.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2004-03-01
+
+jabber:iq:private
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0050
+# NAME:		Ad-Hoc Commands
+# URL:		http://www.xmpp.org/extensions/xep-0050.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-06-30
+
+http://jabber.org/protocol/commands
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0054
+# NAME:		vcard-temp
+# URL:		http://www.xmpp.org/extensions/xep-0054.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2008-07-16
+
+vcard-temp
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0055
+# NAME:		Jabber Search
+# URL:		http://www.xmpp.org/extensions/xep-0055.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2004-03-22
+
+jabber:iq:search
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0059
+# NAME:		Result Set Management
+# URL:		http://www.xmpp.org/extensions/xep-0059.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2006-09-20
+
+http://jabber.org/protocol/rsm
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0060
+# NAME:		Publish-Subscribe
+# URL:		http://www.xmpp.org/extensions/xep-0060.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-03-05
+
+http://jabber.org/protocol/pubsub
+http://jabber.org/protocol/pubsub#errors
+http://jabber.org/protocol/pubsub#event
+http://jabber.org/protocol/pubsub#owner
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0065
+# NAME:		SOCKS5 Bytestreams
+# URL:		http://www.xmpp.org/extensions/xep-0065.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-05-21
+
+http://jabber.org/protocol/bytestreams
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0066
+# NAME:		Out of Band Data
+# URL:		http://www.xmpp.org/extensions/xep-0066.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2006-08-16
+
+jabber:iq:oob
+jabber:x:oob
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0070
+# NAME:		Verifying HTTP Requests via XMPP
+# URL:		http://www.xmpp.org/extensions/xep-0070.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-12-14
+
+http://jabber.org/protocol/http-auth
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0071
+# NAME:		XHTML-IM
+# URL:		http://www.xmpp.org/extensions/xep-0071.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-08-29
+
+http://jabber.org/protocol/xhtml-im
+http://www.w3.org/1999/xhtml
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0072
+# NAME:		SOAP Over XMPP
+# URL:		http://www.xmpp.org/extensions/xep-0072.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-12-14
+
+http://jabber.org/protocol/soap#fault
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0077
+# NAME:		In-Band Registration
+# URL:		http://www.xmpp.org/extensions/xep-0077.html
+# STATUS:	Final
+# TYPE:		Standards Track
+# DATE:		2006-01-24
+
+http://jabber.org/features/iq-register
+jabber:iq:register
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0078
+# NAME:		Non-SASL Authentication
+# URL:		http://www.xmpp.org/extensions/xep-0078.html
+# STATUS:	Deprecated
+# TYPE:		Standards Track
+# DATE:		2008-01-30
+
+http://jabber.org/features/iq-auth
+jabber:iq:auth
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0079
+# NAME:		Advanced Message Processing
+# URL:		http://www.xmpp.org/extensions/xep-0079.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-11-30
+
+http://jabber.org/features/amp
+http://jabber.org/protocol/amp
+http://jabber.org/protocol/amp#errors
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0080
+# NAME:		User Location
+# URL:		http://www.xmpp.org/extensions/xep-0080.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-01-30
+
+http://jabber.org/protocol/geoloc
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0083
+# NAME:		Nested Roster Groups
+# URL:		http://www.xmpp.org/extensions/xep-0083.html
+# STATUS:	Active
+# TYPE:		Informational
+# DATE:		2004-10-11
+
+roster:delimiter
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0084
+# NAME:		User Avatar
+# URL:		http://www.xmpp.org/extensions/xep-0084.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-11-07
+
+urn:xmpp:avatar:metadata
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0085
+# NAME:		Chat State Notifications
+# URL:		http://www.xmpp.org/extensions/xep-0085.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2006-07-12
+
+http://jabber.org/protocol/chatstates
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0090
+# NAME:		Entity Time
+# URL:		http://www.xmpp.org/extensions/xep-0090.html
+# STATUS:	Deprecated
+# TYPE:		Historical
+# DATE:		2007-03-28
+
+jabber:iq:time
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0091
+# NAME:		Delayed Delivery
+# URL:		http://www.xmpp.org/extensions/xep-0091.html
+# STATUS:	Deprecated
+# TYPE:		Historical
+# DATE:		2007-03-29
+
+jabber:x:delay
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0092
+# NAME:		Software Version
+# URL:		http://www.xmpp.org/extensions/xep-0092.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-02-16
+
+jabber:iq:version
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0093
+# NAME:		Roster Item Exchange
+# URL:		http://www.xmpp.org/extensions/xep-0093.html
+# STATUS:	Deprecated
+# TYPE:		Historical
+# DATE:		2005-08-26
+
+jabber:x:roster
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0095
+# NAME:		Stream Initiation
+# URL:		http://www.xmpp.org/extensions/xep-0095.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2004-04-13
+
+http://jabber.org/protocol/si
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0096
+# NAME:		File Transfer
+# URL:		http://www.xmpp.org/extensions/xep-0096.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2004-04-13
+
+http://jabber.org/protocol/si/profile/file-transfer
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0100
+# NAME:		Gateway Interaction
+# URL:		http://www.xmpp.org/extensions/xep-0100.html
+# STATUS:	Active
+# TYPE:		Informational
+# DATE:		2005-10-05
+
+jabber:iq:gateway
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0107
+# NAME:		User Mood
+# URL:		http://www.xmpp.org/extensions/xep-0107.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-06-04
+
+http://jabber.org/protocol/mood
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0108
+# NAME:		User Activity
+# URL:		http://www.xmpp.org/extensions/xep-0108.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-07-11
+
+http://jabber.org/protocol/activity
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0114
+# NAME:		Jabber Component Protocol
+# URL:		http://www.xmpp.org/extensions/xep-0114.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2005-03-03
+
+jabber:component:accept
+jabber:component:connect
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0115
+# NAME:		Entity Capabilities
+# URL:		http://www.xmpp.org/extensions/xep-0115.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-02-25
+
+http://jabber.org/protocol/caps
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0118
+# NAME:		User Tune
+# URL:		http://www.xmpp.org/extensions/xep-0118.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-01-30
+
+http://jabber.org/protocol/tune
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0122
+# NAME:		Data Forms Validation
+# URL:		http://www.xmpp.org/extensions/xep-0122.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2004-09-22
+
+http://jabber.org/protocol/xdata-validate
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0124
+# NAME:		Bidirectional-streams Over Synchronous HTTP (BOSH)
+# URL:		http://www.xmpp.org/extensions/xep-0124.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-02-28
+
+http://jabber.org/protocol/httpbind
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0130
+# NAME:		Waiting Lists
+# URL:		http://www.xmpp.org/extensions/xep-0130.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2006-09-13
+
+http://jabber.org/protocol/waitinglist
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0131
+# NAME:		Stanza Headers and Internet Metadata (SHIM)
+# URL:		http://www.xmpp.org/extensions/xep-0131.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2006-07-12
+
+http://jabber.org/protocol/shim
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0136
+# NAME:		Message Archiving
+# URL:		http://www.xmpp.org/extensions/xep-0136.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-07-16
+
+urn:xmpp:archive
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0137
+# NAME:		Publishing SI Requests
+# URL:		http://www.xmpp.org/extensions/xep-0137.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-08-26
+
+http://jabber.org/protocol/sipub
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0138
+# NAME:		Stream Compression
+# URL:		http://www.xmpp.org/extensions/xep-0138.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-09-26
+
+http://jabber.org/features/compress
+http://jabber.org/protocol/compress
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0141
+# NAME:		Data Forms Layout
+# URL:		http://www.xmpp.org/extensions/xep-0141.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-05-12
+
+http://jabber.org/protocol/xdata-layout
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0144
+# NAME:		Roster Item Exchange
+# URL:		http://www.xmpp.org/extensions/xep-0144.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2005-08-26
+
+http://jabber.org/protocol/rosterx
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0145
+# NAME:		Annotations
+# URL:		http://www.xmpp.org/extensions/xep-0145.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2006-03-23
+
+storage:rosternotes
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0153
+# NAME:		vCard-Based Avatars
+# URL:		http://www.xmpp.org/extensions/xep-0153.html
+# STATUS:	Active
+# TYPE:		Historical
+# DATE:		2006-08-16
+
+vcard-temp:x:update
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0154
+# NAME:		User Profile
+# URL:		http://www.xmpp.org/extensions/xep-0154.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-04-18
+
+urn:xmpp:tmp:profile
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0158
+# NAME:		Robot Challenges
+# URL:		http://www.xmpp.org/extensions/xep-0158.html
+# STATUS:	Proposed
+# TYPE:		Standards Track
+# DATE:		2008-05-12
+
+urn:xmpp:tmp:challenge
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0161
+# NAME:		Abuse Reporting
+# URL:		http://www.xmpp.org/extensions/xep-0161.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-05-06
+
+urn:xmpp:tmp:abuse
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0166
+# NAME:		Jingle
+# URL:		http://www.xmpp.org/extensions/xep-0166.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-07-31
+
+urn:xmpp:tmp:jingle
+urn:xmpp:tmp:jingle:errors
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0167
+# NAME:		Jingle RTP Sessions
+# URL:		http://www.xmpp.org/extensions/xep-0167.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-07-31
+
+urn:xmpp:tmp:jingle:apps:rtp
+urn:xmpp:tmp:jingle:apps:rtp:info
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0168
+# NAME:		Resource Application Priority
+# URL:		http://www.xmpp.org/extensions/xep-0168.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-01-23
+
+http://www.xmpp.org/extensions/xep-0168.html#ns
+http://www.xmpp.org/extensions/xep-0168.html#ns-route
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0171
+# NAME:		Language Translation
+# URL:		http://www.xmpp.org/extensions/xep-0171.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2008-05-09
+
+urn:xmpp:langtrans
+urn:xmpp:langtrans#items
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0172
+# NAME:		User Nickname
+# URL:		http://www.xmpp.org/extensions/xep-0172.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2006-06-05
+
+http://jabber.org/protocol/nick
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0176
+# NAME:		Jingle ICE-UDP Transport Method
+# URL:		http://www.xmpp.org/extensions/xep-0176.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-07-31
+
+urn:xmpp:tmp:jingle:transports:ice-udp
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0177
+# NAME:		Jingle Raw UDP Transport Method
+# URL:		http://www.xmpp.org/extensions/xep-0177.html
+# STATUS:	Proposed
+# TYPE:		Standards Track
+# DATE:		2007-11-27
+
+urn:xmpp:tmp:jingle:transports:raw-udp
+urn:xmpp:tmp:jingle:transports:raw-udp:info
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0181
+# NAME:		Jingle DTMF
+# URL:		http://www.xmpp.org/extensions/xep-0181.html
+# STATUS:	Proposed
+# TYPE:		Standards Track
+# DATE:		2008-05-30
+
+urn:xmpp:tmp:jingle:dtmf
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0184
+# NAME:		Message Receipts
+# URL:		http://www.xmpp.org/extensions/xep-0184.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-09-26
+
+urn:xmpp:receipts
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0186
+# NAME:		Invisible Command
+# URL:		http://www.xmpp.org/extensions/xep-0186.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-05-12
+
+urn:xmpp:tmp:invisible
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0189
+# NAME:		Public Key Publishing
+# URL:		http://www.xmpp.org/extensions/xep-0189.html
+# STATUS:	Proposed
+# TYPE:		Standards Track
+# DATE:		2008-03-05
+
+urn:xmpp:tmp:pubkey
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0191
+# NAME:		Simple Communications Blocking
+# URL:		http://www.xmpp.org/extensions/xep-0191.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-02-15
+
+urn:xmpp:blocking
+urn:xmpp:blocking:errors
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0192
+# NAME:		Proposed Stream Feature Improvements
+# URL:		http://www.xmpp.org/extensions/xep-0192.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-01-17
+
+urn:ietf:params:xml:ns:xmpp-bind
+urn:ietf:params:xml:ns:xmpp-sasl
+urn:xmpp:features:dialback
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0193
+# NAME:		Proposed Resource Binding Improvements
+# URL:		http://www.xmpp.org/extensions/xep-0193.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-01-17
+
+urn:ietf:params:xml:ns:xmpp-bind
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0194
+# NAME:		User Chatting
+# URL:		http://www.xmpp.org/extensions/xep-0194.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-10-02
+
+http://www.xmpp.org/extensions/xep-0194.html#ns
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0195
+# NAME:		User Browsing
+# URL:		http://www.xmpp.org/extensions/xep-0195.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-10-02
+
+http://www.xmpp.org/extensions/xep-0195.html#ns
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0196
+# NAME:		User Gaming
+# URL:		http://www.xmpp.org/extensions/xep-0196.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-10-02
+
+http://www.xmpp.org/extensions/xep-0196.html#ns
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0197
+# NAME:		User Viewing
+# URL:		http://www.xmpp.org/extensions/xep-0197.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-10-02
+
+http://www.xmpp.org/extensions/xep-0197.html#ns
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0198
+# NAME:		Stanza Acknowledgements
+# URL:		http://www.xmpp.org/extensions/xep-0198.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-10-03
+
+http://www.xmpp.org/extensions/xep-0198.html#ns
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0199
+# NAME:		XMPP Ping
+# URL:		http://www.xmpp.org/extensions/xep-0199.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-06-12
+
+urn:xmpp:ping
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0202
+# NAME:		Entity Time
+# URL:		http://www.xmpp.org/extensions/xep-0202.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-03-28
+
+urn:xmpp:time
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0203
+# NAME:		Delayed Delivery
+# URL:		http://www.xmpp.org/extensions/xep-0203.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-03-29
+
+urn:xmpp:delay
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0206
+# NAME:		XMPP Over BOSH
+# URL:		http://www.xmpp.org/extensions/xep-0206.html
+# STATUS:	Draft
+# TYPE:		Standards Track
+# DATE:		2007-06-04
+
+urn:xmpp:xbosh
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0208
+# NAME:		Bootstrapping Implementation of Jingle
+# URL:		http://www.xmpp.org/extensions/xep-0208.html
+# STATUS:	Experimental
+# TYPE:		Informational
+# DATE:		2008-01-23
+
+http://www.xmpp.org/extensions/xep-0208.html#ns
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0209
+# NAME:		Metacontacts
+# URL:		http://www.xmpp.org/extensions/xep-0209.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-04-10
+
+storage:metacontacts
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0215
+# NAME:		External Service Discovery
+# URL:		http://www.xmpp.org/extensions/xep-0215.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-08-30
+
+http://www.xmpp.org/extensions/xep-0215.html#ns
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0220
+# NAME:		Server Dialback
+# URL:		http://www.xmpp.org/extensions/xep-0220.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-06-18
+
+jabber:server:dialback
+urn:xmpp:features:dialback
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0221
+# NAME:		Data Forms Media Element
+# URL:		http://www.xmpp.org/extensions/xep-0221.html
+# STATUS:	Proposed
+# TYPE:		Standards Track
+# DATE:		2008-06-18
+
+urn:xmpp:tmp:media-element
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0224
+# NAME:		Attention
+# URL:		http://www.xmpp.org/extensions/xep-0224.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-08-08
+
+http://www.xmpp.org/extensions/xep-0224.html#ns
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0225
+# NAME:		Component Connections
+# URL:		http://www.xmpp.org/extensions/xep-0225.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-08-08
+
+urn:xmpp:tmp:component
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0227
+# NAME:		Portable Import/Export Format for XMPP-IM Servers
+# URL:		http://www.xmpp.org/extensions/xep-0227.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2007-12-13
+
+http://www.xmpp.org/extensions/xep-0227.html#ns
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0231
+# NAME:		Data Element
+# URL:		http://www.xmpp.org/extensions/xep-0231.html
+# STATUS:	Proposed
+# TYPE:		Standards Track
+# DATE:		2008-06-18
+
+urn:xmpp:tmp:data-element
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0233
+# NAME:		Use of Domain-Based Service Names in XMPP SASL Negotiation
+# URL:		http://www.xmpp.org/extensions/xep-0233.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-01-30
+
+urn:xmpp:tmp:domain-based-name
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0234
+# NAME:		Jingle File Transfer
+# URL:		http://www.xmpp.org/extensions/xep-0234.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-06-05
+
+urn:xmpp:tmp:jingle:apps:file-transfer
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0235
+# NAME:		Authorization Tokens
+# URL:		http://www.xmpp.org/extensions/xep-0235.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-03-31
+
+urn:xmpp:tmp:auth-token
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0237
+# NAME:		Roster Sequencing
+# URL:		http://www.xmpp.org/extensions/xep-0237.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-04-21
+
+jabber:iq:roster
+urn:xmpp:tmp:roster-sequencing
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0244
+# NAME:		IO Data
+# URL:		http://www.xmpp.org/extensions/xep-0244.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-06-18
+
+urn:xmpp:tmp:io-data
+
+# --------------------------------------------------------------------
+# XEP:		XEP-0247
+# NAME:		Jingle XML Streams
+# URL:		http://www.xmpp.org/extensions/xep-0247.html
+# STATUS:	Experimental
+# TYPE:		Standards Track
+# DATE:		2008-06-18
+
+urn:xmpp:tmp:jingle:apps:xmlstream
diff -r d551623afde5 deps/exmpp/include/internal/exmpp_xmpp.hrl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/internal/exmpp_xmpp.hrl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,29 @@
+% WARNING: This header is internal to Exmpp. DO NOT include it in your
+% applications!
+
+% --------------------------------------------------------------------
+% Records to represent XMPP/Jabber specific structures.
+% --------------------------------------------------------------------
+
+% Instead of storing the three raw components separately, we keep the
+% original JID in one chunk. The intention is to save some memory.
+% Most of the time we already have the raw JID (for example coming
+% from a stanza), so we avoid the need of allocating a new binary when
+% serializing (we can return the original, see make/4). Also we
+% allocate less pointers by keeping the JID in one chunk instead of
+% in its three separate components.
+%
+% Tradeoff: we consume more CPU and memory for accessing a single
+% raw component (see exmpp_jid:node/1, exmpp_jid:domain/1,
+% exmpp_jid:resource/1), but these are less frequently used than their
+% prepared versions (exmpp_jid:prep_node/1, exmpp_jid:prep_domain/1). Load tests
+% performed on ejabberd so far indicate an observable memory win when
+% using this representation, with no significant CPU cost.
+
+% JID.
+-record(jid, {
+  orig_jid  :: binary() | undefined,
+  prep_node     :: binary() | undefined,
+  prep_domain   :: binary() | undefined,
+  prep_resource :: binary() | undefined
+}).
diff -r d551623afde5 deps/exmpp/include/internal/extract-known-from-specs
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/internal/extract-known-from-specs	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,209 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+use utf8;
+
+use LWP::Simple;
+use File::Basename;
+use POSIX qw(strftime);
+
+our $NSS_EXCL = qr/example\.org/o;
+
+sub main {
+	my ($nss_fn, $names_fn, $attrs_fn) = @_;
+
+	unless (defined $nss_fn && defined $names_fn && defined $attrs_fn) {
+		print STDERR "Usage: $0 <nss_fn> <names_fn> <attrs_fn>\n";
+		return (1);
+	}
+
+	my @xeps;
+	my $xep;
+
+	while (<STDIN>) {
+		my $line = $_;
+
+		# Skip empty lines and comments.
+		next if $line =~ /^\s*$/o || $line =~ /\s*#/o;
+
+		if ($line =~ /^XEP:\t\t(.+)$/o) {
+			push @xeps, $xep if defined $xep;
+			$xep = {'id' => $1};
+		} elsif ($line =~ /^([A-Z]+):\t\t(.+)$/o) {
+			$xep->{lc($1)} = $2;
+		}
+	}
+	push @xeps, $xep if %$xep;
+
+	# If the XEP list is empty, exit.
+        return (0) unless (@xeps);
+
+	# Open files.
+	open(NSS,   ">$nss_fn");
+	open(NAMES, ">$names_fn");
+	open(ATTRS, ">$attrs_fn");
+
+	# Print header.
+	my $script = basename($0);
+	my $revision = '$Revision: 805 $' =~ /Revision: ([\d]+)/ ? $1 : 0;
+	my $now = strftime "%Y-%m-%dT%H:%M:%SZ", gmtime;
+
+	my $header = << "EOF";
+# Generated by $script r$revision on $now
+# vim:ft=conf:
+EOF
+	print NSS $header;
+	print NAMES $header;
+	print ATTRS $header;
+
+	foreach $xep (@xeps) {
+		# Print XEP entry.
+		my $id = $xep->{'id'};
+		my $url = $xep->{'url'};
+		my $name = $xep->{'name'};
+		my $type = $xep->{'type'};
+		my $status = $xep->{'status'};
+		my $date = $xep->{'date'};
+
+		print "$id: $name\n";
+
+		# Fetch page.
+		my $content = get($url);
+		unless (defined $content) {
+			print STDERR "  Can't retrieve URL '$url'\n";
+			next;
+		}
+
+		# Check wether we have an XML schema or a DTD.
+		my $result;
+		if ($content =~ /xs:schema.+targetNamespace/so) {
+			# Found a schema!
+			print "  Read XML schema(s)\n";
+			$result = extract_from_schema($xep, $content);
+		} elsif ($content =~ /!ELEMENT/so) {
+			# Found a DTD!
+			print "  Read DTD\n";
+			$result = extract_from_dtd($xep, $content);
+		} else {
+			next;
+		}
+
+		next unless $result;
+
+		my $entry = << "EOF";
+
+# --------------------------------------------------------------------
+# XEP:		$id
+# NAME:		$name
+# URL:		$url
+EOF
+		$entry .= "# STATUS:	$status\n" if $status;
+		$entry .= "# TYPE:		$type\n" if $type;
+		$entry .= "# DATE:		$date\n" if $date;
+
+		print NSS "$entry\n";
+		print NAMES $entry;
+		print ATTRS $entry;
+
+		foreach my $ns (sort keys %$result) {
+			print NSS "$ns\n";
+
+			my @names = @{$result->{$ns}->{'names'}};
+			print NAMES "\n# $ns\n";
+			print NAMES join("\n", @names)."\n" if (@names);
+
+			my @attrs = @{$result->{$ns}->{'attrs'}};
+			print ATTRS "\n# $ns\n";
+			print ATTRS join("\n", @attrs)."\n" if (@attrs);
+		}
+	}
+
+	close(NSS);
+	close(NAMES);
+	close(ATTRS);
+}
+
+sub extract_from_schema ($$) {
+	my ($xep, $content) = @_;
+
+	my $result;
+	my $ns;
+
+	foreach my $line (split /[\r\n]+/, $content) {
+		if ($line =~ /targetNamespace=['"]([^'"]+)['"]/o) {
+			$ns = $1;
+			if ($ns =~ $NSS_EXCL) {
+				print "  Skip namespace '$ns'\n";
+				undef $ns;
+				next;
+			}
+
+			unless (exists $result->{$ns}) {
+				print "  Add namespace '$ns'\n";
+				$result->{$ns} = {
+					'names' => [],
+					'attrs' => []
+				};
+			}
+		}
+
+		next unless (defined $ns);
+
+		if ($line =~ /xs:element\s+name=['"]([^'"]+)['"]/o) {
+			my $name = $1;
+			push @{$result->{$ns}->{'names'}}, $name
+			  unless grep(/^$name$/, @{$result->{$ns}->{'names'}});
+		} elsif ($line =~ /xs:attribute\s+name=['"]([^'"]+)['"]/o) {
+			my $attr = $1;
+			next if $attr =~ /^xml:/;
+			push @{$result->{$ns}->{'attrs'}}, $attr
+			  unless grep(/^$attr$/, @{$result->{$ns}->{'attrs'}});
+		}
+	}
+
+	return ($result);
+}
+
+sub extract_from_dtd ($$) {
+	my ($xep, $content) = @_;
+
+	my $result;
+	my $ns;
+
+	foreach my $line (split /[\r\n]+/, $content) {
+		if ($line =~ /Short\s+Name:\s*([^\s]+)<br/io) {
+			$ns = $1;
+			if ($ns =~ $NSS_EXCL) {
+				print "  Skip namespace '$ns'\n";
+				undef $ns;
+				next;
+			}
+
+			unless (exists $result->{$ns}) {
+				print "  Add namespace '$ns'\n";
+				$result->{$ns} = {
+					'names' => [],
+					'attrs' => []
+				};
+			}
+		}
+
+		next unless (defined $ns);
+
+		if ($line =~ /!ELEMENT\s+([a-zA-Z0-9-]+)/o) {
+			my $name = $1;
+			push @{$result->{$ns}->{'names'}}, $name
+			  unless grep(/^$name$/, @{$result->{$ns}->{'names'}});
+		} elsif ($line =~ /!ATTLIST\s+[^\s]+\s+([^\s]+)/o) {
+			my $attr = $1;
+			next if $attr =~ /^xml:/;
+			push @{$result->{$ns}->{'attrs'}}, $attr
+			  unless grep(/^$attr$/, @{$result->{$ns}->{'attrs'}});
+		}
+	}
+
+	return ($result);
+}
+
+main(@ARGV);
diff -r d551623afde5 deps/exmpp/include/internal/make-specs-list
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/internal/make-specs-list	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,120 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+use utf8;
+
+use LWP::Simple;
+use File::Basename;
+use POSIX qw(strftime);
+
+our $SPECS_URL = 'http://www.xmpp.org/extensions/all.shtml';
+
+# OR'd regex.
+our $TYPE_EXCL1 = qr/(Humorous|JIG Formation|Procedural)/io;
+our $STATUS_EXCL1 = qr/(Deferred|Obsolete|Rejected|Retracted)/io;
+
+# AND'd regex.
+our $TYPE_EXCL2 = qr/(Informational)/io;
+our $STATUS_EXCL2 = qr/(Deprecated)/io;
+
+our @RFCS = (
+	{
+		'id'   => 'RFC 3920',
+		'url'  => 'http://www.xmpp.org/rfcs/rfc3920.html',
+		'name' => 'XMPP Core'
+	},
+	{
+		'id'   => 'RFC 3921',
+		'url'  => 'http://www.xmpp.org/rfcs/rfc3921.html',
+		'name' => 'XMPP Instant Messaging and Presence'
+	},
+	{
+		'id'   => 'RFC 3923',
+		'url'  => 'http://www.xmpp.org/rfcs/rfc3923.html',
+		'name' => 'XMPP End-to-End Signing and Object Encryption'
+	}
+);
+sub main {
+	my ($specs_url) = @_;
+
+	$specs_url = $SPECS_URL unless defined $specs_url;
+
+	# Fetch page.
+	my $content = get($specs_url);
+	unless (defined $content) {
+		print STDERR "Can't retrieve URL '$specs_url'\n";
+		return (1);
+	}
+
+	my $line;
+	my @xeps = @RFCS;
+	my $xep;
+
+	# Walk through the lines of $content.
+	foreach $line (split /[\r\n]+/, $content) {
+		if ($line =~ /^<tr class='tablebody'>/o) {
+			# XEP entry start.
+			push @xeps, $xep if %$xep;
+			$xep = {};
+		} elsif (!exists $xep->{'id'} &&
+		    $line =~ /^<td valign='top'><a href='([^']+)'>([^<]+)/o) {
+			# ID and URL.
+			$xep->{'id'} = $2;
+			$xep->{'url'} = $1;
+		} elsif ($line =~ /^<td valign='top'>([^<]+)/o) {
+			if (!exists $xep->{'name'}) {
+				$xep->{'name'} = $1;
+			} elsif (!exists $xep->{'type'}) {
+				$xep->{'type'} = $1;
+			} elsif (!exists $xep->{'status'}) {
+				$xep->{'status'} = $1;
+			} elsif (!exists $xep->{'date'}) {
+				$xep->{'date'} = $1;
+			}
+		}
+	}
+	push @xeps, $xep if %$xep;
+
+	# If the XEP list is empty, exit.
+	return (0) unless (@xeps);
+
+	# Print header.
+	my $script = basename($0);
+	my $revision = '$Revision: 805 $' =~ /Revision: ([\d]+)/ ? $1 : 0;
+	my $now = strftime "%Y-%m-%dT%H:%M:%SZ", gmtime;
+
+	print << "EOF";
+# Generated by $script r$revision on $now
+# vim:ft=conf:
+EOF
+
+	foreach $xep (@xeps) {
+		# Skip unwanted XEPs.
+		my $type = $xep->{'type'} || "";
+		my $status = $xep->{'status'} || "";
+		next if ($type =~ $TYPE_EXCL1 || $status =~ $STATUS_EXCL1);
+		next if ($type =~ $TYPE_EXCL2 && $status =~ $STATUS_EXCL2);
+
+		# Print XEP entry.
+		my $id = $xep->{'id'};
+		my $url = $xep->{'url'};
+		my $name = $xep->{'name'};
+		my $date = $xep->{'date'} || "";
+
+		print << "EOF";
+
+# --------------------------------------------------------------------
+XEP:		$id
+NAME:		$name
+URL:		$url
+EOF
+		print "STATUS:		$status\n" if $status;
+		print "TYPE:		$type\n" if $type;
+		print "DATE:		$date\n" if $date;
+	}
+
+	return (0);
+}
+
+main(@ARGV);
diff -r d551623afde5 deps/exmpp/include/jlib.hrl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/include/jlib.hrl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,308 @@
+%%%----------------------------------------------------------------------
+%%%
+%%% ejabberd, Copyright (C) 2002-2010   ProcessOne
+%%%
+%%% This program is free software; you can redistribute it and/or
+%%% modify it under the terms of the GNU General Public License as
+%%% published by the Free Software Foundation; either version 2 of the
+%%% License, or (at your option) any later version.
+%%%
+%%% This program is distributed in the hope that it will be useful,
+%%% but WITHOUT ANY WARRANTY; without even the implied warranty of
+%%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+%%% General Public License for more details.
+%%%                         
+%%% You should have received a copy of the GNU General Public License
+%%% along with this program; if not, write to the Free Software
+%%% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+%%% 02111-1307 USA
+%%%
+%%%----------------------------------------------------------------------
+
+-define(NS_DISCO_ITEMS,  "http://jabber.org/protocol/disco#items").
+-define(NS_DISCO_INFO,   "http://jabber.org/protocol/disco#info").
+-define(NS_VCARD,        "vcard-temp").
+-define(NS_AUTH,         "jabber:iq:auth").
+-define(NS_AUTH_ERROR,   "jabber:iq:auth:error").
+-define(NS_REGISTER,     "jabber:iq:register").
+-define(NS_SEARCH,       "jabber:iq:search").
+-define(NS_ROSTER,       "jabber:iq:roster").
+-define(NS_PRIVACY,      "jabber:iq:privacy").
+-define(NS_PRIVATE,      "jabber:iq:private").
+-define(NS_VERSION,      "jabber:iq:version").
+-define(NS_TIME,         "jabber:iq:time").
+-define(NS_LAST,         "jabber:iq:last").
+-define(NS_XDATA,        "jabber:x:data").
+-define(NS_IQDATA,       "jabber:iq:data").
+-define(NS_DELAY,        "jabber:x:delay").
+-define(NS_EXPIRE,       "jabber:x:expire").
+-define(NS_EVENT,        "jabber:x:event").
+-define(NS_XCONFERENCE,  "jabber:x:conference").
+-define(NS_STATS,        "http://jabber.org/protocol/stats").
+-define(NS_MUC,          "http://jabber.org/protocol/muc").
+-define(NS_MUC_USER,     "http://jabber.org/protocol/muc#user").
+-define(NS_MUC_ADMIN,    "http://jabber.org/protocol/muc#admin").
+-define(NS_MUC_OWNER,    "http://jabber.org/protocol/muc#owner").
+-define(NS_PUBSUB,       "http://jabber.org/protocol/pubsub").
+-define(NS_PUBSUB_EVENT, "http://jabber.org/protocol/pubsub#event").
+-define(NS_PUBSUB_OWNER, "http://jabber.org/protocol/pubsub#owner").
+-define(NS_PUBSUB_NMI,   "http://jabber.org/protocol/pubsub#node-meta-info").
+-define(NS_PUBSUB_ERRORS,"http://jabber.org/protocol/pubsub#errors").
+-define(NS_PUBSUB_NODE_CONFIG, "http://jabber.org/protocol/pubsub#node_config").
+-define(NS_PUBSUB_SUB_AUTH, "http://jabber.org/protocol/pubsub#subscribe_authorization").
+-define(NS_COMMANDS,     "http://jabber.org/protocol/commands").
+-define(NS_BYTESTREAMS,  "http://jabber.org/protocol/bytestreams").
+-define(NS_ADMIN,        "http://jabber.org/protocol/admin").
+
+-define(NS_EJABBERD_CONFIG, "ejabberd:config").
+
+-define(NS_STREAM,       "http://etherx.jabber.org/streams").
+
+-define(NS_STANZAS,      "urn:ietf:params:xml:ns:xmpp-stanzas").
+-define(NS_STREAMS,      "urn:ietf:params:xml:ns:xmpp-streams").
+
+-define(NS_TLS,          "urn:ietf:params:xml:ns:xmpp-tls").
+-define(NS_SASL,         "urn:ietf:params:xml:ns:xmpp-sasl").
+-define(NS_SESSION,      "urn:ietf:params:xml:ns:xmpp-session").
+-define(NS_BIND,         "urn:ietf:params:xml:ns:xmpp-bind").
+
+-define(NS_FEATURE_IQAUTH, "http://jabber.org/features/iq-auth").
+-define(NS_FEATURE_IQREGISTER, "http://jabber.org/features/iq-register").
+-define(NS_FEATURE_COMPRESS, "http://jabber.org/features/compress").
+
+-define(NS_COMPRESS,     "http://jabber.org/protocol/compress").
+
+-define(NS_CAPS,          "http://jabber.org/protocol/caps").
+
+% TODO: remove "code" attribute (currently it used for backward-compatibility)
+-define(STANZA_ERROR(Code, Type, Condition),
+	{xmlelement, "error",
+	 [{"code", Code}, {"type", Type}],
+	 [{xmlelement, Condition, [{"xmlns", ?NS_STANZAS}], []}]}).
+
+-define(ERR_BAD_REQUEST,
+	?STANZA_ERROR("400", "modify", "bad-request")).
+-define(ERR_CONFLICT,
+	?STANZA_ERROR("409", "cancel", "conflict")).
+-define(ERR_FEATURE_NOT_IMPLEMENTED,
+	?STANZA_ERROR("501", "cancel", "feature-not-implemented")).
+-define(ERR_FORBIDDEN,
+	?STANZA_ERROR("403", "auth",   "forbidden")).
+-define(ERR_GONE,
+	?STANZA_ERROR("302", "modify", "gone")).
+-define(ERR_INTERNAL_SERVER_ERROR,
+	?STANZA_ERROR("500", "wait",   "internal-server-error")).
+-define(ERR_ITEM_NOT_FOUND,
+	?STANZA_ERROR("404", "cancel", "item-not-found")).
+-define(ERR_JID_MALFORMED,
+	?STANZA_ERROR("400", "modify", "jid-malformed")).
+-define(ERR_NOT_ACCEPTABLE,
+	?STANZA_ERROR("406", "modify", "not-acceptable")).
+-define(ERR_NOT_ALLOWED,
+	?STANZA_ERROR("405", "cancel", "not-allowed")).
+-define(ERR_NOT_AUTHORIZED,
+	?STANZA_ERROR("401", "auth",   "not-authorized")).
+-define(ERR_PAYMENT_REQUIRED,
+	?STANZA_ERROR("402", "auth",   "payment-required")).
+-define(ERR_RECIPIENT_UNAVAILABLE,
+	?STANZA_ERROR("404", "wait",   "recipient-unavailable")).
+-define(ERR_REDIRECT,
+	?STANZA_ERROR("302", "modify", "redirect")).
+-define(ERR_REGISTRATION_REQUIRED,
+	?STANZA_ERROR("407", "auth",   "registration-required")).
+-define(ERR_REMOTE_SERVER_NOT_FOUND,
+	?STANZA_ERROR("404", "cancel", "remote-server-not-found")).
+-define(ERR_REMOTE_SERVER_TIMEOUT,
+	?STANZA_ERROR("504", "wait",   "remote-server-timeout")).
+-define(ERR_RESOURCE_CONSTRAINT,
+	?STANZA_ERROR("500", "wait",   "resource-constraint")).
+-define(ERR_SERVICE_UNAVAILABLE,
+	?STANZA_ERROR("503", "cancel", "service-unavailable")).
+-define(ERR_SUBSCRIPTION_REQUIRED,
+	?STANZA_ERROR("407", "auth",   "subscription-required")).
+-define(ERR_UNEXPECTED_REQUEST,
+	?STANZA_ERROR("400", "wait",   "unexpected-request")).
+%-define(ERR_,
+%	?STANZA_ERROR("", "", "")).
+
+-define(STANZA_ERRORT(Code, Type, Condition, Lang, Text),
+	{xmlelement, "error",
+	 [{"code", Code}, {"type", Type}],
+	 [{xmlelement, Condition, [{"xmlns", ?NS_STANZAS}], []},
+	  {xmlelement, "text", [{"xmlns", ?NS_STANZAS}],
+	   [{xmlcdata, translate:translate(Lang, Text)}]}]}).
+
+-define(ERRT_BAD_REQUEST(Lang, Text),
+	?STANZA_ERRORT("400", "modify", "bad-request", Lang, Text)).
+-define(ERRT_CONFLICT(Lang, Text),
+	?STANZA_ERRORT("409", "cancel", "conflict", Lang, Text)).
+-define(ERRT_FEATURE_NOT_IMPLEMENTED(Lang, Text),
+	?STANZA_ERRORT("501", "cancel", "feature-not-implemented", Lang, Text)).
+-define(ERRT_FORBIDDEN(Lang, Text),
+	?STANZA_ERRORT("403", "auth",   "forbidden", Lang, Text)).
+-define(ERRT_GONE(Lang, Text),
+	?STANZA_ERRORT("302", "modify", "gone", Lang, Text)).
+-define(ERRT_INTERNAL_SERVER_ERROR(Lang, Text),
+	?STANZA_ERRORT("500", "wait",   "internal-server-error", Lang, Text)).
+-define(ERRT_ITEM_NOT_FOUND(Lang, Text),
+	?STANZA_ERRORT("404", "cancel", "item-not-found", Lang, Text)).
+-define(ERRT_JID_MALFORMED(Lang, Text),
+	?STANZA_ERRORT("400", "modify", "jid-malformed", Lang, Text)).
+-define(ERRT_NOT_ACCEPTABLE(Lang, Text),
+	?STANZA_ERRORT("406", "modify", "not-acceptable", Lang, Text)).
+-define(ERRT_NOT_ALLOWED(Lang, Text),
+	?STANZA_ERRORT("405", "cancel", "not-allowed", Lang, Text)).
+-define(ERRT_NOT_AUTHORIZED(Lang, Text),
+	?STANZA_ERRORT("401", "auth",   "not-authorized", Lang, Text)).
+-define(ERRT_PAYMENT_REQUIRED(Lang, Text),
+	?STANZA_ERRORT("402", "auth",   "payment-required", Lang, Text)).
+-define(ERRT_RECIPIENT_UNAVAILABLE(Lang, Text),
+	?STANZA_ERRORT("404", "wait",   "recipient-unavailable", Lang, Text)).
+-define(ERRT_REDIRECT(Lang, Text),
+	?STANZA_ERRORT("302", "modify", "redirect", Lang, Text)).
+-define(ERRT_REGISTRATION_REQUIRED(Lang, Text),
+	?STANZA_ERRORT("407", "auth",   "registration-required", Lang, Text)).
+-define(ERRT_REMOTE_SERVER_NOT_FOUND(Lang, Text),
+	?STANZA_ERRORT("404", "cancel", "remote-server-not-found", Lang, Text)).
+-define(ERRT_REMOTE_SERVER_TIMEOUT(Lang, Text),
+	?STANZA_ERRORT("504", "wait",   "remote-server-timeout", Lang, Text)).
+-define(ERRT_RESOURCE_CONSTRAINT(Lang, Text),
+	?STANZA_ERRORT("500", "wait",   "resource-constraint", Lang, Text)).
+-define(ERRT_SERVICE_UNAVAILABLE(Lang, Text),
+	?STANZA_ERRORT("503", "cancel", "service-unavailable", Lang, Text)).
+-define(ERRT_SUBSCRIPTION_REQUIRED(Lang, Text),
+	?STANZA_ERRORT("407", "auth",   "subscription-required", Lang, Text)).
+-define(ERRT_UNEXPECTED_REQUEST(Lang, Text),
+	?STANZA_ERRORT("400", "wait",   "unexpected-request", Lang, Text)).
+
+% Auth stanza errors
+-define(ERR_AUTH_NO_RESOURCE_PROVIDED(Lang),
+	?ERRT_NOT_ACCEPTABLE(Lang, "No resource provided")).
+-define(ERR_AUTH_BAD_RESOURCE_FORMAT(Lang),
+	?ERRT_NOT_ACCEPTABLE(Lang, "Illegal resource format")).
+-define(ERR_AUTH_RESOURCE_CONFLICT(Lang),
+	?ERRT_CONFLICT(Lang, "Resource conflict")).
+
+
+-define(STREAM_ERROR(Condition),
+	{xmlelement, "stream:error",
+	 [],
+	 [{xmlelement, Condition, [{"xmlns", ?NS_STREAMS}], []}]}).
+
+-define(SERR_BAD_FORMAT,
+	?STREAM_ERROR("bad-format")).
+-define(SERR_BAD_NAMESPACE_PREFIX,
+	?STREAM_ERROR("bad-namespace-prefix")).
+-define(SERR_CONFLICT,
+	?STREAM_ERROR("conflict")).
+-define(SERR_CONNECTION_TIMEOUT,
+	?STREAM_ERROR("connection-timeout")).
+-define(SERR_HOST_GONE,
+	?STREAM_ERROR("host-gone")).
+-define(SERR_HOST_UNKNOWN,
+	?STREAM_ERROR("host-unknown")).
+-define(SERR_IMPROPER_ADDRESSING,
+	?STREAM_ERROR("improper-addressing")).
+-define(SERR_INTERNAL_SERVER_ERROR,
+	?STREAM_ERROR("internal-server-error")).
+-define(SERR_INVALID_FROM,
+	?STREAM_ERROR("invalid-from")).
+-define(SERR_INVALID_ID,
+	?STREAM_ERROR("invalid-id")).
+-define(SERR_INVALID_NAMESPACE,
+	?STREAM_ERROR("invalid-namespace")).
+-define(SERR_INVALID_XML,
+	?STREAM_ERROR("invalid-xml")).
+-define(SERR_NOT_AUTHORIZED,
+	?STREAM_ERROR("not-authorized")).
+-define(SERR_POLICY_VIOLATION,
+	?STREAM_ERROR("policy-violation")).
+-define(SERR_REMOTE_CONNECTION_FAILED,
+	?STREAM_ERROR("remote-connection-failed")).
+-define(SERR_RESOURSE_CONSTRAINT,
+	?STREAM_ERROR("resource-constraint")).
+-define(SERR_RESTRICTED_XML,
+	?STREAM_ERROR("restricted-xml")).
+% TODO: include hostname or IP
+-define(SERR_SEE_OTHER_HOST,
+	?STREAM_ERROR("see-other-host")).
+-define(SERR_SYSTEM_SHUTDOWN,
+	?STREAM_ERROR("system-shutdown")).
+-define(SERR_UNSUPPORTED_ENCODING,
+	?STREAM_ERROR("unsupported-encoding")).
+-define(SERR_UNSUPPORTED_STANZA_TYPE,
+	?STREAM_ERROR("unsupported-stanza-type")).
+-define(SERR_UNSUPPORTED_VERSION,
+	?STREAM_ERROR("unsupported-version")).
+-define(SERR_XML_NOT_WELL_FORMED,
+	?STREAM_ERROR("xml-not-well-formed")).
+%-define(SERR_,
+%	?STREAM_ERROR("")).
+
+-define(STREAM_ERRORT(Condition, Lang, Text),
+	{xmlelement, "stream:error",
+	 [],
+	 [{xmlelement, Condition, [{"xmlns", ?NS_STREAMS}], []},
+	  {xmlelement, "text", [{"xml:lang", Lang}, {"xmlns", ?NS_STREAMS}],
+	   [{xmlcdata, translate:translate(Lang, Text)}]}]}).
+
+-define(SERRT_BAD_FORMAT(Lang, Text),
+	?STREAM_ERRORT("bad-format", Lang, Text)).
+-define(SERRT_BAD_NAMESPACE_PREFIX(Lang, Text),
+	?STREAM_ERRORT("bad-namespace-prefix", Lang, Text)).
+-define(SERRT_CONFLICT(Lang, Text),
+	?STREAM_ERRORT("conflict", Lang, Text)).
+-define(SERRT_CONNECTION_TIMEOUT(Lang, Text),
+	?STREAM_ERRORT("connection-timeout", Lang, Text)).
+-define(SERRT_HOST_GONE(Lang, Text),
+	?STREAM_ERRORT("host-gone", Lang, Text)).
+-define(SERRT_HOST_UNKNOWN(Lang, Text),
+	?STREAM_ERRORT("host-unknown", Lang, Text)).
+-define(SERRT_IMPROPER_ADDRESSING(Lang, Text),
+	?STREAM_ERRORT("improper-addressing", Lang, Text)).
+-define(SERRT_INTERNAL_SERVER_ERROR(Lang, Text),
+	?STREAM_ERRORT("internal-server-error", Lang, Text)).
+-define(SERRT_INVALID_FROM(Lang, Text),
+	?STREAM_ERRORT("invalid-from", Lang, Text)).
+-define(SERRT_INVALID_ID(Lang, Text),
+	?STREAM_ERRORT("invalid-id", Lang, Text)).
+-define(SERRT_INVALID_NAMESPACE(Lang, Text),
+	?STREAM_ERRORT("invalid-namespace", Lang, Text)).
+-define(SERRT_INVALID_XML(Lang, Text),
+	?STREAM_ERRORT("invalid-xml", Lang, Text)).
+-define(SERRT_NOT_AUTHORIZED(Lang, Text),
+	?STREAM_ERRORT("not-authorized", Lang, Text)).
+-define(SERRT_POLICY_VIOLATION(Lang, Text),
+	?STREAM_ERRORT("policy-violation", Lang, Text)).
+-define(SERRT_REMOTE_CONNECTION_FAILED(Lang, Text),
+	?STREAM_ERRORT("remote-connection-failed", Lang, Text)).
+-define(SERRT_RESOURSE_CONSTRAINT(Lang, Text),
+	?STREAM_ERRORT("resource-constraint", Lang, Text)).
+-define(SERRT_RESTRICTED_XML(Lang, Text),
+	?STREAM_ERRORT("restricted-xml", Lang, Text)).
+% TODO: include hostname or IP
+-define(SERRT_SEE_OTHER_HOST(Lang, Text),
+	?STREAM_ERRORT("see-other-host", Lang, Text)).
+-define(SERRT_SYSTEM_SHUTDOWN(Lang, Text),
+	?STREAM_ERRORT("system-shutdown", Lang, Text)).
+-define(SERRT_UNSUPPORTED_ENCODING(Lang, Text),
+	?STREAM_ERRORT("unsupported-encoding", Lang, Text)).
+-define(SERRT_UNSUPPORTED_STANZA_TYPE(Lang, Text),
+	?STREAM_ERRORT("unsupported-stanza-type", Lang, Text)).
+-define(SERRT_UNSUPPORTED_VERSION(Lang, Text),
+	?STREAM_ERRORT("unsupported-version", Lang, Text)).
+-define(SERRT_XML_NOT_WELL_FORMED(Lang, Text),
+	?STREAM_ERRORT("xml-not-well-formed", Lang, Text)).
+%-define(SERRT_(Lang, Text),
+%	?STREAM_ERRORT("", Lang, Text)).
+
+
+-record(jid, {user, server, resource,
+	      luser, lserver, prep_resource}).
+
+-record(iq, {id = "",
+	     type,
+	     xmlns = "",
+	     lang = "",
+	     sub_el}).
+
diff -r d551623afde5 deps/exmpp/libtool
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/libtool	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,7223 @@
+#! /bin/bash
+
+# libtoolT - Provide generalized library-building support services.
+# Generated automatically by  (GNU exmpp 0.9.2)
+# NOTE: Changes made to this file will be lost: look at ltmain.sh.
+#
+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001
+# Free Software Foundation, Inc.
+#
+# This file is part of GNU Libtool:
+# Originally by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+#
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+# A sed program that does not truncate output.
+SED="/bin/sed"
+
+# Sed that helps us avoid accidentally triggering echo(1) options like -n.
+Xsed="/bin/sed -e 1s/^X//"
+
+# The HP-UX ksh and POSIX shell print the target directory to stdout
+# if CDPATH is set.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+# The names of the tagged configurations supported by this script.
+available_tags=""
+
+# ### BEGIN LIBTOOL CONFIG
+
+# Libtool was configured on host pluto:
+
+# Shell to use when invoking shell scripts.
+SHELL="/bin/bash"
+
+# Whether or not to build shared libraries.
+build_libtool_libs=yes
+
+# Whether or not to build static libraries.
+build_old_libs=no
+
+# Whether or not to add -lc for building shared libraries.
+build_libtool_need_lc=no
+
+# Whether or not to disallow shared libs when runtime libs are static
+allow_libtool_libs_with_static_runtimes=no
+
+# Whether or not to optimize for fast installation.
+fast_install=yes
+
+# The host system.
+host_alias=
+host=i686-pc-linux-gnu
+host_os=linux-gnu
+
+# The build system.
+build_alias=
+build=i686-pc-linux-gnu
+build_os=linux-gnu
+
+# An echo program that does not interpret backslashes.
+echo="echo"
+
+# The archiver.
+AR="ar"
+AR_FLAGS="cru"
+
+# A C compiler.
+LTCC="gcc -std=gnu99"
+
+# LTCC compiler flags.
+LTCFLAGS="-g -O2"
+
+# A language-specific compiler.
+CC="gcc -std=gnu99"
+
+# Is the compiler the GNU C compiler?
+with_gcc=yes
+
+# An ERE matcher.
+EGREP="/bin/grep -E"
+
+# The linker used to build libraries.
+LD="/usr/bin/ld"
+
+# Whether we need hard or soft links.
+LN_S="ln -s"
+
+# A BSD-compatible nm program.
+NM="/usr/bin/nm -B"
+
+# A symbol stripping program
+STRIP="strip"
+
+# Used to examine libraries when file_magic_cmd begins "file"
+MAGIC_CMD=file
+
+# Used on cygwin: DLL creation program.
+DLLTOOL="dlltool"
+
+# Used on cygwin: object dumper.
+OBJDUMP="objdump"
+
+# Used on cygwin: assembler.
+AS="as"
+
+# The name of the directory that contains temporary libtool files.
+objdir=.libs
+
+# How to create reloadable object files.
+reload_flag=" -r"
+reload_cmds="\$LD\$reload_flag -o \$output\$reload_objs"
+
+# How to pass a linker flag through the compiler.
+wl="-Wl,"
+
+# Object file suffix (normally "o").
+objext="o"
+
+# Old archive suffix (normally "a").
+libext="a"
+
+# Shared library suffix (normally ".so").
+shrext_cmds='.so'
+
+# Executable file suffix (normally "").
+exeext=""
+
+# Additional compiler flags for building library objects.
+pic_flag=" -fPIC -DPIC"
+pic_mode=default
+
+# What is the maximum length of a command?
+max_cmd_len=32768
+
+# Does compiler simultaneously support -c and -o options?
+compiler_c_o="yes"
+
+# Must we lock files when doing compilation?
+need_locks="no"
+
+# Do we need the lib prefix for modules?
+need_lib_prefix=no
+
+# Do we need a version for libraries?
+need_version=no
+
+# Whether dlopen is supported.
+dlopen_support=unknown
+
+# Whether dlopen of programs is supported.
+dlopen_self=unknown
+
+# Whether dlopen of statically linked programs is supported.
+dlopen_self_static=unknown
+
+# Compiler flag to prevent dynamic linking.
+link_static_flag="-static"
+
+# Compiler flag to turn off builtin functions.
+no_builtin_flag=" -fno-builtin"
+
+# Compiler flag to allow reflexive dlopens.
+export_dynamic_flag_spec="\${wl}--export-dynamic"
+
+# Compiler flag to generate shared objects directly from archives.
+whole_archive_flag_spec="\${wl}--whole-archive\$convenience \${wl}--no-whole-archive"
+
+# Compiler flag to generate thread-safe objects.
+thread_safe_flag_spec=""
+
+# Library versioning type.
+version_type=linux
+
+# Format of library name prefix.
+libname_spec="lib\$name"
+
+# List of archive names.  First name is the real one, the rest are links.
+# The last name is the one that the linker finds with -lNAME.
+library_names_spec="\${libname}\${release}\${shared_ext}\$versuffix \${libname}\${release}\${shared_ext}\$major \$libname\${shared_ext}"
+
+# The coded name of the library, if different from the real name.
+soname_spec="\${libname}\${release}\${shared_ext}\$major"
+
+# Commands used to build and install an old-style archive.
+RANLIB="ranlib"
+old_archive_cmds="\$AR \$AR_FLAGS \$oldlib\$oldobjs\$old_deplibs~\$RANLIB \$oldlib"
+old_postinstall_cmds="chmod 644 \$oldlib~\$RANLIB \$oldlib"
+old_postuninstall_cmds=""
+
+# Create an old-style archive from a shared archive.
+old_archive_from_new_cmds=""
+
+# Create a temporary old-style archive to link instead of a shared archive.
+old_archive_from_expsyms_cmds=""
+
+# Commands used to build and install a shared archive.
+archive_cmds="\$CC -shared \$libobjs \$deplibs \$compiler_flags \${wl}-soname \$wl\$soname -o \$lib"
+archive_expsym_cmds="\$echo \\\"{ global:\\\" > \$output_objdir/\$libname.ver~
+  cat \$export_symbols | sed -e \\\"s/\\\\(.*\\\\)/\\\\1;/\\\" >> \$output_objdir/\$libname.ver~
+  \$echo \\\"local: *; };\\\" >> \$output_objdir/\$libname.ver~
+	  \$CC -shared \$libobjs \$deplibs \$compiler_flags \${wl}-soname \$wl\$soname \${wl}-version-script \${wl}\$output_objdir/\$libname.ver -o \$lib"
+postinstall_cmds=""
+postuninstall_cmds=""
+
+# Commands used to build a loadable module (assumed same as above if empty)
+module_cmds=""
+module_expsym_cmds=""
+
+# Commands to strip libraries.
+old_striplib="strip --strip-debug"
+striplib="strip --strip-unneeded"
+
+# Dependencies to place before the objects being linked to create a
+# shared library.
+predep_objects=""
+
+# Dependencies to place after the objects being linked to create a
+# shared library.
+postdep_objects=""
+
+# Dependencies to place before the objects being linked to create a
+# shared library.
+predeps=""
+
+# Dependencies to place after the objects being linked to create a
+# shared library.
+postdeps=""
+
+# The library search path used internally by the compiler when linking
+# a shared library.
+compiler_lib_search_path=""
+
+# Method to check whether dependent libraries are shared objects.
+deplibs_check_method="pass_all"
+
+# Command to use when deplibs_check_method == file_magic.
+file_magic_cmd="\$MAGIC_CMD"
+
+# Flag that allows shared libraries with undefined symbols to be built.
+allow_undefined_flag=""
+
+# Flag that forces no undefined symbols.
+no_undefined_flag=""
+
+# Commands used to finish a libtool library installation in a directory.
+finish_cmds="PATH=\\\"\\\$PATH:/sbin\\\" ldconfig -n \$libdir"
+
+# Same as above, but a single script fragment to be evaled but not shown.
+finish_eval=""
+
+# Take the output of nm and produce a listing of raw symbols and C names.
+global_symbol_pipe="sed -n -e 's/^.*[ 	]\\([ABCDGIRSTW][ABCDGIRSTW]*\\)[ 	][ 	]*\\([_A-Za-z][_A-Za-z0-9]*\\)\$/\\1 \\2 \\2/p'"
+
+# Transform the output of nm in a proper C declaration
+global_symbol_to_cdecl="sed -n -e 's/^. .* \\(.*\\)\$/extern int \\1;/p'"
+
+# Transform the output of nm in a C name address pair
+global_symbol_to_c_name_address="sed -n -e 's/^: \\([^ ]*\\) \$/  {\\\"\\1\\\", (lt_ptr) 0},/p' -e 's/^[BCDEGRST] \\([^ ]*\\) \\([^ ]*\\)\$/  {\"\\2\", (lt_ptr) \\&\\2},/p'"
+
+# This is the shared library runtime path variable.
+runpath_var=LD_RUN_PATH
+
+# This is the shared library path variable.
+shlibpath_var=LD_LIBRARY_PATH
+
+# Is shlibpath searched before the hard-coded library search path?
+shlibpath_overrides_runpath=no
+
+# How to hardcode a shared library path into an executable.
+hardcode_action=immediate
+
+# Whether we should hardcode library paths into libraries.
+hardcode_into_libs=yes
+
+# Flag to hardcode $libdir into a binary during linking.
+# This must work even if $libdir does not exist.
+hardcode_libdir_flag_spec="\${wl}--rpath \${wl}\$libdir"
+
+# If ld is used when linking, flag to hardcode $libdir into
+# a binary during linking. This must work even if $libdir does
+# not exist.
+hardcode_libdir_flag_spec_ld=""
+
+# Whether we need a single -rpath flag with a separated argument.
+hardcode_libdir_separator=""
+
+# Set to yes if using DIR/libNAME during linking hardcodes DIR into the
+# resulting binary.
+hardcode_direct=no
+
+# Set to yes if using the -LDIR flag during linking hardcodes DIR into the
+# resulting binary.
+hardcode_minus_L=no
+
+# Set to yes if using SHLIBPATH_VAR=DIR during linking hardcodes DIR into
+# the resulting binary.
+hardcode_shlibpath_var=unsupported
+
+# Set to yes if building a shared library automatically hardcodes DIR into the library
+# and all subsequent libraries and executables linked against it.
+hardcode_automatic=no
+
+# Variables whose values should be saved in libtool wrapper scripts and
+# restored at relink time.
+variables_saved_for_relink="PATH LD_LIBRARY_PATH LD_RUN_PATH GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH"
+
+# Whether libtool must link a program against all its dependency libraries.
+link_all_deplibs=no
+
+# Compile-time system search path for libraries
+sys_lib_search_path_spec=" /usr/lib/gcc/i486-linux-gnu/4.4.1/ /usr/lib/gcc/i486-linux-gnu/4.4.1/ /usr/lib/gcc/i486-linux-gnu/4.4.1/../../../../i486-linux-gnu/lib/i486-linux-gnu/4.4.1/ /usr/lib/gcc/i486-linux-gnu/4.4.1/../../../../i486-linux-gnu/lib/../lib/ /usr/lib/gcc/i486-linux-gnu/4.4.1/../../../i486-linux-gnu/4.4.1/ /usr/lib/gcc/i486-linux-gnu/4.4.1/../../../../lib/ /lib/i486-linux-gnu/4.4.1/ /lib/../lib/ /usr/lib/i486-linux-gnu/4.4.1/ /usr/lib/../lib/ /usr/lib/i486-linux-gnu/i486-linux-gnu/4.4.1/ /usr/lib/i486-linux-gnu/../lib/ /usr/lib/gcc/i486-linux-gnu/4.4.1/../../../../i486-linux-gnu/lib/ /usr/lib/gcc/i486-linux-gnu/4.4.1/../../../ /lib/ /usr/lib/ /usr/lib/i486-linux-gnu/"
+
+# Run-time system search path for libraries
+sys_lib_dlsearch_path_spec="/lib /usr/lib /lib/i486-linux-gnu /usr/lib/i486-linux-gnu /usr/lib/alsa-lib /usr/local/lib "
+
+# Fix the shell variable $srcfile for the compiler.
+fix_srcfile_path=""
+
+# Set to yes if exported symbols are required.
+always_export_symbols=no
+
+# The commands to list exported symbols.
+export_symbols_cmds="\$NM \$libobjs \$convenience | \$global_symbol_pipe | \$SED 's/.* //' | sort | uniq > \$export_symbols"
+
+# The commands to extract the exported symbol list from a shared archive.
+extract_expsyms_cmds=""
+
+# Symbols that should not be listed in the preloaded symbols.
+exclude_expsyms="_GLOBAL_OFFSET_TABLE_"
+
+# Symbols that must always be exported.
+include_expsyms=""
+
+# ### END LIBTOOL CONFIG
+
+# ltmain.sh - Provide generalized library-building support services.
+# NOTE: Changing this file will not affect anything until you rerun configure.
+#
+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005
+# Free Software Foundation, Inc.
+# Originally by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+#
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+basename="s,^.*/,,g"
+
+# Work around backward compatibility issue on IRIX 6.5. On IRIX 6.4+, sh
+# is ksh but when the shell is invoked as "sh" and the current value of
+# the _XPG environment variable is not equal to 1 (one), the special
+# positional parameter $0, within a function call, is the name of the
+# function.
+progpath="$0"
+
+# The name of this program:
+progname=`echo "$progpath" | $SED $basename`
+modename="$progname"
+
+# Global variables:
+EXIT_SUCCESS=0
+EXIT_FAILURE=1
+
+PROGRAM=ltmain.sh
+PACKAGE=libtool
+VERSION="1.5.22 Debian 1.5.22-4+etch1"
+TIMESTAMP=" (1.1220.2.365 2005/12/18 22:14:06)"
+
+# See if we are running on zsh, and set the options which allow our
+# commands through without removal of \ escapes.
+if test -n "${ZSH_VERSION+set}" ; then
+  setopt NO_GLOB_SUBST
+fi
+
+# Check that we have a working $echo.
+if test "X$1" = X--no-reexec; then
+  # Discard the --no-reexec flag, and continue.
+  shift
+elif test "X$1" = X--fallback-echo; then
+  # Avoid inline document here, it may be left over
+  :
+elif test "X`($echo '\t') 2>/dev/null`" = 'X\t'; then
+  # Yippee, $echo works!
+  :
+else
+  # Restart under the correct shell, and then maybe $echo will work.
+  exec $SHELL "$progpath" --no-reexec ${1+"$@"}
+fi
+
+if test "X$1" = X--fallback-echo; then
+  # used as fallback echo
+  shift
+  cat <<EOF
+$*
+EOF
+  exit $EXIT_SUCCESS
+fi
+
+default_mode=
+help="Try \`$progname --help' for more information."
+magic="%%%MAGIC variable%%%"
+mkdir="mkdir"
+mv="mv -f"
+rm="rm -f"
+
+# Sed substitution that helps us do robust quoting.  It backslashifies
+# metacharacters that are still active within double-quoted strings.
+Xsed="${SED}"' -e 1s/^X//'
+sed_quote_subst='s/\([\\`\\"$\\\\]\)/\\\1/g'
+# test EBCDIC or ASCII
+case `echo X|tr X '\101'` in
+ A) # ASCII based system
+    # \n is not interpreted correctly by Solaris 8 /usr/ucb/tr
+  SP2NL='tr \040 \012'
+  NL2SP='tr \015\012 \040\040'
+  ;;
+ *) # EBCDIC based system
+  SP2NL='tr \100 \n'
+  NL2SP='tr \r\n \100\100'
+  ;;
+esac
+
+# NLS nuisances.
+# Only set LANG and LC_ALL to C if already set.
+# These must not be set unconditionally because not all systems understand
+# e.g. LANG=C (notably SCO).
+# We save the old values to restore during execute mode.
+if test "${LC_ALL+set}" = set; then
+  save_LC_ALL="$LC_ALL"; LC_ALL=C; export LC_ALL
+fi
+if test "${LANG+set}" = set; then
+  save_LANG="$LANG"; LANG=C; export LANG
+fi
+
+# Make sure IFS has a sensible default
+lt_nl='
+'
+IFS=" 	$lt_nl"
+
+if test "$build_libtool_libs" != yes && test "$build_old_libs" != yes; then
+  $echo "$modename: not configured to build any kind of library" 1>&2
+  $echo "Fatal configuration error.  See the $PACKAGE docs for more information." 1>&2
+  exit $EXIT_FAILURE
+fi
+
+# Global variables.
+mode=$default_mode
+nonopt=
+prev=
+prevopt=
+run=
+show="$echo"
+show_help=
+execute_dlfiles=
+duplicate_deps=no
+preserve_args=
+lo2o="s/\\.lo\$/.${objext}/"
+o2lo="s/\\.${objext}\$/.lo/"
+
+#####################################
+# Shell function definitions:
+# This seems to be the best place for them
+
+# func_mktempdir [string]
+# Make a temporary directory that won't clash with other running
+# libtool processes, and avoids race conditions if possible.  If
+# given, STRING is the basename for that directory.
+func_mktempdir ()
+{
+    my_template="${TMPDIR-/tmp}/${1-$progname}"
+
+    if test "$run" = ":"; then
+      # Return a directory name, but don't create it in dry-run mode
+      my_tmpdir="${my_template}-$$"
+    else
+
+      # If mktemp works, use that first and foremost
+      my_tmpdir=`mktemp -d "${my_template}-XXXXXXXX" 2>/dev/null`
+
+      if test ! -d "$my_tmpdir"; then
+	# Failing that, at least try and use $RANDOM to avoid a race
+	my_tmpdir="${my_template}-${RANDOM-0}$$"
+
+	save_mktempdir_umask=`umask`
+	umask 0077
+	$mkdir "$my_tmpdir"
+	umask $save_mktempdir_umask
+      fi
+
+      # If we're not in dry-run mode, bomb out on failure
+      test -d "$my_tmpdir" || {
+        $echo "cannot create temporary directory \`$my_tmpdir'" 1>&2
+	exit $EXIT_FAILURE
+      }
+    fi
+
+    $echo "X$my_tmpdir" | $Xsed
+}
+
+
+# func_win32_libid arg
+# return the library type of file 'arg'
+#
+# Need a lot of goo to handle *both* DLLs and import libs
+# Has to be a shell function in order to 'eat' the argument
+# that is supplied when $file_magic_command is called.
+func_win32_libid ()
+{
+  win32_libid_type="unknown"
+  win32_fileres=`file -L $1 2>/dev/null`
+  case $win32_fileres in
+  *ar\ archive\ import\ library*) # definitely import
+    win32_libid_type="x86 archive import"
+    ;;
+  *ar\ archive*) # could be an import, or static
+    if eval $OBJDUMP -f $1 | $SED -e '10q' 2>/dev/null | \
+      $EGREP -e 'file format pe-i386(.*architecture: i386)?' >/dev/null ; then
+      win32_nmres=`eval $NM -f posix -A $1 | \
+	$SED -n -e '1,100{/ I /{s,.*,import,;p;q;};}'`
+      case $win32_nmres in
+      import*)  win32_libid_type="x86 archive import";;
+      *)        win32_libid_type="x86 archive static";;
+      esac
+    fi
+    ;;
+  *DLL*)
+    win32_libid_type="x86 DLL"
+    ;;
+  *executable*) # but shell scripts are "executable" too...
+    case $win32_fileres in
+    *MS\ Windows\ PE\ Intel*)
+      win32_libid_type="x86 DLL"
+      ;;
+    esac
+    ;;
+  esac
+  $echo $win32_libid_type
+}
+
+
+# func_infer_tag arg
+# Infer tagged configuration to use if any are available and
+# if one wasn't chosen via the "--tag" command line option.
+# Only attempt this if the compiler in the base compile
+# command doesn't match the default compiler.
+# arg is usually of the form 'gcc ...'
+func_infer_tag ()
+{
+    if test -n "$available_tags" && test -z "$tagname"; then
+      CC_quoted=
+      for arg in $CC; do
+	case $arg in
+	  *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	  arg="\"$arg\""
+	  ;;
+	esac
+	CC_quoted="$CC_quoted $arg"
+      done
+      case $@ in
+      # Blanks in the command may have been stripped by the calling shell,
+      # but not from the CC environment variable when configure was run.
+      " $CC "* | "$CC "* | " `$echo $CC` "* | "`$echo $CC` "* | " $CC_quoted"* | "$CC_quoted "* | " `$echo $CC_quoted` "* | "`$echo $CC_quoted` "*) ;;
+      # Blanks at the start of $base_compile will cause this to fail
+      # if we don't check for them as well.
+      *)
+	for z in $available_tags; do
+	  if grep "^# ### BEGIN LIBTOOL TAG CONFIG: $z$" < "$progpath" > /dev/null; then
+	    # Evaluate the configuration.
+	    eval "`${SED} -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^# ### END LIBTOOL TAG CONFIG: '$z'$/p' < $progpath`"
+	    CC_quoted=
+	    for arg in $CC; do
+	    # Double-quote args containing other shell metacharacters.
+	    case $arg in
+	      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	      arg="\"$arg\""
+	      ;;
+	    esac
+	    CC_quoted="$CC_quoted $arg"
+	  done
+	    case "$@ " in
+	      " $CC "* | "$CC "* | " `$echo $CC` "* | "`$echo $CC` "* | " $CC_quoted"* | "$CC_quoted "* | " `$echo $CC_quoted` "* | "`$echo $CC_quoted` "*)
+	      # The compiler in the base compile command matches
+	      # the one in the tagged configuration.
+	      # Assume this is the tagged configuration we want.
+	      tagname=$z
+	      break
+	      ;;
+	    esac
+	  fi
+	done
+	# If $tagname still isn't set, then no tagged configuration
+	# was found and let the user know that the "--tag" command
+	# line option must be used.
+	if test -z "$tagname"; then
+	  $echo "$modename: unable to infer tagged configuration"
+	  $echo "$modename: specify a tag with \`--tag'" 1>&2
+	  exit $EXIT_FAILURE
+#        else
+#          $echo "$modename: using $tagname tagged configuration"
+	fi
+	;;
+      esac
+    fi
+}
+
+
+# func_extract_an_archive dir oldlib
+func_extract_an_archive ()
+{
+    f_ex_an_ar_dir="$1"; shift
+    f_ex_an_ar_oldlib="$1"
+
+    $show "(cd $f_ex_an_ar_dir && $AR x $f_ex_an_ar_oldlib)"
+    $run eval "(cd \$f_ex_an_ar_dir && $AR x \$f_ex_an_ar_oldlib)" || exit $?
+    if ($AR t "$f_ex_an_ar_oldlib" | sort | sort -uc >/dev/null 2>&1); then
+     :
+    else
+      $echo "$modename: ERROR: object name conflicts: $f_ex_an_ar_dir/$f_ex_an_ar_oldlib" 1>&2
+      exit $EXIT_FAILURE
+    fi
+}
+
+# func_extract_archives gentop oldlib ...
+func_extract_archives ()
+{
+    my_gentop="$1"; shift
+    my_oldlibs=${1+"$@"}
+    my_oldobjs=""
+    my_xlib=""
+    my_xabs=""
+    my_xdir=""
+    my_status=""
+
+    $show "${rm}r $my_gentop"
+    $run ${rm}r "$my_gentop"
+    $show "$mkdir $my_gentop"
+    $run $mkdir "$my_gentop"
+    my_status=$?
+    if test "$my_status" -ne 0 && test ! -d "$my_gentop"; then
+      exit $my_status
+    fi
+
+    for my_xlib in $my_oldlibs; do
+      # Extract the objects.
+      case $my_xlib in
+	[\\/]* | [A-Za-z]:[\\/]*) my_xabs="$my_xlib" ;;
+	*) my_xabs=`pwd`"/$my_xlib" ;;
+      esac
+      my_xlib=`$echo "X$my_xlib" | $Xsed -e 's%^.*/%%'`
+      my_xdir="$my_gentop/$my_xlib"
+
+      $show "${rm}r $my_xdir"
+      $run ${rm}r "$my_xdir"
+      $show "$mkdir $my_xdir"
+      $run $mkdir "$my_xdir"
+      exit_status=$?
+      if test "$exit_status" -ne 0 && test ! -d "$my_xdir"; then
+	exit $exit_status
+      fi
+      case $host in
+      *-darwin*)
+	$show "Extracting $my_xabs"
+	# Do not bother doing anything if just a dry run
+	if test -z "$run"; then
+	  darwin_orig_dir=`pwd`
+	  cd $my_xdir || exit $?
+	  darwin_archive=$my_xabs
+	  darwin_curdir=`pwd`
+	  darwin_base_archive=`$echo "X$darwin_archive" | $Xsed -e 's%^.*/%%'`
+	  darwin_arches=`lipo -info "$darwin_archive" 2>/dev/null | $EGREP Architectures 2>/dev/null`
+	  if test -n "$darwin_arches"; then 
+	    darwin_arches=`echo "$darwin_arches" | $SED -e 's/.*are://'`
+	    darwin_arch=
+	    $show "$darwin_base_archive has multiple architectures $darwin_arches"
+	    for darwin_arch in  $darwin_arches ; do
+	      mkdir -p "unfat-$$/${darwin_base_archive}-${darwin_arch}"
+	      lipo -thin $darwin_arch -output "unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}" "${darwin_archive}"
+	      cd "unfat-$$/${darwin_base_archive}-${darwin_arch}"
+	      func_extract_an_archive "`pwd`" "${darwin_base_archive}"
+	      cd "$darwin_curdir"
+	      $rm "unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}"
+	    done # $darwin_arches
+      ## Okay now we have a bunch of thin objects, gotta fatten them up :)
+	    darwin_filelist=`find unfat-$$ -type f -name \*.o -print -o -name \*.lo -print| xargs basename | sort -u | $NL2SP`
+	    darwin_file=
+	    darwin_files=
+	    for darwin_file in $darwin_filelist; do
+	      darwin_files=`find unfat-$$ -name $darwin_file -print | $NL2SP`
+	      lipo -create -output "$darwin_file" $darwin_files
+	    done # $darwin_filelist
+	    ${rm}r unfat-$$
+	    cd "$darwin_orig_dir"
+	  else
+	    cd "$darwin_orig_dir"
+ 	    func_extract_an_archive "$my_xdir" "$my_xabs"
+	  fi # $darwin_arches
+	fi # $run
+	;;
+      *)
+        func_extract_an_archive "$my_xdir" "$my_xabs"
+        ;;
+      esac
+      my_oldobjs="$my_oldobjs "`find $my_xdir -name \*.$objext -print -o -name \*.lo -print | $NL2SP`
+    done
+    func_extract_archives_result="$my_oldobjs"
+}
+# End of Shell function definitions
+#####################################
+
+# Darwin sucks
+eval std_shrext=\"$shrext_cmds\"
+
+disable_libs=no
+
+# Parse our command line options once, thoroughly.
+while test "$#" -gt 0
+do
+  arg="$1"
+  shift
+
+  case $arg in
+  -*=*) optarg=`$echo "X$arg" | $Xsed -e 's/[-_a-zA-Z0-9]*=//'` ;;
+  *) optarg= ;;
+  esac
+
+  # If the previous option needs an argument, assign it.
+  if test -n "$prev"; then
+    case $prev in
+    execute_dlfiles)
+      execute_dlfiles="$execute_dlfiles $arg"
+      ;;
+    tag)
+      tagname="$arg"
+      preserve_args="${preserve_args}=$arg"
+
+      # Check whether tagname contains only valid characters
+      case $tagname in
+      *[!-_A-Za-z0-9,/]*)
+	$echo "$progname: invalid tag name: $tagname" 1>&2
+	exit $EXIT_FAILURE
+	;;
+      esac
+
+      case $tagname in
+      CC)
+	# Don't test for the "default" C tag, as we know, it's there, but
+	# not specially marked.
+	;;
+      *)
+	if grep "^# ### BEGIN LIBTOOL TAG CONFIG: $tagname$" < "$progpath" > /dev/null; then
+	  taglist="$taglist $tagname"
+	  # Evaluate the configuration.
+	  eval "`${SED} -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$tagname'$/,/^# ### END LIBTOOL TAG CONFIG: '$tagname'$/p' < $progpath`"
+	else
+	  $echo "$progname: ignoring unknown tag $tagname" 1>&2
+	fi
+	;;
+      esac
+      ;;
+    *)
+      eval "$prev=\$arg"
+      ;;
+    esac
+
+    prev=
+    prevopt=
+    continue
+  fi
+
+  # Have we seen a non-optional argument yet?
+  case $arg in
+  --help)
+    show_help=yes
+    ;;
+
+  --version)
+    $echo "$PROGRAM (GNU $PACKAGE) $VERSION$TIMESTAMP"
+    $echo
+    $echo "Copyright (C) 2005  Free Software Foundation, Inc."
+    $echo "This is free software; see the source for copying conditions.  There is NO"
+    $echo "warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
+    exit $?
+    ;;
+
+  --config)
+    ${SED} -e '1,/^# ### BEGIN LIBTOOL CONFIG/d' -e '/^# ### END LIBTOOL CONFIG/,$d' $progpath
+    # Now print the configurations for the tags.
+    for tagname in $taglist; do
+      ${SED} -n -e "/^# ### BEGIN LIBTOOL TAG CONFIG: $tagname$/,/^# ### END LIBTOOL TAG CONFIG: $tagname$/p" < "$progpath"
+    done
+    exit $?
+    ;;
+
+  --debug)
+    $echo "$progname: enabling shell trace mode"
+    set -x
+    preserve_args="$preserve_args $arg"
+    ;;
+
+  --dry-run | -n)
+    run=:
+    ;;
+
+  --features)
+    $echo "host: $host"
+    if test "$build_libtool_libs" = yes; then
+      $echo "enable shared libraries"
+    else
+      $echo "disable shared libraries"
+    fi
+    if test "$build_old_libs" = yes; then
+      $echo "enable static libraries"
+    else
+      $echo "disable static libraries"
+    fi
+    exit $?
+    ;;
+
+  --finish) mode="finish" ;;
+
+  --mode) prevopt="--mode" prev=mode ;;
+  --mode=*) mode="$optarg" ;;
+
+  --preserve-dup-deps) duplicate_deps="yes" ;;
+
+  --quiet | --silent)
+    show=:
+    preserve_args="$preserve_args $arg"
+    ;;
+
+  --tag)
+    prevopt="--tag"
+    prev=tag
+    preserve_args="$preserve_args --tag"
+    ;;
+  --tag=*)
+    set tag "$optarg" ${1+"$@"}
+    shift
+    prev=tag
+    preserve_args="$preserve_args --tag"
+    ;;
+
+  -dlopen)
+    prevopt="-dlopen"
+    prev=execute_dlfiles
+    ;;
+
+  -*)
+    $echo "$modename: unrecognized option \`$arg'" 1>&2
+    $echo "$help" 1>&2
+    exit $EXIT_FAILURE
+    ;;
+
+  *)
+    nonopt="$arg"
+    break
+    ;;
+  esac
+done
+
+if test -n "$prevopt"; then
+  $echo "$modename: option \`$prevopt' requires an argument" 1>&2
+  $echo "$help" 1>&2
+  exit $EXIT_FAILURE
+fi
+
+case $disable_libs in
+no) 
+  ;;
+shared)
+  build_libtool_libs=no
+  build_old_libs=yes
+  ;;
+static)
+  build_old_libs=`case $build_libtool_libs in yes) echo no;; *) echo yes;; esac`
+  ;;
+esac
+
+# If this variable is set in any of the actions, the command in it
+# will be execed at the end.  This prevents here-documents from being
+# left over by shells.
+exec_cmd=
+
+if test -z "$show_help"; then
+
+  # Infer the operation mode.
+  if test -z "$mode"; then
+    $echo "*** Warning: inferring the mode of operation is deprecated." 1>&2
+    $echo "*** Future versions of Libtool will require --mode=MODE be specified." 1>&2
+    case $nonopt in
+    *cc | cc* | *++ | gcc* | *-gcc* | g++* | xlc*)
+      mode=link
+      for arg
+      do
+	case $arg in
+	-c)
+	   mode=compile
+	   break
+	   ;;
+	esac
+      done
+      ;;
+    *db | *dbx | *strace | *truss)
+      mode=execute
+      ;;
+    *install*|cp|mv)
+      mode=install
+      ;;
+    *rm)
+      mode=uninstall
+      ;;
+    *)
+      # If we have no mode, but dlfiles were specified, then do execute mode.
+      test -n "$execute_dlfiles" && mode=execute
+
+      # Just use the default operation mode.
+      if test -z "$mode"; then
+	if test -n "$nonopt"; then
+	  $echo "$modename: warning: cannot infer operation mode from \`$nonopt'" 1>&2
+	else
+	  $echo "$modename: warning: cannot infer operation mode without MODE-ARGS" 1>&2
+	fi
+      fi
+      ;;
+    esac
+  fi
+
+  # Only execute mode is allowed to have -dlopen flags.
+  if test -n "$execute_dlfiles" && test "$mode" != execute; then
+    $echo "$modename: unrecognized option \`-dlopen'" 1>&2
+    $echo "$help" 1>&2
+    exit $EXIT_FAILURE
+  fi
+
+  # Change the help message to a mode-specific one.
+  generic_help="$help"
+  help="Try \`$modename --help --mode=$mode' for more information."
+
+  # These modes are in order of execution frequency so that they run quickly.
+  case $mode in
+  # libtool compile mode
+  compile)
+    modename="$modename: compile"
+    # Get the compilation command and the source file.
+    base_compile=
+    srcfile="$nonopt"  #  always keep a non-empty value in "srcfile"
+    suppress_opt=yes
+    suppress_output=
+    arg_mode=normal
+    libobj=
+    later=
+
+    for arg
+    do
+      case $arg_mode in
+      arg  )
+	# do not "continue".  Instead, add this to base_compile
+	lastarg="$arg"
+	arg_mode=normal
+	;;
+
+      target )
+	libobj="$arg"
+	arg_mode=normal
+	continue
+	;;
+
+      normal )
+	# Accept any command-line options.
+	case $arg in
+	-o)
+	  if test -n "$libobj" ; then
+	    $echo "$modename: you cannot specify \`-o' more than once" 1>&2
+	    exit $EXIT_FAILURE
+	  fi
+	  arg_mode=target
+	  continue
+	  ;;
+
+	-static | -prefer-pic | -prefer-non-pic)
+	  later="$later $arg"
+	  continue
+	  ;;
+
+	-no-suppress)
+	  suppress_opt=no
+	  continue
+	  ;;
+
+	-Xcompiler)
+	  arg_mode=arg  #  the next one goes into the "base_compile" arg list
+	  continue      #  The current "srcfile" will either be retained or
+	  ;;            #  replaced later.  I would guess that would be a bug.
+
+	-Wc,*)
+	  args=`$echo "X$arg" | $Xsed -e "s/^-Wc,//"`
+	  lastarg=
+	  save_ifs="$IFS"; IFS=','
+ 	  for arg in $args; do
+	    IFS="$save_ifs"
+
+	    # Double-quote args containing other shell metacharacters.
+	    # Many Bourne shells cannot handle close brackets correctly
+	    # in scan sets, so we specify it separately.
+	    case $arg in
+	      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	      arg="\"$arg\""
+	      ;;
+	    esac
+	    lastarg="$lastarg $arg"
+	  done
+	  IFS="$save_ifs"
+	  lastarg=`$echo "X$lastarg" | $Xsed -e "s/^ //"`
+
+	  # Add the arguments to base_compile.
+	  base_compile="$base_compile $lastarg"
+	  continue
+	  ;;
+
+	* )
+	  # Accept the current argument as the source file.
+	  # The previous "srcfile" becomes the current argument.
+	  #
+	  lastarg="$srcfile"
+	  srcfile="$arg"
+	  ;;
+	esac  #  case $arg
+	;;
+      esac    #  case $arg_mode
+
+      # Aesthetically quote the previous argument.
+      lastarg=`$echo "X$lastarg" | $Xsed -e "$sed_quote_subst"`
+
+      case $lastarg in
+      # Double-quote args containing other shell metacharacters.
+      # Many Bourne shells cannot handle close brackets correctly
+      # in scan sets, and some SunOS ksh mistreat backslash-escaping
+      # in scan sets (worked around with variable expansion),
+      # and furthermore cannot handle '|' '&' '(' ')' in scan sets 
+      # at all, so we specify them separately.
+      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	lastarg="\"$lastarg\""
+	;;
+      esac
+
+      base_compile="$base_compile $lastarg"
+    done # for arg
+
+    case $arg_mode in
+    arg)
+      $echo "$modename: you must specify an argument for -Xcompile"
+      exit $EXIT_FAILURE
+      ;;
+    target)
+      $echo "$modename: you must specify a target with \`-o'" 1>&2
+      exit $EXIT_FAILURE
+      ;;
+    *)
+      # Get the name of the library object.
+      [ -z "$libobj" ] && libobj=`$echo "X$srcfile" | $Xsed -e 's%^.*/%%'`
+      ;;
+    esac
+
+    # Recognize several different file suffixes.
+    # If the user specifies -o file.o, it is replaced with file.lo
+    xform='[cCFSifmso]'
+    case $libobj in
+    *.ada) xform=ada ;;
+    *.adb) xform=adb ;;
+    *.ads) xform=ads ;;
+    *.asm) xform=asm ;;
+    *.c++) xform=c++ ;;
+    *.cc) xform=cc ;;
+    *.ii) xform=ii ;;
+    *.class) xform=class ;;
+    *.cpp) xform=cpp ;;
+    *.cxx) xform=cxx ;;
+    *.f90) xform=f90 ;;
+    *.for) xform=for ;;
+    *.java) xform=java ;;
+    esac
+
+    libobj=`$echo "X$libobj" | $Xsed -e "s/\.$xform$/.lo/"`
+
+    case $libobj in
+    *.lo) obj=`$echo "X$libobj" | $Xsed -e "$lo2o"` ;;
+    *)
+      $echo "$modename: cannot determine name of library object from \`$libobj'" 1>&2
+      exit $EXIT_FAILURE
+      ;;
+    esac
+
+    func_infer_tag $base_compile
+
+    for arg in $later; do
+      case $arg in
+      -static)
+	build_old_libs=yes
+	continue
+	;;
+
+      -prefer-pic)
+	pic_mode=yes
+	continue
+	;;
+
+      -prefer-non-pic)
+	pic_mode=no
+	continue
+	;;
+      esac
+    done
+
+    qlibobj=`$echo "X$libobj" | $Xsed -e "$sed_quote_subst"`
+    case $qlibobj in
+      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	qlibobj="\"$qlibobj\"" ;;
+    esac
+    test "X$libobj" != "X$qlibobj" \
+	&& $echo "X$libobj" | grep '[]~#^*{};<>?"'"'"' 	&()|`$[]' \
+	&& $echo "$modename: libobj name \`$libobj' may not contain shell special characters."
+    objname=`$echo "X$obj" | $Xsed -e 's%^.*/%%'`
+    xdir=`$echo "X$obj" | $Xsed -e 's%/[^/]*$%%'`
+    if test "X$xdir" = "X$obj"; then
+      xdir=
+    else
+      xdir=$xdir/
+    fi
+    lobj=${xdir}$objdir/$objname
+
+    if test -z "$base_compile"; then
+      $echo "$modename: you must specify a compilation command" 1>&2
+      $echo "$help" 1>&2
+      exit $EXIT_FAILURE
+    fi
+
+    # Delete any leftover library objects.
+    if test "$build_old_libs" = yes; then
+      removelist="$obj $lobj $libobj ${libobj}T"
+    else
+      removelist="$lobj $libobj ${libobj}T"
+    fi
+
+    $run $rm $removelist
+    trap "$run $rm $removelist; exit $EXIT_FAILURE" 1 2 15
+
+    # On Cygwin there's no "real" PIC flag so we must build both object types
+    case $host_os in
+    cygwin* | mingw* | pw32* | os2*)
+      pic_mode=default
+      ;;
+    esac
+    if test "$pic_mode" = no && test "$deplibs_check_method" != pass_all; then
+      # non-PIC code in shared libraries is not supported
+      pic_mode=default
+    fi
+
+    # Calculate the filename of the output object if compiler does
+    # not support -o with -c
+    if test "$compiler_c_o" = no; then
+      output_obj=`$echo "X$srcfile" | $Xsed -e 's%^.*/%%' -e 's%\.[^.]*$%%'`.${objext}
+      lockfile="$output_obj.lock"
+      removelist="$removelist $output_obj $lockfile"
+      trap "$run $rm $removelist; exit $EXIT_FAILURE" 1 2 15
+    else
+      output_obj=
+      need_locks=no
+      lockfile=
+    fi
+
+    # Lock this critical section if it is needed
+    # We use this script file to make the link, it avoids creating a new file
+    if test "$need_locks" = yes; then
+      until $run ln "$progpath" "$lockfile" 2>/dev/null; do
+	$show "Waiting for $lockfile to be removed"
+	sleep 2
+      done
+    elif test "$need_locks" = warn; then
+      if test -f "$lockfile"; then
+	$echo "\
+*** ERROR, $lockfile exists and contains:
+`cat $lockfile 2>/dev/null`
+
+This indicates that another process is trying to use the same
+temporary object file, and libtool could not work around it because
+your compiler does not support \`-c' and \`-o' together.  If you
+repeat this compilation, it may succeed, by chance, but you had better
+avoid parallel builds (make -j) in this platform, or get a better
+compiler."
+
+	$run $rm $removelist
+	exit $EXIT_FAILURE
+      fi
+      $echo "$srcfile" > "$lockfile"
+    fi
+
+    if test -n "$fix_srcfile_path"; then
+      eval srcfile=\"$fix_srcfile_path\"
+    fi
+    qsrcfile=`$echo "X$srcfile" | $Xsed -e "$sed_quote_subst"`
+    case $qsrcfile in
+      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+      qsrcfile="\"$qsrcfile\"" ;;
+    esac
+
+    $run $rm "$libobj" "${libobj}T"
+
+    # Create a libtool object file (analogous to a ".la" file),
+    # but don't create it if we're doing a dry run.
+    test -z "$run" && cat > ${libobj}T <<EOF
+# $libobj - a libtool object file
+# Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP
+#
+# Please DO NOT delete this file!
+# It is necessary for linking the library.
+
+# Name of the PIC object.
+EOF
+
+    # Only build a PIC object if we are building libtool libraries.
+    if test "$build_libtool_libs" = yes; then
+      # Without this assignment, base_compile gets emptied.
+      fbsd_hideous_sh_bug=$base_compile
+
+      if test "$pic_mode" != no; then
+	command="$base_compile $qsrcfile $pic_flag"
+      else
+	# Don't build PIC code
+	command="$base_compile $qsrcfile"
+      fi
+
+      if test ! -d "${xdir}$objdir"; then
+	$show "$mkdir ${xdir}$objdir"
+	$run $mkdir ${xdir}$objdir
+	exit_status=$?
+	if test "$exit_status" -ne 0 && test ! -d "${xdir}$objdir"; then
+	  exit $exit_status
+	fi
+      fi
+
+      if test -z "$output_obj"; then
+	# Place PIC objects in $objdir
+	command="$command -o $lobj"
+      fi
+
+      $run $rm "$lobj" "$output_obj"
+
+      $show "$command"
+      if $run eval "$command"; then :
+      else
+	test -n "$output_obj" && $run $rm $removelist
+	exit $EXIT_FAILURE
+      fi
+
+      if test "$need_locks" = warn &&
+	 test "X`cat $lockfile 2>/dev/null`" != "X$srcfile"; then
+	$echo "\
+*** ERROR, $lockfile contains:
+`cat $lockfile 2>/dev/null`
+
+but it should contain:
+$srcfile
+
+This indicates that another process is trying to use the same
+temporary object file, and libtool could not work around it because
+your compiler does not support \`-c' and \`-o' together.  If you
+repeat this compilation, it may succeed, by chance, but you had better
+avoid parallel builds (make -j) in this platform, or get a better
+compiler."
+
+	$run $rm $removelist
+	exit $EXIT_FAILURE
+      fi
+
+      # Just move the object if needed, then go on to compile the next one
+      if test -n "$output_obj" && test "X$output_obj" != "X$lobj"; then
+	$show "$mv $output_obj $lobj"
+	if $run $mv $output_obj $lobj; then :
+	else
+	  error=$?
+	  $run $rm $removelist
+	  exit $error
+	fi
+      fi
+
+      # Append the name of the PIC object to the libtool object file.
+      test -z "$run" && cat >> ${libobj}T <<EOF
+pic_object='$objdir/$objname'
+
+EOF
+
+      # Allow error messages only from the first compilation.
+      if test "$suppress_opt" = yes; then
+        suppress_output=' >/dev/null 2>&1'
+      fi
+    else
+      # No PIC object so indicate it doesn't exist in the libtool
+      # object file.
+      test -z "$run" && cat >> ${libobj}T <<EOF
+pic_object=none
+
+EOF
+    fi
+
+    # Only build a position-dependent object if we build old libraries.
+    if test "$build_old_libs" = yes; then
+      if test "$pic_mode" != yes; then
+	# Don't build PIC code
+	command="$base_compile $qsrcfile"
+      else
+	command="$base_compile $qsrcfile $pic_flag"
+      fi
+      if test "$compiler_c_o" = yes; then
+	command="$command -o $obj"
+      fi
+
+      # Suppress compiler output if we already did a PIC compilation.
+      command="$command$suppress_output"
+      $run $rm "$obj" "$output_obj"
+      $show "$command"
+      if $run eval "$command"; then :
+      else
+	$run $rm $removelist
+	exit $EXIT_FAILURE
+      fi
+
+      if test "$need_locks" = warn &&
+	 test "X`cat $lockfile 2>/dev/null`" != "X$srcfile"; then
+	$echo "\
+*** ERROR, $lockfile contains:
+`cat $lockfile 2>/dev/null`
+
+but it should contain:
+$srcfile
+
+This indicates that another process is trying to use the same
+temporary object file, and libtool could not work around it because
+your compiler does not support \`-c' and \`-o' together.  If you
+repeat this compilation, it may succeed, by chance, but you had better
+avoid parallel builds (make -j) in this platform, or get a better
+compiler."
+
+	$run $rm $removelist
+	exit $EXIT_FAILURE
+      fi
+
+      # Just move the object if needed
+      if test -n "$output_obj" && test "X$output_obj" != "X$obj"; then
+	$show "$mv $output_obj $obj"
+	if $run $mv $output_obj $obj; then :
+	else
+	  error=$?
+	  $run $rm $removelist
+	  exit $error
+	fi
+      fi
+
+      # Append the name of the non-PIC object the libtool object file.
+      # Only append if the libtool object file exists.
+      test -z "$run" && cat >> ${libobj}T <<EOF
+# Name of the non-PIC object.
+non_pic_object='$objname'
+
+EOF
+    else
+      # Append the name of the non-PIC object the libtool object file.
+      # Only append if the libtool object file exists.
+      test -z "$run" && cat >> ${libobj}T <<EOF
+# Name of the non-PIC object.
+non_pic_object=none
+
+EOF
+    fi
+
+    $run $mv "${libobj}T" "${libobj}"
+
+    # Unlock the critical section if it was locked
+    if test "$need_locks" != no; then
+      $run $rm "$lockfile"
+    fi
+
+    exit $EXIT_SUCCESS
+    ;;
+
+  # libtool link mode
+  link | relink)
+    modename="$modename: link"
+    case $host in
+    *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2*)
+      # It is impossible to link a dll without this setting, and
+      # we shouldn't force the makefile maintainer to figure out
+      # which system we are compiling for in order to pass an extra
+      # flag for every libtool invocation.
+      # allow_undefined=no
+
+      # FIXME: Unfortunately, there are problems with the above when trying
+      # to make a dll which has undefined symbols, in which case not
+      # even a static library is built.  For now, we need to specify
+      # -no-undefined on the libtool link line when we can be certain
+      # that all symbols are satisfied, otherwise we get a static library.
+      allow_undefined=yes
+      ;;
+    *)
+      allow_undefined=yes
+      ;;
+    esac
+    libtool_args="$nonopt"
+    base_compile="$nonopt $@"
+    compile_command="$nonopt"
+    finalize_command="$nonopt"
+
+    compile_rpath=
+    finalize_rpath=
+    compile_shlibpath=
+    finalize_shlibpath=
+    convenience=
+    old_convenience=
+    deplibs=
+    old_deplibs=
+    compiler_flags=
+    linker_flags=
+    dllsearchpath=
+    lib_search_path=`pwd`
+    inst_prefix_dir=
+
+    avoid_version=no
+    dlfiles=
+    dlprefiles=
+    dlself=no
+    export_dynamic=no
+    export_symbols=
+    export_symbols_regex=
+    generated=
+    libobjs=
+    ltlibs=
+    module=no
+    no_install=no
+    objs=
+    non_pic_objects=
+    notinst_path= # paths that contain not-installed libtool libraries
+    precious_files_regex=
+    prefer_static_libs=no
+    preload=no
+    prev=
+    prevarg=
+    release=
+    rpath=
+    xrpath=
+    perm_rpath=
+    temp_rpath=
+    thread_safe=no
+    vinfo=
+    vinfo_number=no
+
+    func_infer_tag $base_compile
+
+    # We need to know -static, to get the right output filenames.
+    for arg
+    do
+      case $arg in
+      -all-static | -static)
+	if test "X$arg" = "X-all-static"; then
+	  if test "$build_libtool_libs" = yes && test -z "$link_static_flag"; then
+	    $echo "$modename: warning: complete static linking is impossible in this configuration" 1>&2
+	  fi
+	  if test -n "$link_static_flag"; then
+	    dlopen_self=$dlopen_self_static
+	  fi
+	  prefer_static_libs=yes
+	else
+	  if test -z "$pic_flag" && test -n "$link_static_flag"; then
+	    dlopen_self=$dlopen_self_static
+	  fi
+	  prefer_static_libs=built
+	fi
+	build_libtool_libs=no
+	build_old_libs=yes
+	break
+	;;
+      esac
+    done
+
+    # See if our shared archives depend on static archives.
+    test -n "$old_archive_from_new_cmds" && build_old_libs=yes
+
+    # Go through the arguments, transforming them on the way.
+    while test "$#" -gt 0; do
+      arg="$1"
+      shift
+      case $arg in
+      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	qarg=\"`$echo "X$arg" | $Xsed -e "$sed_quote_subst"`\" ### testsuite: skip nested quoting test
+	;;
+      *) qarg=$arg ;;
+      esac
+      libtool_args="$libtool_args $qarg"
+
+      # If the previous option needs an argument, assign it.
+      if test -n "$prev"; then
+	case $prev in
+	output)
+	  compile_command="$compile_command @OUTPUT@"
+	  finalize_command="$finalize_command @OUTPUT@"
+	  ;;
+	esac
+
+	case $prev in
+	dlfiles|dlprefiles)
+	  if test "$preload" = no; then
+	    # Add the symbol object into the linking commands.
+	    compile_command="$compile_command @SYMFILE@"
+	    finalize_command="$finalize_command @SYMFILE@"
+	    preload=yes
+	  fi
+	  case $arg in
+	  *.la | *.lo) ;;  # We handle these cases below.
+	  force)
+	    if test "$dlself" = no; then
+	      dlself=needless
+	      export_dynamic=yes
+	    fi
+	    prev=
+	    continue
+	    ;;
+	  self)
+	    if test "$prev" = dlprefiles; then
+	      dlself=yes
+	    elif test "$prev" = dlfiles && test "$dlopen_self" != yes; then
+	      dlself=yes
+	    else
+	      dlself=needless
+	      export_dynamic=yes
+	    fi
+	    prev=
+	    continue
+	    ;;
+	  *)
+	    if test "$prev" = dlfiles; then
+	      dlfiles="$dlfiles $arg"
+	    else
+	      dlprefiles="$dlprefiles $arg"
+	    fi
+	    prev=
+	    continue
+	    ;;
+	  esac
+	  ;;
+	expsyms)
+	  export_symbols="$arg"
+	  if test ! -f "$arg"; then
+	    $echo "$modename: symbol file \`$arg' does not exist"
+	    exit $EXIT_FAILURE
+	  fi
+	  prev=
+	  continue
+	  ;;
+	expsyms_regex)
+	  export_symbols_regex="$arg"
+	  prev=
+	  continue
+	  ;;
+	inst_prefix)
+	  inst_prefix_dir="$arg"
+	  prev=
+	  continue
+	  ;;
+	precious_regex)
+	  precious_files_regex="$arg"
+	  prev=
+	  continue
+	  ;;
+	release)
+	  release="-$arg"
+	  prev=
+	  continue
+	  ;;
+	objectlist)
+	  if test -f "$arg"; then
+	    save_arg=$arg
+	    moreargs=
+	    for fil in `cat $save_arg`
+	    do
+#	      moreargs="$moreargs $fil"
+	      arg=$fil
+	      # A libtool-controlled object.
+
+	      # Check to see that this really is a libtool object.
+	      if (${SED} -e '2q' $arg | grep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+		pic_object=
+		non_pic_object=
+
+		# Read the .lo file
+		# If there is no directory component, then add one.
+		case $arg in
+		*/* | *\\*) . $arg ;;
+		*) . ./$arg ;;
+		esac
+
+		if test -z "$pic_object" || \
+		   test -z "$non_pic_object" ||
+		   test "$pic_object" = none && \
+		   test "$non_pic_object" = none; then
+		  $echo "$modename: cannot find name of object for \`$arg'" 1>&2
+		  exit $EXIT_FAILURE
+		fi
+
+		# Extract subdirectory from the argument.
+		xdir=`$echo "X$arg" | $Xsed -e 's%/[^/]*$%%'`
+		if test "X$xdir" = "X$arg"; then
+		  xdir=
+		else
+		  xdir="$xdir/"
+		fi
+
+		if test "$pic_object" != none; then
+		  # Prepend the subdirectory the object is found in.
+		  pic_object="$xdir$pic_object"
+
+		  if test "$prev" = dlfiles; then
+		    if test "$build_libtool_libs" = yes && test "$dlopen_support" = yes; then
+		      dlfiles="$dlfiles $pic_object"
+		      prev=
+		      continue
+		    else
+		      # If libtool objects are unsupported, then we need to preload.
+		      prev=dlprefiles
+		    fi
+		  fi
+
+		  # CHECK ME:  I think I busted this.  -Ossama
+		  if test "$prev" = dlprefiles; then
+		    # Preload the old-style object.
+		    dlprefiles="$dlprefiles $pic_object"
+		    prev=
+		  fi
+
+		  # A PIC object.
+		  libobjs="$libobjs $pic_object"
+		  arg="$pic_object"
+		fi
+
+		# Non-PIC object.
+		if test "$non_pic_object" != none; then
+		  # Prepend the subdirectory the object is found in.
+		  non_pic_object="$xdir$non_pic_object"
+
+		  # A standard non-PIC object
+		  non_pic_objects="$non_pic_objects $non_pic_object"
+		  if test -z "$pic_object" || test "$pic_object" = none ; then
+		    arg="$non_pic_object"
+		  fi
+		else
+		  # If the PIC object exists, use it instead.
+		  # $xdir was prepended to $pic_object above.
+		  non_pic_object="$pic_object"
+		  non_pic_objects="$non_pic_objects $non_pic_object"
+		fi
+	      else
+		# Only an error if not doing a dry-run.
+		if test -z "$run"; then
+		  $echo "$modename: \`$arg' is not a valid libtool object" 1>&2
+		  exit $EXIT_FAILURE
+		else
+		  # Dry-run case.
+
+		  # Extract subdirectory from the argument.
+		  xdir=`$echo "X$arg" | $Xsed -e 's%/[^/]*$%%'`
+		  if test "X$xdir" = "X$arg"; then
+		    xdir=
+		  else
+		    xdir="$xdir/"
+		  fi
+
+		  pic_object=`$echo "X${xdir}${objdir}/${arg}" | $Xsed -e "$lo2o"`
+		  non_pic_object=`$echo "X${xdir}${arg}" | $Xsed -e "$lo2o"`
+		  libobjs="$libobjs $pic_object"
+		  non_pic_objects="$non_pic_objects $non_pic_object"
+		fi
+	      fi
+	    done
+	  else
+	    $echo "$modename: link input file \`$save_arg' does not exist"
+	    exit $EXIT_FAILURE
+	  fi
+	  arg=$save_arg
+	  prev=
+	  continue
+	  ;;
+	rpath | xrpath)
+	  # We need an absolute path.
+	  case $arg in
+	  [\\/]* | [A-Za-z]:[\\/]*) ;;
+	  *)
+	    $echo "$modename: only absolute run-paths are allowed" 1>&2
+	    exit $EXIT_FAILURE
+	    ;;
+	  esac
+	  if test "$prev" = rpath; then
+	    case "$rpath " in
+	    *" $arg "*) ;;
+	    *) rpath="$rpath $arg" ;;
+	    esac
+	  else
+	    case "$xrpath " in
+	    *" $arg "*) ;;
+	    *) xrpath="$xrpath $arg" ;;
+	    esac
+	  fi
+	  prev=
+	  continue
+	  ;;
+	xcompiler)
+	  compiler_flags="$compiler_flags $qarg"
+	  prev=
+	  compile_command="$compile_command $qarg"
+	  finalize_command="$finalize_command $qarg"
+	  continue
+	  ;;
+	xlinker)
+	  linker_flags="$linker_flags $qarg"
+	  compiler_flags="$compiler_flags $wl$qarg"
+	  prev=
+	  compile_command="$compile_command $wl$qarg"
+	  finalize_command="$finalize_command $wl$qarg"
+	  continue
+	  ;;
+	xcclinker)
+	  linker_flags="$linker_flags $qarg"
+	  compiler_flags="$compiler_flags $qarg"
+	  prev=
+	  compile_command="$compile_command $qarg"
+	  finalize_command="$finalize_command $qarg"
+	  continue
+	  ;;
+	shrext)
+  	  shrext_cmds="$arg"
+	  prev=
+	  continue
+	  ;;
+	darwin_framework|darwin_framework_skip)
+	  test "$prev" = "darwin_framework" && compiler_flags="$compiler_flags $arg"
+	  compile_command="$compile_command $arg"
+	  finalize_command="$finalize_command $arg"
+	  prev=
+	  continue
+	  ;;
+	*)
+	  eval "$prev=\"\$arg\""
+	  prev=
+	  continue
+	  ;;
+	esac
+      fi # test -n "$prev"
+
+      prevarg="$arg"
+
+      case $arg in
+      -all-static)
+	if test -n "$link_static_flag"; then
+	  compile_command="$compile_command $link_static_flag"
+	  finalize_command="$finalize_command $link_static_flag"
+	fi
+	continue
+	;;
+
+      -allow-undefined)
+	# FIXME: remove this flag sometime in the future.
+	$echo "$modename: \`-allow-undefined' is deprecated because it is the default" 1>&2
+	continue
+	;;
+
+      -avoid-version)
+	avoid_version=yes
+	continue
+	;;
+
+      -dlopen)
+	prev=dlfiles
+	continue
+	;;
+
+      -dlpreopen)
+	prev=dlprefiles
+	continue
+	;;
+
+      -export-dynamic)
+	export_dynamic=yes
+	continue
+	;;
+
+      -export-symbols | -export-symbols-regex)
+	if test -n "$export_symbols" || test -n "$export_symbols_regex"; then
+	  $echo "$modename: more than one -exported-symbols argument is not allowed"
+	  exit $EXIT_FAILURE
+	fi
+	if test "X$arg" = "X-export-symbols"; then
+	  prev=expsyms
+	else
+	  prev=expsyms_regex
+	fi
+	continue
+	;;
+
+      -framework|-arch|-isysroot)
+	case " $CC " in
+	  *" ${arg} ${1} "* | *" ${arg}	${1} "*) 
+		prev=darwin_framework_skip ;;
+	  *) compiler_flags="$compiler_flags $arg"
+	     prev=darwin_framework ;;
+	esac
+	compile_command="$compile_command $arg"
+	finalize_command="$finalize_command $arg"
+	continue
+	;;
+
+      -inst-prefix-dir)
+	prev=inst_prefix
+	continue
+	;;
+
+      # The native IRIX linker understands -LANG:*, -LIST:* and -LNO:*
+      # so, if we see these flags be careful not to treat them like -L
+      -L[A-Z][A-Z]*:*)
+	case $with_gcc/$host in
+	no/*-*-irix* | /*-*-irix*)
+	  compile_command="$compile_command $arg"
+	  finalize_command="$finalize_command $arg"
+	  ;;
+	esac
+	continue
+	;;
+
+      -L*)
+	dir=`$echo "X$arg" | $Xsed -e 's/^-L//'`
+	# We need an absolute path.
+	case $dir in
+	[\\/]* | [A-Za-z]:[\\/]*) ;;
+	*)
+	  absdir=`cd "$dir" && pwd`
+	  if test -z "$absdir"; then
+	    $echo "$modename: cannot determine absolute directory name of \`$dir'" 1>&2
+	    absdir="$dir"
+	    notinst_path="$notinst_path $dir"
+	  fi
+	  dir="$absdir"
+	  ;;
+	esac
+	case "$deplibs " in
+	*" -L$dir "*) ;;
+	*)
+	  deplibs="$deplibs -L$dir"
+	  lib_search_path="$lib_search_path $dir"
+	  ;;
+	esac
+	case $host in
+	*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2*)
+	  testbindir=`$echo "X$dir" | $Xsed -e 's*/lib$*/bin*'`
+	  case :$dllsearchpath: in
+	  *":$dir:"*) ;;
+	  *) dllsearchpath="$dllsearchpath:$dir";;
+	  esac
+	  case :$dllsearchpath: in
+	  *":$testbindir:"*) ;;
+	  *) dllsearchpath="$dllsearchpath:$testbindir";;
+	  esac
+	  ;;
+	esac
+	continue
+	;;
+
+      -l*)
+	if test "X$arg" = "X-lc" || test "X$arg" = "X-lm"; then
+	  case $host in
+	  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-beos*)
+	    # These systems don't actually have a C or math library (as such)
+	    continue
+	    ;;
+	  *-*-os2*)
+	    # These systems don't actually have a C library (as such)
+	    test "X$arg" = "X-lc" && continue
+	    ;;
+	  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)
+	    # Do not include libc due to us having libc/libc_r.
+	    test "X$arg" = "X-lc" && continue
+	    ;;
+	  *-*-rhapsody* | *-*-darwin1.[012])
+	    # Rhapsody C and math libraries are in the System framework
+	    deplibs="$deplibs -framework System"
+	    continue
+	    ;;
+	  *-*-sco3.2v5* | *-*-sco5v6*)
+	    # Causes problems with __ctype
+	    test "X$arg" = "X-lc" && continue
+	    ;;
+	  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)
+	    # Compiler inserts libc in the correct place for threads to work
+	    test "X$arg" = "X-lc" && continue
+	    ;;
+	  esac
+	elif test "X$arg" = "X-lc_r"; then
+	 case $host in
+	 *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)
+	   # Do not include libc_r directly, use -pthread flag.
+	   continue
+	   ;;
+	 esac
+	fi
+	deplibs="$deplibs $arg"
+	continue
+	;;
+
+      # Tru64 UNIX uses -model [arg] to determine the layout of C++
+      # classes, name mangling, and exception handling.
+      -model)
+	compile_command="$compile_command $arg"
+	compiler_flags="$compiler_flags $arg"
+	finalize_command="$finalize_command $arg"
+	prev=xcompiler
+	continue
+	;;
+
+     -mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe)
+	compiler_flags="$compiler_flags $arg"
+	compile_command="$compile_command $arg"
+	finalize_command="$finalize_command $arg"
+	continue
+	;;
+
+      -module)
+	module=yes
+	continue
+	;;
+
+      # -64, -mips[0-9] enable 64-bit mode on the SGI compiler
+      # -r[0-9][0-9]* specifies the processor on the SGI compiler
+      # -xarch=*, -xtarget=* enable 64-bit mode on the Sun compiler
+      # +DA*, +DD* enable 64-bit mode on the HP compiler
+      # -q* pass through compiler args for the IBM compiler
+      # -m* pass through architecture-specific compiler args for GCC
+      # -m*, -t[45]*, -txscale* pass through architecture-specific
+      # compiler args for GCC
+      # -pg pass through profiling flag for GCC
+      # @file GCC response files
+      -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*|-pg| \
+      -t[45]*|-txscale*|@*)
+
+	# Unknown arguments in both finalize_command and compile_command need
+	# to be aesthetically quoted because they are evaled later.
+	arg=`$echo "X$arg" | $Xsed -e "$sed_quote_subst"`
+	case $arg in
+	*[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	  arg="\"$arg\""
+	  ;;
+	esac
+        compile_command="$compile_command $arg"
+        finalize_command="$finalize_command $arg"
+        compiler_flags="$compiler_flags $arg"
+        continue
+        ;;
+
+      -shrext)
+	prev=shrext
+	continue
+	;;
+
+      -no-fast-install)
+	fast_install=no
+	continue
+	;;
+
+      -no-install)
+	case $host in
+	*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2*)
+	  # The PATH hackery in wrapper scripts is required on Windows
+	  # in order for the loader to find any dlls it needs.
+	  $echo "$modename: warning: \`-no-install' is ignored for $host" 1>&2
+	  $echo "$modename: warning: assuming \`-no-fast-install' instead" 1>&2
+	  fast_install=no
+	  ;;
+	*) no_install=yes ;;
+	esac
+	continue
+	;;
+
+      -no-undefined)
+	allow_undefined=no
+	continue
+	;;
+
+      -objectlist)
+	prev=objectlist
+	continue
+	;;
+
+      -o) prev=output ;;
+
+      -precious-files-regex)
+	prev=precious_regex
+	continue
+	;;
+
+      -release)
+	prev=release
+	continue
+	;;
+
+      -rpath)
+	prev=rpath
+	continue
+	;;
+
+      -R)
+	prev=xrpath
+	continue
+	;;
+
+      -R*)
+	dir=`$echo "X$arg" | $Xsed -e 's/^-R//'`
+	# We need an absolute path.
+	case $dir in
+	[\\/]* | [A-Za-z]:[\\/]*) ;;
+	*)
+	  $echo "$modename: only absolute run-paths are allowed" 1>&2
+	  exit $EXIT_FAILURE
+	  ;;
+	esac
+	case "$xrpath " in
+	*" $dir "*) ;;
+	*) xrpath="$xrpath $dir" ;;
+	esac
+	continue
+	;;
+
+      -static)
+	# The effects of -static are defined in a previous loop.
+	# We used to do the same as -all-static on platforms that
+	# didn't have a PIC flag, but the assumption that the effects
+	# would be equivalent was wrong.  It would break on at least
+	# Digital Unix and AIX.
+	continue
+	;;
+
+      -thread-safe)
+	thread_safe=yes
+	continue
+	;;
+
+      -version-info)
+	prev=vinfo
+	continue
+	;;
+      -version-number)
+	prev=vinfo
+	vinfo_number=yes
+	continue
+	;;
+
+      -Wc,*)
+	args=`$echo "X$arg" | $Xsed -e "$sed_quote_subst" -e 's/^-Wc,//'`
+	arg=
+	save_ifs="$IFS"; IFS=','
+	for flag in $args; do
+	  IFS="$save_ifs"
+	  case $flag in
+	    *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	    flag="\"$flag\""
+	    ;;
+	  esac
+	  arg="$arg $wl$flag"
+	  compiler_flags="$compiler_flags $flag"
+	done
+	IFS="$save_ifs"
+	arg=`$echo "X$arg" | $Xsed -e "s/^ //"`
+	;;
+
+      -Wl,*)
+	args=`$echo "X$arg" | $Xsed -e "$sed_quote_subst" -e 's/^-Wl,//'`
+	arg=
+	save_ifs="$IFS"; IFS=','
+	for flag in $args; do
+	  IFS="$save_ifs"
+	  case $flag in
+	    *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	    flag="\"$flag\""
+	    ;;
+	  esac
+	  arg="$arg $wl$flag"
+	  compiler_flags="$compiler_flags $wl$flag"
+	  linker_flags="$linker_flags $flag"
+	done
+	IFS="$save_ifs"
+	arg=`$echo "X$arg" | $Xsed -e "s/^ //"`
+	;;
+
+      -Xcompiler)
+	prev=xcompiler
+	continue
+	;;
+
+      -Xlinker)
+	prev=xlinker
+	continue
+	;;
+
+      -XCClinker)
+	prev=xcclinker
+	continue
+	;;
+
+      # Some other compiler flag.
+      -* | +*)
+	# Unknown arguments in both finalize_command and compile_command need
+	# to be aesthetically quoted because they are evaled later.
+	arg=`$echo "X$arg" | $Xsed -e "$sed_quote_subst"`
+	case $arg in
+	*[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	  arg="\"$arg\""
+	  ;;
+	esac
+	;;
+
+      *.$objext)
+	# A standard object.
+	objs="$objs $arg"
+	;;
+
+      *.lo)
+	# A libtool-controlled object.
+
+	# Check to see that this really is a libtool object.
+	if (${SED} -e '2q' $arg | grep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+	  pic_object=
+	  non_pic_object=
+
+	  # Read the .lo file
+	  # If there is no directory component, then add one.
+	  case $arg in
+	  */* | *\\*) . $arg ;;
+	  *) . ./$arg ;;
+	  esac
+
+	  if test -z "$pic_object" || \
+	     test -z "$non_pic_object" ||
+	     test "$pic_object" = none && \
+	     test "$non_pic_object" = none; then
+	    $echo "$modename: cannot find name of object for \`$arg'" 1>&2
+	    exit $EXIT_FAILURE
+	  fi
+
+	  # Extract subdirectory from the argument.
+	  xdir=`$echo "X$arg" | $Xsed -e 's%/[^/]*$%%'`
+	  if test "X$xdir" = "X$arg"; then
+	    xdir=
+ 	  else
+	    xdir="$xdir/"
+	  fi
+
+	  if test "$pic_object" != none; then
+	    # Prepend the subdirectory the object is found in.
+	    pic_object="$xdir$pic_object"
+
+	    if test "$prev" = dlfiles; then
+	      if test "$build_libtool_libs" = yes && test "$dlopen_support" = yes; then
+		dlfiles="$dlfiles $pic_object"
+		prev=
+		continue
+	      else
+		# If libtool objects are unsupported, then we need to preload.
+		prev=dlprefiles
+	      fi
+	    fi
+
+	    # CHECK ME:  I think I busted this.  -Ossama
+	    if test "$prev" = dlprefiles; then
+	      # Preload the old-style object.
+	      dlprefiles="$dlprefiles $pic_object"
+	      prev=
+	    fi
+
+	    # A PIC object.
+	    libobjs="$libobjs $pic_object"
+	    arg="$pic_object"
+	  fi
+
+	  # Non-PIC object.
+	  if test "$non_pic_object" != none; then
+	    # Prepend the subdirectory the object is found in.
+	    non_pic_object="$xdir$non_pic_object"
+
+	    # A standard non-PIC object
+	    non_pic_objects="$non_pic_objects $non_pic_object"
+	    if test -z "$pic_object" || test "$pic_object" = none ; then
+	      arg="$non_pic_object"
+	    fi
+	  else
+	    # If the PIC object exists, use it instead.
+	    # $xdir was prepended to $pic_object above.
+	    non_pic_object="$pic_object"
+	    non_pic_objects="$non_pic_objects $non_pic_object"
+	  fi
+	else
+	  # Only an error if not doing a dry-run.
+	  if test -z "$run"; then
+	    $echo "$modename: \`$arg' is not a valid libtool object" 1>&2
+	    exit $EXIT_FAILURE
+	  else
+	    # Dry-run case.
+
+	    # Extract subdirectory from the argument.
+	    xdir=`$echo "X$arg" | $Xsed -e 's%/[^/]*$%%'`
+	    if test "X$xdir" = "X$arg"; then
+	      xdir=
+	    else
+	      xdir="$xdir/"
+	    fi
+
+	    pic_object=`$echo "X${xdir}${objdir}/${arg}" | $Xsed -e "$lo2o"`
+	    non_pic_object=`$echo "X${xdir}${arg}" | $Xsed -e "$lo2o"`
+	    libobjs="$libobjs $pic_object"
+	    non_pic_objects="$non_pic_objects $non_pic_object"
+	  fi
+	fi
+	;;
+
+      *.$libext)
+	# An archive.
+	deplibs="$deplibs $arg"
+	old_deplibs="$old_deplibs $arg"
+	continue
+	;;
+
+      *.la)
+	# A libtool-controlled library.
+
+	if test "$prev" = dlfiles; then
+	  # This library was specified with -dlopen.
+	  dlfiles="$dlfiles $arg"
+	  prev=
+	elif test "$prev" = dlprefiles; then
+	  # The library was specified with -dlpreopen.
+	  dlprefiles="$dlprefiles $arg"
+	  prev=
+	else
+	  deplibs="$deplibs $arg"
+	fi
+	continue
+	;;
+
+      # Some other compiler argument.
+      *)
+	# Unknown arguments in both finalize_command and compile_command need
+	# to be aesthetically quoted because they are evaled later.
+	arg=`$echo "X$arg" | $Xsed -e "$sed_quote_subst"`
+	case $arg in
+	*[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	  arg="\"$arg\""
+	  ;;
+	esac
+	;;
+      esac # arg
+
+      # Now actually substitute the argument into the commands.
+      if test -n "$arg"; then
+	compile_command="$compile_command $arg"
+	finalize_command="$finalize_command $arg"
+      fi
+    done # argument parsing loop
+
+    if test -n "$prev"; then
+      $echo "$modename: the \`$prevarg' option requires an argument" 1>&2
+      $echo "$help" 1>&2
+      exit $EXIT_FAILURE
+    fi
+
+    if test "$export_dynamic" = yes && test -n "$export_dynamic_flag_spec"; then
+      eval arg=\"$export_dynamic_flag_spec\"
+      compile_command="$compile_command $arg"
+      finalize_command="$finalize_command $arg"
+    fi
+
+    oldlibs=
+    # calculate the name of the file, without its directory
+    outputname=`$echo "X$output" | $Xsed -e 's%^.*/%%'`
+    libobjs_save="$libobjs"
+
+    if test -n "$shlibpath_var"; then
+      # get the directories listed in $shlibpath_var
+      eval shlib_search_path=\`\$echo \"X\${$shlibpath_var}\" \| \$Xsed -e \'s/:/ /g\'\`
+    else
+      shlib_search_path=
+    fi
+    eval sys_lib_search_path=\"$sys_lib_search_path_spec\"
+    eval sys_lib_dlsearch_path=\"$sys_lib_dlsearch_path_spec\"
+
+    output_objdir=`$echo "X$output" | $Xsed -e 's%/[^/]*$%%'`
+    if test "X$output_objdir" = "X$output"; then
+      output_objdir="$objdir"
+    else
+      output_objdir="$output_objdir/$objdir"
+    fi
+    # Create the object directory.
+    if test ! -d "$output_objdir"; then
+      $show "$mkdir $output_objdir"
+      $run $mkdir $output_objdir
+      exit_status=$?
+      if test "$exit_status" -ne 0 && test ! -d "$output_objdir"; then
+	exit $exit_status
+      fi
+    fi
+
+    # Determine the type of output
+    case $output in
+    "")
+      $echo "$modename: you must specify an output file" 1>&2
+      $echo "$help" 1>&2
+      exit $EXIT_FAILURE
+      ;;
+    *.$libext) linkmode=oldlib ;;
+    *.lo | *.$objext) linkmode=obj ;;
+    *.la) linkmode=lib ;;
+    *) linkmode=prog ;; # Anything else should be a program.
+    esac
+
+    case $host in
+    *cygwin* | *mingw* | *pw32*)
+      # don't eliminate duplications in $postdeps and $predeps
+      duplicate_compiler_generated_deps=yes
+      ;;
+    *)
+      duplicate_compiler_generated_deps=$duplicate_deps
+      ;;
+    esac
+    specialdeplibs=
+
+    libs=
+    # Find all interdependent deplibs by searching for libraries
+    # that are linked more than once (e.g. -la -lb -la)
+    for deplib in $deplibs; do
+      if test "X$duplicate_deps" = "Xyes" ; then
+	case "$libs " in
+	*" $deplib "*) specialdeplibs="$specialdeplibs $deplib" ;;
+	esac
+      fi
+      libs="$libs $deplib"
+    done
+
+    if test "$linkmode" = lib; then
+      libs="$predeps $libs $compiler_lib_search_path $postdeps"
+
+      # Compute libraries that are listed more than once in $predeps
+      # $postdeps and mark them as special (i.e., whose duplicates are
+      # not to be eliminated).
+      pre_post_deps=
+      if test "X$duplicate_compiler_generated_deps" = "Xyes" ; then
+	for pre_post_dep in $predeps $postdeps; do
+	  case "$pre_post_deps " in
+	  *" $pre_post_dep "*) specialdeplibs="$specialdeplibs $pre_post_deps" ;;
+	  esac
+	  pre_post_deps="$pre_post_deps $pre_post_dep"
+	done
+      fi
+      pre_post_deps=
+    fi
+
+    deplibs=
+    newdependency_libs=
+    newlib_search_path=
+    need_relink=no # whether we're linking any uninstalled libtool libraries
+    notinst_deplibs= # not-installed libtool libraries
+    case $linkmode in
+    lib)
+	passes="conv link"
+	for file in $dlfiles $dlprefiles; do
+	  case $file in
+	  *.la) ;;
+	  *)
+	    $echo "$modename: libraries can \`-dlopen' only libtool libraries: $file" 1>&2
+	    exit $EXIT_FAILURE
+	    ;;
+	  esac
+	done
+	;;
+    prog)
+	compile_deplibs=
+	finalize_deplibs=
+	alldeplibs=no
+	newdlfiles=
+	newdlprefiles=
+	passes="conv scan dlopen dlpreopen link"
+	;;
+    *)  passes="conv"
+	;;
+    esac
+    for pass in $passes; do
+      if test "$linkmode,$pass" = "lib,link" ||
+	 test "$linkmode,$pass" = "prog,scan"; then
+	libs="$deplibs"
+	deplibs=
+      fi
+      if test "$linkmode" = prog; then
+	case $pass in
+	dlopen) libs="$dlfiles" ;;
+	dlpreopen) libs="$dlprefiles" ;;
+	link)
+	  libs="$deplibs %DEPLIBS%"
+	  test "X$link_all_deplibs" != Xno && libs="$libs $dependency_libs"
+	  ;;
+	esac
+      fi
+      if test "$pass" = dlopen; then
+	# Collect dlpreopened libraries
+	save_deplibs="$deplibs"
+	deplibs=
+      fi
+      for deplib in $libs; do
+	lib=
+	found=no
+	case $deplib in
+	-mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe)
+	  if test "$linkmode,$pass" = "prog,link"; then
+	    compile_deplibs="$deplib $compile_deplibs"
+	    finalize_deplibs="$deplib $finalize_deplibs"
+	  else
+	    compiler_flags="$compiler_flags $deplib"
+	  fi
+	  continue
+	  ;;
+	-l*)
+	  if test "$linkmode" != lib && test "$linkmode" != prog; then
+	    $echo "$modename: warning: \`-l' is ignored for archives/objects" 1>&2
+	    continue
+	  fi
+	  name=`$echo "X$deplib" | $Xsed -e 's/^-l//'`
+	  for searchdir in $newlib_search_path $lib_search_path $sys_lib_search_path $shlib_search_path; do
+	    for search_ext in .la $std_shrext .so .a; do
+	      # Search the libtool library
+	      lib="$searchdir/lib${name}${search_ext}"
+	      if test -f "$lib"; then
+		if test "$search_ext" = ".la"; then
+		  found=yes
+		else
+		  found=no
+		fi
+		break 2
+	      fi
+	    done
+	  done
+	  if test "$found" != yes; then
+	    # deplib doesn't seem to be a libtool library
+	    if test "$linkmode,$pass" = "prog,link"; then
+	      compile_deplibs="$deplib $compile_deplibs"
+	      finalize_deplibs="$deplib $finalize_deplibs"
+	    else
+	      deplibs="$deplib $deplibs"
+	      test "$linkmode" = lib && newdependency_libs="$deplib $newdependency_libs"
+	    fi
+	    continue
+	  else # deplib is a libtool library
+	    # If $allow_libtool_libs_with_static_runtimes && $deplib is a stdlib,
+	    # We need to do some special things here, and not later.
+	    if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
+	      case " $predeps $postdeps " in
+	      *" $deplib "*)
+		if (${SED} -e '2q' $lib |
+                    grep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+		  library_names=
+		  old_library=
+		  case $lib in
+		  */* | *\\*) . $lib ;;
+		  *) . ./$lib ;;
+		  esac
+		  for l in $old_library $library_names; do
+		    ll="$l"
+		  done
+		  if test "X$ll" = "X$old_library" ; then # only static version available
+		    found=no
+		    ladir=`$echo "X$lib" | $Xsed -e 's%/[^/]*$%%'`
+		    test "X$ladir" = "X$lib" && ladir="."
+		    lib=$ladir/$old_library
+		    if test "$linkmode,$pass" = "prog,link"; then
+		      compile_deplibs="$deplib $compile_deplibs"
+		      finalize_deplibs="$deplib $finalize_deplibs"
+		    else
+		      deplibs="$deplib $deplibs"
+		      test "$linkmode" = lib && newdependency_libs="$deplib $newdependency_libs"
+		    fi
+		    continue
+		  fi
+		fi
+	        ;;
+	      *) ;;
+	      esac
+	    fi
+	  fi
+	  ;; # -l
+	-L*)
+	  case $linkmode in
+	  lib)
+	    deplibs="$deplib $deplibs"
+	    test "$pass" = conv && continue
+	    newdependency_libs="$deplib $newdependency_libs"
+	    newlib_search_path="$newlib_search_path "`$echo "X$deplib" | $Xsed -e 's/^-L//'`
+	    ;;
+	  prog)
+	    if test "$pass" = conv; then
+	      deplibs="$deplib $deplibs"
+	      continue
+	    fi
+	    if test "$pass" = scan; then
+	      deplibs="$deplib $deplibs"
+	    else
+	      compile_deplibs="$deplib $compile_deplibs"
+	      finalize_deplibs="$deplib $finalize_deplibs"
+	    fi
+	    newlib_search_path="$newlib_search_path "`$echo "X$deplib" | $Xsed -e 's/^-L//'`
+	    ;;
+	  *)
+	    $echo "$modename: warning: \`-L' is ignored for archives/objects" 1>&2
+	    ;;
+	  esac # linkmode
+	  continue
+	  ;; # -L
+	-R*)
+	  if test "$pass" = link; then
+	    dir=`$echo "X$deplib" | $Xsed -e 's/^-R//'`
+	    # Make sure the xrpath contains only unique directories.
+	    case "$xrpath " in
+	    *" $dir "*) ;;
+	    *) xrpath="$xrpath $dir" ;;
+	    esac
+	  fi
+	  deplibs="$deplib $deplibs"
+	  continue
+	  ;;
+	*.la) lib="$deplib" ;;
+	*.$libext)
+	  if test "$pass" = conv; then
+	    deplibs="$deplib $deplibs"
+	    continue
+	  fi
+	  case $linkmode in
+	  lib)
+	    valid_a_lib=no
+	    case $deplibs_check_method in
+	      match_pattern*)
+		set dummy $deplibs_check_method
+	        match_pattern_regex=`expr "$deplibs_check_method" : "$2 \(.*\)"`
+		if eval $echo \"$deplib\" 2>/dev/null \
+		    | $SED 10q \
+		    | $EGREP "$match_pattern_regex" > /dev/null; then
+		  valid_a_lib=yes
+		fi
+		;;
+	      pass_all)
+		valid_a_lib=yes
+		;;
+            esac
+	    if test "$valid_a_lib" != yes; then
+	      $echo
+	      $echo "*** Warning: Trying to link with static lib archive $deplib."
+	      $echo "*** I have the capability to make that library automatically link in when"
+	      $echo "*** you link to this library.  But I can only do this if you have a"
+	      $echo "*** shared version of the library, which you do not appear to have"
+	      $echo "*** because the file extensions .$libext of this argument makes me believe"
+	      $echo "*** that it is just a static archive that I should not used here."
+	    else
+	      $echo
+	      $echo "*** Warning: Linking the shared library $output against the"
+	      $echo "*** static library $deplib is not portable!"
+	      deplibs="$deplib $deplibs"
+	    fi
+	    continue
+	    ;;
+	  prog)
+	    if test "$pass" != link; then
+	      deplibs="$deplib $deplibs"
+	    else
+	      compile_deplibs="$deplib $compile_deplibs"
+	      finalize_deplibs="$deplib $finalize_deplibs"
+	    fi
+	    continue
+	    ;;
+	  esac # linkmode
+	  ;; # *.$libext
+	*.lo | *.$objext)
+	  if test "$pass" = conv; then
+	    deplibs="$deplib $deplibs"
+	  elif test "$linkmode" = prog; then
+	    if test "$pass" = dlpreopen || test "$dlopen_support" != yes || test "$build_libtool_libs" = no; then
+	      # If there is no dlopen support or we're linking statically,
+	      # we need to preload.
+	      newdlprefiles="$newdlprefiles $deplib"
+	      compile_deplibs="$deplib $compile_deplibs"
+	      finalize_deplibs="$deplib $finalize_deplibs"
+	    else
+	      newdlfiles="$newdlfiles $deplib"
+	    fi
+	  fi
+	  continue
+	  ;;
+	%DEPLIBS%)
+	  alldeplibs=yes
+	  continue
+	  ;;
+	esac # case $deplib
+	if test "$found" = yes || test -f "$lib"; then :
+	else
+	  $echo "$modename: cannot find the library \`$lib' or unhandled argument \`$deplib'" 1>&2
+	  exit $EXIT_FAILURE
+	fi
+
+	# Check to see that this really is a libtool archive.
+	if (${SED} -e '2q' $lib | grep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then :
+	else
+	  $echo "$modename: \`$lib' is not a valid libtool archive" 1>&2
+	  exit $EXIT_FAILURE
+	fi
+
+	ladir=`$echo "X$lib" | $Xsed -e 's%/[^/]*$%%'`
+	test "X$ladir" = "X$lib" && ladir="."
+
+	dlname=
+	dlopen=
+	dlpreopen=
+	libdir=
+	library_names=
+	old_library=
+	# If the library was installed with an old release of libtool,
+	# it will not redefine variables installed, or shouldnotlink
+	installed=yes
+	shouldnotlink=no
+	avoidtemprpath=
+
+
+	# Read the .la file
+	case $lib in
+	*/* | *\\*) . $lib ;;
+	*) . ./$lib ;;
+	esac
+
+	if test "$linkmode,$pass" = "lib,link" ||
+	   test "$linkmode,$pass" = "prog,scan" ||
+	   { test "$linkmode" != prog && test "$linkmode" != lib; }; then
+	  test -n "$dlopen" && dlfiles="$dlfiles $dlopen"
+	  test -n "$dlpreopen" && dlprefiles="$dlprefiles $dlpreopen"
+	fi
+
+	if test "$pass" = conv; then
+	  # Only check for convenience libraries
+	  deplibs="$lib $deplibs"
+	  if test -z "$libdir"; then
+	    if test -z "$old_library"; then
+	      $echo "$modename: cannot find name of link library for \`$lib'" 1>&2
+	      exit $EXIT_FAILURE
+	    fi
+	    # It is a libtool convenience library, so add in its objects.
+	    convenience="$convenience $ladir/$objdir/$old_library"
+	    old_convenience="$old_convenience $ladir/$objdir/$old_library"
+	    tmp_libs=
+	    for deplib in $dependency_libs; do
+	      deplibs="$deplib $deplibs"
+              if test "X$duplicate_deps" = "Xyes" ; then
+	        case "$tmp_libs " in
+	        *" $deplib "*) specialdeplibs="$specialdeplibs $deplib" ;;
+	        esac
+              fi
+	      tmp_libs="$tmp_libs $deplib"
+	    done
+	  elif test "$linkmode" != prog && test "$linkmode" != lib; then
+	    $echo "$modename: \`$lib' is not a convenience library" 1>&2
+	    exit $EXIT_FAILURE
+	  fi
+	  continue
+	fi # $pass = conv
+
+
+	# Get the name of the library we link against.
+	linklib=
+	for l in $old_library $library_names; do
+	  linklib="$l"
+	done
+	if test -z "$linklib"; then
+	  $echo "$modename: cannot find name of link library for \`$lib'" 1>&2
+	  exit $EXIT_FAILURE
+	fi
+
+	# This library was specified with -dlopen.
+	if test "$pass" = dlopen; then
+	  if test -z "$libdir"; then
+	    $echo "$modename: cannot -dlopen a convenience library: \`$lib'" 1>&2
+	    exit $EXIT_FAILURE
+	  fi
+	  if test -z "$dlname" ||
+	     test "$dlopen_support" != yes ||
+	     test "$build_libtool_libs" = no; then
+	    # If there is no dlname, no dlopen support or we're linking
+	    # statically, we need to preload.  We also need to preload any
+	    # dependent libraries so libltdl's deplib preloader doesn't
+	    # bomb out in the load deplibs phase.
+	    dlprefiles="$dlprefiles $lib $dependency_libs"
+	  else
+	    newdlfiles="$newdlfiles $lib"
+	  fi
+	  continue
+	fi # $pass = dlopen
+
+	# We need an absolute path.
+	case $ladir in
+	[\\/]* | [A-Za-z]:[\\/]*) abs_ladir="$ladir" ;;
+	*)
+	  abs_ladir=`cd "$ladir" && pwd`
+	  if test -z "$abs_ladir"; then
+	    $echo "$modename: warning: cannot determine absolute directory name of \`$ladir'" 1>&2
+	    $echo "$modename: passing it literally to the linker, although it might fail" 1>&2
+	    abs_ladir="$ladir"
+	  fi
+	  ;;
+	esac
+	laname=`$echo "X$lib" | $Xsed -e 's%^.*/%%'`
+
+	# Find the relevant object directory and library name.
+	if test "X$installed" = Xyes; then
+	  if test ! -f "$libdir/$linklib" && test -f "$abs_ladir/$linklib"; then
+	    $echo "$modename: warning: library \`$lib' was moved." 1>&2
+	    dir="$ladir"
+	    absdir="$abs_ladir"
+	    libdir="$abs_ladir"
+	  else
+	    dir="$libdir"
+	    absdir="$libdir"
+	  fi
+	  test "X$hardcode_automatic" = Xyes && avoidtemprpath=yes
+	else
+	  if test ! -f "$ladir/$objdir/$linklib" && test -f "$abs_ladir/$linklib"; then
+	    dir="$ladir"
+	    absdir="$abs_ladir"
+	    # Remove this search path later
+	    notinst_path="$notinst_path $abs_ladir"
+	  else
+	    dir="$ladir/$objdir"
+	    absdir="$abs_ladir/$objdir"
+	    # Remove this search path later
+	    notinst_path="$notinst_path $abs_ladir"
+	  fi
+	fi # $installed = yes
+	name=`$echo "X$laname" | $Xsed -e 's/\.la$//' -e 's/^lib//'`
+
+	# This library was specified with -dlpreopen.
+	if test "$pass" = dlpreopen; then
+	  if test -z "$libdir"; then
+	    $echo "$modename: cannot -dlpreopen a convenience library: \`$lib'" 1>&2
+	    exit $EXIT_FAILURE
+	  fi
+	  # Prefer using a static library (so that no silly _DYNAMIC symbols
+	  # are required to link).
+	  if test -n "$old_library"; then
+	    newdlprefiles="$newdlprefiles $dir/$old_library"
+	  # Otherwise, use the dlname, so that lt_dlopen finds it.
+	  elif test -n "$dlname"; then
+	    newdlprefiles="$newdlprefiles $dir/$dlname"
+	  else
+	    newdlprefiles="$newdlprefiles $dir/$linklib"
+	  fi
+	fi # $pass = dlpreopen
+
+	if test -z "$libdir"; then
+	  # Link the convenience library
+	  if test "$linkmode" = lib; then
+	    deplibs="$dir/$old_library $deplibs"
+	  elif test "$linkmode,$pass" = "prog,link"; then
+	    compile_deplibs="$dir/$old_library $compile_deplibs"
+	    finalize_deplibs="$dir/$old_library $finalize_deplibs"
+	  else
+	    deplibs="$lib $deplibs" # used for prog,scan pass
+	  fi
+	  continue
+	fi
+
+
+	if test "$linkmode" = prog && test "$pass" != link; then
+	  newlib_search_path="$newlib_search_path $ladir"
+	  deplibs="$lib $deplibs"
+
+	  linkalldeplibs=no
+	  if test "$link_all_deplibs" != no || test -z "$library_names" ||
+	     test "$build_libtool_libs" = no; then
+	    linkalldeplibs=yes
+	  fi
+
+	  tmp_libs=
+	  for deplib in $dependency_libs; do
+	    case $deplib in
+	    -L*) newlib_search_path="$newlib_search_path "`$echo "X$deplib" | $Xsed -e 's/^-L//'`;; ### testsuite: skip nested quoting test
+	    esac
+	    # Need to link against all dependency_libs?
+	    if test "$linkalldeplibs" = yes; then
+	      deplibs="$deplib $deplibs"
+	    else
+	      # Need to hardcode shared library paths
+	      # or/and link against static libraries
+	      newdependency_libs="$deplib $newdependency_libs"
+	    fi
+	    if test "X$duplicate_deps" = "Xyes" ; then
+	      case "$tmp_libs " in
+	      *" $deplib "*) specialdeplibs="$specialdeplibs $deplib" ;;
+	      esac
+	    fi
+	    tmp_libs="$tmp_libs $deplib"
+	  done # for deplib
+	  continue
+	fi # $linkmode = prog...
+
+	if test "$linkmode,$pass" = "prog,link"; then
+	  if test -n "$library_names" &&
+	     { test "$prefer_static_libs" = no || test -z "$old_library"; }; then
+	    # We need to hardcode the library path
+	    if test -n "$shlibpath_var" && test -z "$avoidtemprpath" ; then
+	      # Make sure the rpath contains only unique directories.
+	      case "$temp_rpath " in
+	      *" $dir "*) ;;
+	      *" $absdir "*) ;;
+	      *) temp_rpath="$temp_rpath $absdir" ;;
+	      esac
+	    fi
+
+	    # Hardcode the library path.
+	    # Skip directories that are in the system default run-time
+	    # search path.
+	    case " $sys_lib_dlsearch_path " in
+	    *" $absdir "*) ;;
+	    *)
+	      case "$compile_rpath " in
+	      *" $absdir "*) ;;
+	      *) compile_rpath="$compile_rpath $absdir"
+	      esac
+	      ;;
+	    esac
+	    case " $sys_lib_dlsearch_path " in
+	    *" $libdir "*) ;;
+	    *)
+	      case "$finalize_rpath " in
+	      *" $libdir "*) ;;
+	      *) finalize_rpath="$finalize_rpath $libdir"
+	      esac
+	      ;;
+	    esac
+	  fi # $linkmode,$pass = prog,link...
+
+	  if test "$alldeplibs" = yes &&
+	     { test "$deplibs_check_method" = pass_all ||
+	       { test "$build_libtool_libs" = yes &&
+		 test -n "$library_names"; }; }; then
+	    # We only need to search for static libraries
+	    continue
+	  fi
+	fi
+
+	link_static=no # Whether the deplib will be linked statically
+	use_static_libs=$prefer_static_libs
+	if test "$use_static_libs" = built && test "$installed" = yes ; then
+	  use_static_libs=no
+	fi
+	if test -n "$library_names" &&
+	   { test "$use_static_libs" = no || test -z "$old_library"; }; then
+	  if test "$installed" = no; then
+	    notinst_deplibs="$notinst_deplibs $lib"
+	    need_relink=yes
+	  fi
+	  # This is a shared library
+
+	  # Warn about portability, can't link against -module's on
+	  # some systems (darwin)
+	  if test "$shouldnotlink" = yes && test "$pass" = link ; then
+	    $echo
+	    if test "$linkmode" = prog; then
+	      $echo "*** Warning: Linking the executable $output against the loadable module"
+	    else
+	      $echo "*** Warning: Linking the shared library $output against the loadable module"
+	    fi
+	    $echo "*** $linklib is not portable!"
+	  fi
+	  if test "$linkmode" = lib &&
+	     test "$hardcode_into_libs" = yes; then
+	    # Hardcode the library path.
+	    # Skip directories that are in the system default run-time
+	    # search path.
+	    case " $sys_lib_dlsearch_path " in
+	    *" $absdir "*) ;;
+	    *)
+	      case "$compile_rpath " in
+	      *" $absdir "*) ;;
+	      *) compile_rpath="$compile_rpath $absdir"
+	      esac
+	      ;;
+	    esac
+	    case " $sys_lib_dlsearch_path " in
+	    *" $libdir "*) ;;
+	    *)
+	      case "$finalize_rpath " in
+	      *" $libdir "*) ;;
+	      *) finalize_rpath="$finalize_rpath $libdir"
+	      esac
+	      ;;
+	    esac
+	  fi
+
+	  if test -n "$old_archive_from_expsyms_cmds"; then
+	    # figure out the soname
+	    set dummy $library_names
+	    realname="$2"
+	    shift; shift
+	    libname=`eval \\$echo \"$libname_spec\"`
+	    # use dlname if we got it. it's perfectly good, no?
+	    if test -n "$dlname"; then
+	      soname="$dlname"
+	    elif test -n "$soname_spec"; then
+	      # bleh windows
+	      case $host in
+	      *cygwin* | mingw*)
+		major=`expr $current - $age`
+		versuffix="-$major"
+		;;
+	      esac
+	      eval soname=\"$soname_spec\"
+	    else
+	      soname="$realname"
+	    fi
+
+	    # Make a new name for the extract_expsyms_cmds to use
+	    soroot="$soname"
+	    soname=`$echo $soroot | ${SED} -e 's/^.*\///'`
+	    newlib="libimp-`$echo $soname | ${SED} 's/^lib//;s/\.dll$//'`.a"
+
+	    # If the library has no export list, then create one now
+	    if test -f "$output_objdir/$soname-def"; then :
+	    else
+	      $show "extracting exported symbol list from \`$soname'"
+	      save_ifs="$IFS"; IFS='~'
+	      cmds=$extract_expsyms_cmds
+	      for cmd in $cmds; do
+		IFS="$save_ifs"
+		eval cmd=\"$cmd\"
+		$show "$cmd"
+		$run eval "$cmd" || exit $?
+	      done
+	      IFS="$save_ifs"
+	    fi
+
+	    # Create $newlib
+	    if test -f "$output_objdir/$newlib"; then :; else
+	      $show "generating import library for \`$soname'"
+	      save_ifs="$IFS"; IFS='~'
+	      cmds=$old_archive_from_expsyms_cmds
+	      for cmd in $cmds; do
+		IFS="$save_ifs"
+		eval cmd=\"$cmd\"
+		$show "$cmd"
+		$run eval "$cmd" || exit $?
+	      done
+	      IFS="$save_ifs"
+	    fi
+	    # make sure the library variables are pointing to the new library
+	    dir=$output_objdir
+	    linklib=$newlib
+	  fi # test -n "$old_archive_from_expsyms_cmds"
+
+	  if test "$linkmode" = prog || test "$mode" != relink; then
+	    add_shlibpath=
+	    add_dir=
+	    add=
+	    lib_linked=yes
+	    case $hardcode_action in
+	    immediate | unsupported)
+	      if test "$hardcode_direct" = no; then
+		add="$dir/$linklib"
+		case $host in
+		  *-*-sco3.2v5.0.[024]*) add_dir="-L$dir" ;;
+		  *-*-sysv4*uw2*) add_dir="-L$dir" ;;
+		  *-*-sysv5OpenUNIX* | *-*-sysv5UnixWare7.[01].[10]* | \
+		    *-*-unixware7*) add_dir="-L$dir" ;;
+		  *-*-darwin* )
+		    # if the lib is a module then we can not link against
+		    # it, someone is ignoring the new warnings I added
+		    if /usr/bin/file -L $add 2> /dev/null |
+                      $EGREP ": [^:]* bundle" >/dev/null ; then
+		      $echo "** Warning, lib $linklib is a module, not a shared library"
+		      if test -z "$old_library" ; then
+		        $echo
+		        $echo "** And there doesn't seem to be a static archive available"
+		        $echo "** The link will probably fail, sorry"
+		      else
+		        add="$dir/$old_library"
+		      fi
+		    fi
+		esac
+	      elif test "$hardcode_minus_L" = no; then
+		case $host in
+		*-*-sunos*) add_shlibpath="$dir" ;;
+		esac
+		add_dir="-L$dir"
+		add="-l$name"
+	      elif test "$hardcode_shlibpath_var" = no; then
+		add_shlibpath="$dir"
+		add="-l$name"
+	      else
+		lib_linked=no
+	      fi
+	      ;;
+	    relink)
+	      if test "$hardcode_direct" = yes; then
+		add="$dir/$linklib"
+	      elif test "$hardcode_minus_L" = yes; then
+		add_dir="-L$dir"
+		# Try looking first in the location we're being installed to.
+		if test -n "$inst_prefix_dir"; then
+		  case $libdir in
+		    [\\/]*)
+		      add_dir="$add_dir -L$inst_prefix_dir$libdir"
+		      ;;
+		  esac
+		fi
+		add="-l$name"
+	      elif test "$hardcode_shlibpath_var" = yes; then
+		add_shlibpath="$dir"
+		add="-l$name"
+	      else
+		lib_linked=no
+	      fi
+	      ;;
+	    *) lib_linked=no ;;
+	    esac
+
+	    if test "$lib_linked" != yes; then
+	      $echo "$modename: configuration error: unsupported hardcode properties"
+	      exit $EXIT_FAILURE
+	    fi
+
+	    if test -n "$add_shlibpath"; then
+	      case :$compile_shlibpath: in
+	      *":$add_shlibpath:"*) ;;
+	      *) compile_shlibpath="$compile_shlibpath$add_shlibpath:" ;;
+	      esac
+	    fi
+	    if test "$linkmode" = prog; then
+	      test -n "$add_dir" && compile_deplibs="$add_dir $compile_deplibs"
+	      test -n "$add" && compile_deplibs="$add $compile_deplibs"
+	    else
+	      test -n "$add_dir" && deplibs="$add_dir $deplibs"
+	      test -n "$add" && deplibs="$add $deplibs"
+	      if test "$hardcode_direct" != yes && \
+		 test "$hardcode_minus_L" != yes && \
+		 test "$hardcode_shlibpath_var" = yes; then
+		case :$finalize_shlibpath: in
+		*":$libdir:"*) ;;
+		*) finalize_shlibpath="$finalize_shlibpath$libdir:" ;;
+		esac
+	      fi
+	    fi
+	  fi
+
+	  if test "$linkmode" = prog || test "$mode" = relink; then
+	    add_shlibpath=
+	    add_dir=
+	    add=
+	    # Finalize command for both is simple: just hardcode it.
+	    if test "$hardcode_direct" = yes; then
+	      add="$libdir/$linklib"
+	    elif test "$hardcode_minus_L" = yes; then
+	      add_dir="-L$libdir"
+	      add="-l$name"
+	    elif test "$hardcode_shlibpath_var" = yes; then
+	      case :$finalize_shlibpath: in
+	      *":$libdir:"*) ;;
+	      *) finalize_shlibpath="$finalize_shlibpath$libdir:" ;;
+	      esac
+	      add="-l$name"
+	    elif test "$hardcode_automatic" = yes; then
+	      if test -n "$inst_prefix_dir" &&
+		 test -f "$inst_prefix_dir$libdir/$linklib" ; then
+	        add="$inst_prefix_dir$libdir/$linklib"
+	      else
+	        add="$libdir/$linklib"
+	      fi
+	    else
+	      # We cannot seem to hardcode it, guess we'll fake it.
+	      add_dir="-L$libdir"
+	      # Try looking first in the location we're being installed to.
+	      if test -n "$inst_prefix_dir"; then
+		case $libdir in
+		  [\\/]*)
+		    add_dir="$add_dir -L$inst_prefix_dir$libdir"
+		    ;;
+		esac
+	      fi
+	      add="-l$name"
+	    fi
+
+	    if test "$linkmode" = prog; then
+	      test -n "$add_dir" && finalize_deplibs="$add_dir $finalize_deplibs"
+	      test -n "$add" && finalize_deplibs="$add $finalize_deplibs"
+	    else
+	      test -n "$add_dir" && deplibs="$add_dir $deplibs"
+	      test -n "$add" && deplibs="$add $deplibs"
+	    fi
+	  fi
+	elif test "$linkmode" = prog; then
+	  # Here we assume that one of hardcode_direct or hardcode_minus_L
+	  # is not unsupported.  This is valid on all known static and
+	  # shared platforms.
+	  if test "$hardcode_direct" != unsupported; then
+	    test -n "$old_library" && linklib="$old_library"
+	    compile_deplibs="$dir/$linklib $compile_deplibs"
+	    finalize_deplibs="$dir/$linklib $finalize_deplibs"
+	  else
+	    compile_deplibs="-l$name -L$dir $compile_deplibs"
+	    finalize_deplibs="-l$name -L$dir $finalize_deplibs"
+	  fi
+	elif test "$build_libtool_libs" = yes; then
+	  # Not a shared library
+	  if test "$deplibs_check_method" != pass_all; then
+	    # We're trying link a shared library against a static one
+	    # but the system doesn't support it.
+
+	    # Just print a warning and add the library to dependency_libs so
+	    # that the program can be linked against the static library.
+	    $echo
+	    $echo "*** Warning: This system can not link to static lib archive $lib."
+	    $echo "*** I have the capability to make that library automatically link in when"
+	    $echo "*** you link to this library.  But I can only do this if you have a"
+	    $echo "*** shared version of the library, which you do not appear to have."
+	    if test "$module" = yes; then
+	      $echo "*** But as you try to build a module library, libtool will still create "
+	      $echo "*** a static module, that should work as long as the dlopening application"
+	      $echo "*** is linked with the -dlopen flag to resolve symbols at runtime."
+	      if test -z "$global_symbol_pipe"; then
+		$echo
+		$echo "*** However, this would only work if libtool was able to extract symbol"
+		$echo "*** lists from a program, using \`nm' or equivalent, but libtool could"
+		$echo "*** not find such a program.  So, this module is probably useless."
+		$echo "*** \`nm' from GNU binutils and a full rebuild may help."
+	      fi
+	      if test "$build_old_libs" = no; then
+		build_libtool_libs=module
+		build_old_libs=yes
+	      else
+		build_libtool_libs=no
+	      fi
+	    fi
+	  else
+	    deplibs="$dir/$old_library $deplibs"
+	    link_static=yes
+	  fi
+	fi # link shared/static library?
+
+	if test "$linkmode" = lib; then
+	  if test -n "$dependency_libs" &&
+	     { test "$hardcode_into_libs" != yes ||
+	       test "$build_old_libs" = yes ||
+	       test "$link_static" = yes; }; then
+	    # Extract -R from dependency_libs
+	    temp_deplibs=
+	    for libdir in $dependency_libs; do
+	      case $libdir in
+	      -R*) temp_xrpath=`$echo "X$libdir" | $Xsed -e 's/^-R//'`
+		   case " $xrpath " in
+		   *" $temp_xrpath "*) ;;
+		   *) xrpath="$xrpath $temp_xrpath";;
+		   esac;;
+	      *) temp_deplibs="$temp_deplibs $libdir";;
+	      esac
+	    done
+	    dependency_libs="$temp_deplibs"
+	  fi
+
+	  newlib_search_path="$newlib_search_path $absdir"
+	  # Link against this library
+	  test "$link_static" = no && newdependency_libs="$abs_ladir/$laname $newdependency_libs"
+	  # ... and its dependency_libs
+	  tmp_libs=
+	  for deplib in $dependency_libs; do
+	    newdependency_libs="$deplib $newdependency_libs"
+	    if test "X$duplicate_deps" = "Xyes" ; then
+	      case "$tmp_libs " in
+	      *" $deplib "*) specialdeplibs="$specialdeplibs $deplib" ;;
+	      esac
+	    fi
+	    tmp_libs="$tmp_libs $deplib"
+	  done
+
+	  if test "$link_all_deplibs" != no; then
+	    # Add the search paths of all dependency libraries
+	    for deplib in $dependency_libs; do
+	      case $deplib in
+	      -L*) path="$deplib" ;;
+	      *.la)
+		dir=`$echo "X$deplib" | $Xsed -e 's%/[^/]*$%%'`
+		test "X$dir" = "X$deplib" && dir="."
+		# We need an absolute path.
+		case $dir in
+		[\\/]* | [A-Za-z]:[\\/]*) absdir="$dir" ;;
+		*)
+		  absdir=`cd "$dir" && pwd`
+		  if test -z "$absdir"; then
+		    $echo "$modename: warning: cannot determine absolute directory name of \`$dir'" 1>&2
+		    absdir="$dir"
+		  fi
+		  ;;
+		esac
+		if grep "^installed=no" $deplib > /dev/null; then
+		  path="$absdir/$objdir"
+		else
+		  eval libdir=`${SED} -n -e 's/^libdir=\(.*\)$/\1/p' $deplib`
+		  if test -z "$libdir"; then
+		    $echo "$modename: \`$deplib' is not a valid libtool archive" 1>&2
+		    exit $EXIT_FAILURE
+		  fi
+		  if test "$absdir" != "$libdir"; then
+		    $echo "$modename: warning: \`$deplib' seems to be moved" 1>&2
+		  fi
+		  path="$absdir"
+		fi
+		depdepl=
+		case $host in
+		*-*-darwin*)
+		  # we do not want to link against static libs,
+		  # but need to link against shared
+		  eval deplibrary_names=`${SED} -n -e 's/^library_names=\(.*\)$/\1/p' $deplib`
+		  if test -n "$deplibrary_names" ; then
+		    for tmp in $deplibrary_names ; do
+		      depdepl=$tmp
+		    done
+		    if test -f "$path/$depdepl" ; then
+		      depdepl="$path/$depdepl"
+		    fi
+		    # do not add paths which are already there
+		    case " $newlib_search_path " in
+		    *" $path "*) ;;
+		    *) newlib_search_path="$newlib_search_path $path";;
+		    esac
+		  fi
+		  path=""
+		  ;;
+		*)
+		  path="-L$path"
+		  ;;
+		esac
+		;;
+	      -l*)
+		case $host in
+		*-*-darwin*)
+		  # Again, we only want to link against shared libraries
+		  eval tmp_libs=`$echo "X$deplib" | $Xsed -e "s,^\-l,,"`
+		  for tmp in $newlib_search_path ; do
+		    if test -f "$tmp/lib$tmp_libs.dylib" ; then
+		      eval depdepl="$tmp/lib$tmp_libs.dylib"
+		      break
+		    fi
+		  done
+		  path=""
+		  ;;
+		*) continue ;;
+		esac
+		;;
+	      *) continue ;;
+	      esac
+	      case " $deplibs " in
+	      *" $path "*) ;;
+	      *) deplibs="$path $deplibs" ;;
+	      esac
+	      case " $deplibs " in
+	      *" $depdepl "*) ;;
+	      *) deplibs="$depdepl $deplibs" ;;
+	      esac
+	    done
+	  fi # link_all_deplibs != no
+	fi # linkmode = lib
+      done # for deplib in $libs
+      dependency_libs="$newdependency_libs"
+      if test "$pass" = dlpreopen; then
+	# Link the dlpreopened libraries before other libraries
+	for deplib in $save_deplibs; do
+	  deplibs="$deplib $deplibs"
+	done
+      fi
+      if test "$pass" != dlopen; then
+	if test "$pass" != conv; then
+	  # Make sure lib_search_path contains only unique directories.
+	  lib_search_path=
+	  for dir in $newlib_search_path; do
+	    case "$lib_search_path " in
+	    *" $dir "*) ;;
+	    *) lib_search_path="$lib_search_path $dir" ;;
+	    esac
+	  done
+	  newlib_search_path=
+	fi
+
+	if test "$linkmode,$pass" != "prog,link"; then
+	  vars="deplibs"
+	else
+	  vars="compile_deplibs finalize_deplibs"
+	fi
+	for var in $vars dependency_libs; do
+	  # Add libraries to $var in reverse order
+	  eval tmp_libs=\"\$$var\"
+	  new_libs=
+	  for deplib in $tmp_libs; do
+	    # FIXME: Pedantically, this is the right thing to do, so
+	    #        that some nasty dependency loop isn't accidentally
+	    #        broken:
+	    #new_libs="$deplib $new_libs"
+	    # Pragmatically, this seems to cause very few problems in
+	    # practice:
+	    case $deplib in
+	    -L*) new_libs="$deplib $new_libs" ;;
+	    -R*) ;;
+	    *)
+	      # And here is the reason: when a library appears more
+	      # than once as an explicit dependence of a library, or
+	      # is implicitly linked in more than once by the
+	      # compiler, it is considered special, and multiple
+	      # occurrences thereof are not removed.  Compare this
+	      # with having the same library being listed as a
+	      # dependency of multiple other libraries: in this case,
+	      # we know (pedantically, we assume) the library does not
+	      # need to be listed more than once, so we keep only the
+	      # last copy.  This is not always right, but it is rare
+	      # enough that we require users that really mean to play
+	      # such unportable linking tricks to link the library
+	      # using -Wl,-lname, so that libtool does not consider it
+	      # for duplicate removal.
+	      case " $specialdeplibs " in
+	      *" $deplib "*) new_libs="$deplib $new_libs" ;;
+	      *)
+		case " $new_libs " in
+		*" $deplib "*) ;;
+		*) new_libs="$deplib $new_libs" ;;
+		esac
+		;;
+	      esac
+	      ;;
+	    esac
+	  done
+	  tmp_libs=
+	  for deplib in $new_libs; do
+	    case $deplib in
+	    -L*)
+	      case " $tmp_libs " in
+	      *" $deplib "*) ;;
+	      *) tmp_libs="$tmp_libs $deplib" ;;
+	      esac
+	      ;;
+	    *) tmp_libs="$tmp_libs $deplib" ;;
+	    esac
+	  done
+	  eval $var=\"$tmp_libs\"
+	done # for var
+      fi
+      # Last step: remove runtime libs from dependency_libs
+      # (they stay in deplibs)
+      tmp_libs=
+      for i in $dependency_libs ; do
+	case " $predeps $postdeps $compiler_lib_search_path " in
+	*" $i "*)
+	  i=""
+	  ;;
+	esac
+	if test -n "$i" ; then
+	  tmp_libs="$tmp_libs $i"
+	fi
+      done
+      dependency_libs=$tmp_libs
+    done # for pass
+    if test "$linkmode" = prog; then
+      dlfiles="$newdlfiles"
+      dlprefiles="$newdlprefiles"
+    fi
+
+    case $linkmode in
+    oldlib)
+      if test -n "$deplibs"; then
+	$echo "$modename: warning: \`-l' and \`-L' are ignored for archives" 1>&2
+      fi
+
+      if test -n "$dlfiles$dlprefiles" || test "$dlself" != no; then
+	$echo "$modename: warning: \`-dlopen' is ignored for archives" 1>&2
+      fi
+
+      if test -n "$rpath"; then
+	$echo "$modename: warning: \`-rpath' is ignored for archives" 1>&2
+      fi
+
+      if test -n "$xrpath"; then
+	$echo "$modename: warning: \`-R' is ignored for archives" 1>&2
+      fi
+
+      if test -n "$vinfo"; then
+	$echo "$modename: warning: \`-version-info/-version-number' is ignored for archives" 1>&2
+      fi
+
+      if test -n "$release"; then
+	$echo "$modename: warning: \`-release' is ignored for archives" 1>&2
+      fi
+
+      if test -n "$export_symbols" || test -n "$export_symbols_regex"; then
+	$echo "$modename: warning: \`-export-symbols' is ignored for archives" 1>&2
+      fi
+
+      # Now set the variables for building old libraries.
+      build_libtool_libs=no
+      oldlibs="$output"
+      objs="$objs$old_deplibs"
+      ;;
+
+    lib)
+      # Make sure we only generate libraries of the form `libNAME.la'.
+      case $outputname in
+      lib*)
+	name=`$echo "X$outputname" | $Xsed -e 's/\.la$//' -e 's/^lib//'`
+	eval shared_ext=\"$shrext_cmds\"
+	eval libname=\"$libname_spec\"
+	;;
+      *)
+	if test "$module" = no; then
+	  $echo "$modename: libtool library \`$output' must begin with \`lib'" 1>&2
+	  $echo "$help" 1>&2
+	  exit $EXIT_FAILURE
+	fi
+	if test "$need_lib_prefix" != no; then
+	  # Add the "lib" prefix for modules if required
+	  name=`$echo "X$outputname" | $Xsed -e 's/\.la$//'`
+	  eval shared_ext=\"$shrext_cmds\"
+	  eval libname=\"$libname_spec\"
+	else
+	  libname=`$echo "X$outputname" | $Xsed -e 's/\.la$//'`
+	fi
+	;;
+      esac
+
+      if test -n "$objs"; then
+	if test "$deplibs_check_method" != pass_all; then
+	  $echo "$modename: cannot build libtool library \`$output' from non-libtool objects on this host:$objs" 2>&1
+	  exit $EXIT_FAILURE
+	else
+	  $echo
+	  $echo "*** Warning: Linking the shared library $output against the non-libtool"
+	  $echo "*** objects $objs is not portable!"
+	  libobjs="$libobjs $objs"
+	fi
+      fi
+
+      if test "$dlself" != no; then
+	$echo "$modename: warning: \`-dlopen self' is ignored for libtool libraries" 1>&2
+      fi
+
+      set dummy $rpath
+      if test "$#" -gt 2; then
+	$echo "$modename: warning: ignoring multiple \`-rpath's for a libtool library" 1>&2
+      fi
+      install_libdir="$2"
+
+      oldlibs=
+      if test -z "$rpath"; then
+	if test "$build_libtool_libs" = yes; then
+	  # Building a libtool convenience library.
+	  # Some compilers have problems with a `.al' extension so
+	  # convenience libraries should have the same extension an
+	  # archive normally would.
+	  oldlibs="$output_objdir/$libname.$libext $oldlibs"
+	  build_libtool_libs=convenience
+	  build_old_libs=yes
+	fi
+
+	if test -n "$vinfo"; then
+	  $echo "$modename: warning: \`-version-info/-version-number' is ignored for convenience libraries" 1>&2
+	fi
+
+	if test -n "$release"; then
+	  $echo "$modename: warning: \`-release' is ignored for convenience libraries" 1>&2
+	fi
+      else
+
+	# Parse the version information argument.
+	save_ifs="$IFS"; IFS=':'
+	set dummy $vinfo 0 0 0
+	IFS="$save_ifs"
+
+	if test -n "$8"; then
+	  $echo "$modename: too many parameters to \`-version-info'" 1>&2
+	  $echo "$help" 1>&2
+	  exit $EXIT_FAILURE
+	fi
+
+	# convert absolute version numbers to libtool ages
+	# this retains compatibility with .la files and attempts
+	# to make the code below a bit more comprehensible
+
+	case $vinfo_number in
+	yes)
+	  number_major="$2"
+	  number_minor="$3"
+	  number_revision="$4"
+	  #
+	  # There are really only two kinds -- those that
+	  # use the current revision as the major version
+	  # and those that subtract age and use age as
+	  # a minor version.  But, then there is irix
+	  # which has an extra 1 added just for fun
+	  #
+	  case $version_type in
+	  darwin|linux|osf|windows)
+	    current=`expr $number_major + $number_minor`
+	    age="$number_minor"
+	    revision="$number_revision"
+	    ;;
+	  freebsd-aout|freebsd-elf|sunos)
+	    current="$number_major"
+	    revision="$number_minor"
+	    age="0"
+	    ;;
+	  irix|nonstopux)
+	    current=`expr $number_major + $number_minor - 1`
+	    age="$number_minor"
+	    revision="$number_minor"
+	    ;;
+	  *)
+	    $echo "$modename: unknown library version type \`$version_type'" 1>&2
+	    $echo "Fatal configuration error.  See the $PACKAGE docs for more information." 1>&2
+	    exit $EXIT_FAILURE
+	    ;;
+	  esac
+	  ;;
+	no)
+	  current="$2"
+	  revision="$3"
+	  age="$4"
+	  ;;
+	esac
+
+	# Check that each of the things are valid numbers.
+	case $current in
+	0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;
+	*)
+	  $echo "$modename: CURRENT \`$current' must be a nonnegative integer" 1>&2
+	  $echo "$modename: \`$vinfo' is not valid version information" 1>&2
+	  exit $EXIT_FAILURE
+	  ;;
+	esac
+
+	case $revision in
+	0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;
+	*)
+	  $echo "$modename: REVISION \`$revision' must be a nonnegative integer" 1>&2
+	  $echo "$modename: \`$vinfo' is not valid version information" 1>&2
+	  exit $EXIT_FAILURE
+	  ;;
+	esac
+
+	case $age in
+	0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;
+	*)
+	  $echo "$modename: AGE \`$age' must be a nonnegative integer" 1>&2
+	  $echo "$modename: \`$vinfo' is not valid version information" 1>&2
+	  exit $EXIT_FAILURE
+	  ;;
+	esac
+
+	if test "$age" -gt "$current"; then
+	  $echo "$modename: AGE \`$age' is greater than the current interface number \`$current'" 1>&2
+	  $echo "$modename: \`$vinfo' is not valid version information" 1>&2
+	  exit $EXIT_FAILURE
+	fi
+
+	# Calculate the version variables.
+	major=
+	versuffix=
+	verstring=
+	case $version_type in
+	none) ;;
+
+	darwin)
+	  # Like Linux, but with the current version available in
+	  # verstring for coding it into the library header
+	  major=.`expr $current - $age`
+	  versuffix="$major.$age.$revision"
+	  # Darwin ld doesn't like 0 for these options...
+	  minor_current=`expr $current + 1`
+	  verstring="${wl}-compatibility_version ${wl}$minor_current ${wl}-current_version ${wl}$minor_current.$revision"
+	  ;;
+
+	freebsd-aout)
+	  major=".$current"
+	  versuffix=".$current.$revision";
+	  ;;
+
+	freebsd-elf)
+	  major=".$current"
+	  versuffix=".$current";
+	  ;;
+
+	irix | nonstopux)
+	  major=`expr $current - $age + 1`
+
+	  case $version_type in
+	    nonstopux) verstring_prefix=nonstopux ;;
+	    *)         verstring_prefix=sgi ;;
+	  esac
+	  verstring="$verstring_prefix$major.$revision"
+
+	  # Add in all the interfaces that we are compatible with.
+	  loop=$revision
+	  while test "$loop" -ne 0; do
+	    iface=`expr $revision - $loop`
+	    loop=`expr $loop - 1`
+	    verstring="$verstring_prefix$major.$iface:$verstring"
+	  done
+
+	  # Before this point, $major must not contain `.'.
+	  major=.$major
+	  versuffix="$major.$revision"
+	  ;;
+
+	linux)
+	  major=.`expr $current - $age`
+	  versuffix="$major.$age.$revision"
+	  ;;
+
+	osf)
+	  major=.`expr $current - $age`
+	  versuffix=".$current.$age.$revision"
+	  verstring="$current.$age.$revision"
+
+	  # Add in all the interfaces that we are compatible with.
+	  loop=$age
+	  while test "$loop" -ne 0; do
+	    iface=`expr $current - $loop`
+	    loop=`expr $loop - 1`
+	    verstring="$verstring:${iface}.0"
+	  done
+
+	  # Make executables depend on our current version.
+	  verstring="$verstring:${current}.0"
+	  ;;
+
+	sunos)
+	  major=".$current"
+	  versuffix=".$current.$revision"
+	  ;;
+
+	windows)
+	  # Use '-' rather than '.', since we only want one
+	  # extension on DOS 8.3 filesystems.
+	  major=`expr $current - $age`
+	  versuffix="-$major"
+	  ;;
+
+	*)
+	  $echo "$modename: unknown library version type \`$version_type'" 1>&2
+	  $echo "Fatal configuration error.  See the $PACKAGE docs for more information." 1>&2
+	  exit $EXIT_FAILURE
+	  ;;
+	esac
+
+	# Clear the version info if we defaulted, and they specified a release.
+	if test -z "$vinfo" && test -n "$release"; then
+	  major=
+	  case $version_type in
+	  darwin)
+	    # we can't check for "0.0" in archive_cmds due to quoting
+	    # problems, so we reset it completely
+	    verstring=
+	    ;;
+	  *)
+	    verstring="0.0"
+	    ;;
+	  esac
+	  if test "$need_version" = no; then
+	    versuffix=
+	  else
+	    versuffix=".0.0"
+	  fi
+	fi
+
+	# Remove version info from name if versioning should be avoided
+	if test "$avoid_version" = yes && test "$need_version" = no; then
+	  major=
+	  versuffix=
+	  verstring=""
+	fi
+
+	# Check to see if the archive will have undefined symbols.
+	if test "$allow_undefined" = yes; then
+	  if test "$allow_undefined_flag" = unsupported; then
+	    $echo "$modename: warning: undefined symbols not allowed in $host shared libraries" 1>&2
+	    build_libtool_libs=no
+	    build_old_libs=yes
+	  fi
+	else
+	  # Don't allow undefined symbols.
+	  allow_undefined_flag="$no_undefined_flag"
+	fi
+      fi
+
+      if test "$mode" != relink; then
+	# Remove our outputs, but don't remove object files since they
+	# may have been created when compiling PIC objects.
+	removelist=
+	tempremovelist=`$echo "$output_objdir/*"`
+	for p in $tempremovelist; do
+	  case $p in
+	    *.$objext)
+	       ;;
+	    $output_objdir/$outputname | $output_objdir/$libname.* | $output_objdir/${libname}${release}.*)
+	       if test "X$precious_files_regex" != "X"; then
+	         if echo $p | $EGREP -e "$precious_files_regex" >/dev/null 2>&1
+	         then
+		   continue
+		 fi
+	       fi
+	       removelist="$removelist $p"
+	       ;;
+	    *) ;;
+	  esac
+	done
+	if test -n "$removelist"; then
+	  $show "${rm}r $removelist"
+	  $run ${rm}r $removelist
+	fi
+      fi
+
+      # Now set the variables for building old libraries.
+      if test "$build_old_libs" = yes && test "$build_libtool_libs" != convenience ; then
+	oldlibs="$oldlibs $output_objdir/$libname.$libext"
+
+	# Transform .lo files to .o files.
+	oldobjs="$objs "`$echo "X$libobjs" | $SP2NL | $Xsed -e '/\.'${libext}'$/d' -e "$lo2o" | $NL2SP`
+      fi
+
+      # Eliminate all temporary directories.
+      for path in $notinst_path; do
+	lib_search_path=`$echo "$lib_search_path " | ${SED} -e "s% $path % %g"`
+	deplibs=`$echo "$deplibs " | ${SED} -e "s% -L$path % %g"`
+	dependency_libs=`$echo "$dependency_libs " | ${SED} -e "s% -L$path % %g"`
+      done
+
+      if test -n "$xrpath"; then
+	# If the user specified any rpath flags, then add them.
+	temp_xrpath=
+	for libdir in $xrpath; do
+	  temp_xrpath="$temp_xrpath -R$libdir"
+	  case "$finalize_rpath " in
+	  *" $libdir "*) ;;
+	  *) finalize_rpath="$finalize_rpath $libdir" ;;
+	  esac
+	done
+	if test "$hardcode_into_libs" != yes || test "$build_old_libs" = yes; then
+	  dependency_libs="$temp_xrpath $dependency_libs"
+	fi
+      fi
+
+      # Make sure dlfiles contains only unique files that won't be dlpreopened
+      old_dlfiles="$dlfiles"
+      dlfiles=
+      for lib in $old_dlfiles; do
+	case " $dlprefiles $dlfiles " in
+	*" $lib "*) ;;
+	*) dlfiles="$dlfiles $lib" ;;
+	esac
+      done
+
+      # Make sure dlprefiles contains only unique files
+      old_dlprefiles="$dlprefiles"
+      dlprefiles=
+      for lib in $old_dlprefiles; do
+	case "$dlprefiles " in
+	*" $lib "*) ;;
+	*) dlprefiles="$dlprefiles $lib" ;;
+	esac
+      done
+
+      if test "$build_libtool_libs" = yes; then
+	if test -n "$rpath"; then
+	  case $host in
+	  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-beos*)
+	    # these systems don't actually have a c library (as such)!
+	    ;;
+	  *-*-rhapsody* | *-*-darwin1.[012])
+	    # Rhapsody C library is in the System framework
+	    deplibs="$deplibs -framework System"
+	    ;;
+	  *-*-netbsd*)
+	    # Don't link with libc until the a.out ld.so is fixed.
+	    ;;
+	  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)
+	    # Do not include libc due to us having libc/libc_r.
+	    ;;
+	  *-*-sco3.2v5* | *-*-sco5v6*)
+	    # Causes problems with __ctype
+	    ;;
+	  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)
+	    # Compiler inserts libc in the correct place for threads to work
+	    ;;
+ 	  *)
+	    # Add libc to deplibs on all other systems if necessary.
+	    if test "$build_libtool_need_lc" = "yes"; then
+	      deplibs="$deplibs -lc"
+	    fi
+	    ;;
+	  esac
+	fi
+
+	# Transform deplibs into only deplibs that can be linked in shared.
+	name_save=$name
+	libname_save=$libname
+	release_save=$release
+	versuffix_save=$versuffix
+	major_save=$major
+	# I'm not sure if I'm treating the release correctly.  I think
+	# release should show up in the -l (ie -lgmp5) so we don't want to
+	# add it in twice.  Is that correct?
+	release=""
+	versuffix=""
+	major=""
+	newdeplibs=
+	droppeddeps=no
+	case $deplibs_check_method in
+	pass_all)
+	  # Don't check for shared/static.  Everything works.
+	  # This might be a little naive.  We might want to check
+	  # whether the library exists or not.  But this is on
+	  # osf3 & osf4 and I'm not really sure... Just
+	  # implementing what was already the behavior.
+	  newdeplibs=$deplibs
+	  ;;
+	test_compile)
+	  # This code stresses the "libraries are programs" paradigm to its
+	  # limits. Maybe even breaks it.  We compile a program, linking it
+	  # against the deplibs as a proxy for the library.  Then we can check
+	  # whether they linked in statically or dynamically with ldd.
+	  $rm conftest.c
+	  cat > conftest.c <<EOF
+	  int main() { return 0; }
+EOF
+	  $rm conftest
+	  $LTCC $LTCFLAGS -o conftest conftest.c $deplibs
+	  if test "$?" -eq 0 ; then
+	    ldd_output=`ldd conftest`
+	    for i in $deplibs; do
+	      name=`expr $i : '-l\(.*\)'`
+	      # If $name is empty we are operating on a -L argument.
+              if test "$name" != "" && test "$name" -ne "0"; then
+		if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
+		  case " $predeps $postdeps " in
+		  *" $i "*)
+		    newdeplibs="$newdeplibs $i"
+		    i=""
+		    ;;
+		  esac
+	        fi
+		if test -n "$i" ; then
+		  libname=`eval \\$echo \"$libname_spec\"`
+		  deplib_matches=`eval \\$echo \"$library_names_spec\"`
+		  set dummy $deplib_matches
+		  deplib_match=$2
+		  if test `expr "$ldd_output" : ".*$deplib_match"` -ne 0 ; then
+		    newdeplibs="$newdeplibs $i"
+		  else
+		    droppeddeps=yes
+		    $echo
+		    $echo "*** Warning: dynamic linker does not accept needed library $i."
+		    $echo "*** I have the capability to make that library automatically link in when"
+		    $echo "*** you link to this library.  But I can only do this if you have a"
+		    $echo "*** shared version of the library, which I believe you do not have"
+		    $echo "*** because a test_compile did reveal that the linker did not use it for"
+		    $echo "*** its dynamic dependency list that programs get resolved with at runtime."
+		  fi
+		fi
+	      else
+		newdeplibs="$newdeplibs $i"
+	      fi
+	    done
+	  else
+	    # Error occurred in the first compile.  Let's try to salvage
+	    # the situation: Compile a separate program for each library.
+	    for i in $deplibs; do
+	      name=`expr $i : '-l\(.*\)'`
+	      # If $name is empty we are operating on a -L argument.
+              if test "$name" != "" && test "$name" != "0"; then
+		$rm conftest
+		$LTCC $LTCFLAGS -o conftest conftest.c $i
+		# Did it work?
+		if test "$?" -eq 0 ; then
+		  ldd_output=`ldd conftest`
+		  if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
+		    case " $predeps $postdeps " in
+		    *" $i "*)
+		      newdeplibs="$newdeplibs $i"
+		      i=""
+		      ;;
+		    esac
+		  fi
+		  if test -n "$i" ; then
+		    libname=`eval \\$echo \"$libname_spec\"`
+		    deplib_matches=`eval \\$echo \"$library_names_spec\"`
+		    set dummy $deplib_matches
+		    deplib_match=$2
+		    if test `expr "$ldd_output" : ".*$deplib_match"` -ne 0 ; then
+		      newdeplibs="$newdeplibs $i"
+		    else
+		      droppeddeps=yes
+		      $echo
+		      $echo "*** Warning: dynamic linker does not accept needed library $i."
+		      $echo "*** I have the capability to make that library automatically link in when"
+		      $echo "*** you link to this library.  But I can only do this if you have a"
+		      $echo "*** shared version of the library, which you do not appear to have"
+		      $echo "*** because a test_compile did reveal that the linker did not use this one"
+		      $echo "*** as a dynamic dependency that programs can get resolved with at runtime."
+		    fi
+		  fi
+		else
+		  droppeddeps=yes
+		  $echo
+		  $echo "*** Warning!  Library $i is needed by this library but I was not able to"
+		  $echo "***  make it link in!  You will probably need to install it or some"
+		  $echo "*** library that it depends on before this library will be fully"
+		  $echo "*** functional.  Installing it before continuing would be even better."
+		fi
+	      else
+		newdeplibs="$newdeplibs $i"
+	      fi
+	    done
+	  fi
+	  ;;
+	file_magic*)
+	  set dummy $deplibs_check_method
+	  file_magic_regex=`expr "$deplibs_check_method" : "$2 \(.*\)"`
+	  for a_deplib in $deplibs; do
+	    name=`expr $a_deplib : '-l\(.*\)'`
+	    # If $name is empty we are operating on a -L argument.
+            if test "$name" != "" && test  "$name" != "0"; then
+	      if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
+		case " $predeps $postdeps " in
+		*" $a_deplib "*)
+		  newdeplibs="$newdeplibs $a_deplib"
+		  a_deplib=""
+		  ;;
+		esac
+	      fi
+	      if test -n "$a_deplib" ; then
+		libname=`eval \\$echo \"$libname_spec\"`
+		for i in $lib_search_path $sys_lib_search_path $shlib_search_path; do
+		  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`
+		  for potent_lib in $potential_libs; do
+		      # Follow soft links.
+		      if ls -lLd "$potent_lib" 2>/dev/null \
+			 | grep " -> " >/dev/null; then
+			continue
+		      fi
+		      # The statement above tries to avoid entering an
+		      # endless loop below, in case of cyclic links.
+		      # We might still enter an endless loop, since a link
+		      # loop can be closed while we follow links,
+		      # but so what?
+		      potlib="$potent_lib"
+		      while test -h "$potlib" 2>/dev/null; do
+			potliblink=`ls -ld $potlib | ${SED} 's/.* -> //'`
+			case $potliblink in
+			[\\/]* | [A-Za-z]:[\\/]*) potlib="$potliblink";;
+			*) potlib=`$echo "X$potlib" | $Xsed -e 's,[^/]*$,,'`"$potliblink";;
+			esac
+		      done
+		      if eval $file_magic_cmd \"\$potlib\" 2>/dev/null \
+			 | ${SED} 10q \
+			 | $EGREP "$file_magic_regex" > /dev/null; then
+			newdeplibs="$newdeplibs $a_deplib"
+			a_deplib=""
+			break 2
+		      fi
+		  done
+		done
+	      fi
+	      if test -n "$a_deplib" ; then
+		droppeddeps=yes
+		$echo
+		$echo "*** Warning: linker path does not have real file for library $a_deplib."
+		$echo "*** I have the capability to make that library automatically link in when"
+		$echo "*** you link to this library.  But I can only do this if you have a"
+		$echo "*** shared version of the library, which you do not appear to have"
+		$echo "*** because I did check the linker path looking for a file starting"
+		if test -z "$potlib" ; then
+		  $echo "*** with $libname but no candidates were found. (...for file magic test)"
+		else
+		  $echo "*** with $libname and none of the candidates passed a file format test"
+		  $echo "*** using a file magic. Last file checked: $potlib"
+		fi
+	      fi
+	    else
+	      # Add a -L argument.
+	      newdeplibs="$newdeplibs $a_deplib"
+	    fi
+	  done # Gone through all deplibs.
+	  ;;
+	match_pattern*)
+	  set dummy $deplibs_check_method
+	  match_pattern_regex=`expr "$deplibs_check_method" : "$2 \(.*\)"`
+	  for a_deplib in $deplibs; do
+	    name=`expr $a_deplib : '-l\(.*\)'`
+	    # If $name is empty we are operating on a -L argument.
+	    if test -n "$name" && test "$name" != "0"; then
+	      if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
+		case " $predeps $postdeps " in
+		*" $a_deplib "*)
+		  newdeplibs="$newdeplibs $a_deplib"
+		  a_deplib=""
+		  ;;
+		esac
+	      fi
+	      if test -n "$a_deplib" ; then
+		libname=`eval \\$echo \"$libname_spec\"`
+		for i in $lib_search_path $sys_lib_search_path $shlib_search_path; do
+		  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`
+		  for potent_lib in $potential_libs; do
+		    potlib="$potent_lib" # see symlink-check above in file_magic test
+		    if eval $echo \"$potent_lib\" 2>/dev/null \
+		        | ${SED} 10q \
+		        | $EGREP "$match_pattern_regex" > /dev/null; then
+		      newdeplibs="$newdeplibs $a_deplib"
+		      a_deplib=""
+		      break 2
+		    fi
+		  done
+		done
+	      fi
+	      if test -n "$a_deplib" ; then
+		droppeddeps=yes
+		$echo
+		$echo "*** Warning: linker path does not have real file for library $a_deplib."
+		$echo "*** I have the capability to make that library automatically link in when"
+		$echo "*** you link to this library.  But I can only do this if you have a"
+		$echo "*** shared version of the library, which you do not appear to have"
+		$echo "*** because I did check the linker path looking for a file starting"
+		if test -z "$potlib" ; then
+		  $echo "*** with $libname but no candidates were found. (...for regex pattern test)"
+		else
+		  $echo "*** with $libname and none of the candidates passed a file format test"
+		  $echo "*** using a regex pattern. Last file checked: $potlib"
+		fi
+	      fi
+	    else
+	      # Add a -L argument.
+	      newdeplibs="$newdeplibs $a_deplib"
+	    fi
+	  done # Gone through all deplibs.
+	  ;;
+	none | unknown | *)
+	  newdeplibs=""
+	  tmp_deplibs=`$echo "X $deplibs" | $Xsed -e 's/ -lc$//' \
+	    -e 's/ -[LR][^ ]*//g'`
+	  if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
+	    for i in $predeps $postdeps ; do
+	      # can't use Xsed below, because $i might contain '/'
+	      tmp_deplibs=`$echo "X $tmp_deplibs" | ${SED} -e "1s,^X,," -e "s,$i,,"`
+	    done
+	  fi
+	  if $echo "X $tmp_deplibs" | $Xsed -e 's/[ 	]//g' \
+	    | grep . >/dev/null; then
+	    $echo
+	    if test "X$deplibs_check_method" = "Xnone"; then
+	      $echo "*** Warning: inter-library dependencies are not supported in this platform."
+	    else
+	      $echo "*** Warning: inter-library dependencies are not known to be supported."
+	    fi
+	    $echo "*** All declared inter-library dependencies are being dropped."
+	    droppeddeps=yes
+	  fi
+	  ;;
+	esac
+	versuffix=$versuffix_save
+	major=$major_save
+	release=$release_save
+	libname=$libname_save
+	name=$name_save
+
+	case $host in
+	*-*-rhapsody* | *-*-darwin1.[012])
+	  # On Rhapsody replace the C library is the System framework
+	  newdeplibs=`$echo "X $newdeplibs" | $Xsed -e 's/ -lc / -framework System /'`
+	  ;;
+	esac
+
+	if test "$droppeddeps" = yes; then
+	  if test "$module" = yes; then
+	    $echo
+	    $echo "*** Warning: libtool could not satisfy all declared inter-library"
+	    $echo "*** dependencies of module $libname.  Therefore, libtool will create"
+	    $echo "*** a static module, that should work as long as the dlopening"
+	    $echo "*** application is linked with the -dlopen flag."
+	    if test -z "$global_symbol_pipe"; then
+	      $echo
+	      $echo "*** However, this would only work if libtool was able to extract symbol"
+	      $echo "*** lists from a program, using \`nm' or equivalent, but libtool could"
+	      $echo "*** not find such a program.  So, this module is probably useless."
+	      $echo "*** \`nm' from GNU binutils and a full rebuild may help."
+	    fi
+	    if test "$build_old_libs" = no; then
+	      oldlibs="$output_objdir/$libname.$libext"
+	      build_libtool_libs=module
+	      build_old_libs=yes
+	    else
+	      build_libtool_libs=no
+	    fi
+	  else
+	    $echo "*** The inter-library dependencies that have been dropped here will be"
+	    $echo "*** automatically added whenever a program is linked with this library"
+	    $echo "*** or is declared to -dlopen it."
+
+	    if test "$allow_undefined" = no; then
+	      $echo
+	      $echo "*** Since this library must not contain undefined symbols,"
+	      $echo "*** because either the platform does not support them or"
+	      $echo "*** it was explicitly requested with -no-undefined,"
+	      $echo "*** libtool will only create a static version of it."
+	      if test "$build_old_libs" = no; then
+		oldlibs="$output_objdir/$libname.$libext"
+		build_libtool_libs=module
+		build_old_libs=yes
+	      else
+		build_libtool_libs=no
+	      fi
+	    fi
+	  fi
+	fi
+	# Done checking deplibs!
+	deplibs=$newdeplibs
+      fi
+
+
+      # move library search paths that coincide with paths to not yet
+      # installed libraries to the beginning of the library search list
+      new_libs=
+      for path in $notinst_path; do
+	case " $new_libs " in
+	*" -L$path/$objdir "*) ;;
+	*)
+	  case " $deplibs " in
+	  *" -L$path/$objdir "*)
+	    new_libs="$new_libs -L$path/$objdir" ;;
+	  esac
+	  ;;
+	esac
+      done
+      for deplib in $deplibs; do
+	case $deplib in
+	-L*)
+	  case " $new_libs " in
+	  *" $deplib "*) ;;
+	  *) new_libs="$new_libs $deplib" ;;
+	  esac
+	  ;;
+	*) new_libs="$new_libs $deplib" ;;
+	esac
+      done
+      deplibs="$new_libs"
+
+
+      # All the library-specific variables (install_libdir is set above).
+      library_names=
+      old_library=
+      dlname=
+
+      # Test again, we may have decided not to build it any more
+      if test "$build_libtool_libs" = yes; then
+	if test "$hardcode_into_libs" = yes; then
+	  # Hardcode the library paths
+	  hardcode_libdirs=
+	  dep_rpath=
+	  rpath="$finalize_rpath"
+	  test "$mode" != relink && rpath="$compile_rpath$rpath"
+	  for libdir in $rpath; do
+	    if test -n "$hardcode_libdir_flag_spec"; then
+	      if test -n "$hardcode_libdir_separator"; then
+		if test -z "$hardcode_libdirs"; then
+		  hardcode_libdirs="$libdir"
+		else
+		  # Just accumulate the unique libdirs.
+		  case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in
+		  *"$hardcode_libdir_separator$libdir$hardcode_libdir_separator"*)
+		    ;;
+		  *)
+		    hardcode_libdirs="$hardcode_libdirs$hardcode_libdir_separator$libdir"
+		    ;;
+		  esac
+		fi
+	      else
+		eval flag=\"$hardcode_libdir_flag_spec\"
+		dep_rpath="$dep_rpath $flag"
+	      fi
+	    elif test -n "$runpath_var"; then
+	      case "$perm_rpath " in
+	      *" $libdir "*) ;;
+	      *) perm_rpath="$perm_rpath $libdir" ;;
+	      esac
+	    fi
+	  done
+	  # Substitute the hardcoded libdirs into the rpath.
+	  if test -n "$hardcode_libdir_separator" &&
+	     test -n "$hardcode_libdirs"; then
+	    libdir="$hardcode_libdirs"
+	    if test -n "$hardcode_libdir_flag_spec_ld"; then
+	      eval dep_rpath=\"$hardcode_libdir_flag_spec_ld\"
+	    else
+	      eval dep_rpath=\"$hardcode_libdir_flag_spec\"
+	    fi
+	  fi
+	  if test -n "$runpath_var" && test -n "$perm_rpath"; then
+	    # We should set the runpath_var.
+	    rpath=
+	    for dir in $perm_rpath; do
+	      rpath="$rpath$dir:"
+	    done
+	    eval "$runpath_var='$rpath\$$runpath_var'; export $runpath_var"
+	  fi
+	  test -n "$dep_rpath" && deplibs="$dep_rpath $deplibs"
+	fi
+
+	shlibpath="$finalize_shlibpath"
+	test "$mode" != relink && shlibpath="$compile_shlibpath$shlibpath"
+	if test -n "$shlibpath"; then
+	  eval "$shlibpath_var='$shlibpath\$$shlibpath_var'; export $shlibpath_var"
+	fi
+
+	# Get the real and link names of the library.
+	eval shared_ext=\"$shrext_cmds\"
+	eval library_names=\"$library_names_spec\"
+	set dummy $library_names
+	realname="$2"
+	shift; shift
+
+	if test -n "$soname_spec"; then
+	  eval soname=\"$soname_spec\"
+	else
+	  soname="$realname"
+	fi
+	if test -z "$dlname"; then
+	  dlname=$soname
+	fi
+
+	lib="$output_objdir/$realname"
+	linknames=
+	for link
+	do
+	  linknames="$linknames $link"
+	done
+
+	# Use standard objects if they are pic
+	test -z "$pic_flag" && libobjs=`$echo "X$libobjs" | $SP2NL | $Xsed -e "$lo2o" | $NL2SP`
+
+	# Prepare the list of exported symbols
+	if test -z "$export_symbols"; then
+	  if test "$always_export_symbols" = yes || test -n "$export_symbols_regex"; then
+	    $show "generating symbol list for \`$libname.la'"
+	    export_symbols="$output_objdir/$libname.exp"
+	    $run $rm $export_symbols
+	    cmds=$export_symbols_cmds
+	    save_ifs="$IFS"; IFS='~'
+	    for cmd in $cmds; do
+	      IFS="$save_ifs"
+	      eval cmd=\"$cmd\"
+	      if len=`expr "X$cmd" : ".*"` &&
+	       test "$len" -le "$max_cmd_len" || test "$max_cmd_len" -le -1; then
+	        $show "$cmd"
+	        $run eval "$cmd" || exit $?
+	        skipped_export=false
+	      else
+	        # The command line is too long to execute in one step.
+	        $show "using reloadable object file for export list..."
+	        skipped_export=:
+		# Break out early, otherwise skipped_export may be
+		# set to false by a later but shorter cmd.
+		break
+	      fi
+	    done
+	    IFS="$save_ifs"
+	    if test -n "$export_symbols_regex"; then
+	      $show "$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\""
+	      $run eval '$EGREP -e "$export_symbols_regex" "$export_symbols" > "${export_symbols}T"'
+	      $show "$mv \"${export_symbols}T\" \"$export_symbols\""
+	      $run eval '$mv "${export_symbols}T" "$export_symbols"'
+	    fi
+	  fi
+	fi
+
+	if test -n "$export_symbols" && test -n "$include_expsyms"; then
+	  $run eval '$echo "X$include_expsyms" | $SP2NL >> "$export_symbols"'
+	fi
+
+	tmp_deplibs=
+	for test_deplib in $deplibs; do
+		case " $convenience " in
+		*" $test_deplib "*) ;;
+		*)
+			tmp_deplibs="$tmp_deplibs $test_deplib"
+			;;
+		esac
+	done
+	deplibs="$tmp_deplibs"
+
+	if test -n "$convenience"; then
+	  if test -n "$whole_archive_flag_spec"; then
+	    save_libobjs=$libobjs
+	    eval libobjs=\"\$libobjs $whole_archive_flag_spec\"
+	  else
+	    gentop="$output_objdir/${outputname}x"
+	    generated="$generated $gentop"
+
+	    func_extract_archives $gentop $convenience
+	    libobjs="$libobjs $func_extract_archives_result"
+	  fi
+	fi
+	
+	if test "$thread_safe" = yes && test -n "$thread_safe_flag_spec"; then
+	  eval flag=\"$thread_safe_flag_spec\"
+	  linker_flags="$linker_flags $flag"
+	fi
+
+	# Make a backup of the uninstalled library when relinking
+	if test "$mode" = relink; then
+	  $run eval '(cd $output_objdir && $rm ${realname}U && $mv $realname ${realname}U)' || exit $?
+	fi
+
+	# Do each of the archive commands.
+	if test "$module" = yes && test -n "$module_cmds" ; then
+	  if test -n "$export_symbols" && test -n "$module_expsym_cmds"; then
+	    eval test_cmds=\"$module_expsym_cmds\"
+	    cmds=$module_expsym_cmds
+	  else
+	    eval test_cmds=\"$module_cmds\"
+	    cmds=$module_cmds
+	  fi
+	else
+	if test -n "$export_symbols" && test -n "$archive_expsym_cmds"; then
+	  eval test_cmds=\"$archive_expsym_cmds\"
+	  cmds=$archive_expsym_cmds
+	else
+	  eval test_cmds=\"$archive_cmds\"
+	  cmds=$archive_cmds
+	  fi
+	fi
+
+	if test "X$skipped_export" != "X:" &&
+	   len=`expr "X$test_cmds" : ".*" 2>/dev/null` &&
+	   test "$len" -le "$max_cmd_len" || test "$max_cmd_len" -le -1; then
+	  :
+	else
+	  # The command line is too long to link in one step, link piecewise.
+	  $echo "creating reloadable object files..."
+
+	  # Save the value of $output and $libobjs because we want to
+	  # use them later.  If we have whole_archive_flag_spec, we
+	  # want to use save_libobjs as it was before
+	  # whole_archive_flag_spec was expanded, because we can't
+	  # assume the linker understands whole_archive_flag_spec.
+	  # This may have to be revisited, in case too many
+	  # convenience libraries get linked in and end up exceeding
+	  # the spec.
+	  if test -z "$convenience" || test -z "$whole_archive_flag_spec"; then
+	    save_libobjs=$libobjs
+	  fi
+	  save_output=$output
+	  output_la=`$echo "X$output" | $Xsed -e "$basename"`
+
+	  # Clear the reloadable object creation command queue and
+	  # initialize k to one.
+	  test_cmds=
+	  concat_cmds=
+	  objlist=
+	  delfiles=
+	  last_robj=
+	  k=1
+	  output=$output_objdir/$output_la-${k}.$objext
+	  # Loop over the list of objects to be linked.
+	  for obj in $save_libobjs
+	  do
+	    eval test_cmds=\"$reload_cmds $objlist $last_robj\"
+	    if test "X$objlist" = X ||
+	       { len=`expr "X$test_cmds" : ".*" 2>/dev/null` &&
+		 test "$len" -le "$max_cmd_len"; }; then
+	      objlist="$objlist $obj"
+	    else
+	      # The command $test_cmds is almost too long, add a
+	      # command to the queue.
+	      if test "$k" -eq 1 ; then
+		# The first file doesn't have a previous command to add.
+		eval concat_cmds=\"$reload_cmds $objlist $last_robj\"
+	      else
+		# All subsequent reloadable object files will link in
+		# the last one created.
+		eval concat_cmds=\"\$concat_cmds~$reload_cmds $objlist $last_robj\"
+	      fi
+	      last_robj=$output_objdir/$output_la-${k}.$objext
+	      k=`expr $k + 1`
+	      output=$output_objdir/$output_la-${k}.$objext
+	      objlist=$obj
+	      len=1
+	    fi
+	  done
+	  # Handle the remaining objects by creating one last
+	  # reloadable object file.  All subsequent reloadable object
+	  # files will link in the last one created.
+	  test -z "$concat_cmds" || concat_cmds=$concat_cmds~
+	  eval concat_cmds=\"\${concat_cmds}$reload_cmds $objlist $last_robj\"
+
+	  if ${skipped_export-false}; then
+	    $show "generating symbol list for \`$libname.la'"
+	    export_symbols="$output_objdir/$libname.exp"
+	    $run $rm $export_symbols
+	    libobjs=$output
+	    # Append the command to create the export file.
+	    eval concat_cmds=\"\$concat_cmds~$export_symbols_cmds\"
+          fi
+
+	  # Set up a command to remove the reloadable object files
+	  # after they are used.
+	  i=0
+	  while test "$i" -lt "$k"
+	  do
+	    i=`expr $i + 1`
+	    delfiles="$delfiles $output_objdir/$output_la-${i}.$objext"
+	  done
+
+	  $echo "creating a temporary reloadable object file: $output"
+
+	  # Loop through the commands generated above and execute them.
+	  save_ifs="$IFS"; IFS='~'
+	  for cmd in $concat_cmds; do
+	    IFS="$save_ifs"
+	    $show "$cmd"
+	    $run eval "$cmd" || exit $?
+	  done
+	  IFS="$save_ifs"
+
+	  libobjs=$output
+	  # Restore the value of output.
+	  output=$save_output
+
+	  if test -n "$convenience" && test -n "$whole_archive_flag_spec"; then
+	    eval libobjs=\"\$libobjs $whole_archive_flag_spec\"
+	  fi
+	  # Expand the library linking commands again to reset the
+	  # value of $libobjs for piecewise linking.
+
+	  # Do each of the archive commands.
+	  if test "$module" = yes && test -n "$module_cmds" ; then
+	    if test -n "$export_symbols" && test -n "$module_expsym_cmds"; then
+	      cmds=$module_expsym_cmds
+	    else
+	      cmds=$module_cmds
+	    fi
+	  else
+	  if test -n "$export_symbols" && test -n "$archive_expsym_cmds"; then
+	    cmds=$archive_expsym_cmds
+	  else
+	    cmds=$archive_cmds
+	    fi
+	  fi
+
+	  # Append the command to remove the reloadable object files
+	  # to the just-reset $cmds.
+	  eval cmds=\"\$cmds~\$rm $delfiles\"
+	fi
+	save_ifs="$IFS"; IFS='~'
+	for cmd in $cmds; do
+	  IFS="$save_ifs"
+	  eval cmd=\"$cmd\"
+	  $show "$cmd"
+	  $run eval "$cmd" || {
+	    lt_exit=$?
+
+	    # Restore the uninstalled library and exit
+	    if test "$mode" = relink; then
+	      $run eval '(cd $output_objdir && $rm ${realname}T && $mv ${realname}U $realname)'
+	    fi
+
+	    exit $lt_exit
+	  }
+	done
+	IFS="$save_ifs"
+
+	# Restore the uninstalled library and exit
+	if test "$mode" = relink; then
+	  $run eval '(cd $output_objdir && $rm ${realname}T && $mv $realname ${realname}T && $mv "$realname"U $realname)' || exit $?
+
+	  if test -n "$convenience"; then
+	    if test -z "$whole_archive_flag_spec"; then
+	      $show "${rm}r $gentop"
+	      $run ${rm}r "$gentop"
+	    fi
+	  fi
+
+	  exit $EXIT_SUCCESS
+	fi
+
+	# Create links to the real library.
+	for linkname in $linknames; do
+	  if test "$realname" != "$linkname"; then
+	    $show "(cd $output_objdir && $rm $linkname && $LN_S $realname $linkname)"
+	    $run eval '(cd $output_objdir && $rm $linkname && $LN_S $realname $linkname)' || exit $?
+	  fi
+	done
+
+	# If -module or -export-dynamic was specified, set the dlname.
+	if test "$module" = yes || test "$export_dynamic" = yes; then
+	  # On all known operating systems, these are identical.
+	  dlname="$soname"
+	fi
+      fi
+      ;;
+
+    obj)
+      if test -n "$deplibs"; then
+	$echo "$modename: warning: \`-l' and \`-L' are ignored for objects" 1>&2
+      fi
+
+      if test -n "$dlfiles$dlprefiles" || test "$dlself" != no; then
+	$echo "$modename: warning: \`-dlopen' is ignored for objects" 1>&2
+      fi
+
+      if test -n "$rpath"; then
+	$echo "$modename: warning: \`-rpath' is ignored for objects" 1>&2
+      fi
+
+      if test -n "$xrpath"; then
+	$echo "$modename: warning: \`-R' is ignored for objects" 1>&2
+      fi
+
+      if test -n "$vinfo"; then
+	$echo "$modename: warning: \`-version-info' is ignored for objects" 1>&2
+      fi
+
+      if test -n "$release"; then
+	$echo "$modename: warning: \`-release' is ignored for objects" 1>&2
+      fi
+
+      case $output in
+      *.lo)
+	if test -n "$objs$old_deplibs"; then
+	  $echo "$modename: cannot build library object \`$output' from non-libtool objects" 1>&2
+	  exit $EXIT_FAILURE
+	fi
+	libobj="$output"
+	obj=`$echo "X$output" | $Xsed -e "$lo2o"`
+	;;
+      *)
+	libobj=
+	obj="$output"
+	;;
+      esac
+
+      # Delete the old objects.
+      $run $rm $obj $libobj
+
+      # Objects from convenience libraries.  This assumes
+      # single-version convenience libraries.  Whenever we create
+      # different ones for PIC/non-PIC, this we'll have to duplicate
+      # the extraction.
+      reload_conv_objs=
+      gentop=
+      # reload_cmds runs $LD directly, so let us get rid of
+      # -Wl from whole_archive_flag_spec
+      wl=
+
+      if test -n "$convenience"; then
+	if test -n "$whole_archive_flag_spec"; then
+	  eval reload_conv_objs=\"\$reload_objs $whole_archive_flag_spec\"
+	else
+	  gentop="$output_objdir/${obj}x"
+	  generated="$generated $gentop"
+
+	  func_extract_archives $gentop $convenience
+	  reload_conv_objs="$reload_objs $func_extract_archives_result"
+	fi
+      fi
+
+      # Create the old-style object.
+      reload_objs="$objs$old_deplibs "`$echo "X$libobjs" | $SP2NL | $Xsed -e '/\.'${libext}$'/d' -e '/\.lib$/d' -e "$lo2o" | $NL2SP`" $reload_conv_objs" ### testsuite: skip nested quoting test
+
+      output="$obj"
+      cmds=$reload_cmds
+      save_ifs="$IFS"; IFS='~'
+      for cmd in $cmds; do
+	IFS="$save_ifs"
+	eval cmd=\"$cmd\"
+	$show "$cmd"
+	$run eval "$cmd" || exit $?
+      done
+      IFS="$save_ifs"
+
+      # Exit if we aren't doing a library object file.
+      if test -z "$libobj"; then
+	if test -n "$gentop"; then
+	  $show "${rm}r $gentop"
+	  $run ${rm}r $gentop
+	fi
+
+	exit $EXIT_SUCCESS
+      fi
+
+      if test "$build_libtool_libs" != yes; then
+	if test -n "$gentop"; then
+	  $show "${rm}r $gentop"
+	  $run ${rm}r $gentop
+	fi
+
+	# Create an invalid libtool object if no PIC, so that we don't
+	# accidentally link it into a program.
+	# $show "echo timestamp > $libobj"
+	# $run eval "echo timestamp > $libobj" || exit $?
+	exit $EXIT_SUCCESS
+      fi
+
+      if test -n "$pic_flag" || test "$pic_mode" != default; then
+	# Only do commands if we really have different PIC objects.
+	reload_objs="$libobjs $reload_conv_objs"
+	output="$libobj"
+	cmds=$reload_cmds
+	save_ifs="$IFS"; IFS='~'
+	for cmd in $cmds; do
+	  IFS="$save_ifs"
+	  eval cmd=\"$cmd\"
+	  $show "$cmd"
+	  $run eval "$cmd" || exit $?
+	done
+	IFS="$save_ifs"
+      fi
+
+      if test -n "$gentop"; then
+	$show "${rm}r $gentop"
+	$run ${rm}r $gentop
+      fi
+
+      exit $EXIT_SUCCESS
+      ;;
+
+    prog)
+      case $host in
+	*cygwin*) output=`$echo $output | ${SED} -e 's,.exe$,,;s,$,.exe,'` ;;
+      esac
+      if test -n "$vinfo"; then
+	$echo "$modename: warning: \`-version-info' is ignored for programs" 1>&2
+      fi
+
+      if test -n "$release"; then
+	$echo "$modename: warning: \`-release' is ignored for programs" 1>&2
+      fi
+
+      if test "$preload" = yes; then
+	if test "$dlopen_support" = unknown && test "$dlopen_self" = unknown &&
+	   test "$dlopen_self_static" = unknown; then
+	  $echo "$modename: warning: \`AC_LIBTOOL_DLOPEN' not used. Assuming no dlopen support."
+	fi
+      fi
+
+      case $host in
+      *-*-rhapsody* | *-*-darwin1.[012])
+	# On Rhapsody replace the C library is the System framework
+	compile_deplibs=`$echo "X $compile_deplibs" | $Xsed -e 's/ -lc / -framework System /'`
+	finalize_deplibs=`$echo "X $finalize_deplibs" | $Xsed -e 's/ -lc / -framework System /'`
+	;;
+      esac
+
+      case $host in
+      *darwin*)
+        # Don't allow lazy linking, it breaks C++ global constructors
+        if test "$tagname" = CXX ; then
+        compile_command="$compile_command ${wl}-bind_at_load"
+        finalize_command="$finalize_command ${wl}-bind_at_load"
+        fi
+        ;;
+      esac
+
+
+      # move library search paths that coincide with paths to not yet
+      # installed libraries to the beginning of the library search list
+      new_libs=
+      for path in $notinst_path; do
+	case " $new_libs " in
+	*" -L$path/$objdir "*) ;;
+	*)
+	  case " $compile_deplibs " in
+	  *" -L$path/$objdir "*)
+	    new_libs="$new_libs -L$path/$objdir" ;;
+	  esac
+	  ;;
+	esac
+      done
+      for deplib in $compile_deplibs; do
+	case $deplib in
+	-L*)
+	  case " $new_libs " in
+	  *" $deplib "*) ;;
+	  *) new_libs="$new_libs $deplib" ;;
+	  esac
+	  ;;
+	*) new_libs="$new_libs $deplib" ;;
+	esac
+      done
+      compile_deplibs="$new_libs"
+
+
+      compile_command="$compile_command $compile_deplibs"
+      finalize_command="$finalize_command $finalize_deplibs"
+
+      if test -n "$rpath$xrpath"; then
+	# If the user specified any rpath flags, then add them.
+	for libdir in $rpath $xrpath; do
+	  # This is the magic to use -rpath.
+	  case "$finalize_rpath " in
+	  *" $libdir "*) ;;
+	  *) finalize_rpath="$finalize_rpath $libdir" ;;
+	  esac
+	done
+      fi
+
+      # Now hardcode the library paths
+      rpath=
+      hardcode_libdirs=
+      for libdir in $compile_rpath $finalize_rpath; do
+	if test -n "$hardcode_libdir_flag_spec"; then
+	  if test -n "$hardcode_libdir_separator"; then
+	    if test -z "$hardcode_libdirs"; then
+	      hardcode_libdirs="$libdir"
+	    else
+	      # Just accumulate the unique libdirs.
+	      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in
+	      *"$hardcode_libdir_separator$libdir$hardcode_libdir_separator"*)
+		;;
+	      *)
+		hardcode_libdirs="$hardcode_libdirs$hardcode_libdir_separator$libdir"
+		;;
+	      esac
+	    fi
+	  else
+	    eval flag=\"$hardcode_libdir_flag_spec\"
+	    rpath="$rpath $flag"
+	  fi
+	elif test -n "$runpath_var"; then
+	  case "$perm_rpath " in
+	  *" $libdir "*) ;;
+	  *) perm_rpath="$perm_rpath $libdir" ;;
+	  esac
+	fi
+	case $host in
+	*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2*)
+	  testbindir=`$echo "X$libdir" | $Xsed -e 's*/lib$*/bin*'`
+	  case :$dllsearchpath: in
+	  *":$libdir:"*) ;;
+	  *) dllsearchpath="$dllsearchpath:$libdir";;
+	  esac
+	  case :$dllsearchpath: in
+	  *":$testbindir:"*) ;;
+	  *) dllsearchpath="$dllsearchpath:$testbindir";;
+	  esac
+	  ;;
+	esac
+      done
+      # Substitute the hardcoded libdirs into the rpath.
+      if test -n "$hardcode_libdir_separator" &&
+	 test -n "$hardcode_libdirs"; then
+	libdir="$hardcode_libdirs"
+	eval rpath=\" $hardcode_libdir_flag_spec\"
+      fi
+      compile_rpath="$rpath"
+
+      rpath=
+      hardcode_libdirs=
+      for libdir in $finalize_rpath; do
+	if test -n "$hardcode_libdir_flag_spec"; then
+	  if test -n "$hardcode_libdir_separator"; then
+	    if test -z "$hardcode_libdirs"; then
+	      hardcode_libdirs="$libdir"
+	    else
+	      # Just accumulate the unique libdirs.
+	      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in
+	      *"$hardcode_libdir_separator$libdir$hardcode_libdir_separator"*)
+		;;
+	      *)
+		hardcode_libdirs="$hardcode_libdirs$hardcode_libdir_separator$libdir"
+		;;
+	      esac
+	    fi
+	  else
+	    eval flag=\"$hardcode_libdir_flag_spec\"
+	    rpath="$rpath $flag"
+	  fi
+	elif test -n "$runpath_var"; then
+	  case "$finalize_perm_rpath " in
+	  *" $libdir "*) ;;
+	  *) finalize_perm_rpath="$finalize_perm_rpath $libdir" ;;
+	  esac
+	fi
+      done
+      # Substitute the hardcoded libdirs into the rpath.
+      if test -n "$hardcode_libdir_separator" &&
+	 test -n "$hardcode_libdirs"; then
+	libdir="$hardcode_libdirs"
+	eval rpath=\" $hardcode_libdir_flag_spec\"
+      fi
+      finalize_rpath="$rpath"
+
+      if test -n "$libobjs" && test "$build_old_libs" = yes; then
+	# Transform all the library objects into standard objects.
+	compile_command=`$echo "X$compile_command" | $SP2NL | $Xsed -e "$lo2o" | $NL2SP`
+	finalize_command=`$echo "X$finalize_command" | $SP2NL | $Xsed -e "$lo2o" | $NL2SP`
+      fi
+
+      dlsyms=
+      if test -n "$dlfiles$dlprefiles" || test "$dlself" != no; then
+	if test -n "$NM" && test -n "$global_symbol_pipe"; then
+	  dlsyms="${outputname}S.c"
+	else
+	  $echo "$modename: not configured to extract global symbols from dlpreopened files" 1>&2
+	fi
+      fi
+
+      if test -n "$dlsyms"; then
+	case $dlsyms in
+	"") ;;
+	*.c)
+	  # Discover the nlist of each of the dlfiles.
+	  nlist="$output_objdir/${outputname}.nm"
+
+	  $show "$rm $nlist ${nlist}S ${nlist}T"
+	  $run $rm "$nlist" "${nlist}S" "${nlist}T"
+
+	  # Parse the name list into a source file.
+	  $show "creating $output_objdir/$dlsyms"
+
+	  test -z "$run" && $echo > "$output_objdir/$dlsyms" "\
+/* $dlsyms - symbol resolution table for \`$outputname' dlsym emulation. */
+/* Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP */
+
+#ifdef __cplusplus
+extern \"C\" {
+#endif
+
+/* Prevent the only kind of declaration conflicts we can make. */
+#define lt_preloaded_symbols some_other_symbol
+
+/* External symbol declarations for the compiler. */\
+"
+
+	  if test "$dlself" = yes; then
+	    $show "generating symbol list for \`$output'"
+
+	    test -z "$run" && $echo ': @PROGRAM@ ' > "$nlist"
+
+	    # Add our own program objects to the symbol list.
+	    progfiles=`$echo "X$objs$old_deplibs" | $SP2NL | $Xsed -e "$lo2o" | $NL2SP`
+	    for arg in $progfiles; do
+	      $show "extracting global C symbols from \`$arg'"
+	      $run eval "$NM $arg | $global_symbol_pipe >> '$nlist'"
+	    done
+
+	    if test -n "$exclude_expsyms"; then
+	      $run eval '$EGREP -v " ($exclude_expsyms)$" "$nlist" > "$nlist"T'
+	      $run eval '$mv "$nlist"T "$nlist"'
+	    fi
+
+	    if test -n "$export_symbols_regex"; then
+	      $run eval '$EGREP -e "$export_symbols_regex" "$nlist" > "$nlist"T'
+	      $run eval '$mv "$nlist"T "$nlist"'
+	    fi
+
+	    # Prepare the list of exported symbols
+	    if test -z "$export_symbols"; then
+	      export_symbols="$output_objdir/$outputname.exp"
+	      $run $rm $export_symbols
+	      $run eval "${SED} -n -e '/^: @PROGRAM@ $/d' -e 's/^.* \(.*\)$/\1/p' "'< "$nlist" > "$export_symbols"'
+              case $host in
+              *cygwin* | *mingw* )
+	        $run eval "echo EXPORTS "'> "$output_objdir/$outputname.def"'
+		$run eval 'cat "$export_symbols" >> "$output_objdir/$outputname.def"'
+                ;;
+              esac
+	    else
+	      $run eval "${SED} -e 's/\([].[*^$]\)/\\\\\1/g' -e 's/^/ /' -e 's/$/$/'"' < "$export_symbols" > "$output_objdir/$outputname.exp"'
+	      $run eval 'grep -f "$output_objdir/$outputname.exp" < "$nlist" > "$nlist"T'
+	      $run eval 'mv "$nlist"T "$nlist"'
+              case $host in
+              *cygwin* | *mingw* )
+	        $run eval "echo EXPORTS "'> "$output_objdir/$outputname.def"'
+		$run eval 'cat "$nlist" >> "$output_objdir/$outputname.def"'
+                ;;
+              esac
+	    fi
+	  fi
+
+	  for arg in $dlprefiles; do
+	    $show "extracting global C symbols from \`$arg'"
+	    name=`$echo "$arg" | ${SED} -e 's%^.*/%%'`
+	    $run eval '$echo ": $name " >> "$nlist"'
+	    $run eval "$NM $arg | $global_symbol_pipe >> '$nlist'"
+	  done
+
+	  if test -z "$run"; then
+	    # Make sure we have at least an empty file.
+	    test -f "$nlist" || : > "$nlist"
+
+	    if test -n "$exclude_expsyms"; then
+	      $EGREP -v " ($exclude_expsyms)$" "$nlist" > "$nlist"T
+	      $mv "$nlist"T "$nlist"
+	    fi
+
+	    # Try sorting and uniquifying the output.
+	    if grep -v "^: " < "$nlist" |
+		if sort -k 3 </dev/null >/dev/null 2>&1; then
+		  sort -k 3
+		else
+		  sort +2
+		fi |
+		uniq > "$nlist"S; then
+	      :
+	    else
+	      grep -v "^: " < "$nlist" > "$nlist"S
+	    fi
+
+	    if test -f "$nlist"S; then
+	      eval "$global_symbol_to_cdecl"' < "$nlist"S >> "$output_objdir/$dlsyms"'
+	    else
+	      $echo '/* NONE */' >> "$output_objdir/$dlsyms"
+	    fi
+
+	    $echo >> "$output_objdir/$dlsyms" "\
+
+#undef lt_preloaded_symbols
+
+#if defined (__STDC__) && __STDC__
+# define lt_ptr void *
+#else
+# define lt_ptr char *
+# define const
+#endif
+
+/* The mapping between symbol names and symbols. */
+"
+
+	    case $host in
+	    *cygwin* | *mingw* )
+	  $echo >> "$output_objdir/$dlsyms" "\
+/* DATA imports from DLLs on WIN32 can't be const, because
+   runtime relocations are performed -- see ld's documentation
+   on pseudo-relocs */
+struct {
+"
+	      ;;
+	    * )
+	  $echo >> "$output_objdir/$dlsyms" "\
+const struct {
+"
+	      ;;
+	    esac
+
+
+	  $echo >> "$output_objdir/$dlsyms" "\
+  const char *name;
+  lt_ptr address;
+}
+lt_preloaded_symbols[] =
+{\
+"
+
+	    eval "$global_symbol_to_c_name_address" < "$nlist" >> "$output_objdir/$dlsyms"
+
+	    $echo >> "$output_objdir/$dlsyms" "\
+  {0, (lt_ptr) 0}
+};
+
+/* This works around a problem in FreeBSD linker */
+#ifdef FREEBSD_WORKAROUND
+static const void *lt_preloaded_setup() {
+  return lt_preloaded_symbols;
+}
+#endif
+
+#ifdef __cplusplus
+}
+#endif\
+"
+	  fi
+
+	  pic_flag_for_symtable=
+	  case $host in
+	  # compiling the symbol table file with pic_flag works around
+	  # a FreeBSD bug that causes programs to crash when -lm is
+	  # linked before any other PIC object.  But we must not use
+	  # pic_flag when linking with -static.  The problem exists in
+	  # FreeBSD 2.2.6 and is fixed in FreeBSD 3.1.
+	  *-*-freebsd2*|*-*-freebsd3.0*|*-*-freebsdelf3.0*)
+	    case "$compile_command " in
+	    *" -static "*) ;;
+	    *) pic_flag_for_symtable=" $pic_flag -DFREEBSD_WORKAROUND";;
+	    esac;;
+	  *-*-hpux*)
+	    case "$compile_command " in
+	    *" -static "*) ;;
+	    *) pic_flag_for_symtable=" $pic_flag";;
+	    esac
+	  esac
+
+	  # Now compile the dynamic symbol file.
+	  $show "(cd $output_objdir && $LTCC  $LTCFLAGS -c$no_builtin_flag$pic_flag_for_symtable \"$dlsyms\")"
+	  $run eval '(cd $output_objdir && $LTCC  $LTCFLAGS -c$no_builtin_flag$pic_flag_for_symtable "$dlsyms")' || exit $?
+
+	  # Clean up the generated files.
+	  $show "$rm $output_objdir/$dlsyms $nlist ${nlist}S ${nlist}T"
+	  $run $rm "$output_objdir/$dlsyms" "$nlist" "${nlist}S" "${nlist}T"
+
+	  # Transform the symbol file into the correct name.
+          case $host in
+          *cygwin* | *mingw* )
+            if test -f "$output_objdir/${outputname}.def" ; then
+              compile_command=`$echo "X$compile_command" | $Xsed -e "s%@SYMFILE@%$output_objdir/${outputname}.def $output_objdir/${outputname}S.${objext}%"`
+              finalize_command=`$echo "X$finalize_command" | $Xsed -e "s%@SYMFILE@%$output_objdir/${outputname}.def $output_objdir/${outputname}S.${objext}%"`
+            else
+              compile_command=`$echo "X$compile_command" | $Xsed -e "s%@SYMFILE@%$output_objdir/${outputname}S.${objext}%"`
+              finalize_command=`$echo "X$finalize_command" | $Xsed -e "s%@SYMFILE@%$output_objdir/${outputname}S.${objext}%"`
+             fi
+            ;;
+          * )
+            compile_command=`$echo "X$compile_command" | $Xsed -e "s%@SYMFILE@%$output_objdir/${outputname}S.${objext}%"`
+            finalize_command=`$echo "X$finalize_command" | $Xsed -e "s%@SYMFILE@%$output_objdir/${outputname}S.${objext}%"`
+            ;;
+          esac
+	  ;;
+	*)
+	  $echo "$modename: unknown suffix for \`$dlsyms'" 1>&2
+	  exit $EXIT_FAILURE
+	  ;;
+	esac
+      else
+	# We keep going just in case the user didn't refer to
+	# lt_preloaded_symbols.  The linker will fail if global_symbol_pipe
+	# really was required.
+
+	# Nullify the symbol file.
+	compile_command=`$echo "X$compile_command" | $Xsed -e "s% @SYMFILE@%%"`
+	finalize_command=`$echo "X$finalize_command" | $Xsed -e "s% @SYMFILE@%%"`
+      fi
+
+      if test "$need_relink" = no || test "$build_libtool_libs" != yes; then
+	# Replace the output file specification.
+	compile_command=`$echo "X$compile_command" | $Xsed -e 's%@OUTPUT@%'"$output"'%g'`
+	link_command="$compile_command$compile_rpath"
+
+	# We have no uninstalled library dependencies, so finalize right now.
+	$show "$link_command"
+	$run eval "$link_command"
+	exit_status=$?
+
+	# Delete the generated files.
+	if test -n "$dlsyms"; then
+	  $show "$rm $output_objdir/${outputname}S.${objext}"
+	  $run $rm "$output_objdir/${outputname}S.${objext}"
+	fi
+
+	exit $exit_status
+      fi
+
+      if test -n "$shlibpath_var"; then
+	# We should set the shlibpath_var
+	rpath=
+	for dir in $temp_rpath; do
+	  case $dir in
+	  [\\/]* | [A-Za-z]:[\\/]*)
+	    # Absolute path.
+	    rpath="$rpath$dir:"
+	    ;;
+	  *)
+	    # Relative path: add a thisdir entry.
+	    rpath="$rpath\$thisdir/$dir:"
+	    ;;
+	  esac
+	done
+	temp_rpath="$rpath"
+      fi
+
+      if test -n "$compile_shlibpath$finalize_shlibpath"; then
+	compile_command="$shlibpath_var=\"$compile_shlibpath$finalize_shlibpath\$$shlibpath_var\" $compile_command"
+      fi
+      if test -n "$finalize_shlibpath"; then
+	finalize_command="$shlibpath_var=\"$finalize_shlibpath\$$shlibpath_var\" $finalize_command"
+      fi
+
+      compile_var=
+      finalize_var=
+      if test -n "$runpath_var"; then
+	if test -n "$perm_rpath"; then
+	  # We should set the runpath_var.
+	  rpath=
+	  for dir in $perm_rpath; do
+	    rpath="$rpath$dir:"
+	  done
+	  compile_var="$runpath_var=\"$rpath\$$runpath_var\" "
+	fi
+	if test -n "$finalize_perm_rpath"; then
+	  # We should set the runpath_var.
+	  rpath=
+	  for dir in $finalize_perm_rpath; do
+	    rpath="$rpath$dir:"
+	  done
+	  finalize_var="$runpath_var=\"$rpath\$$runpath_var\" "
+	fi
+      fi
+
+      if test "$no_install" = yes; then
+	# We don't need to create a wrapper script.
+	link_command="$compile_var$compile_command$compile_rpath"
+	# Replace the output file specification.
+	link_command=`$echo "X$link_command" | $Xsed -e 's%@OUTPUT@%'"$output"'%g'`
+	# Delete the old output file.
+	$run $rm $output
+	# Link the executable and exit
+	$show "$link_command"
+	$run eval "$link_command" || exit $?
+	exit $EXIT_SUCCESS
+      fi
+
+      if test "$hardcode_action" = relink; then
+	# Fast installation is not supported
+	link_command="$compile_var$compile_command$compile_rpath"
+	relink_command="$finalize_var$finalize_command$finalize_rpath"
+
+	$echo "$modename: warning: this platform does not like uninstalled shared libraries" 1>&2
+	$echo "$modename: \`$output' will be relinked during installation" 1>&2
+      else
+	if test "$fast_install" != no; then
+	  link_command="$finalize_var$compile_command$finalize_rpath"
+	  if test "$fast_install" = yes; then
+	    relink_command=`$echo "X$compile_var$compile_command$compile_rpath" | $Xsed -e 's%@OUTPUT@%\$progdir/\$file%g'`
+	  else
+	    # fast_install is set to needless
+	    relink_command=
+	  fi
+	else
+	  link_command="$compile_var$compile_command$compile_rpath"
+	  relink_command="$finalize_var$finalize_command$finalize_rpath"
+	fi
+      fi
+
+      # Replace the output file specification.
+      link_command=`$echo "X$link_command" | $Xsed -e 's%@OUTPUT@%'"$output_objdir/$outputname"'%g'`
+
+      # Delete the old output files.
+      $run $rm $output $output_objdir/$outputname $output_objdir/lt-$outputname
+
+      $show "$link_command"
+      $run eval "$link_command" || exit $?
+
+      # Now create the wrapper script.
+      $show "creating $output"
+
+      # Quote the relink command for shipping.
+      if test -n "$relink_command"; then
+	# Preserve any variables that may affect compiler behavior
+	for var in $variables_saved_for_relink; do
+	  if eval test -z \"\${$var+set}\"; then
+	    relink_command="{ test -z \"\${$var+set}\" || unset $var || { $var=; export $var; }; }; $relink_command"
+	  elif eval var_value=\$$var; test -z "$var_value"; then
+	    relink_command="$var=; export $var; $relink_command"
+	  else
+	    var_value=`$echo "X$var_value" | $Xsed -e "$sed_quote_subst"`
+	    relink_command="$var=\"$var_value\"; export $var; $relink_command"
+	  fi
+	done
+	relink_command="(cd `pwd`; $relink_command)"
+	relink_command=`$echo "X$relink_command" | $Xsed -e "$sed_quote_subst"`
+      fi
+
+      # Quote $echo for shipping.
+      if test "X$echo" = "X$SHELL $progpath --fallback-echo"; then
+	case $progpath in
+	[\\/]* | [A-Za-z]:[\\/]*) qecho="$SHELL $progpath --fallback-echo";;
+	*) qecho="$SHELL `pwd`/$progpath --fallback-echo";;
+	esac
+	qecho=`$echo "X$qecho" | $Xsed -e "$sed_quote_subst"`
+      else
+	qecho=`$echo "X$echo" | $Xsed -e "$sed_quote_subst"`
+      fi
+
+      # Only actually do things if our run command is non-null.
+      if test -z "$run"; then
+	# win32 will think the script is a binary if it has
+	# a .exe suffix, so we strip it off here.
+	case $output in
+	  *.exe) output=`$echo $output|${SED} 's,.exe$,,'` ;;
+	esac
+	# test for cygwin because mv fails w/o .exe extensions
+	case $host in
+	  *cygwin*)
+	    exeext=.exe
+	    outputname=`$echo $outputname|${SED} 's,.exe$,,'` ;;
+	  *) exeext= ;;
+	esac
+	case $host in
+	  *cygwin* | *mingw* )
+            output_name=`basename $output`
+            output_path=`dirname $output`
+            cwrappersource="$output_path/$objdir/lt-$output_name.c"
+            cwrapper="$output_path/$output_name.exe"
+            $rm $cwrappersource $cwrapper
+            trap "$rm $cwrappersource $cwrapper; exit $EXIT_FAILURE" 1 2 15
+
+	    cat > $cwrappersource <<EOF
+
+/* $cwrappersource - temporary wrapper executable for $objdir/$outputname
+   Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP
+
+   The $output program cannot be directly executed until all the libtool
+   libraries that it depends on are installed.
+
+   This wrapper executable should never be moved out of the build directory.
+   If it is, it will not operate correctly.
+
+   Currently, it simply execs the wrapper *script* "/bin/sh $output",
+   but could eventually absorb all of the scripts functionality and
+   exec $objdir/$outputname directly.
+*/
+EOF
+	    cat >> $cwrappersource<<"EOF"
+#include <stdio.h>
+#include <stdlib.h>
+#include <unistd.h>
+#include <malloc.h>
+#include <stdarg.h>
+#include <assert.h>
+#include <string.h>
+#include <ctype.h>
+#include <sys/stat.h>
+
+#if defined(PATH_MAX)
+# define LT_PATHMAX PATH_MAX
+#elif defined(MAXPATHLEN)
+# define LT_PATHMAX MAXPATHLEN
+#else
+# define LT_PATHMAX 1024
+#endif
+
+#ifndef DIR_SEPARATOR
+# define DIR_SEPARATOR '/'
+# define PATH_SEPARATOR ':'
+#endif
+
+#if defined (_WIN32) || defined (__MSDOS__) || defined (__DJGPP__) || \
+  defined (__OS2__)
+# define HAVE_DOS_BASED_FILE_SYSTEM
+# ifndef DIR_SEPARATOR_2
+#  define DIR_SEPARATOR_2 '\\'
+# endif
+# ifndef PATH_SEPARATOR_2
+#  define PATH_SEPARATOR_2 ';'
+# endif
+#endif
+
+#ifndef DIR_SEPARATOR_2
+# define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)
+#else /* DIR_SEPARATOR_2 */
+# define IS_DIR_SEPARATOR(ch) \
+        (((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))
+#endif /* DIR_SEPARATOR_2 */
+
+#ifndef PATH_SEPARATOR_2
+# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR)
+#else /* PATH_SEPARATOR_2 */
+# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR_2)
+#endif /* PATH_SEPARATOR_2 */
+
+#define XMALLOC(type, num)      ((type *) xmalloc ((num) * sizeof(type)))
+#define XFREE(stale) do { \
+  if (stale) { free ((void *) stale); stale = 0; } \
+} while (0)
+
+/* -DDEBUG is fairly common in CFLAGS.  */
+#undef DEBUG
+#if defined DEBUGWRAPPER
+# define DEBUG(format, ...) fprintf(stderr, format, __VA_ARGS__)
+#else
+# define DEBUG(format, ...)
+#endif
+
+const char *program_name = NULL;
+
+void * xmalloc (size_t num);
+char * xstrdup (const char *string);
+const char * base_name (const char *name);
+char * find_executable(const char *wrapper);
+int    check_executable(const char *path);
+char * strendzap(char *str, const char *pat);
+void lt_fatal (const char *message, ...);
+
+int
+main (int argc, char *argv[])
+{
+  char **newargz;
+  int i;
+
+  program_name = (char *) xstrdup (base_name (argv[0]));
+  DEBUG("(main) argv[0]      : %s\n",argv[0]);
+  DEBUG("(main) program_name : %s\n",program_name);
+  newargz = XMALLOC(char *, argc+2);
+EOF
+
+            cat >> $cwrappersource <<EOF
+  newargz[0] = (char *) xstrdup("$SHELL");
+EOF
+
+            cat >> $cwrappersource <<"EOF"
+  newargz[1] = find_executable(argv[0]);
+  if (newargz[1] == NULL)
+    lt_fatal("Couldn't find %s", argv[0]);
+  DEBUG("(main) found exe at : %s\n",newargz[1]);
+  /* we know the script has the same name, without the .exe */
+  /* so make sure newargz[1] doesn't end in .exe */
+  strendzap(newargz[1],".exe");
+  for (i = 1; i < argc; i++)
+    newargz[i+1] = xstrdup(argv[i]);
+  newargz[argc+1] = NULL;
+
+  for (i=0; i<argc+1; i++)
+  {
+    DEBUG("(main) newargz[%d]   : %s\n",i,newargz[i]);
+    ;
+  }
+
+EOF
+
+            case $host_os in
+              mingw*)
+                cat >> $cwrappersource <<EOF
+  execv("$SHELL",(char const **)newargz);
+EOF
+              ;;
+              *)
+                cat >> $cwrappersource <<EOF
+  execv("$SHELL",newargz);
+EOF
+              ;;
+            esac
+
+            cat >> $cwrappersource <<"EOF"
+  return 127;
+}
+
+void *
+xmalloc (size_t num)
+{
+  void * p = (void *) malloc (num);
+  if (!p)
+    lt_fatal ("Memory exhausted");
+
+  return p;
+}
+
+char *
+xstrdup (const char *string)
+{
+  return string ? strcpy ((char *) xmalloc (strlen (string) + 1), string) : NULL
+;
+}
+
+const char *
+base_name (const char *name)
+{
+  const char *base;
+
+#if defined (HAVE_DOS_BASED_FILE_SYSTEM)
+  /* Skip over the disk name in MSDOS pathnames. */
+  if (isalpha ((unsigned char)name[0]) && name[1] == ':')
+    name += 2;
+#endif
+
+  for (base = name; *name; name++)
+    if (IS_DIR_SEPARATOR (*name))
+      base = name + 1;
+  return base;
+}
+
+int
+check_executable(const char * path)
+{
+  struct stat st;
+
+  DEBUG("(check_executable)  : %s\n", path ? (*path ? path : "EMPTY!") : "NULL!");
+  if ((!path) || (!*path))
+    return 0;
+
+  if ((stat (path, &st) >= 0) &&
+      (
+        /* MinGW & native WIN32 do not support S_IXOTH or S_IXGRP */
+#if defined (S_IXOTH)
+       ((st.st_mode & S_IXOTH) == S_IXOTH) ||
+#endif
+#if defined (S_IXGRP)
+       ((st.st_mode & S_IXGRP) == S_IXGRP) ||
+#endif
+       ((st.st_mode & S_IXUSR) == S_IXUSR))
+      )
+    return 1;
+  else
+    return 0;
+}
+
+/* Searches for the full path of the wrapper.  Returns
+   newly allocated full path name if found, NULL otherwise */
+char *
+find_executable (const char* wrapper)
+{
+  int has_slash = 0;
+  const char* p;
+  const char* p_next;
+  /* static buffer for getcwd */
+  char tmp[LT_PATHMAX + 1];
+  int tmp_len;
+  char* concat_name;
+
+  DEBUG("(find_executable)  : %s\n", wrapper ? (*wrapper ? wrapper : "EMPTY!") : "NULL!");
+
+  if ((wrapper == NULL) || (*wrapper == '\0'))
+    return NULL;
+
+  /* Absolute path? */
+#if defined (HAVE_DOS_BASED_FILE_SYSTEM)
+  if (isalpha ((unsigned char)wrapper[0]) && wrapper[1] == ':')
+  {
+    concat_name = xstrdup (wrapper);
+    if (check_executable(concat_name))
+      return concat_name;
+    XFREE(concat_name);
+  }
+  else
+  {
+#endif
+    if (IS_DIR_SEPARATOR (wrapper[0]))
+    {
+      concat_name = xstrdup (wrapper);
+      if (check_executable(concat_name))
+        return concat_name;
+      XFREE(concat_name);
+    }
+#if defined (HAVE_DOS_BASED_FILE_SYSTEM)
+  }
+#endif
+
+  for (p = wrapper; *p; p++)
+    if (*p == '/')
+    {
+      has_slash = 1;
+      break;
+    }
+  if (!has_slash)
+  {
+    /* no slashes; search PATH */
+    const char* path = getenv ("PATH");
+    if (path != NULL)
+    {
+      for (p = path; *p; p = p_next)
+      {
+        const char* q;
+        size_t p_len;
+        for (q = p; *q; q++)
+          if (IS_PATH_SEPARATOR(*q))
+            break;
+        p_len = q - p;
+        p_next = (*q == '\0' ? q : q + 1);
+        if (p_len == 0)
+        {
+          /* empty path: current directory */
+          if (getcwd (tmp, LT_PATHMAX) == NULL)
+            lt_fatal ("getcwd failed");
+          tmp_len = strlen(tmp);
+          concat_name = XMALLOC(char, tmp_len + 1 + strlen(wrapper) + 1);
+          memcpy (concat_name, tmp, tmp_len);
+          concat_name[tmp_len] = '/';
+          strcpy (concat_name + tmp_len + 1, wrapper);
+        }
+        else
+        {
+          concat_name = XMALLOC(char, p_len + 1 + strlen(wrapper) + 1);
+          memcpy (concat_name, p, p_len);
+          concat_name[p_len] = '/';
+          strcpy (concat_name + p_len + 1, wrapper);
+        }
+        if (check_executable(concat_name))
+          return concat_name;
+        XFREE(concat_name);
+      }
+    }
+    /* not found in PATH; assume curdir */
+  }
+  /* Relative path | not found in path: prepend cwd */
+  if (getcwd (tmp, LT_PATHMAX) == NULL)
+    lt_fatal ("getcwd failed");
+  tmp_len = strlen(tmp);
+  concat_name = XMALLOC(char, tmp_len + 1 + strlen(wrapper) + 1);
+  memcpy (concat_name, tmp, tmp_len);
+  concat_name[tmp_len] = '/';
+  strcpy (concat_name + tmp_len + 1, wrapper);
+
+  if (check_executable(concat_name))
+    return concat_name;
+  XFREE(concat_name);
+  return NULL;
+}
+
+char *
+strendzap(char *str, const char *pat)
+{
+  size_t len, patlen;
+
+  assert(str != NULL);
+  assert(pat != NULL);
+
+  len = strlen(str);
+  patlen = strlen(pat);
+
+  if (patlen <= len)
+  {
+    str += len - patlen;
+    if (strcmp(str, pat) == 0)
+      *str = '\0';
+  }
+  return str;
+}
+
+static void
+lt_error_core (int exit_status, const char * mode,
+          const char * message, va_list ap)
+{
+  fprintf (stderr, "%s: %s: ", program_name, mode);
+  vfprintf (stderr, message, ap);
+  fprintf (stderr, ".\n");
+
+  if (exit_status >= 0)
+    exit (exit_status);
+}
+
+void
+lt_fatal (const char *message, ...)
+{
+  va_list ap;
+  va_start (ap, message);
+  lt_error_core (EXIT_FAILURE, "FATAL", message, ap);
+  va_end (ap);
+}
+EOF
+          # we should really use a build-platform specific compiler
+          # here, but OTOH, the wrappers (shell script and this C one)
+          # are only useful if you want to execute the "real" binary.
+          # Since the "real" binary is built for $host, then this
+          # wrapper might as well be built for $host, too.
+          $run $LTCC $LTCFLAGS -s -o $cwrapper $cwrappersource
+          ;;
+        esac
+        $rm $output
+        trap "$rm $output; exit $EXIT_FAILURE" 1 2 15
+
+	$echo > $output "\
+#! $SHELL
+
+# $output - temporary wrapper script for $objdir/$outputname
+# Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP
+#
+# The $output program cannot be directly executed until all the libtool
+# libraries that it depends on are installed.
+#
+# This wrapper script should never be moved out of the build directory.
+# If it is, it will not operate correctly.
+
+# Sed substitution that helps us do robust quoting.  It backslashifies
+# metacharacters that are still active within double-quoted strings.
+Xsed='${SED} -e 1s/^X//'
+sed_quote_subst='$sed_quote_subst'
+
+# The HP-UX ksh and POSIX shell print the target directory to stdout
+# if CDPATH is set.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+relink_command=\"$relink_command\"
+
+# This environment variable determines our operation mode.
+if test \"\$libtool_install_magic\" = \"$magic\"; then
+  # install mode needs the following variable:
+  notinst_deplibs='$notinst_deplibs'
+else
+  # When we are sourced in execute mode, \$file and \$echo are already set.
+  if test \"\$libtool_execute_magic\" != \"$magic\"; then
+    echo=\"$qecho\"
+    file=\"\$0\"
+    # Make sure echo works.
+    if test \"X\$1\" = X--no-reexec; then
+      # Discard the --no-reexec flag, and continue.
+      shift
+    elif test \"X\`(\$echo '\t') 2>/dev/null\`\" = 'X\t'; then
+      # Yippee, \$echo works!
+      :
+    else
+      # Restart under the correct shell, and then maybe \$echo will work.
+      exec $SHELL \"\$0\" --no-reexec \${1+\"\$@\"}
+    fi
+  fi\
+"
+	$echo >> $output "\
+
+  # Find the directory that this script lives in.
+  thisdir=\`\$echo \"X\$file\" | \$Xsed -e 's%/[^/]*$%%'\`
+  test \"x\$thisdir\" = \"x\$file\" && thisdir=.
+
+  # Follow symbolic links until we get to the real thisdir.
+  file=\`ls -ld \"\$file\" | ${SED} -n 's/.*-> //p'\`
+  while test -n \"\$file\"; do
+    destdir=\`\$echo \"X\$file\" | \$Xsed -e 's%/[^/]*\$%%'\`
+
+    # If there was a directory component, then change thisdir.
+    if test \"x\$destdir\" != \"x\$file\"; then
+      case \"\$destdir\" in
+      [\\\\/]* | [A-Za-z]:[\\\\/]*) thisdir=\"\$destdir\" ;;
+      *) thisdir=\"\$thisdir/\$destdir\" ;;
+      esac
+    fi
+
+    file=\`\$echo \"X\$file\" | \$Xsed -e 's%^.*/%%'\`
+    file=\`ls -ld \"\$thisdir/\$file\" | ${SED} -n 's/.*-> //p'\`
+  done
+
+  # Try to get the absolute directory name.
+  absdir=\`cd \"\$thisdir\" && pwd\`
+  test -n \"\$absdir\" && thisdir=\"\$absdir\"
+"
+
+	if test "$fast_install" = yes; then
+	  $echo >> $output "\
+  program=lt-'$outputname'$exeext
+  progdir=\"\$thisdir/$objdir\"
+
+  if test ! -f \"\$progdir/\$program\" || \\
+     { file=\`ls -1dt \"\$progdir/\$program\" \"\$progdir/../\$program\" 2>/dev/null | ${SED} 1q\`; \\
+       test \"X\$file\" != \"X\$progdir/\$program\"; }; then
+
+    file=\"\$\$-\$program\"
+
+    if test ! -d \"\$progdir\"; then
+      $mkdir \"\$progdir\"
+    else
+      $rm \"\$progdir/\$file\"
+    fi"
+
+	  $echo >> $output "\
+
+    # relink executable if necessary
+    if test -n \"\$relink_command\"; then
+      if relink_command_output=\`eval \$relink_command 2>&1\`; then :
+      else
+	$echo \"\$relink_command_output\" >&2
+	$rm \"\$progdir/\$file\"
+	exit $EXIT_FAILURE
+      fi
+    fi
+
+    $mv \"\$progdir/\$file\" \"\$progdir/\$program\" 2>/dev/null ||
+    { $rm \"\$progdir/\$program\";
+      $mv \"\$progdir/\$file\" \"\$progdir/\$program\"; }
+    $rm \"\$progdir/\$file\"
+  fi"
+	else
+	  $echo >> $output "\
+  program='$outputname'
+  progdir=\"\$thisdir/$objdir\"
+"
+	fi
+
+	$echo >> $output "\
+
+  if test -f \"\$progdir/\$program\"; then"
+
+	# Export our shlibpath_var if we have one.
+	if test "$shlibpath_overrides_runpath" = yes && test -n "$shlibpath_var" && test -n "$temp_rpath"; then
+	  $echo >> $output "\
+    # Add our own library path to $shlibpath_var
+    $shlibpath_var=\"$temp_rpath\$$shlibpath_var\"
+
+    # Some systems cannot cope with colon-terminated $shlibpath_var
+    # The second colon is a workaround for a bug in BeOS R4 sed
+    $shlibpath_var=\`\$echo \"X\$$shlibpath_var\" | \$Xsed -e 's/::*\$//'\`
+
+    export $shlibpath_var
+"
+	fi
+
+	# fixup the dll searchpath if we need to.
+	if test -n "$dllsearchpath"; then
+	  $echo >> $output "\
+    # Add the dll search path components to the executable PATH
+    PATH=$dllsearchpath:\$PATH
+"
+	fi
+
+	$echo >> $output "\
+    if test \"\$libtool_execute_magic\" != \"$magic\"; then
+      # Run the actual program with our arguments.
+"
+	case $host in
+	# Backslashes separate directories on plain windows
+	*-*-mingw | *-*-os2*)
+	  $echo >> $output "\
+      exec \"\$progdir\\\\\$program\" \${1+\"\$@\"}
+"
+	  ;;
+
+	*)
+	  $echo >> $output "\
+      exec \"\$progdir/\$program\" \${1+\"\$@\"}
+"
+	  ;;
+	esac
+	$echo >> $output "\
+      \$echo \"\$0: cannot exec \$program \${1+\"\$@\"}\"
+      exit $EXIT_FAILURE
+    fi
+  else
+    # The program doesn't exist.
+    \$echo \"\$0: error: \\\`\$progdir/\$program' does not exist\" 1>&2
+    \$echo \"This script is just a wrapper for \$program.\" 1>&2
+    $echo \"See the $PACKAGE documentation for more information.\" 1>&2
+    exit $EXIT_FAILURE
+  fi
+fi\
+"
+	chmod +x $output
+      fi
+      exit $EXIT_SUCCESS
+      ;;
+    esac
+
+    # See if we need to build an old-fashioned archive.
+    for oldlib in $oldlibs; do
+
+      if test "$build_libtool_libs" = convenience; then
+	oldobjs="$libobjs_save"
+	addlibs="$convenience"
+	build_libtool_libs=no
+      else
+	if test "$build_libtool_libs" = module; then
+	  oldobjs="$libobjs_save"
+	  build_libtool_libs=no
+	else
+	  oldobjs="$old_deplibs $non_pic_objects"
+	fi
+	addlibs="$old_convenience"
+      fi
+
+      if test -n "$addlibs"; then
+	gentop="$output_objdir/${outputname}x"
+	generated="$generated $gentop"
+
+	func_extract_archives $gentop $addlibs
+	oldobjs="$oldobjs $func_extract_archives_result"
+      fi
+
+      # Do each command in the archive commands.
+      if test -n "$old_archive_from_new_cmds" && test "$build_libtool_libs" = yes; then
+       cmds=$old_archive_from_new_cmds
+      else
+	# POSIX demands no paths to be encoded in archives.  We have
+	# to avoid creating archives with duplicate basenames if we
+	# might have to extract them afterwards, e.g., when creating a
+	# static archive out of a convenience library, or when linking
+	# the entirety of a libtool archive into another (currently
+	# not supported by libtool).
+	if (for obj in $oldobjs
+	    do
+	      $echo "X$obj" | $Xsed -e 's%^.*/%%'
+	    done | sort | sort -uc >/dev/null 2>&1); then
+	  :
+	else
+	  $echo "copying selected object files to avoid basename conflicts..."
+
+	  if test -z "$gentop"; then
+	    gentop="$output_objdir/${outputname}x"
+	    generated="$generated $gentop"
+
+	    $show "${rm}r $gentop"
+	    $run ${rm}r "$gentop"
+	    $show "$mkdir $gentop"
+	    $run $mkdir "$gentop"
+	    exit_status=$?
+	    if test "$exit_status" -ne 0 && test ! -d "$gentop"; then
+	      exit $exit_status
+	    fi
+	  fi
+
+	  save_oldobjs=$oldobjs
+	  oldobjs=
+	  counter=1
+	  for obj in $save_oldobjs
+	  do
+	    objbase=`$echo "X$obj" | $Xsed -e 's%^.*/%%'`
+	    case " $oldobjs " in
+	    " ") oldobjs=$obj ;;
+	    *[\ /]"$objbase "*)
+	      while :; do
+		# Make sure we don't pick an alternate name that also
+		# overlaps.
+		newobj=lt$counter-$objbase
+		counter=`expr $counter + 1`
+		case " $oldobjs " in
+		*[\ /]"$newobj "*) ;;
+		*) if test ! -f "$gentop/$newobj"; then break; fi ;;
+		esac
+	      done
+	      $show "ln $obj $gentop/$newobj || cp $obj $gentop/$newobj"
+	      $run ln "$obj" "$gentop/$newobj" ||
+	      $run cp "$obj" "$gentop/$newobj"
+	      oldobjs="$oldobjs $gentop/$newobj"
+	      ;;
+	    *) oldobjs="$oldobjs $obj" ;;
+	    esac
+	  done
+	fi
+
+	eval cmds=\"$old_archive_cmds\"
+
+	if len=`expr "X$cmds" : ".*"` &&
+	     test "$len" -le "$max_cmd_len" || test "$max_cmd_len" -le -1; then
+	  cmds=$old_archive_cmds
+	else
+	  # the command line is too long to link in one step, link in parts
+	  $echo "using piecewise archive linking..."
+	  save_RANLIB=$RANLIB
+	  RANLIB=:
+	  objlist=
+	  concat_cmds=
+	  save_oldobjs=$oldobjs
+
+	  # Is there a better way of finding the last object in the list?
+	  for obj in $save_oldobjs
+	  do
+	    last_oldobj=$obj
+	  done
+	  for obj in $save_oldobjs
+	  do
+	    oldobjs="$objlist $obj"
+	    objlist="$objlist $obj"
+	    eval test_cmds=\"$old_archive_cmds\"
+	    if len=`expr "X$test_cmds" : ".*" 2>/dev/null` &&
+	       test "$len" -le "$max_cmd_len"; then
+	      :
+	    else
+	      # the above command should be used before it gets too long
+	      oldobjs=$objlist
+	      if test "$obj" = "$last_oldobj" ; then
+	        RANLIB=$save_RANLIB
+	      fi
+	      test -z "$concat_cmds" || concat_cmds=$concat_cmds~
+	      eval concat_cmds=\"\${concat_cmds}$old_archive_cmds\"
+	      objlist=
+	    fi
+	  done
+	  RANLIB=$save_RANLIB
+	  oldobjs=$objlist
+	  if test "X$oldobjs" = "X" ; then
+	    eval cmds=\"\$concat_cmds\"
+	  else
+	    eval cmds=\"\$concat_cmds~\$old_archive_cmds\"
+	  fi
+	fi
+      fi
+      save_ifs="$IFS"; IFS='~'
+      for cmd in $cmds; do
+        eval cmd=\"$cmd\"
+	IFS="$save_ifs"
+	$show "$cmd"
+	$run eval "$cmd" || exit $?
+      done
+      IFS="$save_ifs"
+    done
+
+    if test -n "$generated"; then
+      $show "${rm}r$generated"
+      $run ${rm}r$generated
+    fi
+
+    # Now create the libtool archive.
+    case $output in
+    *.la)
+      old_library=
+      test "$build_old_libs" = yes && old_library="$libname.$libext"
+      $show "creating $output"
+
+      # Preserve any variables that may affect compiler behavior
+      for var in $variables_saved_for_relink; do
+	if eval test -z \"\${$var+set}\"; then
+	  relink_command="{ test -z \"\${$var+set}\" || unset $var || { $var=; export $var; }; }; $relink_command"
+	elif eval var_value=\$$var; test -z "$var_value"; then
+	  relink_command="$var=; export $var; $relink_command"
+	else
+	  var_value=`$echo "X$var_value" | $Xsed -e "$sed_quote_subst"`
+	  relink_command="$var=\"$var_value\"; export $var; $relink_command"
+	fi
+      done
+      # Quote the link command for shipping.
+      relink_command="(cd `pwd`; $SHELL $progpath $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)"
+      relink_command=`$echo "X$relink_command" | $Xsed -e "$sed_quote_subst"`
+      if test "$hardcode_automatic" = yes ; then
+	relink_command=
+      fi
+
+
+      # Only create the output if not a dry run.
+      if test -z "$run"; then
+	for installed in no yes; do
+	  if test "$installed" = yes; then
+	    if test -z "$install_libdir"; then
+	      break
+	    fi
+	    output="$output_objdir/$outputname"i
+	    # Replace all uninstalled libtool libraries with the installed ones
+	    newdependency_libs=
+	    for deplib in $dependency_libs; do
+	      case $deplib in
+	      *.la)
+		name=`$echo "X$deplib" | $Xsed -e 's%^.*/%%'`
+		eval libdir=`${SED} -n -e 's/^libdir=\(.*\)$/\1/p' $deplib`
+		if test -z "$libdir"; then
+		  $echo "$modename: \`$deplib' is not a valid libtool archive" 1>&2
+		  exit $EXIT_FAILURE
+		fi
+		newdependency_libs="$newdependency_libs $libdir/$name"
+		;;
+	      *) newdependency_libs="$newdependency_libs $deplib" ;;
+	      esac
+	    done
+	    dependency_libs="$newdependency_libs"
+	    newdlfiles=
+	    for lib in $dlfiles; do
+	      name=`$echo "X$lib" | $Xsed -e 's%^.*/%%'`
+	      eval libdir=`${SED} -n -e 's/^libdir=\(.*\)$/\1/p' $lib`
+	      if test -z "$libdir"; then
+		$echo "$modename: \`$lib' is not a valid libtool archive" 1>&2
+		exit $EXIT_FAILURE
+	      fi
+	      newdlfiles="$newdlfiles $libdir/$name"
+	    done
+	    dlfiles="$newdlfiles"
+	    newdlprefiles=
+	    for lib in $dlprefiles; do
+	      name=`$echo "X$lib" | $Xsed -e 's%^.*/%%'`
+	      eval libdir=`${SED} -n -e 's/^libdir=\(.*\)$/\1/p' $lib`
+	      if test -z "$libdir"; then
+		$echo "$modename: \`$lib' is not a valid libtool archive" 1>&2
+		exit $EXIT_FAILURE
+	      fi
+	      newdlprefiles="$newdlprefiles $libdir/$name"
+	    done
+	    dlprefiles="$newdlprefiles"
+	  else
+	    newdlfiles=
+	    for lib in $dlfiles; do
+	      case $lib in
+		[\\/]* | [A-Za-z]:[\\/]*) abs="$lib" ;;
+		*) abs=`pwd`"/$lib" ;;
+	      esac
+	      newdlfiles="$newdlfiles $abs"
+	    done
+	    dlfiles="$newdlfiles"
+	    newdlprefiles=
+	    for lib in $dlprefiles; do
+	      case $lib in
+		[\\/]* | [A-Za-z]:[\\/]*) abs="$lib" ;;
+		*) abs=`pwd`"/$lib" ;;
+	      esac
+	      newdlprefiles="$newdlprefiles $abs"
+	    done
+	    dlprefiles="$newdlprefiles"
+	  fi
+	  $rm $output
+	  # place dlname in correct position for cygwin
+	  tdlname=$dlname
+	  case $host,$output,$installed,$module,$dlname in
+	    *cygwin*,*lai,yes,no,*.dll | *mingw*,*lai,yes,no,*.dll) tdlname=../bin/$dlname ;;
+	  esac
+	  $echo > $output "\
+# $outputname - a libtool library file
+# Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP
+#
+# Please DO NOT delete this file!
+# It is necessary for linking the library.
+
+# The name that we can dlopen(3).
+dlname='$tdlname'
+
+# Names of this library.
+library_names='$library_names'
+
+# The name of the static archive.
+old_library='$old_library'
+
+# Libraries that this one depends upon.
+dependency_libs='$dependency_libs'
+
+# Version information for $libname.
+current=$current
+age=$age
+revision=$revision
+
+# Is this an already installed library?
+installed=$installed
+
+# Should we warn about portability when linking against -modules?
+shouldnotlink=$module
+
+# Files to dlopen/dlpreopen
+dlopen='$dlfiles'
+dlpreopen='$dlprefiles'
+
+# Directory that this library needs to be installed in:
+libdir='$install_libdir'"
+	  if test "$installed" = no && test "$need_relink" = yes; then
+	    $echo >> $output "\
+relink_command=\"$relink_command\""
+	  fi
+	done
+      fi
+
+      # Do a symbolic link so that the libtool archive can be found in
+      # LD_LIBRARY_PATH before the program is installed.
+      $show "(cd $output_objdir && $rm $outputname && $LN_S ../$outputname $outputname)"
+      $run eval '(cd $output_objdir && $rm $outputname && $LN_S ../$outputname $outputname)' || exit $?
+      ;;
+    esac
+    exit $EXIT_SUCCESS
+    ;;
+
+  # libtool install mode
+  install)
+    modename="$modename: install"
+
+    # There may be an optional sh(1) argument at the beginning of
+    # install_prog (especially on Windows NT).
+    if test "$nonopt" = "$SHELL" || test "$nonopt" = /bin/sh ||
+       # Allow the use of GNU shtool's install command.
+       $echo "X$nonopt" | grep shtool > /dev/null; then
+      # Aesthetically quote it.
+      arg=`$echo "X$nonopt" | $Xsed -e "$sed_quote_subst"`
+      case $arg in
+      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	arg="\"$arg\""
+	;;
+      esac
+      install_prog="$arg "
+      arg="$1"
+      shift
+    else
+      install_prog=
+      arg=$nonopt
+    fi
+
+    # The real first argument should be the name of the installation program.
+    # Aesthetically quote it.
+    arg=`$echo "X$arg" | $Xsed -e "$sed_quote_subst"`
+    case $arg in
+    *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+      arg="\"$arg\""
+      ;;
+    esac
+    install_prog="$install_prog$arg"
+
+    # We need to accept at least all the BSD install flags.
+    dest=
+    files=
+    opts=
+    prev=
+    install_type=
+    isdir=no
+    stripme=
+    for arg
+    do
+      if test -n "$dest"; then
+	files="$files $dest"
+	dest=$arg
+	continue
+      fi
+
+      case $arg in
+      -d) isdir=yes ;;
+      -f) 
+      	case " $install_prog " in
+	*[\\\ /]cp\ *) ;;
+	*) prev=$arg ;;
+	esac
+	;;
+      -g | -m | -o) prev=$arg ;;
+      -s)
+	stripme=" -s"
+	continue
+	;;
+      -*)
+	;;
+      *)
+	# If the previous option needed an argument, then skip it.
+	if test -n "$prev"; then
+	  prev=
+	else
+	  dest=$arg
+	  continue
+	fi
+	;;
+      esac
+
+      # Aesthetically quote the argument.
+      arg=`$echo "X$arg" | $Xsed -e "$sed_quote_subst"`
+      case $arg in
+      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+	arg="\"$arg\""
+	;;
+      esac
+      install_prog="$install_prog $arg"
+    done
+
+    if test -z "$install_prog"; then
+      $echo "$modename: you must specify an install program" 1>&2
+      $echo "$help" 1>&2
+      exit $EXIT_FAILURE
+    fi
+
+    if test -n "$prev"; then
+      $echo "$modename: the \`$prev' option requires an argument" 1>&2
+      $echo "$help" 1>&2
+      exit $EXIT_FAILURE
+    fi
+
+    if test -z "$files"; then
+      if test -z "$dest"; then
+	$echo "$modename: no file or destination specified" 1>&2
+      else
+	$echo "$modename: you must specify a destination" 1>&2
+      fi
+      $echo "$help" 1>&2
+      exit $EXIT_FAILURE
+    fi
+
+    # Strip any trailing slash from the destination.
+    dest=`$echo "X$dest" | $Xsed -e 's%/$%%'`
+
+    # Check to see that the destination is a directory.
+    test -d "$dest" && isdir=yes
+    if test "$isdir" = yes; then
+      destdir="$dest"
+      destname=
+    else
+      destdir=`$echo "X$dest" | $Xsed -e 's%/[^/]*$%%'`
+      test "X$destdir" = "X$dest" && destdir=.
+      destname=`$echo "X$dest" | $Xsed -e 's%^.*/%%'`
+
+      # Not a directory, so check to see that there is only one file specified.
+      set dummy $files
+      if test "$#" -gt 2; then
+	$echo "$modename: \`$dest' is not a directory" 1>&2
+	$echo "$help" 1>&2
+	exit $EXIT_FAILURE
+      fi
+    fi
+    case $destdir in
+    [\\/]* | [A-Za-z]:[\\/]*) ;;
+    *)
+      for file in $files; do
+	case $file in
+	*.lo) ;;
+	*)
+	  $echo "$modename: \`$destdir' must be an absolute directory name" 1>&2
+	  $echo "$help" 1>&2
+	  exit $EXIT_FAILURE
+	  ;;
+	esac
+      done
+      ;;
+    esac
+
+    # This variable tells wrapper scripts just to set variables rather
+    # than running their programs.
+    libtool_install_magic="$magic"
+
+    staticlibs=
+    future_libdirs=
+    current_libdirs=
+    for file in $files; do
+
+      # Do each installation.
+      case $file in
+      *.$libext)
+	# Do the static libraries later.
+	staticlibs="$staticlibs $file"
+	;;
+
+      *.la)
+	# Check to see that this really is a libtool archive.
+	if (${SED} -e '2q' $file | grep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then :
+	else
+	  $echo "$modename: \`$file' is not a valid libtool archive" 1>&2
+	  $echo "$help" 1>&2
+	  exit $EXIT_FAILURE
+	fi
+
+	library_names=
+	old_library=
+	relink_command=
+	# If there is no directory component, then add one.
+	case $file in
+	*/* | *\\*) . $file ;;
+	*) . ./$file ;;
+	esac
+
+	# Add the libdir to current_libdirs if it is the destination.
+	if test "X$destdir" = "X$libdir"; then
+	  case "$current_libdirs " in
+	  *" $libdir "*) ;;
+	  *) current_libdirs="$current_libdirs $libdir" ;;
+	  esac
+	else
+	  # Note the libdir as a future libdir.
+	  case "$future_libdirs " in
+	  *" $libdir "*) ;;
+	  *) future_libdirs="$future_libdirs $libdir" ;;
+	  esac
+	fi
+
+	dir=`$echo "X$file" | $Xsed -e 's%/[^/]*$%%'`/
+	test "X$dir" = "X$file/" && dir=
+	dir="$dir$objdir"
+
+	if test -n "$relink_command"; then
+	  # Determine the prefix the user has applied to our future dir.
+	  inst_prefix_dir=`$echo "$destdir" | $SED "s%$libdir\$%%"`
+
+	  # Don't allow the user to place us outside of our expected
+	  # location b/c this prevents finding dependent libraries that
+	  # are installed to the same prefix.
+	  # At present, this check doesn't affect windows .dll's that
+	  # are installed into $libdir/../bin (currently, that works fine)
+	  # but it's something to keep an eye on.
+	  if test "$inst_prefix_dir" = "$destdir"; then
+	    $echo "$modename: error: cannot install \`$file' to a directory not ending in $libdir" 1>&2
+	    exit $EXIT_FAILURE
+	  fi
+
+	  if test -n "$inst_prefix_dir"; then
+	    # Stick the inst_prefix_dir data into the link command.
+	    relink_command=`$echo "$relink_command" | $SED "s%@inst_prefix_dir@%-inst-prefix-dir $inst_prefix_dir%"`
+	  else
+	    relink_command=`$echo "$relink_command" | $SED "s%@inst_prefix_dir@%%"`
+	  fi
+
+	  $echo "$modename: warning: relinking \`$file'" 1>&2
+	  $show "$relink_command"
+	  if $run eval "$relink_command"; then :
+	  else
+	    $echo "$modename: error: relink \`$file' with the above command before installing it" 1>&2
+	    exit $EXIT_FAILURE
+	  fi
+	fi
+
+	# See the names of the shared library.
+	set dummy $library_names
+	if test -n "$2"; then
+	  realname="$2"
+	  shift
+	  shift
+
+	  srcname="$realname"
+	  test -n "$relink_command" && srcname="$realname"T
+
+	  # Install the shared library and build the symlinks.
+	  $show "$install_prog $dir/$srcname $destdir/$realname"
+	  $run eval "$install_prog $dir/$srcname $destdir/$realname" || exit $?
+	  if test -n "$stripme" && test -n "$striplib"; then
+	    $show "$striplib $destdir/$realname"
+	    $run eval "$striplib $destdir/$realname" || exit $?
+	  fi
+
+	  if test "$#" -gt 0; then
+	    # Delete the old symlinks, and create new ones.
+	    # Try `ln -sf' first, because the `ln' binary might depend on
+	    # the symlink we replace!  Solaris /bin/ln does not understand -f,
+	    # so we also need to try rm && ln -s.
+	    for linkname
+	    do
+	      if test "$linkname" != "$realname"; then
+                $show "(cd $destdir && { $LN_S -f $realname $linkname || { $rm $linkname && $LN_S $realname $linkname; }; })"
+                $run eval "(cd $destdir && { $LN_S -f $realname $linkname || { $rm $linkname && $LN_S $realname $linkname; }; })"
+	      fi
+	    done
+	  fi
+
+	  # Do each command in the postinstall commands.
+	  lib="$destdir/$realname"
+	  cmds=$postinstall_cmds
+	  save_ifs="$IFS"; IFS='~'
+	  for cmd in $cmds; do
+	    IFS="$save_ifs"
+	    eval cmd=\"$cmd\"
+	    $show "$cmd"
+	    $run eval "$cmd" || {
+	      lt_exit=$?
+
+	      # Restore the uninstalled library and exit
+	      if test "$mode" = relink; then
+		$run eval '(cd $output_objdir && $rm ${realname}T && $mv ${realname}U $realname)'
+	      fi
+
+	      exit $lt_exit
+	    }
+	  done
+	  IFS="$save_ifs"
+	fi
+
+	# Install the pseudo-library for information purposes.
+	name=`$echo "X$file" | $Xsed -e 's%^.*/%%'`
+	instname="$dir/$name"i
+	$show "$install_prog $instname $destdir/$name"
+	$run eval "$install_prog $instname $destdir/$name" || exit $?
+
+	# Maybe install the static library, too.
+	test -n "$old_library" && staticlibs="$staticlibs $dir/$old_library"
+	;;
+
+      *.lo)
+	# Install (i.e. copy) a libtool object.
+
+	# Figure out destination file name, if it wasn't already specified.
+	if test -n "$destname"; then
+	  destfile="$destdir/$destname"
+	else
+	  destfile=`$echo "X$file" | $Xsed -e 's%^.*/%%'`
+	  destfile="$destdir/$destfile"
+	fi
+
+	# Deduce the name of the destination old-style object file.
+	case $destfile in
+	*.lo)
+	  staticdest=`$echo "X$destfile" | $Xsed -e "$lo2o"`
+	  ;;
+	*.$objext)
+	  staticdest="$destfile"
+	  destfile=
+	  ;;
+	*)
+	  $echo "$modename: cannot copy a libtool object to \`$destfile'" 1>&2
+	  $echo "$help" 1>&2
+	  exit $EXIT_FAILURE
+	  ;;
+	esac
+
+	# Install the libtool object if requested.
+	if test -n "$destfile"; then
+	  $show "$install_prog $file $destfile"
+	  $run eval "$install_prog $file $destfile" || exit $?
+	fi
+
+	# Install the old object if enabled.
+	if test "$build_old_libs" = yes; then
+	  # Deduce the name of the old-style object file.
+	  staticobj=`$echo "X$file" | $Xsed -e "$lo2o"`
+
+	  $show "$install_prog $staticobj $staticdest"
+	  $run eval "$install_prog \$staticobj \$staticdest" || exit $?
+	fi
+	exit $EXIT_SUCCESS
+	;;
+
+      *)
+	# Figure out destination file name, if it wasn't already specified.
+	if test -n "$destname"; then
+	  destfile="$destdir/$destname"
+	else
+	  destfile=`$echo "X$file" | $Xsed -e 's%^.*/%%'`
+	  destfile="$destdir/$destfile"
+	fi
+
+	# If the file is missing, and there is a .exe on the end, strip it
+	# because it is most likely a libtool script we actually want to
+	# install
+	stripped_ext=""
+	case $file in
+	  *.exe)
+	    if test ! -f "$file"; then
+	      file=`$echo $file|${SED} 's,.exe$,,'`
+	      stripped_ext=".exe"
+	    fi
+	    ;;
+	esac
+
+	# Do a test to see if this is really a libtool program.
+	case $host in
+	*cygwin*|*mingw*)
+	    wrapper=`$echo $file | ${SED} -e 's,.exe$,,'`
+	    ;;
+	*)
+	    wrapper=$file
+	    ;;
+	esac
+	if (${SED} -e '4q' $wrapper | grep "^# Generated by .*$PACKAGE")>/dev/null 2>&1; then
+	  notinst_deplibs=
+	  relink_command=
+
+	  # Note that it is not necessary on cygwin/mingw to append a dot to
+	  # foo even if both foo and FILE.exe exist: automatic-append-.exe
+	  # behavior happens only for exec(3), not for open(2)!  Also, sourcing
+	  # `FILE.' does not work on cygwin managed mounts.
+	  #
+	  # If there is no directory component, then add one.
+	  case $wrapper in
+	  */* | *\\*) . ${wrapper} ;;
+	  *) . ./${wrapper} ;;
+	  esac
+
+	  # Check the variables that should have been set.
+	  if test -z "$notinst_deplibs"; then
+	    $echo "$modename: invalid libtool wrapper script \`$wrapper'" 1>&2
+	    exit $EXIT_FAILURE
+	  fi
+
+	  finalize=yes
+	  for lib in $notinst_deplibs; do
+	    # Check to see that each library is installed.
+	    libdir=
+	    if test -f "$lib"; then
+	      # If there is no directory component, then add one.
+	      case $lib in
+	      */* | *\\*) . $lib ;;
+	      *) . ./$lib ;;
+	      esac
+	    fi
+	    libfile="$libdir/"`$echo "X$lib" | $Xsed -e 's%^.*/%%g'` ### testsuite: skip nested quoting test
+	    if test -n "$libdir" && test ! -f "$libfile"; then
+	      $echo "$modename: warning: \`$lib' has not been installed in \`$libdir'" 1>&2
+	      finalize=no
+	    fi
+	  done
+
+	  relink_command=
+	  # Note that it is not necessary on cygwin/mingw to append a dot to
+	  # foo even if both foo and FILE.exe exist: automatic-append-.exe
+	  # behavior happens only for exec(3), not for open(2)!  Also, sourcing
+	  # `FILE.' does not work on cygwin managed mounts.
+	  #
+	  # If there is no directory component, then add one.
+	  case $wrapper in
+	  */* | *\\*) . ${wrapper} ;;
+	  *) . ./${wrapper} ;;
+	  esac
+
+	  outputname=
+	  if test "$fast_install" = no && test -n "$relink_command"; then
+	    if test "$finalize" = yes && test -z "$run"; then
+	      tmpdir=`func_mktempdir`
+	      file=`$echo "X$file$stripped_ext" | $Xsed -e 's%^.*/%%'`
+	      outputname="$tmpdir/$file"
+	      # Replace the output file specification.
+	      relink_command=`$echo "X$relink_command" | $Xsed -e 's%@OUTPUT@%'"$outputname"'%g'`
+
+	      $show "$relink_command"
+	      if $run eval "$relink_command"; then :
+	      else
+		$echo "$modename: error: relink \`$file' with the above command before installing it" 1>&2
+		${rm}r "$tmpdir"
+		continue
+	      fi
+	      file="$outputname"
+	    else
+	      $echo "$modename: warning: cannot relink \`$file'" 1>&2
+	    fi
+	  else
+	    # Install the binary that we compiled earlier.
+	    file=`$echo "X$file$stripped_ext" | $Xsed -e "s%\([^/]*\)$%$objdir/\1%"`
+	  fi
+	fi
+
+	# remove .exe since cygwin /usr/bin/install will append another
+	# one anyway 
+	case $install_prog,$host in
+	*/usr/bin/install*,*cygwin*)
+	  case $file:$destfile in
+	  *.exe:*.exe)
+	    # this is ok
+	    ;;
+	  *.exe:*)
+	    destfile=$destfile.exe
+	    ;;
+	  *:*.exe)
+	    destfile=`$echo $destfile | ${SED} -e 's,.exe$,,'`
+	    ;;
+	  esac
+	  ;;
+	esac
+	$show "$install_prog$stripme $file $destfile"
+	$run eval "$install_prog\$stripme \$file \$destfile" || exit $?
+	test -n "$outputname" && ${rm}r "$tmpdir"
+	;;
+      esac
+    done
+
+    for file in $staticlibs; do
+      name=`$echo "X$file" | $Xsed -e 's%^.*/%%'`
+
+      # Set up the ranlib parameters.
+      oldlib="$destdir/$name"
+
+      $show "$install_prog $file $oldlib"
+      $run eval "$install_prog \$file \$oldlib" || exit $?
+
+      if test -n "$stripme" && test -n "$old_striplib"; then
+	$show "$old_striplib $oldlib"
+	$run eval "$old_striplib $oldlib" || exit $?
+      fi
+
+      # Do each command in the postinstall commands.
+      cmds=$old_postinstall_cmds
+      save_ifs="$IFS"; IFS='~'
+      for cmd in $cmds; do
+	IFS="$save_ifs"
+	eval cmd=\"$cmd\"
+	$show "$cmd"
+	$run eval "$cmd" || exit $?
+      done
+      IFS="$save_ifs"
+    done
+
+    if test -n "$future_libdirs"; then
+      $echo "$modename: warning: remember to run \`$progname --finish$future_libdirs'" 1>&2
+    fi
+
+    if test -n "$current_libdirs"; then
+      # Maybe just do a dry run.
+      test -n "$run" && current_libdirs=" -n$current_libdirs"
+      exec_cmd='$SHELL $progpath $preserve_args --finish$current_libdirs'
+    else
+      exit $EXIT_SUCCESS
+    fi
+    ;;
+
+  # libtool finish mode
+  finish)
+    modename="$modename: finish"
+    libdirs="$nonopt"
+    admincmds=
+
+    if test -n "$finish_cmds$finish_eval" && test -n "$libdirs"; then
+      for dir
+      do
+	libdirs="$libdirs $dir"
+      done
+
+      for libdir in $libdirs; do
+	if test -n "$finish_cmds"; then
+	  # Do each command in the finish commands.
+	  cmds=$finish_cmds
+	  save_ifs="$IFS"; IFS='~'
+	  for cmd in $cmds; do
+	    IFS="$save_ifs"
+	    eval cmd=\"$cmd\"
+	    $show "$cmd"
+	    $run eval "$cmd" || admincmds="$admincmds
+       $cmd"
+	  done
+	  IFS="$save_ifs"
+	fi
+	if test -n "$finish_eval"; then
+	  # Do the single finish_eval.
+	  eval cmds=\"$finish_eval\"
+	  $run eval "$cmds" || admincmds="$admincmds
+       $cmds"
+	fi
+      done
+    fi
+
+    # Exit here if they wanted silent mode.
+    test "$show" = : && exit $EXIT_SUCCESS
+
+    $echo "X----------------------------------------------------------------------" | $Xsed
+    $echo "Libraries have been installed in:"
+    for libdir in $libdirs; do
+      $echo "   $libdir"
+    done
+    $echo
+    $echo "If you ever happen to want to link against installed libraries"
+    $echo "in a given directory, LIBDIR, you must either use libtool, and"
+    $echo "specify the full pathname of the library, or use the \`-LLIBDIR'"
+    $echo "flag during linking and do at least one of the following:"
+    if test -n "$shlibpath_var"; then
+      $echo "   - add LIBDIR to the \`$shlibpath_var' environment variable"
+      $echo "     during execution"
+    fi
+    if test -n "$runpath_var"; then
+      $echo "   - add LIBDIR to the \`$runpath_var' environment variable"
+      $echo "     during linking"
+    fi
+    if test -n "$hardcode_libdir_flag_spec"; then
+      libdir=LIBDIR
+      eval flag=\"$hardcode_libdir_flag_spec\"
+
+      $echo "   - use the \`$flag' linker flag"
+    fi
+    if test -n "$admincmds"; then
+      $echo "   - have your system administrator run these commands:$admincmds"
+    fi
+    if test -f /etc/ld.so.conf; then
+      $echo "   - have your system administrator add LIBDIR to \`/etc/ld.so.conf'"
+    fi
+    $echo
+    $echo "See any operating system documentation about shared libraries for"
+    $echo "more information, such as the ld(1) and ld.so(8) manual pages."
+    $echo "X----------------------------------------------------------------------" | $Xsed
+    exit $EXIT_SUCCESS
+    ;;
+
+  # libtool execute mode
+  execute)
+    modename="$modename: execute"
+
+    # The first argument is the command name.
+    cmd="$nonopt"
+    if test -z "$cmd"; then
+      $echo "$modename: you must specify a COMMAND" 1>&2
+      $echo "$help"
+      exit $EXIT_FAILURE
+    fi
+
+    # Handle -dlopen flags immediately.
+    for file in $execute_dlfiles; do
+      if test ! -f "$file"; then
+	$echo "$modename: \`$file' is not a file" 1>&2
+	$echo "$help" 1>&2
+	exit $EXIT_FAILURE
+      fi
+
+      dir=
+      case $file in
+      *.la)
+	# Check to see that this really is a libtool archive.
+	if (${SED} -e '2q' $file | grep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then :
+	else
+	  $echo "$modename: \`$lib' is not a valid libtool archive" 1>&2
+	  $echo "$help" 1>&2
+	  exit $EXIT_FAILURE
+	fi
+
+	# Read the libtool library.
+	dlname=
+	library_names=
+
+	# If there is no directory component, then add one.
+	case $file in
+	*/* | *\\*) . $file ;;
+	*) . ./$file ;;
+	esac
+
+	# Skip this library if it cannot be dlopened.
+	if test -z "$dlname"; then
+	  # Warn if it was a shared library.
+	  test -n "$library_names" && $echo "$modename: warning: \`$file' was not linked with \`-export-dynamic'"
+	  continue
+	fi
+
+	dir=`$echo "X$file" | $Xsed -e 's%/[^/]*$%%'`
+	test "X$dir" = "X$file" && dir=.
+
+	if test -f "$dir/$objdir/$dlname"; then
+	  dir="$dir/$objdir"
+	else
+	  $echo "$modename: cannot find \`$dlname' in \`$dir' or \`$dir/$objdir'" 1>&2
+	  exit $EXIT_FAILURE
+	fi
+	;;
+
+      *.lo)
+	# Just add the directory containing the .lo file.
+	dir=`$echo "X$file" | $Xsed -e 's%/[^/]*$%%'`
+	test "X$dir" = "X$file" && dir=.
+	;;
+
+      *)
+	$echo "$modename: warning \`-dlopen' is ignored for non-libtool libraries and objects" 1>&2
+	continue
+	;;
+      esac
+
+      # Get the absolute pathname.
+      absdir=`cd "$dir" && pwd`
+      test -n "$absdir" && dir="$absdir"
+
+      # Now add the directory to shlibpath_var.
+      if eval "test -z \"\$$shlibpath_var\""; then
+	eval "$shlibpath_var=\"\$dir\""
+      else
+	eval "$shlibpath_var=\"\$dir:\$$shlibpath_var\""
+      fi
+    done
+
+    # This variable tells wrapper scripts just to set shlibpath_var
+    # rather than running their programs.
+    libtool_execute_magic="$magic"
+
+    # Check if any of the arguments is a wrapper script.
+    args=
+    for file
+    do
+      case $file in
+      -*) ;;
+      *)
+	# Do a test to see if this is really a libtool program.
+	if (${SED} -e '4q' $file | grep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+	  # If there is no directory component, then add one.
+	  case $file in
+	  */* | *\\*) . $file ;;
+	  *) . ./$file ;;
+	  esac
+
+	  # Transform arg to wrapped name.
+	  file="$progdir/$program"
+	fi
+	;;
+      esac
+      # Quote arguments (to preserve shell metacharacters).
+      file=`$echo "X$file" | $Xsed -e "$sed_quote_subst"`
+      args="$args \"$file\""
+    done
+
+    if test -z "$run"; then
+      if test -n "$shlibpath_var"; then
+	# Export the shlibpath_var.
+	eval "export $shlibpath_var"
+      fi
+
+      # Restore saved environment variables
+      if test "${save_LC_ALL+set}" = set; then
+	LC_ALL="$save_LC_ALL"; export LC_ALL
+      fi
+      if test "${save_LANG+set}" = set; then
+	LANG="$save_LANG"; export LANG
+      fi
+
+      # Now prepare to actually exec the command.
+      exec_cmd="\$cmd$args"
+    else
+      # Display what would be done.
+      if test -n "$shlibpath_var"; then
+	eval "\$echo \"\$shlibpath_var=\$$shlibpath_var\""
+	$echo "export $shlibpath_var"
+      fi
+      $echo "$cmd$args"
+      exit $EXIT_SUCCESS
+    fi
+    ;;
+
+  # libtool clean and uninstall mode
+  clean | uninstall)
+    modename="$modename: $mode"
+    rm="$nonopt"
+    files=
+    rmforce=
+    exit_status=0
+
+    # This variable tells wrapper scripts just to set variables rather
+    # than running their programs.
+    libtool_install_magic="$magic"
+
+    for arg
+    do
+      case $arg in
+      -f) rm="$rm $arg"; rmforce=yes ;;
+      -*) rm="$rm $arg" ;;
+      *) files="$files $arg" ;;
+      esac
+    done
+
+    if test -z "$rm"; then
+      $echo "$modename: you must specify an RM program" 1>&2
+      $echo "$help" 1>&2
+      exit $EXIT_FAILURE
+    fi
+
+    rmdirs=
+
+    origobjdir="$objdir"
+    for file in $files; do
+      dir=`$echo "X$file" | $Xsed -e 's%/[^/]*$%%'`
+      if test "X$dir" = "X$file"; then
+	dir=.
+	objdir="$origobjdir"
+      else
+	objdir="$dir/$origobjdir"
+      fi
+      name=`$echo "X$file" | $Xsed -e 's%^.*/%%'`
+      test "$mode" = uninstall && objdir="$dir"
+
+      # Remember objdir for removal later, being careful to avoid duplicates
+      if test "$mode" = clean; then
+	case " $rmdirs " in
+	  *" $objdir "*) ;;
+	  *) rmdirs="$rmdirs $objdir" ;;
+	esac
+      fi
+
+      # Don't error if the file doesn't exist and rm -f was used.
+      if (test -L "$file") >/dev/null 2>&1 \
+	|| (test -h "$file") >/dev/null 2>&1 \
+	|| test -f "$file"; then
+	:
+      elif test -d "$file"; then
+	exit_status=1
+	continue
+      elif test "$rmforce" = yes; then
+	continue
+      fi
+
+      rmfiles="$file"
+
+      case $name in
+      *.la)
+	# Possibly a libtool archive, so verify it.
+	if (${SED} -e '2q' $file | grep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+	  . $dir/$name
+
+	  # Delete the libtool libraries and symlinks.
+	  for n in $library_names; do
+	    rmfiles="$rmfiles $objdir/$n"
+	  done
+	  test -n "$old_library" && rmfiles="$rmfiles $objdir/$old_library"
+
+	  case "$mode" in
+	  clean)
+	    case "  $library_names " in
+	    # "  " in the beginning catches empty $dlname
+	    *" $dlname "*) ;;
+	    *) rmfiles="$rmfiles $objdir/$dlname" ;;
+	    esac
+	     test -n "$libdir" && rmfiles="$rmfiles $objdir/$name $objdir/${name}i"
+	    ;;
+	  uninstall)
+	    if test -n "$library_names"; then
+	      # Do each command in the postuninstall commands.
+	      cmds=$postuninstall_cmds
+	      save_ifs="$IFS"; IFS='~'
+	      for cmd in $cmds; do
+		IFS="$save_ifs"
+		eval cmd=\"$cmd\"
+		$show "$cmd"
+		$run eval "$cmd"
+		if test "$?" -ne 0 && test "$rmforce" != yes; then
+		  exit_status=1
+		fi
+	      done
+	      IFS="$save_ifs"
+	    fi
+
+	    if test -n "$old_library"; then
+	      # Do each command in the old_postuninstall commands.
+	      cmds=$old_postuninstall_cmds
+	      save_ifs="$IFS"; IFS='~'
+	      for cmd in $cmds; do
+		IFS="$save_ifs"
+		eval cmd=\"$cmd\"
+		$show "$cmd"
+		$run eval "$cmd"
+		if test "$?" -ne 0 && test "$rmforce" != yes; then
+		  exit_status=1
+		fi
+	      done
+	      IFS="$save_ifs"
+	    fi
+	    # FIXME: should reinstall the best remaining shared library.
+	    ;;
+	  esac
+	fi
+	;;
+
+      *.lo)
+	# Possibly a libtool object, so verify it.
+	if (${SED} -e '2q' $file | grep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+
+	  # Read the .lo file
+	  . $dir/$name
+
+	  # Add PIC object to the list of files to remove.
+	  if test -n "$pic_object" \
+	     && test "$pic_object" != none; then
+	    rmfiles="$rmfiles $dir/$pic_object"
+	  fi
+
+	  # Add non-PIC object to the list of files to remove.
+	  if test -n "$non_pic_object" \
+	     && test "$non_pic_object" != none; then
+	    rmfiles="$rmfiles $dir/$non_pic_object"
+	  fi
+	fi
+	;;
+
+      *)
+	if test "$mode" = clean ; then
+	  noexename=$name
+	  case $file in
+	  *.exe)
+	    file=`$echo $file|${SED} 's,.exe$,,'`
+	    noexename=`$echo $name|${SED} 's,.exe$,,'`
+	    # $file with .exe has already been added to rmfiles,
+	    # add $file without .exe
+	    rmfiles="$rmfiles $file"
+	    ;;
+	  esac
+	  # Do a test to see if this is a libtool program.
+	  if (${SED} -e '4q' $file | grep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+	    relink_command=
+	    . $dir/$noexename
+
+	    # note $name still contains .exe if it was in $file originally
+	    # as does the version of $file that was added into $rmfiles
+	    rmfiles="$rmfiles $objdir/$name $objdir/${name}S.${objext}"
+	    if test "$fast_install" = yes && test -n "$relink_command"; then
+	      rmfiles="$rmfiles $objdir/lt-$name"
+	    fi
+	    if test "X$noexename" != "X$name" ; then
+	      rmfiles="$rmfiles $objdir/lt-${noexename}.c"
+	    fi
+	  fi
+	fi
+	;;
+      esac
+      $show "$rm $rmfiles"
+      $run $rm $rmfiles || exit_status=1
+    done
+    objdir="$origobjdir"
+
+    # Try to remove the ${objdir}s in the directories where we deleted files
+    for dir in $rmdirs; do
+      if test -d "$dir"; then
+	$show "rmdir $dir"
+	$run rmdir $dir >/dev/null 2>&1
+      fi
+    done
+
+    exit $exit_status
+    ;;
+
+  "")
+    $echo "$modename: you must specify a MODE" 1>&2
+    $echo "$generic_help" 1>&2
+    exit $EXIT_FAILURE
+    ;;
+  esac
+
+  if test -z "$exec_cmd"; then
+    $echo "$modename: invalid operation mode \`$mode'" 1>&2
+    $echo "$generic_help" 1>&2
+    exit $EXIT_FAILURE
+  fi
+fi # test -z "$show_help"
+
+if test -n "$exec_cmd"; then
+  eval exec $exec_cmd
+  exit $EXIT_FAILURE
+fi
+
+# We need to display help for each of the modes.
+case $mode in
+"") $echo \
+"Usage: $modename [OPTION]... [MODE-ARG]...
+
+Provide generalized library-building support services.
+
+    --config          show all configuration variables
+    --debug           enable verbose shell tracing
+-n, --dry-run         display commands without modifying any files
+    --features        display basic configuration information and exit
+    --finish          same as \`--mode=finish'
+    --help            display this help message and exit
+    --mode=MODE       use operation mode MODE [default=inferred from MODE-ARGS]
+    --quiet           same as \`--silent'
+    --silent          don't print informational messages
+    --tag=TAG         use configuration variables from tag TAG
+    --version         print version information
+
+MODE must be one of the following:
+
+      clean           remove files from the build directory
+      compile         compile a source file into a libtool object
+      execute         automatically set library path, then run a program
+      finish          complete the installation of libtool libraries
+      install         install libraries or executables
+      link            create a library or an executable
+      uninstall       remove libraries from an installed directory
+
+MODE-ARGS vary depending on the MODE.  Try \`$modename --help --mode=MODE' for
+a more detailed description of MODE.
+
+Report bugs to <bug-libtool@gnu.org>."
+  exit $EXIT_SUCCESS
+  ;;
+
+clean)
+  $echo \
+"Usage: $modename [OPTION]... --mode=clean RM [RM-OPTION]... FILE...
+
+Remove files from the build directory.
+
+RM is the name of the program to use to delete files associated with each FILE
+(typically \`/bin/rm').  RM-OPTIONS are options (such as \`-f') to be passed
+to RM.
+
+If FILE is a libtool library, object or program, all the files associated
+with it are deleted. Otherwise, only FILE itself is deleted using RM."
+  ;;
+
+compile)
+  $echo \
+"Usage: $modename [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE
+
+Compile a source file into a libtool library object.
+
+This mode accepts the following additional options:
+
+  -o OUTPUT-FILE    set the output file name to OUTPUT-FILE
+  -prefer-pic       try to building PIC objects only
+  -prefer-non-pic   try to building non-PIC objects only
+  -static           always build a \`.o' file suitable for static linking
+
+COMPILE-COMMAND is a command to be used in creating a \`standard' object file
+from the given SOURCEFILE.
+
+The output file name is determined by removing the directory component from
+SOURCEFILE, then substituting the C source code suffix \`.c' with the
+library object suffix, \`.lo'."
+  ;;
+
+execute)
+  $echo \
+"Usage: $modename [OPTION]... --mode=execute COMMAND [ARGS]...
+
+Automatically set library path, then run a program.
+
+This mode accepts the following additional options:
+
+  -dlopen FILE      add the directory containing FILE to the library path
+
+This mode sets the library path environment variable according to \`-dlopen'
+flags.
+
+If any of the ARGS are libtool executable wrappers, then they are translated
+into their corresponding uninstalled binary, and any of their required library
+directories are added to the library path.
+
+Then, COMMAND is executed, with ARGS as arguments."
+  ;;
+
+finish)
+  $echo \
+"Usage: $modename [OPTION]... --mode=finish [LIBDIR]...
+
+Complete the installation of libtool libraries.
+
+Each LIBDIR is a directory that contains libtool libraries.
+
+The commands that this mode executes may require superuser privileges.  Use
+the \`--dry-run' option if you just want to see what would be executed."
+  ;;
+
+install)
+  $echo \
+"Usage: $modename [OPTION]... --mode=install INSTALL-COMMAND...
+
+Install executables or libraries.
+
+INSTALL-COMMAND is the installation command.  The first component should be
+either the \`install' or \`cp' program.
+
+The rest of the components are interpreted as arguments to that command (only
+BSD-compatible install options are recognized)."
+  ;;
+
+link)
+  $echo \
+"Usage: $modename [OPTION]... --mode=link LINK-COMMAND...
+
+Link object files or libraries together to form another library, or to
+create an executable program.
+
+LINK-COMMAND is a command using the C compiler that you would use to create
+a program from several object files.
+
+The following components of LINK-COMMAND are treated specially:
+
+  -all-static       do not do any dynamic linking at all
+  -avoid-version    do not add a version suffix if possible
+  -dlopen FILE      \`-dlpreopen' FILE if it cannot be dlopened at runtime
+  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols
+  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)
+  -export-symbols SYMFILE
+		    try to export only the symbols listed in SYMFILE
+  -export-symbols-regex REGEX
+		    try to export only the symbols matching REGEX
+  -LLIBDIR          search LIBDIR for required installed libraries
+  -lNAME            OUTPUT-FILE requires the installed library libNAME
+  -module           build a library that can dlopened
+  -no-fast-install  disable the fast-install mode
+  -no-install       link a not-installable executable
+  -no-undefined     declare that a library does not refer to external symbols
+  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects
+  -objectlist FILE  Use a list of object files found in FILE to specify objects
+  -precious-files-regex REGEX
+                    don't remove output files matching REGEX
+  -release RELEASE  specify package release information
+  -rpath LIBDIR     the created library will eventually be installed in LIBDIR
+  -R[ ]LIBDIR       add LIBDIR to the runtime path of programs and libraries
+  -static           do not do any dynamic linking of libtool libraries
+  -version-info CURRENT[:REVISION[:AGE]]
+		    specify library version info [each variable defaults to 0]
+
+All other options (arguments beginning with \`-') are ignored.
+
+Every other argument is treated as a filename.  Files ending in \`.la' are
+treated as uninstalled libtool libraries, other files are standard or library
+object files.
+
+If the OUTPUT-FILE ends in \`.la', then a libtool library is created,
+only library objects (\`.lo' files) may be specified, and \`-rpath' is
+required, except when creating a convenience library.
+
+If OUTPUT-FILE ends in \`.a' or \`.lib', then a standard library is created
+using \`ar' and \`ranlib', or on Windows using \`lib'.
+
+If OUTPUT-FILE ends in \`.lo' or \`.${objext}', then a reloadable object file
+is created, otherwise an executable program is created."
+  ;;
+
+uninstall)
+  $echo \
+"Usage: $modename [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...
+
+Remove libraries from an installation directory.
+
+RM is the name of the program to use to delete files associated with each FILE
+(typically \`/bin/rm').  RM-OPTIONS are options (such as \`-f') to be passed
+to RM.
+
+If FILE is a libtool library, all the files associated with it are deleted.
+Otherwise, only FILE itself is deleted using RM."
+  ;;
+
+*)
+  $echo "$modename: invalid operation mode \`$mode'" 1>&2
+  $echo "$help" 1>&2
+  exit $EXIT_FAILURE
+  ;;
+esac
+
+$echo
+$echo "Try \`$modename --help' for more information about other modes."
+
+exit $?
+
+# The TAGs below are defined such that we never get into a situation
+# in which we disable both kinds of libraries.  Given conflicting
+# choices, we go for a static library, that is the most portable,
+# since we can't tell whether shared libraries were disabled because
+# the user asked for that or because the platform doesn't support
+# them.  This is particularly important on AIX, because we don't
+# support having both static and shared libraries enabled at the same
+# time on that platform, so we default to a shared-only configuration.
+# If a disable-shared tag is given, we'll fallback to a static-only
+# configuration.  But we'll never go from static-only to shared-only.
+
+# ### BEGIN LIBTOOL TAG CONFIG: disable-shared
+disable_libs=shared
+# ### END LIBTOOL TAG CONFIG: disable-shared
+
+# ### BEGIN LIBTOOL TAG CONFIG: disable-static
+disable_libs=static
+# ### END LIBTOOL TAG CONFIG: disable-static
+
+# Local Variables:
+# mode:shell-script
+# sh-indentation:2
+# End:
diff -r d551623afde5 deps/exmpp/m4/ax_compare_version.m4
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/m4/ax_compare_version.m4	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,94 @@
+dnl Macro to compare version numbers in configure.
+dnl
+
+AC_DEFUN([AX_COMPARE_VERSION], [
+  # Used to indicate true or false condition
+  ax_compare_version=false
+
+  # Convert the two version strings to be compared into a format that
+  # allows a simple string comparison.  The end result is that a version
+  # string of the form 1.12.5-r617 will be converted to the form
+  # 0001001200050617.  In other words, each number is zero padded to four
+  # digits, and non digits are removed.
+  AS_VAR_PUSHDEF([A],[ax_compare_version_A])
+  A=`echo "$1" | sed -e 's/\([[0-9]]*\)/Z\1Z/g' \
+                     -e 's/Z\([[0-9]]\)Z/Z0\1Z/g' \
+                     -e 's/Z\([[0-9]][[0-9]]\)Z/Z0\1Z/g' \
+                     -e 's/Z\([[0-9]][[0-9]][[0-9]]\)Z/Z0\1Z/g' \
+                     -e 's/[[^0-9]]//g'`
+
+  AS_VAR_PUSHDEF([B],[ax_compare_version_B])
+  B=`echo "$3" | sed -e 's/\([[0-9]]*\)/Z\1Z/g' \
+                     -e 's/Z\([[0-9]]\)Z/Z0\1Z/g' \
+                     -e 's/Z\([[0-9]][[0-9]]\)Z/Z0\1Z/g' \
+                     -e 's/Z\([[0-9]][[0-9]][[0-9]]\)Z/Z0\1Z/g' \
+                     -e 's/[[^0-9]]//g'`
+
+  dnl # In the case of le, ge, lt, and gt, the strings are sorted as necessary
+  dnl # then the first line is used to determine if the condition is true.
+  dnl # The sed right after the echo is to remove any indented white space.
+  m4_case(m4_tolower($2),
+  [lt],[
+    ax_compare_version=`echo "x$A
+x$B" | sed 's/^ *//' | sort -r | sed "s/x${A}/false/;s/x${B}/true/;1q"`
+  ],
+  [gt],[
+    ax_compare_version=`echo "x$A
+x$B" | sed 's/^ *//' | sort | sed "s/x${A}/false/;s/x${B}/true/;1q"`
+  ],
+  [le],[
+    ax_compare_version=`echo "x$A
+x$B" | sed 's/^ *//' | sort | sed "s/x${A}/true/;s/x${B}/false/;1q"`
+  ],
+  [ge],[
+    ax_compare_version=`echo "x$A
+x$B" | sed 's/^ *//' | sort -r | sed "s/x${A}/true/;s/x${B}/false/;1q"`
+  ],[
+    dnl Split the operator from the subversion count if present.
+    m4_bmatch(m4_substr($2,2),
+    [0],[
+      # A count of zero means use the length of the shorter version.
+      # Determine the number of characters in A and B.
+      ax_compare_version_len_A=`echo "$A" | awk '{print(length)}'`
+      ax_compare_version_len_B=`echo "$B" | awk '{print(length)}'`
+
+      # Set A to no more than B's length and B to no more than A's length.
+      A=`echo "$A" | sed "s/\(.\{$ax_compare_version_len_B\}\).*/\1/"`
+      B=`echo "$B" | sed "s/\(.\{$ax_compare_version_len_A\}\).*/\1/"`
+    ],
+    [[0-9]+],[
+      # A count greater than zero means use only that many subversions
+      A=`echo "$A" | sed "s/\(\([[0-9]]\{4\}\)\{m4_substr($2,2)\}\).*/\1/"`
+      B=`echo "$B" | sed "s/\(\([[0-9]]\{4\}\)\{m4_substr($2,2)\}\).*/\1/"`
+    ],
+    [.+],[
+      AC_WARNING(
+        [illegal OP numeric parameter: $2])
+    ],[])
+
+    # Pad zeros at end of numbers to make same length.
+    ax_compare_version_tmp_A="$A`echo $B | sed 's/./0/g'`"
+    B="$B`echo $A | sed 's/./0/g'`"
+    A="$ax_compare_version_tmp_A"
+
+    # Check for equality or inequality as necessary.
+    m4_case(m4_tolower(m4_substr($2,0,2)),
+    [eq],[
+      test "x$A" = "x$B" && ax_compare_version=true
+    ],
+    [ne],[
+      test "x$A" != "x$B" && ax_compare_version=true
+    ],[
+      AC_WARNING([illegal OP parameter: $2])
+    ])
+  ])
+
+  AS_VAR_POPDEF([A])dnl
+  AS_VAR_POPDEF([B])dnl
+
+  dnl # Execute ACTION-IF-TRUE / ACTION-IF-FALSE.
+  if test "$ax_compare_version" = "true" ; then
+    m4_ifvaln([$4],[$4],[:])dnl
+    m4_ifvaln([$5],[else $5])dnl
+  fi
+]) dnl AX_COMPARE_VERSION
diff -r d551623afde5 deps/exmpp/m4/colored-echo.m4
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/m4/colored-echo.m4	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,75 @@
+dnl
+dnl Macro to output bold and colored text.
+dnl
+
+dnl COLORED_ECHO_INIT
+dnl This macro must be called first to initialize a context.
+AC_DEFUN([COLORED_ECHO_INIT],
+[
+  dnl Prepare fancy console output, taken from GNU shtools.
+  colored_echo_bold=''
+  colored_echo_norm=''
+
+  AC_PROG_AWK
+  if test x"$AWK" = x"not found"; then
+    return
+  fi
+
+  case $TERM in
+  xterm|xterm*|vt220|vt220*)
+    dnl For the most important terminal types we directly know the
+    dnl sequences.
+    colored_echo_bold=`$AWK 'BEGIN { printf("%c%c%c%c", 27, 91, 49, 109); }' </dev/null 2>/dev/null`
+    colored_echo_norm=`$AWK 'BEGIN { printf("%c%c%c", 27, 91, 109); }' </dev/null 2>/dev/null`
+    ;;
+
+  vt100|vt100*|cygwin)
+    colored_echo_bold=`$AWK 'BEGIN { printf("%c%c%c%c%c%c", 27, 91, 49, 109, 0, 0); }' </dev/null 2>/dev/null`
+    colored_echo_norm=`$AWK 'BEGIN { printf("%c%c%c%c%c", 27, 91, 109, 0, 0); }' </dev/null 2>/dev/null`
+    ;;
+
+  *)
+    dnl For all others, we try to use a possibly existing `tput' or
+    dnl `tcout' utility.
+    paths=`$ECHO $PATH | sed -e 's/:/ /g'`
+    for tool in tput tcout; do
+      for dir in $paths; do
+        if test -r "$dir/$tool" ; then
+          for seq in bold md smso; do
+            bold="`$dir/$tool $seq 2>/dev/null`"
+            if test ".$bold" != . ; then
+              colored_echo_bold="$bold"
+              break
+            fi
+          done
+          if test ".$colored_echo_bold" != . ; then
+            for seq in sgr0 me rmso init reset; do
+              norm="`$dir/$tool $seq 2>/dev/null`"
+              if test ".$norm" != . ; then
+                colored_echo_norm="$norm"
+                break
+              fi
+            done
+          fi
+          break
+        fi
+      done
+      if test x"$colored_echo_bold" != "x" -a x"$colored_echo_norm" != "x"; then
+        break;
+      fi
+    done
+    ;;
+  esac
+])
+
+dnl COLORED_ECHO(TEXT)
+dnl Output text with:
+dnl   o  everything between %B and %b displayed bold.
+AC_DEFUN([COLORED_ECHO],
+[
+  text=`$ECHO $seo "$1" | sed -e "s/%B/${colored_echo_bold}/g" -e "s/%b/${colored_echo_norm}/g" 2>/dev/null`
+  $ECHO $seo "$text"
+
+  text=`$ECHO $sec "$1" | sed -e "s/%B//g" -e "s/%b//g" 2>/dev/null`
+  _AS_ECHO_LOG($text)
+])
diff -r d551623afde5 deps/exmpp/m4/erlang.m4
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/m4/erlang.m4	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,68 @@
+dnl
+dnl More functions to query Erlang environment.
+dnl
+
+dnl ERLANG_CHECK_ERTS([ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]])
+dnl Substitudes
+dnl   ERLANG_ERTS_DIR
+dnl   ERLANG_ERTS_VER
+AC_DEFUN([ERLANG_CHECK_ERTS],
+[
+AC_REQUIRE([AC_ERLANG_PATH_ERLC])[]dnl
+AC_REQUIRE([AC_ERLANG_PATH_ERL])[]dnl
+AC_REQUIRE([AC_ERLANG_SUBST_ROOT_DIR])[]dnl
+AC_CACHE_CHECK([for Erlang/OTP ERTS version],
+  [erlang_cv_erts_ver],
+  [
+    AC_LANG_PUSH(Erlang)[]dnl
+    AC_RUN_IFELSE(
+      [AC_LANG_PROGRAM([], [dnl
+        file:write_file("conftest.out", erlang:system_info(version)),
+        halt(0)])],
+      [erlang_cv_erts_ver=`cat conftest.out`],
+      [if test ! -f conftest.out; then
+         AC_MSG_FAILURE([test Erlang program execution failed])
+       else
+         erlang_cv_erts_ver="not found"
+       fi])
+    AC_LANG_POP(Erlang)[]dnl
+  ])
+AC_CACHE_CHECK([for Erlang/OTP ERTS directory],
+  [erlang_cv_erts_dir],
+  [
+    erlang_cv_erts_dir="${ERLANG_ROOT_DIR}/erts-$erlang_cv_erts_ver"
+    if test ! -d "$erlang_cv_erts_dir"; then
+      erlang_cv_erts_dir="${ERLANG_ROOT_DIR}/usr"
+    fi
+  ])
+AC_SUBST([ERLANG_ERTS_DIR], [$erlang_cv_erts_dir])
+AC_SUBST([ERLANG_ERTS_VER], [$erlang_cv_erts_ver])
+AS_IF([test "$erlang_cv_erts_ver" = "not found"], [$2], [$1])
+])
+
+dnl ERLANG_CHECK_RELEASE()
+dnl Substitudes
+dnl   ERLANG_RELEASE
+AC_DEFUN([ERLANG_CHECK_RELEASE],
+[
+AC_REQUIRE([AC_ERLANG_PATH_ERLC])[]dnl
+AC_REQUIRE([AC_ERLANG_PATH_ERL])[]dnl
+AC_REQUIRE([AC_ERLANG_SUBST_ROOT_DIR])[]dnl
+AC_CACHE_CHECK([for Erlang/OTP release],
+  [erlang_cv_release],
+  [
+    AC_LANG_PUSH(Erlang)[]dnl
+    AC_RUN_IFELSE(
+      [AC_LANG_PROGRAM([], [dnl
+        file:write_file("conftest.out", erlang:system_info(otp_release)),
+        halt(0)])],
+      [erlang_cv_release=`cat conftest.out`],
+      [if test ! -f conftest.out; then
+         AC_MSG_FAILURE([test Erlang program execution failed])
+       else
+         erlang_cv_release="not found"
+       fi])
+    AC_LANG_POP(Erlang)[]dnl
+  ])
+AC_SUBST([ERLANG_RELEASE], [$erlang_cv_release])
+])
diff -r d551623afde5 deps/exmpp/m4/expat.m4
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/m4/expat.m4	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,57 @@
+dnl
+dnl Configure path for Expat
+dnl
+
+dnl EXMPP_EXPAT([ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]])
+dnl Substitutes
+dnl   EXPAT_CPPFLAGS
+dnl   EXPAT_LDFLAGS
+dnl   EXPAT_LIBS
+AC_DEFUN([EXMPP_EXPAT],
+[
+  AC_ARG_WITH(expat,
+    AC_HELP_STRING([--with-expat=PREFIX],
+      [prefix where Expat is installed (optional)]),
+    expat_prefix="$withval",)
+
+  no_expat=""
+  EXPAT_CPPFLAGS=""
+  EXPAT_LDFLAGS=""
+  EXPAT_LIBS="-lexpat"
+
+  if test x"${expat_prefix:+set}" = "xset"; then
+    EXPAT_CPPFLAGS="-I${expat_prefix%%\/}/include ${EXPAT_CPPFLAGS}"
+    EXPAT_LDFLAGS="-L${expat_prefix%%\/}/lib ${EXPAT_LDFLAGS}"
+  fi
+
+  ac_save_CPPFLAGS="$CPPFLAGS"
+  ac_save_LDFLAGS="$LDFLAGS"
+  ac_save_LIBS="$LIBS"
+  CPPFLAGS="$CPPFLAGS $EXPAT_CPPFLAGS"
+  LDFLAGS="$LDFLAGS $EXPAT_LDFLAGS"
+
+  AC_CHECK_HEADERS(expat.h,, no_expat="yes",)
+
+  AC_CHECK_LIB(expat, XML_ParserCreate,, no_expat="yes")
+
+  CPPFLAGS="$ac_save_CPPFLAGS"
+  LDFLAGS="$ac_save_LDFLAGS"
+  LIBS="$ac_save_LIBS"
+
+  AC_MSG_CHECKING([for Expat library])
+  if test x"$no_expat" = "x"; then
+    AC_MSG_RESULT([yes])
+    ifelse([$1], , :, [$1])
+  else
+    AC_MSG_RESULT([no])
+    ifelse([$2], , :, [$2])
+
+    EXPAT_CPPFLAGS=""
+    EXPAT_LDFLAGS=""
+    EXPAT_LIBS=""
+  fi
+
+  AC_SUBST(EXPAT_CPPFLAGS)
+  AC_SUBST(EXPAT_LDFLAGS)
+  AC_SUBST(EXPAT_LIBS)
+])
diff -r d551623afde5 deps/exmpp/m4/openssl.m4
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/m4/openssl.m4	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,57 @@
+dnl
+dnl Configure path for OpenSSL
+dnl
+
+dnl EXMPP_OPENSSL([ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]])
+dnl Substitutes
+dnl   OPENSSL_CPPFLAGS
+dnl   OPENSSL_LDFLAGS
+dnl   OPENSSL_LIBS
+AC_DEFUN([EXMPP_OPENSSL],
+[
+  AC_ARG_WITH(openssl,
+    AC_HELP_STRING([--with-openssl=PREFIX],
+      [prefix where OpenSSL is installed (optional)]),
+    openssl_prefix="$withval",)
+
+  no_openssl=""
+  OPENSSL_CPPFLAGS=""
+  OPENSSL_LDFLAGS=""
+  OPENSSL_LIBS="-lssl -lcrypto"
+
+  if test x"${openssl_prefix:+set}" = "xset"; then
+    OPENSSL_CPPFLAGS="-I${openssl_prefix%%\/}/include ${OPENSSL_CPPFLAGS}"
+    OPENSSL_LDFLAGS="-L${openssl_prefix%%\/}/lib ${OPENSSL_LDFLAGS}"
+  fi
+
+  ac_save_CPPFLAGS="$CPPFLAGS"
+  ac_save_LDFLAGS="$LDFLAGS"
+  ac_save_LIBS="$LIBS"
+  CPPFLAGS="$CPPFLAGS $OPENSSL_CPPFLAGS"
+  LDFLAGS="$LDFLAGS $OPENSSL_LDFLAGS"
+
+  AC_CHECK_HEADERS(openssl/ssl.h,, no_openssl="yes",)
+
+  AC_CHECK_LIB(ssl, SSL_CTX_new,, no_openssl="yes")
+
+  CPPFLAGS="$ac_save_CPPFLAGS"
+  LDFLAGS="$ac_save_LDFLAGS"
+  LIBS="$ac_save_LIBS"
+
+  AC_MSG_CHECKING([for OpenSSL library])
+  if test x"$no_openssl" = "x"; then
+    AC_MSG_RESULT([yes])
+    ifelse([$1], , :, [$1])
+  else
+    AC_MSG_RESULT([no])
+    ifelse([$2], , :, [$2])
+
+    OPENSSL_CPPFLAGS=""
+    OPENSSL_LDFLAGS=""
+    OPENSSL_LIBS=""
+  fi
+
+  AC_SUBST(OPENSSL_CPPFLAGS)
+  AC_SUBST(OPENSSL_LDFLAGS)
+  AC_SUBST(OPENSSL_LIBS)
+])
diff -r d551623afde5 deps/exmpp/m4/pkg.m4
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/m4/pkg.m4	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,155 @@
+# pkg.m4 - Macros to locate and utilise pkg-config.            -*- Autoconf -*-
+# 
+# Copyright © 2004 Scott James Remnant <scott@netsplit.com>.
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+#
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+# PKG_PROG_PKG_CONFIG([MIN-VERSION])
+# ----------------------------------
+AC_DEFUN([PKG_PROG_PKG_CONFIG],
+[m4_pattern_forbid([^_?PKG_[A-Z_]+$])
+m4_pattern_allow([^PKG_CONFIG(_PATH)?$])
+AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])dnl
+if test "x$ac_cv_env_PKG_CONFIG_set" != "xset"; then
+	AC_PATH_TOOL([PKG_CONFIG], [pkg-config])
+fi
+if test -n "$PKG_CONFIG"; then
+	_pkg_min_version=m4_default([$1], [0.9.0])
+	AC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])
+	if $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then
+		AC_MSG_RESULT([yes])
+	else
+		AC_MSG_RESULT([no])
+		PKG_CONFIG=""
+	fi
+		
+fi[]dnl
+])# PKG_PROG_PKG_CONFIG
+
+# PKG_CHECK_EXISTS(MODULES, [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])
+#
+# Check to see whether a particular set of modules exists.  Similar
+# to PKG_CHECK_MODULES(), but does not set variables or print errors.
+#
+#
+# Similar to PKG_CHECK_MODULES, make sure that the first instance of
+# this or PKG_CHECK_MODULES is called, or make sure to call
+# PKG_CHECK_EXISTS manually
+# --------------------------------------------------------------
+AC_DEFUN([PKG_CHECK_EXISTS],
+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
+if test -n "$PKG_CONFIG" && \
+    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors "$1"]); then
+  m4_ifval([$2], [$2], [:])
+m4_ifvaln([$3], [else
+  $3])dnl
+fi])
+
+
+# _PKG_CONFIG([VARIABLE], [COMMAND], [MODULES])
+# ---------------------------------------------
+m4_define([_PKG_CONFIG],
+[if test -n "$$1"; then
+    pkg_cv_[]$1="$$1"
+ elif test -n "$PKG_CONFIG"; then
+    PKG_CHECK_EXISTS([$3],
+                     [pkg_cv_[]$1=`$PKG_CONFIG --[]$2 "$3" 2>/dev/null`],
+		     [pkg_failed=yes])
+ else
+    pkg_failed=untried
+fi[]dnl
+])# _PKG_CONFIG
+
+# _PKG_SHORT_ERRORS_SUPPORTED
+# -----------------------------
+AC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED],
+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])
+if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
+        _pkg_short_errors_supported=yes
+else
+        _pkg_short_errors_supported=no
+fi[]dnl
+])# _PKG_SHORT_ERRORS_SUPPORTED
+
+
+# PKG_CHECK_MODULES(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],
+# [ACTION-IF-NOT-FOUND])
+#
+#
+# Note that if there is a possibility the first call to
+# PKG_CHECK_MODULES might not happen, you should be sure to include an
+# explicit call to PKG_PROG_PKG_CONFIG in your configure.ac
+#
+#
+# --------------------------------------------------------------
+AC_DEFUN([PKG_CHECK_MODULES],
+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
+AC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl
+AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl
+
+pkg_failed=no
+AC_MSG_CHECKING([for $1])
+
+_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])
+_PKG_CONFIG([$1][_LIBS], [libs], [$2])
+
+m4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS
+and $1[]_LIBS to avoid the need to call pkg-config.
+See the pkg-config man page for more details.])
+
+if test $pkg_failed = yes; then
+        _PKG_SHORT_ERRORS_SUPPORTED
+        if test $_pkg_short_errors_supported = yes; then
+	        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors "$2" 2>&1`
+        else 
+	        $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors "$2" 2>&1`
+        fi
+	# Put the nasty error message in config.log where it belongs
+	echo "$$1[]_PKG_ERRORS" >&AS_MESSAGE_LOG_FD
+
+	ifelse([$4], , [AC_MSG_ERROR(dnl
+[Package requirements ($2) were not met:
+
+$$1_PKG_ERRORS
+
+Consider adjusting the PKG_CONFIG_PATH environment variable if you
+installed software in a non-standard prefix.
+
+_PKG_TEXT
+])],
+		[AC_MSG_RESULT([no])
+                $4])
+elif test $pkg_failed = untried; then
+	ifelse([$4], , [AC_MSG_FAILURE(dnl
+[The pkg-config script could not be found or is too old.  Make sure it
+is in your PATH or set the PKG_CONFIG environment variable to the full
+path to pkg-config.
+
+_PKG_TEXT
+
+To get pkg-config, see <http://pkg-config.freedesktop.org/>.])],
+		[$4])
+else
+	$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS
+	$1[]_LIBS=$pkg_cv_[]$1[]_LIBS
+        AC_MSG_RESULT([yes])
+	ifelse([$3], , :, [$3])
+fi[]dnl
+])# PKG_CHECK_MODULES
diff -r d551623afde5 deps/exmpp/m4/zlib.m4
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/m4/zlib.m4	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,57 @@
+dnl
+dnl Configure path for Zlib
+dnl
+
+dnl EXMPP_ZLIB([ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]])
+dnl Substitutes
+dnl   ZLIB_CPPFLAGS
+dnl   ZLIB_LDFLAGS
+dnl   ZLIB_LIBS
+AC_DEFUN([EXMPP_ZLIB],
+[
+  AC_ARG_WITH(zlib,
+    AC_HELP_STRING([--with-zlib=PREFIX],
+      [prefix where Zlib is installed (optional)]),
+    zlib_prefix="$withval",)
+
+  no_zlib=""
+  ZLIB_CPPFLAGS=""
+  ZLIB_LDFLAGS=""
+  ZLIB_LIBS="-lz"
+
+  if test x"${zlib_prefix:+set}" = "xset"; then
+    ZLIB_CPPFLAGS="-I${zlib_prefix%%\/}/include ${ZLIB_CPPFLAGS}"
+    ZLIB_LDFLAGS="-L${zlib_prefix%%\/}/lib ${ZLIB_LDFLAGS}"
+  fi
+
+  ac_save_CPPFLAGS="$CPPFLAGS"
+  ac_save_LDFLAGS="$LDFLAGS"
+  ac_save_LIBS="$LIBS"
+  CPPFLAGS="$CPPFLAGS $ZLIB_CPPFLAGS"
+  LDFLAGS="$LDFLAGS $ZLIB_LDFLAGS"
+
+  AC_CHECK_HEADERS(zlib.h,, no_zlib="yes",)
+
+  AC_CHECK_LIB(z, zlibVersion,, no_zlib="yes")
+
+  CPPFLAGS="$ac_save_CPPFLAGS"
+  LDFLAGS="$ac_save_LDFLAGS"
+  LIBS="$ac_save_LIBS"
+
+  AC_MSG_CHECKING([for Zlib library])
+  if test x"$no_zlib" = "x"; then
+    AC_MSG_RESULT([yes])
+    ifelse([$1], , :, [$1])
+  else
+    AC_MSG_RESULT([no])
+    ifelse([$2], , :, [$2])
+
+    ZLIB_CPPFLAGS=""
+    ZLIB_LDFLAGS=""
+    ZLIB_LIBS=""
+  fi
+
+  AC_SUBST(ZLIB_CPPFLAGS)
+  AC_SUBST(ZLIB_LDFLAGS)
+  AC_SUBST(ZLIB_LIBS)
+])
diff -r d551623afde5 deps/exmpp/src/Emakefile
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/Emakefile	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,62 @@
+{
+	[
+		'./core/exmpp',
+		'./core/exmpp_sup',
+		'./core/exmpp_internals',
+		'./core/exmpp_utils',
+		'./core/exmpp_xml',
+		'./core/exmpp_xmlstream',
+		'./core/exmpp_stringprep',
+		'./core/exmpp_jid',
+		'./core/exmpp_stanza',
+		'./core/exmpp_stream',
+		'./core/exmpp_dialback',
+		'./core/exmpp_iq',
+		'./core/exmpp_message',
+		'./core/exmpp_presence',
+		'./core/exmpp_tls',
+		'./core/exmpp_compress',
+		'./exmpp_known_nss',
+		'./exmpp_known_elems',
+		'./exmpp_known_attrs',
+		'./network/exmpp_session',
+		'./network/exmpp_ssl',
+		'./network/exmpp_tcp',
+		'./network/exmpp_bosh',
+		'./network/exmpp_component',
+		'./client/exmpp_client_binding',
+		'./client/exmpp_client_compression',
+		'./client/exmpp_client_disco',
+		'./client/exmpp_client_legacy_auth',
+		'./client/exmpp_client_privacy',
+		'./client/exmpp_client_pubsub',
+		'./client/exmpp_client_register',
+		'./client/exmpp_client_roster',
+		'./client/exmpp_client_sasl',
+		'./client/exmpp_client_session',
+		'./client/exmpp_client_tls',
+		'./client/exmpp_client_muc',
+		'./server/exmpp_server_binding',
+		'./server/exmpp_server_compression',
+		'./server/exmpp_server_legacy_auth',
+		'./server/exmpp_server_privacy',
+		'./server/exmpp_server_sasl',
+		'./server/exmpp_server_session',
+		'./server/exmpp_server_tls' % Compatibility modules disabled:
+		%'./compat/ejabberd_socket',
+		%'./compat/ejabberd_zlib',
+		%'./compat/jlib',
+		%'./compat/stringprep',
+		%'./compat/tls',
+		%'./compat/xml',
+		%'./compat/xml_stream'
+	],
+	[
+		debug_info, {d, debug}, report_warnings, {warn_format, 1}, warn_export_vars, warn_shadow_vars, warn_unused_import, {d, 'HAVE_EXPAT'}, {d, 'HAVE_LIBXML2'}, {d, 'HAVE_OPENSSL'}, {d, 'HAVE_ZLIB'},
+		{outdir, "./../ebin"},
+		{i, "../include"},
+		{i, "../include"}
+	]
+}.
+
+% vim:ft=erlang:
diff -r d551623afde5 deps/exmpp/src/Emakefile.in
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/Emakefile.in	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,62 @@
+{
+	[
+		'@srcdir@/core/exmpp',
+		'@srcdir@/core/exmpp_sup',
+		'@srcdir@/core/exmpp_internals',
+		'@srcdir@/core/exmpp_utils',
+		'@srcdir@/core/exmpp_xml',
+		'@srcdir@/core/exmpp_xmlstream',
+		'@srcdir@/core/exmpp_stringprep',
+		'@srcdir@/core/exmpp_jid',
+		'@srcdir@/core/exmpp_stanza',
+		'@srcdir@/core/exmpp_stream',
+		'@srcdir@/core/exmpp_dialback',
+		'@srcdir@/core/exmpp_iq',
+		'@srcdir@/core/exmpp_message',
+		'@srcdir@/core/exmpp_presence',
+		'@srcdir@/core/exmpp_tls',
+		'@srcdir@/core/exmpp_compress',
+		'@builddir@/exmpp_known_nss',
+		'@builddir@/exmpp_known_elems',
+		'@builddir@/exmpp_known_attrs',
+		'@srcdir@/network/exmpp_session',
+		'@srcdir@/network/exmpp_ssl',
+		'@srcdir@/network/exmpp_tcp',
+		'@srcdir@/network/exmpp_bosh',
+		'@srcdir@/network/exmpp_component',
+		'@srcdir@/client/exmpp_client_binding',
+		'@srcdir@/client/exmpp_client_compression',
+		'@srcdir@/client/exmpp_client_disco',
+		'@srcdir@/client/exmpp_client_legacy_auth',
+		'@srcdir@/client/exmpp_client_privacy',
+		'@srcdir@/client/exmpp_client_pubsub',
+		'@srcdir@/client/exmpp_client_register',
+		'@srcdir@/client/exmpp_client_roster',
+		'@srcdir@/client/exmpp_client_sasl',
+		'@srcdir@/client/exmpp_client_session',
+		'@srcdir@/client/exmpp_client_tls',
+		'@srcdir@/client/exmpp_client_muc',
+		'@srcdir@/server/exmpp_server_binding',
+		'@srcdir@/server/exmpp_server_compression',
+		'@srcdir@/server/exmpp_server_legacy_auth',
+		'@srcdir@/server/exmpp_server_privacy',
+		'@srcdir@/server/exmpp_server_sasl',
+		'@srcdir@/server/exmpp_server_session',
+		'@srcdir@/server/exmpp_server_tls'@COMPAT_MODULES_START@
+		@COMPAT_MODULES@'@srcdir@/compat/ejabberd_socket',
+		@COMPAT_MODULES@'@srcdir@/compat/ejabberd_zlib',
+		@COMPAT_MODULES@'@srcdir@/compat/jlib',
+		@COMPAT_MODULES@'@srcdir@/compat/stringprep',
+		@COMPAT_MODULES@'@srcdir@/compat/tls',
+		@COMPAT_MODULES@'@srcdir@/compat/xml',
+		@COMPAT_MODULES@'@srcdir@/compat/xml_stream'
+	],
+	[
+		@EMKOPTS@,
+		{outdir, "@builddir@/../ebin"},
+		{i, "@top_srcdir@/include"},
+		{i, "@top_builddir@/include"}
+	]
+}.
+
+% vim:ft=erlang:
diff -r d551623afde5 deps/exmpp/src/Makefile
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/Makefile	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,462 @@
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
+# src/Makefile.  Generated from Makefile.in by configure.
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+
+srcdir = .
+top_srcdir = ..
+
+pkgdatadir = $(datadir)/exmpp
+pkglibdir = $(libdir)/exmpp
+pkgincludedir = $(includedir)/exmpp
+top_builddir = ..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = /usr/bin/install -c
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = i686-pc-linux-gnu
+host_triplet = i686-pc-linux-gnu
+target_triplet = i686-pc-linux-gnu
+subdir = src
+DIST_COMMON = $(srcdir)/Emakefile.in $(srcdir)/Makefile.am \
+	$(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_compare_version.m4 \
+	$(top_srcdir)/m4/colored-echo.m4 $(top_srcdir)/m4/erlang.m4 \
+	$(top_srcdir)/m4/expat.m4 $(top_srcdir)/m4/openssl.m4 \
+	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/zlib.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES = Emakefile
+SOURCES =
+DIST_SOURCES =
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run aclocal-1.9
+AMDEP_FALSE = #
+AMDEP_TRUE = 
+AMTAR = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run tar
+AR = ar
+AUTOCONF = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run autoconf
+AUTOHEADER = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run autoheader
+AUTOMAKE = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run automake-1.9
+AWK = mawk
+BUILD_COMPAT_FALSE = 
+BUILD_COMPAT_TRUE = #
+CC = gcc -std=gnu99
+CCDEPMODE = depmode=gcc3
+CFLAGS = -g -O2 -Wall -Werror
+COMPAT_MODULES = %
+COMPAT_MODULES_START =  % Compatibility modules disabled:
+CPP = gcc -std=gnu99 -E
+CPPFLAGS = 
+CXXCPP = 
+CYGPATH_W = echo
+DEFS = -DHAVE_CONFIG_H
+DEPDIR = .deps
+ECHO = echo
+ECHO_C = 
+ECHO_N = -n
+ECHO_T = 
+EGREP = /bin/grep -E
+EMKOPTS = debug_info, {d, debug}, report_warnings, {warn_format, 1}, warn_export_vars, warn_shadow_vars, warn_unused_import, {d, 'HAVE_EXPAT'}, {d, 'HAVE_LIBXML2'}, {d, 'HAVE_OPENSSL'}, {d, 'HAVE_ZLIB'}
+ENABLE_DOCUMENTATION_FALSE = 
+ENABLE_DOCUMENTATION_TRUE = #
+ENABLE_EXAMPLES_FALSE = 
+ENABLE_EXAMPLES_TRUE = #
+ENABLE_SMP_SUPPORT_FALSE = #
+ENABLE_SMP_SUPPORT_TRUE = 
+ENABLE_TESTSUITE_FALSE = #
+ENABLE_TESTSUITE_TRUE = 
+ERL = /usr/bin/erl
+ERLANG_ERTS_DIR = /usr/lib/erlang/erts-5.7.2
+ERLANG_ERTS_VER = 5.7.2
+ERLANG_INSTALL_LIB_DIR = /usr/lib/erlang/lib
+ERLANG_INSTALL_LIB_DIR_exmpp = ${ERLANG_INSTALL_LIB_DIR}/exmpp-${VERSION}
+ERLANG_LIB_DIR = /usr/lib/erlang/lib
+ERLANG_LIB_DIR_erl_interface = /usr/lib/erlang/lib/erl_interface-3.6.2
+ERLANG_LIB_DIR_eunit = 
+ERLANG_LIB_VER_erl_interface = 3.6.2
+ERLANG_LIB_VER_eunit = 
+ERLANG_RELEASE = R13B01
+ERLANG_ROOT_DIR = /usr/lib/erlang
+ERLC = /usr/bin/erlc
+ERLCFLAGS = 
+ERL_DRIVER_LDFLAGS = 
+ESCRIPT = /usr/bin/escript
+EXEEXT = 
+EXMPP_BUILD_ARCH = 
+EXMPP_DISTSUFFIX = -r903
+EXMPP_HOST_ARCH = 
+EXMPP_RELEASE_DATE = 
+EXMPP_SVNREV = 903
+EXPAT_CPPFLAGS = 
+EXPAT_LDFLAGS = 
+EXPAT_LIBS = -lexpat
+GREP = /bin/grep
+INSTALL_DATA = ${INSTALL} -m 644
+INSTALL_PROGRAM = ${INSTALL}
+INSTALL_SCRIPT = ${INSTALL}
+INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
+LDFLAGS = 
+LIBOBJS = 
+LIBS = 
+LIBTOOL = $(SHELL) $(top_builddir)/libtool
+LIBXML2_CFLAGS = -I/usr/include/libxml2  
+LIBXML2_LIBS = -lxml2  
+LN_S = ln -s
+LTLIBOBJS = 
+MAKEINFO = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run makeinfo
+OBJEXT = o
+OPENSSL_CPPFLAGS = 
+OPENSSL_LDFLAGS = 
+OPENSSL_LIBS = -lssl -lcrypto
+PACKAGE = exmpp
+PACKAGE_BUGREPORT = js.pedron@meetic-corp.com
+PACKAGE_NAME = exmpp
+PACKAGE_STRING = exmpp 0.9.2
+PACKAGE_TARNAME = exmpp
+PACKAGE_VERSION = 0.9.2
+PATH_SEPARATOR = :
+PKG_CONFIG = /usr/bin/pkg-config
+RANLIB = ranlib
+SED = /bin/sed
+SET_MAKE = 
+SHELL = /bin/bash
+STRIP = strip
+VERSION = 0.9.2
+WITH_EXPAT_FALSE = #
+WITH_EXPAT_TRUE = 
+WITH_LIBXML2_FALSE = #
+WITH_LIBXML2_TRUE = 
+WITH_OPENSSL_FALSE = #
+WITH_OPENSSL_TRUE = 
+WITH_ZLIB_FALSE = #
+WITH_ZLIB_TRUE = 
+ZLIB_CPPFLAGS = 
+ZLIB_LDFLAGS = 
+ZLIB_LIBS = -lz
+ac_ct_CC = gcc
+am__fastdepCC_FALSE = #
+am__fastdepCC_TRUE = 
+am__include = include
+am__leading_dot = .
+am__quote = 
+am__tar = ${AMTAR} chof - "$$tardir"
+am__untar = ${AMTAR} xf -
+bindir = ${exec_prefix}/bin
+build = i686-pc-linux-gnu
+build_alias = 
+build_cpu = i686
+build_os = linux-gnu
+build_vendor = pc
+datadir = ${datarootdir}
+datarootdir = ${prefix}/share
+docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
+dvidir = ${docdir}
+exec_prefix = ${prefix}
+exp_ERLANG_INSTALL_LIB_DIR_exmpp = /usr/lib/erlang/lib/exmpp-0.9.2
+host = i686-pc-linux-gnu
+host_alias = 
+host_cpu = i686
+host_os = linux-gnu
+host_vendor = pc
+htmldir = ${docdir}
+includedir = ${prefix}/include
+infodir = ${datarootdir}/info
+install_sh = /home/arjan/devel/zotonic/deps/exmpp/ac-aux/install-sh
+libdir = ${exec_prefix}/lib
+libexecdir = ${exec_prefix}/libexec
+localedir = ${datarootdir}/locale
+localstatedir = ${prefix}/var
+mandir = ${datarootdir}/man
+mkdir_p = mkdir -p --
+oldincludedir = /usr/include
+pdfdir = ${docdir}
+prefix = /usr/local
+program_transform_name = s,x,x,
+psdir = ${docdir}
+sbindir = ${exec_prefix}/sbin
+sharedstatedir = ${prefix}/com
+sysconfdir = ${prefix}/etc
+target = i686-pc-linux-gnu
+target_alias = 
+target_cpu = i686
+target_os = linux-gnu
+target_vendor = pc
+EXTRA_DIST = core/exmpp.erl						\
+	     core/exmpp_sup.erl						\
+	     core/exmpp_internals.erl					\
+	     core/exmpp_utils.erl					\
+	     core/exmpp_xml.erl						\
+	     core/exmpp_xmlstream.erl					\
+	     core/exmpp_stringprep.erl					\
+	     core/exmpp_jid.erl						\
+	     core/exmpp_stanza.erl					\
+	     core/exmpp_stream.erl					\
+	     core/exmpp_dialback.erl					\
+	     core/exmpp_iq.erl						\
+	     core/exmpp_message.erl					\
+	     core/exmpp_presence.erl					\
+	     core/exmpp_tls.erl						\
+	     core/exmpp_compress.erl					\
+	     core/exmpp_known_nss.erl.awk				\
+	     core/exmpp_known_nss.erl.js				\
+	     core/exmpp_known_elems.erl.awk				\
+	     core/exmpp_known_elems.erl.js				\
+	     core/exmpp_known_attrs.erl.awk				\
+	     core/exmpp_known_attrs.erl.js				\
+	     network/exmpp_session.erl					\
+	     network/exmpp_ssl.erl					\
+	     network/exmpp_tcp.erl					\
+	     network/exmpp_bosh.erl					\
+	     network/exmpp_component.erl				\
+	     client/exmpp_client_binding.erl				\
+	     client/exmpp_client_compression.erl			\
+	     client/exmpp_client_disco.erl			\
+	     client/exmpp_client_legacy_auth.erl			\
+	     client/exmpp_client_privacy.erl				\
+	     client/exmpp_client_pubsub.erl				\
+	     client/exmpp_client_register.erl				\
+	     client/exmpp_client_roster.erl				\
+	     client/exmpp_client_sasl.erl				\
+	     client/exmpp_client_session.erl				\
+	     client/exmpp_client_tls.erl				\
+	     client/exmpp_client_muc.erl				\
+	     server/exmpp_server_binding.erl				\
+	     server/exmpp_server_compression.erl			\
+	     server/exmpp_server_legacy_auth.erl			\
+	     server/exmpp_server_privacy.erl				\
+	     server/exmpp_server_sasl.erl				\
+	     server/exmpp_server_session.erl				\
+	     server/exmpp_server_tls.erl				\
+	     compat/ejabberd_socket.erl					\
+	     compat/ejabberd_zlib.erl					\
+	     compat/jlib.erl						\
+	     compat/stringprep.erl					\
+	     compat/tls.erl						\
+	     compat/xml.erl						\
+	     compat/xml_stream.erl
+
+KNOWN_NSS_SOURCE = $(top_srcdir)/include/internal/exmpp_known_nss.in
+KNOWN_ELEMS_SOURCE = $(top_srcdir)/include/internal/exmpp_known_elems.in
+KNOWN_ATTRS_SOURCE = $(top_srcdir)/include/internal/exmpp_known_attrs.in
+BUILT_SOURCES = exmpp_known_nss.erl					\
+		exmpp_known_elems.erl					\
+		exmpp_known_attrs.erl
+
+CLEANFILES = $(BUILT_SOURCES)
+all: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) all-am
+
+.SUFFIXES:
+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --foreign  src/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure:  $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+Emakefile: $(top_builddir)/config.status $(srcdir)/Emakefile.in
+	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+distclean-libtool:
+	-rm -f libtool
+uninstall-info-am:
+tags: TAGS
+TAGS:
+
+ctags: CTAGS
+CTAGS:
+
+
+distdir: $(DISTFILES)
+	$(mkdir_p) $(distdir)/client $(distdir)/compat $(distdir)/core $(distdir)/network $(distdir)/server
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) check-am
+all-am: Makefile all-local
+installdirs:
+install: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
+clean: clean-am
+
+clean-am: clean-generic clean-libtool mostlyclean-am
+
+distclean: distclean-am
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-libtool
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-generic mostlyclean-libtool
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+.PHONY: all all-am all-local check check-am clean clean-generic \
+	clean-libtool distclean distclean-generic distclean-libtool \
+	distdir dvi dvi-am html html-am info info-am install \
+	install-am install-data install-data-am install-exec \
+	install-exec-am install-info install-info-am install-man \
+	install-strip installcheck installcheck-am installdirs \
+	maintainer-clean maintainer-clean-generic mostlyclean \
+	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
+	uninstall uninstall-am uninstall-info-am
+
+
+# --------------------------------------------------------------------
+# Known namespaces/names/attributes headers generation.
+# --------------------------------------------------------------------
+
+exmpp_known_nss.erl: $(srcdir)/core/exmpp_known_nss.erl.awk $(KNOWN_NSS_SOURCE)
+	$(AWK) -f $(srcdir)/core/exmpp_known_nss.erl.awk $(KNOWN_NSS_SOURCE) > $@
+
+exmpp_known_elems.erl: $(srcdir)/core/exmpp_known_elems.erl.awk $(KNOWN_ELEMS_SOURCE)
+	$(AWK) -f $(srcdir)/core/exmpp_known_elems.erl.awk $(KNOWN_ELEMS_SOURCE) > $@
+
+exmpp_known_attrs.erl: $(srcdir)/core/exmpp_known_attrs.erl.awk $(KNOWN_ATTRS_SOURCE)
+	$(AWK) -f $(srcdir)/core/exmpp_known_attrs.erl.awk $(KNOWN_ATTRS_SOURCE) > $@
+
+all-local:
+	@$(ERL) +B -noshell -pa ../ebin			\
+		-eval "case make:all() of				\
+		         up_to_date -> halt(0);				\
+		         Err ->						\
+		           io:format(\"~p~n\", [Err]),			\
+		           halt(1)					\
+		       end"
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff -r d551623afde5 deps/exmpp/src/Makefile.am
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/Makefile.am	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,85 @@
+EXTRA_DIST = core/exmpp.erl						\
+	     core/exmpp_sup.erl						\
+	     core/exmpp_internals.erl					\
+	     core/exmpp_utils.erl					\
+	     core/exmpp_xml.erl						\
+	     core/exmpp_xmlstream.erl					\
+	     core/exmpp_stringprep.erl					\
+	     core/exmpp_jid.erl						\
+	     core/exmpp_stanza.erl					\
+	     core/exmpp_stream.erl					\
+	     core/exmpp_dialback.erl					\
+	     core/exmpp_iq.erl						\
+	     core/exmpp_message.erl					\
+	     core/exmpp_presence.erl					\
+	     core/exmpp_tls.erl						\
+	     core/exmpp_compress.erl					\
+	     core/exmpp_known_nss.erl.awk				\
+	     core/exmpp_known_nss.erl.js				\
+	     core/exmpp_known_elems.erl.awk				\
+	     core/exmpp_known_elems.erl.js				\
+	     core/exmpp_known_attrs.erl.awk				\
+	     core/exmpp_known_attrs.erl.js				\
+	     network/exmpp_session.erl					\
+	     network/exmpp_ssl.erl					\
+	     network/exmpp_tcp.erl					\
+	     network/exmpp_bosh.erl					\
+	     network/exmpp_component.erl				\
+	     client/exmpp_client_binding.erl				\
+	     client/exmpp_client_compression.erl			\
+	     client/exmpp_client_disco.erl			\
+	     client/exmpp_client_legacy_auth.erl			\
+	     client/exmpp_client_privacy.erl				\
+	     client/exmpp_client_pubsub.erl				\
+	     client/exmpp_client_register.erl				\
+	     client/exmpp_client_roster.erl				\
+	     client/exmpp_client_sasl.erl				\
+	     client/exmpp_client_session.erl				\
+	     client/exmpp_client_tls.erl				\
+	     client/exmpp_client_muc.erl				\
+	     server/exmpp_server_binding.erl				\
+	     server/exmpp_server_compression.erl			\
+	     server/exmpp_server_legacy_auth.erl			\
+	     server/exmpp_server_privacy.erl				\
+	     server/exmpp_server_sasl.erl				\
+	     server/exmpp_server_session.erl				\
+	     server/exmpp_server_tls.erl				\
+	     compat/ejabberd_socket.erl					\
+	     compat/ejabberd_zlib.erl					\
+	     compat/jlib.erl						\
+	     compat/stringprep.erl					\
+	     compat/tls.erl						\
+	     compat/xml.erl						\
+	     compat/xml_stream.erl
+
+KNOWN_NSS_SOURCE = $(top_srcdir)/include/internal/exmpp_known_nss.in
+KNOWN_ELEMS_SOURCE = $(top_srcdir)/include/internal/exmpp_known_elems.in
+KNOWN_ATTRS_SOURCE = $(top_srcdir)/include/internal/exmpp_known_attrs.in
+
+BUILT_SOURCES = exmpp_known_nss.erl					\
+		exmpp_known_elems.erl					\
+		exmpp_known_attrs.erl
+
+CLEANFILES = $(BUILT_SOURCES)
+
+# --------------------------------------------------------------------
+# Known namespaces/names/attributes headers generation.
+# --------------------------------------------------------------------
+
+exmpp_known_nss.erl: $(srcdir)/core/exmpp_known_nss.erl.awk $(KNOWN_NSS_SOURCE)
+	$(AWK) -f $(srcdir)/core/exmpp_known_nss.erl.awk $(KNOWN_NSS_SOURCE) > $@
+
+exmpp_known_elems.erl: $(srcdir)/core/exmpp_known_elems.erl.awk $(KNOWN_ELEMS_SOURCE)
+	$(AWK) -f $(srcdir)/core/exmpp_known_elems.erl.awk $(KNOWN_ELEMS_SOURCE) > $@
+
+exmpp_known_attrs.erl: $(srcdir)/core/exmpp_known_attrs.erl.awk $(KNOWN_ATTRS_SOURCE)
+	$(AWK) -f $(srcdir)/core/exmpp_known_attrs.erl.awk $(KNOWN_ATTRS_SOURCE) > $@
+
+all-local:
+	@$(ERL) +B -noshell -pa @top_builddir@/ebin			\
+		-eval "case make:all() of				\
+		         up_to_date -> halt(0);				\
+		         Err ->						\
+		           io:format(\"~p~n\", [Err]),			\
+		           halt(1)					\
+		       end"
diff -r d551623afde5 deps/exmpp/src/Makefile.in
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/Makefile.in	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,462 @@
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = @build@
+host_triplet = @host@
+target_triplet = @target@
+subdir = src
+DIST_COMMON = $(srcdir)/Emakefile.in $(srcdir)/Makefile.am \
+	$(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_compare_version.m4 \
+	$(top_srcdir)/m4/colored-echo.m4 $(top_srcdir)/m4/erlang.m4 \
+	$(top_srcdir)/m4/expat.m4 $(top_srcdir)/m4/openssl.m4 \
+	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/zlib.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES = Emakefile
+SOURCES =
+DIST_SOURCES =
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BUILD_COMPAT_FALSE = @BUILD_COMPAT_FALSE@
+BUILD_COMPAT_TRUE = @BUILD_COMPAT_TRUE@
+CC = @CC@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+COMPAT_MODULES = @COMPAT_MODULES@
+COMPAT_MODULES_START = @COMPAT_MODULES_START@
+CPP = @CPP@
+CPPFLAGS = @CPPFLAGS@
+CXXCPP = @CXXCPP@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+ECHO = @ECHO@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EGREP = @EGREP@
+EMKOPTS = @EMKOPTS@
+ENABLE_DOCUMENTATION_FALSE = @ENABLE_DOCUMENTATION_FALSE@
+ENABLE_DOCUMENTATION_TRUE = @ENABLE_DOCUMENTATION_TRUE@
+ENABLE_EXAMPLES_FALSE = @ENABLE_EXAMPLES_FALSE@
+ENABLE_EXAMPLES_TRUE = @ENABLE_EXAMPLES_TRUE@
+ENABLE_SMP_SUPPORT_FALSE = @ENABLE_SMP_SUPPORT_FALSE@
+ENABLE_SMP_SUPPORT_TRUE = @ENABLE_SMP_SUPPORT_TRUE@
+ENABLE_TESTSUITE_FALSE = @ENABLE_TESTSUITE_FALSE@
+ENABLE_TESTSUITE_TRUE = @ENABLE_TESTSUITE_TRUE@
+ERL = @ERL@
+ERLANG_ERTS_DIR = @ERLANG_ERTS_DIR@
+ERLANG_ERTS_VER = @ERLANG_ERTS_VER@
+ERLANG_INSTALL_LIB_DIR = @ERLANG_INSTALL_LIB_DIR@
+ERLANG_INSTALL_LIB_DIR_exmpp = @ERLANG_INSTALL_LIB_DIR_exmpp@
+ERLANG_LIB_DIR = @ERLANG_LIB_DIR@
+ERLANG_LIB_DIR_erl_interface = @ERLANG_LIB_DIR_erl_interface@
+ERLANG_LIB_DIR_eunit = @ERLANG_LIB_DIR_eunit@
+ERLANG_LIB_VER_erl_interface = @ERLANG_LIB_VER_erl_interface@
+ERLANG_LIB_VER_eunit = @ERLANG_LIB_VER_eunit@
+ERLANG_RELEASE = @ERLANG_RELEASE@
+ERLANG_ROOT_DIR = @ERLANG_ROOT_DIR@
+ERLC = @ERLC@
+ERLCFLAGS = @ERLCFLAGS@
+ERL_DRIVER_LDFLAGS = @ERL_DRIVER_LDFLAGS@
+ESCRIPT = @ESCRIPT@
+EXEEXT = @EXEEXT@
+EXMPP_BUILD_ARCH = @EXMPP_BUILD_ARCH@
+EXMPP_DISTSUFFIX = @EXMPP_DISTSUFFIX@
+EXMPP_HOST_ARCH = @EXMPP_HOST_ARCH@
+EXMPP_RELEASE_DATE = @EXMPP_RELEASE_DATE@
+EXMPP_SVNREV = @EXMPP_SVNREV@
+EXPAT_CPPFLAGS = @EXPAT_CPPFLAGS@
+EXPAT_LDFLAGS = @EXPAT_LDFLAGS@
+EXPAT_LIBS = @EXPAT_LIBS@
+GREP = @GREP@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LIBTOOL = @LIBTOOL@
+LIBXML2_CFLAGS = @LIBXML2_CFLAGS@
+LIBXML2_LIBS = @LIBXML2_LIBS@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAKEINFO = @MAKEINFO@
+OBJEXT = @OBJEXT@
+OPENSSL_CPPFLAGS = @OPENSSL_CPPFLAGS@
+OPENSSL_LDFLAGS = @OPENSSL_LDFLAGS@
+OPENSSL_LIBS = @OPENSSL_LIBS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+PKG_CONFIG = @PKG_CONFIG@
+RANLIB = @RANLIB@
+SED = @SED@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+WITH_EXPAT_FALSE = @WITH_EXPAT_FALSE@
+WITH_EXPAT_TRUE = @WITH_EXPAT_TRUE@
+WITH_LIBXML2_FALSE = @WITH_LIBXML2_FALSE@
+WITH_LIBXML2_TRUE = @WITH_LIBXML2_TRUE@
+WITH_OPENSSL_FALSE = @WITH_OPENSSL_FALSE@
+WITH_OPENSSL_TRUE = @WITH_OPENSSL_TRUE@
+WITH_ZLIB_FALSE = @WITH_ZLIB_FALSE@
+WITH_ZLIB_TRUE = @WITH_ZLIB_TRUE@
+ZLIB_CPPFLAGS = @ZLIB_CPPFLAGS@
+ZLIB_LDFLAGS = @ZLIB_LDFLAGS@
+ZLIB_LIBS = @ZLIB_LIBS@
+ac_ct_CC = @ac_ct_CC@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+am__tar = @am__tar@
+am__untar = @am__untar@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+datarootdir = @datarootdir@
+docdir = @docdir@
+dvidir = @dvidir@
+exec_prefix = @exec_prefix@
+exp_ERLANG_INSTALL_LIB_DIR_exmpp = @exp_ERLANG_INSTALL_LIB_DIR_exmpp@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+htmldir = @htmldir@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localedir = @localedir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+pdfdir = @pdfdir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+psdir = @psdir@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target = @target@
+target_alias = @target_alias@
+target_cpu = @target_cpu@
+target_os = @target_os@
+target_vendor = @target_vendor@
+EXTRA_DIST = core/exmpp.erl						\
+	     core/exmpp_sup.erl						\
+	     core/exmpp_internals.erl					\
+	     core/exmpp_utils.erl					\
+	     core/exmpp_xml.erl						\
+	     core/exmpp_xmlstream.erl					\
+	     core/exmpp_stringprep.erl					\
+	     core/exmpp_jid.erl						\
+	     core/exmpp_stanza.erl					\
+	     core/exmpp_stream.erl					\
+	     core/exmpp_dialback.erl					\
+	     core/exmpp_iq.erl						\
+	     core/exmpp_message.erl					\
+	     core/exmpp_presence.erl					\
+	     core/exmpp_tls.erl						\
+	     core/exmpp_compress.erl					\
+	     core/exmpp_known_nss.erl.awk				\
+	     core/exmpp_known_nss.erl.js				\
+	     core/exmpp_known_elems.erl.awk				\
+	     core/exmpp_known_elems.erl.js				\
+	     core/exmpp_known_attrs.erl.awk				\
+	     core/exmpp_known_attrs.erl.js				\
+	     network/exmpp_session.erl					\
+	     network/exmpp_ssl.erl					\
+	     network/exmpp_tcp.erl					\
+	     network/exmpp_bosh.erl					\
+	     network/exmpp_component.erl				\
+	     client/exmpp_client_binding.erl				\
+	     client/exmpp_client_compression.erl			\
+	     client/exmpp_client_disco.erl			\
+	     client/exmpp_client_legacy_auth.erl			\
+	     client/exmpp_client_privacy.erl				\
+	     client/exmpp_client_pubsub.erl				\
+	     client/exmpp_client_register.erl				\
+	     client/exmpp_client_roster.erl				\
+	     client/exmpp_client_sasl.erl				\
+	     client/exmpp_client_session.erl				\
+	     client/exmpp_client_tls.erl				\
+	     client/exmpp_client_muc.erl				\
+	     server/exmpp_server_binding.erl				\
+	     server/exmpp_server_compression.erl			\
+	     server/exmpp_server_legacy_auth.erl			\
+	     server/exmpp_server_privacy.erl				\
+	     server/exmpp_server_sasl.erl				\
+	     server/exmpp_server_session.erl				\
+	     server/exmpp_server_tls.erl				\
+	     compat/ejabberd_socket.erl					\
+	     compat/ejabberd_zlib.erl					\
+	     compat/jlib.erl						\
+	     compat/stringprep.erl					\
+	     compat/tls.erl						\
+	     compat/xml.erl						\
+	     compat/xml_stream.erl
+
+KNOWN_NSS_SOURCE = $(top_srcdir)/include/internal/exmpp_known_nss.in
+KNOWN_ELEMS_SOURCE = $(top_srcdir)/include/internal/exmpp_known_elems.in
+KNOWN_ATTRS_SOURCE = $(top_srcdir)/include/internal/exmpp_known_attrs.in
+BUILT_SOURCES = exmpp_known_nss.erl					\
+		exmpp_known_elems.erl					\
+		exmpp_known_attrs.erl
+
+CLEANFILES = $(BUILT_SOURCES)
+all: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) all-am
+
+.SUFFIXES:
+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --foreign  src/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure:  $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+Emakefile: $(top_builddir)/config.status $(srcdir)/Emakefile.in
+	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+distclean-libtool:
+	-rm -f libtool
+uninstall-info-am:
+tags: TAGS
+TAGS:
+
+ctags: CTAGS
+CTAGS:
+
+
+distdir: $(DISTFILES)
+	$(mkdir_p) $(distdir)/client $(distdir)/compat $(distdir)/core $(distdir)/network $(distdir)/server
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) check-am
+all-am: Makefile all-local
+installdirs:
+install: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
+clean: clean-am
+
+clean-am: clean-generic clean-libtool mostlyclean-am
+
+distclean: distclean-am
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-libtool
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-generic mostlyclean-libtool
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+.PHONY: all all-am all-local check check-am clean clean-generic \
+	clean-libtool distclean distclean-generic distclean-libtool \
+	distdir dvi dvi-am html html-am info info-am install \
+	install-am install-data install-data-am install-exec \
+	install-exec-am install-info install-info-am install-man \
+	install-strip installcheck installcheck-am installdirs \
+	maintainer-clean maintainer-clean-generic mostlyclean \
+	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
+	uninstall uninstall-am uninstall-info-am
+
+
+# --------------------------------------------------------------------
+# Known namespaces/names/attributes headers generation.
+# --------------------------------------------------------------------
+
+exmpp_known_nss.erl: $(srcdir)/core/exmpp_known_nss.erl.awk $(KNOWN_NSS_SOURCE)
+	$(AWK) -f $(srcdir)/core/exmpp_known_nss.erl.awk $(KNOWN_NSS_SOURCE) > $@
+
+exmpp_known_elems.erl: $(srcdir)/core/exmpp_known_elems.erl.awk $(KNOWN_ELEMS_SOURCE)
+	$(AWK) -f $(srcdir)/core/exmpp_known_elems.erl.awk $(KNOWN_ELEMS_SOURCE) > $@
+
+exmpp_known_attrs.erl: $(srcdir)/core/exmpp_known_attrs.erl.awk $(KNOWN_ATTRS_SOURCE)
+	$(AWK) -f $(srcdir)/core/exmpp_known_attrs.erl.awk $(KNOWN_ATTRS_SOURCE) > $@
+
+all-local:
+	@$(ERL) +B -noshell -pa @top_builddir@/ebin			\
+		-eval "case make:all() of				\
+		         up_to_date -> halt(0);				\
+		         Err ->						\
+		           io:format(\"~p~n\", [Err]),			\
+		           halt(1)					\
+		       end"
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff -r d551623afde5 deps/exmpp/src/client/exmpp_client_binding.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/client/exmpp_client_binding.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,120 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> implements the initiating
+%% entity side of Resource Binding.
+
+-module(exmpp_client_binding).
+
+-include("exmpp.hrl").
+
+%% Feature announcement.
+-export([
+	 announced_support/1
+	]).
+
+%% Resource binding.
+-export([
+	 bind/0,
+	 bind/1,
+	 bounded_jid/1
+	]).
+
+%% --------------------------------------------------------------------
+%% Feature announcement.
+%% --------------------------------------------------------------------
+
+%% @spec (Features_Announcement) -> bool()
+%%     Features_Announcement = exmpp_xml:xmlel()
+%% @throws {resource_binding, announced_support, invalid_feature, Feature}
+%% @doc Tell if the Resource Binding feature is supported.
+
+announced_support(#xmlel{ns = ?NS_XMPP, name = 'features'} = El) ->
+    case exmpp_xml:get_element(El, ?NS_BIND, 'bind') of
+        undefined -> false;
+        Child     -> announced_support2(Child)
+    end.
+
+announced_support2(#xmlel{children = []}) ->
+    true;
+announced_support2(Feature) ->
+    throw({resource_binding, announced_support, invalid_feature, Feature}).
+
+%% --------------------------------------------------------------------
+%% Resource binding.
+%% --------------------------------------------------------------------
+
+%% @spec () -> Bind
+%%     Bind = exmpp_xml:xmlel()
+%% @doc Prepare a Resource Binding request.
+
+bind() ->
+    bind(undefined).
+
+%% @spec (Resource) -> Bind
+%%     Bind = exmpp_xml:xmlel()
+%% @doc Prepare a Resource Binding request for the given `Resource'.
+
+bind(Resource) ->
+    Children = case Resource of
+		   undefined ->
+		       [];
+		   "" ->
+		       [];
+		   _ ->
+		       El = #xmlel{
+			 ns = ?NS_BIND,
+			 name = 'resource'
+			},
+		       [exmpp_xml:set_cdata(El, Resource)]
+	       end,
+    Bind = #xmlel{
+      ns = ?NS_BIND,
+      name = 'bind',
+      children = Children
+     },
+    exmpp_iq:set(?NS_JABBER_CLIENT, Bind, exmpp_utils:random_id("bind")).
+
+%% @spec (Bind) -> Jid
+%%     Bind = exmpp_xml:xmlel()
+%%     Jid = exmpp_jid:jid()
+%% @throws {resource_binding, bounded_jid, invalid_bind, Stanza} |
+%%         {resource_binding, bounded_jid, no_jid, IQ} |
+%%         {resource_binding, bounded_jid, bind_error, Condition}
+%% @doc Extract the JID given by the server.
+
+bounded_jid(IQ) when ?IS_IQ(IQ) ->
+    case exmpp_iq:get_type(IQ) of
+        'result' ->
+            case exmpp_iq:get_result(IQ) of
+                #xmlel{ns = ?NS_BIND, name = 'bind'} = Bind ->
+                    case exmpp_xml:get_element(Bind,
+					       ?NS_BIND, 'jid') of
+                        #xmlel{} = Jid_El ->
+                            Jid = exmpp_xml:get_cdata(Jid_El),
+                            exmpp_jid:parse(Jid);
+                        _ ->
+                            throw({resource_binding, bounded_jid, no_jid, IQ})
+                    end;
+                _ ->
+                    throw({resource_binding, bounded_jid, no_jid, IQ})
+            end;
+        'error' ->
+            Condition = exmpp_stanza:get_condition(IQ),
+            throw({resource_binding, bounded_jid, bind_error, Condition})
+    end;
+bounded_jid(Stanza) ->
+    throw({resource_binding, bounded_jid, invalid_bind, Stanza}).
diff -r d551623afde5 deps/exmpp/src/client/exmpp_client_compression.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/client/exmpp_client_compression.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,88 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> implements the initiating
+%% entity side of Stream Compression (XEP-0138).
+%%
+%% @reference <a href="http://www.xmpp.org/extensions/xep-0138.html">XEP-0138: Stream Compression</a>
+%% @reference <a href="http://www.xmpp.org/extensions/xep-0229.html">XEP-0229: Stream Compression with LZW</a>
+
+-module(exmpp_client_compression).
+
+-include("exmpp.hrl").
+
+%% Feature announcement.
+-export([
+	 announced_methods/1
+	]).
+
+%% Compression negotiation.
+-export([
+	 selected_method/1
+	]).
+
+%% --------------------------------------------------------------------
+%% Feature announcement.
+%% --------------------------------------------------------------------
+
+%% @spec (Features_Announcement) -> Methods
+%%     Features_Announcement = exmpp_xml:xmlel()
+%%     Methods = [string()]
+%% @throws {stream_compression, announced_methods, invalid_feature, Feature} |
+%%         {stream_compression, announced_methods, invalid_method, El}
+%% @doc Return the list of supported compression methods.
+
+announced_methods(#xmlel{ns = ?NS_XMPP, name = 'features'} = El) ->
+    case exmpp_xml:get_element(El, ?NS_COMPRESS_FEAT, 'compression') of
+        undefined -> [];
+        Methods   -> announced_methods2(Methods)
+    end.
+
+announced_methods2(#xmlel{children = []} = Feature) ->
+    throw({stream_compression, announced_methods, invalid_feature, Feature});
+announced_methods2(#xmlel{children = Children}) ->
+    announced_methods3(Children, []).
+
+announced_methods3(
+  [#xmlel{ns = ?NS_COMPRESS_FEAT, name = 'method'} = El | Rest], Result) ->
+    case exmpp_xml:get_cdata_as_list(El) of
+        "" ->
+            throw({stream_compression, announced_methods, invalid_method, El});
+        Method ->
+            announced_methods3(Rest, [Method | Result])
+    end;
+announced_methods3([El | _Rest], _Result) ->
+    throw({stream_compression, announced_methods, invalid_method, El});
+announced_methods3([], Result) ->
+    lists:reverse(Result).
+
+%% --------------------------------------------------------------------
+%% Compression negotiation.
+%% --------------------------------------------------------------------
+
+%% @spec (Method) -> Compress
+%%     Method = string()
+%%     Compress = exmpp_xml:xmlel()
+%% @doc Prepare an request to select prefered compression method.
+
+selected_method(Method) ->
+    El = #xmlel{ns = ?NS_COMPRESS,
+		name = 'method'
+	       },
+    #xmlel{ns = ?NS_COMPRESS,
+	   name = 'compress',
+	   children = [exmpp_xml:set_cdata(El, Method)]
+	  }.
diff -r d551623afde5 deps/exmpp/src/client/exmpp_client_disco.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/client/exmpp_client_disco.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,86 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Karim Gemayel <kgemayel@process-one.net>
+
+-module(exmpp_client_disco).
+
+-include("exmpp.hrl").
+
+-define(QUERY_INFO,
+  #xmlel{ns = ?NS_DISCO_INFO, name = 'query'}
+).
+
+-define(QUERY_ITEMS,
+  #xmlel{ns = ?NS_DISCO_ITEMS, name = 'query'}
+).
+
+%% Creation.
+-export([
+	 info/1,
+	 info/2,
+	 items/1,
+	 items/2
+	]).
+
+%% @spec (To) -> Iq
+%%     To = string()
+%%     Iq = exmpp_xml:xmlel()
+%% @doc Make an <iq/> for a disco#info
+
+info(To) ->
+  Query = ?QUERY_INFO,
+  Iq = ?IQ_GET(To, iq_id()),
+  exmpp_xml:append_child(Iq, Query).
+
+%% @spec (To, Node) -> Iq
+%%     To   = string()
+%%     Node = string()
+%%     Iq   = exmpp_xml:xmlel()
+%% @doc Make an <iq/> for a disco#info to a node
+
+info(To, Node) ->
+  Query = exmpp_xml:set_attribute(?QUERY_INFO, 'node', Node),
+  Iq = ?IQ_GET(To, iq_id()),
+  exmpp_xml:append_child(Iq, Query).
+
+%% @spec (To) -> Iq
+%%     To = string()
+%%     Iq = exmpp_xml:xmlel()
+%% @doc Make an <iq/> for a disco#items
+
+items(To) ->
+  Query = ?QUERY_ITEMS,
+  Iq = ?IQ_GET(To, iq_id()),
+  exmpp_xml:append_child(Iq, Query).
+
+%% @spec (To, Node) -> Iq
+%%     To   = string()
+%%     Node = string()
+%%     Iq   = exmpp_xml:xmlel()
+%% @doc Make an <iq/> for a disco#items to a node 
+
+items(To, Node) ->
+  Query = exmpp_xml:set_attribute(?QUERY_ITEMS, 'node', Node),
+  Iq = ?IQ_GET(To, iq_id()),
+  exmpp_xml:append_child(Iq, Query).
+
+%% @spec () -> Iq_ID
+%%     Iq_ID = string()
+%% @doc Generate a random iq ID.
+%%
+%% This function uses {@link random:uniform/1}. It's up to the caller to
+%% seed the generator.
+
+iq_id() ->
+    "iq-" ++ integer_to_list(random:uniform(65536 * 65536)).
diff -r d551623afde5 deps/exmpp/src/client/exmpp_client_legacy_auth.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/client/exmpp_client_legacy_auth.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,403 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> implements the initiating
+%% entity side of legacy authentication found in Jabber, before XMPP
+%% 1.0.
+%%
+%% <p>
+%% A common use case is presented in <em>table 1</em>.
+%% </p>
+%% <table class="illustration">
+%% <caption>Table 1: successful legacy authentication</caption>
+%% <tr>
+%% <th>Client-side</th>
+%% <th>Server-side</th>
+%% </tr>
+%% <tr>
+%% <td>
+%% <p>
+%% Once a stream is opened, the client call `{@module}':
+%% </p>
+%% <pre>Request = exmpp_client_legacy_auth:request("jabber.example.com").</pre>
+%% <p>
+%% After serialization, this produces this XML message:
+%% </p>
+%% <pre>&lt;iq type="get" to="jabber.example.com" id="auth-1905181425"&gt;
+%%   &lt;query xmlns="jabber:iq:auth"/&gt;<br/>&lt;/iq&gt;</pre>
+%% </td>
+%% <td></td>
+%% </tr>
+%% <tr>
+%% <td></td>
+%% <td>
+%% <p>
+%% The server answer with the available fields:
+%% </p>
+%% <pre>Fields = exmpp_server_legacy_auth:fields(Request).</pre>
+%% <p>
+%% After serialization, this produces this XML message:
+%% </p>
+%% <pre>&lt;iq xmlns="jabber:client" type="result" id="auth-1905181425"&gt;
+%%       &lt;query xmlns="jabber:iq:auth"&gt;
+%%               &lt;username/&gt;
+%%               &lt;password/&gt;
+%%               &lt;digest/&gt;
+%%               &lt;resource/&gt;
+%%       &lt;/query&gt;<br/>&lt;/iq&gt;</pre>
+%% </td>
+%% </tr>
+%% <tr>
+%% <td>
+%% <p>
+%% The client can send its credentials:
+%% </p>
+%% <pre>Password = exmpp_client_legacy_auth:password(
+%%   Fields,
+%%   "johndoe",
+%%   "foobar!",
+%%   "home"<br/>).</pre>
+%% <p>
+%% The best method is chosen automatically (here, `<digest/>').
+%% </p>
+%% <p>
+%% After serialization, this produces this XML message:
+%% </p>
+%% <pre>&lt;q xmlns="jabber:client" type="set" id="auth-3105434037"&gt;
+%%       &lt;query xmlns="jabber:iq:auth"&gt;
+%%               &lt;username&gt;johndoe&lt;/username&gt;
+%%               &lt;digest&gt;
+%%                       93fdad2a795c59c73a6acf68a4dbdd3ddb366239
+%%               &lt;/digest&gt;
+%%               &lt;resource&gt;home&lt;/resource&gt;
+%%       &lt;/query&gt;<br/>&lt;/iq&gt;</pre>
+%% </td>
+%% <td></td>
+%% </tr>
+%% <tr>
+%% <td></td>
+%% <td>
+%% <p>
+%% If the password is correct, the server notify the client:
+%% </p>
+%% <pre>Success = exmpp_server_legacy_auth:success(Password).</pre>
+%% <p>
+%% After serialization, this produces this XML message:
+%% </p>
+%% <pre>&lt;iq xmlns="jabber:client" type="result" id="auth-3105434037"/&gt;</pre>
+%% </td>
+%% </tr>
+%% </table>
+%%
+%% @reference <a href="http://www.xmpp.org/extensions/xep-0078.html">XEP-0078: Non-SASL Authentication</a>
+
+-module(exmpp_client_legacy_auth).
+
+-include("exmpp.hrl").
+
+%% Creating stanza.
+-export([
+	 request/1,
+	 request/2,
+	 request_with_user/2,
+	 request_with_user/3,
+	 password/4,
+	 password/5,
+	 password_plain/3,
+	 password_plain/4,
+	 password_digest/3,
+	 password_digest/4
+	]).
+
+%% Accessing informations.
+-export([
+	 get_fields/1,
+	 get_prefered_auth/1,
+	 is_success/1
+	]).
+
+%% Tools.
+-export([
+	 digest/2,
+	 hex/1
+	]).
+
+%% --------------------------------------------------------------------
+%% Creating stanza.
+%% --------------------------------------------------------------------
+
+%% @spec (To) -> Request_IQ
+%%     To = string()
+%%     Request_IQ = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for requesting legacy authentication.
+%%
+%% The stanza ID is generated automatically.
+
+request(To) ->
+    request(To, auth_id()).
+
+%% @spec (To, ID) -> Request_IQ
+%%     To = string()
+%%     ID = string()
+%%     Request_IQ = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for requesting legacy authentication.
+
+request(To, ID) ->
+    Query = #xmlel{
+      ns = ?NS_LEGACY_AUTH,
+      name = 'query'
+     },
+    IQ = exmpp_iq:get(?NS_JABBER_CLIENT, Query, ID),
+    exmpp_stanza:set_recipient(IQ, To).
+
+%% @spec (To, Username) -> Request_IQ
+%%     To = string()
+%%     Username = string()
+%%     Request_IQ = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for requesting legacy authentication.
+%%
+%% The stanza ID is generated automatically.
+
+request_with_user(To, Username) ->
+    request_with_user(To, Username, auth_id()).
+
+%% @spec (To, Username, ID) -> Request_IQ
+%%     To = string()
+%%     Username = string()
+%%     ID = string()
+%%     Response_IQ = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for requesting legacy authentication.
+
+request_with_user(To, Username, ID) ->
+    Username_El = exmpp_xml:set_cdata(
+		    #xmlel{ns = ?NS_LEGACY_AUTH, name = 'username'},
+		    Username),
+    Query = #xmlel{
+      ns = ?NS_LEGACY_AUTH,
+      name = 'query',
+      children = [Username_El]
+     },
+    IQ = exmpp_iq:get(?NS_JABBER_CLIENT, Query, ID),
+    exmpp_stanza:set_recipient(IQ, To).
+
+%% @spec (Fields_IQ, Username, Password, Resource) -> Password_IQ
+%%     Fields_IQ = exmpp_xml:xmlel()
+%%     Username = string()
+%%     Password = string() | nil()
+%%     Resource = string()
+%%     Password_IQ = exmpp_xml:xmlel()
+%% @doc Make an `<iq/>' to send authentication informations.
+%%
+%% The stanza ID is generated automatically.
+
+password(Fields_IQ, Username, Password, Resource) ->
+    password(Fields_IQ, Username, Password, Resource, auth_id()).
+
+%% @spec (Fields_IQ, Username, Password, Resource, ID) -> Password_IQ
+%%     Fields_IQ = exmpp_xml:xmlel()
+%%     Username = string()
+%%     Password = string() | nil()
+%%     Resource = string()
+%%     ID = string()
+%%     Password_IQ = exmpp_xml:xmlel()
+%% @doc Make an `<iq/>' to send authentication informations.
+
+password(Fields_IQ, Username, Password, Resource, ID) ->
+    case get_prefered_auth(Fields_IQ) of
+        plain  -> password_plain(Username, Password, Resource, ID);
+        digest -> password_digest(Username, Password, Resource, ID)
+    end.
+
+%% @spec (Username, Password, Resource) -> Password_IQ
+%%     Username = string()
+%%     Password = string() | nil()
+%%     Resource = string()
+%%     Password_IQ = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' to send authentication informations.
+%%
+%% The stanza ID is generated automatically.
+
+password_plain(Username, Password, Resource) ->
+    password_plain(Username, Password, Resource, auth_id()).
+
+%% @spec (Username, Password, Resource, ID) -> Password_IQ
+%%     Username = string()
+%%     Password = string() | nil()
+%%     Resource = string()
+%%     ID = string()
+%%     Password_IQ = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' to send authentication informations.
+%%
+%% `Password' is in clear plain text in the stanza.
+%%
+%% For an anonymous authentication, `Password' may be the empty string.
+
+password_plain(Username, Password, Resource, ID) ->
+    Username_El = exmpp_xml:set_cdata(
+		    #xmlel{ns = ?NS_LEGACY_AUTH, name = 'username'},
+		    Username),
+    Password_El = exmpp_xml:set_cdata(
+		    #xmlel{ns = ?NS_LEGACY_AUTH, name = 'password'},
+		    Password),
+    Resource_El = exmpp_xml:set_cdata(
+		    #xmlel{ns = ?NS_LEGACY_AUTH, name = 'resource'},
+		    Resource),
+    Query = #xmlel{
+      ns = ?NS_LEGACY_AUTH,
+      name = 'query',
+      children = [Username_El, Password_El, Resource_El]
+     },
+    exmpp_iq:set(?NS_JABBER_CLIENT, Query, ID).
+
+%% @spec (Username, Password, Resource) -> Password_IQ
+%%     Username = string()
+%%     Password = string()
+%%     Resource = string()
+%%     Password_IQ = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' to send authentication informations.
+%%
+%% The stanza ID is generated automatically.
+
+password_digest(Username, Password, Resource) ->
+    password_digest(Username, Password, Resource, auth_id()).
+
+%% @spec (Username, Password, Resource, ID) -> Password_IQ
+%%     Username = string()
+%%     Password = string()
+%%     Resource = string()
+%%     ID = string()
+%%     Password_IQ = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' to send authentication informations.
+%%
+%% `Password' is encoded as specified in XEP-0078.
+
+password_digest(Username, Password, Resource, ID) ->
+    Username_El = exmpp_xml:set_cdata(
+		    #xmlel{ns = ?NS_LEGACY_AUTH, name = 'username'},
+		    Username),
+    Digest_El = exmpp_xml:set_cdata(
+		  #xmlel{ns = ?NS_LEGACY_AUTH, name = 'digest'},
+		  hex(digest(ID, Password))),
+    Resource_El = exmpp_xml:set_cdata(
+		    #xmlel{ns = ?NS_LEGACY_AUTH, name = 'resource'},
+		    Resource),
+    Query = #xmlel{
+      ns = ?NS_LEGACY_AUTH,
+      name = 'query',
+      children = [Username_El, Digest_El, Resource_El]
+     },
+    exmpp_iq:set(?NS_JABBER_CLIENT, Query, ID).
+
+%% --------------------------------------------------------------------
+%% Accessing informations.
+%% --------------------------------------------------------------------
+
+%% @spec (Fields_IQ) -> Fields
+%%     Fields_IQ = exmpp_xml:xmlel()
+%%     Fields = [atom()]
+%% @throws {legacy_auth, get_fields, invalid_iq, Fields_IQ} |
+%%         {legacy_auth, get_fields, invalid_field, Field}
+%% @doc Return the list of fields supported by the server.
+
+get_fields(Fields_IQ) when ?IS_IQ(Fields_IQ) ->
+    case exmpp_iq:get_result(Fields_IQ) of
+        undefined ->
+            throw({legacy_auth, get_fields, invalid_iq, Fields_IQ});
+        #xmlel{ns = ?NS_LEGACY_AUTH, name = 'query', children = Children}
+	when length(Children) == 3 orelse length(Children) == 4 ->
+            get_fields2(Children, []);
+        _ ->
+            throw({legacy_auth, get_fields, invalid_iq, Fields_IQ})
+    end.
+
+get_fields2([#xmlel{ns = ?NS_LEGACY_AUTH, name = Field} | Rest],
+	    Fields) ->
+    get_fields2(Rest, [Field | Fields]);
+get_fields2([Field | _Rest], _Fields) ->
+    throw({legacy_auth, get_fields, invalid_field, Field});
+get_fields2([], Fields) ->
+    lists:reverse(Fields).
+
+%% @spec (Fields_IQ) -> Auth
+%%     Fields_IQ = exmpp_xml:xmlel()
+%%     Auth = digest | password
+%% @doc Return the prefered authentication method.
+
+get_prefered_auth(IQ) when ?IS_IQ(IQ) ->
+    case lists:member('digest', get_fields(IQ)) of
+        true -> digest;
+        _    -> plain
+    end.
+
+%% @spec (IQ) -> bool()
+%%     IQ = exmpp_xml:xmlel()
+%% @doc Tell if the authentication succeeded.
+
+is_success(IQ) when ?IS_IQ(IQ) ->
+    case exmpp_iq:get_type(IQ) of
+        'result' -> true;
+        'error'  -> false;
+        _        -> throw({legacy_auth, is_success, unexpected_iq, IQ})
+    end.
+
+%% --------------------------------------------------------------------
+%% Tools.
+%% --------------------------------------------------------------------
+
+%% @spec (ID, Passwd) -> Digest
+%%     ID = string()
+%%     Passwd = string()
+%%     Digest = string()
+%% @doc Produce a password digest for legacy auth, according to XEP-0078.
+
+digest(ID, Passwd) ->
+    Token = ID ++ Passwd,
+    crypto:start(),
+    binary_to_list(crypto:sha(Token)).
+
+%% @spec (Plain) -> Hex
+%%     Plain = string()
+%%     Hex = string()
+%% @doc Encode list to a hexadecimal string.
+
+hex(Plain) ->
+    lists:flatten([hex2(I) || I <- Plain]).
+
+hex2(I) when I > 16#f ->
+    [int_to_hexchar((I band 16#f0) bsr 4), int_to_hexchar((I band 16#0f))];
+hex2(I) ->
+    [$0, int_to_hexchar(I)].
+
+int_to_hexchar(10) -> $a;
+int_to_hexchar(11) -> $b;
+int_to_hexchar(12) -> $c;
+int_to_hexchar(13) -> $d;
+int_to_hexchar(14) -> $e;
+int_to_hexchar(15) -> $f;
+int_to_hexchar(I)  -> $0 + I.
+
+%% --------------------------------------------------------------------
+%% Internal functions.
+%% --------------------------------------------------------------------
+
+%% @spec () -> Auth_ID
+%%     Auth_ID = string()
+%% @doc Generate a random authentication iq ID.
+%%
+%% @see exmpp_utils:random_id/1.
+
+auth_id() ->
+    exmpp_utils:random_id("auth").
diff -r d551623afde5 deps/exmpp/src/client/exmpp_client_muc.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/client/exmpp_client_muc.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,100 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Pablo Polvorin <pablo.polvorin@process-one.net>
+%% @doc Helper functions for generating MUC related stanzas. 
+%%      Very incomplete, now it only generates kick and ban stanzas. 
+
+-module(exmpp_client_muc).
+
+
+-include("exmpp.hrl").
+
+-export([kick/2, 
+         kick/3,
+         kick/4,
+         ban/2,
+         ban/3,
+         ban/4,
+         get_banlist/1,
+         get_banlist/2,
+         update_banlist/2,
+         update_banlist/3
+         ]).
+
+-type(ban_item() :: {exmpp_jid:jid(), outcast | none | binary()} | {exmpp_jid:jid(), outcast | none | binary(), binary() | string()}).
+
+
+-spec kick(Room :: exmpp_jid:jid(), Nick :: string() | binary()) -> #xmlel{}.
+kick(Room, Nick) ->
+   kick(?NS_JABBER_CLIENT, Room, Nick).
+
+-spec kick(NS :: atom() | string(), Room :: exmpp_jid:jid(), Nick :: string() | binary()) -> #xmlel{}.
+kick(NS, Room, Nick) ->
+    kick(NS, Room, Nick, <<>>).
+
+-spec kick(NS :: atom() | string(), Room :: exmpp_jid:jid(), Nick :: string() | binary(), Reason :: string() | binary()) -> #xmlel{}.
+kick(NS, Room, Nick, Reason) ->
+    exmpp_stanza:set_recipient(
+        exmpp_iq:set(NS, 
+            exmpp_xml:element(?NS_MUC_ADMIN, 'query', [], 
+                [exmpp_xml:element(?NS_MUC_ADMIN, 'item', [?XMLATTR('nick', Nick), ?XMLATTR('role', <<"none">>)], 
+                    [exmpp_xml:element(?NS_MUC_ADMIN, 'reason', [], [?XMLCDATA(Reason)])])])), Room).
+
+
+-spec ban(Room :: exmpp_jid:jid(), JID :: exmpp_jid:jid() ) -> #xmlel{}.
+ban(Room, JID) ->
+   ban(?NS_JABBER_CLIENT, Room, JID).
+
+-spec ban(NS :: atom() | string(), Room :: exmpp_jid:jid(), JID :: exmpp_jid:jid()) -> #xmlel{}.
+ban(NS, Room, JID) ->
+    ban(NS, Room, JID, <<>>).
+
+-spec ban(NS :: atom() | string(), Room :: exmpp_jid:jid(), JID :: exmpp_jid:jid(), Reason :: string() | binary()) -> #xmlel{}.
+ban(NS, Room, JID, Reason) ->
+    update_banlist(NS, Room, [{JID, outcast, Reason}]).
+
+
+-spec get_banlist(Room :: exmpp_jid:jid()) -> #xmlel{}.
+get_banlist(Room) ->
+    get_banlist(?NS_JABBER_CLIENT, Room).
+
+-spec get_banlist(NS :: atom() | string(), Room :: exmpp_jid:jid()) -> #xmlel{}.
+get_banlist(NS, Room) ->
+    exmpp_stanza:set_recipient(
+        exmpp_iq:get(NS, 
+            exmpp_xml:element(?NS_MUC_ADMIN, 'query', [], 
+                [exmpp_xml:element(?NS_MUC_ADMIN, 'item', [?XMLATTR('affiliation', <<"outcast">>)], [])])), Room ).
+    
+
+-spec update_banlist(Room :: exmpp_jid:jid(), BanList :: [ban_item()]) -> #xmlel{}.
+update_banlist(Room, BanList) ->
+    update_banlist(?NS_JABBER_CLIENT, Room, BanList).
+
+-spec update_banlist(NS :: atom() | string(), Room :: exmpp_jid:jid(), BanList :: [ban_item()]) -> #xmlel{}.
+update_banlist(NS, Room, BanList) ->
+     exmpp_stanza:set_recipient(
+        exmpp_iq:set(NS, 
+            exmpp_xml:element(?NS_MUC_ADMIN, 'query', [], [ban_to_item(Ban) || Ban <- BanList])), Room).
+
+
+ban_to_item({JID, Affiliation}) ->
+    ban_to_item({JID, Affiliation, <<>>});
+ban_to_item({JID, Affiliation, Reason}) ->
+    exmpp_xml:element(?NS_MUC_ADMIN, 'item', [?XMLATTR('jid', exmpp_jid:to_binary(JID)), ?XMLATTR('affiliation', affiliation_to_binary(Affiliation))], 
+        [exmpp_xml:element(?NS_MUC_ADMIN, 'reason', [], [?XMLCDATA(Reason)])]).
+
+
+affiliation_to_binary(outcast) -> <<"outcast">>;
+affiliation_to_binary(none) -> <<"none">>;
+affiliation_to_binary(A) when is_binary(A) -> A.
diff -r d551623afde5 deps/exmpp/src/client/exmpp_client_privacy.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/client/exmpp_client_privacy.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,39 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> implements the initiating entity
+%% side of privacy lists management.
+
+-module(exmpp_client_privacy).
+
+-include("exmpp.hrl").
+
+%% Creating stanza.
+-export([
+	 ack_list_push/1
+	]).
+
+%% --------------------------------------------------------------------
+%% Creating stanza.
+%% --------------------------------------------------------------------
+
+%% @spec (Push_IQ) -> Ack_IQ
+%%     Push_IQ = exmpp_xml:xmlel()
+%%     Ack_IQ = exmpp_xml:xmlel()
+%% @doc Make an `<iq/>' result to acknowledge the push.
+
+ack_list_push(Push_IQ) ->
+    exmpp_iq:result(Push_IQ).
diff -r d551623afde5 deps/exmpp/src/client/exmpp_client_pubsub.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/client/exmpp_client_pubsub.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,822 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+%% @author Karim Gemayel <kgemayel@process-one.net>
+
+-module(exmpp_client_pubsub).
+
+-include("exmpp.hrl").
+
+-define(PUBSUB(NS, Children), (
+  #xmlel{ns = NS, name = 'pubsub', children = Children}
+)).
+
+-export([
+   get_subscriptions/1,
+   get_subscriptions/2,
+   get_affiliations/1,
+   get_affiliations/2,
+	 create_node/2,
+	 create_node/3,
+	 create_instant_node/1,
+	 create_instant_node/2,
+	 create_and_configure_node/3,
+	 create_and_configure_node/4,
+	 get_node_configuration/2,
+	 get_node_configuration/3,
+	 set_node_configuration/3,
+	 set_node_configuration/4,
+	 get_default_configuration/1,
+	 get_default_configuration/2,
+	 purge_items/2,
+	 purge_items/3,
+	 get_owner_subscriptions/2,
+	 get_owner_subscriptions/3,
+	 set_owner_subscriptions/3,
+	 set_owner_subscriptions/4,
+	 get_owner_affiliations/2,
+	 get_owner_affiliations/3,
+	 set_owner_affiliations/3,
+	 set_owner_affiliations/4,
+	 delete_node/2,
+	 delete_node/3,
+	 subscribe/3,
+	 subscribe/4,
+	 unsubscribe/3,
+	 unsubscribe/4,
+	 get_subscriptions_options/3,
+	 get_subscriptions_options/4,
+   set_subscriptions_options/4,
+   set_subscriptions_options/5,
+   subscribe_and_configure/4,
+   subscribe_and_configure/5,
+   get_items/2,
+   get_items/3,
+   get_items_by_id/3,
+   get_items_by_id/4,
+   get_items_max/3,
+   get_items_max/4,
+   publish/2,
+	 publish/3,
+	 publish/4,
+	 retract/3,
+	 retract/4
+	]).
+
+%% --------------------------------------------------------------------
+%% Publish/subscribe containers.
+%% --------------------------------------------------------------------
+
+%% @spec (Service) -> Pubsub_Iq
+%%     Service = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for retrieving user subscriptions.
+%%
+%% The stanza `id' is generated automatically.
+
+get_subscriptions(Service) ->
+    get_subscriptions(pubsub_id(), Service).
+
+%% @spec (Id, Service) -> Pubsub_Iq
+%%     Id = string()
+%%     Service = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for retrieving user subscriptions.
+
+get_subscriptions(Id, Service) ->
+    Subscriptions = #xmlel{ns = ?NS_PUBSUB, name = 'subscriptions'},
+    Pubsub = ?PUBSUB(?NS_PUBSUB, [Subscriptions]),
+    Iq = ?IQ_GET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub).
+
+%% @spec (Service) -> Pubsub_Iq
+%%     Service = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for retrieving user affiliations.
+%%
+%% The stanza `id' is generated automatically.
+
+get_affiliations(Service) ->
+    get_affiliations(pubsub_id(), Service).
+
+%% @spec (Id, Service) -> Pubsub_Iq
+%%     Id = string()
+%%     Service = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for retrieving user affiliations.
+
+get_affiliations(Id, Service) ->
+    Affiliations = #xmlel{ns = ?NS_PUBSUB, name = 'affiliations'},
+    Pubsub = ?PUBSUB(?NS_PUBSUB, [Affiliations]),
+    Iq = ?IQ_GET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub).
+
+%% @spec (Service, Node) -> Pubsub_Iq
+%%     Service = string()
+%%     Node = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for creating a node on a pubsub service.
+%%
+%% The stanza `id' is generated automatically.
+
+create_node(Service, Node) ->
+    create_node(pubsub_id(), Service, Node).
+
+%% @spec (Id, Service, Node) -> Pubsub_Iq
+%%     Id = string()
+%%     Service = string()
+%%     Node = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for creating a node on a pubsub service.
+
+create_node(Id, Service, Node) ->
+    %% Make the <create/> element.
+    Create = exmpp_xml:set_attributes(
+	       #xmlel{ns = ?NS_PUBSUB, name = 'create'},
+	       [{'node', Node}]),
+    %% Prepare the final <iq/>.
+    Pubsub = ?PUBSUB(?NS_PUBSUB, [Create]),
+    Iq = ?IQ_SET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub).
+
+%% @spec (Service) -> Pubsub_Iq
+%%     Service = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for creating an instant node on a pubsub service.
+%%
+%% The stanza `id' is generated automatically.
+
+create_instant_node(Service) ->
+    create_instant_node(pubsub_id(), Service).
+
+%% @spec (Id, Service) -> Pubsub_Iq
+%%     Id = string()
+%%     Service = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for creating an instant node on a pubsub service.
+
+create_instant_node(Id, Service) ->
+    Create = #xmlel{ns = ?NS_PUBSUB, name = 'create'},
+    Pubsub = ?PUBSUB(?NS_PUBSUB, [Create]),
+    Iq = ?IQ_SET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub).
+
+%% @spec (Service, Node, Options) -> Pubsub_Iq
+%%     Service = string()
+%%     Node = string()
+%%     Options = exmpp_xml:xmlel()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for creating a node on a pubsub service with configuration.
+%%
+%% The stanza `id' is generated automatically.
+
+create_and_configure_node(Service, Node, Options) ->
+    create_and_configure_node(pubsub_id(), Service, Node, Options).
+
+%% @spec (Id, Service, Node, Options) -> Pubsub_Iq
+%%     Id = string()
+%%     Service = string()
+%%     Node = string()
+%%     Options = exmpp_xml:xmlel()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for creating a node on a pubsub service with configuration.
+
+create_and_configure_node(Id, Service, Node, Options) ->
+    Configure = exmpp_xml:append_child(
+	     #xmlel{ns = ?NS_PUBSUB, name = 'configure'},
+	     Options),
+    Create = exmpp_xml:append_child(
+	     exmpp_xml:set_attributes(
+	     #xmlel{ns = ?NS_PUBSUB, name = 'create'}, [
+	     {'node', Node}]),
+	     Configure),
+    Pubsub = ?PUBSUB(?NS_PUBSUB, [Create]),
+    Iq = ?IQ_SET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub).
+
+%% @spec (Service, Node) -> Pubsub_Iq
+%%     Service = string()
+%%     Node = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for deleting a node on a pubsub service.
+%%
+%% The stanza `id' is generated automatically.
+
+delete_node(Service, Node) ->
+    delete_node(pubsub_id(), Service, Node).
+
+%% @spec (Id, Service, Node) -> Pubsub_Iq
+%%     Id = string()
+%%     Service = string()
+%%     Node = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for deleting a node on a pubsub service.
+
+delete_node(Id, Service, Node) ->
+    %% Make the <delete/> element.
+    Delete = exmpp_xml:set_attributes(
+	       #xmlel{ns = ?NS_PUBSUB_OWNER, name = 'delete'},
+	       [{'node', Node}]),
+    %% Prepare the final <iq/>.
+    Pubsub = ?PUBSUB(?NS_PUBSUB_OWNER, [Delete]),
+    Iq = ?IQ_SET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub).
+
+%% @spec (From, Service, Node) -> Pubsub_Iq
+%%     From = string()
+%%     Service = string()
+%%     Node = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for subscribing to a node on a pubsub service.
+%%
+%% The stanza `id' is generated automatically.
+
+subscribe(From, Service, Node) ->
+    subscribe(pubsub_id(), From, Service, Node).
+
+%% @spec (Id, From, Service, Node) -> Pubsub_Iq
+%%     Id = string()
+%%     From = string()
+%%     Service = string()
+%%     Node = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for creating a node on a pubsub service.
+
+subscribe(Id, From, Service, Node) ->
+    %% Make the <subscribe/> element.
+    Subscribe = exmpp_xml:set_attributes(
+		  #xmlel{ns = ?NS_PUBSUB, name = 'subscribe'},
+		  [{'node', Node},
+		   {'jid', From}]),
+    %% Prepare the final <iq/>.
+    Pubsub = ?PUBSUB(?NS_PUBSUB, [Subscribe]),
+    Iq = ?IQ_SET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub).
+
+%% @spec (From, Service, Node) -> Pubsub_Iq
+%%     From = string()
+%%     Service = string()
+%%     Node = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for unsubscribing from a node on a pubsub service.
+%%
+%% The stanza `id' is generated automatically.
+
+unsubscribe(From, Service, Node) ->
+    unsubscribe(pubsub_id(), From, Service, Node).
+
+%% @spec (Id, From, Service, Node) -> Pubsub_Iq
+%%     Id = string()
+%%     From = string()
+%%     Service = string()
+%%     Node = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for unsubscribing from a node on a pubsub service.
+
+unsubscribe(Id, From, Service, Node) ->
+    %% Make the <subscribe/> element.
+    Unsubscribe = exmpp_xml:set_attributes(
+		  #xmlel{ns = ?NS_PUBSUB, name = 'unsubscribe'},
+		  [{'node', Node},
+		   {'jid', From}]),
+    %% Prepare the final <iq/>.
+    Pubsub = ?PUBSUB(?NS_PUBSUB, [Unsubscribe]),
+    Iq = ?IQ_SET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub).
+
+%% @spec (From, Service, Node) -> Pubsub_Iq
+%%     From = string()
+%%     Service = string()
+%%     Node = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for retrieving subscriptions options.
+%%
+%% The stanza `id' is generated automatically.
+
+get_subscriptions_options(From, Service, Node) ->
+    get_subscriptions_options(pubsub_id(), From, Service, Node).
+
+%% @spec (Id, From, Service, Node) -> Pubsub_Iq
+%%     Id = string()
+%%     From = string()
+%%     Service = string()
+%%     Node = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for retrieving subscriptions options.
+
+get_subscriptions_options(Id, From, Service, Node) ->
+    Options = exmpp_xml:set_attributes(
+            #xmlel{ns = ?NS_PUBSUB, name = 'options'},
+            [{'node', Node},
+	     {'jid', From}]),
+    Pubsub = ?PUBSUB(?NS_PUBSUB, [Options]),
+    Iq = ?IQ_GET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub).
+
+%% @spec (From, Service, Node, DataForm) -> Pubsub_Iq
+%%     From = string()
+%%     Service = string()
+%%     Node = string()
+%%     DataForm = exmpp_xml:xmlel()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for retrieving subscriptions options.
+%%
+%% The stanza `id' is generated automatically.
+
+set_subscriptions_options(From, Service, Node, DataForm) ->
+    set_subscriptions_options(pubsub_id(), From, Service, Node, DataForm).
+
+%% @spec (Id, From, Service, Node, DataForm) -> Pubsub_Iq
+%%     Id = string()
+%%     From = string()
+%%     Service = string()
+%%     Node = string()
+%%     DataForm = exmpp_xml:xmlel()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for retrieving subscriptions options.
+
+set_subscriptions_options(Id, From, Service, Node, DataForm) ->
+    Options = exmpp_xml:set_attributes(
+            #xmlel{ns = ?NS_PUBSUB, name = 'options',
+	    children = [DataForm]},
+	    [{'node', Node},
+	     {'jid', From}]),
+    Pubsub = ?PUBSUB(?NS_PUBSUB, [Options]),
+    Iq = ?IQ_SET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub).
+
+%% @spec (From, Service, Node, DataForm) -> Pubsub_Iq
+%%     From = string()
+%%     Service = string()
+%%     Node = string()
+%%     DataForm = exmpp_xml:xmlel()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for retrieving subscriptions options.
+%%
+%% The stanza `id' is generated automatically.
+
+subscribe_and_configure(From, Service, Node, DataForm) ->
+    subscribe_and_configure(pubsub_id(), From, Service, Node, DataForm).
+
+%% @spec (Id, From, Service, Node, DataForm) -> Pubsub_Iq
+%%     Id = string()
+%%     From = string()
+%%     Service = string()
+%%     Node = string()
+%%     DataForm = exmpp_xml:xmlel()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for retrieving subscriptions options.
+
+subscribe_and_configure(Id, From, Service, Node, DataForm) ->
+    Options = #xmlel{ns = ?NS_PUBSUB, name = 'options'},
+    Subscribe = exmpp_xml:set_attributes(
+	    #xmlel{ns = ?NS_PUBSUB, name = 'subscribe',
+	    children = [DataForm]},
+	    [{'node', Node},
+	     {'jid', From}]),
+    Pubsub = ?PUBSUB(?NS_PUBSUB, [Options, Subscribe]),
+    Iq = ?IQ_SET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub).
+
+%% @spec (Service, Node) -> Pubsub_Iq
+%%     Service = string()
+%%     Node = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for retrieving default configuration options.
+%%
+%% The stanza `id' is generated automatically.
+
+get_node_configuration(Service, Node) ->
+    get_node_configuration(pubsub_id(), Service, Node).
+
+%% @spec (Id, Service, Node) -> Pubsub_Iq
+%%     Id = string()
+%%     Service = string()
+%%     Node = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for retrieving default configuration options.
+
+get_node_configuration(Id, Service, Node) ->
+    Configure = exmpp_xml:set_attribute(
+            #xmlel{ns = ?NS_PUBSUB_OWNER, name = 'configure'},
+            'node', Node),
+    Pubsub = ?PUBSUB(?NS_PUBSUB_OWNER, [Configure]),
+    Iq = ?IQ_GET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub).
+
+%% @spec (Service, Node, Options) -> Pubsub_Iq
+%%     Service = string()
+%%     Node = string()
+%%     Options = exmpp_xml:xmlel()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for setting configuration options.
+%%
+%% The stanza `id' is generated automatically.
+
+set_node_configuration(Service, Node, Options) ->
+    set_node_configuration(pubsub_id(), Service, Node, Options).
+
+%% @spec (Id, Service, Node, Options) -> Pubsub_Iq
+%%     Id = string()
+%%     Service = string()
+%%     Node = string()
+%%     Options = exmpp_xml:xmlel()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for setting configuration options.
+
+set_node_configuration(Id, Service, Node, Options) ->
+    Configure = exmpp_xml:append_child(
+	       exmpp_xml:set_attribute(
+	       #xmlel{ns = ?NS_PUBSUB_OWNER, name = 'configure'}, 'node', Node),
+	       Options),
+    Pubsub = ?PUBSUB(?NS_PUBSUB_OWNER, [Configure]),
+    Iq = ?IQ_SET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub).
+
+%% @spec (Service) -> Pubsub_Iq
+%%     Service = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for getting default configuration options.
+%%
+%% The stanza `id' is generated automatically.
+
+get_default_configuration(Service) ->
+    get_default_configuration(pubsub_id(), Service).
+
+%% @spec (Id, Service) -> Pubsub_Iq
+%%     Id = string()
+%%     Service = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for getting default configuration options.
+
+get_default_configuration(Id, Service) ->
+    Default = #xmlel{ns = ?NS_PUBSUB_OWNER, name = 'default'},
+    Pubsub = ?PUBSUB(?NS_PUBSUB_OWNER, [Default]),
+    Iq = ?IQ_GET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub).
+
+%% @spec (Service, Node) -> Pubsub_Iq
+%%     Service = string()
+%%     Node = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for purging all items from a pubsub node.
+%%
+%% The stanza `id' is generated automatically.
+
+purge_items(Service, Node) ->
+    purge_items(pubsub_id(), Service, Node).
+
+%% @spec (Id, Service, Node) -> Pubsub_Iq
+%%     Id = string()
+%%     Service = string()
+%%     Node = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for purging all items from a pubsub node.
+
+purge_items(Id, Service, Node) ->
+    Purge = exmpp_xml:set_attributes(
+	    #xmlel{ns = ?NS_PUBSUB_OWNER, name = 'purge'}, [
+	    {'node', Node}]),
+    Pubsub = ?PUBSUB(?NS_PUBSUB_OWNER, [Purge]),
+    Iq = ?IQ_SET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub).
+
+%% @spec (Service, Node) -> Pubsub_Iq
+%%     Service = string()
+%%     Node = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for retrieving list of subscriptions.
+%%
+%% The stanza `id' is generated automatically.
+
+get_owner_subscriptions(Service, Node) ->
+    get_owner_subscriptions(pubsub_id(), Service, Node).
+
+%% @spec (Id, Service, Node) -> Pubsub_Iq
+%%     Id = string()
+%%     Service = string()
+%%     Node = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for retrieving list of subscriptions.
+
+get_owner_subscriptions(Id, Service, Node) ->
+    Subscriptions = exmpp_xml:set_attributes(
+	    #xmlel{ns = ?NS_PUBSUB_OWNER, name = 'subscriptions'}, [
+	    {'node', Node}]),
+    Pubsub = ?PUBSUB(?NS_PUBSUB_OWNER, [Subscriptions]),
+    Iq = ?IQ_GET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub).
+
+%% @spec (Service, Node, Subscribers) -> Pubsub_Iq
+%%     Service = string()
+%%     Node = string()
+%%     Subscribers = [{Jid, State}]
+%%     Jid = string()
+%%     State = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for setting list of subscriptions.
+%%
+%% The stanza `id' is generated automatically.
+
+set_owner_subscriptions(Service, Node, Subscribers) ->
+    set_owner_subscriptions(pubsub_id(), Service, Node, Subscribers).
+
+%% @spec (Id, Service, Node, Subscribers) -> Pubsub_Iq
+%%     Id = string()
+%%     Service = string()
+%%     Node = string()
+%%     Subscribers = [{Jid, State}]
+%%     Jid = string()
+%%     State = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for setting list of subscriptions.
+
+set_owner_subscriptions(Id, Service, Node, Subscribers) ->
+    SetSubscriptions = fun({Jid, State}) ->
+                           exmpp_xml:set_attributes(
+                           #xmlel{ns = ?NS_PUBSUB_OWNER, name = 'subscription'}, [
+                           {'jid', Jid},
+                           {'subscription', State}])
+                       end,
+    Subscriptions = exmpp_xml:append_children(
+	    exmpp_xml:set_attributes(
+	    #xmlel{ns = ?NS_PUBSUB_OWNER, name = 'subscriptions'}, [
+	    {'node', Node}]),
+	    lists:map(SetSubscriptions, Subscribers)),
+    Pubsub = ?PUBSUB(?NS_PUBSUB_OWNER, [Subscriptions]),
+    Iq = ?IQ_SET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub).
+
+%% @spec (Service, Node) -> Pubsub_Iq
+%%     Service = string()
+%%     Node = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for getting list of affiliations.
+%%
+%% The stanza `id' is generated automatically.
+
+get_owner_affiliations(Service, Node) ->
+    get_owner_affiliations(pubsub_id(), Service, Node).
+
+%% @spec (Id, Service, Node) -> Pubsub_Iq
+%%     Id = string()
+%%     Service = string()
+%%     Node = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for getting list of affiliations.
+
+get_owner_affiliations(Id, Service, Node) ->
+    Affiliations = exmpp_xml:set_attributes(
+	    #xmlel{ns = ?NS_PUBSUB_OWNER, name = 'affiliations'}, [
+	    {'node', Node}]),
+    Pubsub = ?PUBSUB(?NS_PUBSUB_OWNER, [Affiliations]),
+    Iq = ?IQ_GET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub).
+
+
+%% @spec (Service, Node, Affiliates) -> Pubsub_Iq
+%%     Service = string()
+%%     Node = string()
+%%     Affiliates = [{Jid, Affiliation}]
+%%     Jid = string()
+%%     Affiliation = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for setting list of affiliations.
+%%
+%% The stanza `id' is generated automatically.
+
+set_owner_affiliations(Service, Node, Affiliates) ->
+    set_owner_affiliations(pubsub_id(), Service, Node, Affiliates).
+
+%% @spec (Id, Service, Node, Affiliates) -> Pubsub_Iq
+%%     Service = string()
+%%     Node = string()
+%%     Affiliates = [{Jid, Affiliation}]
+%%     Jid = string()
+%%     Affiliation = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for setting list of affiliations.
+
+set_owner_affiliations(Id, Service, Node, Affiliates) ->
+    SetAffiliations = fun({Jid, Affiliation}) ->
+                           exmpp_xml:set_attributes(
+                           #xmlel{ns = ?NS_PUBSUB_OWNER, name = 'affiliation'}, [
+                           {'jid', Jid},
+                           {'affiliation', Affiliation}])
+                      end,
+    Affiliations = exmpp_xml:append_children(
+	    exmpp_xml:set_attributes(
+	    #xmlel{ns = ?NS_PUBSUB_OWNER, name = 'affiliations'}, [
+	    {'node', Node}]),
+	    lists:map(SetAffiliations, Affiliates)),
+    Pubsub = ?PUBSUB(?NS_PUBSUB_OWNER, [Affiliations]),
+    Iq = ?IQ_SET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub).
+
+%% @spec (Service, Node) -> Pubsub_Iq
+%%     Service = string()
+%%     Node = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for retrieving pubsub items.
+%%
+%% The stanza `id' is generated automatically.
+
+get_items(Service, Node) ->
+    get_items(pubsub_id(), Service, Node).
+
+%% @spec (Id, Service, Node) -> Pubsub_Iq
+%%     Id = string()
+%%     Service = string()
+%%     Node = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for retrieving pubsub items.
+
+get_items(Id, Service, Node) ->
+    Items = exmpp_xml:set_attribute(
+            #xmlel{ns = ?NS_PUBSUB, name = 'items'},
+            'node', Node),
+    Pubsub = ?PUBSUB(?NS_PUBSUB, [Items]),
+    Iq = ?IQ_GET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub). 
+
+%% @spec (Service, Node, ItemsID) -> Pubsub_Iq
+%%     Service = string()
+%%     Node = string()
+%%     ItemsID = [ItemID]
+%%     ItemID = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for retrieving pubsub items by id.
+%%
+%% The stanza `id' is generated automatically.
+
+get_items_by_id(Service, Node, ItemsID) ->
+    get_items_by_id(pubsub_id(), Service, Node, ItemsID).
+
+%% @spec (Id, Service, Node, ItemsID) -> Pubsub_Iq
+%%     Id = string()
+%%     Service = string()
+%%     Node = string()
+%%     ItemsID = [ItemID]
+%%     ItemID = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for retrieving pubsub items by id.
+
+get_items_by_id(Id, Service, Node, ItemsID) ->
+    Items = exmpp_xml:set_attribute(
+            #xmlel{ns = ?NS_PUBSUB, name = 'items'},
+            'node', Node),
+    SetItemsID = fun(ItemID) ->
+                     exmpp_xml:set_attribute(
+                     #xmlel{ns = ?NS_PUBSUB, name = 'item'},
+                     'id', ItemID)
+                 end,
+    Items1 = exmpp_xml:append_children(Items,
+             lists:map(SetItemsID, ItemsID)),
+    Pubsub = ?PUBSUB(?NS_PUBSUB, [Items1]),
+    Iq = ?IQ_GET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub). 
+
+%% @spec (Service, Node, Max) -> Pubsub_Iq
+%%     Service = string()
+%%     Node = string()
+%%     Max = integer()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for retrieving pubsub 'n' items.
+%%
+%% The stanza `id' is generated automatically.
+
+get_items_max(Service, Node, Max) ->
+    get_items_max(pubsub_id(), Service, Node, Max).
+
+%% @spec (Id, Service, Node, Max) -> Pubsub_Iq
+%%     Id = string()
+%%     Service = string()
+%%     Node = string()
+%%     Max = integer()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for retrieving pubsub 'n' items.
+
+get_items_max(Id, Service, Node, Max) ->
+    Items = exmpp_xml:set_attributes(
+            #xmlel{ns = ?NS_PUBSUB, name = 'items'}, [
+            {'node', Node},
+            {'max_items', integer_to_list(Max)}]),
+    Pubsub = ?PUBSUB(?NS_PUBSUB, [Items]),
+    Iq = ?IQ_GET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub).
+
+%% @spec (Node, Items) -> Pubsub_Iq
+%%     Node = string()
+%%     Items = [exmpp_xml:xmlel() | exmpp_xml:xmlcdata()]
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for publishing an item to a node on a pubsub service as PEP (i.e. without 'to' and 'from').
+%%
+%% The stanza `id' is generated automatically.
+
+publish(Node, Item_Children) ->
+    Item = #xmlel{ns = ?NS_PUBSUB, name = 'item',
+	    children = Item_Children},
+    Publish = exmpp_xml:set_attributes(
+	    #xmlel{ns = ?NS_PUBSUB, name = 'publish',
+	    children = [Item]}, [
+	    {'node', Node}]),
+    Pubsub = ?PUBSUB(?NS_PUBSUB, [Publish]),
+    Iq = exmpp_xml:set_attributes(
+	    #xmlel{ns = ?NS_JABBER_CLIENT, name = 'iq'}, [
+	    {'type', "set"}]),
+    exmpp_xml:append_child(Iq, Pubsub). 
+
+%% @spec (Service, Node, Items) -> Pubsub_Iq
+%%     Service = string()
+%%     Node = string()
+%%     Items = [exmpp_xml:xmlel() | exmpp_xml:xmlcdata()]
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for publishing an item to a node on a pubsub service.
+%%
+%% The stanza `id' is generated automatically.
+
+publish(Service, Node, Item_Child) when is_tuple(Item_Child) ->
+    publish(pubsub_id(), Service, Node, [Item_Child]);
+
+publish(Service, Node, Item_Children) ->
+    publish(pubsub_id(), Service, Node, Item_Children).
+
+%% @spec (Id, Service, Node, Items) -> Pubsub_Iq
+%%     Id = string()
+%%     From = string()
+%%     Service = string()
+%%     Node = string()
+%%     Items = [exmpp_xml:xmlel() | exmpp_xml:xmlcdata()]
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for creating a node on a pubsub service.
+
+publish(Id, Service, Node, Item_Child) when is_tuple(Item_Child) ->
+    publish(Id, Service, Node, [Item_Child]);
+
+publish(Id, Service, Node, Item_Children) ->
+    %% Prepare item.
+    Item = #xmlel{ns = ?NS_PUBSUB, name = 'item',
+		  children = Item_Children},
+    %% Make the <publish/> element.
+    Publish = exmpp_xml:set_attributes(
+		#xmlel{ns = ?NS_PUBSUB, name = 'publish',
+		       children = [Item]},
+		[{'node', Node}]),
+    %% Prepare the final <iq/>.
+    Pubsub = ?PUBSUB(?NS_PUBSUB, [Publish]),
+    Iq = ?IQ_SET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub).
+
+%% @spec (Service, Node, ItemID) -> Pubsub_Iq
+%%     Service = string()
+%%     Node = string()
+%%     ItemID = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for deleting a pubsub item.
+%%
+%% The stanza `id' is generated automatically.
+
+retract(Service, Node, ItemID) ->
+    retract(pubsub_id(), Service, Node, ItemID).
+
+%% @spec (Id, Service, Node, ItemID) -> Pubsub_Iq
+%%     Id = string()
+%%     Service = string()
+%%     Node = string()
+%%     ItemID = string()
+%%     Pubsub_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for deleting a pubsub item.
+
+retract(Id, Service, Node, ItemID) ->
+    Item = exmpp_xml:set_attribute(
+	   #xmlel{ns = ?NS_PUBSUB, name = 'item'},
+	   {'id', ItemID}),
+    Retract = exmpp_xml:set_attributes(
+	    #xmlel{ns = ?NS_PUBSUB, name = 'retract',
+	    children = [Item]}, [
+	    {'node', Node}]),
+    Pubsub = ?PUBSUB(?NS_PUBSUB, [Retract]),
+    Iq = ?IQ_SET(Service, Id),
+    exmpp_xml:append_child(Iq, Pubsub). 
+
+%% @spec () -> Pubsub_ID
+%%     Pubsub_ID = string()
+%% @doc Generate a random pubsub iq ID.
+%%
+%% This function uses {@link random:uniform/1}. It's up to the caller to
+%% seed the generator.
+
+pubsub_id() ->
+    "pubsub-" ++ integer_to_list(random:uniform(65536 * 65536)).
+
diff -r d551623afde5 deps/exmpp/src/client/exmpp_client_register.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/client/exmpp_client_register.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,136 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Mickael Remond <mickael.remond@process-one.net>
+
+%% @doc
+%%
+%% The module <strong>{@module}</strong> implements packets formatting
+%% conforming to XEP-0077: In-Band Registration.
+%% See: http://www.xmpp.org/extensions/xep-0077.html
+%%
+%% Note: This implementation is still partial and does not support all
+%% workflow of the XEP-0077.
+
+-module(exmpp_client_register).
+
+-include("exmpp.hrl").
+
+-export([get_registration_fields/0,
+	 get_registration_fields/1,
+	 register_account/1, register_account/2,
+	 remove_account/0, remove_account/1]).
+
+%% @spec () -> Register_Iq
+%%     Register_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' to get the instruction to register and the list
+%% of registration fields.
+%%
+%% The stanza `id' is generated automatically.
+
+get_registration_fields() ->
+    get_registration_fields(register_id()).
+
+%% @spec (Id) -> Register_Iq
+%%     Id = string()
+%%     Register_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' to get the instruction to register and the list
+%% of registration fields.
+
+get_registration_fields(Id) ->
+    %% Make empty query
+    Query = #xmlel{ns = ?NS_INBAND_REGISTER, name = 'query'},
+    Iq = exmpp_xml:set_attributes(
+	   #xmlel{ns = ?NS_JABBER_CLIENT, name = 'iq'},
+	   [{'type', "get"}, {'id', Id}]),
+    exmpp_xml:append_child(Iq, Query).
+
+%% @spec (Fields) -> Register_Iq
+%%     Fields = [Field]
+%%     Field = {Fieldname, Value}
+%%     Fieldname = atom()
+%%     Value = string()
+%%     Register_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' that prepare a registration packet for the user.
+register_account(Fields) ->
+    register_account(register_id(), Fields).
+
+%% @spec (Id, Fields) -> Register_Iq
+%%     Id = string()
+%%     Fields = [Field]
+%%     Field = {Fieldname, Value}
+%%     Fieldname = atom()
+%%     Value = string()
+%%     Register_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' that prepare a registration packet for the user.
+register_account(Id, Fields) ->
+    %% Make query tag
+    Query =  #xmlel{ns = ?NS_INBAND_REGISTER, name = 'query'},
+    %% Add fields to the query tag
+    PreparedQuery = append_fields(Query, Fields),
+    %% Put the prepared query in IQ
+    Iq = exmpp_xml:set_attributes(
+	   #xmlel{ns = ?NS_JABBER_CLIENT, name = 'iq'},
+	   [{'type', "set"}, {'id', Id}]),
+    exmpp_xml:append_child(Iq, PreparedQuery).
+
+%% @spec () -> RemoveRegister_Iq
+%%     RemoveRegister_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' that delete user account on the server. The
+%% user is supposed to be already logged in.
+remove_account() ->
+    remove_account(register_id()).
+
+%% @spec (Id) -> RemoveRegister_Iq
+%%     Id = string()
+%%     RemoveRegister_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' that delete user account on the server. The
+%% user is supposed to be already logged in.
+remove_account(Id) ->
+    %% Make query tag
+    Query  = #xmlel{ns = ?NS_INBAND_REGISTER, name = 'query'},
+    Remove = #xmlel{ns = ?NS_INBAND_REGISTER, name = 'remove'},
+    PreparedQuery = exmpp_xml:append_child(Query, Remove),
+    %% Put the prepared query in IQ
+    Iq = exmpp_xml:set_attributes(
+	   #xmlel{ns = ?NS_JABBER_CLIENT, name = 'iq'},
+	   [{'type', "set"}, {'id', Id}]),
+    exmpp_xml:append_child(Iq, PreparedQuery).
+
+%% @hidden
+%% @doc Append each register request field to the query and return the
+%% prepared query
+append_fields(PreparedQuery, []) ->
+    PreparedQuery;
+append_fields(Query, [{Field, Value}|Fields])
+  when is_atom(Field),
+       is_list(Value) ->
+    FieldElement = exmpp_xml:set_cdata(
+		     #xmlel{ns = ?NS_INBAND_REGISTER, name = Field},
+		     Value),
+    UpdatedQuery = exmpp_xml:append_child(Query, FieldElement),
+    append_fields(UpdatedQuery, Fields).
+
+%% TODO: register_form
+
+
+
+%% @spec () -> Register_ID
+%%     Register_ID = string()
+%% @doc Generate a random register iq ID.
+%%
+%% This function uses {@link random:uniform/1}. It's up to the caller to
+%% seed the generator.
+
+register_id() ->
+    "reg-" ++ integer_to_list(random:uniform(65536 * 65536)).
diff -r d551623afde5 deps/exmpp/src/client/exmpp_client_roster.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/client/exmpp_client_roster.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,88 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Mickael Remond <mickael.remond@process-one.net>
+
+%% @doc
+%%
+%% The module <strong>{@module}</strong> implements XMPP roster
+%% management packet generation.
+
+-module(exmpp_client_roster).
+
+-include("exmpp.hrl").
+
+-export([get_roster/0, get_roster/1,
+	 set_item/3, set_item/4]).
+
+%% @spec () -> Roster_Iq
+%%     Roster_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' to retrieve user roster.
+%%
+%% The stanza `id' is generated automatically.
+get_roster() ->
+    get_roster(roster_id()).
+
+%% @spec (Id) -> Roster_Iq
+%%     Id = string()
+%%     Roster_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' to retrieve user roster.
+get_roster(Id) ->
+    Query = #xmlel{ns = ?NS_ROSTER, name = 'query'},
+    Iq = exmpp_xml:set_attributes(
+	   #xmlel{ns = ?NS_JABBER_CLIENT, name = 'iq'},
+	   [{'type', "get"}, {'id', Id}]),
+    exmpp_xml:append_child(Iq, Query).
+
+%% @spec (ContactJID, Groups, Nick) -> Roster_Iq
+%%     ContactJID = string()
+%%     Groups = [string()]
+%%     Nick = string()
+%%     Roster_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' to update a roster item. This function is used
+%% both to create a roster item and to update an roster entry
+set_item(ContactJID, Groups, Nick) ->
+    set_item(roster_id(), ContactJID, Groups, Nick).
+
+%% @spec (Id, ContactJID, Groups, Nick) -> Roster_Iq
+%%     Id = string()
+%%     ContactJID = string()
+%%     Groups = [string()]
+%%     Nick = string()
+%%     Roster_Iq = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' to update a roster item. This function is used
+%% both to create a roster item and to update an roster entry
+set_item(Id, ContactJID, Groups, Nick) ->
+    Item = exmpp_xml:set_children(
+		exmpp_xml:set_attributes(
+		     #xmlel{name = 'item'},
+		     [{'name', Nick}, {'jid', ContactJID}]),
+		[ exmpp_xml:set_cdata(
+			exmpp_xml:element(?NS_ROSTER, 'group'),
+			Gr) || Gr <- Groups]),
+    Query = #xmlel{ns = ?NS_ROSTER, name = 'query'},
+    Query2 = exmpp_xml:append_child(Query, Item),
+    Iq = exmpp_xml:set_attributes(
+	   #xmlel{ns = ?NS_JABBER_CLIENT, name = 'iq'},
+	   [{'type', "set"}, {'id', Id}]),
+    exmpp_xml:append_child(Iq, Query2).
+
+%% @spec () -> Roster_ID
+%%     Roster_ID = string()
+%% @doc Generate a random roster iq ID.
+%%
+%% This function uses {@link random:uniform/1}. It's up to the caller to
+%% seed the generator.
+
+roster_id() ->
+    "rost-" ++ integer_to_list(random:uniform(65536 * 65536)).
diff -r d551623afde5 deps/exmpp/src/client/exmpp_client_sasl.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/client/exmpp_client_sasl.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,154 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% The module <strong>{@module}</strong> implements the initiating
+%% entity side of SASL authentication.
+%%
+%% <p>
+%% Note that it doesn't implement SASL, only feature negotiation at the
+%% XMPP level.
+%% </p>
+
+-module(exmpp_client_sasl).
+
+-include("exmpp.hrl").
+
+%% Feature announcement.
+-export([
+	 announced_mechanisms/1
+	]).
+
+%% SASL exchange.
+-export([
+	 selected_mechanism/1,
+	 selected_mechanism/2,
+	 response/1,
+	 abort/0,
+	 next_step/1
+	]).
+
+%% --------------------------------------------------------------------
+%% Feature announcement.
+%% --------------------------------------------------------------------
+
+%% @spec (Features_Annoucenement) -> Mechanisms
+%%     Features_Announcement = exmpp_xml:xmlel()
+%%     Mechanisms = [string()]
+%% @throws {sasl, announced_mechanisms, invalid_feature, Feature} |
+%%         {sasl, announced_mechanisms, invalid_mechanism, El}
+%% @doc Return the list of SASL mechanisms announced by the receiving entity.
+
+announced_mechanisms(#xmlel{ns = ?NS_XMPP, name = 'features'} = El) ->
+    case exmpp_xml:get_element(El, ?NS_SASL, 'mechanisms') of
+        undefined  -> [];
+        Mechanisms -> announced_mechanisms2(Mechanisms)
+    end.
+
+announced_mechanisms2(#xmlel{children = []} = Feature) ->
+    throw({sasl, announced_mechanisms, invalid_feature, Feature});
+announced_mechanisms2(#xmlel{children = Children}) ->
+    announced_mechanisms3(Children, []).
+
+announced_mechanisms3(
+  [#xmlel{ns = ?NS_SASL, name = 'mechanism'} = El | Rest], Result) ->
+    case exmpp_xml:get_cdata_as_list(El) of
+        "" ->
+            throw({sasl, announced_mechanisms, invalid_mechanism, El});
+        Mechanism ->
+            announced_mechanisms3(Rest, [Mechanism | Result])
+    end;
+announced_mechanisms3([El | _Rest], _Result) ->
+    throw({sasl, announced_mechanisms, invalid_mechanism, El});
+announced_mechanisms3([], Result) ->
+    lists:reverse(Result).
+
+%% --------------------------------------------------------------------
+%% SASL exchange.
+%% --------------------------------------------------------------------
+
+%% @spec (Mechanism) -> Auth
+%%     Mechanism = string()
+%%     Auth = exmpp_xml:xmlel()
+%% @doc Prepare an `<auth/>' element with the selected mechanism.
+
+selected_mechanism(Mechanism) ->
+    El = #xmlel{
+      ns = ?NS_SASL,
+      name = 'auth'
+     },
+    exmpp_xml:set_attribute(El, 'mechanism', Mechanism).
+
+%% @spec (Mechanism, Initial_Response) -> Auth
+%%     Mechanism = string()
+%%     Initial_Response = string()
+%%     Auth = exmpp_xml:xmlel()
+%% @doc Prepare an `<auth/>' element with the selected mechanism.
+%%
+%% The initial response will be Base64-encoded before inclusion.
+
+selected_mechanism(Mechanism, "") ->
+    El = selected_mechanism(Mechanism),
+    exmpp_xml:set_cdata(El, "=");
+selected_mechanism(Mechanism, Initial_Response) ->
+    El = selected_mechanism(Mechanism),
+    exmpp_xml:set_cdata(El, base64:encode_to_string(Initial_Response)).
+
+%% @spec (Response_Data) -> Response
+%%     Response_Data = string()
+%%     Response = exmpp_xml:xmlel()
+%% @doc Prepare a `<response/>' element to send the challenge's response.
+%%
+%% `Response_Data' will be Base64-encoded.
+
+response(Response_Data) ->
+    El = #xmlel{
+      ns = ?NS_SASL,
+      name = 'response'
+     },
+    exmpp_xml:set_cdata(El, base64:encode_to_string(Response_Data)).
+
+%% @spec () -> Abort
+%%     Abort = exmpp_xml:xmlel()
+%% @doc Make a `<abort/>' element.
+
+abort() ->
+    #xmlel{
+       ns = ?NS_SASL,
+       name = 'abort'
+      }.
+
+%% @spec (El) -> Type
+%%     El = exmpp_xml:xmlel()
+%%     Type = Challenge | Success | Failure
+%%     Challenge = {challenge, string()}
+%%     Success = {success, string()}
+%%     Failure = {failure, Condition | undefined}
+%%     Condition = atom()
+%% @doc Extract the challenge or the ending element that the receiving
+%% entity sent.
+%%
+%% Any challenge or success data is Base64-decoded.
+
+next_step(#xmlel{ns = ?NS_SASL, name = 'challenge'} = El) ->
+    Encoded = exmpp_xml:get_cdata_as_list(El),
+    {challenge, base64:decode_to_string(Encoded)};
+next_step(#xmlel{ns = ?NS_SASL, name = 'failure',
+		 children = [#xmlel{ns = ?NS_SASL, name = Condition}]}) ->
+    {failure, Condition};
+next_step(#xmlel{ns = ?NS_SASL, name = 'failure'}) ->
+    {failure, undefined};
+next_step(#xmlel{ns = ?NS_SASL, name = 'success'} = El) ->
+    Encoded = exmpp_xml:get_cdata_as_list(El),
+    {success, base64:decode_to_string(Encoded)}.
diff -r d551623afde5 deps/exmpp/src/client/exmpp_client_session.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/client/exmpp_client_session.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,83 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> implements the initiating
+%% entity side of the Session Establishment.
+
+-module(exmpp_client_session).
+
+-include("exmpp.hrl").
+
+%% Feature announcement.
+-export([
+	 announced_support/1
+	]).
+
+%% Session establishment.
+-export([
+	 establish/0,
+	 check_establishment/1
+	]).
+
+%% --------------------------------------------------------------------
+%% Feature announcement.
+%% --------------------------------------------------------------------
+
+%% @spec (Features_Announcement) -> bool()
+%%     Features_Announcement = exmpp_xml:xmlel()
+%% @throws {session, announced_support, invalid_feature, Feature}
+%% @doc Tell if the Session Establishment feature is supported.
+
+announced_support(#xmlel{ns = ?NS_XMPP, name = 'features'} = El) ->
+    case exmpp_xml:get_element(El, ?NS_SESSION, 'session') of
+        undefined -> false;
+        Child     -> announced_support2(Child)
+    end.
+
+announced_support2(#xmlel{children = []}) ->
+    true;
+announced_support2(Feature) ->
+    throw({session, announced_support, invalid_feature, Feature}).
+
+%% --------------------------------------------------------------------
+%% Session establishment.
+%% --------------------------------------------------------------------
+
+%% @spec () -> Session
+%%     Session = exmpp_xml:xmlel()
+%% @doc Make a `<session/>' element to create a session.
+
+establish() ->
+    Session = #xmlel{
+      ns = ?NS_SESSION,
+      name = 'session'
+     },
+    exmpp_iq:set(?NS_JABBER_CLIENT, Session,
+		 exmpp_utils:random_id("session")).
+
+%% @spec (IQ) -> ok
+%%     IQ = exmpp_xml:xmlel()
+%% @throws {session, check_establishment, establishment_failed, Condition}
+%% @doc Check that the session was created successfully.
+
+check_establishment(IQ) when ?IS_IQ(IQ) ->
+    case exmpp_iq:get_type(IQ) of
+        'result' ->
+            ok;
+        'error' ->
+            throw({session, check_establishment,
+		   establishment_failed, exmpp_stanza:get_condition(IQ)})
+    end.
diff -r d551623afde5 deps/exmpp/src/client/exmpp_client_tls.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/client/exmpp_client_tls.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,78 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> implements the initiating
+%% entity side of the TLS feature.
+%%
+%% <p>
+%% Note that it doesn't implement encryption, only feature negotiation
+%% at the XMPP level.
+%% </p>
+
+-module(exmpp_client_tls).
+
+-include("exmpp.hrl").
+
+%% Feature announcement.
+-export([
+	 announced_support/1
+	]).
+
+%% TLS negotiation.
+-export([
+	 starttls/0
+	]).
+
+%% --------------------------------------------------------------------
+%% Feature announcement.
+%% --------------------------------------------------------------------
+
+%% @spec (Features_Announcement) -> Support
+%%     Features_Announcement = exmpp_xml:xmlel()
+%%     Support = none | optional | required
+%% @throws {tls, announced_support, invalid_announcement, El}
+%% @doc Return the kind of TLS negotiation the receiving entity asks for.
+
+announced_support(#xmlel{ns = ?NS_XMPP, name = 'features'} = El) ->
+    case exmpp_xml:get_element(El, ?NS_TLS, 'starttls') of
+        undefined -> none;
+        Child     -> announced_support2(Child)
+    end.
+
+announced_support2(#xmlel{ns = ?NS_TLS, name = 'starttls',
+			  children = []}) ->
+    optional;
+announced_support2(#xmlel{ns = ?NS_TLS, name = 'starttls',
+			  children = [#xmlel{ns = ?NS_TLS,
+					     name = 'required'}]}) ->
+    required;
+announced_support2(#xmlel{ns = ?NS_TLS, name = 'starttls'} = El) ->
+    throw({tls, announced_support, invalid_announcement, El}).
+
+%% --------------------------------------------------------------------
+%% TLS negotiation.
+%% --------------------------------------------------------------------
+
+%% @spec () -> STARTTLS
+%%     STARTTLS = exmpp_xml:xmlel()
+%% @doc Make an XML element to tell the receiving entity that we want to
+%% use TLS.
+
+starttls() ->
+    #xmlel{
+	  ns = ?NS_TLS,
+	  name = 'starttls'
+	 }.
diff -r d551623afde5 deps/exmpp/src/compat/ejabberd_socket.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/compat/ejabberd_socket.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,182 @@
+%%%----------------------------------------------------------------------
+%%% File    : ejabberd_socket.erl
+%%% Author  : Alexey Shchepin <alexey@process-one.net>
+%%% Purpose : Socket with zlib and TLS support library
+%%% Created : 23 Aug 2006 by Alexey Shchepin <alexey@process-one.net>
+%%%
+%%%
+%%% ejabberd, Copyright (C) 2002-2010   ProcessOne
+%%%
+%%% This program is free software; you can redistribute it and/or
+%%% modify it under the terms of the GNU General Public License as
+%%% published by the Free Software Foundation; either version 2 of the
+%%% License, or (at your option) any later version.
+%%%
+%%% This program is distributed in the hope that it will be useful,
+%%% but WITHOUT ANY WARRANTY; without even the implied warranty of
+%%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+%%% General Public License for more details.
+%%%
+%%% You should have received a copy of the GNU General Public License
+%%% along with this program; if not, write to the Free Software
+%%% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+%%% 02111-1307 USA
+%%%
+%%%----------------------------------------------------------------------
+
+-module(ejabberd_socket).
+-author('alexey@process-one.net').
+
+%% API
+-export([start/4,
+	 connect/3,
+	 starttls/2,
+	 starttls/3,
+	 compress/1,
+	 compress/2,
+	 reset_stream/1,
+	 send/2,
+	 change_shaper/2,
+	 monitor/1,
+	 get_sockmod/1,
+	 get_peer_certificate/1,
+	 get_verify_result/1,
+	 close/1,
+	 sockname/1, peername/1]).
+
+-record(socket_state, {sockmod, socket, receiver}).
+
+%%====================================================================
+%% API
+%%====================================================================
+%%--------------------------------------------------------------------
+%% Function:
+%% Description:
+%%--------------------------------------------------------------------
+start(Module, SockMod, Socket, Opts) ->
+    case Module:socket_type() of
+	xml_stream ->
+	    MaxStanzaSize =
+		case lists:keysearch(max_stanza_size, 1, Opts) of
+		    {value, {_, Size}} -> Size;
+		    _ -> infinity
+		end,
+	    Receiver = ejabberd_receiver:start(Socket, SockMod, none,
+					       MaxStanzaSize),
+	    SocketData = #socket_state{sockmod = SockMod,
+				       socket = Socket,
+				       receiver = Receiver},
+	    case Module:start({?MODULE, SocketData}, Opts) of
+		{ok, Pid} ->
+		    case SockMod:controlling_process(Socket, Receiver) of
+			ok ->
+			    ok;
+			{error, _Reason} ->
+			    SockMod:close(Socket)
+		    end,
+		    ejabberd_receiver:become_controller(Receiver, Pid);
+		{error, _Reason} ->
+		    SockMod:close(Socket)
+	    end;
+	raw ->
+	    case Module:start({SockMod, Socket}, Opts) of
+		{ok, Pid} ->
+		    case SockMod:controlling_process(Socket, Pid) of
+			ok ->
+			    ok;
+			{error, _Reason} ->
+			    SockMod:close(Socket)
+		    end;
+		{error, _Reason} ->
+		    SockMod:close(Socket)
+	    end
+    end.
+
+connect(Addr, Port, Opts) ->
+    case gen_tcp:connect(Addr, Port, Opts) of
+	{ok, Socket} ->
+	    Receiver = ejabberd_receiver:start(Socket, gen_tcp, none),
+	    SocketData = #socket_state{sockmod = gen_tcp,
+				       socket = Socket,
+				       receiver = Receiver},
+	    Pid = self(),
+	    case gen_tcp:controlling_process(Socket, Receiver) of
+		ok ->
+		    ejabberd_receiver:become_controller(Receiver, Pid),
+		    {ok, SocketData};
+		{error, _Reason} = Error ->
+		    gen_tcp:close(Socket),
+		    Error
+	    end;
+	{error, _Reason} = Error ->
+	    Error
+    end.
+
+starttls(SocketData, TLSOpts) ->
+    {ok, TLSSocket} = tls:tcp_to_tls(SocketData#socket_state.socket, TLSOpts),
+    ejabberd_receiver:starttls(SocketData#socket_state.receiver, TLSSocket),
+    SocketData#socket_state{socket = TLSSocket, sockmod = tls}.
+
+starttls(SocketData, TLSOpts, Data) ->
+    send(SocketData, Data),
+    starttls(SocketData, TLSOpts).
+
+compress(SocketData) ->
+    {ok, ZlibSocket} = ejabberd_zlib:enable_zlib(
+			 SocketData#socket_state.sockmod,
+			 SocketData#socket_state.socket),
+    ejabberd_receiver:compress(SocketData#socket_state.receiver, ZlibSocket),
+    SocketData#socket_state{socket = ZlibSocket, sockmod = ejabberd_zlib}.
+
+compress(SocketData, Data) ->
+    {ok, ZlibSocket} = ejabberd_zlib:enable_zlib(
+			 SocketData#socket_state.sockmod,
+			 SocketData#socket_state.socket),
+    ejabberd_receiver:compress(SocketData#socket_state.receiver, ZlibSocket),
+    send(SocketData, Data),
+    SocketData#socket_state{socket = ZlibSocket, sockmod = ejabberd_zlib}.
+
+reset_stream(SocketData) ->
+    ejabberd_receiver:reset_stream(SocketData#socket_state.receiver).
+
+send(SocketData, Data) ->
+    catch (SocketData#socket_state.sockmod):send(
+	    SocketData#socket_state.socket, Data).
+
+change_shaper(SocketData, Shaper) ->
+    ejabberd_receiver:change_shaper(SocketData#socket_state.receiver, Shaper).
+
+monitor(SocketData) ->
+    erlang:monitor(process, SocketData#socket_state.receiver).
+
+get_sockmod(SocketData) ->
+    SocketData#socket_state.sockmod.
+
+get_peer_certificate(SocketData) ->
+    tls:get_peer_certificate(SocketData#socket_state.socket).
+
+get_verify_result(SocketData) ->
+    tls:get_verify_result(SocketData#socket_state.socket).
+
+close(SocketData) ->
+    ejabberd_receiver:close(SocketData#socket_state.receiver).
+
+sockname(#socket_state{sockmod = SockMod, socket = Socket}) ->
+    case SockMod of
+	gen_tcp ->
+	    inet:sockname(Socket);
+	_ ->
+	    SockMod:sockname(Socket)
+    end.
+
+peername(#socket_state{sockmod = SockMod, socket = Socket}) ->
+    case SockMod of
+	gen_tcp ->
+	    inet:peername(Socket);
+	_ ->
+	    SockMod:peername(Socket)
+    end.
+
+%%====================================================================
+%% Internal functions
+%%====================================================================
diff -r d551623afde5 deps/exmpp/src/compat/ejabberd_zlib.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/compat/ejabberd_zlib.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,89 @@
+%%%----------------------------------------------------------------------
+%%% File    : ejabberd_zlib.erl
+%%% Author  : Alexey Shchepin <alexey@process-one.net>
+%%% Purpose : Interface to zlib
+%%% Created : 19 Jan 2006 by Alexey Shchepin <alexey@process-one.net>
+%%%
+%%%
+%%% ejabberd, Copyright (C) 2002-2010   ProcessOne
+%%%
+%%% This program is free software; you can redistribute it and/or
+%%% modify it under the terms of the GNU General Public License as
+%%% published by the Free Software Foundation; either version 2 of the
+%%% License, or (at your option) any later version.
+%%%
+%%% This program is distributed in the hope that it will be useful,
+%%% but WITHOUT ANY WARRANTY; without even the implied warranty of
+%%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+%%% General Public License for more details.
+%%%
+%%% You should have received a copy of the GNU General Public License
+%%% along with this program; if not, write to the Free Software
+%%% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+%%% 02111-1307 USA
+%%%
+%%%----------------------------------------------------------------------
+
+-module(ejabberd_zlib).
+-author('alexey@process-one.net').
+
+-export([start/0, start_link/0,
+	 enable_zlib/2, disable_zlib/1,
+	 send/2,
+	 recv/2, recv/3, recv_data/2,
+	 setopts/2,
+	 sockname/1, peername/1,
+	 controlling_process/2,
+	 close/1]).
+
+-define(DEFLATE, 1).
+-define(INFLATE, 2).
+
+start() ->
+    exmpp_compress:start().
+
+start_link() ->
+    exmpp_compress:start_link().
+
+
+enable_zlib(SockMod, Socket) ->
+    try
+	ZlibSock = exmpp_compress:enable_compression({SockMod, Socket},
+						     [{compress_method, zlib}]),
+	{ok, ZlibSock}
+    catch
+	Exception ->
+	    {error, Exception}
+    end.
+
+disable_zlib(ZlibSock) ->
+    exmpp_compress:disable_compression(ZlibSock).
+
+recv(Socket, Length) ->
+    recv(Socket, Length, infinity).
+recv(ZlibSock, _Length, Timeout) ->
+    exmpp_compress:recv(ZlibSock, Timeout).
+
+recv_data(ZlibSock, Packet) ->
+    exmpp_compress:recv_data(ZlibSock, Packet).
+
+send(ZlibSock, Packet) ->
+    exmpp_compress:send(ZlibSock, Packet).
+
+
+setopts(ZlibSock, Opts) ->
+    exmpp_compress:setopts(ZlibSock, Opts).
+
+sockname(ZlibSock) ->
+    exmpp_compress:sockname(ZlibSock).
+
+peername(ZlibSock) ->
+    exmpp_compress:peername(ZlibSock).
+
+controlling_process(ZlibSock, Pid) ->
+    exmpp_compress:controlling_process(ZlibSock, Pid).
+
+close(ZlibSock) ->
+    exmpp_compress:close(ZlibSock).
+
+
diff -r d551623afde5 deps/exmpp/src/compat/jlib.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/compat/jlib.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,640 @@
+%%%----------------------------------------------------------------------
+%%% File    : jlib.erl
+%%% Author  : Alexey Shchepin <alexey@process-one.net>
+%%% Purpose : General XMPP library.
+%%% Created : 23 Nov 2002 by Alexey Shchepin <alexey@process-one.net>
+%%%
+%%%
+%%% ejabberd, Copyright (C) 2002-2010   ProcessOne
+%%%
+%%% This program is free software; you can redistribute it and/or
+%%% modify it under the terms of the GNU General Public License as
+%%% published by the Free Software Foundation; either version 2 of the
+%%% License, or (at your option) any later version.
+%%%
+%%% This program is distributed in the hope that it will be useful,
+%%% but WITHOUT ANY WARRANTY; without even the implied warranty of
+%%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+%%% General Public License for more details.
+%%%
+%%% You should have received a copy of the GNU General Public License
+%%% along with this program; if not, write to the Free Software
+%%% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+%%% 02111-1307 USA
+%%%
+%%%----------------------------------------------------------------------
+
+-module(jlib).
+-author('alexey@process-one.net').
+
+-export([make_result_iq_reply/1,
+	 make_error_reply/3,
+	 make_error_reply/2,
+	 make_error_element/2,
+	 make_correct_from_to_attrs/3,
+	 replace_from_to_attrs/3,
+	 replace_from_to/3,
+	 remove_attr/2,
+	 make/3,
+	 make/1,
+	 string_to_jid/1,
+	 jid_to_string/1,
+	 is_nodename/1,
+	 tolower/1,
+	 nodeprep/1,
+	 nameprep/1,
+	 resourceprep/1,
+	 jid_tolower/1,
+	 jid_remove_resource/1,
+	 jid_replace_resource/2,
+	 get_iq_namespace/1,
+	 iq_query_info/1,
+	 iq_query_or_response_info/1,
+	 is_iq_request_type/1,
+	 iq_to_xml/1,
+	 parse_xdata_submit/1,
+	 timestamp_to_iso/1,
+	 timestamp_to_xml/1,
+	 now_to_utc_string/1,
+	 now_to_local_string/1,
+	 datetime_string_to_timestamp/1,
+	 decode_base64/1,
+	 encode_base64/1,
+	 ip_to_list/1]).
+
+-include("jlib.hrl").
+
+%%send_iq(From, To, ID, SubTags) ->
+%%    ok.
+
+make_result_iq_reply({xmlelement, Name, Attrs, SubTags}) ->
+    NewAttrs = make_result_iq_reply_attrs(Attrs),
+    {xmlelement, Name, NewAttrs, SubTags}.
+
+make_result_iq_reply_attrs(Attrs) ->
+    To = xml:get_attr("to", Attrs),
+    From = xml:get_attr("from", Attrs),
+    Attrs1 = lists:keydelete("to", 1, Attrs),
+    Attrs2 = lists:keydelete("from", 1, Attrs1),
+    Attrs3 = case To of
+		 {value, ToVal} ->
+		     [{"from", ToVal} | Attrs2];
+		 _ ->
+		     Attrs2
+	     end,
+    Attrs4 = case From of
+		 {value, FromVal} ->
+		     [{"to", FromVal} | Attrs3];
+		 _ ->
+		     Attrs3
+	     end,
+    Attrs5 = lists:keydelete("type", 1, Attrs4),
+    Attrs6 = [{"type", "result"} | Attrs5],
+    Attrs6.
+
+make_error_reply({xmlelement, Name, Attrs, SubTags}, Code, Desc) ->
+    NewAttrs = make_error_reply_attrs(Attrs),
+    {xmlelement, Name, NewAttrs, SubTags ++ [{xmlelement, "error",
+					      [{"code", Code}],
+					      [{xmlcdata, Desc}]}]}.
+
+make_error_reply({xmlelement, Name, Attrs, SubTags}, Error) ->
+    NewAttrs = make_error_reply_attrs(Attrs),
+    {xmlelement, Name, NewAttrs, SubTags ++ [Error]}.
+
+make_error_reply_attrs(Attrs) ->
+    To = xml:get_attr("to", Attrs),
+    From = xml:get_attr("from", Attrs),
+    Attrs1 = lists:keydelete("to", 1, Attrs),
+    Attrs2 = lists:keydelete("from", 1, Attrs1),
+    Attrs3 = case To of
+		 {value, ToVal} ->
+		     [{"from", ToVal} | Attrs2];
+		 _ ->
+		     Attrs2
+	     end,
+    Attrs4 = case From of
+		 {value, FromVal} ->
+		     [{"to", FromVal} | Attrs3];
+		 _ ->
+		     Attrs3
+	     end,
+    Attrs5 = lists:keydelete("type", 1, Attrs4),
+    Attrs6 = [{"type", "error"} | Attrs5],
+    Attrs6.
+
+make_error_element(Code, Desc) ->
+    {xmlelement, "error",
+     [{"code", Code}],
+     [{xmlcdata, Desc}]}.
+
+make_correct_from_to_attrs(From, To, Attrs) ->
+    Attrs1 = lists:keydelete("from", 1, Attrs),
+    Attrs2 = case xml:get_attr("to", Attrs) of
+		 {value, _} ->
+		     Attrs1;
+		 _ ->
+		     [{"to", To} | Attrs1]
+	     end,
+    Attrs3 = [{"from", From} | Attrs2],
+    Attrs3.
+
+
+replace_from_to_attrs(From, To, Attrs) ->
+    Attrs1 = lists:keydelete("to", 1, Attrs),
+    Attrs2 = lists:keydelete("from", 1, Attrs1),
+    Attrs3 = [{"to", To} | Attrs2],
+    Attrs4 = [{"from", From} | Attrs3],
+    Attrs4.
+
+replace_from_to(From, To, {xmlelement, Name, Attrs, Els}) ->
+    NewAttrs = replace_from_to_attrs(jlib:jid_to_string(From),
+				     jlib:jid_to_string(To),
+				     Attrs),
+    {xmlelement, Name, NewAttrs, Els}.
+
+
+remove_attr(Attr, {xmlelement, Name, Attrs, Els}) ->
+    NewAttrs = lists:keydelete(Attr, 1, Attrs),
+    {xmlelement, Name, NewAttrs, Els}.
+
+
+make(User, Server, Resource) ->
+    try
+	exmpp_jid:make(User, Server, Resource)
+    catch
+	_Exception ->
+	    error
+    end.
+
+make({User, Server, Resource}) ->
+    make(User, Server, Resource).
+
+string_to_jid(J) ->
+    try
+	Jid0 = exmpp_jid:parse(J),
+	Jid1 = case Jid0#jid.user of
+		   undefined -> Jid0#jid{user = "", luser = ""};
+		   _         -> Jid0
+	       end,
+	Jid2 = case Jid1#jid.resource of
+		   undefined -> Jid1#jid{resource = "", prep_resource = ""};
+		   _         -> Jid1
+	       end,
+	Jid2
+    catch
+	_Exception -> error
+    end.
+
+jid_to_string({Node, Server, Resource}) ->
+    Jid = exmpp_jid:make(Node, Server, Resource),
+    exmpp_jid:to_list(Jid);
+jid_to_string(Jid) ->
+    exmpp_jid:to_list(Jid).
+
+
+is_nodename([]) ->
+    false;
+is_nodename(J) ->
+    nodeprep(J) /= error.
+
+
+%%tolower_c(C) when C >= $A, C =< $Z ->
+%%    C + 32;
+%%tolower_c(C) ->
+%%    C.
+
+-define(LOWER(Char),
+        if
+            Char >= $A, Char =< $Z ->
+                Char + 32;
+            true ->
+                Char
+        end).
+
+%%tolower(S) ->
+%%    lists:map(fun tolower_c/1, S).
+%%tolower(S) ->
+%%    [?LOWER(Char) || Char <- S].
+
+%% Not tail-recursive but it seems works faster than variants above
+tolower([C | Cs]) ->
+    if
+	C >= $A, C =< $Z ->
+	    [C + 32 | tolower(Cs)];
+	true ->
+	    [C | tolower(Cs)]
+    end;
+tolower([]) ->
+    [].
+
+%%tolower([C | Cs]) when C >= $A, C =< $Z ->
+%%    [C + 32 | tolower(Cs)];
+%%tolower([C | Cs]) ->
+%%    [C | tolower(Cs)];
+%%tolower([]) ->
+%%    [].
+
+
+nodeprep(S) when length(S) < 1024 ->
+    R = stringprep:nodeprep(S),
+    if
+	length(R) < 1024 -> R;
+	true -> error
+    end;
+nodeprep(_) ->
+    error.
+
+nameprep(S) when length(S) < 1024 ->
+    R = stringprep:nameprep(S),
+    if
+	length(R) < 1024 -> R;
+	true -> error
+    end;
+nameprep(_) ->
+    error.
+
+resourceprep(S) when length(S) < 1024 ->
+    R = stringprep:resourceprep(S),
+    if
+	length(R) < 1024 -> R;
+	true -> error
+    end;
+resourceprep(_) ->
+    error.
+
+
+jid_tolower(#jid{luser = U, lserver = S, prep_resource = R}) ->
+    {U, S, R};
+jid_tolower({U, S, R}) ->
+    case nodeprep(U) of
+	error -> error;
+	LUser ->
+	    case nameprep(S) of
+		error -> error;
+		LServer ->
+		    case resourceprep(R) of
+			error -> error;
+			LResource ->
+			    {LUser, LServer, LResource}
+		    end
+	    end
+    end.
+
+jid_remove_resource(#jid{} = JID) ->
+    JID#jid{resource = "", prep_resource = ""};
+jid_remove_resource({U, S, _R}) ->
+    {U, S, ""}.
+
+jid_replace_resource(JID, Resource) ->
+    case resourceprep(Resource) of
+	error -> error;
+	LResource ->
+	    JID#jid{resource = Resource, prep_resource = LResource}
+    end.
+
+
+get_iq_namespace({xmlelement, Name, _Attrs, Els}) when Name == "iq" ->
+    case xml:remove_cdata(Els) of
+	[{xmlelement, _Name2, Attrs2, _Els2}] ->
+	    xml:get_attr_s("xmlns", Attrs2);
+	_ ->
+	    ""
+    end;
+get_iq_namespace(_) ->
+    "".
+
+iq_query_info(El) ->
+    iq_info_internal(El, request).
+
+iq_query_or_response_info(El) ->
+    iq_info_internal(El, any).
+
+iq_info_internal({xmlelement, Name, Attrs, Els}, Filter) when Name == "iq" ->
+    %% Filter is either request or any.  If it is request, any replies
+    %% are converted to the atom reply.
+    ID = xml:get_attr_s("id", Attrs),
+    Type = xml:get_attr_s("type", Attrs),
+    Lang = xml:get_attr_s("xml:lang", Attrs),
+    {Type1, Class} = case Type of
+			 "set" -> {set, request};
+			 "get" -> {get, request};
+			 "result" -> {result, reply};
+			 "error" -> {error, reply};
+			 _ -> {invalid, invalid}
+		     end,
+    if
+	Type1 == invalid ->
+	    invalid;
+	Class == request; Filter == any ->
+	    %% The iq record is a bit strange.  The sub_el field is an
+	    %% XML tuple for requests, but a list of XML tuples for
+	    %% responses.
+	    FilteredEls = xml:remove_cdata(Els),
+	    {XMLNS, SubEl} =
+		case {Class, FilteredEls} of
+		    {request, [{xmlelement, _Name2, Attrs2, _Els2}]} ->
+			{xml:get_attr_s("xmlns", Attrs2),
+			 hd(FilteredEls)};
+		    {reply, _} ->
+			%% Find the namespace of the first non-error
+			%% element, if there is one.
+			NonErrorEls = [El ||
+					  {xmlelement, SubName, _, _} = El
+					      <- FilteredEls,
+					  SubName /= "error"],
+			{case NonErrorEls of
+			     [NonErrorEl] -> xml:get_tag_attr_s("xmlns", NonErrorEl);
+			     _ -> invalid
+			 end,
+			 FilteredEls};
+		    _ ->
+			{invalid, invalid}
+		end,
+	    if XMLNS == "", Class == request ->
+		    invalid;
+	       true ->
+		    #iq{id = ID,
+			type = Type1,
+			xmlns = XMLNS,
+			lang = Lang,
+			sub_el = SubEl}
+	    end;
+	Class == reply, Filter /= any ->
+	    reply
+    end;
+iq_info_internal(_, _) ->
+    not_iq.
+
+is_iq_request_type(set) -> true;
+is_iq_request_type(get) -> true;
+is_iq_request_type(_) -> false.
+
+iq_type_to_string(set) -> "set";
+iq_type_to_string(get) -> "get";
+iq_type_to_string(result) -> "result";
+iq_type_to_string(error) -> "error";
+iq_type_to_string(_) -> invalid.
+
+
+iq_to_xml(#iq{id = ID, type = Type, sub_el = SubEl}) ->
+    if
+	ID /= "" ->
+	    {xmlelement, "iq",
+	     [{"id", ID}, {"type", iq_type_to_string(Type)}], SubEl};
+	true ->
+	    {xmlelement, "iq",
+	     [{"type", iq_type_to_string(Type)}], SubEl}
+    end.
+
+
+parse_xdata_submit(El) ->
+    {xmlelement, _Name, Attrs, Els} = El,
+    case xml:get_attr_s("type", Attrs) of
+	"submit" ->
+	    lists:reverse(parse_xdata_fields(Els, []));
+	_ ->
+	    invalid
+    end.
+
+parse_xdata_fields([], Res) ->
+    Res;
+parse_xdata_fields([{xmlelement, Name, Attrs, SubEls} | Els], Res) ->
+    case Name of
+	"field" ->
+	    case xml:get_attr_s("var", Attrs) of
+		"" ->
+		    parse_xdata_fields(Els, Res);
+		Var ->
+		    Field =
+			{Var, lists:reverse(parse_xdata_values(SubEls, []))},
+		    parse_xdata_fields(Els, [Field | Res])
+	    end;
+	_ ->
+	    parse_xdata_fields(Els, Res)
+    end;
+parse_xdata_fields([_ | Els], Res) ->
+    parse_xdata_fields(Els, Res).
+
+parse_xdata_values([], Res) ->
+    Res;
+parse_xdata_values([{xmlelement, Name, _Attrs, SubEls} | Els], Res) ->
+    case Name of
+	"value" ->
+	    Val = xml:get_cdata(SubEls),
+	    parse_xdata_values(Els, [Val | Res]);
+	_ ->
+	    parse_xdata_values(Els, Res)
+    end;
+parse_xdata_values([_ | Els], Res) ->
+    parse_xdata_values(Els, Res).
+
+
+timestamp_to_iso({{Year, Month, Day}, {Hour, Minute, Second}}) ->
+    lists:flatten(
+      io_lib:format("~4..0w~2..0w~2..0wT~2..0w:~2..0w:~2..0w",
+		    [Year, Month, Day, Hour, Minute, Second])).
+
+timestamp_to_xml({{Year, Month, Day}, {Hour, Minute, Second}}) ->
+    {xmlelement, "x",
+     [{"xmlns", ?NS_DELAY},
+      {"stamp", lists:flatten(
+		  io_lib:format("~4..0w~2..0w~2..0wT~2..0w:~2..0w:~2..0w",
+				[Year, Month, Day, Hour, Minute, Second]))}],
+     []}.
+
+now_to_utc_string({MegaSecs, Secs, MicroSecs}) ->
+    {{Year, Month, Day}, {Hour, Minute, Second}} =
+	calendar:now_to_universal_time({MegaSecs, Secs, MicroSecs}),
+    lists:flatten(
+      io_lib:format("~4..0w-~2..0w-~2..0wT~2..0w:~2..0w:~2..0w.~6..0wZ",
+		    [Year, Month, Day, Hour, Minute, Second, MicroSecs])).
+
+now_to_local_string({MegaSecs, Secs, MicroSecs}) ->
+    LocalTime = calendar:now_to_local_time({MegaSecs, Secs, MicroSecs}),
+    UTCTime = calendar:now_to_universal_time({MegaSecs, Secs, MicroSecs}),
+    Seconds = calendar:datetime_to_gregorian_seconds(LocalTime) -
+	calendar:datetime_to_gregorian_seconds(UTCTime),
+    {{H, M, _}, Sign} = if
+			    Seconds < 0 ->
+				{calendar:seconds_to_time(-Seconds), "-"};
+			    true ->
+				{calendar:seconds_to_time(Seconds), "+"}
+			end,
+    {{Year, Month, Day}, {Hour, Minute, Second}} = LocalTime,
+    lists:flatten(
+      io_lib:format(
+	"~4..0w-~2..0w-~2..0wT~2..0w:~2..0w:~2..0w.~6..0w~s~2..0w:~2..0w",
+	[Year, Month, Day, Hour, Minute, Second, MicroSecs, Sign, H, M])).
+
+
+%% yyyy-mm-ddThh:mm:ss[.sss]{Z|{+|-}hh:mm} -> {MegaSecs, Secs, MicroSecs}
+datetime_string_to_timestamp(TimeStr) ->
+    case catch parse_datetime(TimeStr) of
+	{'EXIT', _Err} ->
+	    undefined;
+	TimeStamp ->
+	    TimeStamp
+    end.
+
+parse_datetime(TimeStr) ->
+    [Date, Time] = string:tokens(TimeStr, "T"),
+    D = parse_date(Date),
+    {T, MS, TZH, TZM} = parse_time(Time),
+    S = calendar:datetime_to_gregorian_seconds({D, T}),
+    S1 = calendar:datetime_to_gregorian_seconds({{1970, 1, 1}, {0, 0, 0}}),
+    Seconds = (S - S1) - TZH * 60 * 60 - TZM * 60,
+    {Seconds div 1000000, Seconds rem 1000000, MS}.
+
+%% yyyy-mm-dd
+parse_date(Date) ->
+    [Y, M, D] = string:tokens(Date, "-"),
+    Date1 = {list_to_integer(Y), list_to_integer(M), list_to_integer(D)},
+    case calendar:valid_date(Date1) of
+	true ->
+	    Date1;
+	_ ->
+	    false
+    end.
+
+%% hh:mm:ss[.sss]TZD
+parse_time(Time) ->
+    case string:str(Time, "Z") of
+	0 ->
+	    parse_time_with_timezone(Time);
+	_ ->
+	    [T | _] = string:tokens(Time, "Z"),
+	    {TT, MS} = parse_time1(T),
+	    {TT, MS, 0, 0}
+    end.
+
+parse_time_with_timezone(Time) ->
+    case string:str(Time, "+") of
+	0 ->
+	    case string:str(Time, "-") of
+		0 ->
+		    false;
+		_ ->
+		    parse_time_with_timezone(Time, "-")
+	    end;
+	_ ->
+	    parse_time_with_timezone(Time, "+")
+    end.
+
+parse_time_with_timezone(Time, Delim) ->
+    [T, TZ] = string:tokens(Time, Delim),
+    {TZH, TZM} = parse_timezone(TZ),
+    {TT, MS} = parse_time1(T),
+    case Delim of
+	"-" ->
+	    {TT, MS, -TZH, -TZM};
+	"+" ->
+	    {TT, MS, TZH, TZM}
+    end.
+
+parse_timezone(TZ) ->
+    [H, M] = string:tokens(TZ, ":"),
+    {[H1, M1], true} = check_list([{H, 12}, {M, 60}]),
+    {H1, M1}.
+
+parse_time1(Time) ->
+    [HMS | T] =  string:tokens(Time, "."),
+    MS = case T of
+	     [] ->
+		 0;
+	     [Val] ->
+		 list_to_integer(string:left(Val, 6, $0))
+	 end,
+    [H, M, S] = string:tokens(HMS, ":"),
+    {[H1, M1, S1], true} = check_list([{H, 24}, {M, 60}, {S, 60}]),
+    {{H1, M1, S1}, MS}.
+
+check_list(List) ->
+    lists:mapfoldl(
+      fun({L, N}, B)->
+	      V = list_to_integer(L),
+	      if
+		  (V >= 0) and (V =< N) ->
+		      {V, B};
+		  true ->
+		      {false, false}
+	      end
+      end, true, List).
+
+
+%%
+%% Base64 stuff (based on httpd_util.erl)
+%%
+
+decode_base64(S) ->
+    decode1_base64([C || C <- S,
+			 C /= $ ,
+			 C /= $\t,
+			 C /= $\n,
+			 C /= $\r]).
+
+decode1_base64([]) ->
+    [];
+decode1_base64([Sextet1,Sextet2,$=,$=|Rest]) ->
+    Bits2x6=
+	(d(Sextet1) bsl 18) bor
+	(d(Sextet2) bsl 12),
+    Octet1=Bits2x6 bsr 16,
+    [Octet1|decode_base64(Rest)];
+decode1_base64([Sextet1,Sextet2,Sextet3,$=|Rest]) ->
+    Bits3x6=
+	(d(Sextet1) bsl 18) bor
+	(d(Sextet2) bsl 12) bor
+	(d(Sextet3) bsl 6),
+    Octet1=Bits3x6 bsr 16,
+    Octet2=(Bits3x6 bsr 8) band 16#ff,
+    [Octet1,Octet2|decode_base64(Rest)];
+decode1_base64([Sextet1,Sextet2,Sextet3,Sextet4|Rest]) ->
+    Bits4x6=
+	(d(Sextet1) bsl 18) bor
+	(d(Sextet2) bsl 12) bor
+	(d(Sextet3) bsl 6) bor
+	d(Sextet4),
+    Octet1=Bits4x6 bsr 16,
+    Octet2=(Bits4x6 bsr 8) band 16#ff,
+    Octet3=Bits4x6 band 16#ff,
+    [Octet1,Octet2,Octet3|decode_base64(Rest)];
+decode1_base64(_CatchAll) ->
+    "".
+
+d(X) when X >= $A, X =<$Z ->
+    X-65;
+d(X) when X >= $a, X =<$z ->
+    X-71;
+d(X) when X >= $0, X =<$9 ->
+    X+4;
+d($+) -> 62;
+d($/) -> 63;
+d(_) -> 63.
+
+
+encode_base64([]) ->
+    [];
+encode_base64([A]) ->
+    [e(A bsr 2), e((A band 3) bsl 4), $=, $=];
+encode_base64([A,B]) ->
+    [e(A bsr 2), e(((A band 3) bsl 4) bor (B bsr 4)), e((B band 15) bsl 2), $=];
+encode_base64([A,B,C|Ls]) ->
+    encode_base64_do(A,B,C, Ls).
+encode_base64_do(A,B,C, Rest) ->
+    BB = (A bsl 16) bor (B bsl 8) bor C,
+    [e(BB bsr 18), e((BB bsr 12) band 63),
+     e((BB bsr 6) band 63), e(BB band 63)|encode_base64(Rest)].
+
+e(X) when X >= 0, X < 26 -> X+65;
+e(X) when X>25, X<52 ->     X+71;
+e(X) when X>51, X<62 ->     X-4;
+e(62) ->                    $+;
+e(63) ->                    $/;
+e(X) ->                     exit({bad_encode_base64_token, X}).
+
+%% Convert Erlang inet IP to list
+ip_to_list({IP, _Port}) ->
+    ip_to_list(IP);
+ip_to_list({A,B,C,D}) ->
+    lists:flatten(io_lib:format("~w.~w.~w.~w",[A,B,C,D])).
diff -r d551623afde5 deps/exmpp/src/compat/stringprep.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/compat/stringprep.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,82 @@
+%%%----------------------------------------------------------------------
+%%% File    : stringprep.erl
+%%% Author  : Alexey Shchepin <alexey@process-one.net>
+%%% Purpose : Interface to stringprep_drv
+%%% Created : 16 Feb 2003 by Alexey Shchepin <alexey@proces-one.net>
+%%%
+%%%
+%%% ejabberd, Copyright (C) 2002-2010   ProcessOne
+%%%
+%%% This program is free software; you can redistribute it and/or
+%%% modify it under the terms of the GNU General Public License as
+%%% published by the Free Software Foundation; either version 2 of the
+%%% License, or (at your option) any later version.
+%%%
+%%% This program is distributed in the hope that it will be useful,
+%%% but WITHOUT ANY WARRANTY; without even the implied warranty of
+%%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+%%% General Public License for more details.
+%%%
+%%% You should have received a copy of the GNU General Public License
+%%% along with this program; if not, write to the Free Software
+%%% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+%%% 02111-1307 USA
+%%%
+%%%----------------------------------------------------------------------
+
+-module(stringprep).
+-author('alexey@process-one.net').
+
+-export([start/0, start_link/0,
+	 tolower/1,
+	 nameprep/1,
+	 nodeprep/1,
+	 resourceprep/1]).
+
+-define(STRINGPREP_PORT, stringprep_port).
+
+-define(NAMEPREP_COMMAND, 1).
+-define(NODEPREP_COMMAND, 2).
+-define(RESOURCEPREP_COMMAND, 3).
+
+start() ->
+    exmpp_stringprep:start().
+
+start_link() ->
+    exmpp_stringprep:start_link().
+
+
+tolower(String) ->
+    try
+	exmpp_stringprep:to_lower(String)
+    catch
+	_Exception ->
+	    error
+    end.
+
+nameprep(String) ->
+    try
+	exmpp_stringprep:nameprep(String)
+    catch
+	_Exception ->
+	    error
+    end.
+
+nodeprep(String) ->
+    try
+	exmpp_stringprep:nodeprep(String)
+    catch
+	_Exception ->
+	    error
+    end.
+
+resourceprep(String) ->
+    try
+	exmpp_stringprep:resourceprep(String)
+    catch
+	_Exception ->
+	    error
+    end.
+
+
+
diff -r d551623afde5 deps/exmpp/src/compat/tls.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/compat/tls.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,127 @@
+%%%----------------------------------------------------------------------
+%%% File    : tls.erl
+%%% Author  : Alexey Shchepin <alexey@process-one.net>
+%%% Purpose : Interface to openssl
+%%% Created : 24 Jul 2004 by Alexey Shchepin <alexey@process-one.net>
+%%%
+%%%
+%%% ejabberd, Copyright (C) 2002-2010   ProcessOne
+%%%
+%%% This program is free software; you can redistribute it and/or
+%%% modify it under the terms of the GNU General Public License as
+%%% published by the Free Software Foundation; either version 2 of the
+%%% License, or (at your option) any later version.
+%%%
+%%% This program is distributed in the hope that it will be useful,
+%%% but WITHOUT ANY WARRANTY; without even the implied warranty of
+%%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+%%% General Public License for more details.
+%%%
+%%% You should have received a copy of the GNU General Public License
+%%% along with this program; if not, write to the Free Software
+%%% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+%%% 02111-1307 USA
+%%%
+%%%----------------------------------------------------------------------
+
+-module(tls).
+-author('alexey@process-one.net').
+
+-export([start/0, start_link/0,
+	 tcp_to_tls/2, tls_to_tcp/1,
+	 send/2,
+	 recv/2, recv/3, recv_data/2,
+	 setopts/2,
+	 sockname/1, peername/1,
+	 controlling_process/2,
+	 close/1,
+	 get_peer_certificate/1,
+	 get_verify_result/1]).
+
+-define(SET_CERTIFICATE_FILE_ACCEPT, 1).
+-define(SET_CERTIFICATE_FILE_CONNECT, 2).
+-define(SET_ENCRYPTED_INPUT,  3).
+-define(SET_DECRYPTED_OUTPUT, 4).
+-define(GET_ENCRYPTED_OUTPUT, 5).
+-define(GET_DECRYPTED_INPUT,  6).
+-define(GET_PEER_CERTIFICATE, 7).
+-define(GET_VERIFY_RESULT,    8).
+
+start() ->
+    exmpp_tls:start().
+
+start_link() ->
+    exmpp_tls:start_link().
+
+
+tcp_to_tls(TCPSocket, Options) ->
+    case lists:keysearch(certfile, 1, Options) of
+	{value, {certfile, CertFile}} ->
+	    Socket_Desc = {gen_tcp, TCPSocket},
+	    Command = case lists:member(connect, Options) of
+			  true ->
+			      connect;
+			  false ->
+			      accept
+		      end,
+	    try
+		TLSSock = exmpp_tls:Command(Socket_Desc,
+					    {x509, CertFile, CertFile},
+					    false, []),
+		{ok, TLSSock}
+	    catch
+		Exception ->
+		    {error, Exception}
+	    end;
+	false ->
+	    {error, no_certfile}
+    end.
+
+tls_to_tcp(TLSSock) ->
+    {gen_tcp, TCPSocket} = exmpp_tls:quiet_shutdown(TLSSock),
+    TCPSocket.
+
+recv(Socket, Length) ->
+    recv(Socket, Length, infinity).
+recv(TLSSock, _Length, Timeout) ->
+    exmpp_tls:recv(TLSSock, Timeout).
+
+recv_data(_TLSSock, "") ->
+    %% This catch an recv_data with no data that ejabberd send to initiate
+    %% implicitly the handshake.
+    {ok, <<>>};
+recv_data(TLSSock, Packet) ->
+    exmpp_tls:recv_data(TLSSock, Packet).
+
+send(TLSSock, Packet) ->
+    exmpp_tls:send(TLSSock, Packet).
+
+
+setopts(TLSSock, Opts) ->
+    exmpp_tls:setopts(TLSSock, Opts).
+
+sockname(TLSSock) ->
+    exmpp_tls:sockname(TLSSock).
+
+peername(TLSSock) ->
+    exmpp_tls:peername(TLSSock).
+
+controlling_process(TLSSock, Pid) ->
+    exmpp_tls:controlling_process(TLSSock, Pid).
+
+close(TLSSock) ->
+    exmpp_tls:close(TLSSock).
+
+get_peer_certificate(TLSSock) ->
+    try
+	Cert = exmpp_tls:get_peer_certificate(TLSSock),
+	{ok, Cert}
+    catch
+	_Exception ->
+	    error
+    end.
+
+get_verify_result(TLSSock) ->
+    exmpp_tls:get_verify_result(TLSSock).
+
+
diff -r d551623afde5 deps/exmpp/src/compat/xml.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/compat/xml.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,117 @@
+%%%----------------------------------------------------------------------
+%%% File    : xml.erl
+%%% Author  : Alexey Shchepin <alexey@process-one.net>
+%%% Purpose : XML utils
+%%% Created : 20 Nov 2002 by Alexey Shchepin <alexey@process-one.net>
+%%%
+%%%
+%%% ejabberd, Copyright (C) 2002-2010   ProcessOne
+%%%
+%%% This program is free software; you can redistribute it and/or
+%%% modify it under the terms of the GNU General Public License as
+%%% published by the Free Software Foundation; either version 2 of the
+%%% License, or (at your option) any later version.
+%%%
+%%% This program is distributed in the hope that it will be useful,
+%%% but WITHOUT ANY WARRANTY; without even the implied warranty of
+%%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+%%% General Public License for more details.
+%%%
+%%% You should have received a copy of the GNU General Public License
+%%% along with this program; if not, write to the Free Software
+%%% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+%%% 02111-1307 USA
+%%%
+%%%----------------------------------------------------------------------
+
+-module(xml).
+-author('alexey@process-one.net').
+
+-include("exmpp.hrl").
+
+-export([element_to_string/1,
+	 crypt/1, make_text_node/1,
+	 remove_cdata/1,
+	 get_cdata/1, get_tag_cdata/1,
+	 get_attr/2, get_attr_s/2,
+	 get_tag_attr/2, get_tag_attr_s/2,
+	 get_subtag/2, get_subtag_cdata/2,
+	 get_path_s/2,
+	 replace_tag_attr/3]).
+
+%% Select at compile time how to escape characters in binary text
+%% nodes.
+%% Can be choosen with ./configure --enable-full-xml
+-ifdef(FULL_XML_SUPPORT).
+-define(ESCAPE_BINARY(CData), make_text_node(CData)).
+-else.
+-define(ESCAPE_BINARY(CData), crypt(CData)).
+-endif.
+
+element_to_string(El) ->
+    exmpp_xml:document_to_list(El).
+
+crypt(S) ->
+    exmpp_xml:escape_using_entities(S).
+
+%% Make a cdata_binary depending on what characters it contains
+make_text_node(CData) ->
+    exmpp_xml:escape_using_cdata(CData).
+
+remove_cdata(L) -> exmpp_xml:remove_cdata_from_list(L).
+
+get_cdata(L) ->
+    exmpp_xml:get_cdata_from_list_as_list(L).
+
+get_tag_cdata({xmlelement, _Name, _Attrs, Els}) ->
+    get_cdata(Els).
+
+get_attr(AttrName, Attrs) ->
+    case exmpp_xml:get_attribute_from_list_as_list(Attrs, AttrName,
+						   undefined) of
+	undefined ->
+	    false;
+	Val ->
+	    {value, Val}
+    end.
+
+get_attr_s(AttrName, Attrs) ->
+    exmpp_xml:get_attribute_from_list_as_list(Attrs, AttrName, "").
+
+get_tag_attr(AttrName, #xmlel{attrs = Attrs}) ->
+    get_attr(AttrName, Attrs);
+get_tag_attr(AttrName, #xmlelement{attrs = Attrs}) ->
+    get_attr(AttrName, Attrs).
+
+get_tag_attr_s(AttrName, El) ->
+    exmpp_xml:get_attribute_as_list(El, AttrName, "").
+
+
+get_subtag(El, Name) ->
+    case exmpp_xml:get_element(El, Name) of
+	undefined -> false;
+	Sub_El    -> Sub_El
+    end.
+
+get_subtag_cdata(Tag, Name) ->
+    exmpp_xml:get_cdata(Tag, Name).
+
+get_path_s(El, []) ->
+    El;
+get_path_s(El, [{elem, Name} | Path]) ->
+    case get_subtag(El, Name) of
+	false ->
+	    "";
+	SubEl ->
+	    get_path_s(SubEl, Path)
+    end;
+get_path_s(El, [{attr, Name}]) ->
+    get_tag_attr_s(Name, El);
+get_path_s(El, [cdata]) ->
+    get_tag_cdata(El).
+
+
+replace_tag_attr(Attr, Value, El) ->
+    exmpp_xml:set_attribute(El, Attr, Value).
+
+
diff -r d551623afde5 deps/exmpp/src/compat/xml_stream.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/compat/xml_stream.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,70 @@
+%%%----------------------------------------------------------------------
+%%% File    : xml_stream.erl
+%%% Author  : Alexey Shchepin <alexey@process-one.net>
+%%% Purpose : Parse XML streams
+%%% Created : 17 Nov 2002 by Alexey Shchepin <alexey@process-one.net>
+%%%
+%%%
+%%% ejabberd, Copyright (C) 2002-2010   ProcessOne
+%%%
+%%% This program is free software; you can redistribute it and/or
+%%% modify it under the terms of the GNU General Public License as
+%%% published by the Free Software Foundation; either version 2 of the
+%%% License, or (at your option) any later version.
+%%%
+%%% This program is distributed in the hope that it will be useful,
+%%% but WITHOUT ANY WARRANTY; without even the implied warranty of
+%%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+%%% General Public License for more details.
+%%%
+%%% You should have received a copy of the GNU General Public License
+%%% along with this program; if not, write to the Free Software
+%%% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+%%% 02111-1307 USA
+%%%
+%%%----------------------------------------------------------------------
+
+-module(xml_stream).
+-author('alexey@process-one.net').
+
+-export([new/1,
+	 new/2,
+	 parse/2,
+	 close/1,
+	 parse_element/1]).
+
+-define(XML_START, 0).
+-define(XML_END,   1).
+-define(XML_CDATA, 2).
+-define(XML_ERROR, 3).
+
+-define(PARSE_COMMAND, 0).
+-define(PARSE_FINAL_COMMAND, 1).
+
+
+new(CallbackPid) ->
+    new(CallbackPid, infinity).
+
+new(CallbackPid, MaxSize) ->
+    exmpp_xmlstream:start({gen_fsm, CallbackPid}, [{maxsize, MaxSize}]).
+
+
+parse(State, Str) ->
+    try
+        {ok, New_State} = exmpp_xmlstream:parse(State, Str),
+        New_State
+    catch
+	throw:{xml_parser, parsing, stanza_too_big, _} ->
+	    exmpp_xmlstream:send_events(
+	      State,
+	      [{xmlstreamerror, "XML stanza is too big"}]),
+            State
+    end.
+
+close(State) ->
+    exmpp_xmlstream:stop(State).
+
+
+parse_element(Str) ->
+    exmpp_xmlstream:parse_element(Str).
+
diff -r d551623afde5 deps/exmpp/src/core/exmpp.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/core/exmpp.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,82 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> provides callbacks for
+%% application(3) as well as some generic utilities for other modules of
+%% this application.
+%%
+%% <p>
+%% It's not intended to be used directly.
+%% </p>
+
+-module(exmpp).
+
+-behaviour(application).
+
+%% Initialization.
+-export([
+	 start/0,
+	 version/0
+	]).
+
+%% application(3erl) callbacks.
+-export([
+	 start/2,
+	 stop/1,
+	 config_change/3
+	]).
+
+%% --------------------------------------------------------------------
+%% Generic utilities.
+%% --------------------------------------------------------------------
+
+%% @spec () -> ok
+%% @doc Start applications which exmpp depends on then start exmpp.
+
+start() ->
+    application:start(exmpp).
+
+%% @spec () -> Version
+%%     Version = string()
+%% @doc Return the version of the application.
+
+version() ->
+    {ok, Version} = application:get_key(exmpp, vsn),
+    Version.
+
+%% --------------------------------------------------------------------
+%% application(3erl) callbacks.
+%% --------------------------------------------------------------------
+
+%% @hidden
+
+start(_Start_Type, _Start_Args) ->
+    exmpp_sup:start_link().
+
+%% @hidden
+
+stop(_State) ->
+    ok.
+
+%% @hidden
+
+config_change(Changed, New, Removed) ->
+    error_logger:info_msg("Config change:~n"
+			  "Changed: ~p~n"
+			  "New: ~p~n"
+			  "Removed: ~p~n",
+			  [Changed, New, Removed]),
+    ok.
diff -r d551623afde5 deps/exmpp/src/core/exmpp_compress.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/core/exmpp_compress.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,653 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> provides functions to handle
+%% stream compression.
+
+-module(exmpp_compress).
+
+-behaviour(gen_server).
+
+%% Initialization.
+-export([
+	 start/0,
+	 start_link/0
+	]).
+
+%% Registry handling.
+-export([
+	 register_engine/3,
+	 register_engine/4,
+	 get_compress_methods/0,
+	 get_engine_names/0,
+	 get_engine_names/1,
+	 get_prefered_engine_name/1,
+	 is_engine_available/1,
+	 get_engine_driver/1
+	]).
+
+%% Compression activation.
+-export([
+	 enable_compression/2,
+	 disable_compression/1
+	]).
+
+%% Common socket API.
+-export([
+	 send/2,
+	 recv/1,
+	 recv/2,
+	 recv_data/2,
+	 getopts/2,
+	 setopts/2,
+	 peername/1,
+	 sockname/1,
+	 controlling_process/2,
+	 close/1,
+	 port_revision/1
+	]).
+
+%% gen_server(3erl) callbacks.
+-export([
+	 init/1,
+	 handle_call/3,
+	 handle_cast/2,
+	 handle_info/2,
+	 terminate/2,
+	 code_change/3
+	]).
+
+-record(state, {engines,
+		by_compress_method
+	       }).
+
+-record(compress_engine, {name,
+			  driver_path,
+			  driver,
+			  compress_methods = []
+			 }).
+
+-record(compress_socket, {socket,
+			  packet_mode = binary,
+			  port
+			 }).
+
+-define(SERVER, ?MODULE).
+-define(DEFAULT_ENGINE, zlib).
+
+-define(COMMAND_SET_COMPRESS_METHOD, 1).
+-define(COMMAND_SET_COMPRESS_LEVEL,  2).
+-define(COMMAND_PREPARE_COMPRESS,    3).
+-define(COMMAND_PREPARE_UNCOMPRESS,  4).
+-define(COMMAND_COMPRESS,            5).
+-define(COMMAND_UNCOMPRESS,          6).
+-define(COMMAND_SVN_REVISION,        7).
+
+%% --------------------------------------------------------------------
+%% Initialization.
+%% --------------------------------------------------------------------
+
+%% @hidden
+
+start() ->
+    Ret = gen_server:start({local, ?SERVER}, ?MODULE, [], []),
+    register_builtin_engines(),
+    Ret.
+
+%% @hidden
+
+start_link() ->
+    Ret = gen_server:start_link({local, ?SERVER}, ?MODULE, [], []),
+    register_builtin_engines(),
+    Ret.
+
+-ifdef(HAVE_ZLIB).
+-define(REGISTER_ZLIB,
+	register_builtin_engine(zlib, exmpp_compress_zlib,
+				[{zlib, 10}, {gzip, 10}])).
+-else.
+-define(REGISTER_ZLIB, ok).
+-endif.
+
+register_builtin_engines() ->
+    ?REGISTER_ZLIB,
+    ok.
+
+register_builtin_engine(Name, Driver, Compress_Methods) ->
+    try
+        register_engine(Name, Driver, Compress_Methods)
+    catch
+        throw:{port_driver, load, Reason, Driver_Name} ->
+            error_logger:warning_msg("Failed to load driver \"~s\": ~s~n",
+				     [Driver_Name,
+				      erl_ddll:format_error(Reason)])
+    end.
+
+%% --------------------------------------------------------------------
+%% Registry handling.
+%% --------------------------------------------------------------------
+
+%% @spec (Name, Driver, Compress_Methods) -> ok
+%%     Name = atom()
+%%     Driver = atom()
+%%     Compress_Mehods = [{atom(), Priority}]
+%%     Priority = integer()
+%% @doc Add a new compression engine.
+
+register_engine(Name, Driver, Compress_Methods) ->
+    register_engine(Name, undefined, Driver, Compress_Methods).
+
+%% @spec (Name, Driver_Path, Driver, Compress_Methods) -> ok
+%%     Name = atom()
+%%     Driver_Path = string()
+%%     Driver = atom()
+%%     Compress_Mehods = [{atom(), Priority}]
+%%     Priority = integer()
+%% @doc Add a new compression engine.
+
+register_engine(Name, Driver_Path, Driver, Compress_Methods)
+  when is_atom(Name), is_list(Compress_Methods), length(Compress_Methods) > 0 ->
+    Engine = #compress_engine{name = Name,
+			      driver_path = Driver_Path,
+			      driver = Driver,
+			      compress_methods = Compress_Methods
+			     },
+    case gen_server:call(?SERVER, {register_engine, Engine}) of
+        ok                 -> ok;
+        {error, Exception} -> throw(Exception)
+    end.
+
+%% @spec () -> [Compress_Method]
+%%     Compress_Method = atom()
+%% @doc Return the list of supported compress methods.
+
+get_compress_methods() ->
+    gen_server:call(?SERVER, get_compress_methods).
+
+%% @spec () -> [Engine_Name]
+%%     Engine_Name = atom()
+%% @doc Return the list of compression engines.
+
+get_engine_names() ->
+    gen_server:call(?SERVER, get_engine_names).
+
+%% @spec (Compress_Method) -> [Engine_Name]
+%%     Compress_Method = atom()
+%%     Engine_Name = atom()
+%% @doc Return the list of compression engines which support the given compress method.
+%%
+%% The list is sorted from the most to the least prefered engine.
+
+get_engine_names(Compress_Method) ->
+    Engines = gen_server:call(?SERVER, {get_engines, Compress_Method}),
+    [E#compress_engine.name || E <- Engines].
+
+%% @spec (Compress_Method) -> [Engine_Name]
+%%     Compress_Method = atom()
+%%     Engine_Name = atom()
+%% @doc Return the name of the prefered compression engines which support the
+%% given compress method.
+
+get_prefered_engine_name(Compress_Method) ->
+    case get_prefered_engine(Compress_Method) of
+        undefined -> undefined;
+        Engine    -> Engine#compress_engine.name
+    end.
+
+get_prefered_engine(Compress_Method) ->
+    Engines = gen_server:call(?SERVER, {get_engines, Compress_Method}),
+    case Engines of
+        []           -> undefined;
+        [Engine | _] -> Engine
+    end.
+
+%% @spec (Engine_Name) -> bool()
+%%     Engine_Name = atom()
+%% @doc Tell if `Engine_Name' is available.
+
+is_engine_available(Engine_Name) ->
+    case gen_server:call(?SERVER, {get_engine, Engine_Name}) of
+        undefined -> false;
+        _         -> true
+    end.
+
+%% @spec (Engine_Name) -> Driver_Name
+%%     Engine_Name = atom()
+%%     Driver_Name = atom()
+%% @doc Return the port driver name associated to the given engine.
+
+get_engine_driver(Engine_Name) ->
+    case gen_server:call(?SERVER, {get_engine, Engine_Name}) of
+        undefined                              -> undefined;
+        #compress_engine{driver = Driver_Name} -> Driver_Name
+    end.
+
+%% --------------------------------------------------------------------
+%% Compression activation.
+%% --------------------------------------------------------------------
+
+%% @spec (Socket_Desc, Options) -> Compress_Socket
+%%     Socket_Desc = {Mod, Socket}
+%%     Mod = atom()
+%%     Socket = term()
+%%     Options = [Option]
+%%     Option = {compress_method, Method} | {engine, Engine} | {mode, Mode} | {compress_level, Level}
+%%     Method = atom()
+%%     Engine = atom()
+%%     Mode = binary | list
+%%     Level = integer()
+%%     Compress_Socket = compress_socket()
+%% @doc Enable compression over the given socket.
+
+enable_compression(Socket_Desc, Options) ->
+    %% Start a port driver instance.
+    Driver_Name = get_engine_from_options(Options),
+    Port = exmpp_internals:open_port(Driver_Name),
+
+    %% Initialize the port.
+    try
+	%% Set compression method.
+        case proplists:get_value(compress_method, Options) of
+            undefined -> ok;
+            CM        -> engine_set_compress_method(Port, CM)
+        end,
+
+	%% Set compression level.
+        Level = proplists:get_value(compress_level, Options),
+        engine_set_compress_level(Port, Level),
+
+	%% Packet mode.
+        Packet_Mode = proplists:get_value(mode, Options, binary),
+
+	%% Enable compression.
+        engine_prepare_compress(Port),
+        engine_prepare_uncompress(Port),
+        #compress_socket{socket = Socket_Desc,
+			 packet_mode = Packet_Mode,
+			 port = Port}
+    catch
+        _:Exception ->
+            exmpp_internals:close_port(Port),
+            throw(Exception)
+    end.
+
+%% @spec (Compress_Socket) -> Socket_Desc
+%%     Compress_Socket = compress_socket()
+%%     Socket_Desc = {Mod, Socket}
+%%     Mod = atom()
+%%     Socket = term()
+%% @doc Disable compression and return the underlying socket.
+
+disable_compression(#compress_socket{socket = Socket_Desc, port = Port}) ->
+    exmpp_internals:close_port(Port),
+    Socket_Desc.
+
+%% --------------------------------------------------------------------
+%% Activation helpers.
+%% --------------------------------------------------------------------
+
+%% Choose the most appropriate engine.
+get_engine_from_options(Options) ->
+    Engine_Name =
+	case proplists:get_value(engine, Options) of
+	    undefined ->
+		case proplists:get_value(compress_method, Options) of
+		    undefined ->
+			case get_engine_names() of
+			    [] ->
+				throw({compress, options, no_engine_available,
+				       undefined});
+			    [Name | _] = Names ->
+				case lists:member(?DEFAULT_ENGINE, Names) of
+				    true  -> ?DEFAULT_ENGINE;
+				    false -> Name
+				end
+			end;
+		    CM ->
+			get_prefered_engine_name(CM)
+		end;
+	    Name ->
+		case is_engine_available(Name) of
+		    true ->
+			Name;
+		    false ->
+			throw({compress, options, engine_unavailable, Name})
+		end
+	end,
+    get_engine_driver(Engine_Name).
+
+%% --------------------------------------------------------------------
+%% Common socket API.
+%% --------------------------------------------------------------------
+
+%% @spec (Compress_Socket, Orig_Packet) -> ok | {error, Reason}
+%%     Compress_Socket = compress_socket()
+%%     Orig_Packet = binary() | list()
+%%     Reason = term()
+%% @doc Send `Orig_Packet' over a compressed connection.
+
+send(#compress_socket{socket = Socket_Desc, port = Port}, Packet) ->
+    try
+        Compressed = engine_compress(Port, Packet),
+        exmpp_internals:gen_send(Socket_Desc, Compressed)
+    catch
+        Exception ->
+            {error, Exception}
+    end.
+
+%% @spec (Compress_Socket) -> {ok, Orig_Packet} | {error, Reason}
+%%     Compress_Socket = compress_socket()
+%%     Orig_Packet = binary() | list()
+%%     Reason = term()
+%% @doc Receive data over a compressed connection.
+
+recv(Compress_Socket) ->
+    recv(Compress_Socket, infinity).
+
+%% @spec (Compress_Socket, Timeout) -> {ok, Orig_Packet} | {error, Reason}
+%%     Compress_Socket = compress_socket()
+%%     Timeout = integer()
+%%     Orig_Packet = binary() | list()
+%%     Reason = term()
+%% @doc Receive data over a compressed connection.
+
+recv(#compress_socket{socket = Socket_Desc} = Compress_Socket, Timeout) ->
+    try
+        case exmpp_internals:gen_recv(Socket_Desc, Timeout) of
+            {ok, Packet} ->
+                recv_data(Compress_Socket, Packet);
+            {error, Reason} ->
+                {error, Reason}
+        end
+    catch
+        Exception ->
+            {error, Exception}
+    end.
+
+%% @spec (Compress_Socket, Packet) -> {ok, Orig_Packet} | {error, Reason}
+%%     Compress_Socket = compress_socket()
+%%     Packet = binary() | list()
+%%     Orig_Packet = binary() | list()
+%%     Reason = term()
+%% @doc Uncompressed already received data.
+
+recv_data(#compress_socket{port = Port, packet_mode = Packet_Mode}, Packet) ->
+    try
+        Uncompressed = engine_uncompress(Port, Packet),
+        case Packet_Mode of
+            binary -> {ok, Uncompressed};
+            list   -> {ok, binary_to_list(Uncompressed)}
+        end
+    catch
+        Exception ->
+            {error, Exception}
+    end.
+
+%% @spec (Compress_Socket, Options) -> {ok, Option_Values} | {error, posix()}
+%%     Compress_Socket = tls_socket()
+%%     Mod = atom()
+%%     Socket = term()
+%%     Options = list()
+%%     Option_Values = list()
+%% @doc Sets one or more options for a socket.
+
+getopts(#compress_socket{socket = Socket_Desc}, Options) ->
+    exmpp_internals:gen_getopts(Socket_Desc, Options).
+
+%% @spec (Compress_Socket, Options) -> ok | {error, posix()}
+%%     Compress_Socket = tls_socket()
+%%     Mod = atom()
+%%     Socket = term()
+%%     Options = list()
+%% @doc Sets one or more options for a socket.
+
+setopts(#compress_socket{socket = Socket_Desc}, Options) ->
+    exmpp_internals:gen_setopts(Socket_Desc, Options).
+
+%% @spec (Compress_Socket) -> {ok, {Address, Port}} | {error, posix()}
+%%     Compress_Socket = tls_socket()
+%%     Mod = atom()
+%%     Socket = term()
+%%     Address = ip_address()
+%%     Port = integer()
+%% @doc Returns the address and port for the other end of a connection.
+
+peername(#compress_socket{socket = Socket_Desc}) ->
+    exmpp_internals:gen_peername(Socket_Desc).
+
+%% @spec (Compress_Socket) -> {ok, {Address, Port}} | {error, posix()}
+%%     Compress_Socket = tls_socket()
+%%     Mod = atom()
+%%     Socket = term()
+%%     Address = ip_address()
+%%     Port = integer()
+%% @doc Returns the local address and port number for a socket.
+
+sockname(#compress_socket{socket = Socket_Desc}) ->
+    exmpp_internals:gen_sockname(Socket_Desc).
+
+%% @spec (Compress_Socket, Pid) -> ok | {error, Reason}
+%%     Compress_Socket = compress_socket()
+%%     Pid = pid()
+%%     Reason = term()
+%% @doc Change the controlling socket of the underlying socket.
+
+controlling_process(#compress_socket{socket = Socket_Desc}, Pid) ->
+    exmpp_internals:gen_controlling_process(Socket_Desc, Pid).
+
+%% @spec (Compress_Socket) -> ok | {error, Reason}
+%%     Compress_Socket = compress_socket()
+%%     Reason = term()
+%% @doc Turn off compression and close the underlying socket.
+
+close(#compress_socket{socket = Socket_Desc} = Compress_Socket) ->
+    %% First, turn off compression.
+    disable_compression(Compress_Socket),
+    %% Close the underlying socket.
+    exmpp_internals:gen_close(Socket_Desc).
+
+%% @hidden
+
+port_revision(#compress_socket{port = Port}) ->
+    engine_svn_revision(Port).
+
+%% --------------------------------------------------------------------
+%% Engine function wrappers.
+%% --------------------------------------------------------------------
+
+control(Port, Command, Data) ->
+    case port_control(Port, Command, Data) of
+        <<0, Result/binary>> -> Result;
+        <<1, Error/binary>>  -> {error, binary_to_term(Error)}
+    end.
+
+engine_set_compress_method(Port, Method) ->
+    case control(Port, ?COMMAND_SET_COMPRESS_METHOD,
+		 term_to_binary(Method)) of
+        {error, Reason} ->
+            throw({compress, compress, set_compress_method, Reason});
+        _ ->
+            ok
+    end.
+
+engine_set_compress_level(Port, Level) ->
+    case control(Port, ?COMMAND_SET_COMPRESS_LEVEL,
+		 term_to_binary(Level)) of
+        {error, Reason} ->
+            throw({compress, compress, set_compress_level, Reason});
+        _ ->
+            ok
+    end.
+
+engine_prepare_compress(Port) ->
+    case control(Port, ?COMMAND_PREPARE_COMPRESS, <<>>) of
+        {error, Reason} ->
+            throw({compress, compress, prepare_compress, Reason});
+        _ ->
+            ok
+    end.
+
+engine_prepare_uncompress(Port) ->
+    case control(Port, ?COMMAND_PREPARE_UNCOMPRESS, <<>>) of
+        {error, Reason} ->
+            throw({compress, compress, prepare_uncompress, Reason});
+        _ ->
+            ok
+    end.
+
+engine_compress(Port, Data) when is_list(Data) ->
+    engine_compress(Port, list_to_binary(Data));
+engine_compress(_Port, <<>>) ->
+    <<>>;
+engine_compress(Port, Data) ->
+    case control(Port, ?COMMAND_COMPRESS, Data) of
+        {error, Reason} ->
+            throw({compress, compress, do_compress, Reason});
+        Result ->
+            Result
+    end.
+
+engine_uncompress(Port, Data) when is_list(Data) ->
+    engine_uncompress(Port, list_to_binary(Data));
+engine_uncompress(_Port, <<>>) ->
+    <<>>;
+engine_uncompress(Port, Data) ->
+    case control(Port, ?COMMAND_UNCOMPRESS, Data) of
+        {error, Reason} ->
+            throw({compress, uncompress, do_uncompress, Reason});
+        Result ->
+            Result
+    end.
+
+engine_svn_revision(Port) ->
+    case control(Port, ?COMMAND_SVN_REVISION, <<>>) of
+        {error, Reason} ->
+            throw({compress, handshake, svn_revision, Reason});
+        Revision ->
+            binary_to_term(Revision)
+    end.
+
+%% --------------------------------------------------------------------
+%% gen_server(3erl) callbacks.
+%% --------------------------------------------------------------------
+
+%% @hidden
+
+init([]) ->
+    Engines = dict:new(),
+    By_CM = dict:new(),
+    {ok, #state{engines = Engines, by_compress_method = By_CM}}.
+
+%% @hidden
+
+handle_call({register_engine,
+	     #compress_engine{name = Name,
+			      compress_methods = Compress_Methods,
+			      driver_path = Driver_Path,
+			      driver = Driver_Name} = Engine},
+	    _From,
+	    #state{engines = Engines, by_compress_method = By_CM} = State) ->
+    try
+	%% Load the driver now.
+        case Driver_Path of
+            undefined ->
+                exmpp_internals:load_driver(Driver_Name);
+            _ ->
+                exmpp_internals:load_driver(Driver_Name, [Driver_Path])
+        end,
+	%% Add engine to the global list.
+        New_Engines = dict:store(Name, Engine, Engines),
+	%% Index engine by its compress methods.
+        Fun = fun({CM, Prio}, {E, CM_Dict}) ->
+		      New_CM_Dict =
+			  case dict:is_key(CM, CM_Dict) of
+			      true ->
+				  L = [{E, Prio} | dict:fetch(CM, CM_Dict)],
+				  New_L = lists:keysort(2, L),
+				  dict:store(CM, New_L, CM_Dict);
+			      false ->
+				  dict:store(CM, [{E, Prio}], CM_Dict)
+			  end,
+		      {E, New_CM_Dict}
+	      end,
+        {_, New_By_CM} = lists:foldl(Fun, {Engine, By_CM}, Compress_Methods),
+        {reply, ok, State#state{engines = New_Engines,
+				by_compress_method = New_By_CM
+			       }}
+    catch
+        _:Exception ->
+            {reply, {error, Exception}, State}
+    end;
+
+handle_call(get_compress_methods, _From,
+	    #state{by_compress_method = By_CM} = State) ->
+    {reply, dict:fetch_keys(By_CM), State};
+
+handle_call(get_engine_names, _From,
+	    #state{engines = Engines} = State) ->
+    {reply, dict:fetch_keys(Engines), State};
+
+handle_call({get_engines, CM}, _From,
+	    #state{by_compress_method = By_CM} = State) ->
+    case dict:is_key(CM, By_CM) of
+        true  -> {reply, [E || {E, _P} <- dict:fetch(CM, By_CM)], State};
+        false -> {reply, [], State}
+    end;
+
+handle_call({get_engine, Engine_Name}, _From,
+	    #state{engines = Engines} = State) ->
+    case dict:is_key(Engine_Name, Engines) of
+        true  -> {reply, dict:fetch(Engine_Name, Engines), State};
+        false -> {reply, undefined, State}
+    end;
+
+handle_call(Request, From, State) ->
+    error_logger:info_msg("~p:handle_call/3:~n- Request: ~p~n- From: ~p~n"
+			  "- State: ~p~n", [?MODULE, Request, From, State]),
+    {reply, ok, State}.
+
+%% @hidden
+
+handle_cast(Request, State) ->
+    error_logger:info_msg("~p:handle_cast/2:~n- Request: ~p~n"
+			  "- State: ~p~n", [?MODULE, Request, State]),
+    {noreply, State}.
+
+%% @hidden
+
+handle_info(Info, State) ->
+    error_logger:info_msg("~p:handle_info/2:~n- Info: ~p~n"
+			  "- State: ~p~n", [?MODULE, Info, State]),
+    {noreply, State}.
+
+%% @hidden
+
+code_change(Old_Vsn, State, Extra) ->
+    error_logger:info_msg("~p:code_change/3:~n- Old_Vsn: ~p~n- Extra: ~p~n"
+			  "- State: ~p~n", [?MODULE, Old_Vsn, Extra, State]),
+    {ok, State}.
+
+%% @hidden
+
+terminate(_Reason, _State) ->
+    ok.
+
+%% --------------------------------------------------------------------
+%% Documentation / type definitions.
+%% --------------------------------------------------------------------
+
+%% @type compress_socket().
+%% Compression socket obtained with {@link compress/2}.
diff -r d551623afde5 deps/exmpp/src/core/exmpp_dialback.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/core/exmpp_dialback.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,114 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> provides functions to handle
+%% server dialback method.
+
+-module(exmpp_dialback).
+
+-include("exmpp.hrl").
+
+%% Creating elements.
+-export([
+	 key/3,
+	 verify_request/4,
+	 verify_response/2,
+	 validate/1,
+	 validate/2
+	]).
+
+%% --------------------------------------------------------------------
+%% Creating elements.
+%% --------------------------------------------------------------------
+
+%% @spec (From, To, Key) -> Result
+%%     From = exmpp_jid:jid() | string()
+%%     To = exmpp_jid:jid() | string()
+%%     Key = binary() | string()
+%%     Result = exmpp_xml:xmlel()
+%% @doc Prepare a `<db:result/>' element to send the key to the
+%% Receiving Server.
+
+key(From, To, Key) ->
+    Attrs1 = exmpp_stanza:set_sender_in_attrs([], From),
+    Attrs2 = exmpp_stanza:set_recipient_in_attrs(Attrs1, To),
+    Result = #xmlel{ns = ?NS_DIALBACK,
+		    declared_ns = [{?NS_DIALBACK, ?NS_DIALBACK_pfx}],
+		    name = 'result',
+		    attrs = Attrs2
+		   },
+    exmpp_xml:set_cdata(Result, Key).
+
+%% @spec (From, To, ID, Key) -> Request
+%%     From = exmpp_jid:jid() | string()
+%%     To = exmpp_jid:jid() | string()
+%%     ID = binary() | string() | random
+%%     Key = binary() | string()
+%%     Request = exmpp_xml:xmlel()
+%% @doc Prepare a `<db:verify/>' element to send to the Authoritative
+%% Server.
+
+verify_request(From, To, ID, Key) ->
+    Attrs1 = exmpp_stanza:set_sender_in_attrs([], From),
+    Attrs2 = exmpp_stanza:set_recipient_in_attrs(Attrs1, To),
+    Attrs3 = exmpp_stanza:set_id_in_attrs(Attrs2, ID),
+    Request = #xmlel{ns = ?NS_DIALBACK,
+		     declared_ns = [{?NS_DIALBACK, ?NS_DIALBACK_pfx}],
+		     name = 'verify',
+		     attrs = Attrs3
+		    },
+    exmpp_xml:set_cdata(Request, Key).
+
+%% @spec (Request, Is_Valid) -> Response
+%%     Request = exmpp_xml:xmlel()
+%%     Is_Valid = bool()
+%%     Response = exmpp_xml:xmlel()
+%% @doc Prepare a `<db:verify/>' element to answer to the Receiving
+%% Server.
+
+verify_response(Request, Is_Valid) ->
+    Response = exmpp_stanza:reply_without_content(Request),
+    case Is_Valid of
+        true  -> exmpp_stanza:set_type(Response, "valid");
+        false -> exmpp_stanza:set_type(Response, "invalid")
+    end.
+
+%% @spec (Result) -> Response
+%%     Result = exmpp_xml:xmlel()
+%%     Response = exmpp_xml:xmlel()
+%% @doc Prepare a `<db:result/>' element to answer to the Originating
+%% Server.
+
+validate(Result) ->
+    Response = exmpp_stanza:reply_without_content(Result),
+    exmpp_stanza:set_type(Response, "valid").
+
+%% @spec (From, To) -> Response
+%%     From = exmpp_jid:jid() | string()
+%%     To = exmpp_jid:jid() | string()
+%%     Response = exmpp_xml:xmlel()
+%% @doc Prepare a `<db:result/>' element to answer to the Originating
+%% Server.
+
+validate(From, To) ->
+    Attrs1 = exmpp_stanza:set_sender_in_attrs([], From),
+    Attrs2 = exmpp_stanza:set_recipient_in_attrs(Attrs1, To),
+    Attrs3 = exmpp_stanza:set_type_in_attrs(Attrs2, "valid"),
+    #xmlel{ns = ?NS_DIALBACK,
+	   declared_ns = [{?NS_DIALBACK, ?NS_DIALBACK_pfx}],
+	   name = 'result',
+	   attrs = Attrs3
+	  }.
diff -r d551623afde5 deps/exmpp/src/core/exmpp_internals.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/core/exmpp_internals.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,281 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sebastien Pedron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> provides internal functions for
+%% other modules.
+
+-module(exmpp_internals).
+
+%% Port driver handling.
+-export([
+	 driver_dirs/0,
+	 load_driver/1,
+	 load_driver/2,
+	 unload_driver/1,
+	 open_port/1,
+	 close_port/1
+	]).
+
+%% Generic socket handling.
+-export([
+	 gen_recv/2,
+	 gen_send/2,
+	 gen_getopts/2,
+	 gen_setopts/2,
+	 gen_peername/1,
+	 gen_sockname/1,
+	 gen_controlling_process/2,
+	 gen_close/1
+	]).
+
+%% --------------------------------------------------------------------
+%% Port driver loading/unloading.
+%% --------------------------------------------------------------------
+
+%% @spec () -> Dirs | []
+%%     Dirs = [string()]
+%% @doc Return a list of directories to search port drivers in.
+
+-spec(driver_dirs/0 :: () -> [string()]).
+
+driver_dirs() ->
+    Mod_Path = case code:is_loaded(?MODULE) of
+		   {file, preloaded} ->
+		       undefined;
+		   {file, cover_compiled} ->
+		       case code:is_loaded(check_coverity) of
+			   {file, preloaded}      -> undefined;
+			   {file, cover_compiled} -> undefined;
+			   {file, Path}           -> Path
+		       end;
+		   {file, Path} ->
+		       Path
+	       end,
+    Dirs0 = case Mod_Path of
+		undefined ->
+		    [];
+		_ ->
+		    Base_Dir = filename:dirname(filename:dirname(Mod_Path)),
+		    [
+		     filename:join([Base_Dir, "priv", "lib"]),
+		     filename:join([Base_Dir, "c_src", ".libs"]),
+		     filename:join([Base_Dir, "c_src"])
+		    ]
+	    end,
+    case code:priv_dir(exmpp) of
+        {error, _Reason} -> Dirs0;
+        Priv_Dir         -> Dirs0 ++ [filename:join(Priv_Dir, "lib")]
+    end.
+
+%% @spec (Driver_Name) -> ok
+%%     Driver_Name = atom()
+%% @throws {port_driver, load, Reason, Driver_Name}
+%% @doc Load the port driver `Driver_Name'.
+
+-spec(load_driver/1 :: (atom()) -> ok).
+
+load_driver(Driver_Name) ->
+    Dirs = driver_dirs(),
+    load_driver(Driver_Name, Dirs).
+
+%% @spec (Driver_Name, Dirs) -> ok
+%%     Driver_Name = atom()
+%%     Dirs = [string()]
+%% @throws {port_driver, load, Reason, Driver_Name}
+%% @doc Load the port driver `Driver_Name'.
+%%
+%% The driver is search in `Dirs'.
+
+-spec(load_driver/2 :: (atom(), [string()]) -> ok).
+
+load_driver(Driver_Name, Dirs) ->
+    load_driver1(Driver_Name, Dirs, undefined).
+
+%% This function will try to load `Driver_Name' from each `Dir' in the list.
+load_driver1(Driver_Name, [Dir | Rest], _Reason) ->
+    case erl_ddll:load_driver(Dir, Driver_Name) of
+        ok ->
+            ok;
+        {error, Reason} ->
+	    %% Next directory.
+            load_driver1(Driver_Name, Rest, Reason)
+    end;
+load_driver1(Driver_Name, [], Reason) ->
+    %% We walk through each directories without being able to load the driver.
+    throw({port_driver, load, Reason, Driver_Name}).
+
+%% @spec (Driver_Name) -> ok
+%%     Driver_Name = atom()
+%% @doc Unload the port driver `Driver_Name'.
+
+-spec(unload_driver/1 :: (atom()) -> ok).
+
+unload_driver(Driver_Name) ->
+    erl_ddll:unload_driver(Driver_Name),
+    ok.
+
+%% @spec (Driver_Name) -> Port
+%%     Driver_Name = atom()
+%%     Port = port()
+%% @throws {port_driver, open, {posix, Posix_Code}, Driver_Name}
+%% @doc Spawn a new port driver instance.
+
+-spec(open_port/1 :: (atom()) -> port()).
+
+open_port(Driver_Name) ->
+    try
+        erlang:open_port({spawn, atom_to_list(Driver_Name)}, [])
+    catch
+        exit:{Posix_Code, _Stack} ->
+            throw({port_driver, open, {posix, Posix_Code}, Driver_Name})
+    end.
+
+%% @spec (Port) -> true
+%%     Port = port()
+%% @doc Close a previously spawned port.
+%%
+%% `Port' was obtained with {@link open_port/1}.
+
+-spec(close_port/1 :: (port()) -> true).
+
+close_port(Port) ->
+    erlang:port_close(Port).
+
+%% --------------------------------------------------------------------
+%% Generic socket handling.
+%% --------------------------------------------------------------------
+
+%% @spec (Socket_Desc, Timeout) -> {ok, Packet} | {error, Reason}
+%%     Socket_Desc = {Mod, Socket}
+%%     Mod = atom()
+%%     Socket = term()
+%%     Timeout = integer() | infinity
+%%     Packet = [char()] | binary()
+%%     Reason = closed | posix()
+%% @doc Wrapper to abstract the `recv' function of multiple communication
+%% modules.
+
+-spec(gen_recv/2 ::
+      ({atom(), any()}, integer() | infinity) -> {ok, binary()} | {error, any()}).
+
+gen_recv({gen_tcp, Socket}, Timeout) ->
+    gen_tcp:recv(Socket, 0, Timeout);
+gen_recv({Mod, Socket}, Timeout) ->
+    Mod:recv(Socket, Timeout).
+
+%% @spec (Socket_Desc, Packet) -> ok | {error, Reason}
+%%     Socket_Desc = {Mod, Socket}
+%%     Mod = atom()
+%%     Socket = term()
+%%     Packet = [char()] | binary()
+%%     Reason = closed | posix()
+%% @doc Wrapper to abstract the `send' function of multiple communication
+%% modules.
+
+-spec(gen_send/2 :: ({atom(), any()}, binary()) -> ok | {error, any()}).
+
+gen_send({Mod, Socket}, Packet) ->
+    Mod:send(Socket, Packet).
+
+%% @spec (Socket_Desc, Options) -> Option_Values | {error, posix()}
+%%     Socket_Desc = {Mod, Socket}
+%%     Mod = atom()
+%%     Socket = term()
+%%     Options = list()
+%%     Option_Values = {ok,list()}
+%% @doc Wrapper to abstract the `getopts' function of multiple communication
+%% modules.
+
+-spec(gen_getopts/2 :: ({atom(), any()}, list()) -> list() | {error, any()}).
+
+gen_getopts({gen_tcp, Socket}, Options) ->
+    inet:getopts(Socket, Options);
+gen_getopts({Mod, Socket}, Options) ->
+    Mod:getopts(Socket, Options).
+
+%% @spec (Socket_Desc, Options) -> ok | {error, posix()}
+%%     Socket_Desc = {Mod, Socket}
+%%     Mod = atom()
+%%     Socket = term()
+%%     Options = list()
+%% @doc Wrapper to abstract the `setopts' function of multiple communication
+%% modules.
+
+-spec(gen_setopts/2 :: ({atom(), any()}, list()) -> ok | {error, any()}).
+
+gen_setopts({gen_tcp, Socket}, Options) ->
+    inet:setopts(Socket, Options);
+gen_setopts({Mod, Socket}, Options) ->
+    Mod:setopts(Socket, Options).
+
+%% @spec (Socket_Desc) -> {ok, {Address, Port}} | {error, posix()}
+%%     Socket_Desc = {Mod, Socket}
+%%     Mod = atom()
+%%     Socket = term()
+%%     Address = ip_address()
+%%     Port = integer()
+%% @doc Wrapper to abstract the `peername' function of multiple communication
+%% modules.
+
+-spec(gen_peername/1 :: ({atom(), any()}) -> {ok, any()} | {error, any()}).
+
+gen_peername({gen_tcp, Socket}) ->
+    inet:peername(Socket);
+gen_peername({Mod, Socket}) ->
+    Mod:peername(Socket).
+
+%% @spec (Socket_Desc) -> {ok, {Address, Port}} | {error, posix()}
+%%     Socket_Desc = {Mod, Socket}
+%%     Mod = atom()
+%%     Socket = term()
+%%     Address = ip_address()
+%%     Port = integer()
+%% @doc Wrapper to abstract the `sockname' function of multiple communication
+%% modules.
+
+-spec(gen_sockname/1 :: ({atom(), any()}) -> {ok, any()} | {error, any()}).
+
+gen_sockname({gen_tcp, Socket}) ->
+    inet:sockname(Socket);
+gen_sockname({Mod, Socket}) ->
+    Mod:sockname(Socket).
+
+%% @spec (Socket_Desc, Pid) -> ok | {error, Reason}
+%%     Socket_Desc = {Mod, Socket}
+%%     Pid = pid()
+%%     Mod = atom()
+%%     Socket = term()
+%%     Reason = close | not_owner | posix()
+%% @doc Wrapper to abstract the `controlling_process' function of
+%% multiple communication modules.
+
+-spec(gen_controlling_process/2 ::
+      ({atom(), any()}, pid()) -> ok | {error, any()}).
+
+gen_controlling_process({Mod, Socket}, Pid) ->
+    Mod:controlling_process(Socket, Pid).
+
+%% @spec (Socket_Desc) -> ok | {error, posix()}
+%%     Socket_Desc = {Mod, Socket}
+%%     Mod = atom()
+%%     Socket = term()
+%% @doc Wrapper to abstract the `close' function of multiple communication
+%% modules.
+
+-spec(gen_close/1 :: ({atom(), any()}) -> ok | {error, any()}).
+
+gen_close({Mod, Socket}) ->
+    Mod:close(Socket).
diff -r d551623afde5 deps/exmpp/src/core/exmpp_iq.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/core/exmpp_iq.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,532 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> provides helpers to do IQ common
+%% operations.
+
+-module(exmpp_iq).
+
+-include("exmpp.hrl").
+
+%% Creation.
+-export([
+	 get/2,
+	 get/3,
+	 set/2,
+	 set/3,
+	 result/1,
+	 result/2,
+	 error/2,
+	 error_without_original/2
+	]).
+
+%% #iq record conversion.
+-export([
+	 xmlel_to_iq/1,
+	 iq_to_xmlel/1,
+	 iq_to_xmlel/3
+	]).
+
+%% IQ standard attributes.
+-export([
+	 is_iq/1,
+	 is_iq_record/1,
+	 is_request/1,
+	 is_response/1,
+	 is_result/1,
+	 is_error/1,
+	 get_type/1,
+	 get_kind/1,
+	 get_request/1,
+	 get_result/1,
+	 get_payload/1,
+     get_payload_ns_as_atom/1
+	]).
+
+%% --------------------------------------------------------------------
+%% Documentation / type definitions.
+%% --------------------------------------------------------------------
+
+%% @type iq() = {iq, Kind, Type, ID, NS, Payload, Error, Lang, IQ_NS}
+%%     Kind = request | response
+%%     Type = get | set | result | error
+%%     ID = binary() | undefined
+%%     NS = atom() | string() | undefined
+%%     Payload = exmpp_xml:xmlel() | undefined
+%%     Error = exmpp_xml:xmlel() | undefined
+%%     Lang = binary() | undefined
+%%     IQ_NS = atom() | string() | undefined.
+%% Record representing an IQ stanza.
+%%
+%% It's created from an #xmlel using {@link xmlel_to_iq/1}. This record
+%% eases matching in function clauses. It may be passed to functions in
+%% {@link exmpp_stanza} and {@link exmpp_iq}. For other operations, it
+%% must be converted back to #xmlel using {@link iq_to_xmlel/1}.
+
+%% --------------------------------------------------------------------
+%% IQ creation.
+%% --------------------------------------------------------------------
+
+%% @spec (NS, Request) -> IQ
+%%     NS = atom()
+%%     Request = exmpp_xml:xmlel()
+%%     IQ = exmpp_xml:xmlel()
+%% @doc Prepare an `<iq/>' to transport the given `get' request.
+
+-spec(get/2 :: (xmlname(), #xmlel{}) -> #xmlel{}).
+
+get(NS, Request) ->
+    get(NS, Request, random).
+
+%% @spec (NS, Request, ID) -> Request_IQ
+%%     NS = atom()
+%%     Request = exmpp_xml:xmlel()
+%%     ID = binary() | string() | random
+%%     Request_IQ = exmpp_xml:xmlel()
+%% @doc Prepare an `<iq/>' to transport the given `get' request.
+
+-spec(get/3 ::
+      (xmlname(), #xmlel{}, binary() | string() | random) -> #xmlel{}).
+
+get(NS, Request, ID) ->
+    Attrs1 = exmpp_stanza:set_type_in_attrs([], <<"get">>),
+    Attrs2 = exmpp_stanza:set_id_in_attrs(Attrs1, ID),
+    #xmlel{ns = NS,
+	   name = 'iq',
+	   attrs = Attrs2,
+	   children = [Request]
+	  }.
+
+%% @spec (NS, Request) -> Request_IQ
+%%     NS = atom()
+%%     Request = exmpp_xml:xmlel()
+%%     Request_IQ = exmpp_xml:xmlel()
+%% @doc Prepare an `<iq/>' to transport the given `set' request.
+
+-spec(set/2 :: (xmlname(), #xmlel{}) -> #xmlel{}).
+
+set(NS, Request) ->
+    set(NS, Request, random).
+
+%% @spec (NS, Request, ID) -> Request_IQ
+%%     NS = atom()
+%%     Request = exmpp_xml:xmlel()
+%%     ID = binary() | string() | random
+%%     Request_IQ = exmpp_xml:xmlel()
+%% @doc Prepare an `<iq/>' to transport the given `set' request.
+
+-spec(set/3 ::
+      (xmlname(), #xmlel{}, binary() | string() | random) -> #xmlel{}).
+
+set(NS, Request, ID) ->
+    Attrs1 = exmpp_stanza:set_type_in_attrs([], <<"set">>),
+    Attrs2 = exmpp_stanza:set_id_in_attrs(Attrs1, ID),
+    #xmlel{ns = NS,
+	   name = 'iq',
+	   attrs = Attrs2,
+	   children = [Request]
+	  }.
+
+%% @spec (Request_IQ) -> Response_IQ
+%%     Request_IQ = exmpp_xml:xmlel() | iq()
+%%     Response_IQ = exmpp_xml:xmlel() | iq()
+%% @doc Prepare an `<iq/>' to answer to the given request.
+
+-spec(result/1 :: (#xmlel{} | #iq{}) -> #xmlel{} | #iq{}).
+
+result(Request_IQ) when ?IS_IQ(Request_IQ) ->
+    Attrs1 = exmpp_stanza:reply_from_attrs(Request_IQ#xmlel.attrs),
+    Attrs2 = exmpp_stanza:set_type_in_attrs(Attrs1, <<"result">>),
+    #xmlel{ns = Request_IQ#xmlel.ns,
+	   name = 'iq',
+	   attrs = Attrs2
+	  };
+result(Request_IQ_Rec) when ?IS_IQ_RECORD(Request_IQ_Rec) ->
+    Request_IQ_Rec#iq{kind = response,
+		      type = result,
+		      ns = undefined,
+		      payload = undefined
+		     }.
+
+%% @spec (Request_IQ, Result) -> Response_IQ
+%%     Request_IQ = exmpp_xml:xmlel() | iq()
+%%     Result = exmpp_xml:xmlel()
+%%     Response_IQ = exmpp_xml:xmlel() | iq()
+%% @doc Prepare an `<iq/>' to answer to the given request with `Result'.
+
+-spec(result/2 :: (#xmlel{} | #iq{}, #xmlel{}) -> #xmlel{} | #iq{}).
+
+result(Request_IQ, Result) when ?IS_IQ(Request_IQ) ->
+    exmpp_xml:set_children(result(Request_IQ), [Result]);
+result(Request_IQ_Rec, Result) when ?IS_IQ_RECORD(Request_IQ_Rec) ->
+    Result_IQ_Rec = result(Request_IQ_Rec),
+    Result_IQ_Rec#iq{ns = Result#xmlel.ns, payload = Result}.
+
+%% @spec (Request_IQ, Error) -> Response_IQ
+%%     Request_IQ = exmpp_xml:xmlel() | iq()
+%%     Error = exmpp_xml:xmlel() | atom()
+%%     Response_IQ = exmpp_xml:xmlel() | iq()
+%% @doc Prepare an `<iq/>' to notify an error.
+%%
+%% If `Error' is an atom, it must be a standard condition defined by
+%% XMPP Core.
+
+-spec(error/2 ::
+      (#xmlel{} | #iq{}, #xmlel{} | atom()) -> #xmlel{} | #iq{}).
+
+error(IQ, Condition)
+  when is_atom(Condition) andalso ?IS_IQ(IQ) ->
+    Error = exmpp_stanza:error(IQ#xmlel.ns, Condition),
+    error(IQ, Error);
+error(IQ_Rec, Condition)
+  when is_atom(Condition) andalso ?IS_IQ_RECORD(IQ_Rec) ->
+    Error = exmpp_stanza:error(IQ_Rec#iq.iq_ns, Condition),
+    error(IQ_Rec, Error);
+error(IQ, Error) when ?IS_IQ(IQ) ->
+    exmpp_stanza:reply_with_error(IQ, Error);
+error(IQ_Rec, Error) when ?IS_IQ_RECORD(IQ_Rec) ->
+    IQ_Rec#iq{kind = response,
+	      type = error,
+	      error = Error
+	     }.
+
+%% @spec (Request_IQ, Error) -> Response_IQ
+%%     Request_IQ = exmpp_xml:xmlel() | iq()
+%%     Error = exmpp_xml:xmlel() | atom()
+%%     Response_IQ = exmpp_xml:xmlel() | iq()
+%% @doc Prepare an `<iq/>' to notify an error.
+%%
+%% Child elements from `Request_IQ' are not kept.
+%%
+%% If `Error' is an atom, it must be a standard condition defined by
+%% XMPP Core.
+
+-spec(error_without_original/2 ::
+      (#xmlel{} | #iq{}, #xmlel{} | atom()) -> #xmlel{} | #iq{}).
+
+error_without_original(IQ, Condition) when is_atom(Condition) ->
+    Error = exmpp_stanza:error(IQ#xmlel.ns, Condition),
+    error_without_original(IQ, Error);
+error_without_original(IQ, Error) when ?IS_IQ(IQ) ->
+    exmpp_stanza:reply_with_error(IQ#xmlel{children = []}, Error);
+error_without_original(IQ_Rec, Error) when ?IS_IQ_RECORD(IQ_Rec) ->
+    IQ_Rec#iq{kind = response,
+	      type = error,
+	      error = Error,
+	      payload = undefined
+	     }.
+
+%% --------------------------------------------------------------------
+%% #iq record conversion.
+%% --------------------------------------------------------------------
+
+%% @spec (IQ) -> IQ_Rec
+%%     IQ = exmpp_xml:xmlel()
+%%     IQ_Rec = iq()
+%% @doc Convert an IQ stanza from its #xmlel form to its #iq form.
+
+-spec(xmlel_to_iq/1 :: (#xmlel{}) -> #iq{}).
+
+xmlel_to_iq(#xmlel{ns = IQ_NS} = IQ) when ?IS_IQ(IQ) ->
+    Kind = get_kind(IQ),
+    Type = get_type(IQ),
+    ID = exmpp_stanza:get_id(IQ),
+    {NS, Payload, Error} =
+	case get_payload(IQ) of
+	    #xmlel{ns = IQ_NS} = E when Type == 'error' ->
+		case get_request(IQ) of
+		    undefined ->
+			{undefined, undefined, E};
+		    #xmlel{ns = N} = P ->
+			{N, P, E}
+		end;
+	    #xmlel{ns = N} = P ->
+		{N, P, undefined};
+	    undefined when Type == 'result' ->
+		{undefined, undefined, undefined}
+	end,
+    Lang = exmpp_stanza:get_lang(IQ),
+    #iq{kind = Kind,
+	type = Type,
+	id = ID,
+	ns = NS,
+	payload = Payload,
+	error = Error,
+	lang = Lang,
+	iq_ns = IQ_NS
+       }.
+
+%% @spec (IQ_Rec) -> IQ
+%%     IQ_Rec = iq()
+%%     IQ = exmpp_xml:xmlel()
+%% @doc Convert an IQ stanza from its #iq form to its #xmlel form.
+
+-spec(iq_to_xmlel/1 :: (#iq{}) -> #xmlel{}).
+
+iq_to_xmlel(IQ_Rec) when ?IS_IQ_RECORD(IQ_Rec) ->
+    iq_to_xmlel2(IQ_Rec, []).
+
+%% @spec (IQ_Rec, Sender, Recipient) -> IQ
+%%     IQ_Rec = iq()
+%%     Sender = exmpp_jid:jid() | binary() | string()
+%%     Recipient = exmpp_jid:jid() | binary() | string()
+%%     IQ = exmpp_xml:xmlel()
+%% @doc Convert an IQ stanza from its #iq form to its #xmlel form and
+%% set the sender and recipient at the same time.
+
+-spec(iq_to_xmlel/3 ::
+      (#iq{}, exmpp_stanza:jidlike(), exmpp_stanza:jidlike()) -> #xmlel{}).
+
+iq_to_xmlel(IQ_Rec, Sender, Recipient) when ?IS_IQ_RECORD(IQ_Rec) ->
+    Attrs = exmpp_stanza:set_jids_in_attrs([], Sender, Recipient),
+    iq_to_xmlel2(IQ_Rec, Attrs).
+
+iq_to_xmlel2(#iq{type = Type, id = ID, lang = Lang, payload = Payload,
+		 error = Error, iq_ns = IQ_NS}, Attrs) ->
+    Attrs1 = exmpp_stanza:set_type_in_attrs(Attrs, Type),
+    Attrs2 = exmpp_stanza:set_id_in_attrs(Attrs1, ID),
+    Attrs3 = exmpp_stanza:set_lang_in_attrs(Attrs2, Lang),
+    Children1 = if
+		    Type == 'error' andalso Error /= undefined -> [Error];
+		    true                                       -> []
+		end,
+    Children2 = case Payload of
+		    undefined -> Children1;
+		    _         -> [Payload | Children1]
+		end,
+    #xmlel{ns = IQ_NS,
+	   name = 'iq',
+	   attrs = Attrs3,
+	   children = Children2
+	  }.
+
+%% --------------------------------------------------------------------
+%% IQ standard attributes.
+%% --------------------------------------------------------------------
+
+%% @spec (El) -> bool()
+%%     El = exmpp_xml:xmlel()
+%% @doc Tell if `El' is an IQ.
+%%
+%% You should probably use the `IS_IQ(El)' guard expression.
+
+-spec(is_iq/1 :: (#xmlel{}) -> bool()).
+
+is_iq(IQ) when ?IS_IQ(IQ) -> true;
+is_iq(_El)                -> false.
+
+%% @spec (El) -> bool()
+%%     El = iq()
+%% @doc Tell if `El' is an IQ record.
+%%
+%% You should probably use the `IS_IQ_RECORD(El)' guard expression.
+
+-spec(is_iq_record/1 :: (#iq{}) -> bool()).
+
+is_iq_record(IQ) when ?IS_IQ_RECORD(IQ) -> true;
+is_iq_record(_El)                       -> false.
+
+%% @spec (IQ) -> Type
+%%     IQ = exmpp_xml:xmlel() | iq()
+%%     Type = get | set | result | error | undefined
+%% @doc Return the type of the given `<iq/>'.
+
+-spec(get_type/1 ::
+      (#xmlel{} | #iq{}) -> get | set | result | error | undefined).
+
+get_type(IQ) when ?IS_IQ(IQ) ->
+    case exmpp_stanza:get_type(IQ) of
+        <<"get">>    -> 'get';
+        <<"set">>    -> 'set';
+        <<"result">> -> 'result';
+        <<"error">>  -> 'error';
+        _            -> undefined
+    end;
+get_type(#iq{type = Type}) ->
+    Type.
+
+%% @spec (IQ) -> Kind
+%%     IQ = exmpp_xml:xmlel() | iq()
+%%     Kind = request | response | undefined
+%% @doc Tell if an IQ is a request or a response.
+
+-spec(get_kind/1 ::
+      (#xmlel{} | #iq{}) -> request | response | undefined).
+
+get_kind(IQ) when ?IS_IQ(IQ) ->
+    case get_type(IQ) of
+        'get'    -> request;
+        'set'    -> request;
+        'result' -> response;
+        'error'  -> response;
+        _        -> undefined
+    end;
+get_kind(#iq{kind = Kind}) ->
+    Kind.
+
+%% @spec (IQ) -> bool()
+%%     IQ = exmpp_xml:xmlel() | iq()
+%% @doc Tell if the IQ is a request.
+
+-spec(is_request/1 :: (#xmlel{} | #iq{}) -> bool()).
+
+is_request(IQ) when ?IS_IQ(IQ) ->
+    case get_kind(IQ) of
+        request -> true;
+        _       -> false
+    end;
+is_request(#iq{kind = Kind}) ->
+    Kind == request.
+
+%% @spec (IQ) -> bool()
+%%     IQ = exmpp_xml:xmlel() | iq()
+%% @doc Tell if the IQ is a response.
+
+-spec(is_response/1 :: (#xmlel{} | #iq{}) -> bool()).
+
+is_response(IQ) when ?IS_IQ(IQ) ->
+    case get_kind(IQ) of
+        response -> true;
+        _        -> false
+    end;
+is_response(#iq{kind = Kind}) ->
+    Kind == response.
+
+%% @spec (IQ) -> bool()
+%%     IQ = exmpp_xml:xmlel() | iq()
+%% @doc Tell if the IQ is a result (response of type `result').
+
+-spec(is_result/1 :: (#xmlel{} | #iq{}) -> bool()).
+
+is_result(IQ) when ?IS_IQ(IQ) ->
+    case get_type(IQ) of
+        'result' -> true;
+        _        -> false
+    end;
+is_result(#iq{type = Type}) ->
+    Type == 'result'.
+
+%% @spec (IQ) -> bool()
+%%     IQ = exmpp_xml:xmlel() | iq()
+%% @doc Tell if the IQ is an error (response of type `error').
+
+-spec(is_error/1 :: (#xmlel{} | #iq{}) -> bool()).
+
+is_error(IQ) when ?IS_IQ(IQ) ->
+    case get_type(IQ) of
+        'error' -> true;
+        _       -> false
+    end;
+is_error(#iq{type = Type}) ->
+    Type == 'error'.
+
+%% @spec (IQ) -> Request | undefined
+%%     IQ = exmpp_xml:xmlel() | iq()
+%%     Request = exmpp_xml:xmlel()
+%% @throws {iq, get_request, unexpected_iq, IQ} |
+%%         {iq, get_request, invalid_iq, IQ}
+%% @doc Return the request contained in a `get' or `set' IQ, or returned
+%% by an `error' IQ (if present).
+
+-spec(get_request/1 :: (#xmlel{} | #iq{}) -> #xmlel{} | undefined).
+
+get_request(IQ) when ?IS_IQ(IQ) ->
+    case get_type(IQ) of
+        undefined ->
+            throw({iq, get_request, invalid_iq, IQ});
+        Type when Type == 'get' orelse Type == 'set' ->
+	    %% We take the first child element. Note that the RFC says
+	    %% that this child element MUST be the only one! This doesn't
+	    %% take into account text nodes.
+            [Request | _] = exmpp_xml:get_child_elements(IQ),
+            Request;
+        'result' ->
+            throw({iq, get_request, unexpected_iq, IQ});
+        'error' ->
+            NS = IQ#xmlel.ns,
+            [Request | Rest] = exmpp_xml:get_child_elements(IQ),
+            case Request of
+                #xmlel{ns = NS, name = 'error'} ->
+                    case Rest of
+                        []         -> undefined;
+                        [Request2] -> Request2
+                    end;
+                _ ->
+                    Request
+            end
+    end;
+get_request(#iq{kind = request, payload = Request}) ->
+    Request;
+get_request(#iq{type = 'error', payload = Request}) ->
+    Request;
+get_request(#iq{} = IQ_Rec) ->
+    throw({iq, get_request, unexpected_iq, IQ_Rec}).
+
+%% @spec (IQ) -> Result | undefined
+%%     IQ = exmpp_xml:xmlel() | iq()
+%%     Result = exmpp_xml:xmlel()
+%% @throws {iq, get_request, unexpected_iq, IQ} |
+%%         {iq, get_result, invalid_iq, IQ}
+%% @doc Return the result contained in a `result' IQ.
+
+-spec(get_result/1 :: (#xmlel{} | #iq{}) -> #xmlel{} | undefined).
+
+get_result(IQ) when ?IS_IQ(IQ) ->
+    case get_type(IQ) of
+        undefined ->
+            throw({iq, get_result, invalid_iq, IQ});
+        'result' ->
+            case exmpp_xml:get_child_elements(IQ) of
+                [] ->
+                    undefined;
+                [Result | _] ->
+                    Result
+            end;
+        _ ->
+            throw({iq, get_result, unexpected_iq, IQ})
+    end;
+get_result(#iq{type = 'result', payload = Result}) ->
+    Result;
+get_result(#iq{} = IQ_Rec) ->
+    throw({iq, get_result, unexpected_iq, IQ_Rec}).
+
+%% @spec (IQ) -> Payload
+%%     IQ = exmpp_xml:xmlel() | iq()
+%%     Payload = exmpp_xml:xmlel()
+%% @throws {iq, get_payload, unexpected_iq, IQ}
+%% @doc Extract the request, the result or the error from `IQ'.
+
+-spec(get_payload/1 :: (#xmlel{} | #iq{}) -> #xmlel{} | undefined).
+
+get_payload(IQ) ->
+    case exmpp_iq:get_type(IQ) of
+        'get'    -> exmpp_iq:get_request(IQ);
+        'set'    -> exmpp_iq:get_request(IQ);
+        'result' -> exmpp_iq:get_result(IQ);
+        'error'  -> exmpp_stanza:get_error(IQ);
+        _        -> throw({iq, get_payload, invalid_iq, IQ})
+    end.
+
+
+%% @spec (IQ) -> NS | undefined
+%%    NS = atom()
+%%  @doc Returns the query namespace.
+%%       returns 'undefined' is there is no query element. 
+ get_payload_ns_as_atom(IQ) ->
+    case get_payload(IQ) of
+        #xmlel{} = Q -> exmpp_xml:get_ns_as_atom(Q);
+        undefined -> undefined
+     end.
diff -r d551623afde5 deps/exmpp/src/core/exmpp_jid.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/core/exmpp_jid.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,887 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> provides functions to handle
+%% JID.
+
+-module(exmpp_jid).
+
+-include("exmpp.hrl").
+-include("internal/exmpp_xmpp.hrl").
+
+-export([binary_split/2]).
+
+%% Conversion.
+-export([
+	 make/0,
+	 make/1,
+	 make/2,
+	 make/3,
+	 bare/1,
+	 full/2
+	]).
+
+%% Parsing.
+-export([
+	 parse/1
+	]).
+
+%% Serialization.
+-export([
+     to_lower/1,
+	 to_list/1,
+	 to_list/2,
+	 to_list/3,
+	 prep_to_list/1,
+	 bare_to_list/1,
+	 bare_to_list/2,
+	 prep_bare_to_list/1,
+	 to_binary/1,
+	 to_binary/2,
+	 to_binary/3,
+	 prep_to_binary/1,
+	 bare_to_binary/1,
+	 bare_to_binary/2,
+	 prep_bare_to_binary/1
+	]).
+
+%% Comparison.
+-export([
+	 full_compare/2,
+	 bare_compare/2,
+	 compare/2,
+	 compare_domains/2
+	]).
+
+%% Checks.
+-export([
+	 is_jid/1
+	]).
+
+%% List accessors.
+-export([
+	 node_as_list/1,
+	 prep_node_as_list/1,
+	 domain_as_list/1,
+	 prep_domain_as_list/1,
+	 resource_as_list/1,
+	 prep_resource_as_list/1
+	]).
+
+%% Raw binary() accessors.
+-export([
+	 node/1,
+	 prep_node/1,
+	 domain/1,
+	 prep_domain/1,
+	 resource/1,
+	 prep_resource/1
+	]).
+
+%% --------------------------------------------------------------------
+%% Constants.
+%% --------------------------------------------------------------------
+
+-define(NODE_MAX_LENGTH,     1023).
+-define(DOMAIN_MAX_LENGTH,   1023).
+-define(RESOURCE_MAX_LENGTH, 1023).
+-define(BARE_JID_MAX_LENGTH, ?NODE_MAX_LENGTH + 1 + ?DOMAIN_MAX_LENGTH).
+-define(JID_MAX_LENGTH,      ?BARE_JID_MAX_LENGTH + 1 + ?RESOURCE_MAX_LENGTH).
+
+%% --------------------------------------------------------------------
+%% Documentation / type definitions.
+%% --------------------------------------------------------------------
+
+%% @type jid() = {jid, Orig_Jid, Prepd_Node, Prepd_Domain, Prepd_Resource}
+%%     Orig_Jid = binary() | undefined
+%%     Prepd_Node = binary() | undefined
+%%     Prepd_Domain = binary() | undefined
+%%     Prepd_Resource = binary() | undefined.
+%% Represents a JID.
+%%
+%% <strong>`jid()' is an internal type and the structure documented
+%% herein may be changed without notice</strong>. Please use only the
+%% accessors exported by this module to get each component of a JID.
+%%
+%% `Prepd_Node' is set to the value of `Node' passed through the
+%% NODEPREP stringprep profile.
+%%
+%% `Prepd_Domain' is set to the value of `Domain' passed through the
+%% NAMEPREP stringprep profile.
+%%
+%% `Prepd_Resource' is set to the value of `Resource' passed through the
+%% RESOURCEPREP stringprep profile.
+
+-type(jid() :: #jid{}).
+
+%% Internal type only used in contracts.
+-type(node_arg()   :: binary() | string() | undefined).
+-type(domain_arg() :: binary() | string()).
+-type(res_arg()    :: binary() | string() | undefined).
+
+%% --------------------------------------------------------------------
+%% JID creation & conversion.
+%% --------------------------------------------------------------------
+
+%% @spec (Jid::jid()) -> {Node::string(), Domain::string(), Resource::string()}
+to_lower(Jid) when ?IS_JID(Jid)->
+    {prep_node(Jid),
+     prep_domain(Jid),
+     prep_resource(Jid)};
+to_lower(StringJid) when is_list(StringJid)->
+    to_lower(parse(StringJid));
+to_lower(StringJid) when is_binary(StringJid)->
+    to_lower(parse(StringJid)).
+
+
+%% @spec () -> Jid
+%%     Jid = jid()
+%% @doc Create a blank JID.
+
+-spec(make/0 :: () -> jid()).
+
+make() ->
+    #jid{}.
+
+%% @spec (Domain) -> Bare_Jid
+%%     Domain = binary() | string()
+%%     Bare_Jid = jid()
+%% @throws {jid, make, too_long, {domain, Domain}} |
+%%         {jid, make, invalid,  {domain, Domain}}
+%% @doc Create a bare JID.
+
+-spec(make/1 :: (domain_arg() | {node_arg(), domain_arg(), res_arg()}) -> jid()).
+make({Node, Domain, Resource})->
+    make(Node, Domain, Resource);
+make(Domain) ->
+    make(undefined, Domain).
+
+%% @spec (Node, Domain) -> Bare_Jid
+%%     Node = binary() | string() | undefined
+%%     Domain = binary() | string()
+%%     Bare_Jid = jid()
+%% @throws {jid, make, too_long, {domain, Domain}} |
+%%         {jid, make, invalid,  {domain, Domain}} |
+%%         {jid, make, too_long, {node, Node}} |
+%%         {jid, make, invalid,  {node, Node}}
+%% @doc Create a bare JID.
+
+-spec(make/2 :: (node_arg(), domain_arg()) -> jid()).
+
+make(_Node, Domain)
+  when is_list(Domain), length(Domain) > ?DOMAIN_MAX_LENGTH ->
+    throw({jid, make, too_long, {domain, Domain}});
+make(_Node, Domain)
+  when is_binary(Domain), size(Domain) > ?DOMAIN_MAX_LENGTH ->
+    throw({jid, make, too_long, {domain, Domain}});
+make("", Domain) ->
+    %% This clause is here because ejabberd uses empty string.
+    make(undefined, Domain);
+make(<<>>, Domain) ->
+    %% This clause is here because ejabberd uses empty string.
+    make(undefined, Domain);
+make(undefined, Domain) ->
+    try
+        LDomain = exmpp_stringprep:nameprep(Domain),
+        #jid{orig_jid = storbi2bi(Domain),
+	     prep_node = undefined,
+	     prep_domain = storbi2bi(LDomain),
+	     prep_resource = undefined
+	    }
+    catch
+        throw:{stringprep, _, exmpp_not_started, _} = E ->
+            throw(E);
+	  throw:{stringprep, nameprep, invalid_string, _} ->
+            throw({jid, make, invalid, {domain, Domain}})
+    end;
+make(Node, _Domain)
+  when is_list(Node), length(Node) > ?NODE_MAX_LENGTH ->
+    throw({jid, make, too_long, {node, Node}});
+make(Node, _Domain)
+  when is_binary(Node), size(Node) > ?NODE_MAX_LENGTH ->
+    throw({jid, make, too_long, {node, Node}});
+make(Node, Domain) ->
+    try
+        LNode = exmpp_stringprep:nodeprep(Node),
+        LDomain = exmpp_stringprep:nameprep(Domain),
+        #jid{orig_jid =
+	     <<(storbi2bi(Node))/binary, $@, (storbi2bi(Domain))/binary >>,
+	     prep_node = storbi2bi(LNode),
+	     prep_domain = storbi2bi(LDomain),
+	     prep_resource = undefined
+	    }
+    catch
+        throw:{stringprep, _, exmpp_not_started, _} = E ->
+            throw(E);
+	  throw:{stringprep, nodeprep, invalid_string, _} ->
+            throw({jid, make, invalid, {node, Node}});
+	  throw:{stringprep, nameprep, invalid_string, _} ->
+            throw({jid, make, invalid, {domain, Domain}})
+    end.
+
+%% @spec (Node, Domain, Resource) -> Jid
+%%     Node = binary() | string() | undefined
+%%     Domain = binary() | string()
+%%     Resource = binary() | string() | random | undefined
+%%     Jid = jid()
+%% @doc Create a full JID.
+
+-spec(make/3 :: (node_arg(), domain_arg(), res_arg()) -> jid()).
+
+make(Node, Domain, undefined) ->
+    make(Node, Domain);
+make(Node, Domain, "") ->
+    %% This clause is here because ejabberd uses empty string.
+    make(Node, Domain);
+make(Node, Domain, <<>>) ->
+    %% This clause is here because ejabberd uses empty string.
+    make(Node, Domain);
+make(Node, Domain, Resource) ->
+    Jid = make(Node, Domain),
+    try
+        full(Jid, Resource)
+    catch
+        throw:{stringprep, _, exmpp_not_started, _} = E ->
+            throw(E);
+	  throw:{jid, convert, Reason, Infos} ->
+            throw({jid, make, Reason, Infos})
+    end.
+
+%% @spec (Orig, Node, Domain, Resource) -> Jid
+%%     Orig = binary()
+%%     Node = binary() | string() | undefined
+%%     Resource = binary() | string() | undefined
+%%     Jid = jid()
+%% @doc Create a full JID.
+%%
+%% The first parameter is the original JID `Node@Domain/Resource' (eg.
+%% as extracted from a stanza recipient).
+%%
+%% We reuse this value here. The intention is to save some memory, see
+%% comments on `include/internal/exmpp_xmpp.hrl'
+
+-spec(make/4 :: (binary(), node_arg(), domain_arg(), res_arg()) -> jid()).
+
+make(Orig, Node, Domain, Resource) ->
+    try
+        LNode = case Node of
+		    undefined -> undefined;
+		    _         -> storbi2bi(exmpp_stringprep:nodeprep(Node))
+		end,
+        LDomain = storbi2bi(exmpp_stringprep:nameprep(Domain)),
+        LResource = case Resource of
+			undefined -> undefined;
+			_         -> storbi2bi(exmpp_stringprep:resourceprep(Resource))
+		    end,
+        #jid{orig_jid = Orig,
+	     prep_node = LNode,
+	     prep_domain = LDomain,
+	     prep_resource = LResource
+	    }
+    catch
+        throw:{stringprep, _, exmpp_not_started, _} = E ->
+            throw(E);
+	  throw:{stringprep, nodeprep, invalid_string, _} ->
+            throw({jid, make, invalid, {node, Node}});
+	  throw:{stringprep, nameprep, invalid_string, _} ->
+            throw({jid, make, invalid, {domain, Domain}});
+	  throw:{stringprep, resourceprep, invalid_string, _} ->
+            throw({jid, make, invalid, {resource, Resource}})
+    end.
+
+%% @spec (Jid) -> Bare_Jid
+%%     Jid = jid()
+%%     Bare_Jid = jid()
+%% @doc Convert a full JID to its bare version.
+
+-spec(bare/1 :: (jid()) -> jid()).
+
+bare(#jid{orig_jid = Orig_Jid} = Jid) ->
+    New_Orig_Jid = case binary_split(Orig_Jid, $/) of
+		       [Bare_Jid, _] -> Bare_Jid;
+		       [Bare_Jid]    -> Bare_Jid
+		   end,
+    Jid#jid{
+      orig_jid = New_Orig_Jid,
+      prep_resource = undefined
+     }.
+
+%% @spec (Bare_Jid, Resource) -> Jid
+%%     Bare_Jid = jid()
+%%     Resource = binary() | string() | random
+%%     Jid = jid()
+%% @throws {jid, convert, too_long, {resource, Resource}} |
+%%         {jid, convert, invalid,  {resource, Resource}}
+%% @doc Convert a bare JID to its full version.
+
+-spec(full/2 :: (jid(), res_arg()) -> jid()).
+
+full(Jid, undefined) ->
+    Jid;
+full(Jid, "") ->
+    %% This clause is here because ejabberd uses empty string.
+    Jid;
+full(Jid, <<>>) ->
+    %% This clause is here because ejabberd uses empty string.
+    Jid;
+full(Jid, random) ->
+    Resource = generate_resource(),
+    full(Jid, Resource);
+full(_Jid, Resource)
+  when is_list(Resource), length(Resource) > ?RESOURCE_MAX_LENGTH ->
+    throw({jid, convert, too_long, {resource, Resource}});
+full(_Jid, Resource)
+  when is_binary(Resource), size(Resource) > ?RESOURCE_MAX_LENGTH ->
+    throw({jid, convert, too_long, {resource, Resource}});
+full(#jid{orig_jid = Orig_Jid} = Jid, Resource) ->
+    try
+        LResource = exmpp_stringprep:resourceprep(Resource),
+        Resource_B = storbi2bi(Resource),
+        New_Orig_Jid =
+	case binary_split(Orig_Jid, $/) of
+	    [Bare_Jid, _] -> <<Bare_Jid/binary, $/, Resource_B/binary>>;
+	    [Bare_Jid]    -> <<Bare_Jid/binary, $/, Resource_B/binary>>
+				 end,
+        Jid#jid{orig_jid = New_Orig_Jid,
+		prep_resource = storbi2bi(LResource)
+	       }
+    catch
+        throw:{stringprep, _, exmpp_not_started, _} = E ->
+            throw(E);
+	  throw:{stringprep, resourceprep, invalid_string, _} ->
+            throw({jid, convert, invalid, {resource, Resource}})
+    end.
+
+%% --------------------------------------------------------------------
+%% JID parsing.
+%% --------------------------------------------------------------------
+
+%% @spec (String) -> Jid
+%%     String = binary() | string()
+%%     Jid = jid()
+%% @throws {jid, parse, Reason, {jid, String}}
+%% @doc Parse a string and create a full JID.
+
+-spec(parse/1 :: (binary() | string()) -> jid()).
+
+parse(String) when is_binary(String) ->
+    case parse_binary(String, String, <<>>) of
+        {error, Reason} ->
+            throw({jid, parse, Reason, {jid, String}});
+        Jid ->
+            Jid
+    end;
+parse(String) when is_list(String) ->
+    B = list_to_binary(String),
+    case parse_binary(B, B, <<>>) of
+        {error, Reason} ->
+            throw({jid, parse, Reason, {jid, String}});
+        Jid ->
+            Jid
+    end.
+
+-spec(parse_binary/3 :: (binary(), binary(), binary()) -> jid() | {error, any()}).
+
+parse_binary(_Original, String, _) when size(String) > ?JID_MAX_LENGTH ->
+    %% Invalid JID: too long.
+    {error, too_long};
+parse_binary(_Original, <<$@, _Rest/binary>>, <<>>) ->
+    %% Invalid JID of the form "@Domain".
+    {error, unexpected_node_separator};
+parse_binary(Original, <<$@, Rest/binary>>, Node) ->
+    %% JID of the form "Node@Domain".
+    parse_binary(Original, Rest, Node, <<>>);
+parse_binary(_Original, <<$/, _Rest/binary>>, <<>>) ->
+    %% Invalid JID of the form "/Resource".
+    {error, unexpected_resource_separator};
+parse_binary(_Original, <<$/>>, _Domain) ->
+    %% Invalid JID of the form "Domain/".
+    {error, unexpected_end_of_string};
+parse_binary(Original, <<$/ , Resource/binary>>, Domain) ->
+    %% Valid JID of the form "Domain/Resource".
+    make(Original, undefined, Domain, Resource);
+parse_binary(Original, <<C, Rest/binary>>, Node_Or_Domain) ->
+    %% JID of the form "Node@Domain" or "Node@Domain/Resource".
+    parse_binary(Original, Rest, <<Node_Or_Domain/binary, C>>);
+parse_binary(_Original, <<>>, <<>>) ->
+    %% Invalid JID of the form "".
+    {error, unexpected_end_of_string};
+parse_binary(Original, <<>>, Domain) ->
+    %% Valid JID of the form "Domain".
+    make(Original, undefined, Domain, undefined).
+parse_binary(_Original, <<$@,  _Rest/binary>>, _Node, _Domain) ->
+    %% Invalid JID of the form "Node@Domain@Domain".
+    {error, unexpected_node_separator};
+parse_binary(_Original, <<$/, _Rest/binary>>, _Node, <<>>) ->
+    %% Invalid JID of the form "Node@/Resource".
+    {error, unexpected_resource_separator};
+parse_binary(_Original, <<$/>>, _Node, _Domain) ->
+    %% Invalid JID of the form "Node@Domain/".
+    {error, unexpected_end_of_string};
+parse_binary(Original, <<$/, Resource/binary>>, Node, Domain) ->
+    %% Valid JID of the form "Node@Domain/Resource".
+    make(Original, Node, Domain, Resource);
+parse_binary(Original, <<C, Rest/binary>>, Node, Domain) ->
+    %% JID of the form "Node@Domain" or "Node@Domain/Resource".
+    parse_binary(Original, Rest, Node, <<Domain/binary, C>>);
+parse_binary(_Original, <<>>, _Node, <<>>) ->
+    %% Invalid JID of the form "Node@".
+    {error, unexpected_end_of_string};
+parse_binary(Original, <<>>, Node, Domain) ->
+    %% Valid JID of the form "Node@Domain".
+    make(Original, Node, Domain, undefined).
+
+%% --------------------------------------------------------------------
+%% JID serialization.
+%% --------------------------------------------------------------------
+
+%% @spec (Jid) -> String
+%%     Jid = jid()
+%%     String = string()
+%% @doc Stringify a full JID.
+
+-spec(to_list/1 :: (jid()) -> string()).
+
+to_list(#jid{} = JID) ->
+    binary_to_list(to_binary(JID)).
+
+%% @spec (Node, Domain) -> String
+%%     Node = binary() | string() | undefined
+%%     Domain = binary() | string()
+%%     String = string()
+%% @doc Stringify a bare JID.
+
+-spec(to_list/2 :: (node_arg(), domain_arg()) -> string()).
+
+to_list(Node, Domain) ->
+    bare_to_list(Node, Domain).
+
+%% @spec (Node, Domain, Resource) -> String
+%%     Node = binary() | string() | undefined
+%%     Domain = binary() | string()
+%%     Resource = binary() | string() | undefined
+%%     String = string()
+%% @doc Stringify a full JID.
+
+-spec(to_list/3 :: (node_arg(), domain_arg(), res_arg()) -> string()).
+
+to_list(Node, Domain, Resource) ->
+    binary_to_list(to_binary(Node, Domain, Resource)).
+
+%% @spec (Jid) -> String
+%%     Jid = jid()
+%%     String = string()
+%% @doc Stringify a full JID with STRINGPREP profiles applied.
+
+-spec(prep_to_list/1 :: (jid()) -> string()).
+
+prep_to_list(
+  #jid{prep_node = Node, prep_domain = Domain, prep_resource = Resource}) ->
+    to_list(Node, Domain, Resource).
+
+%% @spec (Jid) -> String
+%%     Jid = jid()
+%%     String = string()
+%% @doc Stringify a bare JID.
+
+-spec(bare_to_list/1 :: (jid()) -> string()).
+
+bare_to_list(#jid{} = JID) ->
+    binary_to_list(bare_to_binary(JID)).
+
+%% @spec (Node, Domain) -> String
+%%     Node = binary() | string() | undefined
+%%     Domain = binary() | string()
+%%     String = string()
+%% @doc Stringify a full JID.
+
+-spec(bare_to_list/2 :: (node_arg(), domain_arg()) -> string()).
+
+bare_to_list(Node, Domain) ->
+    binary_to_list(bare_to_binary(Node, Domain)).
+
+%% @spec (Jid) -> String
+%%     Jid = jid()
+%%     String = string()
+%% @doc Stringify a bare JID with STRINGPREP profiles applied.
+
+-spec(prep_bare_to_list/1 :: (jid()) -> string()).
+
+prep_bare_to_list(
+  #jid{prep_node = Node, prep_domain = Domain}) ->
+    bare_to_list(Node, Domain).
+
+%% @spec (Jid) -> String
+%%     Jid = jid()
+%%     String = binary()
+%% @doc Stringify a full JID.
+
+-spec(to_binary/1 :: (jid()) -> binary()).
+
+to_binary(#jid{orig_jid = Orig_Jid}) ->
+    Orig_Jid.
+
+%% @spec (Node, Domain) -> String
+%%     Node = bianry() | string() | undefined
+%%     Domain = binary() | string()
+%%     String = binary()
+%% @doc Stringify a bare JID.
+
+-spec(to_binary/2 :: (node_arg(), domain_arg()) -> binary()).
+
+to_binary(Node, Domain) ->
+    bare_to_binary(Node, Domain).
+
+%% @spec (Node, Domain, Resource) -> String
+%%     Node = binary() | string() | undefined
+%%     Domain = binary() | string()
+%%     Resource = binary() | string() | undefined
+%%     String = binary()
+%% @doc Stringify a full JID.
+
+-spec(to_binary/3 :: (node_arg(), domain_arg(), res_arg()) -> binary()).
+
+to_binary(Node, Domain, Resource) when is_list(Resource) ->
+    to_binary(Node, Domain, as_binary(Resource));
+
+to_binary(Node, Domain, Resource)
+  when Resource == undefined orelse is_binary(Resource) ->
+    S1 = bare_to_binary(Node, Domain),
+    if
+        Resource == <<>> orelse Resource == undefined ->
+            S1;
+        true ->
+            <<S1/binary, "/", Resource/binary>>
+		end.
+
+%% @spec (Jid) -> String
+%%     Jid = jid()
+%%     String = binary()
+%% @doc Stringify a full JID with STRINGPREP profiles applied.
+
+-spec(prep_to_binary/1 :: (jid()) -> binary()).
+
+prep_to_binary(
+  #jid{prep_node = Node, prep_domain = Domain, prep_resource = Resource}) ->
+    to_binary(Node, Domain, Resource).
+
+%% @spec (Jid) -> String
+%%     Jid = jid()
+%%     String = binary()
+%% @doc Stringify a bare JID.
+
+-spec(bare_to_binary/1 :: (jid()) -> binary()).
+
+bare_to_binary(#jid{orig_jid = Orig_Jid, prep_resource = LResource} = Jid) ->
+    case LResource of
+        undefined -> Orig_Jid;
+        _         -> bare_to_binary(exmpp_jid:node(Jid), domain(Jid))
+    end.
+
+%% @spec (Node, Domain) -> String
+%%     Node = binary() | string() | undefined
+%%     Domain = binary() | string()
+%%     String = binary()
+%% @doc Stringify a full JID.
+
+-spec(bare_to_binary/2 :: (node_arg(), domain_arg()) -> binary()).
+
+bare_to_binary(Node, Domain) when is_list(Node) ->
+    bare_to_binary(as_binary(Node), Domain);
+bare_to_binary(Node, Domain) when is_list(Domain) ->
+    bare_to_binary(Node, as_binary(Domain));
+
+bare_to_binary(Node, Domain)
+  when (Node == undefined orelse is_binary(Node)) andalso
+       (Domain == undefined orelse is_binary(Domain)) ->
+    if
+        Node == <<>> orelse Node == undefined ->
+            Domain;
+        true ->
+            <<Node/binary, "@", Domain/binary>>
+		end.
+
+%% @spec (Jid) -> String
+%%     Jid = jid()
+%%     String = binary()
+%% @doc Stringify a bare JID with STRINGPREP profiles applied.
+
+-spec(prep_bare_to_binary/1 :: (jid()) -> binary()).
+
+prep_bare_to_binary(#jid{prep_node = Node, prep_domain = Domain}) ->
+    bare_to_binary(Node, Domain).
+
+%% --------------------------------------------------------------------
+%% JID comparison.
+%% --------------------------------------------------------------------
+
+%% @spec (Jid1, Jid2) -> bool()
+%%     Jid1 = jid()
+%%     Jid2 = jid()
+%% @doc Compare full JIDs.
+
+-spec(full_compare/2 :: (jid(), jid()) -> bool()).
+
+full_compare(#jid{prep_node = LNode, prep_domain = LDomain,
+		  prep_resource = LResource},
+	     #jid{prep_node = LNode, prep_domain = LDomain,
+		  prep_resource = LResource}) ->
+    true;
+full_compare(_Jid1, _Jid2) ->
+    false.
+
+%% @spec (Jid1, Jid2) -> bool()
+%%     Jid1 = jid()
+%%     Jid2 = jid()
+%% @doc Compare bare JIDs.
+
+-spec(bare_compare/2 :: (jid(), jid()) -> bool()).
+
+bare_compare(#jid{prep_node = LNode, prep_domain = LDomain},
+	     #jid{prep_node = LNode, prep_domain = LDomain}) ->
+    true;
+bare_compare(_Jid1, _Jid2) ->
+    false.
+
+%% @spec (Jid1, Jid2) -> bool()
+%%     Jid1 = jid()
+%%     Jid2 = jid()
+%% @doc Compare full JIDs. This function is identical to full_compare/2.
+
+-spec(compare/2 :: (jid(), jid()) -> bool()).
+
+compare(Jid1, Jid2) ->
+    full_compare(Jid1, Jid2).
+
+%% @spec (Jid1, Jid2) -> bool()
+%%     Jid1 = jid()
+%%     Jid2 = jid()
+%% @doc Compare JID's domain.
+
+-spec(compare_domains/2 :: (jid(), jid()) -> bool()).
+
+compare_domains(#jid{prep_domain = LDomain},
+		#jid{prep_domain = LDomain}) ->
+    true;
+compare_domains(_Jid1, _Jid2) ->
+    false.
+
+%% --------------------------------------------------------------------
+%% JID checks.
+%% --------------------------------------------------------------------
+
+%% @spec (Jid) -> bool()
+%%     Jid = jid()
+%% @doc Tell if the argument is a JID.
+%%
+%% You should probably use the `IS_JID(Jid)' guard expression.
+
+-spec(is_jid/1 :: (jid()) -> bool()).
+
+is_jid(Jid) when ?IS_JID(Jid) ->
+    true;
+is_jid(_) ->
+    false.
+
+%% --------------------------------------------------------------------
+%% JID members accessors.
+%% --------------------------------------------------------------------
+
+%% @spec (Jid) -> Node | undefined
+%%     Jid = jid()
+%%     Node = binary()
+%% @doc Return the node part of a JID.
+
+-spec(node/1 :: (jid()) -> binary() | undefined).
+
+node(#jid{orig_jid = undefined}) ->
+    undefined;
+node(#jid{orig_jid = Orig_Jid}) ->
+    case binary_split(Orig_Jid, $@) of
+        [Node, _] -> Node;
+        _         -> undefined
+    end.
+
+%% @spec (Jid) -> Node | undefined
+%%     Jid = jid()
+%%     Node = binary()
+%% @doc Return the node part of a JID with NODEPREP profile applied.
+
+-spec(prep_node/1 :: (jid()) -> binary() | undefined).
+
+prep_node(#jid{prep_node = N}) -> N.
+
+%% @spec (Jid) -> Domain | undefined
+%%     Jid = jid()
+%%     Domain = binary()
+%% @doc Return the domain part of a JID.
+
+-spec(domain/1 :: (jid()) -> binary() | undefined).
+
+domain(#jid{orig_jid = undefined}) ->
+    undefined;
+domain(#jid{orig_jid = Orig_Jid}) ->
+    Domain_And_Resource = case binary_split(Orig_Jid, $@) of
+			      [_, Domain1] -> Domain1;
+			      _            -> Orig_Jid
+			  end,
+    case binary_split(Domain_And_Resource, $/) of
+        [Domain2, _] -> Domain2;
+        _            -> Domain_And_Resource
+    end.
+
+%% @spec (Jid) -> Domain | undefined
+%%     Jid = jid()
+%%     Domain = binary()
+%% @doc Return the domain part of a JID with NAMEPREP profile applied.
+
+-spec(prep_domain/1 :: (jid()) -> binary() | undefined).
+
+prep_domain(#jid{prep_domain = D}) -> D.
+
+%% @spec (Jid) -> Resource | undefined
+%%     Jid = jid()
+%%     Resource = binary()
+%% @doc Return the resource part of a JID.
+
+-spec(resource/1 :: (jid()) -> binary() | undefined).
+
+resource(#jid{orig_jid = undefined}) ->
+    undefined;
+resource(#jid{orig_jid = Orig_Jid}) ->
+    case binary_split(Orig_Jid, $/) of
+        [_, Resource] -> Resource;
+        _             -> undefined
+    end.
+
+%% @spec (Jid) -> Resource | undefined
+%%     Jid = jid()
+%%     Resource = binary()
+%% @doc Return the resource part of a JID with RESOURCEPREP profile applied.
+
+-spec(prep_resource/1 :: (jid()) -> binary() | undefined).
+
+prep_resource(#jid{prep_resource = R}) -> R.
+
+%% @spec (Jid) -> Node | undefined
+%%     Jid = jid()
+%%     Node = string()
+%% @doc Return the node part of a JID as a list.
+
+-spec(node_as_list/1 :: (jid()) -> string() | undefined).
+
+node_as_list(Jid) ->
+    as_list_or_undefined(exmpp_jid:node(Jid)).
+
+%% @spec (Jid) -> Node | undefined
+%%     Jid = jid()
+%%     Node = string()
+%% @doc Return the node part of a JID as a list with NODEPREP profile
+%% applied.
+
+-spec(prep_node_as_list/1 :: (jid()) -> string() | undefined).
+
+prep_node_as_list(Jid) ->
+    as_list_or_undefined(prep_node(Jid)).
+
+%% @spec (Jid) -> Domain | undefined
+%%     Jid = jid()
+%%     Domain = string()
+%% @doc Return the domain part of a JID as a list.
+
+-spec(domain_as_list/1 :: (jid()) -> string() | undefined).
+
+domain_as_list(Jid) ->
+    as_list_or_undefined(domain(Jid)).
+
+%% @spec (Jid) -> Domain | undefined
+%%     Jid = jid()
+%%     Domain = string()
+%% @doc Return the domain part of a JID as a list with NAMEPREP profile
+%% applied.
+
+-spec(prep_domain_as_list/1 :: (jid()) -> string() | undefined).
+
+prep_domain_as_list(Jid) ->
+    as_list_or_undefined(prep_domain(Jid)).
+
+%% @spec (Jid) -> Resource | undefined
+%%     Jid = jid()
+%%     Resource = string()
+%% @doc Return the resource part of a JID as a list.
+
+-spec(resource_as_list/1 :: (jid()) -> string() | undefined).
+
+resource_as_list(Jid) ->
+    as_list_or_undefined(resource(Jid)).
+
+%% @spec (Jid) -> Resource | undefined
+%%     Jid = jid()
+%%     Resource = string()
+%% @doc Return the domain part of a JID as a list with RESOURCEPREP
+%% profile applied.
+
+-spec(prep_resource_as_list/1 :: (jid()) -> string() | undefined).
+
+prep_resource_as_list(Jid) ->
+    as_list_or_undefined(prep_resource(Jid)).
+
+as_list_or_undefined(undefined) ->
+    undefined;
+as_list_or_undefined(V) when is_binary(V) ->
+    binary_to_list(V).
+
+as_binary(V) when is_list(V) ->
+    list_to_binary(V).
+
+%% --------------------------------------------------------------------
+%% Helper functions
+%% --------------------------------------------------------------------
+
+%% We do not use random generator to avoid having to decide when and how
+%% to seed the Erlang random number generator.
+
+-spec(generate_resource/0 :: () -> string()).
+
+generate_resource() ->
+    {A, B, C} = erlang:now(),
+    lists:flatten(["exmpp#",
+		   integer_to_list(A),
+		   integer_to_list(B),
+		   integer_to_list(C)]
+		 ).
+
+%% If both lists are equal, don't waste memory creating two separate
+%% binary copies.
+%% "st or bi 2 bi" means: convert a STring OR a BInary TO a BInary.
+
+-spec(storbi2bi/1 :: (binary() | string()) -> binary()).
+
+storbi2bi(String) when is_list(String) ->
+    list_to_binary(String);
+storbi2bi(Binary) when is_binary(Binary) ->
+    Binary.
+
+-spec(binary_split/2 :: (binary(), char()) -> [binary()]).
+
+binary_split(B, C) -> binary_split(B, C, <<>>, []).
+
+binary_split(<<C, Rest/binary>>, C, Acc, Tokens) ->
+    binary_split(Rest, C, <<>>, [Acc | Tokens]);
+binary_split(<<C1, Rest/binary>>, C, Acc, Tokens) ->
+    binary_split(Rest, C, <<Acc/binary, C1>>, Tokens);
+binary_split(<<>>, _C, Acc, Tokens) ->
+    lists:reverse([Acc | Tokens]).
diff -r d551623afde5 deps/exmpp/src/core/exmpp_known_attrs.erl.awk
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/core/exmpp_known_attrs.erl.awk	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,18 @@
+/^# Generated by/ {
+	print "% " $0 "\n";
+	print "-module(exmpp_known_attrs).\n";
+	print "-export([attr_as_list/1]).\n";
+}
+
+/^[^#]/ {
+	if (!already_processed[$1]) {
+		print "attr_as_list('" $1 "') ->\n    \"" $1 "\";";
+		already_processed[$1] = 1;
+	}
+}
+
+END {
+	print "\nattr_as_list(Attr) when is_atom(Attr) ->";
+	print "    atom_to_list(Attr);";
+	print "attr_as_list(Attr) when is_list(Attr) ->\n    Attr.";
+}
diff -r d551623afde5 deps/exmpp/src/core/exmpp_known_attrs.erl.js
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/core/exmpp_known_attrs.erl.js	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,39 @@
+var fso, fd, line, re_start, re, dict;
+
+if (WScript.Arguments.length != 1) {
+	WScript.Echo("Syntax: cscript " +
+	    "exmpp_known_attrs.erl.js <exmpp_known_attrs.in>");
+} else {
+	/* Open the input file for reading (1). */
+	fso = new ActiveXObject("Scripting.FileSystemObject");
+	fd = fso.OpenTextFile(WScript.Arguments.Item(0), 1, false);
+
+	/* This regexp filters out comments. */
+	re_start = /^# Generated by/;
+	re = /^[^#]/;
+
+	/* We need a dictionnary to filter out duplicates. */
+	dict = new ActiveXObject("Scripting.Dictionary");
+
+	while (!fd.AtEndOfStream) {
+		line = fd.ReadLine();
+		if (line.match(re_start)) {
+			WScript.Echo("% " + line + "\n");
+			WScript.Echo("-module(exmpp_known_attrs).\n");
+			WScript.Echo("-export([attr_as_list/1]).\n");
+		}
+		if (!dict.Exists(line) && line.match(re)) {
+			WScript.Echo(
+			    "attr_as_list('" + line +
+			    "') ->\n    \"" + line + "\";");
+			dict.Add(line, 1);
+		}
+	}
+	WScript.Echo(
+	    "\nattr_as_list(Attr) when is_atom(Attr) ->\n" +
+            "    atom_to_list(Attr);");
+	WScript.Echo("attr_as_list(Attr) when is_list(Attr) ->\n    Attr.");
+
+	/* Done! */
+	fd.close();
+}
diff -r d551623afde5 deps/exmpp/src/core/exmpp_known_elems.erl.awk
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/core/exmpp_known_elems.erl.awk	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,18 @@
+/^# Generated by/ {
+	print "% " $0 "\n";
+	print "-module(exmpp_known_elems).\n";
+	print "-export([elem_as_list/1]).\n";
+}
+
+/^[^#]/ {
+	if (!already_processed[$1]) {
+		print "elem_as_list('" $1 "') ->\n    \"" $1 "\";";
+		already_processed[$1] = 1;
+	}
+}
+
+END {
+	print "\nelem_as_list(Elem) when is_atom(Elem) ->";
+	print "    atom_to_list(Elem);";
+	print "elem_as_list(Elem) when is_list(Elem) ->\n    Elem.";
+}
diff -r d551623afde5 deps/exmpp/src/core/exmpp_known_elems.erl.js
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/core/exmpp_known_elems.erl.js	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,39 @@
+var fso, fd, line, re_start, re, dict;
+
+if (WScript.Arguments.length != 1) {
+	WScript.Echo("Syntax: cscript " +
+	    "exmpp_known_elems.erl.js <exmpp_known_elems.in>");
+} else {
+	/* Open the input file for reading (1). */
+	fso = new ActiveXObject("Scripting.FileSystemObject");
+	fd = fso.OpenTextFile(WScript.Arguments.Item(0), 1, false);
+
+	/* This regexp filters out comments. */
+	re_start = /^# Generated by/;
+	re = /^[^#]/;
+
+	/* We need a dictionnary to filter out duplicates. */
+	dict = new ActiveXObject("Scripting.Dictionary");
+
+	while (!fd.AtEndOfStream) {
+		line = fd.ReadLine();
+		if (line.match(re_start)) {
+			WScript.Echo("% " + line + "\n");
+			WScript.Echo("-module(exmpp_known_elems).\n");
+			WScript.Echo("-export([elem_as_list/1]).\n");
+		}
+		if (!dict.Exists(line) && line.match(re)) {
+			WScript.Echo(
+			    "elem_as_list('" + line +
+			    "') ->\n    \"" + line + "\";");
+			dict.Add(line, 1);
+		}
+	}
+	WScript.Echo(
+	    "\nelem_as_list(Elem) when is_atom(Elem) ->\n" +
+            "    atom_to_list(Elem);");
+	WScript.Echo("elem_as_list(Elem) when is_list(Elem) ->\n    Elem.");
+
+	/* Done! */
+	fd.close();
+}
diff -r d551623afde5 deps/exmpp/src/core/exmpp_known_nss.erl.awk
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/core/exmpp_known_nss.erl.awk	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,18 @@
+/^# Generated by/ {
+	print "% " $0 "\n";
+	print "-module(exmpp_known_nss).\n";
+	print "-export([ns_as_list/1]).\n";
+}
+
+/^[^#]/ {
+	if (!already_processed[$1]) {
+		print "ns_as_list('" $1 "') ->\n    \"" $1 "\";";
+		already_processed[$1] = 1;
+	}
+}
+
+END {
+	print "\nns_as_list(undefined) ->\n    \"\";";
+	print "\nns_as_list(NS) when is_atom(NS) ->\n    atom_to_list(NS);";
+	print "ns_as_list(NS) when is_list(NS) ->\n    NS.";
+}
diff -r d551623afde5 deps/exmpp/src/core/exmpp_known_nss.erl.js
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/core/exmpp_known_nss.erl.js	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,39 @@
+var fso, fd, line, re_start, re, dict;
+
+if (WScript.Arguments.length != 1) {
+	WScript.Echo("Syntax: cscript " +
+	    "exmpp_known_nss.erl.js <exmpp_known_nss.in>");
+} else {
+	/* Open the input file for reading (1). */
+	fso = new ActiveXObject("Scripting.FileSystemObject");
+	fd = fso.OpenTextFile(WScript.Arguments.Item(0), 1, false);
+
+	/* This regexp filters out comments. */
+	re_start = /^# Generated by/;
+	re = /^[^#]/;
+
+	/* We need a dictionnary to filter out duplicates. */
+	dict = new ActiveXObject("Scripting.Dictionary");
+
+	while (!fd.AtEndOfStream) {
+		line = fd.ReadLine();
+		if (line.match(re_start)) {
+			WScript.Echo("% " + line + "\n");
+			WScript.Echo("-module(exmpp_known_nss).\n");
+			WScript.Echo("-export([ns_as_list/1]).\n");
+		}
+		if (!dict.Exists(line) && line.match(re)) {
+			WScript.Echo(
+			    "ns_as_list('" + line +
+			    "') ->\n    \"" + line + "\";");
+			dict.Add(line, 1);
+		}
+	}
+	WScript.Echo("\nns_as_list(undefined) ->\n    \"\";");
+	WScript.Echo(
+	    "\nns_as_list(NS) when is_atom(NS) ->\n    atom_to_list(NS);");
+	WScript.Echo("ns_as_list(NS) when is_list(NS) ->\n    NS.");
+
+	/* Done! */
+	fd.close();
+}
diff -r d551623afde5 deps/exmpp/src/core/exmpp_message.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/core/exmpp_message.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,584 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> provides helpers to do message
+%% common operations.
+
+-module(exmpp_message).
+
+-include("exmpp.hrl").
+
+%% Message creation.
+-export([
+	 normal/0,
+	 normal/1,
+	 normal/2,
+	 make_normal/1,
+	 make_normal/2,
+	 make_normal/3,
+	 chat/0,
+	 chat/1,
+	 chat/2,
+	 make_chat/1,
+	 make_chat/2,
+	 make_chat/3,
+	 groupchat/0,
+	 groupchat/1,
+	 groupchat/2,
+	 make_groupchat/1,
+	 make_groupchat/2,
+	 make_groupchat/3,
+	 headline/0,
+	 headline/1,
+	 headline/2,
+	 make_headline/1,
+	 make_headline/2,
+	 make_headline/3,
+	 error/2
+	]).
+
+%% Message standard attributes.
+-export([
+	 is_message/1,
+	 get_type/1,
+	 set_type/2,
+	 get_subject/1,
+	 set_subject/2,
+	 get_body/1,
+	 set_body/2,
+	 get_thread/1,
+	 set_thread/2
+	]).
+
+-define(EMPTY_MESSAGE(NS), #xmlel{ns = NS, name = 'message'}).
+
+%% --------------------------------------------------------------------
+%% Type definitions.
+%% --------------------------------------------------------------------
+
+-type(messagetype() ::
+      normal    |
+      chat      |
+      groupchat |
+      headline  |
+      error
+     ).
+
+%% --------------------------------------------------------------------
+%% Message creation.
+%% --------------------------------------------------------------------
+
+%% @spec () -> Message
+%% @doc Create an empty message stanza.
+%%
+%% The default namespace is `jabber:client'.
+
+-spec normal
+() -> xmlel().
+
+normal() ->
+    make_normal(?NS_JABBER_CLIENT).
+
+%% @spec (Body) -> Message
+%%     Body = string() | binary()
+%%     Message = exmpp_xml:xmlel()
+%% @doc Create a message stanza with a given body.
+%%
+%% The default namespace is `jabber:client'.
+
+-spec normal
+(binary() | string()) -> xmlel().
+
+normal(Body) ->
+    make_normal(?NS_JABBER_CLIENT, Body).
+
+%% @spec (Subject, Body) -> Message
+%%     Subject = string() | binary()
+%%     Body = string() | binary()
+%%     Message = exmpp_xml:xmlel()
+%% @doc Create a message stanza with given subject and body.
+%%
+%% The default namespace is `jabber:client'.
+
+-spec normal
+(binary() | string(), binary() | string()) -> xmlel().
+
+normal(Subject, Body) ->
+    make_normal(?NS_JABBER_CLIENT, Subject, Body).
+
+%% @spec (NS) -> Message
+%%     NS = atom() | string()
+%%     Message = exmpp_xml:xmlel()
+%% @doc Create an empty message stanza.
+
+-spec make_normal
+(xmlname()) -> xmlel().
+
+make_normal(NS) ->
+    set_type(?EMPTY_MESSAGE(NS), 'normal').
+
+%% @spec (NS, Body) -> Message
+%%     NS = atom() | string()
+%%     Body = string() | binary()
+%%     Message = exmpp_xml:xmlel()
+%% @doc Create a message stanza with a given body.
+
+-spec make_normal
+(xmlname(), binary() | string()) -> xmlel().
+
+make_normal(NS, Body) ->
+    set_body(make_normal(NS), Body).
+
+%% @spec (NS, Subject, Body) -> Message
+%%     NS = atom() | string()
+%%     Subject = string() | binary()
+%%     Body = string() | binary()
+%%     Message = exmpp_xml:xmlel()
+%% @doc Create a message stanza with given subject and body.
+
+-spec make_normal
+(xmlname(), binary() | string(), binary() | string()) -> xmlel().
+
+make_normal(NS, Subject, Body) ->
+    set_body(set_subject(make_normal(NS), Subject), Body).
+
+%% @spec () -> Message
+%%     Message = exmpp_xml:xmlel()
+%% @doc Create an empty chat message stanza.
+%%
+%% The default namespace is `jabber:client'.
+
+-spec chat
+() -> xmlel().
+
+chat() ->
+    make_chat(?NS_JABBER_CLIENT).
+
+%% @spec (Body) -> Message
+%%     Body = string() | binary()
+%%     Message = exmpp_xml:xmlel()
+%% @doc Create a chat message stanza with a given body.
+%%
+%% The default namespace is `jabber:client'.
+
+-spec chat
+(binary() | string()) -> xmlel().
+
+chat(Body) ->
+    make_chat(?NS_JABBER_CLIENT, Body).
+
+%% @spec (Subject, Body) -> Message
+%%     Subject = string() | binary()
+%%     Body = string() | binary()
+%%     Message = exmpp_xml:xmlel()
+%% @doc Create a chat message stanza with given subject and body.
+%%
+%% The default namespace is `jabber:client'.
+
+-spec chat
+(binary() | string(), binary() | string()) -> xmlel().
+
+chat(Subject, Body) ->
+    make_chat(?NS_JABBER_CLIENT, Subject, Body).
+
+%% @spec (NS) -> Message
+%%     NS = atom() | string()
+%%     Message = exmpp_xml:xmlel()
+%% @doc Create an empty chat message stanza.
+
+-spec make_chat
+(xmlname()) -> xmlel().
+
+make_chat(NS) ->
+    set_type(?EMPTY_MESSAGE(NS), 'chat').
+
+%% @spec (NS, Body) -> Message
+%%     NS = atom() | string()
+%%     Body = string() | binary()
+%%     Message = exmpp_xml:xmlel()
+%% @doc Create a chat message stanza with a given body.
+
+-spec make_chat
+(xmlname(), binary() | string()) -> xmlel().
+
+make_chat(NS, Body) ->
+    set_body(make_chat(NS), Body).
+
+%% @spec (NS, Subject, Body) -> Message
+%%     NS = atom() | string()
+%%     Subject = string() | binary()
+%%     Body = string() | binary()
+%%     Message = exmpp_xml:xmlel()
+%% @doc Create a chat message stanza with given subject and body.
+
+-spec make_chat
+(xmlname(), binary() | string(), binary() | string()) -> xmlel().
+
+make_chat(NS, Subject, Body) ->
+    set_body(set_subject(make_chat(NS), Subject), Body).
+
+%% @spec () -> Message
+%% @doc Create an empty groupchat message stanza.
+%%
+%% The default namespace is `jabber:client'.
+
+-spec groupchat
+() -> xmlel().
+
+groupchat() ->
+    make_groupchat(?NS_JABBER_CLIENT).
+
+%% @spec (Body) -> Message
+%%     Body = string() | binary()
+%%     Message = exmpp_xml:xmlel()
+%% @doc Create a groupchat message stanza with a given body.
+%%
+%% The default namespace is `jabber:client'.
+
+-spec groupchat
+(binary() | string()) -> xmlel().
+
+groupchat(Body) ->
+    make_groupchat(?NS_JABBER_CLIENT, Body).
+
+%% @spec (Subject, Body) -> Message
+%%     Subject = string() | binary()
+%%     Body = string() | binary()
+%%     Message = exmpp_xml:xmlel()
+%% @doc Create a groupchat message stanza with given subject and body.
+%%
+%% The default namespace is `jabber:client'.
+
+-spec groupchat
+(binary() | string(), binary() | string()) -> xmlel().
+
+groupchat(Subject, Body) ->
+    make_groupchat(?NS_JABBER_CLIENT, Subject, Body).
+
+%% @spec (NS) -> Message
+%%     NS = atom() | string()
+%%     Message = exmpp_xml:xmlel()
+%% @doc Create an empty groupchat message stanza.
+
+-spec make_groupchat
+(xmlname()) -> xmlel().
+
+make_groupchat(NS) ->
+    set_type(?EMPTY_MESSAGE(NS), 'groupchat').
+
+%% @spec (NS, Body) -> Message
+%%     NS = atom() | string()
+%%     Body = string() | binary()
+%%     Message = exmpp_xml:xmlel()
+%% @doc Create a groupchat message stanza with a given body.
+
+-spec make_groupchat
+(xmlname(), binary() | string()) -> xmlel().
+
+make_groupchat(NS, Body) ->
+    set_body(make_groupchat(NS), Body).
+
+%% @spec (NS, Subject, Body) -> Message
+%%     NS = atom() | string()
+%%     Subject = string() | binary()
+%%     Body = string() | binary()
+%%     Message = exmpp_xml:xmlel()
+%% @doc Create a groupchat message stanza with given subject and body.
+
+-spec make_groupchat
+(xmlname(), binary() | string(), binary() | string()) -> xmlel().
+
+make_groupchat(NS, Subject, Body) ->
+    set_body(set_subject(make_groupchat(NS), Subject), Body).
+
+%% @spec () -> Message
+%% @doc Create an empty headline message stanza.
+%%
+%% The default namespace is `jabber:client'.
+
+-spec headline
+() -> xmlel().
+
+headline() ->
+    make_headline(?NS_JABBER_CLIENT).
+
+%% @spec (Body) -> Message
+%%     Body = string() | binary()
+%%     Message = exmpp_xml:xmlel()
+%% @doc Create a headline message stanza with a given body.
+%%
+%% The default namespace is `jabber:client'.
+
+-spec headline
+(binary() | string()) -> xmlel().
+
+headline(Body) ->
+    make_headline(?NS_JABBER_CLIENT, Body).
+
+%% @spec (Subject, Body) -> Message
+%%     Subject = string() | binary()
+%%     Body = string() | binary()
+%%     Message = exmpp_xml:xmlel()
+%% @doc Create a headline message stanza with given subject and body.
+%%
+%% The default namespace is `jabber:client'.
+
+-spec headline
+(binary() | string(), binary() | string()) -> xmlel().
+
+headline(Subject, Body) ->
+    make_headline(?NS_JABBER_CLIENT, Subject, Body).
+
+%% @spec (NS) -> Message
+%%     NS = atom() | string()
+%%     Message = exmpp_xml:xmlel()
+%% @doc Create an empty headline message stanza.
+
+-spec make_headline
+(xmlname()) -> xmlel().
+
+make_headline(NS) ->
+    set_type(?EMPTY_MESSAGE(NS), 'headline').
+
+%% @spec (NS, Body) -> Message
+%%     NS = atom() | string()
+%%     Body = string() | binary()
+%%     Message = exmpp_xml:xmlel()
+%% @doc Create a headline message stanza with a given body.
+
+-spec make_headline
+(xmlname(), binary() | string()) -> xmlel().
+
+make_headline(NS, Body) ->
+    set_body(make_headline(NS), Body).
+
+%% @spec (NS, Subject, Body) -> Message
+%%     NS = atom() | string()
+%%     Subject = string() | binary()
+%%     Body = string() | binary()
+%%     Message = exmpp_xml:xmlel()
+%% @doc Create a headline message stanza with given subject and body.
+
+-spec make_headline
+(xmlname(), binary() | string(), binary() | string()) -> xmlel().
+
+make_headline(NS, Subject, Body) ->
+    set_body(set_subject(make_headline(NS), Subject), Body).
+
+%% @spec (Message, Error) -> New_Message
+%%     Message = exmpp_xml:xmlel()
+%%     Error = exmpp_xml:xmlel() | atom()
+%%     New_Message = exmpp_xml:xmlel()
+%% @doc Prepare a message stanza to notify an error.
+%%
+%% If `Error' is an atom, it must be a standard condition defined by
+%% XMPP Core.
+
+-spec error
+(xmlel(), xmlel() | atom()) -> xmlel().
+
+error(Message, Condition) when is_atom(Condition) ->
+    Error = exmpp_stanza:error(Message#xmlel.ns, Condition),
+    error(Message, Error);
+error(Message, Error) when ?IS_MESSAGE(Message) ->
+    exmpp_stanza:reply_with_error(Message, Error).
+
+%% --------------------------------------------------------------------
+%% Message standard attributes.
+%% --------------------------------------------------------------------
+
+%% @spec (El) -> bool
+%%     El = exmpp_xml:xmlel()
+%% @doc Tell if `El' is a message.
+%%
+%% You should probably use the `IS_MESSAGE(El)' guard expression.
+
+-spec is_message
+(xmlel()) -> bool().
+
+is_message(Message) when ?IS_MESSAGE(Message) -> true;
+is_message(_El)                               -> false.
+
+%% @spec (Message) -> Type
+%%     Message = exmpp_xml:xmlel()
+%%     Type = chat | groupchat | headline | normal | error
+%% @doc Return the type of the given `<message/>'.
+
+-spec get_type
+(xmlel()) -> messagetype().
+
+get_type(Message) when ?IS_MESSAGE(Message) ->
+    case exmpp_stanza:get_type(Message) of
+        <<"chat">>      -> 'chat';
+        <<"groupchat">> -> 'groupchat';
+        <<"headline">>  -> 'headline';
+        <<"normal">>    -> 'normal';
+        <<"error">>     -> 'error';
+        _               -> 'normal'
+    end.
+
+%% @spec (Message, Type) -> New_Message
+%%     Message = exmpp_xml:xmlel()
+%%     Type = chat | groupchat | headline | normal | error | binary()
+%%     New_Message = exmpp_xml:xmlel()
+%% @doc Set the type of the given `<message/>'.
+%%
+%% If `Type' isn't a valid, the type is set to `normal'.
+
+-spec set_type
+(xmlel(), messagetype() | binary() | string()) -> xmlel().
+
+set_type(Message, Type) when is_binary(Type) ->
+    set_type(Message, binary_to_list(Type));
+set_type(Message, Type) when is_list(Type) ->
+    set_type(Message, list_to_atom(Type));
+
+set_type(Message, Type) when ?IS_MESSAGE(Message), is_atom(Type) ->
+    Type_B = case Type of
+		 'chat'      -> <<"chat">>;
+		 'groupchat' -> <<"groupchat">>;
+		 'headline'  -> <<"headline">>;
+		 'normal'    -> <<"normal">>;
+		 'error'     -> <<"error">>;
+		 _           -> <<"normal">>
+				    end,
+    exmpp_stanza:set_type(Message, Type_B).
+
+%% @spec (Message) -> Subject | undefined
+%%     Message = exmpp_xml:xmlel()
+%%     Subject = binary()
+%% @doc Return the subject of the message.
+
+-spec get_subject
+(xmlel()) -> binary().
+
+get_subject(#xmlel{ns = NS} = Message) when ?IS_MESSAGE(Message) ->
+    case exmpp_xml:get_element(Message, NS, 'subject') of
+        undefined ->
+            undefined;
+        Subject_El ->
+            exmpp_xml:get_cdata(Subject_El)
+    end.
+
+%% @spec (Message, Subject) -> New_Message
+%%     Message = exmpp_xml:xmlel()
+%%     Subject = string() | binary()
+%%     New_Message = exmpp_xml:xmlel()
+%% @doc Set the `<subject/>' field of a message stanza.
+%%
+%% If `Subject' is an empty string (or an empty binary), the previous
+%% subject is removed.
+
+-spec set_subject
+(xmlel(), binary() | string()) -> xmlel().
+
+set_subject(#xmlel{ns = NS} = Message, <<>>) when ?IS_MESSAGE(Message) ->
+    exmpp_xml:remove_element(Message, NS, 'subject');
+set_subject(#xmlel{ns = NS} = Message, "") when ?IS_MESSAGE(Message) ->
+    exmpp_xml:remove_element(Message, NS, 'subject');
+set_subject(#xmlel{ns = NS} = Message, Subject) when ?IS_MESSAGE(Message) ->
+    New_Subject_El = exmpp_xml:set_cdata(#xmlel{ns = NS, name = 'subject'},
+					 Subject),
+    case exmpp_xml:get_element(Message, NS, 'subject') of
+        undefined ->
+            exmpp_xml:append_child(Message, New_Subject_El);
+        Subject_El ->
+            exmpp_xml:replace_child(Message, Subject_El, New_Subject_El)
+    end.
+
+%% @spec (Message) -> Body | undefined
+%%     Message = exmpp_xml:xmlel()
+%%     Body = binary()
+%% @doc Return the body of the message.
+
+-spec get_body
+(xmlel()) -> binary().
+
+get_body(#xmlel{ns = NS} = Message) when ?IS_MESSAGE(Message) ->
+    case exmpp_xml:get_element(Message, NS, 'body') of
+        undefined ->
+            undefined;
+        Body_El ->
+            exmpp_xml:get_cdata(Body_El)
+    end.
+
+%% @spec (Message, Body) -> New_Message
+%%     Message = exmpp_xml:xmlel()
+%%     Body = string() | binary()
+%%     New_Message = exmpp_xml:xmlel()
+%% @doc Set the `<body/>' field of a message stanza.
+%%
+%% If `Body' is an empty string (or an empty binary), the previous
+%% body is removed.
+
+-spec set_body
+(xmlel(), binary() | string()) -> xmlel().
+
+set_body(#xmlel{ns = NS} = Message, <<>>) when ?IS_MESSAGE(Message) ->
+    exmpp_xml:remove_element(Message, NS, 'body');
+set_body(#xmlel{ns = NS} = Message, "") when ?IS_MESSAGE(Message) ->
+    exmpp_xml:remove_element(Message, NS, 'body');
+set_body(#xmlel{ns = NS} = Message, Body) when ?IS_MESSAGE(Message) ->
+    New_Body_El = exmpp_xml:set_cdata(#xmlel{ns = NS, name = 'body'},
+				      Body),
+    case exmpp_xml:get_element(Message, NS, 'body') of
+        undefined ->
+            exmpp_xml:append_child(Message, New_Body_El);
+        Body_El ->
+            exmpp_xml:replace_child(Message, Body_El, New_Body_El)
+    end.
+
+%% @spec (Message) -> Thread | undefined
+%%     Message = exmpp_xml:xmlel()
+%%     Thread = binary()
+%% @doc Return the thread of the message.
+
+-spec get_thread
+(xmlel()) -> binary().
+
+get_thread(#xmlel{ns = NS} = Message) when ?IS_MESSAGE(Message) ->
+    case exmpp_xml:get_element(Message, NS, 'thread') of
+        undefined ->
+            undefined;
+        Thread_El ->
+            exmpp_xml:get_cdata(Thread_El)
+    end.
+
+%% @spec (Message, Thread) -> New_Message
+%%     Message = exmpp_xml:xmlel()
+%%     Thread = string() | binary()
+%%     New_Message = exmpp_xml:xmlel()
+%% @doc Set the `<thread/>' field of a message stanza.
+%%
+%% If `Thread' is an empty string (or an empty binary), the previous
+%% thread is removed.
+
+-spec set_thread
+(xmlel(), binary()) -> xmlel().
+
+set_thread(#xmlel{ns = NS} = Message, <<>>) when ?IS_MESSAGE(Message) ->
+    exmpp_xml:remove_element(Message, NS, 'thread');
+set_thread(#xmlel{ns = NS} = Message, "") when ?IS_MESSAGE(Message) ->
+    exmpp_xml:remove_element(Message, NS, 'thread');
+set_thread(#xmlel{ns = NS} = Message, Thread) when ?IS_MESSAGE(Message) ->
+    New_Thread_El = exmpp_xml:set_cdata(#xmlel{ns = NS, name = 'thread'},
+					Thread),
+    case exmpp_xml:get_element(Message, NS, 'thread') of
+        undefined ->
+            exmpp_xml:append_child(Message, New_Thread_El);
+        Thread_El ->
+            exmpp_xml:replace_child(Message, Thread_El, New_Thread_El)
+    end.
diff -r d551623afde5 deps/exmpp/src/core/exmpp_presence.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/core/exmpp_presence.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,409 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> provides helpers to do presence
+%% common operations.
+
+-module(exmpp_presence).
+
+-include("exmpp.hrl").
+
+%% Presence creation.
+-export([
+	 presence/2,
+	 available/0,
+	 unavailable/0,
+	 subscribe/0,
+	 subscribed/0,
+	 unsubscribe/0,
+	 unsubscribed/0,
+	 probe/0,
+	 error/2
+	]).
+
+%% Presence standard attributes.
+-export([
+	 is_presence/1,
+	 get_type/1,
+	 get_show/1,
+	 set_show/2,
+	 get_status/1,
+	 set_status/2,
+	 get_priority/1,
+	 set_priority/2
+	]).
+
+-define(EMPTY_PRESENCE, #xmlel{ns = ?NS_JABBER_CLIENT, name = 'presence'}).
+
+%% --------------------------------------------------------------------
+%% Type definitions.
+%% --------------------------------------------------------------------
+
+-type(presencetype() ::
+      available    |
+      unavailable  |
+      subscribe    |
+      subscribed   |
+      unsubscribe  |
+      unsubscribed |
+      probe        |
+      error
+     ).
+
+-type(presenceshow() ::
+      online |
+      away   |
+      chat   |
+      dnd    |
+      xa
+     ).
+
+%% --------------------------------------------------------------------
+%% Presence creation.
+%% --------------------------------------------------------------------
+
+%% @spec (Type, Status) -> Presence
+%%     Type = available | unavailable | subscribe | subscribed | unsubscribe | unsubscribed | probe | error
+%%     Status = string() | binary()
+%%     Presence = exmpp_xml:xmlel()
+%% @doc Create a presence stanza with given type and status.
+
+-spec presence
+(presencetype(), binary() | string()) -> xmlel().
+
+presence(Type, Status) ->
+    set_status(set_type(?EMPTY_PRESENCE, Type), Status).
+
+%% @spec () -> Presence
+%%     Presence = exmpp_xml:xmlel()
+%% @doc Create a presence stanza to tell that the sender is available.
+
+-spec available
+() -> xmlel().
+
+available() ->
+    ?EMPTY_PRESENCE.
+
+%% @spec () -> Presence
+%%     Presence = exmpp_xml:xmlel()
+%% @doc Create a presence stanza to tell that the sender is not available.
+
+-spec unavailable
+() -> xmlel().
+
+unavailable() ->
+    set_type(?EMPTY_PRESENCE, "unavailable").
+
+%% @spec () -> Presence
+%%     Presence = exmpp_xml:xmlel()
+%% @doc Create a presence stanza to tell that the sender wants to
+%% subscribe to the receiver's presence.
+
+-spec subscribe
+() -> xmlel().
+
+subscribe() ->
+    set_type(?EMPTY_PRESENCE, "subscribe").
+
+%% @spec () -> Presence
+%%     Presence = exmpp_xml:xmlel()
+%% @doc Create a presence stanza to tell that the receiver was
+%% subscribed from the sender's presence.
+
+-spec subscribed
+() -> xmlel().
+
+subscribed() ->
+    set_type(?EMPTY_PRESENCE, "subscribed").
+
+%% @spec () -> Presence
+%%     Presence = exmpp_xml:xmlel()
+%% @doc Create a presence stanza to tell that the sender wants to
+%% unsubscribe to the receiver's presence.
+
+-spec unsubscribe
+() -> xmlel().
+
+unsubscribe() ->
+    set_type(?EMPTY_PRESENCE, "unsubscribe").
+
+%% @spec () -> Presence
+%%     Presence = exmpp_xml:xmlel()
+%% @doc Create a presence stanza to tell that the receiver was
+%% unsubscribed from the sender's presence.
+
+-spec unsubscribed
+() -> xmlel().
+
+unsubscribed() ->
+    set_type(?EMPTY_PRESENCE, "unsubscribed").
+
+%% @spec () -> Presence
+%%     Presence = exmpp_xml:xmlel()
+%% @doc Create a probe presence stanza.
+
+-spec probe
+() -> xmlel().
+
+probe() ->
+    set_type(?EMPTY_PRESENCE, "probe").
+
+%% @spec (Presence, Error) -> New_Presence
+%%     Presence = exmpp_xml:xmlel()
+%%     Error = exmpp_xml:xmlel() | atom()
+%%     New_Presence = exmpp_xml:xmlel()
+%% @doc Prepare a presence stanza to notify an error.
+%%
+%% If `Error' is an atom, it must be a standard condition defined by
+%% XMPP Core.
+
+-spec error
+(xmlel(), xmlel() | atom()) -> xmlel().
+
+error(Presence, Condition) when is_atom(Condition) ->
+    Error = exmpp_stanza:error(Presence#xmlel.ns, Condition),
+    error(Presence, Error);
+error(Presence, Error) when ?IS_PRESENCE(Presence) ->
+    exmpp_stanza:reply_with_error(Presence, Error).
+
+%% --------------------------------------------------------------------
+%% Presence standard attributes.
+%% --------------------------------------------------------------------
+
+%% @spec (El) -> bool
+%%     El = exmpp_xml:xmlel()
+%% @doc Tell if `El' is a presence.
+%%
+%% You should probably use the `IS_PRESENCE(El)' guard expression.
+
+-spec is_presence
+(xmlel()) -> bool().
+
+is_presence(Presence) when ?IS_PRESENCE(Presence) -> true;
+is_presence(_El)                                  -> false.
+
+%% @spec (Presence) -> Type
+%%     Presence = exmpp_xml:xmlel()
+%%     Type = available | unavailable | subscribe | subscribed | unsubscribe | unsubscribed | probe | error | undefined
+%% @doc Return the type of the given presence stanza.
+
+-spec get_type
+(xmlel()) -> presencetype() | undefined.
+
+get_type(Presence) when ?IS_PRESENCE(Presence) ->
+    case exmpp_stanza:get_type(Presence) of
+        undefined          -> 'available';
+        <<"unavailable">>  -> 'unavailable';
+        <<"subscribe">>    -> 'subscribe';
+        <<"subscribed">>   -> 'subscribed';
+        <<"unsubscribe">>  -> 'unsubscribe';
+        <<"unsubscribed">> -> 'unsubscribed';
+        <<"probe">>        -> 'probe';
+        <<"error">>        -> 'error';
+        _                  -> undefined
+    end.
+
+%% @spec (Presence, Type) -> New_Presence
+%%     Presence = exmpp_xml:xmlel()
+%%     Type = available | unavailable | subscribe | subscribed | unsubscribe | unsubscribed | probe | error | binary() | string()
+%%     New_Presence = exmpp_xml:xmlel()
+%% @doc Set the type of the given presence stanza.
+
+-spec set_type
+(xmlel(), presencetype() | binary() | string()) -> xmlel().
+
+set_type(Presence, <<>>) when ?IS_PRESENCE(Presence) ->
+    exmpp_xml:remove_attribute(Presence, 'type');
+set_type(Presence, "") when ?IS_PRESENCE(Presence) ->
+    exmpp_xml:remove_attribute(Presence, 'type');
+set_type(Presence, 'available') when ?IS_PRESENCE(Presence) ->
+    exmpp_xml:remove_attribute(Presence, 'type');
+set_type(Presence, <<"available">>) when ?IS_PRESENCE(Presence) ->
+    exmpp_xml:remove_attribute(Presence, 'type');
+set_type(Presence, "available") when ?IS_PRESENCE(Presence) ->
+    exmpp_xml:remove_attribute(Presence, 'type');
+
+set_type(Presence, Type) when is_binary(Type) ->
+    set_type(Presence, binary_to_list(Type));
+set_type(Presence, Type) when is_list(Type) ->
+    set_type(Presence, list_to_atom(Type));
+
+set_type(Presence, Type) when ?IS_PRESENCE(Presence), is_atom(Type) ->
+    Type_B = case Type of
+		 'unavailable'  -> <<"unavailable">>;
+		 'subscribe'    -> <<"subscribe">>;
+		 'subscribed'   -> <<"subscribed">>;
+		 'unsubscribe'  -> <<"unsubscribe">>;
+		 'unsubscribed' -> <<"unsubscribed">>;
+		 'probe'        -> <<"probe">>;
+		 'error'        -> <<"error">>;
+		 _              -> throw({presence, set_type, invalid_type, Type})
+	     end,
+    exmpp_stanza:set_type(Presence, Type_B).
+
+%% @spec (Presence) -> Show | undefined
+%%     Presence = exmpp_xml:xmlel()
+%%     Show = online | away | chat | dnd | xa | undefined
+%% @doc Return the show attribute of the presence.
+
+-spec get_show
+(xmlel()) -> presenceshow() | undefined.
+
+get_show(#xmlel{ns = NS} = Presence) when ?IS_PRESENCE(Presence) ->
+    case exmpp_xml:get_element(Presence, NS, 'show') of
+        undefined ->
+            'online';
+        Show_El ->
+            case exmpp_utils:strip(exmpp_xml:get_cdata(Show_El)) of
+                <<"away">> -> 'away';
+                <<"chat">> -> 'chat';
+                <<"dnd">>  -> 'dnd';
+                <<"xa">>   -> 'xa';
+                _          -> undefined
+            end
+    end.
+
+%% @spec (Presence, Show) -> New_Presence
+%%     Presence = exmpp_xml:xmlel()
+%%     Show = online | away | chat | dnd | xa | binary() | string()
+%%     New_Presence = exmpp_xml:xmlel()
+%% @doc Set the `<show/>' field of a presence stanza.
+%%
+%% If `Type' is an empty string or the atom `online', the `<show/>'
+%% element is removed.
+
+-spec set_show
+(xmlel(), presenceshow() | binary() | string()) -> xmlel().
+
+set_show(#xmlel{ns = NS} = Presence, <<>>) when ?IS_PRESENCE(Presence)->
+    exmpp_xml:remove_element(Presence, NS, 'show');
+set_show(#xmlel{ns = NS} = Presence, "") when ?IS_PRESENCE(Presence)->
+    exmpp_xml:remove_element(Presence, NS, 'show');
+set_show(#xmlel{ns = NS} = Presence, 'online')
+  when ?IS_PRESENCE(Presence) ->
+    exmpp_xml:remove_element(Presence, NS, 'show');
+set_show(#xmlel{ns = NS} = Presence, <<"online">>)
+  when ?IS_PRESENCE(Presence) ->
+    exmpp_xml:remove_element(Presence, NS, 'show');
+set_show(#xmlel{ns = NS} = Presence, "online")
+  when ?IS_PRESENCE(Presence) ->
+    exmpp_xml:remove_element(Presence, NS, 'show');
+
+set_show(Presence, Show) when is_binary(Show) ->
+    set_show(Presence, binary_to_list(Show));
+set_show(Presence, Show) when is_list(Show) ->
+    set_show(Presence, list_to_atom(Show));
+
+set_show(#xmlel{ns = NS} = Presence, Show)
+  when ?IS_PRESENCE(Presence), is_atom(Show) ->
+    Show_B = case Show of
+		 'away' -> <<"away">>;
+		 'chat' -> <<"chat">>;
+		 'dnd'  -> <<"dnd">>;
+		 'xa'   -> <<"xa">>;
+		 _      -> throw({presence, set_show, invalid_show, Show})
+	     end,
+    New_Show_El = exmpp_xml:set_cdata(#xmlel{ns = NS, name = 'show'}, Show_B),
+    case exmpp_xml:get_element(Presence, NS, 'show') of
+        undefined ->
+            exmpp_xml:append_child(Presence, New_Show_El);
+        Show_El ->
+            exmpp_xml:replace_child(Presence, Show_El, New_Show_El)
+    end.
+
+%% @spec (Presence) -> Status | undefined
+%%     Presence = exmpp_xml:xmlel()
+%%     Status = binary()
+%% @doc Return the status attribute of the presence.
+
+-spec get_status
+(xmlel()) -> binary() | undefined.
+
+get_status(#xmlel{ns = NS} = Presence) when ?IS_PRESENCE(Presence) ->
+    case exmpp_xml:get_element(Presence, NS, 'status') of
+        undefined ->
+            undefined;
+        Status_El ->
+            exmpp_xml:get_cdata(Status_El)
+    end.
+
+%% @spec (Presence, Status) -> New_Presence
+%%     Presence = exmpp_xml:xmlel()
+%%     Status = string() | binary()
+%%     New_Presence = exmpp_xml:xmlel()
+%% @doc Set the `<status/>' field of a presence stanza.
+%%
+%% If `Status' is an empty string (or an empty binary), the previous
+%% status is removed.
+
+-spec set_status
+(xmlel(), binary() | string() | undefined) -> xmlel().
+
+set_status(#xmlel{ns = NS} = Presence, undefined)
+  when ?IS_PRESENCE(Presence) ->
+    exmpp_xml:remove_element(Presence, NS, 'status');
+set_status(#xmlel{ns = NS} = Presence, <<>>) when ?IS_PRESENCE(Presence) ->
+    exmpp_xml:remove_element(Presence, NS, 'status');
+set_status(#xmlel{ns = NS} = Presence, "") when ?IS_PRESENCE(Presence) ->
+    exmpp_xml:remove_element(Presence, NS, 'status');
+set_status(#xmlel{ns = NS} = Presence, Status) when ?IS_PRESENCE(Presence) ->
+    New_Status_El = exmpp_xml:set_cdata(#xmlel{ns = NS, name = 'status'},
+					Status),
+    case exmpp_xml:get_element(Presence, NS, 'status') of
+        undefined ->
+            exmpp_xml:append_child(Presence, New_Status_El);
+        Status_El ->
+            exmpp_xml:replace_child(Presence, Status_El, New_Status_El)
+    end.
+
+%% @spec (Presence) -> Priority
+%%     Presence = exmpp_xml:xmlel()
+%%     Priority = integer()
+%% @doc Return the priority attribute of the presence.
+
+-spec get_priority
+(xmlel()) -> integer().
+
+get_priority(#xmlel{ns = NS} = Presence) when ?IS_PRESENCE(Presence) ->
+    case exmpp_xml:get_element(Presence, NS, 'priority') of
+        undefined ->
+            0;
+        Priority_El ->
+            case exmpp_xml:get_cdata_as_list(Priority_El) of
+                "" -> 0;
+                P  -> list_to_integer(P)
+            end
+    end.
+
+%% @spec (Presence, Priority) -> New_Presence
+%%     Presence = exmpp_xml:xmlel()
+%%     Priority = integer()
+%%     New_Presence = exmpp_xml:xmlel()
+%% @doc Set the `<priority/>' field of a presence stanza.
+
+-spec set_priority
+(xmlel(), integer()) -> xmlel().
+
+set_priority(#xmlel{ns = NS} = Presence, Priority)
+  when ?IS_PRESENCE(Presence) andalso is_integer(Priority) ->
+    New_Priority_El = exmpp_xml:set_cdata(#xmlel{ns = NS, name = 'priority'},
+					  Priority),
+    case exmpp_xml:get_element(Presence, NS, 'priority') of
+        undefined ->
+            exmpp_xml:append_child(Presence, New_Priority_El);
+        Priority_El ->
+            exmpp_xml:replace_child(Presence, Priority_El, New_Priority_El)
+    end.
diff -r d551623afde5 deps/exmpp/src/core/exmpp_stanza.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/core/exmpp_stanza.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,1022 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Mickael Remond <mickael.remond@process-one.net>
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> provides helpers to manipulate
+%% standard stanza.
+
+-module(exmpp_stanza).
+
+-include("exmpp.hrl").
+
+%% Stanza common components.
+-export([
+	 get_error/1
+	]).
+
+%% Stanza standard attributes.
+-export([
+	 get_sender/1,
+	 get_sender_from_attrs/1,
+	 set_sender/2,
+	 set_sender_in_attrs/2,
+	 remove_sender/1,
+	 remove_sender_in_attrs/1,
+	 get_recipient/1,
+	 get_recipient_from_attrs/1,
+	 set_recipient/2,
+	 set_recipient_in_attrs/2,
+	 remove_recipient/1,
+	 remove_recipient_in_attrs/1,
+	 set_jids_in_attrs/3,
+	 set_jids/3,
+	 get_id/1,
+	 get_id_from_attrs/1,
+	 set_id/2,
+	 set_id_in_attrs/2,
+	 get_type/1,
+	 get_type_from_attrs/1,
+	 set_type/2,
+	 set_type_in_attrs/2,
+	 get_lang/1,
+	 get_lang_from_attrs/1,
+	 set_lang/2,
+	 set_lang_in_attrs/2
+	]).
+
+%% Common operations.
+-export([
+	 reply/1,
+	 reply_without_content/1,
+	 reply_from_attrs/1,
+	 reply_with_error/2
+	]).
+
+%% Stanza-level errors.
+-export([
+	 error/2,
+	 error/3,
+	 stanza_error/2,
+	 stanza_error_without_original/2,
+	 is_stanza_error/1,
+	 get_error_type/1,
+	 set_error_type/2,
+	 set_error_type_from_condition/2,
+	 get_condition/1,
+	 get_text/1
+	]).
+
+%% Serialization wrappers.
+-export([
+	 to_list/2,
+	 to_list/3,
+	 to_list/1,
+	 to_binary/2,
+	 to_binary/3,
+	 to_binary/1,
+	 to_iolist/2,
+	 to_iolist/3,
+	 to_iolist/1
+	]).
+
+%% --------------------------------------------------------------------
+%% Documentation / type definition.
+%% --------------------------------------------------------------------
+
+-type(jidlike() :: exmpp_jid:jid() | binary() | string()).
+-type(id()      :: binary() | string() | random | undefined).
+-type(type()    :: binary() | string() | integer() | atom()).
+-type(lang()    :: binary() | string() | undefined).
+
+%% --------------------------------------------------------------------
+%% Stanza common components.
+%% --------------------------------------------------------------------
+
+%% @spec (Stanza) -> Error | undefined
+%%     Stanza = exmpp_xml:xmlel() | iq()
+%%     Error = exmpp_xml:xmlel()
+%% @doc Return the error element from `Stanza'.
+%%
+%% The error element is supposed to have the name `error' and the same
+%% namespace as the stanza.
+
+-spec(get_error/1 :: (#xmlel{}) -> #xmlel{} | undefined).
+
+get_error(#xmlel{ns = NS} = Stanza) ->
+    exmpp_xml:get_element(Stanza, NS, 'error');
+get_error(#iq{type = error, error = Error}) ->
+    Error;
+get_error(#iq{}) ->
+    undefined.
+
+%% --------------------------------------------------------------------
+%% Stanza standard attributes.
+%% --------------------------------------------------------------------
+
+%% @spec (Stanza) -> Sender | undefined
+%%     Stanza = exmpp_xml:xmlel()
+%%     Sender = binary()
+%% @doc Return the sender.
+%%
+%% The return value should be a JID and may be parsed with
+%% {@link exmpp_jid:parse/1}.
+
+-spec(get_sender/1 :: (#xmlel{}) -> binary() | undefined).
+
+get_sender(#xmlel{attrs = Attrs} = _Stanza) ->
+    get_sender_from_attrs(Attrs).
+
+%% @spec (Attrs) -> Sender | undefined
+%%     Attrs = [exmpp_xml:xmlattr()]
+%%     Sender = binary()
+%% @doc Return the sender.
+%%
+%% The return value should be a JID and may be parsed with
+%% {@link exmpp_jid:parse/1}.
+
+-spec(get_sender_from_attrs/1 :: ([#xmlattr{}]) -> binary() | undefined).
+
+get_sender_from_attrs(Attrs) ->
+    exmpp_xml:get_attribute_from_list_as_binary(Attrs, 'from', undefined).
+
+%% @spec (Stanza, Sender) -> New_Stanza
+%%     Stanza = exmpp_xml:xmlel()
+%%     Sender = exmpp_jid:jid() | binary() | string() | undefined
+%%     New_Stanza = exmpp_xml:xmlel()
+%% @doc Set the sender.
+%%
+%% If `Sender' is set to `undefined', the sender is removed.
+
+-spec(set_sender/2 ::
+      (#xmlel{}, jidlike() | undefined) -> #xmlel{}).
+
+set_sender(#xmlel{attrs = Attrs} = Stanza, Sender) ->
+    New_Attrs = set_sender_in_attrs(Attrs, Sender),
+    Stanza#xmlel{attrs = New_Attrs}.
+
+%% @spec (Attrs, Sender) -> New_Attrs
+%%     Attrs = [exmpp_xml:xmlattr()]
+%%     Sender = exmpp_jid:jid() | binary() | string() | undefined
+%%     New_Attrs = [exmpp_xml:xmlattr()]
+%% @doc Set the sender.
+%%
+%% If `Sender' is set to `undefined', the sender is removed.
+
+-spec(set_sender_in_attrs/2 ::
+      ([#xmlattr{}], jidlike() | undefined) -> [#xmlattr{}]).
+
+set_sender_in_attrs(Attrs, undefined) ->
+    remove_sender_in_attrs(Attrs);
+set_sender_in_attrs(Attrs, Sender) when ?IS_JID(Sender) ->
+    set_sender_in_attrs(Attrs, exmpp_jid:to_binary(Sender));
+set_sender_in_attrs(Attrs, Sender) ->
+    exmpp_xml:set_attribute_in_list(Attrs, 'from', Sender).
+
+%% @spec (Stanza) -> New_Stanza
+%%     Stanza = exmpp_xml:xmlel()
+%%     New_Stanza = exmpp_xml:xmlel()
+%% @doc Remove the sender.
+
+-spec(remove_sender/1 :: (#xmlel{}) -> #xmlel{}).
+
+remove_sender(#xmlel{attrs = Attrs} = Stanza) ->
+    New_Attrs = remove_sender_in_attrs(Attrs),
+    Stanza#xmlel{attrs = New_Attrs}.
+
+%% @spec (Attrs) -> New_Attrs
+%%     Attrs = [exmpp_xml:xmlattr()]
+%%     New_Attrs = [exmpp_xml:xmlnattribute()]
+%% @doc Remove the sender.
+
+-spec(remove_sender_in_attrs/1 :: ([#xmlattr{}]) -> [#xmlattr{}]).
+
+remove_sender_in_attrs(Attrs) ->
+    exmpp_xml:remove_attribute_from_list(Attrs, 'from').
+
+%% @spec (Stanza) -> Recipient | undefined
+%%     Stanza = exmpp_xml:xmlel()
+%%     Recipient = binary()
+%% @doc Return the recipient.
+%%
+%% The return value should be a JID and may be parsed with
+%% {@link exmpp_jid:parse/1}.
+
+-spec(get_recipient/1 :: (#xmlel{}) -> binary() | undefined).
+
+get_recipient(#xmlel{attrs = Attrs} = _Stanza) ->
+    get_recipient_from_attrs(Attrs).
+
+%% @spec (Attrs) -> Recipient | undefined
+%%     Attrs = [exmpp_xml:xmlattr()]
+%%     Recipient = binary()
+%% @doc Return the recipient.
+%%
+%% The return value should be a JID and may be parsed with
+%% {@link exmpp_jid:parse/1}.
+
+-spec(get_recipient_from_attrs/1 :: ([#xmlattr{}]) -> binary() | undefined).
+
+get_recipient_from_attrs(Attrs) ->
+    exmpp_xml:get_attribute_from_list_as_binary(Attrs, 'to', undefined).
+
+%% @spec (Stanza, Recipient) -> New_Stanza
+%%     Stanza = exmpp_xml:xmlel()
+%%     Recipient = exmpp_jid:jid() | binary() | string() | undefined
+%%     New_Stanza = exmpp_xml:xmlel()
+%% @doc Set the recipient.
+%%
+%% If `Recipient' is set to `undefined', the recipient is removed.
+
+-spec(set_recipient/2 ::
+      (#xmlel{}, jidlike() | undefined) -> #xmlel{}).
+
+set_recipient(#xmlel{attrs = Attrs} = Stanza, Recipient) ->
+    New_Attrs = set_recipient_in_attrs(Attrs, Recipient),
+    Stanza#xmlel{attrs = New_Attrs}.
+
+%% @spec (Attrs, Recipient) -> New_Attrs
+%%     Attrs = [exmpp_xml:xmlattr()]
+%%     Recipient = exmpp_jid:jid() | binary() | string() | undefined
+%%     New_Attrs = [exmpp_xml:xmlnattribute()]
+%% @doc Set the recipient.
+%%
+%% If `Recipient' is set to `undefined', the recipient is removed.
+
+-spec(set_recipient_in_attrs/2 ::
+      ([#xmlattr{}], jidlike() | undefined) -> [#xmlattr{}]).
+
+set_recipient_in_attrs(Attrs, undefined) ->
+    remove_recipient_in_attrs(Attrs);
+set_recipient_in_attrs(Attrs, Recipient) when ?IS_JID(Recipient) ->
+    set_recipient_in_attrs(Attrs, exmpp_jid:to_binary(Recipient));
+set_recipient_in_attrs(Attrs, Recipient) ->
+    exmpp_xml:set_attribute_in_list(Attrs, 'to', Recipient).
+
+%% @spec (Stanza) -> New_Stanza
+%%     Stanza = exmpp_xml:xmlel()
+%%     New_Stanza = exmpp_xml:xmlel()
+%% @doc Remove the recipient.
+
+-spec(remove_recipient/1 :: (#xmlel{}) -> #xmlel{}).
+
+remove_recipient(#xmlel{attrs= Attrs} = Stanza) ->
+    New_Attrs = remove_recipient_in_attrs(Attrs),
+    Stanza#xmlel{attrs = New_Attrs}.
+
+%% @spec (Attrs) -> New_Attrs
+%%     Attrs = [exmpp_xml:xmlattr()]
+%%     New_Attrs = [exmpp_xml:xmlnattribute()]
+%% @doc Remove the recipient.
+
+-spec(remove_recipient_in_attrs/1 :: ([#xmlattr{}]) -> [#xmlattr{}]).
+
+remove_recipient_in_attrs(Attrs) ->
+    exmpp_xml:remove_attribute_from_list(Attrs, 'to').
+
+%% @spec (Stanza, Sender, Recipient) -> New_Stanza
+%%     Stanza = exmpp_xml:xmlel()
+%%     Sender = exmpp_jid:jid() | binary() | string() | undefined
+%%     Recipient = exmpp_jid:jid() | binary() | string() | undefined
+%%     New_Stanza = exmpp_xml:xmlel()
+%% @doc Set the sender and the recipient at the same time.
+%%
+%% If `Sender' is set to `undefined', the sender is removed. If
+%% `Recipient' is set to `undefined', the recipient is removed.
+
+-spec(set_jids/3 ::
+      (#xmlel{}, jidlike(), jidlike()) -> #xmlel{}).
+
+set_jids(Stanza, From, To) ->
+    set_recipient(set_sender(Stanza, From), To).
+
+%% @spec (Attrs, Sender, Recipient) -> New_Attrs
+%%     Attrs = [exmpp_xml:xmlattr()]
+%%     Sender = exmpp_jid:jid() | binary() | string() | undefined
+%%     Recipient = exmpp_jid:jid() | binary() | string() | undefined
+%%     New_Attrs = [exmpp_xml:xmlnattribute()]
+%% @doc Set the sender and the recipient at the same time.
+%%
+%% If `Sender' is set to `undefined', the sender is removed. If
+%% `Recipient' is set to `undefined', the recipient is removed.
+
+-spec(set_jids_in_attrs/3 ::
+      ([#xmlattr{}], jidlike(), jidlike()) -> [#xmlattr{}]).
+
+set_jids_in_attrs(Attrs, From, To) ->
+    set_recipient_in_attrs(set_sender_in_attrs(Attrs, From), To).
+
+%% @spec (Stanza) -> ID | undefined
+%%     Stanza = exmpp_xml:xmlel() | exmpp_iq:iq()
+%%     ID = binary()
+%% @doc Return the stanza ID.
+
+-spec(get_id/1 :: (#xmlel{} | #iq{}) -> binary() | undefined).
+
+get_id(#xmlel{attrs = Attrs} = _Stanza) ->
+    get_id_from_attrs(Attrs);
+get_id(#iq{id = ID}) ->
+    ID.
+
+%% @spec (Attrs) -> ID | undefined
+%%     Attrs = [exmpp_xml:xmlattr()]
+%%     ID = binary()
+%% @doc Return the stanza ID.
+
+-spec(get_id_from_attrs/1 :: ([#xmlattr{}]) -> binary() | undefined).
+
+get_id_from_attrs(Attrs) ->
+    exmpp_xml:get_attribute_from_list_as_binary(Attrs, 'id', undefined).
+
+%% @spec (Stanza, ID) -> New_Stanza
+%%     Stanza = exmpp_xml:xmlel() | exmpp_iq:iq()
+%%     ID = binary() | string() | random | undefined
+%%     New_Stanza = exmpp_xml:xmlel() | exmpp_iq:iq()
+%% @doc Set the ID.
+%%
+%% If `ID' is `undefined' or empty, it's removed. If `ID' is `random', a
+%% random value is set.
+
+-spec(set_id/2 :: (#xmlel{} | #iq{}, id()) -> #xmlel{} | #iq{}).
+
+set_id(#xmlel{attrs = Attrs, name = Name} = Stanza, random) ->
+    New_Attrs = set_id_in_attrs(Attrs, exmpp_utils:random_id(Name)),
+    Stanza#xmlel{attrs = New_Attrs};
+set_id(#xmlel{attrs = Attrs} = Stanza, ID) ->
+    New_Attrs = set_id_in_attrs(Attrs, ID),
+    Stanza#xmlel{attrs = New_Attrs};
+set_id(#iq{} = Stanza, random) ->
+    ID = exmpp_utils:random_id("iq"),
+    set_id(Stanza, ID);
+set_id(#iq{} = Stanza, ID) ->
+    Stanza#iq{id = exmpp_utils:any_to_binary(ID)}.
+
+%% @spec (Attrs, ID) -> New_Attrs
+%%     Attrs = [exmpp_xml:xmlattr()]
+%%     ID = binary() | string() | random | undefined
+%%     New_Attrs = [exmpp_xml:xmlnattribute()]
+%% @doc Set the ID.
+%%
+%% If `ID' is `undefined' or empty, it's removed. If `ID' is `random', a
+%% random value is set.
+
+-spec(set_id_in_attrs/2 :: ([#xmlattr{}], id()) -> [#xmlattr{}]).
+
+set_id_in_attrs(Attrs, ID) when ID == undefined; ID == <<>>; ID == "" ->
+    exmpp_xml:remove_attribute_from_list(Attrs, 'id');
+set_id_in_attrs(Attrs, random) ->
+    set_id_in_attrs(Attrs, exmpp_utils:random_id("stanza"));
+set_id_in_attrs(Attrs, ID) ->
+    exmpp_xml:set_attribute_in_list(Attrs, 'id', ID).
+
+%% @spec (Stanza) -> Type | undefined
+%%     Stanza = exmpp_xml:xmlel() | exmpp_iq:iq()
+%%     Type = binary()
+%% @doc Return the type of the stanza.
+
+-spec(get_type/1 :: (#xmlel{} | #iq{}) -> binary() | undefined).
+
+get_type(#xmlel{attrs = Attrs} = _Stanza) ->
+    get_type_from_attrs(Attrs);
+get_type(#iq{type = Type}) ->
+    type_to_binary(Type).
+
+type_to_binary(Type) when is_atom(Type) ->
+    case Type of
+        'get'     -> <<"get">>;
+        'set'     -> <<"set">>;
+        'result'  -> <<"result">>;
+        'error'   -> <<"error">>;
+        undefined -> undefined;
+        _         -> list_to_binary(atom_to_list(Type))
+    end.
+
+%% @spec (Attrs) -> Type | undefined
+%%     Attrs = [exmpp_xml:xmlattr()]
+%%     Type = binary()
+%% @doc Return the type of the stanza.
+
+-spec(get_type_from_attrs/1 :: ([#xmlattr{}]) -> binary() | undefined).
+
+get_type_from_attrs(Attrs) ->
+    exmpp_xml:get_attribute_from_list_as_binary(Attrs, 'type', undefined).
+
+%% @spec (Stanza, Type) -> New_Stanza
+%%     Stanza = exmpp_xml:xmlel() | exmpp_iq:iq()
+%%     Type = atom() | binary() | string()
+%%     New_Stanza = exmpp_xml:xmlel() | exmpp_iq:iq()
+%% @doc Set the type of the stanza.
+
+-spec(set_type/2 :: (#xmlel{} | #iq{}, type()) -> #xmlel{} | #iq{}).
+
+set_type(#xmlel{attrs = Attrs} = Stanza, Type) ->
+    New_Attrs = set_type_in_attrs(Attrs, Type),
+    Stanza#xmlel{attrs = New_Attrs};
+set_type(#iq{} = Stanza, 'get') ->
+    Stanza#iq{type = get, kind = request};
+set_type(#iq{} = Stanza, 'set') ->
+    Stanza#iq{type = set, kind = request};
+set_type(#iq{} = Stanza, 'result') ->
+    Stanza#iq{type = result, kind = response};
+set_type(#iq{} = Stanza, 'error') ->
+    Stanza#iq{type = error, kind = response};
+set_type(#iq{} = Stanza, Type) when is_list(Type) ->
+    set_type(Stanza, list_to_atom(Type)).
+
+%% @spec (Attrs, Type) -> New_Attrs
+%%     Attrs = [exmpp_xml:xmlattr()]
+%%     Type = atom() | binary() | string()
+%%     New_Attrs = [exmpp_xml:xmlattr()]
+%% @doc Set the type of the stanza.
+
+-spec(set_type_in_attrs/2 :: ([#xmlattr{}], type()) -> [#xmlattr{}]).
+
+set_type_in_attrs(Attrs, Type) when is_atom(Type) ->
+    set_type_in_attrs(Attrs, type_to_binary(Type));
+set_type_in_attrs(Attrs, Type) ->
+    exmpp_xml:set_attribute_in_list(Attrs, 'type', Type).
+
+%% @spec (Stanza) -> Lang | undefined
+%%     Stanza = exmpp_xml:xmlel() | exmpp_iq:iq()
+%%     Lang = binary()
+%% @doc Return the language of the stanza.
+
+-spec(get_lang/1 :: (#xmlel{} | #iq{}) -> binary() | undefined).
+
+get_lang(#xmlel{attrs = Attrs} = _Stanza) ->
+    get_lang_from_attrs(Attrs);
+get_lang(#iq{lang = Lang}) ->
+    Lang.
+
+%% @spec (Attrs) -> Lang | undefined
+%%     Attrs = [exmpp_xml:xmlattr()]
+%%     Lang = binary()
+%% @doc Return the language of the stanza.
+
+-spec(get_lang_from_attrs/1 :: ([#xmlattr{}]) -> binary() | undefined).
+
+get_lang_from_attrs(Attrs) ->
+    exmpp_xml:get_attribute_from_list_as_binary(Attrs, ?NS_XML, 'lang',
+						undefined).
+
+%% @spec (Stanza, Lang) -> New_Stanza
+%%     Stanza = exmpp_xml:xmlel() | exmpp_iq:iq()
+%%     Lang = binary() | string() | undefined
+%%     New_Stanza = exmpp_xml:xmlel() | exmpp_iq:iq()
+%% @doc Set the lang.
+%%
+%% If `Lang' is `undefined' or empty, it's removed.
+
+-spec(set_lang/2 :: (#xmlel{} | #iq{}, lang()) -> #xmlel{} | #iq{}).
+
+set_lang(#xmlel{attrs = Attrs} = Stanza, Lang) ->
+    New_Attrs = set_lang_in_attrs(Attrs, Lang),
+    Stanza#xmlel{attrs = New_Attrs};
+set_lang(#iq{} = Stanza, Lang) ->
+    Stanza#iq{lang = Lang}.
+
+%% @spec (Attrs, Lang) -> New_Attrs
+%%     Attrs = [exmpp_xml:xmlattr()]
+%%     Lang = binary() | string() | undefined
+%%     Attrs = [exmpp_xml:xmlattr()]
+%% @doc Set the lang.
+%%
+%% If `Lang' is `undefined' or empty, it's removed.
+
+-spec(set_lang_in_attrs/2 :: ([#xmlattr{}], lang()) -> [#xmlattr{}]).
+
+set_lang_in_attrs(Attrs, Lang)
+  when Lang == undefined; Lang == <<>>; Lang == "" ->
+    exmpp_xml:remove_attribute_from_list(Attrs, ?NS_XML, 'lang');
+set_lang_in_attrs(Attrs, Lang) ->
+    exmpp_xml:set_attribute_in_list(Attrs, ?NS_XML, 'lang', Lang).
+
+%% --------------------------------------------------------------------
+%% Common operations.
+%% --------------------------------------------------------------------
+
+%% @spec (Stanza) -> Stanza_Reply
+%%     Stanza = exmpp_xml:xmlel()
+%%     Stanza_Reply = exmpp_xml:xmlel()
+%% @doc Prepare a reply to `Stanza'.
+%%
+%% @see reply_from_attrs/1.
+
+-spec(reply/1 :: (#xmlel{}) -> #xmlel{}).
+
+reply(#xmlel{attrs = Attrs} = Stanza) ->
+    New_Attrs = reply_from_attrs(Attrs),
+    Stanza#xmlel{attrs = New_Attrs}.
+
+%% @spec (Stanza) -> Stanza_Reply
+%%     Stanza = exmpp_xml:xmlel()
+%%     Stanza_Reply = exmpp_xml:xmlel()
+%% @doc Prepare a reply to `Stanza' with children removed.
+%%
+%% @see reply_from_attrs/1.
+
+-spec(reply_without_content/1 :: (#xmlel{}) -> #xmlel{}).
+
+reply_without_content(#xmlel{attrs = Attrs} = Stanza) ->
+    New_Attrs = reply_from_attrs(Attrs),
+    Stanza#xmlel{attrs = New_Attrs, children = []}.
+
+%% @spec (Attrs) -> New_Attrs
+%%     Attrs = [exmpp_xml:xmlattr()]
+%%     New_Attrs = [exmpp_xml:xmlattr()]
+%% @doc Handles `to' and `from' attributes to prepare a reply stanza.
+
+-spec(reply_from_attrs/1 :: ([#xmlattr{}]) -> [#xmlattr{}]).
+
+reply_from_attrs(Attrs) ->
+    Sender = get_sender_from_attrs(Attrs),
+    Recipient = get_recipient_from_attrs(Attrs),
+    set_jids_in_attrs(Attrs, Recipient, Sender).
+
+%% @spec (Stanza, Error) -> Stanza_Reply
+%%     Stanza = exmpp_xml:xmlel()
+%%     Error = exmpp_xml:xmlel() | atom()
+%%     Stanza_Reply = exmpp_xml:xmlel()
+%% @doc Prepare an error reply to `Stanza'.
+%%
+%% If `Error' is an atom, it must be a standard condition defined by
+%% XMPP Core.
+
+-spec(reply_with_error/2 :: (#xmlel{}, #xmlel{} | atom()) -> #xmlel{}).
+
+reply_with_error(Stanza, Condition) when is_atom(Condition) ->
+    Error = error(Stanza#xmlel.ns, Condition),
+    reply_with_error(Stanza, Error);
+reply_with_error(Stanza, Error) ->
+    Reply = reply(Stanza),
+    stanza_error(Reply, Error).
+
+%% --------------------------------------------------------------------
+%% Stanza-level errors.
+%% --------------------------------------------------------------------
+
+standard_conditions() ->
+    [
+     {'bad-request',             "modify" },
+     {'conflict',                "cancel" },
+     {'feature-not-implemented', "cancel" },
+     {'forbidden',               "auth"   },
+     {'gone',                    "modify" },
+     {'internal-server-error',   "wait"   },
+     {'item-not-found',          "cancel" },
+     {'jid-malformed',           "modify" },
+     {'not-acceptable',          "modify" },
+     {'not-allowed',             "cancel" },
+     {'not-authorized',          "auth"   },
+     {'payment-required',        "auth"   },
+     {'recipient-unavailable',   "wait"   },
+     {'redirect',                "modify" },
+     {'registration-required',   "auth"   },
+     {'remote-server-not-found', "cancel" },
+     {'remote-server-timeout',   "wait"   },
+     {'resource-constraint',     "wait"   },
+     {'service-unavailable',     "cancel" },
+     {'subscription-required',   "auth"   },
+     {'unexpected-request',      "wait"   },
+     {'undefined-condition',     undefined}
+    ].
+
+%% @spec (NS, Condition) -> Stanza_Error
+%%     NS = atom() | string()
+%%     Condition = atom()
+%%     Stanza_Error = exmpp_xml:xmlel()
+%% @doc Create an `<error/>' element based on the given `Condition'.
+%%
+%% A default type is set by {@link set_error_type/2} if `NS' is
+%% `jabber:client' or `jabber:server'. This does not contain any text
+%% element.
+
+-spec(error/2 :: (xmlname(), atom()) -> #xmlel{}).
+
+error(NS, Condition) ->
+    error(NS, Condition, {undefined, undefined}).
+
+%% @spec (NS, Condition, Text_Spec) -> Stanza_Error
+%%     NS = atom() | string()
+%%     Condition = atom()
+%%     Text_Spec = {Lang, Text} | Text | undefined
+%%     Lang = binary() | string() | undefined
+%%     Text = binary() | string() | undefined
+%%     Stanza_Error = exmpp_xml:xmlel()
+%% @doc Create an `<error/>' element based on the given `Condition'.
+%%
+%% A default type is set by {@link set_error_type/2} if `NS' is
+%% `jabber:client' or `jabber:server'. This does not contain any text
+%% element.
+
+-spec(error/3 ::
+      (xmlname(), atom(), {lang(), binary() | string() | undefined}) -> #xmlel{}).
+
+error(NS, Condition, {Lang, Text}) ->
+    Condition_El = #xmlel{
+      ns = ?NS_STANZA_ERRORS,
+      name = Condition
+     },
+    Error_El0 = #xmlel{
+      ns = NS,
+      name = 'error',
+      children = [Condition_El]
+     },
+    Error_El = case Text of
+		   undefined ->
+		       Error_El0;
+		   _ ->
+		       Text_El0 = exmpp_xml:set_cdata(#xmlel{
+                ns = ?NS_STANZA_ERRORS,
+                name = 'text'
+              }, Text),
+            Text_El = case Lang of
+                undefined ->
+                    Text_El0;
+                _ ->
+                    exmpp_xml:set_attribute(Text_El0, ?NS_XML, 'lang', Lang)
+            end,
+            exmpp_xml:append_child(Error_El0, Text_El)
+    end,
+    set_error_type_from_condition_in_error(Error_El, Condition);
+error(NS, Condition, Text) ->
+    error(NS, Condition, {undefined, Text}).
+
+%% @spec (Stanza, Error) -> Stanza_Error
+%%     Stanza = exmpp_xml:xmlel()
+%%     Error = exmpp_xml:xmlel()
+%%     Stanza_Error = exmpp_xml:xmlel()
+%% @doc Transform `Stanza' in a stanza error.
+%%
+%% The `type' attribute is set and an error condition is added. The
+%% caller is still responsible to set or modify the `to' attribute
+%% correctly.
+%%
+%% @see error/2.
+%% @see error/3.
+
+-spec(stanza_error/2 :: (#xmlel{}, #xmlel{}) -> #xmlel{}).
+
+stanza_error(Stanza, Error) ->
+    Stanza_Error = exmpp_xml:append_child(Stanza, Error),
+    set_type(Stanza_Error, "error").
+
+%% @spec (Stanza, Error) -> Stanza_Error
+%%     Stanza = exmpp_xml:xmlel()
+%%     Error = exmpp_xml:xmlel()
+%%     Stanza_Error = exmpp_xml:xmlel()
+%% @doc Transform `Stanza' in a stanza error.
+%%
+%% Previous child elements from `Stanza' are not kept.
+%%
+%% @see stanza_error/2.
+
+-spec(stanza_error_without_original/2 :: (#xmlel{}, #xmlel{}) -> #xmlel{}).
+
+stanza_error_without_original(Stanza, Error) ->
+    Stanza_Error = exmpp_xml:set_children(Stanza, [Error]),
+    set_type(Stanza_Error, "error").
+
+%% @spec (Stanza) -> bool()
+%%     Stanza = exmpp_xml:xmlel()
+%% @doc Tell if the stanza transports an error.
+
+-spec(is_stanza_error/1 :: (#xmlel{}) -> bool()).
+
+is_stanza_error(Stanza) ->
+    case get_type(Stanza) of
+        <<"error">> -> true;
+        _           -> false
+    end.
+
+%% @spec (Stanza) -> Type
+%%     Stanza = exmpp_xml:xmlel()
+%%     Type = binary()
+%% @throws {stanza_error, error_type, no_error_element_found, Stanza}
+%% @doc Return the type of the error element.
+
+-spec(get_error_type/1 :: (#xmlel{}) -> binary()).
+
+get_error_type(Stanza) ->
+    case get_error(Stanza) of
+        undefined ->
+            throw({stanza_error, error_type, no_error_element_found, Stanza});
+        Error ->
+            get_error_type_from_error(Error)
+    end.
+
+get_error_type_from_error(Error) ->
+    exmpp_xml:get_attribute_as_binary(Error, 'type', <<>>).
+
+%% @spec (Stanza, Type) -> New_Stanza
+%%     Stanza = exmpp_xml:xmlel()
+%%     Type = binary() | string()
+%%     New_Stanza = exmpp_xml:xmlel()
+%% @throws {stanza_error, error_type, no_error_element_found, Stanza}
+%% @doc Set the type of the error element.
+
+-spec(set_error_type/2 :: (#xmlel{}, binary()) -> #xmlel{}).
+
+set_error_type(Stanza, Type) ->
+    case get_error(Stanza) of
+        undefined ->
+            throw({stanza_error, error_type, no_error_element_found, Stanza});
+        Error ->
+            New_Error = set_error_type_in_error(Error, Type),
+            exmpp_xml:replace_child(Stanza, Error, New_Error)
+    end.
+
+set_error_type_in_error(Error, Type) ->
+    exmpp_xml:set_attribute(Error, 'type', Type).
+
+%% @spec (Stanza, Condition) -> New_Stanza
+%%     Stanza = exmpp_xml:xmlel()
+%%     Condition = atom()
+%%     New_Stanza = exmpp_xml:xmlel()
+%% @throws {stanza_error, error_type, no_error_element_found, Stanza} |
+%%         {stanza_error, error_type, invalid_condition, {NS, Condition}}
+%% @doc Set the type of the error element, based on the given condition.
+%%
+%% If the condition is `undefined-condition', the type is unchanged.
+
+-spec(set_error_type_from_condition/2 :: (#xmlel{}, atom()) -> #xmlel{}).
+
+set_error_type_from_condition(Stanza, Condition) ->
+    case get_error(Stanza) of
+        undefined ->
+            throw({stanza_error, error_type, no_error_element_found, Stanza});
+        Error ->
+            New_Error = set_error_type_from_condition_in_error(Error,
+              Condition),
+            exmpp_xml:replace_child(Stanza, Error, New_Error)
+    end.
+
+set_error_type_from_condition_in_error(#xmlel{ns = NS} = Error,
+  Condition) when NS == ?NS_JABBER_CLIENT; NS == ?NS_JABBER_SERVER ->
+    case lists:keysearch(Condition, 1, standard_conditions()) of
+        {value, {_, undefined}} ->
+            Error;
+        {value, {_, Type}} ->
+            set_error_type_in_error(Error, Type);
+        false ->
+            throw({stanza_error, error_type, invalid_condition,
+                {NS, Condition}})
+    end;
+set_error_type_from_condition_in_error(Error, _Condition) ->
+    Error.
+
+%% @spec (Stanza) -> Condition | undefined
+%%     Stanza = exmpp_xml:xmlel()
+%%     Condition = atom()
+%% @throws {stanza_error, condition, no_error_element_found, Stanza} |
+%%         {stanza_error, condition, no_condition_found, Error}
+%% @doc Return the child element name corresponding to the stanza error
+%% condition.
+%%
+%% If the namespace isn't neither `jabber:client' nor `jabber:server',
+%% the name of the first child is returned.
+
+-spec(get_condition/1 :: (#xmlel{}) -> atom()).
+
+get_condition(Stanza) ->
+    case get_error(Stanza) of
+        undefined ->
+            throw({stanza_error, condition, no_error_element_found, Stanza});
+        Error ->
+            get_condition_in_error(Error)
+    end.
+
+get_condition_in_error(#xmlel{ns = NS} = Error)
+  when NS == ?NS_JABBER_CLIENT; NS == ?NS_JABBER_SERVER ->
+    case exmpp_xml:get_element_by_ns(Error, ?NS_STANZA_ERRORS) of
+        undefined ->
+            % This <error/> element is invalid because the condition must be
+            % present (and first).
+            throw({stanza_error, condition, no_condition_found, Error});
+        #xmlel{name = 'text'} ->
+            % Same as above.
+            throw({stanza_error, condition, no_condition_found, Error});
+        #xmlel{name = Condition} ->
+            Condition
+    end;
+get_condition_in_error(#xmlel{children = [First | _]} = _Error) ->
+    First#xmlel.name;
+get_condition_in_error(_Error) ->
+    undefined.
+
+%% @spec (Stanza) -> Text | undefined
+%%     Stanza = exmpp_xml:xmlel()
+%%     Text = binary()
+%% @throws {stanza_error, text, no_error_element_found, Stanza}
+%% @doc Return the text that describes the error.
+%%
+%% If there is no `<text/>' element, an empty string is returned.
+
+-spec(get_text/1 :: (#xmlel{}) -> binary()).
+
+get_text(Stanza) ->
+    case get_error(Stanza) of
+        undefined ->
+            throw({stanza_error, text, no_error_element_found, Stanza});
+        Error ->
+            get_text_in_error(Error)
+    end.
+
+get_text_in_error(#xmlel{ns = NS} = Error)
+  when NS == ?NS_JABBER_CLIENT; NS == ?NS_JABBER_SERVER ->
+    case exmpp_xml:get_element(Error, ?NS_STANZA_ERRORS, 'text') of
+        undefined -> undefined;
+        Text      -> exmpp_xml:get_cdata(Text)
+    end;
+get_text_in_error(Error) ->
+    case exmpp_xml:get_element(Error, 'text') of
+        undefined -> undefined;
+        Text      -> exmpp_xml:get_cdata(Text)
+    end.
+
+%% --------------------------------------------------------------------
+%% Serialization wrappers.
+%% --------------------------------------------------------------------
+
+%% @spec (El, Default_NS) -> XML_Text
+%%     El = exmpp_xml:xmlel() | exmpp_iq:iq() | list()
+%%     Default_NS = NS | Equivalent_NSs
+%%     NS = atom() | string()
+%%     Equivalent_NSs = [NS]
+%%     XML_Text = string()
+%% @doc Serialize a stanza using the given default namespace.
+%%
+%% The XMPP namespace `http://etherx.jabber.org/streams' and the
+%% Server Dialback `jabber:server:dialback' are included as a prefixed
+%% namespace, with the `stream' prefix.
+
+-spec(to_list/2 ::
+  (#xmlel{} | #iq{}, xmldefaultns()) -> string()).
+
+to_list(El, Default_NS) ->
+    to_list(El, Default_NS,
+      [{?NS_XMPP, ?NS_XMPP_pfx}, {?NS_DIALBACK, ?NS_DIALBACK_pfx}]).
+
+%% @spec (El, Default_NS, Prefix) -> XML_Text
+%%     El = exmpp_xml:xmlel() | exmpp_iq:iq() | list()
+%%     Default_NS = [NS]
+%%     Prefixed_NS = [{NS, Prefix}]
+%%     NS = atom() | string()
+%%     Prefix = string()
+%%     XML_Text = string()
+%% @doc Serialize a stanza using the given namespaces.
+%%
+%% To understand `Default_NS', see {@link exmpp_xml:xmlel_to_xmlelement/3}.
+
+-spec(to_list/3 ::
+  (#xmlel{} | #iq{}, xmldefaultns(), xmlprefixednss()) -> string()).
+
+to_list(#iq{} = El, Default_NS, Prefixed_NS) ->
+    to_list(exmpp_iq:iq_to_xmlel(El), Default_NS, Prefixed_NS);
+to_list(El, Default_NS, Prefixed_NS) ->
+    exmpp_xml:node_to_list(El, [Default_NS], Prefixed_NS).
+
+%% @spec (El) -> XML_Text
+%%     El = exmpp_xml:xmlel() | exmpp_iq:iq() | list()
+%%     XML_Text = string()
+%% @doc Serialize a stanza using common XMPP default namespaces.
+%%
+%% This function calls {@link to_list/2} with `Default_NS' set to
+%% `[?NS_JABBER_CLIENT, ?NS_JABBER_SERVER, ?NS_COMPONENT_ACCEPT,
+%% ?NS_COMPONENT_CONNECT]'.
+
+-spec(to_list/1 :: (#xmlel{} | #iq{}) -> string()).
+
+to_list(El) ->
+    to_list(El, [
+        ?NS_JABBER_CLIENT,
+        ?NS_JABBER_SERVER,
+        ?NS_COMPONENT_ACCEPT,
+        ?NS_COMPONENT_CONNECT
+      ]).
+
+%% @spec (El, Default_NS) -> XML_Text
+%%     El = exmpp_xml:xmlel() | exmpp_iq:iq() | list()
+%%     Default_NS = NS | Equivalent_NSs
+%%     NS = atom() | string()
+%%     Equivalent_NSs = [NS]
+%%     XML_Text = binary()
+%% @doc Serialize a stanza using the given default namespace.
+%%
+%% The XMPP namespace `http://etherx.jabber.org/streams' and the
+%% Server Dialback `jabber:server:dialback' are included as a prefixed
+%% namespace, with the `stream' prefix.
+
+-spec(to_binary/2 ::
+  (#xmlel{} | #iq{}, xmldefaultns()) -> binary()).
+
+to_binary(El, Default_NS) ->
+    to_binary(El, Default_NS,
+      [{?NS_XMPP, ?NS_XMPP_pfx}, {?NS_DIALBACK, ?NS_DIALBACK_pfx}]).
+
+%% @spec (El, Default_NS, Prefix) -> XML_Text
+%%     El = exmpp_xml:xmlel() | exmpp_iq:iq() | list()
+%%     Default_NS = [NS]
+%%     Prefixed_NS = [{NS, Prefix}]
+%%     NS = atom() | string()
+%%     Prefix = string()
+%%     XML_Text = binary()
+%% @doc Serialize a stanza using the given namespaces.
+%%
+%% To understand `Default_NS', see {@link exmpp_xml:xmlel_to_xmlelement/3}.
+
+-spec(to_binary/3 ::
+  (#xmlel{} | #iq{}, xmldefaultns(), xmlprefixednss()) -> binary()).
+
+to_binary(#iq{} = El, Default_NS, Prefixed_NS) ->
+    to_binary(exmpp_iq:iq_to_xmlel(El), Default_NS, Prefixed_NS);
+to_binary(El, Default_NS, Prefixed_NS) ->
+    exmpp_xml:node_to_binary(El, [Default_NS], Prefixed_NS).
+
+%% @spec (El) -> XML_Text
+%%     El = exmpp_xml:xmlel() | exmpp_iq:iq() | list()
+%%     XML_Text = binary()
+%% @doc Serialize a stanza using common XMPP default namespaces.
+%%
+%% This function calls {@link to_binary/2} with `Default_NS' set to
+%% `[?NS_JABBER_CLIENT, ?NS_JABBER_SERVER, ?NS_COMPONENT_ACCEPT,
+%% ?NS_COMPONENT_CONNECT]'.
+
+-spec(to_binary/1 :: (#xmlel{} | #iq{}) -> binary()).
+
+to_binary(El) ->
+    to_binary(El, [
+        ?NS_JABBER_CLIENT,
+        ?NS_JABBER_SERVER,
+        ?NS_COMPONENT_ACCEPT,
+        ?NS_COMPONENT_CONNECT
+      ]).
+
+%% @spec (El, Default_NS) -> XML_Text
+%%     El = exmpp_xml:xmlel() | exmpp_iq:iq() | list()
+%%     Default_NS = NS | Equivalent_NSs
+%%     NS = atom() | string()
+%%     Equivalent_NSs = [NS]
+%%     XML_Text = iolist()
+%% @doc Serialize a stanza using the given default namespace.
+%%
+%% The XMPP namespace `http://etherx.jabber.org/streams' and the
+%% Server Dialback `jabber:server:dialback' are included as a prefixed
+%% namespace, with the `stream' prefix.
+
+-spec(to_iolist/2 ::
+  (#xmlel{} | #iq{}, xmldefaultns()) -> iolist()).
+
+to_iolist(El, Default_NS) ->
+    to_iolist(El, Default_NS,
+      [{?NS_XMPP, ?NS_XMPP_pfx}, {?NS_DIALBACK, ?NS_DIALBACK_pfx}]).
+
+%% @spec (El, Default_NS, Prefix) -> XML_Text
+%%     El = exmpp_xml:xmlel() | exmpp_iq:iq() | list()
+%%     Default_NS = [NS]
+%%     Prefixed_NS = [{NS, Prefix}]
+%%     NS = atom() | string()
+%%     Prefix = string()
+%%     XML_Text = iolist()
+%% @doc Serialize a stanza using the given namespaces.
+%%
+%% To understand `Default_NS', see {@link exmpp_xml:xmlel_to_xmlelement/3}.
+
+-spec(to_iolist/3 ::
+  (#xmlel{} | #iq{}, xmldefaultns(), xmlprefixednss()) -> iolist()).
+
+to_iolist(#iq{} = El, Default_NS, Prefixed_NS) ->
+    to_iolist(exmpp_iq:iq_to_xmlel(El), Default_NS, Prefixed_NS);
+to_iolist(El, Default_NS, Prefixed_NS) ->
+    exmpp_xml:node_to_iolist(El, [Default_NS], Prefixed_NS).
+
+%% @spec (El) -> XML_Text
+%%     El = exmpp_xml:xmlel() | exmpp_iq:iq() | list()
+%%     XML_Text = iolist()
+%% @doc Serialize a stanza using common XMPP default namespaces.
+%%
+%% This function calls {@link to_iolist/2} with `Default_NS' set to
+%% `[?NS_JABBER_CLIENT, ?NS_JABBER_SERVER, ?NS_COMPONENT_ACCEPT,
+%% ?NS_COMPONENT_CONNECT]'.
+
+-spec(to_iolist/1 :: (#xmlel{} | #iq{}) -> iolist()).
+
+to_iolist(El) ->
+    to_iolist(El, [
+        ?NS_JABBER_CLIENT,
+        ?NS_JABBER_SERVER,
+        ?NS_COMPONENT_ACCEPT,
+        ?NS_COMPONENT_CONNECT
+      ]).
diff -r d551623afde5 deps/exmpp/src/core/exmpp_stream.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/core/exmpp_stream.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,796 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> provides utilities to open and
+%% close an XMPP stream, negotiate features and handle stream errors.
+%%
+%% {@link exmpp_client_stream} and {@link exmpp_server_stream} should be
+%% prefered to {@module} because they'll set some defaults values for
+%% the caller.
+%%
+%% <h3>Stream handling</h3>
+%%
+%% <p>
+%% It covers these basic functions:
+%% </p>
+%% <ul>
+%% <li>Open a stream to an XMPP server</li>
+%% <li>Open a stream in reply to initiating entity</li>
+%% <li>Close a stream (regardless who has initiated the stream)</li>
+%% </ul>
+%%
+%% <p>
+%% A common use case is illustrated in <em>table 1</em>.
+%% </p>
+%% <table class="illustration">
+%% <caption>Table 1: stream opening and closing</caption>
+%% <tr>
+%% <th>Client-side</th>
+%% <th>Server-side</th>
+%% </tr>
+%% <tr>
+%% <td>
+%% <p>
+%% The client call `{@module}':
+%% </p>
+%% <pre>Opening = exmpp_stream:opening(
+%%   "jabber.example.com",
+%%   ?NS_JABBER_CLIENT,
+%%   "1.0"<br/>).</pre>
+%% <p>
+%% After serialization, this produces this XML message:
+%% </p>
+%% <pre>&lt;stream:stream xmlns:stream="http://etherx.jabber.org/streams"
+%%   xmlns="jabber:client" to="jabber.example.org" version="1.0"&gt;</pre>
+%% </td>
+%% <td></td>
+%% </tr>
+%% <tr>
+%% <td></td>
+%% <td>
+%% <p>
+%% If the server accepts the client stream opening, it'll call:
+%% </p>
+%% <pre>Opening_Reply = exmpp_stream:opening_reply(
+%%   Opening,
+%%   random<br/>).</pre>
+%% <p>
+%% After serialization, this produces this XML message:
+%% </p>
+%% <pre>&lt;stream:stream xmlns:stream="http://etherx.jabber.org/streams"
+%%   xmlns="jabber:client" version="1.0" from="jabber.example.org"
+%%   id="stream-396429316"&gt;</pre>
+%% <p>
+%% Note that `{@module}' generated an ID automatically; you may override
+%% this.
+%% </p>
+%% </td>
+%% </tr>
+%% <tr>
+%% <td>
+%% <p>
+%% At the end of the communication, the client close its stream:
+%% </p>
+%% <pre>Client_Closing = exmpp_stream:closing().</pre>
+%% <p>
+%% After serialization, this produces this XML message:
+%% </p>
+%% <pre>&lt;/stream:stream&gt;</pre>
+%% </td>
+%% <td></td>
+%% </tr>
+%% <tr>
+%% <td></td>
+%% <td>
+%% <p>
+%% The server do the same:
+%% </p>
+%% <pre>Server_Closing = exmpp_stream:closing(Client_Closing).</pre>
+%% <p>
+%% After serialization, this produces this XML message:
+%% </p>
+%% <pre>&lt;/stream:stream&gt;</pre>
+%% <p>
+%% The server may use the same function clause than the client but here,
+%% it gives the client closing to the function. This is to be sure to
+%% use the same XML prefix.
+%% </p>
+%% </td>
+%% </tr>
+%% </table>
+
+-module(exmpp_stream).
+
+-include("exmpp.hrl").
+
+%% Creating elements.
+-export([
+	 opening/3,
+	 opening/4,
+	 opening_reply/4,
+	 opening_reply/5,
+	 opening_reply/2,
+	 opening_reply/3,
+	 closing/0,
+	 closing/1
+	]).
+
+%% Attributes handling.
+-export([
+	 get_receiving_entity/1,
+	 set_receiving_entity/2,
+	 get_initiating_entity/1,
+	 set_initiating_entity/2,
+	 get_default_ns/1,
+	 set_default_ns/2,
+	 get_version/1,
+	 set_version/2,
+	 get_id/1,
+	 set_id/2,
+	 get_lang/1,
+	 set_lang/2
+	]).
+
+%% Version handling.
+-export([
+	 parse_version/1,
+	 serialize_version/1
+	]).
+
+%% Features announcement.
+-export([
+	 set_dialback_support/1,
+	 features/1
+	]).
+
+%% Error handling.
+-export([
+	 error/1,
+	 error/2,
+	 is_error/1,
+	 get_condition/1,
+	 get_text/1
+	]).
+
+%% Serialization wrappers.
+-export([
+	 to_list/1,
+	 to_binary/1,
+	 to_iolist/1
+	]).
+
+%% --------------------------------------------------------------------
+%% Type definitions.
+%% --------------------------------------------------------------------
+
+-type(streamversion() :: {non_neg_integer(), non_neg_integer()}).
+
+%% --------------------------------------------------------------------
+%% Stream opening/closing.
+%% --------------------------------------------------------------------
+
+%% @spec (To, Default_NS, Version) -> Opening
+%%     To = binary() | string() | undefined
+%%     Default_NS = atom() | string()
+%%     Version = binary() | string() | {Major, Minor}
+%%     Major = integer()
+%%     Minor = integer()
+%%     Opening = exmpp_xml:xmlel()
+%% @doc Make a `<stream>' opening tag.
+%%
+%% @see opening/4.
+
+-spec opening
+(binary() | string() | undefined, xmlname(),
+ binary() | string() | streamversion()) ->
+    xmlel().
+
+opening(To, Default_NS, Version) ->
+    opening(To, Default_NS, Version, undefined).
+
+%% @spec (To, Default_NS, Version, Lang) -> Opening
+%%     To = binary() | string() | undefined
+%%     Default_NS = atom() | string()
+%%     Version = binary() | string() | {Major, Minor}
+%%     Major = integer()
+%%     Minor = integer()
+%%     Lang = binary() | string() | undefined
+%%     Opening = exmpp_xml:xmlel()
+%% @doc Make a `<stream>' opening tag.
+%%
+%% This element is supposed to be sent by the initiating entity
+%% to the receiving entity (for the other way around, see {@link
+%% opening_reply/1}).
+
+-spec opening
+(binary() | string() | undefined, xmlname(),
+ binary() | string() | streamversion(), binary() | string() | undefined) ->
+    xmlel().
+
+opening(To, Default_NS, Version, Lang) ->
+    %% Prepare attributes.
+    Attrs1 = set_receiving_entity_in_attrs([], To),
+    Attrs2 = set_version_in_attrs(Attrs1, Version),
+    Attrs3 = case Lang of
+		 undefined -> Attrs2;
+		 _         -> set_lang_in_attrs(Attrs2, Lang)
+	     end,
+    %% Create element.
+    #xmlel{ns          = ?NS_XMPP,
+	   declared_ns = [{?NS_XMPP, ?NS_XMPP_pfx}, {Default_NS, none}],
+	   name        = 'stream',
+	   attrs       = Attrs3,
+	   children    = undefined
+	  }.
+
+%% @spec (From, Default_NS, Version, ID) -> Opening_Reply
+%%     From = binary() | string() | undefined
+%%     Default_NS = atom() | string()
+%%     Version = binary() | string() | {Major, Minor}
+%%     Major = integer()
+%%     Minor = integer()
+%%     ID = binary() | string() | undefined
+%%     Opening_Reply = exmpp_xml:xmlel()
+%% @doc Make a `<stream>' opening reply tag.
+%%
+%% @see opening_reply/5.
+
+-spec opening_reply
+(binary() | string() | undefined, xmlname(),
+ binary() | string() | streamversion(), binary() | string() | random) ->
+    xmlel().
+
+opening_reply(From, Default_NS, Version, ID) ->
+    opening_reply(From, Default_NS, Version, ID, undefined).
+
+%% @spec (From, Default_NS, Version, ID, Lang) -> Opening_Reply
+%%     From = binary() | string() | undefined
+%%     Default_NS = atom() | string()
+%%     Version = binary() | string() | {Major, Minor}
+%%     Major = integer()
+%%     Minor = integer()
+%%     ID = binary() | string() | random
+%%     Lang = binary() | string() | undefined
+%%     Opening_Reply = exmpp_xml:xmlel()
+%% @doc Make a `<stream>' opening reply tag.
+%%
+%% This element is supposed to be sent by the receiving entity in reply
+%% to the initiating entity (for the other way around, see {@link
+%% opening/1}).
+%%
+%% If `ID' is `random', one will be generated automatically.
+
+-spec opening_reply
+(binary() | string() | undefined, xmlname(),
+ binary() | string() | streamversion(), binary() | string() | random,
+ binary() | string() | undefined) ->
+    xmlel().
+
+opening_reply(From, Default_NS, Version, ID, Lang) ->
+    %% Prepare attributes.
+    Attrs1 = set_initiating_entity_in_attrs([], From),
+    Attrs2 = set_version_in_attrs(Attrs1, Version),
+    Attrs3 = set_id_in_attrs(Attrs2, ID),
+    Attrs4 = case Lang of
+		 undefined -> Attrs3;
+		 _         -> set_lang_in_attrs(Attrs3, Lang)
+	     end,
+    %% Create element.
+    #xmlel{ns          = ?NS_XMPP,
+	   declared_ns = [{?NS_XMPP, ?NS_XMPP_pfx}, {Default_NS, none}],
+	   name        = 'stream',
+	   attrs       = Attrs4,
+	   children    = undefined
+	  }.
+
+%% @spec (Opening, ID) -> Opening_Reply
+%%     Opening = exmpp_xml:xmlel()
+%%     ID = binary() | string() | random
+%%     Opening_Reply = exmpp_xml:xmlel()
+%% @doc Make a `<stream>' opening reply tag for the given `Opening' tag.
+%%
+%% This element is supposed to be sent by the receiving entity in reply
+%% to the initiating entity (for the other way around, see {@link
+%% opening/1}).
+%%
+%% If `ID' is `random', one will be generated automatically.
+
+-spec opening_reply
+(xmlel(), binary() | string() | random) -> xmlel().
+
+opening_reply(#xmlel{attrs = Attrs} = Opening, ID) ->
+    Attrs1 = exmpp_stanza:reply_from_attrs(Attrs),
+    Attrs2 = set_id_in_attrs(Attrs1, ID),
+    Opening#xmlel{attrs = Attrs2}.
+
+%% @spec (Opening, ID, Lang) -> Opening_Reply
+%%     Opening = exmpp_xml:xmlel()
+%%     ID = binary() | string() | random
+%%     Lang = binary() | string() | undefined
+%%     Opening_Reply = exmpp_xml:xmlel()
+%% @doc Make a `<stream>' opening reply tag for the given `Opening' tag.
+%%
+%% This element is supposed to be sent by the receiving entity in reply
+%% to the initiating entity (for the other way around, see {@link
+%% opening/1}).
+%%
+%% If `ID' is `random', one will be generated automatically.
+
+-spec opening_reply
+(xmlel(), binary() | string() | random, binary() | string() | undefined) ->
+    xmlel().
+
+opening_reply(#xmlel{attrs = Attrs} = Opening, ID, Lang) ->
+    Attrs1 = exmpp_stanza:reply_from_attrs(Attrs),
+    Attrs2 = set_id_in_attrs(Attrs1, ID),
+    Attrs3 = case Lang of
+		 undefined -> Attrs2;
+		 _         -> set_lang_in_attrs(Attrs2, Lang)
+	     end,
+    Opening#xmlel{attrs = Attrs3}.
+
+%% @spec () -> Closing
+%%     Closing = exmpp_xml:xmlendtag()
+%% @doc Make a `</stream>' closing tag.
+
+-spec closing
+() -> xmlendtag().
+
+closing() ->
+    #xmlendtag{ns = ?NS_XMPP, name = 'stream'}.
+
+%% @spec (Opening) -> Closing
+%%     Opening = exmpp_xml:xmlel()
+%%     Closing = exmpp_xml:xmlendtag()
+%% @doc Make a `</stream>' closing tag for the given `Opening' tag.
+
+-spec closing
+(xmlel()) -> xmlendtag().
+
+closing(#xmlel{ns = NS, name = Name}) ->
+    #xmlendtag{ns = NS, name = Name}.
+
+%% --------------------------------------------------------------------
+%% Stream standard attributes.
+%% --------------------------------------------------------------------
+
+%% @spec (Opening) -> Hostname | undefined
+%%     Opening = exmpp_xml:xmlel()
+%%     Hostname = binary()
+%% @doc Return the receiving entity hostname.
+
+-spec get_receiving_entity
+(xmlel()) -> binary() | undefined.
+
+get_receiving_entity(Opening) ->
+    exmpp_xml:get_attribute_as_binary(Opening, 'to', undefined).
+
+%% @spec (Opening, Hostname) -> New_Opening
+%%     Opening = exmpp_xml:xmlel()
+%%     Hostname = binary() | string()
+%%     New_Opening = exmpp_xml:xmlel()
+%% @doc Set the receiving entity in the `to' attribute.
+
+-spec set_receiving_entity
+(xmlel(), binary() | string()) -> xmlel().
+
+set_receiving_entity(#xmlel{attrs = Attrs} = Opening, Hostname) ->
+    New_Attrs = set_receiving_entity_in_attrs(Attrs, Hostname),
+    Opening#xmlel{attrs = New_Attrs}.
+
+set_receiving_entity_in_attrs(Attrs, undefined) ->
+    Attrs;
+set_receiving_entity_in_attrs(Attrs, Hostname) ->
+    exmpp_xml:set_attribute_in_list(Attrs, 'to', Hostname).
+
+%% @spec (Opening) -> Hostname | undefined
+%%     Opening = exmpp_xml:xmlel()
+%%     Hostname = binary()
+%% @doc Return the initiating entity hostname.
+
+-spec get_initiating_entity
+(xmlel()) -> binary() | undefined.
+
+get_initiating_entity(Opening) ->
+    exmpp_xml:get_attribute_as_binary(Opening, 'from', undefined).
+
+%% @spec (Opening, Hostname) -> New_Opening
+%%     Opening = exmpp_xml:xmlel()
+%%     Hostname = binary() | string()
+%%     New_Opening = exmpp_xml:xmlel()
+%% @doc Set the initiating entity in the `from' attribute.
+
+-spec set_initiating_entity
+(xmlel(), binary() | string()) -> xmlel().
+
+set_initiating_entity(#xmlel{attrs = Attrs} = Opening, Hostname) ->
+    New_Attrs = set_receiving_entity_in_attrs(Attrs, Hostname),
+    Opening#xmlel{attrs = New_Attrs}.
+
+set_initiating_entity_in_attrs(Attrs, undefined) ->
+    Attrs;
+set_initiating_entity_in_attrs(Attrs, Hostname) ->
+    exmpp_xml:set_attribute_in_list(Attrs, 'from', Hostname).
+
+%% @spec (Opening) -> Default_NS | undefined
+%%     Opening = exmpp_xml:xmlel()
+%%     Default_NS = atom() | string()
+%% @doc Return the default namespace.
+%%
+%% XMPP-IM defines `jabber:client' and `jabber:server'.
+
+-spec get_default_ns
+(xmlel()) -> xmlname() | undefined.
+
+get_default_ns(#xmlel{declared_ns = Declared_NS} = _Opening) ->
+    case lists:keysearch(none, 2, Declared_NS) of
+        {value, {NS, _none}} -> NS;
+        _                    -> undefined
+    end.
+
+%% @spec (Opening, NS) -> New_Opening
+%%     Opening = exmpp_xml:xmlel()
+%%     NS = atom() | string()
+%%     New_Opening = exmpp_xml:xmlel()
+%% @doc Set the default namespace.
+%%
+%% XMPP-IM defines `jabber:client' and `jabber:server'.
+
+-spec set_default_ns
+(xmlel(), xmlname()) -> xmlel().
+
+set_default_ns(#xmlel{declared_ns = Declared_NS} = Opening, NS) ->
+    Opening#xmlel{declared_ns = [{NS, none} | Declared_NS]}.
+
+%% @spec (Opening) -> Version
+%%     Opening = exmpp_xml:xmlel()
+%%     Version = {Major, Minor}
+%%     Major = integer()
+%%     Minor = integer()
+%% @doc Return the version of the stream.
+
+-spec get_version
+(xmlel()) -> streamversion().
+
+get_version(Opening) ->
+    parse_version(exmpp_xml:get_attribute_as_binary(Opening, 'version', <<>>)).
+
+%% @spec (Opening, Version) -> New_Opening
+%%     Opening = exmpp_xml:xmlel()
+%%     Version = binary() | string() | {Major, Minor} | undefined
+%%     Major = integer()
+%%     Minor = integer()
+%%     New_Opening = exmpp_xml:xmlel()
+%% @doc Set the protocol version.
+
+-spec set_version
+(xmlel(), binary() | string() | streamversion()) -> xmlel().
+
+set_version(#xmlel{attrs = Attrs} = Opening, Version) ->
+    New_Attrs = set_version_in_attrs(Attrs, Version),
+    Opening#xmlel{attrs = New_Attrs}.
+
+set_version_in_attrs(Attrs, Version)
+  when Version == undefined;
+Version == ""; Version == <<>>; Version == {0, 0} ->
+    exmpp_xml:remove_attribute_from_list(Attrs, 'version');
+set_version_in_attrs(Attrs, {_, _} = Version) ->
+    Version_B = serialize_version(Version),
+    set_version_in_attrs(Attrs, Version_B);
+set_version_in_attrs(Attrs, Version) ->
+    exmpp_xml:set_attribute_in_list(Attrs, 'version', Version).
+
+%% @spec (Opening) -> ID | undefined
+%%     Opening = exmpp_xml:xmlel()
+%%     ID = binary()
+%% @doc Return the stream ID.
+
+-spec get_id
+(xmlel()) -> binary() | undefined.
+
+get_id(Opening) ->
+    exmpp_xml:get_attribute_as_binary(Opening, 'id', undefined).
+
+%% @spec (Opening, ID) -> New_Opening
+%%     Opening = exmpp_xml:xmlel()
+%%     ID = binary() | string() | random
+%%     New_Opening = exmpp_xml:xmlel()
+%% @doc Set the stream ID.
+
+-spec set_id
+(xmlel(), binary() | string() | random) -> xmlel().
+
+set_id(#xmlel{attrs = Attrs} = Opening, ID) ->
+    New_Attrs = set_id_in_attrs(Attrs, ID),
+    Opening#xmlel{attrs = New_Attrs}.
+
+set_id_in_attrs(Attrs, ID) when ID == random; ID == <<>>; ID == "" ->
+    set_id_in_attrs(Attrs, exmpp_utils:random_id("stream"));
+set_id_in_attrs(Attrs, ID) ->
+    exmpp_xml:set_attribute_in_list(Attrs, 'id', ID).
+
+%% @spec (Opening) -> Lang | undefined
+%%     Opening = exmpp_xml:xmlel()
+%%     Lang = binary()
+%% @doc Return the language of the stream.
+
+-spec get_lang
+(xmlel()) -> binary() | undefined.
+
+get_lang(Opening) ->
+    exmpp_xml:get_attribute_as_binary(Opening, ?NS_XML, 'lang', undefined).
+
+%% @spec (Opening, Lang) -> New_Opening
+%%     Opening = exmpp_xml:xmlel()
+%%     Lang = binary() | string()
+%%     New_Opening = exmpp_xml:xmlel()
+%% @doc Set the default language.
+
+-spec set_lang
+(xmlel(), binary() | string()) -> xmlel().
+
+set_lang(#xmlel{attrs = Attrs} = Opening, Lang) ->
+    New_Attrs = set_lang_in_attrs(Attrs, Lang),
+    Opening#xmlel{attrs = New_Attrs}.
+
+set_lang_in_attrs(Attrs, Lang) ->
+    exmpp_xml:set_attribute_in_list(Attrs, ?NS_XML, 'lang', Lang).
+
+%% --------------------------------------------------------------------
+%% Version handling.
+%% --------------------------------------------------------------------
+
+%% @spec (String) -> Version
+%%     String = binary() | string() | undefined
+%%     Version = {Major, Minor}
+%%     Major = integer()
+%%     Minor = integer()
+%% @doc Parse the stream version in `String'.
+
+-spec parse_version
+(binary() | string() | undefined) -> streamversion().
+
+parse_version(undefined) ->
+    {0, 0};
+parse_version("") ->
+    {0, 0};
+parse_version(<<>>) ->
+    {0, 0};
+parse_version(String) when is_binary(String) ->
+    parse_version(binary_to_list(String));
+parse_version(String) ->
+    case string:to_integer(String) of
+        {Major, [$. | Rest]} ->
+            case string:to_integer(Rest) of
+                {Minor, []} -> {Major, Minor};
+                _           -> {error, invalid_version}
+            end;
+        _ ->
+            {error, invalid_version}
+    end.
+
+%% @spec (Version) -> Binary
+%%     Version = {Major, Minor}
+%%     Major = integer()
+%%     Minor = integer()
+%%     Binary = binary()
+%% @doc Make a binary() for the `version' attribute of a stream element.
+
+-spec serialize_version
+(streamversion() | undefined) -> binary().
+
+serialize_version(undefined) ->
+    <<>>;
+serialize_version({0, 0}) ->
+    <<>>;
+serialize_version({Major, Minor}) ->
+    list_to_binary(lists:flatten(io_lib:format("~b.~b", [Major, Minor]))).
+
+%% --------------------------------------------------------------------
+%% Features announcement.
+%% --------------------------------------------------------------------
+
+%% @spec (Opening) -> New_Opening
+%%     Opening = exmpp_xml:xmlel()
+%%     New_Opening = exmpp_xml:xmlel()
+%% @doc Declare server diablack support.
+
+-spec set_dialback_support
+(xmlel()) -> xmlel().
+
+set_dialback_support(Opening) ->
+    exmpp_xml:declare_ns_here(Opening, ?NS_DIALBACK, ?NS_DIALBACK_pfx).
+
+%% @spec (Features) -> Features_Announcement
+%%     Features = [exmpp_xml:xmlel()]
+%%     Features_Announcement = exmpp_xml:xmlel()
+%% @doc Make the features annoucement element.
+
+-spec features
+([xmlel()]) -> xmlel().
+
+features(Features) ->
+    #xmlel{
+	  ns = ?NS_XMPP,
+	  declared_ns = [{?NS_XMPP, ?NS_XMPP_pfx}],
+	  name = 'features',
+	  children = Features
+	 }.
+
+%% --------------------------------------------------------------------
+%% Stream-level errors.
+%% --------------------------------------------------------------------
+
+standard_conditions() ->
+    [
+     {'bad-format'},
+     {'bad-namespace-prefix'},
+     {'conflict'},
+     {'connection-timeout'},
+     {'host-gone'},
+     {'host-unknown'},
+     {'improper-addressing'},
+     {'internal-server-error'},
+     {'invalid-from'},
+     {'invalid-id'},
+     {'invalid-namespace'},
+     {'invalid-xml'},
+     {'not-authorized'},
+     {'policy-violation'},
+     {'remote-connection-failed'},
+     {'resource-constraint'},
+     {'restricted-xml'},
+     {'see-other-host'},
+     {'system-shutdown'},
+     {'undefined-condition'},
+     {'unsupported-encoding'},
+     {'unsupported-stanza-type'},
+     {'unsupported-version'},
+     {'xml-not-well-formed'}
+    ].
+
+%% @spec (Condition) -> Stream_Error
+%%     Condition = atom()
+%%     Stream_Error = exmpp_xml:xmlel()
+%% @doc Make a standard `<stream:error>' element based on the given
+%% `Condition'.
+
+-spec error
+(atom()) -> xmlel().
+
+error(Condition) ->
+    error(Condition, {undefined, undefined}).
+
+-spec error
+(atom(), {binary() | string() | undefined, binary() | string() | undefined}) ->
+    xmlel().
+
+error(Condition, {Lang, Text}) ->
+    case lists:keymember(Condition, 1, standard_conditions()) of
+        true  -> ok;
+        false -> throw({stream_error, condition, invalid, Condition})
+    end,
+    Condition_El = #xmlel{ns = ?NS_STREAM_ERRORS,
+			  name = Condition
+			 },
+    Error_El0 = #xmlel{ns = ?NS_XMPP,
+		       declared_ns = [{?NS_XMPP, ?NS_XMPP_pfx}],
+		       name = 'error',
+		       children = [Condition_El]
+		      },
+    case Text of
+        undefined ->
+            Error_El0;
+        _ ->
+            Text_El0 = #xmlel{ns = ?NS_STREAM_ERRORS,
+			      name = 'text'
+			     },
+            Text_El = case Lang of
+			  undefined ->
+			      Text_El0;
+			  _ ->
+			      exmpp_xml:set_attribute(Text_El0, ?NS_XML,
+						      'lang', Lang)
+		      end,
+            exmpp_xml:append_child(Error_El0, Text_El)
+    end.
+
+%% @spec (XML_El) -> bool()
+%%     XML_El = exmpp_xml:xmlel()
+%% @doc Tell if this element is a stream error.
+
+-spec is_error
+(xmlel()) -> bool().
+
+is_error(#xmlel{ns = ?NS_XMPP, name = 'error'}) ->
+    true;
+is_error(_) ->
+    false.
+
+%% @spec (Stream_Error) -> Condition | undefined
+%%     Stream_Error = exmpp_xml:xmlel()
+%%     Condition = atom()
+%% @doc Return the child element name corresponding to the stanza error
+%% condition.
+
+-spec get_condition
+(xmlel()) -> atom() | undefined.
+
+get_condition(#xmlel{ns = ?NS_XMPP, name = 'error'} = El) ->
+    case exmpp_xml:get_element_by_ns(El, ?NS_STREAM_ERRORS) of
+        undefined ->
+	    %% This <stream:error/> element is invalid because the
+	    %% condition must be present (and first).
+            undefined;
+        #xmlel{name = 'text'} ->
+	    %% Same as above.
+            undefined;
+        #xmlel{name = Condition} when is_atom(Condition) ->
+            Condition;
+        #xmlel{name = Condition} when is_list(Condition) ->
+            list_to_atom(Condition)
+    end.
+
+%% @spec (Stream_Error) -> Text | undefined
+%%     Stream_Error = exmpp_xml:xmlel()
+%%     Text = binary()
+%% @doc Return the text that describes the error.
+
+-spec get_text
+(xmlel()) -> binary() | undefined.
+
+get_text(#xmlel{ns = ?NS_XMPP, name = 'error'} = El) ->
+    case exmpp_xml:get_element(El, ?NS_STREAM_ERRORS, 'text') of
+        undefined -> undefined;
+        Text      -> exmpp_xml:get_cdata(Text)
+    end.
+
+%% --------------------------------------------------------------------
+%% Serialization wrappers.
+%% --------------------------------------------------------------------
+
+%% @spec (El) -> XML_Text
+%%     El = exmpp_xml:xmlel() | list()
+%%     XML_Text = string()
+%% @doc Serialize a stream opening/closing.
+
+-spec to_list
+(xmlel() | [xmlel()]) -> string().
+
+to_list(El) ->
+    exmpp_xml:document_to_list(El).
+
+%% @spec (El) -> XML_Text
+%%     El = exmpp_xml:xmlel() | list()
+%%     XML_Text = binary()
+%% @doc Serialize a stream opening/closing.
+
+-spec to_binary
+(xmlel() | [xmlel()]) -> binary().
+
+to_binary(El) ->
+    exmpp_xml:document_to_binary(El).
+
+%% @spec (El) -> XML_Text
+%%     El = exmpp_xml:xmlel() | list()
+%%     XML_Text = iolist()
+%% @doc Serialize a stream opening/closing.
+
+-spec to_iolist
+(xmlel() | [xmlel()]) -> iolist().
+
+to_iolist(El) ->
+    exmpp_xml:document_to_iolist(El).
diff -r d551623afde5 deps/exmpp/src/core/exmpp_stringprep.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/core/exmpp_stringprep.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,349 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> provides functions to use
+%% NODEPREP, NAMEPREP and RESOURCEPREP stringprep profiles.
+%%
+%% <p>
+%% It's not intended to be used directly.
+%% </p>
+
+-module(exmpp_stringprep).
+
+-behaviour(gen_server).
+
+%% Initialization.
+-export([
+	 start/0,
+	 start_link/0
+	]).
+
+%% Stringprep profiles.
+-export([
+	 nodeprep/1,
+	 nameprep/1,
+	 resourceprep/1
+	]).
+
+%% Tools.
+-export([
+	 is_node/1,
+	 is_name/1,
+	 is_resource/1,
+	 to_lower/1,
+	 port_revision/0
+	]).
+
+%% gen_server(3erl) callbacks.
+-export([
+	 init/1,
+	 handle_call/3,
+	 handle_cast/2,
+	 handle_info/2,
+	 terminate/2,
+	 code_change/3
+	]).
+
+-record(state, {port}).
+
+-define(SERVER, ?MODULE).
+-define(DRIVER_NAME, exmpp_stringprep).
+-define(PORT_REGISTERED_NAME, exmpp_stringprep_port).
+
+-define(COMMAND_LOWERCASE,     0).
+-define(COMMAND_NAMEPREP,      1).
+-define(COMMAND_NODEPREP,      2).
+-define(COMMAND_RESOURCEPREP,  3).
+-define(COMMAND_PORT_REVISION, 4).
+
+%% --------------------------------------------------------------------
+%% Initialization.
+%% --------------------------------------------------------------------
+
+%% @hidden
+
+start() ->
+    gen_server:start({local, ?SERVER}, ?MODULE, [], []).
+
+%% @hidden
+
+start_link() ->
+    gen_server:start_link({local, ?SERVER}, ?MODULE, [], []).
+
+%% --------------------------------------------------------------------
+%% Stringprep profiles.
+%% --------------------------------------------------------------------
+
+%% @spec (String) -> Prepd_String
+%%     String = binary() | string()
+%%     Prepd_String = binary() | string()
+%% @throws {stringprep, nodeprep, exmpp_not_started, String} |
+%%         {stringprep, nodeprep, invalid_string, String}
+%% @doc Apply the NODEPREP stringprep profile to `String'.
+
+-spec nodeprep
+(binary()) -> binary();
+(string()) -> string().
+
+nodeprep(String) ->
+    case control_reuse_arg(?COMMAND_NODEPREP, String) of
+        {error, Reason} ->
+            throw({stringprep, nodeprep, Reason, String});
+        Result ->
+            Result
+    end.
+
+%% @spec (String) -> Prepd_String
+%%     String = binary() | string()
+%%     Prepd_String = binary() | string()
+%% @throws {stringprep, nameprep, exmpp_not_started, String} |
+%%         {stringprep, nameprep, invalid_string, String}
+%% @doc Apply the NAMEPREP stringprep profile to `String'.
+
+-spec nameprep
+(binary()) -> binary();
+(string()) -> string().
+
+nameprep(String) ->
+    case control_reuse_arg(?COMMAND_NAMEPREP, String) of
+        {error, Reason} ->
+            throw({stringprep, nameprep, Reason, String});
+        Result ->
+            Result
+    end.
+
+%% @spec (String) -> Prepd_String
+%%     String = binary() | string()
+%%     Prepd_String = binary() | string()
+%% @throws {stringprep, resourceprep, exmpp_not_started, String} |
+%%         {stringprep, resourceprep, invalid_string, String}
+%% @doc Apply the RESOURCEPREP stringprep profile to `String'.
+
+-spec resourceprep
+(binary()) -> binary();
+(string()) -> string().
+
+resourceprep(String) ->
+    case control_reuse_arg(?COMMAND_RESOURCEPREP, String) of
+        {error, Reason} ->
+            throw({stringprep, resourceprep, Reason, String});
+        Result ->
+            Result
+    end.
+
+%% --------------------------------------------------------------------
+%% Tools.
+%% --------------------------------------------------------------------
+
+%% @spec (String) -> bool()
+%%     String = binary() | string()
+%% @throws {stringprep, nodeprep, exmpp_not_started, String}
+%% @doc Tell if `String' conforms the NODEPREP stringprep profile.
+
+-spec is_node
+(binary() | string()) -> bool().
+
+is_node(<<>>) ->
+    false;
+is_node("") ->
+    false;
+is_node(String) ->
+    try
+        nodeprep(String),
+        true
+    catch
+        throw:_Exception ->
+            false
+    end.
+
+%% @spec (String) -> bool()
+%%     String = binary() | string()
+%% @throws {stringprep, nameprep, exmpp_not_started, String}
+%% @doc Tell if `String' conforms the NAMEPREP stringprep profile.
+
+-spec is_name
+(binary() | string()) -> bool().
+
+is_name(<<>>) ->
+    false;
+is_name("") ->
+    false;
+is_name(String) ->
+    try
+        nameprep(String),
+        true
+    catch
+        throw:_Exception ->
+            false
+    end.
+
+%% @spec (String) -> bool()
+%%     String = binary() | string()
+%% @throws {stringprep, resourceprep, exmpp_not_started, String}
+%% @doc Tell if `String' conforms the RESOURCEPREP stringprep profile.
+
+-spec is_resource
+(binary() | string()) -> bool().
+
+is_resource(<<>>) ->
+    false;
+is_resource("") ->
+    false;
+is_resource(String) ->
+    try
+        resourceprep(String),
+        true
+    catch
+        throw:_Exception ->
+            false
+    end.
+
+%% @spec (String) -> Lowered_String
+%%     String = binary() | string()
+%%     Lowered_String = binary() | string()
+%% @throws {stringprep, lowercase, exmpp_not_started, String} |
+%%         {stringprep, lowercase, invalid_string, String}
+%% @doc Convert `String' to lowercase.
+
+-spec to_lower
+(binary()) -> binary();
+(string()) -> string().
+
+to_lower(String) ->
+    case control_reuse_arg(?COMMAND_LOWERCASE, String) of
+        {error, Reason} ->
+            throw({stringprep, lowercase, Reason, String});
+        Result ->
+            Result
+    end.
+
+%% @hidden
+
+port_revision() ->
+    case control(?COMMAND_PORT_REVISION, "") of
+        {error, Reason} ->
+            throw({stringprep, port_revision, Reason, ""});
+        Result ->
+            Result
+    end.
+
+%% --------------------------------------------------------------------
+%% Internal functions.
+%% --------------------------------------------------------------------
+
+-spec control
+(non_neg_integer(), binary() | string()) ->
+    string() | {error, invalid_string | exmpp_not_started}.
+
+control(Command, String) ->
+    try
+        case port_control(?PORT_REGISTERED_NAME, Command, String) of
+            [0 | _]      -> {error, invalid_string};
+            [1 | Result] -> Result
+        end
+    catch
+        error:badarg ->
+            case erlang:port_info(?PORT_REGISTERED_NAME, registered_name) of
+                {registered_name, ?PORT_REGISTERED_NAME} ->
+                    {error, invalid_string};
+                undefined ->
+                    {error, exmpp_not_started}
+            end
+    end.
+
+-spec control_reuse_arg
+(non_neg_integer(), binary()) ->
+    binary() | {error, invalid_string | exmpp_not_started};
+(non_neg_integer(), string()) ->
+    string() | {error, invalid_string | exmpp_not_started}.
+
+control_reuse_arg(Command, String) ->
+    %% If applying a STRINGPREP profile doesn't modify the original string,
+    %% keep the former and throw away the returned string.
+    %%
+    %% Guard expressions (eg. Result =:= String) must be used instead of
+    %% pattern matching, otherwise the two copies are still maintained.
+    case control(Command, String) of
+        {error, _} = Error ->
+            Error;
+        Result when is_binary(String) ->
+            case list_to_binary(Result) of
+                Result_B when Result_B =:= String -> String;
+                Result_B                          -> Result_B
+            end;
+        Result when Result =:= String ->
+            String;
+        Other ->
+            Other
+    end.
+
+%% --------------------------------------------------------------------
+%% gen_server(3erl) callbacks.
+%% --------------------------------------------------------------------
+
+%% @hidden
+
+init([]) ->
+    try
+        exmpp_internals:load_driver(?DRIVER_NAME),
+        Port = exmpp_internals:open_port(?DRIVER_NAME),
+        register(?PORT_REGISTERED_NAME, Port),
+        State = #state{
+          port = Port
+	 },
+        {ok, State}
+    catch
+        throw:{port_driver, load, _, _} = Exception ->
+            {stop, Exception};
+	  throw:{port_driver, open, _, _} = Exception ->
+            exmpp_internals:unload_driver(?DRIVER_NAME),
+            {stop, Exception}
+    end.
+
+%% @hidden
+
+handle_call(Request, From, State) ->
+    error_logger:info_msg("~p:handle_call/3:~n- Request: ~p~n- From: ~p~n"
+			  "- State: ~p~n", [?MODULE, Request, From, State]),
+    {reply, ok, State}.
+
+%% @hidden
+
+handle_cast(Request, State) ->
+    error_logger:info_msg("~p:handle_cast/2:~n- Request: ~p~n"
+			  "- State: ~p~n", [?MODULE, Request, State]),
+    {noreply, State}.
+
+%% @hidden
+
+handle_info(Info, State) ->
+    error_logger:info_msg("~p:handle_info/2:~n- Info: ~p~n"
+			  "- State: ~p~n", [?MODULE, Info, State]),
+    {noreply, State}.
+
+%% @hidden
+
+code_change(Old_Vsn, State, Extra) ->
+    error_logger:info_msg("~p:code_change/3:~n- Old_Vsn: ~p~n- Extra: ~p~n"
+			  "- State: ~p~n", [?MODULE, Old_Vsn, Extra, State]),
+    {ok, State}.
+
+%% @hidden
+
+terminate(_Reason, #state{port = Port} = _State) ->
+    exmpp_internals:close_port(Port),
+    exmpp_internals:unload_driver(?DRIVER_NAME),
+    ok.
diff -r d551623afde5 deps/exmpp/src/core/exmpp_sup.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/core/exmpp_sup.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,105 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> is the master supervisor.
+%%
+%% <p>
+%% It will start the following services:
+%% </p>
+%% <ol>
+%%   <li>{@link exmpp_stringprep}</li>
+%%   <li>{@link exmpp_tls}</li>
+%% </ol>
+%%
+%% <p>
+%% It's not intended to be used directly.
+%% </p>
+
+-module(exmpp_sup).
+
+-behaviour(supervisor).
+
+%% Initialization.
+-export([
+	 start_link/0
+	]).
+
+%% supervisor(3erl) callbacks.
+-export([
+	 init/1
+	]).
+
+-define(SUPERVISOR, ?MODULE).
+
+%% --------------------------------------------------------------------
+%% Public API.
+%% --------------------------------------------------------------------
+
+%% @spec () -> Result
+%%     Result = term()
+%% @doc Start the supervisor and link to it.
+%%
+%% @see supervisor:start_link/3.
+
+start_link() ->
+    supervisor:start_link({local, ?SUPERVISOR}, ?MODULE, []).
+
+%% --------------------------------------------------------------------
+%% supervisor(3erl) callbacks.
+%% --------------------------------------------------------------------
+
+%% @hidden
+
+init(_Args) ->
+    %% Stringprep.
+    Stringprep = {stringprep,
+		  {exmpp_stringprep, start_link, []},
+		  transient,
+		  2000,
+		  worker,
+		  [exmpp_stringprep]
+		 },
+    %% XML.
+    XML = {xml,
+	   {exmpp_xml, start_link, []},
+	   transient,
+	   2000,
+	   worker,
+	   [exmpp_xml]
+	  },
+    %% TLS.
+    TLS = {tls,
+	   {exmpp_tls, start_link, []},
+	   transient,
+	   2000,
+	   worker,
+	   [exmpp_tls]
+	  },
+    %% Compress.
+    Compress = {compress,
+		{exmpp_compress, start_link, []},
+		transient,
+		2000,
+		worker,
+		[exmpp_compress]
+	       },
+    {ok, {{one_for_one, 10, 1}, [
+				 Stringprep,
+				 XML,
+				 TLS,
+				 Compress
+				]
+	 }}.
diff -r d551623afde5 deps/exmpp/src/core/exmpp_tls.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/core/exmpp_tls.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,1091 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> provides functions to handle a
+%% TLS session.
+
+-module(exmpp_tls).
+
+-behaviour(gen_server).
+
+%% Initialization.
+-export([
+	 start/0,
+	 start_link/0
+	]).
+
+%% Registry handling.
+-export([
+	 register_engine/3,
+	 register_engine/4,
+	 get_auth_methods/0,
+	 get_engine_names/0,
+	 get_engine_names/1,
+	 get_prefered_engine_name/1,
+	 is_engine_available/1,
+	 get_engine_driver/1
+	]).
+
+%% Handshake and other TLS operations.
+-export([
+	 connect/4,
+	 accept/4,
+	 get_peer_certificate/1,
+	 get_verify_result/1,
+	 shutdown/1,
+	 shutdown/2,
+	 shutdown/3,
+	 quiet_shutdown/1
+	]).
+
+%% Common socket API.
+-export([
+	 send/2,
+	 recv/1,
+	 recv/2,
+	 recv_data/2,
+	 getopts/2,
+	 setopts/2,
+	 peername/1,
+	 sockname/1,
+	 controlling_process/2,
+	 close/1,
+	 port_revision/1
+	]).
+
+%% gen_server(3erl) callbacks.
+-export([
+	 init/1,
+	 handle_call/3,
+	 handle_cast/2,
+	 handle_info/2,
+	 terminate/2,
+	 code_change/3
+	]).
+
+-record(state, {
+	  engines,
+	  by_auth_method
+	 }).
+
+-record(tls_engine, {
+	  name,
+	  driver_path,
+	  driver,
+	  auth_methods = []
+	 }).
+
+-record(tls_socket, {
+	  socket,
+	  packet_mode = binary,
+	  port
+	 }).
+
+-define(SERVER, ?MODULE).
+
+-define(COMMAND_SET_MODE,              1).
+-define(COMMAND_SET_IDENTITY,          2).
+-define(COMMAND_SET_PEER_VERIF,        3).
+-define(COMMAND_SET_TRUSTED_CERTS,     4).
+-define(COMMAND_SET_OPTIONS,           5).
+-define(COMMAND_PREPARE_HANDSHAKE,     6).
+-define(COMMAND_HANDSHAKE,             7).
+-define(COMMAND_SET_ENCRYPTED_INPUT,   8).
+-define(COMMAND_GET_DECRYPTED_INPUT,   9).
+-define(COMMAND_SET_DECRYPTED_OUTPUT, 10).
+-define(COMMAND_GET_ENCRYPTED_OUTPUT, 11).
+-define(COMMAND_GET_PEER_CERTIFICATE, 12).
+-define(COMMAND_GET_VERIFY_RESULT,    13).
+-define(COMMAND_SHUTDOWN,             14).
+-define(COMMAND_QUIET_SHUTDOWN,       15).
+-define(COMMAND_PORT_REVISION,        16).
+
+%% --------------------------------------------------------------------
+%% Initialization.
+%% --------------------------------------------------------------------
+
+%% @hidden
+
+start() ->
+    Ret = gen_server:start({local, ?SERVER}, ?MODULE, [], []),
+    register_builtin_engines(),
+    Ret.
+
+%% @hidden
+
+start_link() ->
+    Ret = gen_server:start_link({local, ?SERVER}, ?MODULE, [], []),
+    register_builtin_engines(),
+    Ret.
+
+-ifdef(HAVE_OPENSSL).
+-define(REGISTER_OPENSSL,
+	register_builtin_engine(openssl, exmpp_tls_openssl,
+				[{x509, 10}])).
+-else.
+-define(REGISTER_OPENSSL, ok).
+-endif.
+
+-ifdef(HAVE_GNUTLS).
+-define(REGISTER_GNUTLS,
+	register_builtin_engine(gnutls, exmpp_tls_gnutls,
+				[{x509, 20}, {openpgp, 10}])).
+-else.
+-define(REGISTER_GNUTLS, ok).
+-endif.
+
+register_builtin_engines() ->
+    ?REGISTER_OPENSSL,
+    ?REGISTER_GNUTLS,
+    ok.
+
+register_builtin_engine(Name, Driver, Auth_Methods) ->
+    try
+        register_engine(Name, Driver, Auth_Methods)
+    catch
+        throw:{port_driver, load, Reason, Driver_Name} ->
+            error_logger:warning_msg("Failed to load driver \"~s\": ~s~n",
+				     [Driver_Name,
+				      erl_ddll:format_error(Reason)])
+    end.
+
+%% --------------------------------------------------------------------
+%% Registry handling.
+%% --------------------------------------------------------------------
+
+%% @spec (Name, Driver, Auth_Methods) -> ok
+%%     Name = atom()
+%%     Driver = atom()
+%%     Auth_Mehods = [{atom(), Priority}]
+%%     Priority = integer()
+%% @doc Add a new TLS engine.
+
+register_engine(Name, Driver, Auth_Methods) ->
+    register_engine(Name, undefined, Driver, Auth_Methods).
+
+%% @spec (Name, Driver_Path, Driver, Auth_Methods) -> ok
+%%     Name = atom()
+%%     Driver_Path = string()
+%%     Driver = atom()
+%%     Auth_Mehods = [{atom(), Priority}]
+%%     Priority = integer()
+%% @doc Add a new TLS engine.
+
+register_engine(Name, Driver_Path, Driver, Auth_Methods)
+  when is_atom(Name), is_list(Auth_Methods), length(Auth_Methods) > 0 ->
+    Engine = #tls_engine{
+      name = Name,
+      driver_path = Driver_Path,
+      driver = Driver,
+      auth_methods = Auth_Methods
+     },
+    case gen_server:call(?SERVER, {register_engine, Engine}) of
+        ok                 -> ok;
+        {error, Exception} -> throw(Exception)
+    end.
+
+%% @spec () -> [Auth_Method]
+%%     Auth_Method = atom()
+%% @doc Return the list of supported auth methods.
+
+get_auth_methods() ->
+    gen_server:call(?SERVER, get_auth_methods).
+
+%% @spec () -> [Engine_Name]
+%%     Engine_Name = atom()
+%% @doc Return the list of TLS engines.
+
+get_engine_names() ->
+    gen_server:call(?SERVER, get_engine_names).
+
+%% @spec (Auth_Method) -> [Engine_Name]
+%%     Auth_Method = atom()
+%%     Engine_Name = atom()
+%% @doc Return the list of TLS engines which support the given auth method.
+%%
+%% The list is sorted from the most to the least prefered engine.
+
+get_engine_names(Auth_Method) ->
+    Engines = gen_server:call(?SERVER, {get_engines, Auth_Method}),
+    [E#tls_engine.name || E <- Engines].
+
+%% @spec (Auth_Method) -> [Engine_Name]
+%%     Auth_Method = atom()
+%%     Engine_Name = atom()
+%% @doc Return the name of the prefered TLS engines which support the
+%% given auth method.
+
+get_prefered_engine_name(Auth_Method) ->
+    Engines = gen_server:call(?SERVER, {get_engines, Auth_Method}),
+    case Engines of
+        []           -> undefined;
+        [Engine | _] -> Engine#tls_engine.name
+    end.
+
+%% @spec (Engine_Name) -> bool()
+%%     Engine_Name = atom()
+%% @doc Tell if `Engine_Name' is available.
+
+is_engine_available(Engine_Name) ->
+    case gen_server:call(?SERVER, {get_engine, Engine_Name}) of
+        undefined -> false;
+        _         -> true
+    end.
+
+%% @spec (Engine_Name) -> Driver_Name
+%%     Engine_Name = atom()
+%%     Driver_Name = atom()
+%% @doc Return the port driver name associated to the given engine.
+
+get_engine_driver(Engine_Name) ->
+    case gen_server:call(?SERVER, {get_engine, Engine_Name}) of
+        undefined                         -> undefined;
+        #tls_engine{driver = Driver_Name} -> Driver_Name
+    end.
+
+%% --------------------------------------------------------------------
+%% Handshake and other TLS operations.
+%% --------------------------------------------------------------------
+
+%% @spec (Socket_Desc, Identity, Peer_Verification, Options) -> TLS_Socket
+%%     Socket_Desc = {Mod, Socket}
+%%     Mod = atom()
+%%     Socket = term()
+%%     Identity = {Auth_Method, Certificate, Private_Key} | undefined
+%%     Auth_Method = atom()
+%%     Certificate = string()
+%%     Private_Key = string()
+%%     Peer_Verification = bool() | Peer_Name
+%%     Peer_Name = string()
+%%     Options = [Option]
+%%     Option = {engine, Engine} | {mode, Mode} | {trusted_certs, Auth_Method, Certs} | peer_cert_required | accept_expired_cert | accept_revoked_cert | accept_non_trusted_cert | accept_corrupted_cert
+%%     Engine = atom()
+%%     Mode = binary | list
+%%     TLS_Socket = tls_socket()
+%% @doc Start TLS handshake as a client.
+
+connect(Socket_Desc, Identity, Peer_Verification, Options) ->
+    handshake(client, Socket_Desc, Identity, Peer_Verification, Options).
+
+%% @spec (Socket_Desc, Identity, Peer_Verification, Options) -> TLS_Socket
+%%     Socket_Desc = {Mod, Socket}
+%%     Mod = atom()
+%%     Socket = term()
+%%     Identity = {Auth_Method, Certificate, Private_Key}
+%%     Auth_Method = atom()
+%%     Certificate = string()
+%%     Private_Key = string()
+%%     Peer_Verification = bool() | Peer_Name
+%%     Peer_Name = string()
+%%     Options = [Option]
+%%     Option = {engine, Engine} | {mode, Mode} | {trusted_certs, {Auth_Method, Certs}} | peer_cert_required | accept_expired_cert | accept_revoked_cert | accept_non_trusted_cert | accept_corrupted_cert
+%%     Engine = atom()
+%%     Mode = binary | list
+%%     TLS_Socket = tls_socket()
+%% @doc Start TLS handshake as a server.
+
+accept(Socket_Desc, Identity, Peer_Verification, Options) ->
+    handshake(server, Socket_Desc, Identity, Peer_Verification, Options).
+
+handshake(Mode, Socket_Desc, Identity, Peer_Verification, Options) ->
+    handshake(Mode, Socket_Desc, Identity, Peer_Verification, Options,
+	      infinity).
+
+handshake(Mode, Socket_Desc, Identity, Peer_Verification, Options,
+	  Recv_Timeout) ->
+    %% Check arguments.
+    check_identity(Identity, Mode),
+    check_peer_verification(Peer_Verification, Mode),
+
+    %% We save the 'active' state of the socket.
+    Is_Active = case exmpp_internals:gen_getopts(Socket_Desc, [active]) of
+		    {ok, [{active, Active}]} ->
+			    Active;
+		    {error, Reason} ->
+			    throw({tls, handshake, getopts, Reason})
+		end,
+
+    %% Start a port driver instance.
+    Driver_Name = get_engine_from_args(Identity, Peer_Verification, Options),
+    Port = exmpp_internals:open_port(Driver_Name),
+
+    %% Initialize the port and handshake.
+    try
+	%% Set mode (client vs. server).
+        engine_set_mode(Port, Mode),
+
+	%% Set local peer identity.
+        engine_set_identity(Port, Identity),
+
+	%% Enable (or not) peer's certificate verification.
+        engine_set_peer_verification(Port, Peer_Verification),
+
+	%% Packet mode.
+        Packet_Mode = proplists:get_value(mode, Options, binary),
+
+	%% Set trusted certificates.
+        engine_set_trusted_certs(Port,
+				 proplists:get_value(trusted_certs, Options)),
+
+	%% Set flags.
+        engine_set_options(Port, peer_cert_required,
+			   proplists:get_bool(peer_cert_required, Options)),
+        engine_set_options(Port, accept_expired_cert,
+			   proplists:get_bool(accept_expired_cert, Options)),
+        engine_set_options(Port, accept_non_trusted_cert,
+			   proplists:get_bool(accept_non_trusted_cert, Options)),
+        engine_set_options(Port, accept_revoked_cert,
+			   proplists:get_bool(accept_revoked_cert, Options)),
+        engine_set_options(Port, accept_corrupted_cert,
+			   proplists:get_bool(accept_corrupted_cert, Options)),
+
+	%% Before anything use of the socket, we must disable the 'active'
+	%% mode. Otherwise, we can't receive any data.
+        exmpp_internals:gen_setopts(Socket_Desc, [{active, false}]),
+
+	%% Handshake!
+        engine_prepare_handshake(Port),
+        TLS_Socket = handshake2(Mode, Socket_Desc, Port, Recv_Timeout),
+
+	%% We can now restore the 'active' mode.
+        exmpp_internals:gen_setopts(Socket_Desc, [{active, Is_Active}]),
+
+        TLS_Socket#tls_socket{packet_mode = Packet_Mode}
+    catch
+        _:Exception ->
+            exmpp_internals:close_port(Port),
+            exmpp_internals:gen_setopts(Socket_Desc, [{active, Is_Active}]),
+            throw(Exception)
+    end.
+
+handshake2(client = Mode, Socket_Desc, Port, Recv_Timeout) ->
+    %% Try to handshake.
+    case engine_handshake(Port) of
+        want_read ->
+	    %% Send the current data.
+            New_Packet = engine_get_encrypted_output(Port),
+            case exmpp_internals:gen_send(Socket_Desc, New_Packet) of
+                ok ->
+		    %% Wait for a packet from the client.
+                    case exmpp_internals:gen_recv(Socket_Desc, Recv_Timeout) of
+                        {ok, Packet} ->
+                            engine_set_encrypted_input(Port, Packet),
+			    %% Recurse!
+                            handshake2(Mode, Socket_Desc, Port, Recv_Timeout);
+                        {error, Reason} ->
+                            throw({tls, handshake, underlying_recv, Reason})
+                    end;
+                {error, Reason} ->
+                    throw({tls, handshake, underlying_send, Reason})
+            end;
+        ok ->
+	    %% Handshake done.
+            #tls_socket{socket = Socket_Desc, port = Port}
+    end;
+handshake2(server = Mode, Socket_Desc, Port, Recv_Timeout) ->
+    %% Wait for a packet from the client.
+    case exmpp_internals:gen_recv(Socket_Desc, Recv_Timeout) of
+        {ok, Packet} ->
+            engine_set_encrypted_input(Port, Packet),
+	    %% Try to handshake.
+            case engine_handshake(Port) of
+                want_read ->
+		    %% Send the current data.
+                    New_Packet = engine_get_encrypted_output(Port),
+                    case exmpp_internals:gen_send(Socket_Desc, New_Packet) of
+                        ok ->
+			    %% Recurse!
+                            handshake2(Mode, Socket_Desc, Port, Recv_Timeout);
+                        {error, Reason} ->
+                            throw({tls, handshake, underlying_send, Reason})
+                    end;
+                ok ->
+                    New_Packet = engine_get_encrypted_output(Port),
+                    case exmpp_internals:gen_send(Socket_Desc, New_Packet) of
+                        ok ->
+			    %% Handshake done.
+                            #tls_socket{socket = Socket_Desc, port = Port};
+                        {error, Reason} ->
+                            throw({tls, handshake, underlying_send, Reason})
+                    end
+            end;
+        {error, Reason} ->
+            throw({tls, handshake, underlying_recv, Reason})
+    end.
+
+%% @spec (TLS_Socket) -> Certificate | undefined
+%%     TLS_Socket = tls_socket()
+%%     Certificate = binary()
+%% @doc Return the peer certificate if he provided one.
+
+get_peer_certificate(#tls_socket{port = Port}) ->
+    case engine_get_peer_certificate(Port) of
+        undefined ->
+            undefined;
+        Bin_Cert ->
+            case ssl_pkix:decode_cert(Bin_Cert, [pkix]) of
+                {ok, Cert} ->
+                    Cert;
+                {error, Reason} ->
+                    throw({tls, peer_certificate, decode_failed, Reason})
+            end
+    end.
+
+%% @spec (TLS_Socket) -> Result
+%%     TLS_Socket = tls_socket()
+%%     Result = integer()
+%% @doc Return verify result.
+
+get_verify_result(#tls_socket{port = Port}) ->
+    engine_get_verify_result(Port).
+
+%% @spec (TLS_Socket) -> Socket_Desc
+%%     TLS_Socket = tls_socket()
+%%     Socket_Desc = {Mod, Socket}
+%% @doc Shutdown the TLS session.
+%%
+%% Only a unidirectional shutdown is made.
+%%
+%% The underlying socket is NOT closed.
+
+shutdown(TLS_Socket) ->
+    shutdown(TLS_Socket, unidirectional).
+
+%% @spec (TLS_Socket, Mode) -> Socket_Desc
+%%     TLS_Socket = tls_socket()
+%%     Mode = unidirectional | bidirectional
+%%     Socket_Desc = {Mod, Socket}
+%% @doc Shutdown the TLS session.
+%%
+%% For bidirectional shutdown, there's no timeout for the peer's
+%% "close notify".
+%%
+%% The underlying socket is NOT closed.
+
+shutdown(TLS_Socket, Mode) ->
+    shutdown(TLS_Socket, Mode, infinity).
+
+%% @spec (TLS_Socket, Mode, Timeout) -> Socket_Desc
+%%     TLS_Socket = tls_socket()
+%%     Mode = unidirectional | bidirectional
+%%     Timeout = infinity | integer()
+%%     Socket_Desc = {Mod, Socket}
+%% @doc Shutdown the TLS session.
+%%
+%% For bidirectional shutdown, the peer must send his "close notify" within
+%% `Timeout' milliseconds.
+%%
+%% If the peer doesn't send its "close notify" or if the underlying socket
+%% is closed, the function still succeeds.
+%%
+%% The underlying socket is NOT closed by this function.
+
+shutdown(#tls_socket{socket = Socket_Desc, port = Port} = TLS_Socket,
+	 Mode, Timeout) ->
+    %% Start/continue the shutdown process.
+    case engine_shutdown(Port) of
+        want_read when Mode == bidirectional ->
+	    %% Wait for a packet from the client.
+            case exmpp_internals:gen_recv(Socket_Desc, Timeout) of
+                {ok, Packet} ->
+                    engine_set_encrypted_input(Port, Packet),
+		    %% Recurse!
+                    shutdown(TLS_Socket);
+                {error, timeout} ->
+		    %% The peer didn't send its "close notify".
+		    %% XXX Should this be treated as an error (the caller
+		    %% asked for a bidirectional shutdown)?
+                    exmpp_internals:close_port(Port),
+                    Socket_Desc;
+                {error, closed} ->
+		    %% The peer closed the underlying socket.
+		    %% XXX Should this be treated as an error (the purpose
+		    %% was not to close the socket)?
+                    exmpp_internals:close_port(Port),
+                    Socket_Desc;
+                {error, Reason} ->
+                    throw({tls, shutdown, underlying_recv, Reason})
+            end;
+        want_write ->
+	    %% The "close notify" is ready to be sent.
+            New_Packet = engine_get_encrypted_output(Port),
+            case exmpp_internals:gen_send(Socket_Desc, New_Packet) of
+                ok ->
+		    %% Skip to the next step.
+                    shutdown(TLS_Socket);
+                {error, Reason} ->
+                    throw({tls, shutdown, underlying_send, Reason})
+            end;
+        _ ->
+	    %% The shutdown is complete (or unidirectionnal shutdown was
+	    %% prefered).
+            exmpp_internals:close_port(Port),
+            Socket_Desc
+    end.
+
+%% @spec (TLS_Socket) -> Socket_Desc
+%%     TLS_Socket = tls_socket()
+%%     Socket_Desc = {Mod, Socket}
+%% @doc Flag the TLS session as down but do not exchange "close notify".
+%%
+%% The underlying socket is NOT closed.
+
+quiet_shutdown(#tls_socket{socket = Socket_Desc, port = Port}) ->
+    engine_quiet_shutdown(Port),
+    exmpp_internals:close_port(Port),
+    Socket_Desc.
+
+%% --------------------------------------------------------------------
+%% Handshake helpers.
+%% --------------------------------------------------------------------
+
+%% Choose the most appropriate engine.
+get_engine_from_args(Identity, _Peer_Verification, Options) ->
+    Engine_Name =
+	case get_engine_from_options(Options) of
+	    undefined ->
+		case get_engine_from_identity(Identity) of
+		    undefined ->
+			case get_engine_from_verification(Options) of
+			    undefined ->
+				throw({tls, options, no_engine_available,
+				       undefined});
+			    Name ->
+				Name
+			end;
+		    Name ->
+			Name
+		end;
+	    Name ->
+		case is_engine_available(Name) of
+		    true ->
+			Name;
+		    false ->
+			throw({tls, options, engine_unavailable, Name})
+		end
+	end,
+    get_engine_driver(Engine_Name).
+
+get_engine_from_options(Options) ->
+    proplists:get_value(engine, Options).
+
+get_engine_from_identity({Auth_Method, _, _}) ->
+    get_prefered_engine_name(Auth_Method).
+
+get_engine_from_verification(Options) ->
+    case proplists:get_value(trusted_certs, Options) of
+        undefined   -> undefined;
+        Auth_Method -> get_prefered_engine_name(Auth_Method)
+    end.
+
+check_identity(Identity, Mode) ->
+    case Identity of
+        {AM, Cert, PK} when is_atom(AM), is_list(Cert), is_list(PK) ->
+            case io_lib:deep_char_list(Cert) of
+                false -> throw({tls, handshake, invalid_certificate, Cert});
+                _     -> ok
+            end,
+            case io_lib:deep_char_list(PK) of
+                false -> throw({tls, handshake, invalid_private_key, PK});
+                _     -> ok
+            end;
+        undefined when Mode == client ->
+            ok;
+        undefined when Mode == server ->
+            throw({tls, handshake, identity_mandatory, Identity});
+        _ ->
+            throw({tls, handshake, invalid_identity, Identity})
+    end.
+
+check_peer_verification(Peer_Verif, _Mode) ->
+    case Peer_Verif of
+        true ->
+            ok;
+        false ->
+            ok;
+        E when is_list(E) ->
+            case io_lib:deep_char_list(E) of
+                false -> throw({tls, handshake, invalid_peer_verification, E});
+                _     -> ok
+            end;
+        _ ->
+            throw({tls, handshake, invalid_peer_verification, Peer_Verif})
+    end.
+
+%% --------------------------------------------------------------------
+%% Common socket API.
+%% --------------------------------------------------------------------
+
+%% @spec (TLS_Socket, Orig_Packet) -> ok | {error, Reason}
+%%     TLS_Socket = tls_socket()
+%%     Orig_Packet = binary() | list()
+%%     Reason = term()
+%% @doc Send `Orig_Packet' over a TLS-protected connection.
+
+send(#tls_socket{socket = Socket_Desc, port = Port}, Packet) ->
+    try
+        engine_set_decrypted_output(Port, Packet),
+        Encrypted = engine_get_encrypted_output(Port),
+        exmpp_internals:gen_send(Socket_Desc, Encrypted)
+    catch
+        Exception ->
+            {error, Exception}
+    end.
+
+%% @spec (TLS_Socket) -> {ok, Orig_Packet} | {error, Reason}
+%%     TLS_Socket = tls_socket()
+%%     Orig_Packet = binary() | list()
+%%     Reason = term()
+%% @doc Receive data over a TLS-protected connection.
+
+recv(TLS_Socket) ->
+    recv(TLS_Socket, infinity).
+
+%% @spec (TLS_Socket, Timeout) -> {ok, Orig_Packet} | {error, Reason}
+%%     TLS_Socket = tls_socket()
+%%     Timeout = integer()
+%%     Orig_Packet = binary() | list()
+%%     Reason = term()
+%% @doc Receive data over a TLS-protected connection.
+
+recv(#tls_socket{socket = Socket_Desc, port = Port} = TLS_Socket, Timeout) ->
+    try
+        case recv_common(TLS_Socket) of
+            want_read ->
+		%% Ok, we need more data.
+                {Recv, New_Timeout} =
+		    case Timeout of
+			infinity ->
+			    {
+			  exmpp_internals:gen_recv(Socket_Desc, Timeout),
+			  Timeout
+			 };
+			_ ->
+			    {Elapsed, Ret} = timer:tc(exmpp_internals, gen_recv,
+						      [Socket_Desc, Timeout]),
+			    {Ret, Timeout - Elapsed div 1000}
+		    end,
+                case Recv of
+                    {ok, Packet} ->
+                        engine_set_encrypted_input(Port, Packet),
+			%% Try to decipher it.
+                        recv(TLS_Socket, New_Timeout);
+                    {error, Reason} ->
+                        {error, Reason}
+                end;
+            Data ->
+		%% Got a chunk of plain-text data.
+                {ok, Data}
+        end
+    catch
+        Exception ->
+            {error, Exception}
+    end.
+
+%% @spec (TLS_Socket, Packet) -> {ok, Orig_Packet} | {error, Reason}
+%%     TLS_Socket = tls_socket()
+%%     Packet = binary() | list()
+%%     Orig_Packet = binary() | list()
+%%     Reason = term()
+%% @doc Decrypt already received data.
+%%
+%% This function won't read anything from the underlying socket but WILL
+%% write to it.
+
+recv_data(#tls_socket{port = Port, packet_mode = Packet_Mode} = TLS_Socket,
+	  Packet) ->
+    try
+	%% Give available encrypted data to the port driver.
+        engine_set_encrypted_input(Port, Packet),
+	%% Ask for available unencrypted data.
+        case recv_common(TLS_Socket) of
+            want_read when Packet_Mode == binary -> {ok, <<>>};
+            want_read when Packet_Mode == list   -> {ok, ""};
+            Data                                 -> {ok, Data}
+        end
+    catch
+        Exception ->
+            {error, Exception}
+    end.
+
+recv_common(#tls_socket{socket = Socket_Desc, port = Port,
+			packet_mode = Packet_Mode}) ->
+    %% Ask for available unencrypted data.
+    case engine_get_decrypted_input(Port) of
+        want_read ->
+	    %% Nothing is ready yet.
+            want_read;
+        Data ->
+	    %% Got a chunk of plain-text data.
+            Ack = engine_get_encrypted_output(Port),
+            case exmpp_internals:gen_send(Socket_Desc, Ack) of
+                ok ->
+                    case Packet_Mode of
+                        binary -> Data;
+                        list   -> binary_to_list(Data)
+                    end;
+                {error, Reason} ->
+                    {error, Reason}
+            end
+    end.
+
+%% @spec (TLS_Socket, Options) -> {ok, Option_Values} | {error, posix()}
+%%     TLS_Socket = tls_socket()
+%%     Mod = atom()
+%%     Socket = term()
+%%     Options = list()
+%%     Option_Values = list()
+%% @doc Gets one or more options for a socket.
+
+getopts(#tls_socket{socket = Socket_Desc}, Options) ->
+    exmpp_internals:gen_getopts(Socket_Desc, Options).
+
+%% @spec (TLS_Socket, Options) -> ok | {error, posix()}
+%%     TLS_Socket = tls_socket()
+%%     Mod = atom()
+%%     Socket = term()
+%%     Options = list()
+%% @doc Sets one or more options for a socket.
+
+setopts(#tls_socket{socket = Socket_Desc}, Options) ->
+    exmpp_internals:gen_setopts(Socket_Desc, Options).
+
+%% @spec (TLS_Socket) -> {ok, {Address, Port}} | {error, posix()}
+%%     TLS_Socket = tls_socket()
+%%     Mod = atom()
+%%     Socket = term()
+%%     Address = ip_address()
+%%     Port = integer()
+%% @doc Returns the address and port for the other end of a connection.
+
+peername(#tls_socket{socket = Socket_Desc}) ->
+    exmpp_internals:gen_peername(Socket_Desc).
+
+%% @spec (TLS_Socket) -> {ok, {Address, Port}} | {error, posix()}
+%%     TLS_Socket = tls_socket()
+%%     Mod = atom()
+%%     Socket = term()
+%%     Address = ip_address()
+%%     Port = integer()
+%% @doc Returns the local address and port number for a socket.
+
+sockname(#tls_socket{socket = Socket_Desc}) ->
+    exmpp_internals:gen_sockname(Socket_Desc).
+
+%% @spec (TLS_Socket, Pid) -> ok | {error, Reason}
+%%     TLS_Socket = tls_socket()
+%%     Pid = pid()
+%%     Reason = term()
+%% @doc Change the controlling socket of the underlying socket.
+
+controlling_process(#tls_socket{socket = Socket_Desc}, Pid) ->
+    exmpp_internals:gen_controlling_process(Socket_Desc, Pid).
+
+%% @spec (TLS_Socket) -> ok | {error, Reason}
+%%     TLS_Socket = tls_socket()
+%%     Reason = term()
+%% @doc Shutdown the TLS session and close the underlying socket.
+
+close(#tls_socket{socket = Socket_Desc} = TLS_Socket) ->
+    try
+	%% First, shutdown the TLS session (unidirectional).
+        shutdown(TLS_Socket),
+	%% Close the underlying socket.
+        exmpp_internals:gen_close(Socket_Desc)
+    catch
+        Exception ->
+            {error, Exception}
+    end.
+
+%% @hidden
+
+port_revision(#tls_socket{port = Port}) ->
+    engine_port_revision(Port).
+
+%% --------------------------------------------------------------------
+%% Engine function wrappers.
+%% --------------------------------------------------------------------
+
+control(Port, Command, Data) ->
+    case port_control(Port, Command, Data) of
+        <<0, Result/binary>> -> Result;
+        <<1, Error/binary>>  -> {error, binary_to_term(Error)};
+        <<2>>                -> want_read;
+        <<3>>                -> want_write
+    end.
+
+engine_set_mode(Port, Mode) ->
+    Mode_ID = case Mode of
+		  server -> 1;
+		  client -> 2
+	      end,
+    case control(Port, ?COMMAND_SET_MODE, term_to_binary(Mode_ID)) of
+        {error, Reason} ->
+            throw({tls, handshake, set_mode_failure, Reason});
+        _ ->
+            ok
+    end.
+
+engine_set_identity(_Port, undefined) ->
+    ok;
+engine_set_identity(Port, Identity) ->
+    case control(Port, ?COMMAND_SET_IDENTITY, term_to_binary(Identity)) of
+        {error, Reason} ->
+            throw({tls, handshake, set_identity_failure, Reason});
+        _ ->
+            ok
+    end.
+
+engine_set_peer_verification(Port, Peer_Verif) ->
+    case control(Port, ?COMMAND_SET_PEER_VERIF, term_to_binary(Peer_Verif)) of
+        {error, Reason} ->
+            throw({tls, handshake, set_peer_verification, Reason});
+        _ ->
+            ok
+    end.
+
+engine_set_trusted_certs(_Port, undefined) ->
+    ok;
+engine_set_trusted_certs(Port, Trusted_Certs) ->
+    case control(Port, ?COMMAND_SET_TRUSTED_CERTS,
+		 term_to_binary(Trusted_Certs)) of
+        {error, Reason} ->
+            throw({tls, handshake, set_trusted_certs, Reason});
+        _ ->
+            ok
+    end.
+
+engine_set_options(Port, Option, Flag) ->
+    case control(Port, ?COMMAND_SET_OPTIONS,
+		 term_to_binary({Option, Flag})) of
+        {error, Reason} ->
+            throw({tls, handshake, set_options, {Option, Reason}});
+        _ ->
+            ok
+    end.
+
+engine_prepare_handshake(Port) ->
+    case control(Port, ?COMMAND_PREPARE_HANDSHAKE, <<>>) of
+        {error, Reason} ->
+            throw({tls, handshake, prepare_handshake, Reason});
+        _ ->
+            ok
+    end.
+
+engine_handshake(Port) ->
+    case control(Port, ?COMMAND_HANDSHAKE, <<>>) of
+        {error, Reason} ->
+            throw({tls, handshake, do_handshake, Reason});
+        <<>> ->
+            ok;
+        Result ->
+            Result
+    end.
+
+engine_set_encrypted_input(Port, Data) when is_list(Data) ->
+    engine_set_encrypted_input(Port, list_to_binary(Data));
+engine_set_encrypted_input(Port, Data) ->
+    case control(Port, ?COMMAND_SET_ENCRYPTED_INPUT, Data) of
+        {error, Reason} ->
+            throw({tls, recv, set_encrypted_input, Reason});
+        _ ->
+            ok
+    end.
+
+engine_get_decrypted_input(Port) ->
+    case control(Port, ?COMMAND_GET_DECRYPTED_INPUT, term_to_binary(0)) of
+        {error, Reason} ->
+            throw({tls, recv, get_decrypted_input, Reason});
+        Result ->
+            Result
+    end.
+
+engine_set_decrypted_output(Port, Data) when is_list(Data) ->
+    engine_set_decrypted_output(Port, list_to_binary(Data));
+engine_set_decrypted_output(Port, Data) ->
+    case control(Port, ?COMMAND_SET_DECRYPTED_OUTPUT, Data) of
+        {error, Reason} ->
+            throw({tls, send, set_decrypted_output, Reason});
+        _ ->
+            ok
+    end.
+
+engine_get_encrypted_output(Port) ->
+    case control(Port, ?COMMAND_GET_ENCRYPTED_OUTPUT, <<>>) of
+        {error, Reason} ->
+            throw({tls, send, get_encrypted_output, Reason});
+        Result ->
+            Result
+    end.
+
+engine_get_peer_certificate(Port) ->
+    case control(Port, ?COMMAND_GET_PEER_CERTIFICATE, <<>>) of
+        {error, no_certificate} ->
+            undefined;
+        {error, Reason} ->
+            throw({tls, get_peer_certificate, get_peer_certificate_failed,
+		   Reason});
+        Result ->
+            Result
+    end.
+
+engine_get_verify_result(Port) ->
+    case control(Port, ?COMMAND_GET_VERIFY_RESULT, <<>>) of
+        {error, Reason} ->
+            throw({tls, get_verify_result, get_verify_result_failed,
+		   Reason});
+        Result ->
+            binary_to_term(Result)
+    end.
+
+engine_shutdown(Port) ->
+    case control(Port, ?COMMAND_SHUTDOWN, <<>>) of
+        {error, Reason} ->
+            throw({tls, shutdown, shutdown_failed, Reason});
+        <<>> ->
+            ok;
+        Result ->
+            Result
+    end.
+
+engine_quiet_shutdown(Port) ->
+    case control(Port, ?COMMAND_QUIET_SHUTDOWN, <<>>) of
+        {error, Reason} ->
+            throw({tls, quiet_shutdown, shutdown_failed, Reason});
+        _ ->
+            ok
+    end.
+
+engine_port_revision(Port) ->
+    case control(Port, ?COMMAND_PORT_REVISION, <<>>) of
+        {error, Reason} ->
+            throw({tls, port_revision, port_revision, Reason});
+        Revision ->
+            binary_to_term(Revision)
+    end.
+
+%% --------------------------------------------------------------------
+%% gen_server(3erl) callbacks.
+%% --------------------------------------------------------------------
+
+%% @hidden
+
+init([]) ->
+    Engines = dict:new(),
+    By_AM = dict:new(),
+    {ok, #state{engines = Engines, by_auth_method = By_AM}}.
+
+%% @hidden
+
+handle_call({register_engine,
+	     #tls_engine{name = Name,
+			 auth_methods = Auth_Methods,
+			 driver_path = Driver_Path,
+			 driver = Driver_Name} = Engine},
+	    _From,
+	    #state{engines = Engines, by_auth_method = By_AM} = State) ->
+    try
+	%% Load the driver now.
+        case Driver_Path of
+            undefined ->
+                exmpp_internals:load_driver(Driver_Name);
+            _ ->
+                exmpp_internals:load_driver(Driver_Name, [Driver_Path])
+        end,
+	%% Add engine to the global list.
+        New_Engines = dict:store(Name, Engine, Engines),
+	%% Index engine by its auth methods.
+        Fun = fun({AM, Prio}, {E, AM_Dict}) ->
+		      New_AM_Dict =
+			  case dict:is_key(AM, AM_Dict) of
+			      true ->
+				  L = [{E, Prio} | dict:fetch(AM, AM_Dict)],
+				  New_L = lists:keysort(2, L),
+				  dict:store(AM, New_L, AM_Dict);
+			      false ->
+				  dict:store(AM, [{E, Prio}], AM_Dict)
+			  end,
+		      {E, New_AM_Dict}
+	      end,
+        {_, New_By_AM} = lists:foldl(Fun, {Engine, By_AM}, Auth_Methods),
+        {reply, ok, State#state{
+		      engines = New_Engines,
+		      by_auth_method = New_By_AM
+		     }}
+    catch
+        _:Exception ->
+            {reply, {error, Exception}, State}
+    end;
+
+handle_call(get_auth_methods, _From,
+	    #state{by_auth_method = By_AM} = State) ->
+    {reply, dict:fetch_keys(By_AM), State};
+
+handle_call(get_engine_names, _From,
+	    #state{engines = Engines} = State) ->
+    {reply, dict:fetch_keys(Engines), State};
+
+handle_call({get_engines, AM}, _From,
+	    #state{by_auth_method = By_AM} = State) ->
+    case dict:is_key(AM, By_AM) of
+        true  -> {reply, [E || {E, _P} <- dict:fetch(AM, By_AM)], State};
+        false -> {reply, [], State}
+    end;
+
+handle_call({get_engine, Engine_Name}, _From,
+	    #state{engines = Engines} = State) ->
+    case dict:is_key(Engine_Name, Engines) of
+        true  -> {reply, dict:fetch(Engine_Name, Engines), State};
+        false -> {reply, undefined, State}
+    end;
+
+handle_call(Request, From, State) ->
+    error_logger:info_msg("~p:handle_call/3:~n- Request: ~p~n- From: ~p~n"
+			  "- State: ~p~n", [?MODULE, Request, From, State]),
+    {reply, ok, State}.
+
+%% @hidden
+
+handle_cast(Request, State) ->
+    error_logger:info_msg("~p:handle_cast/2:~n- Request: ~p~n"
+			  "- State: ~p~n", [?MODULE, Request, State]),
+    {noreply, State}.
+
+%% @hidden
+
+handle_info(Info, State) ->
+    error_logger:info_msg("~p:handle_info/2:~n- Info: ~p~n"
+			  "- State: ~p~n", [?MODULE, Info, State]),
+    {noreply, State}.
+
+%% @hidden
+
+code_change(Old_Vsn, State, Extra) ->
+    error_logger:info_msg("~p:code_change/3:~n- Old_Vsn: ~p~n- Extra: ~p~n"
+			  "- State: ~p~n", [?MODULE, Old_Vsn, Extra, State]),
+    {ok, State}.
+
+%% @hidden
+
+terminate(_Reason, _State) ->
+    ok.
+
+%% --------------------------------------------------------------------
+%% Documentation / type definitions.
+%% --------------------------------------------------------------------
+
+%% @type tls_socket().
+%% TLS socket obtained with {@link connect/4} or {@link accept/4}.
diff -r d551623afde5 deps/exmpp/src/core/exmpp_utils.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/core/exmpp_utils.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,187 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sebastien Pedron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> provides functions which
+%% doesn't deserve a dedicated module.
+
+-module(exmpp_utils).
+
+%% Binary and string helpers.
+-export([
+	 any_to_list/1,
+	 any_to_binary/1,
+	 strip/1,
+	 strip/2
+	]).
+
+%% Utils.
+-export([
+	 random_id/0,
+	 random_id/1
+	]).
+
+%% --------------------------------------------------------------------
+%% Binary and string helpers.
+%% --------------------------------------------------------------------
+
+%% @spec (Any) -> String
+%%     Any = binary() | string() | atom() | integer()
+%%     String = string()
+%% @doc Convert any type to its `string()' form.
+%%
+%% For an atom, {@link erlang:atom_to_list/1} is used. For an integer,
+%% {@link erlang:integer_to_list/1} is used. For a binary, {@link
+%% erlang:binary_to_list/1} is used. A string is returned as is.
+
+-spec(any_to_list/1 ::
+      (binary() | string() | integer() | atom()) -> string()).
+
+any_to_list(Atom) when is_atom(Atom) ->
+    atom_to_list(Atom);
+any_to_list(Integer) when is_integer(Integer) ->
+    integer_to_list(Integer);
+
+any_to_list(String) when is_list(String) ->
+    String;
+any_to_list(Binary) when is_binary(Binary) ->
+    binary_to_list(Binary).
+
+%% @spec (Any) -> Binary
+%%     Any = binary() | string() | atom() | integer()
+%%     Binary = binary()
+%% @doc Convert any type to its `binary()' form.
+%%
+%% For an atom, {@link erlang:atom_to_list/1} is used. For an integer,
+%% {@link erlang:integer_to_list/1} is used. For a string, {@link
+%% erlang:list_to_binary/1} is used. A binary is returned as is.
+
+-spec(any_to_binary/1 ::
+      (binary() | string() | integer() | atom()) -> binary()).
+
+any_to_binary(Atom) when is_atom(Atom) ->
+    any_to_binary(atom_to_list(Atom));
+any_to_binary(Integer) when is_integer(Integer) ->
+    any_to_binary(integer_to_list(Integer));
+
+any_to_binary(String) when is_list(String) ->
+    list_to_binary(String);
+any_to_binary(Binary) when is_binary(Binary) ->
+    Binary.
+
+%% @spec strip(Stream) -> Stripped
+%%     Stream = binary() | string()
+%%     Stripped = binary() | string()
+%% @doc Strip leading and trailing blanks.
+%%
+%% @see strip/3.
+
+-spec(strip/1 ::
+      (binary()) -> binary();
+      (string()) -> string()
+		       ).
+
+strip(Stream) ->
+    strip(Stream, both).
+
+%% @spec strip(Stream, Direction) -> Stripped
+%%     Stream = binary() | string()
+%%     Direction = left | right | both
+%%     Stripped = binary() | string()
+%% @doc Strip leading and/or trailing blanks, depending on the `Direction'.
+%%
+%% Blanks characters are `\s', `\t', `\n' and `\r'.
+%%
+%% The binary version was made by Christopher Faulet in his
+%% <a href="http://www.capflam.org/?p=9">stream module</a>.
+%%
+%% @see strip/3.
+
+-spec(strip/2 ::
+      (binary(), left | right | both) -> binary();
+      (string(), left | right | both) -> string()
+					    ).
+
+strip(Stream, left) ->
+    strip_left(Stream);
+strip(Stream, right) ->
+    strip_right(Stream);
+strip(Stream, both) ->
+    strip_right(strip_left(Stream)).
+
+strip_left(<<C:8, Rest/binary>>) when C == $\s; C == $\t; C == $\n; C == $\r ->
+    strip_left(Rest);
+strip_left([C | Rest]) when C == $\s; C == $\t; C == $\n; C == $\r ->
+    strip_left(Rest);
+strip_left(Stripped) ->
+    Stripped.
+
+strip_right(<<C:8, Rest/binary>>) when C == $\s; C == $\t; C == $\n; C == $\r ->
+    case strip_right(Rest) of
+        <<>> -> <<>>;
+        T    -> <<C:8, T/binary>>
+		    end;
+strip_right(<<C:8, Rest/binary>>) ->
+    T = strip_right(Rest),
+    <<C:8, T/binary>>;
+strip_right(<<>>) ->
+    <<>>;
+strip_right([C | Rest]) when C == $\s; C == $\t; C == $\n; C == $\r ->
+    case strip_right(Rest) of
+        [] -> [];
+        T  -> [C | T]
+    end;
+strip_right([C | Rest]) ->
+    [C | strip_right(Rest)];
+strip_right([]) ->
+    [].
+
+%% --------------------------------------------------------------------
+%% Utils.
+%% --------------------------------------------------------------------
+
+%% @spec () -> ID
+%%     ID = string()
+%% @doc Generate a random ID.
+%%
+%% Use the `exmpp' prefix.
+%%
+%% @see random_id/1.
+
+-spec(random_id/0 :: () -> string()).
+
+random_id() ->
+    random_id("exmpp").
+
+%% @spec (Prefix) -> ID
+%%     Prefix = string()
+%%     ID = string()
+%% @doc Generate a random stanza ID.
+%%
+%% This function uses {@link random:uniform/1}. It's up to the caller to
+%% seed the generator.
+%%
+%% The ID is not guaranted to be unique.
+
+-spec(random_id/1 :: (string() | undefined) -> string()).
+
+random_id(undefined) ->
+    integer_to_list(random:uniform(65536 * 65536));
+random_id("") ->
+    random_id(undefined);
+random_id(Prefix) when is_atom(Prefix) ->
+    random_id(atom_to_list(Prefix));
+random_id(Prefix) when is_list(Prefix) ->
+    Prefix ++ "-" ++ random_id(undefined).
diff -r d551623afde5 deps/exmpp/src/core/exmpp_xml.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/core/exmpp_xml.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,4315 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> is an XML parser based on Expat.
+%%
+%% <p>
+%% It provides a set of functions to prepare a tree of the elements from
+%% an XML stream or an XML document. To ease the handling of the tree
+%% produced by the parsing, it also export functions to access each
+%% parts of an element.
+%% </p>
+%%
+%% <p>
+%% Namespace support is fully tested and is now ready for production use.
+%% </p>
+%%
+%% <p>
+%% A backward compatible layer, built on top of this module, is provided
+%% by {@link xml}.
+%% </p>
+
+-module(exmpp_xml).
+
+-behaviour(gen_server).
+
+-include("exmpp.hrl").
+-include("internal/exmpp_known_nss.hrl").
+-include("internal/exmpp_known_elems.hrl").
+-include("internal/exmpp_known_attrs.hrl").
+
+%% Initialization.
+-export([
+	 start/0,
+	 start_link/0
+	]).
+
+%% Registry handling.
+-export([
+	 register_engine/2,
+	 register_engine/3,
+	 get_engine_names/0,
+	 is_engine_available/1,
+	 get_engine_driver/1
+	]).
+
+%% Parser.
+-export([
+	 start_parser/0,
+	 start_parser/1,
+	 reset_parser/1,
+	 reset_parser/2,
+	 stop_parser/1,
+	 add_known_nss/2,
+	 add_known_elems/2,
+	 add_known_attrs/2,
+	 parse/2,
+	 parse_final/2,
+	 parse_document/1,
+	 parse_document/2,
+	 parse_document_fragment/1,
+	 parse_document_fragment/2,
+	 port_revision/1
+	]).
+
+%% Namespace handling.
+-export([
+	 is_ns_declared_here/2,
+	 declare_ns_here/3,
+	 get_ns_as_list/1,
+	 get_ns_as_atom/1
+	]).
+
+%% Attribute handling.
+-export([
+	 attribute_matches/2,
+	 attribute_matches/3,
+	 attribute/2,
+	 attribute/3,
+	 get_attribute_node_from_list/2,
+	 get_attribute_node_from_list/3,
+	 get_attribute_node/2,
+	 get_attribute_node/3,
+	 get_attribute_from_list/3,
+	 get_attribute_from_list/4,
+	 get_attribute/3,
+	 get_attribute/4,
+	 get_attribute_from_list_as_list/3,
+	 get_attribute_from_list_as_list/4,
+	 get_attribute_as_list/3,
+	 get_attribute_as_list/4,
+	 get_attribute_from_list_as_binary/3,
+	 get_attribute_from_list_as_binary/4,
+	 get_attribute_as_binary/3,
+	 get_attribute_as_binary/4,
+	 set_attribute_in_list/2,
+	 set_attribute_in_list/3,
+	 set_attribute_in_list/4,
+	 set_attribute/2,
+	 set_attribute/3,
+	 set_attribute/4,
+	 set_attributes/2,
+	 has_attribute_in_list/2,
+	 has_attribute_in_list/3,
+	 has_attribute/2,
+	 has_attribute/3,
+	 remove_attribute_from_list/2,
+	 remove_attribute_from_list/3,
+	 remove_attribute/2,
+	 remove_attribute/3
+	]).
+
+%% Element handling.
+-export([
+	 get_name_as_list/1,
+	 get_name_as_atom/1,
+	 element_matches/2,
+	 element_matches/3,
+	 element_matches_by_ns/2,
+	 element/1,
+	 element/2,
+	 element/4,
+	 get_element/2,
+	 get_element/3,
+	 get_elements/3,
+	 get_elements/2,
+	 get_element_by_ns/2,
+	 has_element/2,
+	 has_element/3,
+	 has_element_by_ns/2,
+	 get_child_elements/1,
+	 remove_element/2,
+	 remove_element/3,
+	 remove_element_by_ns/2,
+	 remove_elements/2,
+	 remove_elements/3,
+	 remove_elements_by_ns/2
+	]).
+-export([
+	 prepend_child/2,
+	 prepend_children/2,
+	 append_child/2,
+	 append_children/2,
+	 replace_child/3,
+	 set_children/2,
+	 filter/2,
+	 fold/3,
+	 foreach/2,
+	 map/2
+	]).
+
+%% Character data handling.
+-export([
+	 cdata/1,
+	 get_cdata_from_list/1,
+	 get_cdata_from_list_as_list/1,
+	 get_cdata/1,
+	 get_cdata_as_list/1,
+	 normalize_cdata_in_list/1,
+	 normalize_cdata/1,
+	 set_cdata_in_list/2,
+	 set_cdata/2,
+	 append_cdata_to_list/2,
+	 append_cdata/2,
+	 remove_cdata_from_list/1,
+	 remove_cdata/1,
+	 is_whitespace/1,
+	 remove_whitespaces_from_list/1,
+	 remove_whitespaces/1,
+	 remove_whitespaces_deeply/1
+	]).
+
+%% Misc. functions on the whole XML tree.
+-export([
+	 get_path/2,
+	 xmlel_to_xmlelement/1,
+	 xmlel_to_xmlelement/3,
+	 xmlelement_to_xmlel/1,
+	 xmlelement_to_xmlel/3,
+	 xmlelement_to_xmlel_and_nss_tables/3,
+	 node_to_list/3,
+	 document_to_list/1,
+	 node_to_binary/3,
+	 document_to_binary/1,
+	 node_to_iolist/3,
+	 document_to_iolist/1,
+	 deindent_document/1,
+	 indent_document/2,
+	 indent_document/3,
+	 clear_endtag_tuples/1,
+	 escape_using_entities/1,
+	 escape_using_cdata/1,
+	 internal_escaping_function_name/0
+	]).
+
+%% gen_server(3erl) callbacks.
+-export([
+	 init/1,
+	 handle_call/3,
+	 handle_cast/2,
+	 handle_info/2,
+	 terminate/2,
+	 code_change/3
+	]).
+
+%% --------------------------------------------------------------------
+%% Constants and macros.
+%% --------------------------------------------------------------------
+
+-define(SERVER, ?MODULE).
+-define(ENGINES_REGISTRY, exmpp_xml_engines_registry).
+-define(DEFAULT_ENGINE, expat).
+
+-define(COMMAND_ADD_KNOWN_NSS,     1).
+-define(COMMAND_ADD_KNOWN_ELEMS,   2).
+-define(COMMAND_ADD_KNOWN_ATTRS,   3).
+-define(COMMAND_SET_MAX_SIZE,      4).
+-define(COMMAND_SET_ROOT_DEPTH,    5).
+-define(COMMAND_SET_NAMES_AS_ATOM, 6).
+-define(COMMAND_SET_CHECK_NSS,     7).
+-define(COMMAND_SET_CHECK_ELEMS,   8).
+-define(COMMAND_SET_CHECK_ATTRS,   9).
+-define(COMMAND_SET_EMIT_ENDTAG,  10).
+-define(COMMAND_PARSE,            11).
+-define(COMMAND_PARSE_FINAL,      12).
+-define(COMMAND_RESET_PARSER,     13).
+-define(COMMAND_PORT_REVISION,    14).
+
+-define(DEFAULT_PARSER_OPTIONS, [
+				 {max_size, infinity},
+				 {root_depth, 0},
+				 {names_as_atom, true},
+				 {emit_endtag, false}
+				]).
+
+-define(PREFIXED_NAME(P, N), P ++ ":" ++ N).
+
+-ifdef(ESCAPE_USING_CDATA_SECTIONS).
+-define(ESCAPE(CData), escape_using_cdata(CData)).
+-else.
+-define(ESCAPE(CData), escape_using_entities(CData)).
+-endif.
+
+-define(IMPLICIT_PREFIXED_NS, [
+			       {?NS_XML, ?NS_XML_pfx}
+			      ]).
+
+%% --------------------------------------------------------------------
+%% Documentation / type definitions.
+%% --------------------------------------------------------------------
+
+%% @type xmlparseroption() = Engine | Namespace_Option | Names_Format | Checks | Stanza_Max_Size | Root_Depth | Send_End_Element | Autoload_Known
+%%     Engine = {engine, atom()}
+%%     Stanza_Max_Size  = {max_size, infinity} | {max_size, Size}
+%%     Root_Depth = {root_depth, none} | {root_depth, Depth}
+%%     Name_Format = {names_as_atom, bool()}
+%%     Checks = NS_Check | Elems_Check | Attrs_Check
+%%       NS_Check = {check_nss, Known_List_Name | bool()}
+%%       Elems_Check = {check_elems, Known_List_Name | bool()}
+%%       Attrs_Check = {check_attrs, Known_List_Name | bool()}
+%%     Known_List_Name = atom()
+%%     Send_End_Element = {emit_endtag, bool()}.
+%% Options of the form `{Key, bool()}' can be specified as `Key'. See
+%% {@link proplists}.
+%%
+%% <br/><br/>
+%% The `engine' option allows one to choose the engine to use. Available
+%% engines list can be retrived with {@link get_engine_names/0}.
+%%
+%% <br/><br/>
+%% The `max_size' option limits the size in bytes of a stanza to avoid
+%% deny of service at the parser level. Actually, this limit is only
+%% verified against the length of the data provided and the counter is
+%% reset to zero when an element is found. The caveats is that if the
+%% limits is, eg., 15 and the data is `<foo></foo><bar></bar>', the
+%% parser will return an error because the whole chunk is 22 bytes,
+%% despite each stanza contains 11 bytes.
+%% TODO: Fix the max_size beahavior.
+%%
+%% <br/><br/>
+%% The `root_depth' option specicifies at which level the parser stops
+%% to split each node and start to produce trees. For example, if the
+%% root depth is 0, the parser will return a unique tree for the whole
+%% document. If the root depth is 1, then `<stream>' will produce an
+%% element without any children and `<presence>' will produce a tree
+%% with all its children. With `{root_depth, none}', no tree will be
+%% made, ie, each opening tag will produce an element without any
+%% children.
+%%
+%% <br/><br/>
+%% The `names_as_atom' option sets if element and attribute names should
+%% be encoded as an {@link atom()} or a {@link string()} respectively.
+%% "Should" because if names or attributes checks fail, a name will be
+%% encoded as a `string()' (see next option).
+%%
+%% <br/><br/>
+%% The `Checks' options enable or disable the control of a namespace,
+%% an element name or an attribute name if `names_as_atom' is set. If
+%% `false' is set, no check will be made. If a known list name is
+%% specified, the checks will be based on this list. If `true' is set,
+%% the previous selected known list will be used. The known list must
+%% exist already. This is to avoid atom() table pollution and overflow.
+%% If a check says that the verified string is known, it'll be encoded
+%% as an atom() in the tuple; otherwise it'll be encoded as a string().
+%% It's highly recommended to keep these checks enabled.
+%%
+%% <br/><br/>
+%% The `emit_endtag' option selects if the parser must produce {@link
+%% xmlendtag()} when it encouters an end tag above `root_depth'.
+
+-type(xmlparseroption() ::
+      {engine, atom()}                         |
+      {max_size, infinity | non_neg_integer()} |
+      {root_depth, none | non_neg_integer()}   |
+      {names_as_atom, bool()}                  | names_as_atom |
+      {check_nss, atom() | bool()}             | check_nss     |
+      {check_elems, atom() | bool()}           | check_elems   |
+      {check_attrs, atom() | bool()}           | check_attrs   |
+      {emit_endtag, bool()}                    | emit_endtag
+     ).
+
+%% @type xmlparser().
+%% Handler for the Expat parser, initialized with a call to {@link
+%% start_parser/0}.
+
+-record(xml_parser, {
+	  options = [] :: [xmlparseroption()],
+	  port         :: port()
+	 }).
+-type(xmlparser() :: #xml_parser{}).
+
+%% @type xmlel() = {xmlel, NS, Declared_NS, Name, Attrs, Children}
+%%     NS = atom() | string() | undefined
+%%     Declared_NS = [{NS, Prefix} | {NS, none}]
+%%     Name = atom() | string()
+%%     Attrs = [xmlattr()]
+%%     Children = [xmlel() | xmlcdata()] | undefined.
+%% Record representing an XML element (or only the opening tag).
+%%
+%% <br/><br/>
+%% Declared_NS lists all the namespaces declared in this element, even
+%% if they're not used by it.
+
+%% @type xmlattr() = {xmlattr, NS, Name, Value}
+%%     NS = atom() | string()
+%%     Name = atom() | string()
+%%     Value = binary().
+%% Represents an tag attribute.
+
+%% @type xmlcdata() = {xmlcdata, CData}
+%%     CData = binary().
+%% Record representing characters data inside an XML element.
+
+%% @type xmlendtag() = {xmlendtag, NS, Name}
+%%     NS = atom() | string()
+%%     Name = atom() | string().
+%% Record representing an XML end tag, for nodes above the configured
+%% `root_depth' (see {@link xmlparseroption()}).
+
+%% @type xmlel_old() = {xmlelement, Name, Attrs, Children}
+%%     Name = string()
+%%     Attrs = [xmlattr_old()]
+%%     Children = [xmlel_old() | xmlcdata()] | undefined.
+%% Record representing an XML tag.
+
+%% @type xmlattr_old() = {Name, Value}
+%%     Name = atom() | string()
+%%     Value = string().
+%% Represents an tag attribute.
+
+%% @type pathcomponent() = {element, Elem_Name} | {element, NS, Elem_Name} | {attribute, Attr_Name} | {attribute, NS, Attr_Name} | cdata | cdata_as_list
+%%     NS = atom() | string()
+%%     Elem_Name = atom() | string()
+%%     Attr_Name = atom() | string().
+%% Represents a path component. The `elem' tuple points to an XML
+%% element named `Elem_Name'. The `attr' tuple points to the value of
+%% the `Attr_Name' attribute. cdata asks for the character data of a
+%% node.
+
+%% Internal types.
+-record(state, {
+	  known_nss_lists,   % These are #dict{} but I have no idea how to write the
+	  known_elems_lists, % contract when the type isn't public (it's internal to
+	  known_attrs_lists  % the 'dict' module in stdlib).
+	 }).
+
+-record(xml_engine, {
+	  name        :: atom(),
+	  %% '_' is used in ETS requests
+	  driver_path :: string() | undefined | '_',
+	  %% but it is an invalid value
+	  driver      :: atom(),
+	  %% otherwise.
+	  port        :: port() | '_'
+	 }).
+
+%% --------------------------------------------------------------------
+%% Initialization.
+%% --------------------------------------------------------------------
+
+%% @hidden
+
+start() ->
+    Ret = gen_server:start({local, ?SERVER}, ?MODULE, [], []),
+    register_builtin_engines(),
+    load_builtin_known_lists(),
+    Ret.
+
+%% @hidden
+
+start_link() ->
+    Ret = gen_server:start_link({local, ?SERVER}, ?MODULE, [], []),
+    register_builtin_engines(),
+    load_builtin_known_lists(),
+    Ret.
+
+-ifdef(HAVE_EXPAT).
+-define(REGISTER_EXPAT,
+	register_builtin_engine(expat, exmpp_xml_expat)).
+-define(REGISTER_EXPAT_LEGACY,
+	register_builtin_engine(expat_legacy, exmpp_xml_expat_legacy)).
+-else.
+-define(REGISTER_EXPAT, ok).
+-define(REGISTER_EXPAT_LEGACY, ok).
+-endif.
+
+-ifdef(HAVE_LIBXML2).
+-define(REGISTER_LIBXML2,
+	register_builtin_engine(libxml2, exmpp_xml_libxml2)).
+-else.
+-define(REGISTER_LIBXML2, ok).
+-endif.
+
+register_builtin_engines() ->
+    ?REGISTER_EXPAT,
+    ?REGISTER_EXPAT_LEGACY,
+    ?REGISTER_LIBXML2,
+    ok.
+
+register_builtin_engine(Name, Driver) ->
+    try
+        register_engine(Name, Driver)
+    catch
+        throw:{port_driver, load, Reason, Driver_Name} ->
+            error_logger:warning_msg("Failed to load driver \"~s\": ~s~n",
+				     [Driver_Name, erl_ddll:format_error(Reason)])
+    end.
+
+load_builtin_known_lists() ->
+    [_ | Known_NSs] = lists:reverse(?XMPP_KNOWN_NSS),
+    [_ | Known_Elems] = lists:reverse(?XMPP_KNOWN_ELEMS),
+    [_ | Known_Attrs] = lists:reverse(?XMPP_KNOWN_ATTRS),
+    add_known_nss(xmpp, Known_NSs),
+    add_known_elems(xmpp, Known_Elems),
+    add_known_attrs(xmpp, Known_Attrs).
+
+%% --------------------------------------------------------------------
+%% Registry handling.
+%% --------------------------------------------------------------------
+
+%% @spec (Name, Driver) -> ok
+%%     Name = atom()
+%%     Driver = atom()
+%% @doc Add a new XML engine.
+
+-spec(register_engine/2 :: (atom(), atom()) -> ok).
+
+register_engine(Name, Driver) ->
+    register_engine(Name, undefined, Driver).
+
+%% @spec (Name, Driver_Path, Driver) -> ok
+%%     Name = atom()
+%%     Driver_Path = string() | undefined
+%%     Driver = atom()
+%% @doc Add a new XML engine.
+
+-spec(register_engine/3 :: (atom(), string() | undefined, atom()) -> ok).
+
+register_engine(Name, Driver_Path, Driver)
+  when is_atom(Name) ->
+    Engine = #xml_engine{
+      name = Name,
+      driver_path = Driver_Path,
+      driver = Driver
+     },
+    case gen_server:call(?SERVER, {register_engine, Engine}) of
+        ok                 -> ok;
+        {error, Exception} -> throw(Exception)
+    end.
+
+%% @spec () -> [Engine_Name]
+%%     Engine_Name = atom()
+%% @doc Return the list of XML engines.
+
+-spec(get_engine_names/0 :: () -> [atom()]).
+
+get_engine_names() ->
+    ets:safe_fixtable(?ENGINES_REGISTRY, true),
+    Keys = get_engine_names2(ets:first(?ENGINES_REGISTRY), []),
+    ets:safe_fixtable(?ENGINES_REGISTRY, false),
+    Keys.
+
+get_engine_names2('$end_of_table', Keys) ->
+    lists:reverse(Keys);
+get_engine_names2(Prev_Key, Keys) ->
+    get_engine_names2(ets:next(?ENGINES_REGISTRY, Prev_Key),
+		      [Prev_Key | Keys]).
+
+%% @spec (Engine_Name) -> bool()
+%%     Engine_Name = atom()
+%% @doc Tell if `Engine_Name' is available.
+
+-spec(is_engine_available/1 :: (atom()) -> bool()).
+
+is_engine_available(Engine_Name) ->
+    ets:member(?ENGINES_REGISTRY, Engine_Name).
+
+%% @spec (Engine_Name) -> Driver_Name
+%%     Engine_Name = atom()
+%%     Driver_Name = atom() | undefined
+%% @doc Return the port driver name associated to the given engine.
+
+-spec(get_engine_driver/1 :: (atom()) -> atom() | undefined).
+
+get_engine_driver(Engine_Name) ->
+    case ets:match(?ENGINES_REGISTRY,
+		   {xml_engine, Engine_Name, '_', '$1', '_'}) of
+        [[Engine_Driver]] ->
+            Engine_Driver;
+        _ ->
+            undefined
+    end.
+
+%% --------------------------------------------------------------------
+%% Global known lists.
+%% --------------------------------------------------------------------
+
+%% @spec (List_Name, List) -> ok
+%%     List_Name = atom()
+%%     List = [NS]
+%%     NS = atom()
+%% @doc Tell parsers that `NS_List' are known namespaces.
+%%
+%% If `check_nss' is enabled, all occurences of these namespaces will be
+%% represented as an atom().
+
+-spec(add_known_nss/2 :: (atom(), [atom()]) -> ok).
+
+add_known_nss(List_Name, List) ->
+    case gen_server:call(?SERVER, {add_known, nss, List_Name, List}) of
+        ok                 -> ok;
+        {error, Exception} -> throw(Exception)
+    end.
+
+%% @spec (List_Name, List) -> ok
+%%     List_Name = atom()
+%%     List = [Name]
+%%     Name = atom()
+%% @doc Tell parsers that `Names_List' are known element names.
+%%
+%% If `check_elems' is enabled, all occurences of these names will be
+%% represented as an atom().
+
+-spec(add_known_elems/2 :: (atom(), [atom()]) -> ok).
+
+add_known_elems(List_Name, List) ->
+    case gen_server:call(?SERVER, {add_known, names, List_Name, List}) of
+        ok                 -> ok;
+        {error, Exception} -> throw(Exception)
+    end.
+
+%% @spec (List_Name, List) -> ok
+%%     List_Name = atom()
+%%     List = [Attr]
+%%     Attr = atom()
+%% @doc Tell parsers that `Attr' are known element attributes.
+%%
+%% If `check_attrs' is enabled, all occurences of these attributes will
+%% be represented as an atom().
+
+-spec(add_known_attrs/2 :: (atom(), [atom()]) -> ok).
+
+add_known_attrs(List_Name, List) ->
+    case gen_server:call(?SERVER, {add_known, attrs, List_Name, List}) of
+        ok                 -> ok;
+        {error, Exception} -> throw(Exception)
+    end.
+
+%% --------------------------------------------------------------------
+%% Parsing functions (interface to the Expat port driver).
+%% --------------------------------------------------------------------
+
+%% @spec () -> Parser
+%%     Parser = xmlparser()
+%% @doc Initialize the Expat port driver with default options.
+%%
+%% Default options are:
+%% ```
+%% [
+%%   {max_size, infinity},
+%%   {root_depth, 0},
+%%   names_as_atom,
+%%   {emit_endtag, false}
+%% ].
+%% '''
+%%
+%% @see start_parser/1.
+%% @see xmlparseroption().
+
+-spec(start_parser/0 :: () -> xmlparser()).
+
+start_parser() ->
+    start_parser([]).
+
+%% @spec (Options) -> Parser
+%%     Options = [xmlparseroption()]
+%%     Parser = xmlparser()
+%% @throws {xml_parser, options, Reason, Infos}
+%% @doc Initialize the Expat port driver with given `Options'.
+%%
+%% You must call this function before any use of functions {@link
+%% parse/2} or {@link parse_final/2}. The returned `Parser' must be
+%% given as the first argument for those functions. When finished, you
+%% must free this parser with the {@link stop_parser/1}. Here is an
+%% example:
+%% ```
+%% fun() ->
+%%     Parser = xml:start_parser(),
+%%     xml:parse(Parser, "<stream version='1.0'><presence/></stream>"),
+%%     xml:stop_parser(Parser).
+%% '''
+
+-spec(start_parser/1 :: ([xmlparseroption()]) -> xmlparser()).
+
+start_parser(Options) ->
+    %% Start a port driver instance.
+    Driver_Name = get_engine_from_options(Options),
+    Port = exmpp_internals:open_port(Driver_Name),
+
+    %% Initialize port.
+    try
+	%% Check options.
+        Parser = #xml_parser{port = Port},
+        New_Options = merge_options(?DEFAULT_PARSER_OPTIONS, Options),
+        reset_parser2(Parser, New_Options)
+    catch
+        _:Exception ->
+            exmpp_internals:close_port(Port),
+            throw(Exception)
+    end.
+
+%% @spec (Parser) -> New_Parser
+%%     Parser = xmlparser()
+%% @doc Reset the parser with the same previous options.
+
+-spec(reset_parser/1 :: (xmlparser()) -> xmlparser()).
+
+reset_parser(Parser) ->
+    reset_parser(Parser, []).
+
+%% @spec (Parser, Options) -> New_Parser
+%%     Parser = xmlparser()
+%%     Options = [xmlparseroption()]
+%% @doc Reset the parser and update its options.
+
+-spec(reset_parser/2 :: (xmlparser(), [xmlparseroption()]) -> xmlparser()).
+
+reset_parser(#xml_parser{port = Port} = Parser, Options) ->
+    New_Options = merge_options(Parser#xml_parser.options, Options),
+    port_control(Port, ?COMMAND_RESET_PARSER, <<>>),
+    reset_parser2(Parser, New_Options).
+
+reset_parser2(Parser, Options) ->
+    case handle_options(Parser, Options) of
+        {error, Reason, Infos} ->
+            throw({xml_parser, options, Reason, Infos});
+        New_Parser ->
+            New_Parser
+    end.
+
+%% @spec (Parser) -> ok
+%%     Parser = xmlparser()
+%% @doc Stop the Expat port driver.
+%%
+%% This must be called when you are done with the `Parser' returned by
+%% {@link start_parser/0}.
+%%
+%% @see start_parser/0. `start_parser/0' for an example
+
+-spec(stop_parser/1 :: (xmlparser()) -> ok).
+
+stop_parser(#xml_parser{port = Port} = _Parser) ->
+    unlink(Port),
+    exmpp_internals:close_port(Port),
+    ok.
+
+%% @spec (Parser, Data) -> [XML_Element] | continue
+%%     Parser = xmlparser()
+%%     Data = string() | binary()
+%%     XML_Element = xmlel_old() | xmlel() | xmlendtag() | xmlcdata()
+%% @throws {xml_parser, parsing, Reason, Details}
+%% @doc Parse a chunk from an XML stream.
+%%
+%% This may be called multiple times with a new chunk of data. However
+%% the entire data must represent at most one and only one XML document.
+%% If you want to process the last chunk of data, you should call {@link
+%% parser_final/2}. If you can't know when the end of the document
+%% occurs, you may use this function to process data, then you call
+%% {@link parse_final/2} with an empty string. Here is an example:
+%% ```
+%% fun (Parser) ->
+%%     xml:parse(Parser, "<stream ver"),
+%%     xml:parse(Parser, "sion='1."),
+%%     xml:parse(Parser, "0'></stream>"),
+%%     xml:parser_final(Parser, "").
+%% '''
+
+-spec(parse/2 ::
+      (xmlparser(), binary() | string()) -> [xmlnode() | xmlendtag()] | continue).
+
+parse(Parser, Data) when is_list(Data) ->
+    parse(Parser, list_to_binary(Data));
+
+parse(#xml_parser{port = Port} = _Parser, Data) when is_binary(Data) ->
+    engine_parse(Port, Data).
+
+%% @spec (Parser, Data) -> [XML_Element] | done
+%%     Parser = xmlparser()
+%%     Data = string() | binary()
+%%     XML_Element = xmlel_old() | xmlel() | xmlendtag() | xmlcdata()
+%% @throws {xml_parser, parsing, Reason, Details}
+%% @doc Parse the last chunk from an XML stream.
+%%
+%% This is used when you know there won't be any more data to process.
+%% This last chunk must provide the end of the XML document or the
+%% parser will return an error. This function may also be used to
+%% process an entire XML document in one pass.
+%%
+%% @see parse/2. `parse/2' for an example
+
+-spec(parse_final/2 ::
+      (xmlparser(), binary() | string()) -> [xmlnode() | xmlendtag()] | done).
+
+parse_final(Parser, Data) when is_list(Data) ->
+    parse_final(Parser, list_to_binary(Data));
+
+parse_final(#xml_parser{port = Port} = _Parser, Data) when is_binary(Data) ->
+    engine_parse_final(Port, Data).
+
+%% @spec (Document) -> [XML_Element] | done
+%%     Document = string() | binary()
+%%     XML_Element = xmlel() | xmlel_old() | xmlendtag() | xmlcdata()
+%% @doc Parse an entire XML document at once.
+%%
+%% Initializing a parser with {@link start_parser/1} isn't necessary,
+%% this function will take care of it. It'll use default options; see
+%% {@link start_parser/1} for any related informations.
+
+-spec(parse_document/1 ::
+      (binary() | string()) -> [xmlnode() | xmlendtag()] | done).
+
+parse_document(Document) ->
+    parse_document(Document, []).
+
+%% @spec (Document, Parser_Options) -> [XML_Element] | done
+%%     Document = string() | binary()
+%%     Parser_Options = [xmlparseroption()]
+%%     XML_Element = xmlel() | xmlel_old() | xmlendtag() | xmlcdata()
+%% @doc Parse an entire XML document at once.
+%%
+%% Initializing a parser with {@link start_parser/1} isn't necessary,
+%% this function will take care of it. `Parser_Options' is passed to the
+%% parser; see {@link start_parser/1} for any related informations.
+%%
+%% Return values are the same as {@link parse_final/2}.
+
+-spec(parse_document/2 ::
+      (binary() | string(), [xmlparseroption()]) ->
+	     [xmlnode() | xmlendtag()] | done).
+
+parse_document(Document, Parser_Options) ->
+    Parser = start_parser(Parser_Options),
+    try
+        parse_final(Parser, Document)
+    catch
+        throw:Exception ->
+            throw(Exception)
+    after
+        stop_parser(Parser)
+    end.
+
+%% @spec (Fragment) -> [XML_Element] | continue
+%%     Fragment = string() | binary()
+%%     XML_Element = xmlel() | xmlel_old() | xmlendtag() | xmlcdata()
+%% @doc Parse a fragment of an XML document at once.
+%%
+%% This function is useful if you do not have a complete and valid XML
+%% document. For instance, something like this:
+%% ```
+%% <element>content</elem
+%% '''
+%%
+%% Initializing a parser with {@link start_parser/1} isn't necessary,
+%% this function will take care of it. It'll use default options, but
+%% will set `{root_depth, none}' (which can be overriden); see {@link
+%% start_parser/1} for any related informations.
+
+-spec(parse_document_fragment/1 ::
+      (binary() | string()) -> [xmlnode() | xmlendtag()] | continue).
+
+parse_document_fragment(Fragment) ->
+    parse_document_fragment(Fragment, []).
+
+%% @spec (Fragment, Parser_Options) -> [XML_Element] | continue
+%%     Fragment = string() | binary()
+%%     Parser_Options = [xmlparseroption()]
+%%     XML_Element = xmlel() | xmlel_old() | xmlendtag() | xmlcdata()
+%% @doc Parse a fragment of an XML document at once.
+%%
+%% This function is useful if you do not have a complete and valid XML
+%% document. For instance, something like this:
+%% ```
+%% <element>content</elem
+%% '''
+%%
+%% Initializing a parser with {@link start_parser/1} isn't necessary,
+%% this function will take care of it. `Parser_Options' is passed to the
+%% parser but `{root_depth, none}' is prepended (this can be overriden);
+%% see {@link start_parser/1} for any related informations.
+%%
+%% Return values are the same as {@link parse_final/2}.
+
+-spec(parse_document_fragment/2 ::
+      (binary() | string(), [xmlparseroption()]) ->
+	     [xmlnode() | xmlendtag()] | continue).
+
+parse_document_fragment(Fragment, Parser_Options) ->
+    Parser = start_parser([{root_depth, none} | Parser_Options]),
+    try
+        parse(Parser, Fragment)
+    catch
+        throw:Exception ->
+            throw(Exception)
+    after
+        stop_parser(Parser)
+    end.
+
+%% @hidden
+
+port_revision(#xml_parser{port = Port} = _Parser) ->
+    engine_port_revision(Port).
+
+%% --------------------------------------------------------------------
+%% Functions to handle namespaces in XML elements and attributes.
+%% --------------------------------------------------------------------
+
+%% @spec (XML_Element, NS) -> bool()
+%%     XML_Element = xmlel()
+%%     NS = atom() | string()
+%% @doc Tell if `NS' was declared within this element.
+%%
+%% @todo Like for elements and attributes, implement a more flexible
+%% matching (`string()' vs. `atom()').
+
+-spec(is_ns_declared_here/2 :: (xmlel(), xmlname()) -> bool()).
+
+is_ns_declared_here(#xmlel{declared_ns = Declared_NS}, NS) ->
+    lists:keymember(NS, 1, Declared_NS).
+
+%% @spec (XML_Element, NS, Prefix) -> New_XML_Element
+%%     XML_Element = xmlel()
+%%     NS = atom() | string()
+%%     Prefix = string() | none
+%%     New_XML_Element = xmlel()
+%% @doc Declare the given namespace in this element.
+%%
+%% @todo Like for elements and attributes, implement a more flexible
+%% matching (`string()' vs. `atom()').
+
+-spec(declare_ns_here/3 :: (xmlel(), xmlname(), string() | none) -> xmlel()).
+
+declare_ns_here(#xmlel{declared_ns = Declared_NS} = XML_Element,
+		NS, Prefix) ->
+    New_Declared_NS = lists:keystore(NS, 1,
+				     Declared_NS, {NS, Prefix}),
+    XML_Element#xmlel{declared_ns = New_Declared_NS}.
+
+%% @spec (XML_Element) -> NS | undefined
+%%     XML_Element = xmlel()
+%%     NS = string()
+%% @doc Return the namespace as a string, regardless of the original
+%% encoding.
+
+-spec(get_ns_as_list/1 :: (xmlel()) -> string() | undefined).
+
+get_ns_as_list(#xmlel{ns = undefined}) ->
+    undefined;
+get_ns_as_list(#xmlel{ns = NS}) ->
+    as_list(NS).
+
+as_list(V) when is_atom(V) -> atom_to_list(V);
+as_list(V) when is_list(V) -> V.
+
+%% @spec (XML_Element) -> NS | undefined
+%%     XML_Element = xmlel()
+%%     NS = atom()
+%% @doc Return the namespace as an atom, regardless of the original
+%% encoding.
+
+-spec(get_ns_as_atom/1 :: (xmlel()) -> atom() | undefined).
+
+get_ns_as_atom(#xmlel{ns = undefined}) ->
+    undefined;
+get_ns_as_atom(#xmlel{ns = NS}) ->
+    as_atom(NS).
+
+as_atom(V) when is_atom(V) -> V;
+as_atom(V) when is_list(V) -> list_to_atom(V).
+
+%% --------------------------------------------------------------------
+%% Functions to handle XML attributes (xmlattr() & xmlattr_old()).
+%% This is similar to the DOM interface but NOT compliant.
+%% --------------------------------------------------------------------
+
+%% @spec (Name, Value) -> Attr
+%%     Name = atom() | string()
+%%     Value = binary() | string() | atom() | integer()
+%%     Attr = xmlattr()
+%% @doc Create an XML attribute with the name `Name'.
+%%
+%% This is almost the same as:
+%% ```
+%% Attr = #xmlattr{name = Name, value = Value}.
+%% '''
+
+-spec(attribute/2 ::
+      (xmlname(), binary() | string() | atom() | integer()) ->
+	     xmlattr()).
+
+attribute(Name, Value) ->
+    set_attr_value(#xmlattr{name = Name}, Value).
+
+set_attr_value(#xmlattr{} = Attr, Value) ->
+    Attr#xmlattr{value = exmpp_utils:any_to_binary(Value)};
+set_attr_value({Name, _}, Value) ->
+    {Name, exmpp_utils:any_to_list(Value)}.
+
+%% @spec (NS, Name, Value) -> Attr
+%%     NS = atom() | string() | undefined
+%%     Name = atom() | string()
+%%     Value = binary() | string() | atom() | integer()
+%%     Attr = xmlattr()
+%% @doc Create an XML attribute with the name `Name' in the namespace `NS'.
+%%
+%% This is almost the same as:
+%% ```
+%% Attr = #xmlattr{ns = NS, name = Name, value = Value}.
+%% '''
+
+-spec(attribute/3 ::
+      (xmlname(), xmlname(), binary() | string() | atom() | integer()) ->
+	     xmlattr()).
+
+attribute(NS, Name, Value) ->
+    set_attr_value(#xmlattr{ns = NS, name = Name}, Value).
+
+%% @spec (Attr, Name) -> bool()
+%%     Attr = xmlattr() | xmlattr_old()
+%%     Name = atom() | string()
+%% @doc Tell if `Attr' is named `Name'.
+%%
+%% It takes care of comparison between string and atom.
+
+-spec(attribute_matches/2 :: (xmlattr_any(), xmlname()) -> bool()).
+
+attribute_matches(#xmlattr{name = Name}, Name) ->
+    true;
+attribute_matches({Name, _Value}, Name) ->
+    true;
+
+attribute_matches(#xmlattr{name = Name_A}, Name)
+  when is_atom(Name_A), is_list(Name) ->
+    Name_A == list_to_atom(Name);
+attribute_matches(#xmlattr{name = Name}, Name_A)
+  when is_atom(Name_A), is_list(Name) ->
+    Name_A == list_to_atom(Name);
+
+attribute_matches({Name_A, _Value}, Name)
+  when is_atom(Name_A), is_list(Name) ->
+    Name_A == list_to_atom(Name);
+attribute_matches({Name, _Value}, Name_A)
+  when is_atom(Name_A), is_list(Name) ->
+    Name_A == list_to_atom(Name);
+
+attribute_matches(_Attr, _Name) ->
+    false.
+
+%% @spec (Attr, NS, Name) -> bool()
+%%     Attr = xmlattr()
+%%     NS = atom() | string()
+%%     Name = atom() | string()
+%% @doc Tell if `Attr' has the namespace `NS' and is named `Name'.
+%%
+%% It takes care of comparison between string and atom.
+
+-spec(attribute_matches/3 ::
+      (xmlattr(), xmlname(), xmlname()) -> bool()).
+
+attribute_matches(#xmlattr{ns = NS, name = Name}, NS, Name) ->
+    true;
+
+attribute_matches(#xmlattr{ns = NS_A, name = Name_A}, NS, Name)
+  when is_atom(NS_A), is_list(NS), is_atom(Name_A), is_list(Name) ->
+    NS_A == list_to_atom(NS) andalso Name_A == list_to_atom(Name);
+attribute_matches(#xmlattr{ns = NS, name = Name}, NS_A, Name_A)
+  when is_atom(NS_A), is_list(NS), is_atom(Name_A), is_list(Name) ->
+    NS_A == list_to_atom(NS) andalso Name_A == list_to_atom(Name);
+
+attribute_matches(#xmlattr{ns = NS_A, name = Name}, NS, Name)
+  when is_atom(NS_A), is_list(NS) ->
+    NS_A == list_to_atom(NS);
+attribute_matches(#xmlattr{ns = NS, name = Name}, NS_A, Name)
+  when is_atom(NS_A), is_list(NS) ->
+    NS_A == list_to_atom(NS);
+
+attribute_matches(#xmlattr{ns = NS, name = Name_A}, NS, Name)
+  when is_atom(Name_A), is_list(Name) ->
+    Name_A == list_to_atom(Name);
+attribute_matches(#xmlattr{ns = NS, name = Name}, NS, Name_A)
+  when is_atom(Name_A), is_list(Name) ->
+    Name_A == list_to_atom(Name);
+
+attribute_matches(_Attr, _NS, _Name) ->
+    false.
+
+%% @spec (Attrs, Attr_Name) -> Attr | undefined
+%%     Attrs = [xmlattr()] | [xmlattr_old()]
+%%     Attr_Name = atom() | string()
+%%     Attr = xmlattr() | xmlattr_old()
+%% @doc Return the attribute named `Attr_Name' from the list.
+%%
+%% Return `undefined' if the attribute isn't found.
+
+%% XXX Dialyzer doesn't support this multiple-clause contract because
+%% both clauses take a list() as a first argument. So until it can look
+%% inside those list(), we specify a less strict contract.
+%%
+%% -spec(get_attribute_node_from_list/2 ::
+%%   ([], xmlname())              -> undefined;
+%%   ([xmlattr()], xmlname())     -> xmlattr() | undefined;
+%%   ([xmlattr_old()], xmlname()) -> xmlattr_old() | undefined).
+
+-spec(get_attribute_node_from_list/2 ::
+      ([xmlattr() | xmlattr_old()], xmlname()) ->
+	     xmlattr() | xmlattr_old() | undefined).
+
+get_attribute_node_from_list([Attr | Rest], Name) ->
+    case attribute_matches(Attr, Name) of
+        true  -> Attr;
+        false -> get_attribute_node_from_list(Rest, Name)
+    end;
+get_attribute_node_from_list([], _Name) ->
+    undefined.
+
+%% @spec (Attrs, NS, Attr_Name) -> Attr | undefined
+%%     Attrs = [xmlattr()]
+%%     NS = atom() | string()
+%%     Attr_Name = atom() | string()
+%%     Attr = xmlattr()
+%% @doc Return the attribute named `Attr_Name' from the list with the
+%% `NS' namespace URI.
+%%
+%% Return `undefined' if the attribute isn't found.
+
+-spec(get_attribute_node_from_list/3 ::
+      ([xmlattr()], xmlname(), xmlname()) -> xmlattr() | undefined).
+
+get_attribute_node_from_list([Attr | Rest], NS, Name) ->
+    case attribute_matches(Attr, NS, Name) of
+        true  -> Attr;
+        false -> get_attribute_node_from_list(Rest, NS, Name)
+    end;
+get_attribute_node_from_list([], _NS, _Name) ->
+    undefined.
+
+%% @spec (XML_Element, Attr_Name) -> Attr | undefined
+%%     XML_Element = xmlel() | xmlel_old() | undefined
+%%     Attr_Name = atom() | string()
+%%     Attr = xmlattr() | xmlattr_old()
+%% @doc Return the attribute named `Attr_Name'.
+%%
+%% Return `undefined' if the attribute isn't found.
+
+-spec(get_attribute_node/2 ::
+      (xmlel(), xmlname())     -> xmlattr() | undefined;
+      (xmlel_old(), xmlname()) -> xmlattr_old() | undefined;
+      (undefined, xmlname())   -> undefined).
+
+get_attribute_node(#xmlel{attrs = Attrs} = _XML_Element, Name) ->
+    get_attribute_node_from_list(Attrs, Name);
+get_attribute_node(#xmlelement{attrs = Attrs} = _XML_Element, Name) ->
+    get_attribute_node_from_list(Attrs, Name);
+get_attribute_node(undefined, _Name) ->
+    undefined.
+
+%% @spec (XML_Element, NS, Attr_Name) -> Attr | undefined
+%%     XML_Element = xmlel() | undefined
+%%     NS = atom() | string()
+%%     Attr_Name = atom() | string()
+%%     Attr = xmlattr()
+%% @doc Return the attribute named `Attr_Name' with the `NS' namespace URI.
+%%
+%% Return `undefined' if the attribute isn't found.
+
+-spec(get_attribute_node/3 ::
+      (xmlel(), xmlname(), xmlname())   -> xmlattr() | undefined;
+      (undefined, xmlname(), xmlname()) -> undefined).
+
+get_attribute_node(#xmlel{attrs = Attrs} = _XML_Element, NS, Name) ->
+    get_attribute_node_from_list(Attrs, NS, Name);
+get_attribute_node(undefined, _NS, _Name) ->
+    undefined.
+
+%% @spec (Attrs, Attr_Name, Default) -> Attr_Value | Default
+%%     Attrs = [xmlattr()] | [xmlattr_old()]
+%%     Attr_Name = atom() | string()
+%%     Default = term()
+%%     Attr_Value = binary() | string()
+%% @doc Return the value of the attribute named `Attr_Name' from the list.
+%%
+%% The return type depends on `Attrs' type:
+%% <ul>
+%% <li>`binary()' with {@link xmlattr()}</li>
+%% <li>`list()' with {@link xmlattr_old()}</li>
+%% </ul>
+%%
+%% Return `Default' if the attribute isn't found.
+
+%% XXX Dialyzer doesn't support this multiple-clause contract because
+%% both clauses take a list() as a first argument. So until it can look
+%% inside those list(), we specify a less strict contract.
+%%
+%% -spec(get_attribute_from_list/3 ::
+%%   ([], xmlname(), Default)              -> Default;
+%%   ([xmlattr()], xmlname(), Default)     -> binary() | Default;
+%%   ([xmlattr_old()], xmlname(), Default) -> string() | Default).
+
+-spec(get_attribute_from_list/3 ::
+      ([xmlattr() | xmlattr_old()], xmlname(), Default) ->
+	     binary() | string() | Default).
+
+get_attribute_from_list(Attrs, Attr_Name, Default) ->
+    case get_attribute_node_from_list(Attrs, Attr_Name) of
+        #xmlattr{value = Value} ->
+            Value;
+        {_Name, Value} ->
+            Value;
+        _ ->
+            Default
+    end.
+
+%% @spec (Attrs, NS, Attr_Name, Default) -> Attr_Value | Default
+%%     Attrs = [xmlattr()]
+%%     NS = atom() | string()
+%%     Attr_Name = atom() | string()
+%%     Default = term()
+%%     Attr_Value = binary()
+%% @doc Return the value of the attribute named `Attr_Name' from the
+%% list with the `NS' namespace URI.
+%%
+%% Return `Default' if the attribute isn't found.
+
+-spec(get_attribute_from_list/4 ::
+      ([xmlattr()], xmlname(), xmlname(), Default) -> binary() | Default).
+
+get_attribute_from_list(Attrs, NS, Attr_Name, Default) ->
+    case get_attribute_node_from_list(Attrs, NS, Attr_Name) of
+        #xmlattr{value = Value} ->
+            Value;
+        _ ->
+            Default
+    end.
+
+%% @spec (XML_Element, Attr_Name, Default) -> Attr_Value | Default
+%%     XML_Element = xmlel() | xmlel_old() | undefined
+%%     Attr_Name = atom() | string()
+%%     Default = term()
+%%     Attr_Value = binary() | string()
+%% @doc Return the value of the attribute named `Attr_Name'.
+%%
+%% The return type depends on attributes type in `XML_Element':
+%% <ul>
+%% <li>`binary()' with {@link xmlattr()}</li>
+%% <li>`list()' with {@link xmlattr_old()}</li>
+%% </ul>
+%%
+%% Return `Default' if the attribute isn't found.
+
+-spec(get_attribute/3 ::
+      (xmlel(), xmlname(), Default)     -> binary() | Default;
+      (xmlel_old(), xmlname(), Default) -> string() | Default;
+      (undefined, xmlname(), Default)   -> Default).
+
+get_attribute(#xmlel{attrs = Attrs} = _XML_Element, Name, Default) ->
+    get_attribute_from_list(Attrs, Name, Default);
+get_attribute(#xmlelement{attrs = Attrs} = _XML_Element, Name, Default) ->
+    get_attribute_from_list(Attrs, Name, Default);
+get_attribute(undefined, _Name, Default) ->
+    Default.
+
+%% @spec (XML_Element, NS, Attr_Name, Default) -> Attr_Value | Default
+%%     XML_Element = xmlel() | undefined
+%%     NS = atom() | string()
+%%     Attr_Name = atom() | string()
+%%     Default = term()
+%%     Attr_Value = binary()
+%% @doc Return the value of the attribute named `Attr_Name' with the
+%% `NS' namespace URI.
+%%
+%% Return `Default' if the attribute isn't found.
+
+-spec(get_attribute/4 ::
+      (xmlel(), xmlname(), xmlname(), Default)   -> binary() | Default;
+      (undefined, xmlname(), xmlname(), Default) -> Default).
+
+get_attribute(#xmlel{attrs = Attrs} = _XML_Element, NS, Name, Default) ->
+    get_attribute_from_list(Attrs, NS, Name, Default);
+get_attribute(undefined, _NS, _Name, Default) ->
+    Default.
+
+%% @spec (Attrs, Attr_Name, Default) -> Attr_Value | Default
+%%     Attrs = [xmlattr()] | [xmlattr_old()]
+%%     Attr_Name = atom() | string()
+%%     Default = term()
+%%     Attr_Value = list()
+%% @doc Return the value of the attribute named `Attr_Name' from the
+%% list, as a list().
+%%
+%% Return `Default' if the attribute isn't found.
+
+-spec(get_attribute_from_list_as_list/3 ::
+      ([xmlattr()] | [xmlattr_old()], xmlname(), Default) -> string() | Default).
+
+get_attribute_from_list_as_list(Attrs, Attr_Name, Default) ->
+    case get_attribute_node_from_list(Attrs, Attr_Name) of
+        #xmlattr{value = Value} ->
+            binary_to_list(Value);
+        {_Name, Value} ->
+            Value;
+        _ ->
+            Default
+    end.
+
+%% @spec (Attrs, NS, Attr_Name, Default) -> Attr_Value | Default
+%%     Attrs = [xmlattr()]
+%%     NS = atom() | string()
+%%     Attr_Name = atom() | string()
+%%     Default = term()
+%%     Attr_Value = list()
+%% @doc Return the value of the attribute named `Attr_Name' with the
+%% `NS' namespace URI from the list, as a list().
+%%
+%% Return `Default' if the attribute isn't found.
+
+-spec(get_attribute_from_list_as_list/4 ::
+      ([xmlattr()], xmlname(), xmlname(), Default) -> string() | Default).
+
+get_attribute_from_list_as_list(Attrs, NS, Attr_Name, Default) ->
+    case get_attribute_node_from_list(Attrs, NS, Attr_Name) of
+        #xmlattr{value = Value} ->
+            binary_to_list(Value);
+        _ ->
+            Default
+    end.
+
+%% @spec (XML_Element, Attr_Name, Default) -> Attr_Value | Default
+%%     XML_Element = xmlel() | xmlel_old() | undefined
+%%     Attr_Name = atom() | string()
+%%     Default = term()
+%%     Attr_Value = list()
+%% @doc Return the value of the attribute named `Attr_Name', as a
+%% list().
+%%
+%% Return `Default' if the attribute isn't found.
+
+-spec(get_attribute_as_list/3 ::
+      (xmlel_any(), xmlname(), Default) -> string() | Default;
+      (undefined, xmlname(), Default)   -> Default).
+
+get_attribute_as_list(#xmlel{attrs = Attrs} = _XML_Element, Name,
+		      Default) ->
+    get_attribute_from_list_as_list(Attrs, Name, Default);
+get_attribute_as_list(#xmlelement{attrs = Attrs} = _XML_Element, Name,
+		      Default) ->
+    get_attribute_from_list_as_list(Attrs, Name, Default);
+get_attribute_as_list(undefined, _Name, Default) ->
+    Default.
+
+%% @spec (XML_Element, NS, Attr_Name, Default) -> Attr_Value | Default
+%%     XML_Element = xmlel() | undefined
+%%     NS = atom() | string()
+%%     Attr_Name = atom() | string()
+%%     Default = term()
+%%     Attr_Value = list()
+%% @doc Return the value of the attribute named `Attr_Name' with the
+%% `NS' namespace URI, as a list().
+%%
+%% Return `Default' if the attribute isn't found.
+
+-spec(get_attribute_as_list/4 ::
+      (xmlel() | undefined, xmlname(), xmlname(), Default) -> string() | Default).
+
+get_attribute_as_list(#xmlel{attrs = Attrs} = _XML_Element, NS, Name,
+		      Default) ->
+    get_attribute_from_list_as_list(Attrs, NS, Name, Default);
+get_attribute_as_list(undefined, _NS, _Name, Default) ->
+    Default.
+
+%% @spec (Attrs, Attr_Name, Default) -> Attr_Value | Default
+%%     Attrs = [xmlattr()] | [xmlattr_old()]
+%%     Attr_Name = atom() | string()
+%%     Default = term()
+%%     Attr_Value = binary()
+%% @doc Return the value of the attribute named `Attr_Name' from the
+%% list, as a binary().
+%%
+%% Return `Default' if the attribute isn't found.
+
+-spec(get_attribute_from_list_as_binary/3 ::
+      ([xmlattr()] | [xmlattr_old()], xmlname(), Default) -> binary() | Default).
+
+get_attribute_from_list_as_binary(Attrs, Attr_Name, Default) ->
+    case get_attribute_node_from_list(Attrs, Attr_Name) of
+        #xmlattr{value = Value} ->
+            Value;
+        {_Name, Value} ->
+            list_to_binary(Value);
+        _ ->
+            Default
+    end.
+
+%% @spec (Attrs, NS, Attr_Name, Default) -> Attr_Value | Default
+%%     Attrs = [xmlattr()]
+%%     NS = atom() | string()
+%%     Attr_Name = atom() | string()
+%%     Default = term()
+%%     Attr_Value = binary()
+%% @doc Return the value of the attribute named `Attr_Name' with the
+%% `NS' namespace URI from the list, as a binary().
+%%
+%% Return `Default' if the attribute isn't found.
+
+-spec(get_attribute_from_list_as_binary/4 ::
+      ([xmlattr()], xmlname(), xmlname(), Default) -> binary() | Default).
+
+get_attribute_from_list_as_binary(Attrs, NS, Attr_Name, Default) ->
+    case get_attribute_node_from_list(Attrs, NS, Attr_Name) of
+        #xmlattr{value = Value} ->
+            Value;
+        _ ->
+            Default
+    end.
+
+%% @spec (XML_Element, Attr_Name, Default) -> Attr_Value | Default
+%%     XML_Element = xmlel() | xmlel_old() | undefined
+%%     Attr_Name = atom() | string()
+%%     Default = term()
+%%     Attr_Value = binary()
+%% @doc Return the value of the attribute named `Attr_Name', as a
+%% binary().
+%%
+%% Return `Default' if the attribute isn't found.
+
+-spec(get_attribute_as_binary/3 ::
+      (xmlel_any(), xmlname(), Default) -> binary() | Default;
+      (undefined, xmlname(), Default)   -> Default).
+
+get_attribute_as_binary(#xmlel{attrs = Attrs} = _XML_Element, Name,
+			Default) ->
+    get_attribute_from_list_as_binary(Attrs, Name, Default);
+get_attribute_as_binary(#xmlelement{attrs = Attrs} = _XML_Element, Name,
+			Default) ->
+    get_attribute_from_list_as_binary(Attrs, Name, Default);
+get_attribute_as_binary(undefined, _Name, Default) ->
+    Default.
+
+%% @spec (XML_Element, NS, Attr_Name, Default) -> Attr_Value | Default
+%%     XML_Element = xmlel() | undefined
+%%     NS = atom() | string()
+%%     Attr_Name = atom() | string()
+%%     Default = term()
+%%     Attr_Value = binary()
+%% @doc Return the value of the attribute named `Attr_Name' with the
+%% `NS' namespace URI, as a binary().
+%%
+%% Return `Default' if the attribute isn't found.
+
+-spec(get_attribute_as_binary/4 ::
+      (xmlel(), xmlname(), xmlname(), Default)   -> binary() | Default;
+      (undefined, xmlname(), xmlname(), Default) -> Default).
+
+get_attribute_as_binary(#xmlel{attrs = Attrs} = _XML_Element, NS, Name,
+			Default) ->
+    get_attribute_from_list_as_binary(Attrs, NS, Name, Default);
+get_attribute_as_binary(undefined, _NS, _Name, Default) ->
+    Default.
+
+%% @spec (Attrs, Attr_Name) -> bool()
+%%     Attrs = [xmlattr()] | [xmlattr_old()]
+%%     Attr_Name = atom() | string()
+%% @doc Check the presence for attribute `Attr_Name' in the list.
+
+-spec(has_attribute_in_list/2 ::
+      ([xmlattr()] | [xmlattr_old()], xmlname()) -> bool()).
+
+has_attribute_in_list(Attrs, Name) ->
+    case get_attribute_node_from_list(Attrs, Name) of
+        undefined -> false;
+        _         -> true
+    end.
+
+%% @spec (Attrs, NS, Attr_Name) -> bool()
+%%     Attrs = [xmlattr()]
+%%     NS = atom() | string()
+%%     Attr_Name = atom() | string()
+%% @doc Check the presence for attribute `Attr_Name' with namespace `NS'
+%% in the list.
+
+-spec(has_attribute_in_list/3 ::
+      ([xmlattr()], xmlname(), xmlname()) -> bool()).
+
+has_attribute_in_list(Attrs, NS, Name) ->
+    case get_attribute_node_from_list(Attrs, NS, Name) of
+        undefined -> false;
+        _         -> true
+    end.
+
+%% @spec (XML_Element, Attr_Name) -> bool()
+%%     XML_Element = xmlel() | xmlel_old() | undefined
+%%     Attr_Name = atom() | string()
+%% @doc Check the presence for attribute `Attr_Name' in the XML element.
+
+-spec(has_attribute/2 ::
+      (xmlel_any() | undefined, xmlname()) -> bool()).
+
+has_attribute(#xmlel{attrs = Attrs} = _XML_Element, Name) ->
+    has_attribute_in_list(Attrs, Name);
+has_attribute(#xmlelement{attrs = Attrs} = _XML_Element, Name) ->
+    has_attribute_in_list(Attrs, Name);
+has_attribute(undefined, _Name) ->
+    false.
+
+%% @spec (XML_Element, NS, Attr_Name) -> bool()
+%%     XML_Element = xmlel() | xmlel_old() | undefined
+%%     NS = atom() | string()
+%%     Attr_Name = atom() | string()
+%% @doc Check the presence for attribute `Attr_Name' with namespace `NS'
+%% in the XML element.
+
+-spec(has_attribute/3 ::
+      (xmlel_any() | undefined, xmlname(), xmlname()) -> bool()).
+
+has_attribute(#xmlel{attrs = Attrs} = _XML_Element, NS, Name) ->
+    has_attribute_in_list(Attrs, NS, Name);
+has_attribute(undefined, _NS, _Name) ->
+    false.
+
+%% @spec (Attrs, Attr) -> New_Attrs
+%%     Attrs = [xmlattr()] | [xmlattr_old()]
+%%     Attr = xmlattr() | xmlattr_old()
+%%     Attr_Name = atom() | string()
+%%     Attr_Value = binary() | string() | atom() | integer()
+%%     New_Attrs = [xmlattr()] | [xmlattr_old()]
+%% @doc Add a new attribute or change the value of an existing attribute
+%% with the same name.
+%%
+%% If a match is found, `Attr' will replace the old attribute as is,
+%% regardless of the format of the latter.
+
+%% XXX Dialyzer doesn't support this multiple-clause contract because
+%% both clauses take a list() as a first argument. So until it can look
+%% inside those list(), we specify a less strict contract.
+%%
+%% -spec(set_attribute_in_list/2 ::
+%%   ([], xmlattr()                   -> [xmlattr()];
+%%   ([], xmlattr_old())              -> [xmlattr_old()];
+%%   ([xmlattr()], xmlattr()          -> [xmlattr()];
+%%   ([xmlattr_old()], xmlattr_old()) -> [xmlattr_old()]).
+
+-spec(set_attribute_in_list/2 ::
+      ([xmlattr() | xmlattr_old()], xmlattr() | xmlattr_old()) ->
+	     [xmlattr() | xmlattr_old()]).
+
+set_attribute_in_list(Attrs, {Name, Value}) ->
+    set_attribute_in_list(Attrs, Name, Value);
+set_attribute_in_list(Attrs, #xmlattr{} = Attr) ->
+    set_attribute_in_list2(Attrs, Attr, []).
+
+set_attribute_in_list2([Attr | Rest],
+		       #xmlattr{ns = undefined, name = Name} = New_Attr, New_Attrs) ->
+    case attribute_matches(Attr, Name) of
+        true ->
+            New_Attrs ++ [New_Attr] ++ Rest;
+        false ->
+            set_attribute_in_list2(Rest, New_Attr, New_Attrs ++ [Attr])
+    end;
+set_attribute_in_list2([Attr | Rest],
+		       #xmlattr{ns = NS, name = Name} = New_Attr, New_Attrs) ->
+    case attribute_matches(Attr, NS, Name) of
+        true ->
+            New_Attrs ++ [New_Attr] ++ Rest;
+        false ->
+            set_attribute_in_list2(Rest, New_Attr, New_Attrs ++ [Attr])
+    end;
+set_attribute_in_list2([], New_Attr, New_Attrs) ->
+    New_Attrs ++ [New_Attr].
+
+%% @spec (Attrs, Attr_Name, Attr_Value) -> New_Attrs
+%%     Attrs = [xmlattr()] | [xmlattr_old()]
+%%     Attr_Name = atom() | string()
+%%     Attr_Value = binary() | string() | atom() | integer()
+%%     New_Attrs = [xmlattr()] | [xmlattr_old()]
+%% @doc Add a new attribute or change the value of an existing attribute
+%% with the same name.
+%%
+%% If the attribute is to be added, this function use the {@link
+%% xmlattr()} record if it can't determine the type from the
+%% other attributes.
+
+%% XXX Dialyzer doesn't support this multiple-clause contract because
+%% both clauses take a list() as a first argument. So until it can look
+%% inside those list(), we specify a less strict contract.
+%%
+%% -spec(set_attribute_in_list/3 ::
+%%   ([xmlattr()], xmlname(), binary() | string() | atom() | integer()) ->
+%%       [xmlattr()];
+%%   ([xmlattr_old()], xmlname(), binary() | string() | atom() | integer()) ->
+%%       [xmlattr_old()]).
+
+-spec(set_attribute_in_list/3 ::
+      ([xmlattr() | xmlattr_old()],
+       xmlname(), binary() | string() | atom() | integer()) ->
+	     [xmlattr() | xmlattr_old()]).
+
+set_attribute_in_list(Attrs, Name, Value) ->
+    set_attribute_in_list2(Attrs, Name, Value, []).
+
+set_attribute_in_list2([Attr | Rest], Name, Value, New_Attrs) ->
+    case attribute_matches(Attr, Name) of
+        true ->
+            New_Attr = set_attr_value(Attr, Value),
+            New_Attrs ++ [New_Attr] ++ Rest;
+        false ->
+            set_attribute_in_list2(Rest, Name, Value,
+				   New_Attrs ++ [Attr])
+    end;
+set_attribute_in_list2([], Name, Value, New_Attrs) ->
+    New_Attr = case New_Attrs of
+		   [#xmlattr{} | _] ->
+		       attribute(Name, Value);
+		   [{_, _} | _] ->
+		       set_attr_value({Name, undefined}, Value);
+		   _ ->
+		       attribute(Name, Value)
+	       end,
+    New_Attrs ++ [New_Attr].
+
+%% @spec (Attrs, NS, Attr_Name, Attr_Value) -> New_Attrs
+%%     Attrs = [xmlattr()]
+%%     NS = atom() | string()
+%%     Attr_Name = atom() | string()
+%%     Attr_Value = binary() | string() | atom() | integer()
+%%     New_Attrs = [xmlattr()]
+%% @doc Add a new attribute or change the value of an existing attribute
+%% with the same name and the `NS' namespace URI.
+%%
+%% If the attribute is to be added, this function use the {@link
+%% xmlattr()} record.
+
+-spec(set_attribute_in_list/4 ::
+      ([xmlattr()], xmlname(), xmlname(),
+       binary() | string() | atom() | integer()) ->
+	     [xmlattr()]).
+
+set_attribute_in_list(Attrs, NS, Name, Value) ->
+    set_attribute_in_list2(Attrs, NS, Name, Value, []).
+
+set_attribute_in_list2([Attr | Rest], NS, Name, Value, New_Attrs) ->
+    case attribute_matches(Attr, NS, Name) of
+        true ->
+            New_Attr = set_attr_value(Attr, Value),
+            New_Attrs ++ [New_Attr] ++ Rest;
+        false ->
+            set_attribute_in_list2(Rest, NS, Name, Value, New_Attrs ++ [Attr])
+    end;
+set_attribute_in_list2([], NS, Name, Value, New_Attrs) ->
+    New_Attrs ++ [attribute(NS, Name, Value)].
+
+%% @spec (XML_Element, Attr) -> New_XML_Element
+%%     XML_Element = xmlel() | xmlel_old()
+%%     Attr = xmlattr() | xmlattr_old()
+%%     New_XML_Element = xmlel() | xmlel_old()
+%% @doc Add a new attribute or change the value of an existing attribute
+%% with the same name.
+%%
+%% If a match is found, `Attr' will replace the old attribute as is,
+%% regardless of the format of the latter.
+
+-spec(set_attribute/2 ::
+      (xmlel(), xmlattr() | xmlattr_old())     -> xmlel();
+      (xmlel_old(), xmlattr() | xmlattr_old()) -> xmlel_old()).
+
+set_attribute(#xmlel{attrs = Attrs} = XML_Element, Attr) ->
+    New_Attrs = set_attribute_in_list(Attrs, Attr),
+    XML_Element#xmlel{attrs = New_Attrs};
+set_attribute(#xmlelement{attrs = Attrs} = XML_Element, Attr) ->
+    New_Attrs = set_attribute_in_list(Attrs, Attr),
+    XML_Element#xmlelement{attrs = New_Attrs}.
+
+%% @spec (XML_Element, Attr_Name, Attr_Value) -> New_XML_Element
+%%     XML_Element = xmlel() | xmlel_old()
+%%     Attr_Name = atom() | string()
+%%     Attr_Value = binary() | string() | atom() | integer()
+%%     New_XML_Element = xmlel() | xmlel_old()
+%% @doc Add a new attribute or change the value of an existing attribute.
+
+-spec(set_attribute/3 ::
+      (xmlel(), xmlname(), binary() | string() | atom() | integer()) ->
+	     xmlel();
+      (xmlel_old(), xmlname(), binary() | string() | atom() | integer()) ->
+	     xmlel_old()).
+
+set_attribute(#xmlel{attrs = Attrs} = XML_Element, Name, Value) ->
+    New_Attrs = set_attribute_ns2(Attrs, Name, Value, []),
+    XML_Element#xmlel{attrs = New_Attrs};
+set_attribute(#xmlelement{attrs = Attrs} = XML_Element, Name, Value) ->
+    New_Attrs = set_attribute2(Attrs, Name, Value, []),
+    XML_Element#xmlelement{attrs = New_Attrs}.
+
+set_attribute_ns2([Attr | Rest], Name, Value, New_Attrs) ->
+    case attribute_matches(Attr, Name) of
+        true ->
+            New_Attr = set_attr_value(Attr, Value),
+            New_Attrs ++ [New_Attr] ++ Rest;
+        false ->
+            set_attribute_ns2(Rest, Name, Value, New_Attrs ++ [Attr])
+    end;
+set_attribute_ns2([], Name, Value, New_Attrs) ->
+    New_Attrs ++ [attribute(Name, Value)].
+
+set_attribute2([Attr | Rest], Name, Value, New_Attrs) ->
+    case attribute_matches(Attr, Name) of
+        true ->
+            New_Attr = set_attr_value(Attr, Value),
+            New_Attrs ++ [New_Attr] ++ Rest;
+        false ->
+            set_attribute2(Rest, Name, Value, New_Attrs ++ [Attr])
+    end;
+set_attribute2([], Name, Value, New_Attrs) ->
+    New_Attrs ++ [set_attr_value({Name, undefined}, Value)].
+
+%% @spec (XML_Element, NS, Attr_Name, Attr_Value) -> New_XML_Element
+%%     XML_Element = xmlel()
+%%     NS = atom() | string()
+%%     Attr_Name = atom() | string()
+%%     Attr_Value = binary() | string() | atom() | integer()
+%%     New_XML_Element = xmlel()
+%% @doc Add a new attribute or change the value of an existing attribute
+%% with the same name and the `NS' namespace URI.
+
+-spec(set_attribute/4 ::
+      (xmlel(), xmlname(), xmlname(), binary() | string() | atom() | integer()) ->
+	     xmlel()).
+
+set_attribute(#xmlel{attrs = Attrs} = XML_Element, NS, Name, Value) ->
+    New_Attrs = set_attribute_ns2(Attrs, NS, Name, Value, []),
+    XML_Element#xmlel{attrs = New_Attrs}.
+
+set_attribute_ns2([Attr | Rest], NS, Name, Value, New_Attrs) ->
+    case attribute_matches(Attr, NS, Name) of
+        true ->
+            New_Attr = set_attr_value(Attr, Value),
+            New_Attrs ++ [New_Attr] ++ Rest;
+        false ->
+            set_attribute_ns2(Rest, NS, Name, Value, New_Attrs ++ [Attr])
+    end;
+set_attribute_ns2([], NS, Name, Value, New_Attrs) ->
+    New_Attrs ++ [attribute(NS, Name, Value)].
+
+%% @spec (XML_Element, Attrs_Spec) -> New_XML_Element
+%%     XML_Element = xmlel() | xmlel_old()
+%%     Attrs_Spec = [{Name, Value} | {NS, Name, Value} | xmlattr_old() | xmlattr()]
+%%       NS = atom() | string()
+%%       Name = atom() | string()
+%%       Value = binary() | string() | atom() | integer()
+%%     New_XML_Element = xmlel() | xmlel_old()
+%% @doc Set multiple attributes at a time.
+%%
+%% Existing attributes are not completly overwritten by the ones present
+%% in `Attrs_Spec'. They are simply updated.
+
+-spec(set_attributes/2 ::
+      (xmlel(),
+       [xmlattr() |
+	{xmlname(), binary() | string() | atom() | integer()} |
+	{xmlname(), xmlname(), binary() | string() | atom() | integer()}]) ->
+	     xmlel();
+      (xmlel_old(),
+       [xmlattr_old() |
+	{xmlname(), binary() | string() | atom() | integer()}]) ->
+	     xmlel_old()).
+
+set_attributes(XML_Element, [{Name, Value} | Rest]) ->
+    New_XML_Element = set_attribute(XML_Element, Name, Value),
+    set_attributes(New_XML_Element, Rest);
+
+set_attributes(XML_Element, [{NS, Name, Value} | Rest]) ->
+    New_XML_Element = set_attribute(XML_Element, NS, Name, Value),
+    set_attributes(New_XML_Element, Rest);
+
+set_attributes(XML_Element, [#xmlattr{} = Attr | Rest]) ->
+    New_XML_Element = set_attribute(XML_Element, Attr),
+    set_attributes(New_XML_Element, Rest);
+
+set_attributes(XML_Element, []) ->
+    XML_Element.
+
+%% @spec (Attrs, Attr_Name) -> New_Attrs
+%%     Attrs = [xmlattr()] | [xmlattr_old()]
+%%     Attr_Name = atom() | string()
+%%     New_Attrs = [xmlattr()] | [xmlattr_old()]
+%% @doc Remove attribute named `Attr_Name' and return the new list.
+%%
+%% If `Attr_Name' doesn't exist, this function has no effect (it won't
+%% return an error).
+
+%% XXX Dialyzer doesn't support this multiple-clause contract because
+%% both clauses take a list() as a first argument. So until it can look
+%% inside those list(), we specify a less strict contract.
+%%
+%% -spec(remove_attribute_from_list/2 ::
+%%   ([], xmlname())              -> [];
+%%   ([xmlattr()], xmlname())     -> [xmlattr()];
+%%   ([xmlattr_old()], xmlname()) -> [xmlattr_old()]).
+
+-spec(remove_attribute_from_list/2 ::
+      ([xmlattr() | xmlattr_old()], xmlname()) -> [xmlattr() | xmlattr_old()]).
+
+remove_attribute_from_list(Attrs, Name) ->
+    remove_attribute_from_list2(Attrs, Name, []).
+
+remove_attribute_from_list2([Attr | Rest], Name, New_Attrs) ->
+    case attribute_matches(Attr, Name) of
+        true when is_record(Attr, xmlattr) ->
+            lists:reverse(New_Attrs) ++ Rest;
+        true when is_tuple(Attr), size(Attr) == 2 ->
+            lists:reverse(New_Attrs) ++ Rest;
+        false ->
+            remove_attribute_from_list2(Rest, Name,
+					[Attr | New_Attrs])
+    end;
+remove_attribute_from_list2([], _Name, New_Attrs) ->
+    lists:reverse(New_Attrs).
+
+%% @spec (Attrs, NS, Attr_Name) -> New_Attrs
+%%     Attrs = [xmlattr()]
+%%     Attr_Name = atom() | string()
+%%     New_Attrs = [xmlattr()]
+%% @doc Remove attribute named `Attr_Name' with the `NS' namespace URI
+%% and return the new list.
+%%
+%% If `Attr_Name' doesn't exist, this function has no effect (it won't
+%% return an error).
+
+-spec(remove_attribute_from_list/3 ::
+      ([xmlattr()], xmlname(), xmlname()) -> [xmlattr()]).
+
+remove_attribute_from_list(Attrs, NS, Name) ->
+    remove_attribute_from_list2(Attrs, NS, Name, []).
+
+remove_attribute_from_list2([Attr | Rest], NS, Name, New_Attrs) ->
+    case attribute_matches(Attr, NS, Name) of
+        true when is_record(Attr, xmlattr) ->
+            lists:reverse(New_Attrs) ++ Rest;
+        false ->
+            remove_attribute_from_list2(Rest, NS, Name,
+					[Attr | New_Attrs])
+    end;
+remove_attribute_from_list2([], _NS, _Name, New_Attrs) ->
+    lists:reverse(New_Attrs).
+
+%% @spec (XML_Element, Attr_Name) -> New_XML_Element
+%%     XML_Element = xmlel() | xmlel_old()
+%%     Attr_Name = atom() | string()
+%%     New_XML_Element = xmlel() | xmlel_old()
+%% @doc Remove attribute named `Attr_Name' and return the new element.
+%%
+%% If `Attr_Name' doesn't exist, this function has no effect (it won't
+%% return an error).
+
+-spec(remove_attribute/2 ::
+      (xmlel(), xmlname())     -> xmlel();
+      (xmlel_old(), xmlname()) -> xmlel_old()).
+
+remove_attribute(#xmlel{attrs = Attrs} = XML_Element, Name) ->
+    New_Attrs = remove_attribute_from_list(Attrs, Name),
+    XML_Element#xmlel{attrs = New_Attrs};
+
+remove_attribute(#xmlelement{attrs = Attrs} = XML_Element, Name) ->
+    New_Attrs = remove_attribute_from_list(Attrs, Name),
+    XML_Element#xmlelement{attrs = New_Attrs}.
+
+%% @spec (XML_Element, NS, Attr_Name) -> New_XML_Element
+%%     XML_Element = xmlel()
+%%     NS = atom() | string()
+%%     Attr_Name = atom() | string()
+%%     New_XML_Element = xmlel()
+%% @doc Remove attribute named `Attr_Name' with the `NS' namespace URI
+%% and return the new element.
+%%
+%% If `Attr_Name' doesn't exist, this function has no effect (it won't
+%% return an error).
+
+-spec(remove_attribute/3 ::
+      (xmlel(), xmlname(), xmlname()) -> xmlel()).
+
+remove_attribute(#xmlel{attrs = Attrs} = XML_Element, NS, Name) ->
+    New_Attrs = remove_attribute_from_list(Attrs, NS, Name),
+    XML_Element#xmlel{attrs = New_Attrs}.
+
+%% --------------------------------------------------------------------
+%% Functions to handle XML elements (xmlel() & xmlel_old()).
+%% This is similar to the DOM interface but NOT compliant.
+%% --------------------------------------------------------------------
+
+%% @spec (Name) -> XML_Element
+%%     Name = atom() | string()
+%%     XML_Element = xmlel()
+%% @doc Create an XML element with the name `Name' but no namespace.
+%%
+%% Caution: be sure you do not want to set a namespace: it won't be
+%% inherited from the parent node!
+%%
+%% This is the same as:
+%% ```
+%% XML_Element = #xmlel{name = Name}.
+%% '''
+
+-spec(element/1 :: (xmlname()) -> xmlel()).
+
+element(Name) ->
+    #xmlel{name = Name}.
+
+%% @spec (NS, Name) -> XML_Element
+%%     NS = atom() | string() | undefined
+%%     Name = atom() | string()
+%%     XML_Element = xmlel()
+%% @doc Create an XML element with the name `Name' in the namespace `NS'.
+%%
+%% This is the same as:
+%% ```
+%% XML_Element = #xmlel{ns = NS, name = Name}.
+%% '''
+
+-spec(element/2 :: (xmlname(), xmlname()) -> xmlel()).
+
+element(NS, Name) ->
+    #xmlel{ns = NS, name = Name}.
+
+%% @spec (NS, Name, Attrs, Children) -> XML_Element
+%%     NS = atom() | string() | undefined
+%%     Name = atom() | string()
+%%     Attrs = [xmlattr()]
+%%     Children = [xmlcdata()]
+%%     XML_Element = xmlel()
+%% @doc Create an XML element with the name `Name' in the namespace `NS'.
+%%
+%% This is the same as:
+%% ```
+%% XML_Element = #xmlel{ns = NS, name = Name}.
+%% '''
+
+-spec(element/4 ::
+      (xmlname(), xmlname(), [xmlattr()], [xmlel() | xmlcdata()]) -> xmlel()).
+
+element(NS, Name, Attrs, Children) ->
+    #xmlel{ns = NS, name = Name, attrs = Attrs, children = Children}.
+
+%% @spec (XML_Element) -> Name
+%%     XML_Element = xmlel() | xmlel_old()
+%%     Name = list()
+%% @doc Return the name of an element as list, regardless of the
+%% original encoding.
+
+-spec(get_name_as_list/1 :: (xmlel_any()) -> string()).
+
+get_name_as_list(#xmlel{name = Name}) ->
+    as_list(Name);
+get_name_as_list(#xmlelement{name = Name}) ->
+    as_list(Name).
+
+%% @spec (XML_Element) -> Name
+%%     XML_Element = xmlel() | xmlel_old()
+%%     Name = atom()
+%% @doc Return the name of an element as atom, regardless of the
+%% original encoding.
+
+-spec(get_name_as_atom/1 :: (xmlel_any()) -> atom()).
+
+get_name_as_atom(#xmlel{name = Name}) ->
+    as_atom(Name);
+get_name_as_atom(#xmlelement{name = Name}) ->
+    as_atom(Name).
+
+%% @spec (XML_Element, Name) -> bool()
+%%     XML_Element = xmlel() | xmlel_old() | undefined
+%%     Name = atom() | string()
+%% @doc Tell if `XML_Element' is named `Name'.
+%%
+%% It takes care of comparison between string and atom.
+
+-spec(element_matches/2 :: (xmlel_any(), xmlname()) -> bool()).
+
+element_matches(#xmlel{name = Name}, Name) ->
+    true;
+element_matches(#xmlelement{name = Name}, Name) ->
+    true;
+
+element_matches(#xmlel{name = Name_A}, Name)
+  when is_atom(Name_A), is_list(Name) ->
+    Name_A == list_to_atom(Name);
+element_matches(#xmlel{name = Name}, Name_A)
+  when is_atom(Name_A), is_list(Name) ->
+    Name_A == list_to_atom(Name);
+
+element_matches(#xmlelement{name = Name_A}, Name)
+  when is_atom(Name_A), is_list(Name) ->
+    Name_A == list_to_atom(Name);
+element_matches(#xmlelement{name = Name}, Name_A)
+  when is_atom(Name_A), is_list(Name) ->
+    Name_A == list_to_atom(Name);
+
+element_matches(_XML_Element, _Name) ->
+    false.
+
+%% @spec (XML_Element, NS, Name) -> bool()
+%%     XML_Element = xmlel() | xmlel_old() | undefined
+%%     NS = atom() | string()
+%%     Name = atom() | string()
+%% @doc Tell if `XML_Element' has the namespace `NS' and is named `Name'.
+%%
+%% It takes care of comparison between string and atom.
+
+-spec(element_matches/3 :: (xmlel(), xmlname(), xmlname()) -> bool()).
+
+element_matches(#xmlel{ns = NS, name = Name}, NS, Name) ->
+    true;
+
+element_matches(#xmlel{ns = NS_A, name = Name_A}, NS, Name)
+  when is_atom(NS_A), is_list(NS), is_atom(Name_A), is_list(Name) ->
+    NS_A == list_to_atom(NS) andalso Name_A == list_to_atom(Name);
+element_matches(#xmlel{ns = NS, name = Name}, NS_A, Name_A)
+  when is_atom(NS_A), is_list(NS), is_atom(Name_A), is_list(Name) ->
+    NS_A == list_to_atom(NS) andalso Name_A == list_to_atom(Name);
+
+element_matches(#xmlel{ns = NS_A, name = Name}, NS, Name)
+  when is_atom(NS_A), is_list(NS) ->
+    NS_A == list_to_atom(NS);
+element_matches(#xmlel{ns = NS, name = Name}, NS_A, Name)
+  when is_atom(NS_A), is_list(NS) ->
+    NS_A == list_to_atom(NS);
+
+element_matches(#xmlel{ns = NS, name = Name_A}, NS, Name)
+  when is_atom(Name_A), is_list(Name) ->
+    Name_A == list_to_atom(Name);
+element_matches(#xmlel{ns = NS, name = Name}, NS, Name_A)
+  when is_atom(Name_A), is_list(Name) ->
+    Name_A == list_to_atom(Name);
+
+element_matches(_XML_Element, _NS, _Name) ->
+    false.
+
+%% @spec (XML_Element, NS) -> bool()
+%%     XML_Element = xmlel() | xmlel_old() | undefined
+%%     NS = atom() | string()
+%% @doc Tell if `XML_Element' has the namespace `NS'.
+%%
+%% It takes care of comparison between string and atom.
+
+-spec(element_matches_by_ns/2 :: (xmlel(), xmlname()) -> bool()).
+
+element_matches_by_ns(#xmlel{ns = NS}, NS) ->
+    true;
+
+element_matches_by_ns(#xmlel{ns = NS_A}, NS)
+  when is_atom(NS_A), is_list(NS) ->
+    NS_A == list_to_atom(NS);
+element_matches_by_ns(#xmlel{ns = NS}, NS_A)
+  when is_atom(NS_A), is_list(NS) ->
+    NS_A == list_to_atom(NS);
+
+element_matches_by_ns(_XML_Element, _NS) ->
+    false.
+
+%% @spec (XML_Element, Name) -> XML_Subelement | undefined
+%%     XML_Element = xmlel() | xmlel_old() | undefined
+%%     Name = atom() | string()
+%%     XML_Subelement = xmlel() | xmlel_old()
+%% @doc Search in the children of `XML_Element' an element named `Name'.
+%%
+%% If no element with the given name is found, it returns `undefined'.
+%% This will only search among direct children.
+
+-spec(get_element/2 ::
+      (xmlel_any() | undefined, xmlname()) -> xmlel_any() | undefined).
+
+get_element(#xmlel{children = Children}, Name) ->
+    get_element2(Children, Name);
+get_element(#xmlelement{children = Children}, Name) ->
+    get_element2(Children, Name);
+get_element(undefined, _Name) ->
+    undefined.
+
+get_element2([Node | Rest], Name) ->
+    case element_matches(Node, Name) of
+        true  -> Node;
+        false -> get_element2(Rest, Name)
+    end;
+get_element2([], _Name) ->
+    undefined;
+get_element2(undefined, _Name) ->
+    undefined.
+
+%% @spec (XML_Element, NS, Name) -> XML_Subelement | undefined
+%%     XML_Element = xmlel() | undefined
+%%     NS = atom() | string()
+%%     Name = atom() | string()
+%%     XML_Subelement = xmlel()
+%% @doc Search in the children of `XML_Element' an element named `Name'
+%% with `NS' namespace URI.
+%%
+%% If no element with the given name is found, it returns `undefined'.
+%% This will only search among direct children.
+
+-spec(get_element/3 ::
+      (xmlel() | undefined, xmlname(), xmlname()) -> xmlel() | undefined).
+
+get_element(#xmlel{children = Children}, NS, Name) ->
+    get_element2(Children, NS, Name);
+get_element(undefined, _NS, _Name) ->
+    undefined.
+
+get_element2([Node | Rest], NS, Name) ->
+    case element_matches(Node, NS, Name) of
+        true  -> Node;
+        false -> get_element2(Rest, NS, Name)
+    end;
+get_element2([], _NS, _Name) ->
+    undefined;
+get_element2(undefined, _NS, _Name) ->
+    undefined.
+
+%% @spec (XML_Element, Name) -> [XML_Subelement]
+%%     XML_Element = xmlel() | xmlel_old() | undefined
+%%     Name = atom() | string()
+%%     XML_Subelement = xmlel() | xmlel_old()
+%% @doc Search in the children of `XML_Element' for all the elements
+%% named `Name'
+%%
+%% This will only search among direct children.
+
+-spec(get_elements/2 ::
+      (xmlel_any() | undefined, xmlname()) -> [xmlel_any()]).
+
+get_elements(#xmlel{children = Children}, Name) ->
+    get_elements2(Children, Name);
+get_elements(#xmlelement{children = Children}, Name) ->
+    get_elements2(Children, Name);
+get_elements(undefined, _Name) ->
+    [].
+
+get_elements2(undefined, _Name) ->
+    [];
+get_elements2([], _Name) ->
+    [];
+get_elements2(Children, Name) ->
+    lists:filter(filter_by_name(Name), Children).
+
+filter_by_name(Searched_Name) ->
+    fun(XML_Element) ->
+	    element_matches(XML_Element, Searched_Name)
+    end.
+
+%% @spec (XML_Element, NS, Name) -> [XML_Subelement]
+%%     XML_Element = xmlel() | undefined
+%%     NS = atom() | string()
+%%     Name = atom() | string()
+%%     XML_Subelement = xmlel()
+%% @doc Search in the children of `XML_Element' for all the elements
+%% named `Name' with `NS' namespace URI.
+%%
+%% This will only search among direct children.
+
+-spec(get_elements/3 ::
+      (xmlel() | undefined, xmlname(), xmlname()) -> [xmlel()]).
+
+get_elements(#xmlel{children = Children}, NS, Name) ->
+    get_elements2(Children, NS, Name);
+get_elements(undefined, _NS, _Name) ->
+    [].
+
+get_elements2(undefined, _NS, _Name) ->
+    [];
+get_elements2([], _NS, _Name) ->
+    [];
+get_elements2(Children, NS, Name) ->
+    lists:filter(filter_by_name(NS, Name), Children).
+
+filter_by_name(Searched_NS, Searched_Name) ->
+    fun(XML_Element) ->
+	    element_matches(XML_Element, Searched_NS, Searched_Name)
+    end.
+
+%% @spec (XML_Element, NS) -> XML_Subelement | undefined
+%%     XML_Element = xmlel() | undefined
+%%     NS = atom() | string()
+%%     XML_Subelement = xmlel()
+%% @doc Search in the children of `XML_Element' the first element with
+%% `NS' namespace URI.
+%%
+%% If no element with the given namespace is found, it returns
+%% `undefined'. This will only search among direct children.
+%%
+%% This function is particularly usefull to extract XMPP error codes.
+
+-spec(get_element_by_ns/2 ::
+      (xmlel() | undefined, xmlname()) -> xmlel() | undefined).
+
+get_element_by_ns(#xmlel{children = Children}, NS) ->
+    get_element_by_ns2(Children, NS);
+get_element_by_ns(undefined, _NS) ->
+    undefined.
+
+get_element_by_ns2([Node | Rest], NS) ->
+    case element_matches_by_ns(Node, NS) of
+        true  -> Node;
+        false -> get_element_by_ns2(Rest, NS)
+    end;
+get_element_by_ns2([], _NS) ->
+    undefined;
+get_element_by_ns2(undefined, _NS) ->
+    undefined.
+
+%% @spec (XML_Element, Name) -> bool()
+%%     XML_Element = xmlel() | xmlel_old() | undefined
+%%     Name = atom() | string()
+%% @doc Check the presence for element `Name' in the children.
+
+-spec(has_element/2 ::
+      (xmlel_any() | undefined, xmlname()) -> bool()).
+
+has_element(XML_Element, Name) ->
+    case get_element(XML_Element, Name) of
+        undefined -> false;
+        _         -> true
+    end.
+
+%% @spec (XML_Element, NS, Name) -> bool()
+%%     XML_Element = xmlel() | undefined
+%%     NS = atom() | string()
+%%     Name = atom() | string()
+%% @doc Check the presence for element `Name' with `NS' namespace URI in
+%% the children.
+
+-spec(has_element/3 ::
+      (xmlel() | undefined, xmlname(), xmlname()) -> bool()).
+
+has_element(XML_Element, NS, Name) ->
+    case get_element(XML_Element, NS, Name) of
+        undefined -> false;
+        _         -> true
+    end.
+
+%% @spec (XML_Element, NS) -> bool()
+%%     XML_Element = xmlel() | undefined
+%%     NS = atom() | string()
+%% @doc Check the presence for any elements with `NS' namespace URI in
+%% the children.
+
+-spec(has_element_by_ns/2 ::
+      (xmlel() | undefined, xmlname()) -> bool()).
+
+has_element_by_ns(XML_Element, NS) ->
+    case get_element_by_ns(XML_Element, NS) of
+        undefined -> false;
+        _         -> true
+    end.
+
+%% @spec (XML_Element) -> [XML_Subelement]
+%%     XML_Element = xmlel() | xmlel_old() | undefined
+%%     XML_Subelement = xmlel() | xmlel_old()
+%% @doc Get all the element children of the given element, skipping
+%% non-element nodes likes cdata.
+
+-spec(get_child_elements/1 :: (xmlel_any() | undefined) -> [xmlel_any()]).
+
+get_child_elements(#xmlel{children = Children}) ->
+    get_child_elements2(Children);
+get_child_elements(#xmlelement{children = Children}) ->
+    get_child_elements2(Children);
+get_child_elements(undefined) ->
+    [].
+
+get_child_elements2(undefined) ->
+    [];
+get_child_elements2([]) ->
+    [];
+get_child_elements2(Children) ->
+    lists:filter(fun is_element/1, Children).
+
+is_element(#xmlelement{}) -> true;
+is_element(#xmlel{})      -> true;
+is_element(_)             -> false.
+
+%% @spec (XML_Element, Name) -> New_XML_Element
+%%     XML_Element = xmlel() | xmlel_old() | undefined
+%%     Name = atom() | string()
+%%     New_XML_Element = xmlel() | xmlel_old()
+%% @doc Remove the first child with the name `Name'.
+
+-spec(remove_element/2 :: (xmlel_any(), xmlname()) -> xmlel_any()).
+
+remove_element(#xmlel{children = Children} = XML_Element, Name) ->
+    New_Children = remove_element2(Children, Name),
+    XML_Element#xmlel{children = New_Children};
+remove_element(#xmlelement{children = Children} = XML_Element, Name) ->
+    New_Children = remove_element2(Children, Name),
+    XML_Element#xmlelement{children = New_Children}.
+
+remove_element2(undefined, _Name) ->
+    undefined;
+remove_element2(Children, Name) ->
+    remove_element3(Children, Name, []).
+
+remove_element3([El | Rest], Name, Result) ->
+    case element_matches(El, Name) of
+        true  -> lists:append(lists:reverse(Result), Rest);
+        false -> remove_element3(Rest, Name, [El | Result])
+    end;
+remove_element3([], _Name, Result) ->
+    lists:reverse(Result).
+
+%% @spec (XML_Element, NS, Name) -> New_XML_Element
+%%     XML_Element = xmlel() | undefined
+%%     NS = atom() | string()
+%%     Name = atom() | string()
+%%     New_XML_Element = xmlel()
+%% @doc Remove the first child with the name `Name' in the namespace `NS'.
+
+-spec(remove_element/3 :: (xmlel(), xmlname(), xmlname()) -> xmlel()).
+
+remove_element(#xmlel{children = Children} = XML_Element, NS, Name) ->
+    New_Children = remove_element2(Children, NS, Name),
+    XML_Element#xmlel{children = New_Children}.
+
+remove_element2(undefined, _NS, _Name) ->
+    undefined;
+remove_element2(Children, NS, Name) ->
+    remove_element3(Children, NS, Name, []).
+
+remove_element3([El | Rest], NS, Name, Result) ->
+    case element_matches(El, NS, Name) of
+        true  -> lists:append(lists:reverse(Result), Rest);
+        false -> remove_element3(Rest, NS, Name, [El | Result])
+    end;
+remove_element3([], _NS, _Name, Result) ->
+    lists:reverse(Result).
+
+%% @spec (XML_Element, NS) -> New_XML_Element
+%%     XML_Element = xmlel() | undefined
+%%     NS = atom() | string()
+%%     New_XML_Element = xmlel()
+%% @doc Remove the first child in the namespace `NS'.
+
+-spec(remove_element_by_ns/2 :: (xmlel(), xmlname()) -> xmlel()).
+
+remove_element_by_ns(#xmlel{children = Children} = XML_Element, NS) ->
+    New_Children = remove_element_by_ns2(Children, NS),
+    XML_Element#xmlel{children = New_Children}.
+
+remove_element_by_ns2(undefined, _NS) ->
+    undefined;
+remove_element_by_ns2(Children, NS) ->
+    remove_element_by_ns3(Children, NS, []).
+
+remove_element_by_ns3([El | Rest], NS, Result) ->
+    case element_matches_by_ns(El, NS) of
+        true  -> lists:append(lists:reverse(Result), Rest);
+        false -> remove_element_by_ns3(Rest, NS, [El | Result])
+    end;
+remove_element_by_ns3([], _NS, Result) ->
+    lists:reverse(Result).
+
+%% @spec (XML_Element, Name) -> New_XML_Element
+%%     XML_Element = xmlel() | xmlel_old() | undefined
+%%     Name = atom() | string()
+%%     New_XML_Element = xmlel() | xmlel_old()
+%% @doc Remove all children with the name `Name'.
+
+-spec(remove_elements/2 :: (xmlel_any(), xmlname()) -> xmlel_any()).
+
+remove_elements(#xmlel{children = Children} = XML_Element, Name) ->
+    New_Children = remove_elements2(Children, Name),
+    XML_Element#xmlel{children = New_Children};
+remove_elements(#xmlelement{children = Children} = XML_Element, Name) ->
+    New_Children = remove_elements2(Children, Name),
+    XML_Element#xmlelement{children = New_Children}.
+
+remove_elements2(undefined, _Name) ->
+    undefined;
+remove_elements2(Children, Name) ->
+    remove_elements3(Children, Name, []).
+
+remove_elements3([El | Rest], Name, Result) ->
+    case element_matches(El, Name) of
+        true  -> remove_elements3(Rest, Name, Result);
+        false -> remove_elements3(Rest, Name, [El | Result])
+    end;
+remove_elements3([], _Name, Result) ->
+    lists:reverse(Result).
+
+%% @spec (XML_Element, NS, Name) -> New_XML_Element
+%%     XML_Element = xmlel() | undefined
+%%     NS = atom() | string()
+%%     Name = atom() | string()
+%%     New_XML_Element = xmlel()
+%% @doc Remove all children with the name `Name' in the namespace `NS'.
+
+-spec(remove_elements/3 :: (xmlel(), xmlname(), xmlname()) -> xmlel()).
+
+remove_elements(#xmlel{children = Children} = XML_Element, NS, Name) ->
+    New_Children = remove_elements2(Children, NS, Name),
+    XML_Element#xmlel{children = New_Children}.
+
+remove_elements2(undefined, _NS, _Name) ->
+    undefined;
+remove_elements2(Children, NS, Name) ->
+    remove_elements3(Children, NS, Name, []).
+
+remove_elements3([El | Rest], NS, Name, Result) ->
+    case element_matches(El, NS, Name) of
+        true  -> remove_elements3(Rest, NS, Name, Result);
+        false -> remove_elements3(Rest, NS, Name, [El | Result])
+    end;
+remove_elements3([], _NS, _Name, Result) ->
+    lists:reverse(Result).
+
+%% @spec (XML_Element, NS) -> New_XML_Element
+%%     XML_Element = xmlel() | undefined
+%%     NS = atom() | string()
+%%     New_XML_Element = xmlel()
+%% @doc Remove all children in the namespace `NS'.
+
+-spec(remove_elements_by_ns/2 :: (xmlel(), xmlname()) -> xmlel()).
+
+remove_elements_by_ns(#xmlel{children = Children} = XML_Element, NS) ->
+    New_Children = remove_elements_by_ns2(Children, NS),
+    XML_Element#xmlel{children = New_Children}.
+
+remove_elements_by_ns2(undefined, _NS) ->
+    undefined;
+remove_elements_by_ns2(Children, NS) ->
+    remove_elements_by_ns3(Children, NS, []).
+
+remove_elements_by_ns3([El | Rest], NS, Result) ->
+    case element_matches_by_ns(El, NS) of
+        true  -> remove_elements_by_ns3(Rest, NS, Result);
+        false -> remove_elements_by_ns3(Rest, NS, [El | Result])
+    end;
+remove_elements_by_ns3([], _NS, Result) ->
+    lists:reverse(Result).
+
+%% @spec (XML_Element, Child) -> New_XML_Element
+%%     XML_Element = xmlel() | xmlel_old()
+%%     Child = xmlel() | xmlel_old() | xmlcdata()
+%%     New_XML_Element = xmlel() | xmlel_old()
+%% @doc Prepend `Child' to `XML_Element''s children list.
+
+-spec(prepend_child/2 :: (xmlel_any(), xmlnode()) -> xmlel_any()).
+
+prepend_child(#xmlel{children = undefined} = XML_Element, Child) ->
+    New_Children = [Child],
+    XML_Element#xmlel{children = New_Children};
+prepend_child(#xmlelement{children = undefined} = XML_Element, Child) ->
+    New_Children = [Child],
+    XML_Element#xmlelement{children = New_Children};
+prepend_child(#xmlel{children = Children} = XML_Element, Child) ->
+    New_Children = [Child | Children],
+    XML_Element#xmlel{children = New_Children};
+prepend_child(#xmlelement{children = Children} = XML_Element, Child) ->
+    New_Children = [Child | Children],
+    XML_Element#xmlelement{children = New_Children}.
+
+%% @spec (XML_Element, Children) -> New_XML_Element
+%%     XML_Element = xmlel() | xmlel_old()
+%%     Children = [xmlel() | xmlel_old() | xmlcdata()]
+%%     New_XML_Element = xmlel() | xmlel_old()
+%% @doc Prepend every `Children' to `XML_Element''s children list.
+
+-spec(prepend_children/2 :: (xmlel_any(), [xmlnode()]) -> xmlel_any()).
+
+prepend_children(#xmlel{children = undefined} = XML_Element,
+		 New_Children) ->
+    XML_Element#xmlel{children = New_Children};
+prepend_children(#xmlelement{children = undefined} = XML_Element,
+		 New_Children) ->
+    XML_Element#xmlelement{children = New_Children};
+prepend_children(#xmlel{children = Children} = XML_Element,
+		 New_Children) ->
+    Concat_Children = New_Children ++ Children,
+    XML_Element#xmlel{children = Concat_Children};
+prepend_children(#xmlelement{children = Children} = XML_Element,
+		 New_Children) ->
+    Concat_Children = New_Children ++ Children,
+    XML_Element#xmlelement{children = Concat_Children}.
+
+%% @spec (XML_Element, Child) -> New_XML_Element
+%%     XML_Element = xmlel() | xmlel_old()
+%%     Child = xmlel() | xmlel_old() | xmlcdata()
+%%     New_XML_Element = xmlel() | xmlel_old()
+%% @doc Append `Child' to `XML_Element''s children list.
+
+-spec(append_child/2 :: (xmlel_any(), xmlnode()) -> xmlel_any()).
+
+append_child(#xmlel{children = undefined} = XML_Element, Child) ->
+    New_Children = [Child],
+    XML_Element#xmlel{children = New_Children};
+append_child(#xmlelement{children = undefined} = XML_Element, Child) ->
+    New_Children = [Child],
+    XML_Element#xmlelement{children = New_Children};
+append_child(#xmlel{children = Children} = XML_Element, Child) ->
+    New_Children = Children ++ [Child],
+    XML_Element#xmlel{children = New_Children};
+append_child(#xmlelement{children = Children} = XML_Element, Child) ->
+    New_Children = Children ++ [Child],
+    XML_Element#xmlelement{children = New_Children}.
+
+%% @spec (XML_Element, Children) -> New_XML_Element
+%%     XML_Element = xmlel() | xmlel_old()
+%%     Children = [xmlel() | xmlel_old() | xmlcdata()]
+%%     New_XML_Element = xmlel() | xmlel_old()
+%% @doc Append every `Children' to `XML_Element''s children list.
+
+-spec(append_children/2 :: (xmlel_any(), [xmlnode()]) -> xmlel_any()).
+
+append_children(#xmlel{children = undefined} = XML_Element,
+		New_Children) ->
+    XML_Element#xmlel{children = New_Children};
+append_children(#xmlelement{children = undefined} = XML_Element,
+		New_Children) ->
+    XML_Element#xmlelement{children = New_Children};
+append_children(#xmlel{children = Children} = XML_Element,
+		New_Children) ->
+    Concat_Children = Children ++ New_Children,
+    XML_Element#xmlel{children = Concat_Children};
+append_children(#xmlelement{children = Children} = XML_Element,
+		New_Children) ->
+    Concat_Children = Children ++ New_Children,
+    XML_Element#xmlelement{children = Concat_Children}.
+
+%% @spec (XML_Element, Old_Child, New_Child) -> New_XML_Element
+%%     XML_Element = xmlel() | xmlel_old()
+%%     Old_Child = xmlel() | xmlel_old() | xmlcdata()
+%%     New_Child = xmlel() | xmlel_old() | xmlcdata()
+%%     New_XML_Element = xmlel() | xmlel_old()
+%% @doc Replace `Old_Child' by `New_Child' in `XML_Element' children
+%% list.
+
+-spec(replace_child/3 :: (xmlel_any(), xmlnode(), xmlnode()) -> xmlel_any()).
+
+replace_child(#xmlel{children = Children} = XML_Element,
+	      Old_Child, New_Child) ->
+    New_Children = replace_child2(Children, Old_Child, New_Child),
+    XML_Element#xmlel{children = New_Children};
+replace_child(#xmlelement{children = Children} = XML_Element,
+	      Old_Child, New_Child) ->
+    New_Children = replace_child2(Children, Old_Child, New_Child),
+    XML_Element#xmlelement{children = New_Children}.
+
+replace_child2(undefined, _Old_Child, _New_Child) ->
+    undefined;
+replace_child2([], _Old_Child, _New_Child) ->
+    [];
+replace_child2(Children, Old_Child, New_Child) ->
+    [
+     case C of
+	 Old_Child -> New_Child;
+	 _         -> C
+     end || C <- Children
+	       ].
+
+%% @spec (XML_Element, Children) -> New_XML_Element
+%%     XML_Element = xmlel() | xmlel_old()
+%%     Children = [xmlel() | xmlel_old() | xmlcdata()]
+%%     New_XML_Element = xmlel() | xmlel_old()
+%% @doc Set `XML_Element''s children list to `Children'.
+%%
+%% Any existing child is removed.
+
+-spec(set_children/2 :: (xmlel_any(), [xmlnode()]) -> xmlel_any()).
+
+set_children(#xmlel{} = XML_Element, New_Children)
+  when is_list(New_Children) ->
+    XML_Element#xmlel{children = New_Children};
+set_children(#xmlelement{} = XML_Element, New_Children)
+  when is_list(New_Children) ->
+    XML_Element#xmlelement{children = New_Children}.
+
+%% @spec (Pred, XML_Element) -> New_XML_Element
+%%     Pred = function()
+%%     Child = xmlel() | xmlel_old()
+%%     XML_Element = xmlel() | xmlel_old()
+%%     New_XML_Element = xmlel() | xmlel_old()
+%% @doc Remove any children for which `Pred(Child)' doesn't return `true'.
+%%
+%% `Pred' has the following prototype:
+%% ```
+%% fun(XML_Element, Child) -> bool()
+%% '''
+%%
+%% If `children' is `undefined', the function isn't called.
+
+-spec(filter/2 ::
+      (fun((xmlel_any(), xmlnode()) -> bool()), xmlel_any()) -> xmlel_any()).
+
+filter(Pred, #xmlel{children = Children} = XML_Element)
+  when is_function(Pred, 2) ->
+    New_Children = filter2(Pred, XML_Element, Children),
+    XML_Element#xmlel{children = New_Children};
+filter(Pred, #xmlelement{children = Children} = XML_Element)
+  when is_function(Pred, 2) ->
+    New_Children = filter2(Pred, XML_Element, Children),
+    XML_Element#xmlelement{children = New_Children}.
+
+filter2(_Pred, _XML_Element, undefined) ->
+    undefined;
+filter2(Pred, XML_Element, Children) ->
+    [C || C <- Children, Pred(XML_Element, C)].
+
+%% @spec (Fun, Acc0, XML_Element) -> Acc1
+%%     Fun = function()
+%%     Acc_In = term()
+%%     Child = xmlel() | xmlel_old() | undefined
+%%     Acc_Out = term()
+%%     Acc0 = term()
+%%     XML_Element = xmlel() | xmlel_old()
+%%     Acc1 = term()
+%% @doc Call `Fun' for each `XML_Element''s children and return the last
+%% accumulator.
+%%
+%% `Fun' has the following prototype:
+%% ```
+%% fun(Acc_In, XML_Element, Child) -> Acc_Out
+%% '''
+
+-spec(fold/3 ::
+      (fun((any(), xmlel_any(), xmlnode() | undefined) -> any()), any(), xmlel_any()) ->
+	     any()).
+
+fold(Fun, Acc0, #xmlel{children = Children} = XML_Element)
+  when is_function(Fun, 3) ->
+    fold2(Fun, Acc0, XML_Element, Children);
+fold(Fun, Acc0, #xmlelement{children = Children} = XML_Element)
+  when is_function(Fun, 3) ->
+    fold2(Fun, Acc0, XML_Element, Children).
+
+fold2(Fun, Acc_In, XML_Element, undefined) ->
+    Fun(Acc_In, XML_Element, undefined);
+fold2(Fun, Acc_In, XML_Element, [Child | Rest]) ->
+    fold2(Fun, Fun(Acc_In, XML_Element, Child), XML_Element, Rest);
+fold2(_Fun, Acc_Out, _XML_Element, []) ->
+    Acc_Out.
+
+%% @spec (Fun, XML_Element) -> ok
+%%     Fun = function()
+%%     Child = xmlel() | xmlel_old() | undefined
+%%     XML_Element = xmlel() | xmlel_old()
+%% @doc Call `Fun' for each `XML_Element''s children.
+%%
+%% `Fun' return value is ignored.
+%%
+%% `Fun' has the following prototype:
+%% ```
+%% fun(XML_Element, Child) -> Ignored
+%% '''
+
+-spec(foreach/2 ::
+      (fun((xmlel_any(), xmlnode() | undefined) -> any()), xmlel_any()) ->
+	     ok).
+
+foreach(Fun, #xmlel{children = Children} = XML_Element)
+  when is_function(Fun, 2) ->
+    foreach2(Fun, XML_Element, Children);
+foreach(Fun, #xmlelement{children = Children} = XML_Element)
+  when is_function(Fun, 2) ->
+    foreach2(Fun, XML_Element, Children).
+
+foreach2(Fun, XML_Element, undefined) ->
+    Fun(XML_Element, undefined),
+    ok;
+foreach2(Fun, XML_Element, [Child | Rest]) ->
+    Fun(XML_Element, Child),
+    foreach2(Fun, XML_Element, Rest);
+foreach2(_Fun, _XML_Element, []) ->
+    ok.
+
+%% @spec(Fun, XML_Element) -> New_XML_Element
+%%     Fun = function()
+%%     Child = xmlel() | xmlel_old()
+%%     New_Child = xmlel() | xmlel_old()
+%%     XML_Element = xmlel() | xmlel_old()
+%%     New_XML_Element = xmlel() | xmlel_old()
+%% @doc Apply `Fun' on each child and replace the original one with the
+%% function return value.
+%%
+%% `Fun' has the following prototype:
+%% ```
+%% fun(XML_Element, Child) -> New_Child
+%% '''
+%%
+%% If `children' is `undefined', the function isn't called.
+
+-spec(map/2 ::
+      (fun((xmlel_any(), xmlnode()) -> xmlnode()), xmlel_any()) ->
+	     xmlel_any()).
+
+map(Fun, #xmlel{children = Children} = XML_Element)
+  when is_function(Fun, 2) ->
+    New_Children = map2(Fun, XML_Element, Children),
+    XML_Element#xmlel{children = New_Children};
+map(Fun, #xmlelement{children = Children} = XML_Element)
+  when is_function(Fun, 2) ->
+    New_Children = map2(Fun, XML_Element, Children),
+    XML_Element#xmlelement{children = New_Children}.
+
+map2(_Fun, _XML_Element, undefined) ->
+    undefined;
+map2(Fun, XML_Element, [Child | Rest]) ->
+    [Fun(XML_Element, Child) | map2(Fun, XML_Element, Rest)];
+map2(_Fun, _XML_Element, []) ->
+    [].
+
+%% --------------------------------------------------------------------
+%% Functions to handle XML text nodes.
+%% This is similar to the DOM interface but NOT compliant.
+%% --------------------------------------------------------------------
+
+%% @spec (Value) -> CData
+%%     Value = binary() | string() | atom() | integer()
+%%     CData = xmlcdata()
+%% @doc Create a CData node from a value.
+
+-spec(cdata/1 :: (binary() | string() | atom() | integer()) -> xmlcdata()).
+
+cdata(CData) ->
+    #xmlcdata{cdata = exmpp_utils:any_to_binary(CData)}.
+
+%% @spec (Children) -> CData
+%%     Children = [xmlel() | xmlel_old() | xmlcdata()] | undefined
+%%     CData = binary()
+%% @doc Concatenate and return any character data from the given
+%% children list.
+
+-spec(get_cdata_from_list/1 :: ([xmlnode()] | undefined) -> binary()).
+
+get_cdata_from_list(undefined) ->
+    <<>>;
+get_cdata_from_list(Children) ->
+    %% The function list_to_binary/1 will concatenate every
+    %% binaries in the list returned by get_cdata_from_list2/2.
+    list_to_binary(get_cdata_from_list2(Children, [])).
+
+get_cdata_from_list2([#xmlcdata{cdata = Chunk} | Rest], Data) ->
+    get_cdata_from_list2(Rest, [Chunk | Data]);
+get_cdata_from_list2([_ | Rest], Data) ->
+    get_cdata_from_list2(Rest, Data);
+get_cdata_from_list2([], Data) ->
+    lists:reverse(Data).
+
+%% @spec (Children) -> CData
+%%     Children = [xmlel() | xmlel_old() | xmlcdata()] | undefined
+%%     CData = string()
+%% @doc Concatenate and return any character data from the given
+%% children list.
+
+-spec(get_cdata_from_list_as_list/1 :: ([xmlnode()] | undefined) -> string()).
+
+get_cdata_from_list_as_list(Children) ->
+    binary_to_list(get_cdata_from_list(Children)).
+
+%% @spec (XML_Element) -> CData
+%%     XML_Element = xmlel() | xmlel_old() | undefined
+%%     CData = binary()
+%% @doc Concatenate and return any character data of the given XML
+%% element.
+%%
+%% This function is `get_tag_cdata/1' renamed in `get_cdata/1'. It
+%% doesn't take a list of children like the old `get_cdata/1', use
+%% {@link get_cdata_from_list/1} for this purpose!
+
+-spec(get_cdata/1 :: (xmlel_any()) -> binary()).
+
+get_cdata(#xmlel{children = Children}) ->
+    get_cdata_from_list(Children);
+get_cdata(#xmlelement{children = Children}) ->
+    get_cdata_from_list(Children);
+get_cdata(undefined) ->
+    %% This clause makes it possible to write code like:
+    %% exmpp_xml:get_cdata(exmpp_xml:get_element(XML_El, body))
+    <<>>.
+
+%% @spec (XML_Element) -> CData
+%%     XML_Element = xmlel() | xmlel_old() | undefined
+%%     CData = string()
+%% @doc Concatenate and return any character data of the given XML
+%% element.
+
+-spec(get_cdata_as_list/1 :: (xmlel_any()) -> string()).
+
+get_cdata_as_list(XML_Element) ->
+    binary_to_list(get_cdata(XML_Element)).
+
+%% @spec (Children) -> New_Children
+%%     Children = [xmlel() | xmlel_old() | xmlcdata()] | undefined
+%%     New_Children = [xmlel() | xmlel_old() | xmlcdata()] | undefined
+%% @doc Regroup all splitted {@link xmlcdata()} in a unique one.
+
+-spec(normalize_cdata_in_list/1 ::
+      ([xmlnode()] | undefined) -> [xmlnode()] | undefined).
+
+normalize_cdata_in_list(undefined) ->
+    undefined;
+normalize_cdata_in_list([]) ->
+    [];
+normalize_cdata_in_list(Children) ->
+    normalize_cdata_in_list2(Children, [], []).
+
+normalize_cdata_in_list2([], Current_CDatas, New_Children) ->
+    New_Children1 = case list_to_binary(lists:reverse(Current_CDatas)) of
+			<<>>  -> [New_Children];
+			CData -> [#xmlcdata{cdata = CData} | New_Children]
+		    end,
+    lists:reverse(lists:flatten(New_Children1));
+normalize_cdata_in_list2([#xmlcdata{cdata = CData} | Rest], Current_CDatas,
+			 New_Children) ->
+    normalize_cdata_in_list2(Rest, [CData | Current_CDatas], New_Children);
+normalize_cdata_in_list2([XML_Node | Rest], Current_CDatas, New_Children) ->
+    New_Children1 = case list_to_binary(lists:reverse(Current_CDatas)) of
+			<<>>  -> [XML_Node | New_Children];
+			CData -> [XML_Node, cdata(CData) | New_Children]
+		    end,
+    normalize_cdata_in_list2(Rest, [], New_Children1).
+
+%% @spec (XML_Element) -> New_XML_Element
+%%     XML_Element = xmlel() | xmlel_old()
+%%     New_XML_Element = xmlel() | xmlel_old()
+%% @doc Regroup all splitted {@link xmlcdata()} in a unique one
+%% and remove empty ones.
+%%
+%% One caveats is the reconstructed {@link xmlcdata()} is appended at
+%% the end of the children list.
+
+-spec(normalize_cdata/1 :: (xmlel_any()) -> xmlel_any()).
+
+normalize_cdata(#xmlel{children = Children} = XML_Element) ->
+    New_Children = normalize_cdata_in_list(Children),
+    XML_Element#xmlel{children = New_Children};
+normalize_cdata(#xmlelement{children = Children} = XML_Element) ->
+    New_Children = normalize_cdata_in_list(Children),
+    XML_Element#xmlelement{children = New_Children}.
+
+%% @spec (Children, CData) -> New_Children
+%%     Children = [xmlel() | xmlel_old() | xmlcdata()] | undefined
+%%     CData = binary() | string() | atom() | integer()
+%%     New_Children = [xmlel() | xmlel_old() | xmlcdata()]
+%% @doc Replace any character data by `CData' in the list.
+%%
+%% The new `CData' is placed at the end of the children list.
+
+-spec(set_cdata_in_list/2 ::
+      ([xmlnode()] | undefined, binary() | string() | atom() | integer()) ->
+	     [xmlnode()]).
+
+set_cdata_in_list(undefined, CData) ->
+    [cdata(CData)];
+set_cdata_in_list(Children, CData) ->
+    Purged_Children = remove_cdata_from_list(Children),
+    Purged_Children ++ [cdata(CData)].
+
+%% @spec (XML_Element, CData) -> New_XML_Element
+%%     XML_Element = xmlel() | xmlel_old()
+%%     CData = binary() | string() | atom() | integer()
+%%     New_XML_Element = xmlel() | xmlel_old()
+%% @doc Replace any character data by `CData'.
+%%
+%% The new `CData' is placed at the end of the children list.
+
+-spec(set_cdata/2 ::
+      (xmlel_any(), binary() | string() | atom() | integer()) -> xmlel_any()).
+
+set_cdata(#xmlel{children = Children} = XML_Element, CData) ->
+    New_Children = set_cdata_in_list(Children, CData),
+    XML_Element#xmlel{children = New_Children};
+set_cdata(#xmlelement{children = Children} = XML_Element, CData) ->
+    New_Children = set_cdata_in_list(Children, CData),
+    XML_Element#xmlelement{children = New_Children}.
+
+%% @spec (Children, CData) -> New_Children
+%%     Children = [xmlel() | xmlel_old() | xmlcdata()] | undefined
+%%     CData = binary() | string() | atom() | integer()
+%%     New_Children = [xmlel() | xmlel_old() | xmlcdata()]
+%% @doc Append `CData' to `Children' list.
+
+-spec(append_cdata_to_list/2 ::
+      ([xmlnode()] | undefined, binary() | string() | atom() | integer()) ->
+	     [xmlnode()]).
+
+append_cdata_to_list(undefined, CData) ->
+    [cdata(CData)];
+append_cdata_to_list(Children, CData) ->
+    Children ++ [cdata(CData)].
+
+%% @spec (XML_Element, CData) -> New_XML_Element
+%%     XML_Element = xmlel() | xmlel_old()
+%%     CData = binary() | string() | atom() | integer()
+%%     New_XML_Element = xmlel() | xmlel_old()
+%% @doc Append `Child' to `XML_Element''s children list.
+
+-spec(append_cdata/2 ::
+      (xmlel_any(), binary() | string() | atom() | integer()) -> xmlel_any()).
+
+append_cdata(#xmlel{children = Children} = XML_Element, CData) ->
+    New_Children = append_cdata_to_list(Children, CData),
+    XML_Element#xmlel{children = New_Children};
+append_cdata(#xmlelement{children = Children} = XML_Element, CData) ->
+    New_Children = append_cdata_to_list(Children, CData),
+    XML_Element#xmlelement{children = New_Children}.
+
+%% @spec (Children) -> New_Children
+%%     Children = [xmlel() | xmlel_old() | xmlcdata()] | undefined
+%%     New_Children = [xmlel() | xmlel_old()] | undefined
+%% @doc Remove any character data from the given XML element children
+%% list.
+
+-spec(remove_cdata_from_list/1 ::
+      ([xmlnode()] | undefined) -> [xmlnode()] | undefined).
+
+remove_cdata_from_list(undefined) ->
+    undefined;
+remove_cdata_from_list(Children) ->
+    [Child || Child <- Children, remove_cdata_from_list2(Child)].
+
+remove_cdata_from_list2(#xmlcdata{}) -> false;
+remove_cdata_from_list2(_)           -> true.
+
+%% @spec (XML_Element) -> New_XML_Element
+%%     XML_Element = xmlel() | xmlel_old()
+%%     New_XML_Element = xmlel() | xmlel_old()
+%% @doc Remove any character data from the given XML element.
+%%
+%% This function doesn't take a list of children like the old
+%% `remove_cdata/1', use {@link remove_cdata_from_list/1} for this
+%% purpose!
+
+-spec(remove_cdata/1 :: (xmlel_any()) -> xmlel_any()).
+
+remove_cdata(#xmlel{children = Children} = XML_Element) ->
+    New_Children = remove_cdata_from_list(Children),
+    XML_Element#xmlel{children = New_Children};
+remove_cdata(#xmlelement{children = Children} = XML_Element) ->
+    New_Children = remove_cdata_from_list(Children),
+    XML_Element#xmlelement{children = New_Children}.
+
+%% @spec (CData) -> bool()
+%%     CData = xmlel() | xmlel_old() | xmlcdata()
+%% @doc Tell if a text node contains only whitespaces.
+%%
+%% Of course, if an XML element is given in argument, it will return
+%%`false'.
+%%
+%% Whitespaces are `\s', `\t', `\n' and `\r'.
+
+-spec(is_whitespace/1 :: (xmlnode()) -> bool()).
+
+is_whitespace(#xmlcdata{cdata = CData}) ->
+    is_whitespace2(CData);
+is_whitespace(_) ->
+    false.
+
+is_whitespace2(<<C:8, Rest/binary>>)
+  when C == $\s; C == $\t; C == $\n; C == $\r ->
+    is_whitespace2(Rest);
+is_whitespace2(<<>>) ->
+    true;
+is_whitespace2(_CData) ->
+    false.
+
+%% @spec (Children) -> New_Children
+%%     Children = [xmlel() | xmlel_old() | xmlcdata()] | undefined
+%%     New_Children = [xmlel() | xmlel_old() | xmlcdata()] | undefined
+%% @doc Remove text nodes containing only whitespaces.
+%%
+%% @see is_whitespace/1.
+
+-spec(remove_whitespaces_from_list/1 ::
+      ([xmlnode()] | undefined) -> [xmlnode()] | undefined).
+
+remove_whitespaces_from_list(undefined) ->
+    undefined;
+remove_whitespaces_from_list(Children) ->
+    [Child || Child <- Children, not is_whitespace(Child)].
+
+%% @spec (XML_Element) -> New_XML_Element
+%%     XML_Element = xmlel() | xmlel_old()
+%%     New_XML_Element = xmlel() | xmlel_old()
+%% @doc Remove text nodes containing only whitespaces.
+%%
+%% @see is_whitespace/1.
+
+-spec(remove_whitespaces/1 :: (xmlel_any()) -> xmlel_any()).
+
+remove_whitespaces(#xmlel{children = Children} = XML_Element) ->
+    New_Children = remove_whitespaces_from_list(Children),
+    XML_Element#xmlel{children = New_Children};
+remove_whitespaces(#xmlelement{children = Children} = XML_Element) ->
+    New_Children = remove_whitespaces_from_list(Children),
+    XML_Element#xmlelement{children = New_Children}.
+
+%% @spec (XML_Element) -> New_XML_Element
+%%     XML_Element = xmlel() | xmlel_old()
+%%     New_XML_Element = xmlel() | xmlel_old()
+%% @doc Remove text nodes containing only whitespaces in every elements
+%% in the given tree.
+%%
+%% @see is_whitespace/1.
+
+-spec(remove_whitespaces_deeply/1 :: (xmlel_any()) -> xmlel_any()).
+
+remove_whitespaces_deeply(#xmlel{children = Children} = XML_Element) ->
+    New_Children = remove_whitespaces_deeply2(Children),
+    XML_Element#xmlel{children = New_Children};
+remove_whitespaces_deeply(#xmlelement{children = Children} = XML_Element) ->
+    New_Children = remove_whitespaces_deeply2(Children),
+    XML_Element#xmlelement{children = New_Children}.
+
+remove_whitespaces_deeply2(undefined) ->
+    undefined;
+remove_whitespaces_deeply2(Children) ->
+    remove_whitespaces_deeply3(Children, []).
+
+remove_whitespaces_deeply3([El | Rest], Result)
+  when is_record(El, xmlel); is_record(El, xmlelement) ->
+    New_El = remove_whitespaces_deeply(El),
+    remove_whitespaces_deeply3(Rest, [New_El | Result]);
+remove_whitespaces_deeply3([#xmlcdata{} = CData | Rest], Result) ->
+    case is_whitespace(CData) of
+        true  -> remove_whitespaces_deeply3(Rest, Result);
+        false -> remove_whitespaces_deeply3(Rest, [CData | Result])
+    end;
+remove_whitespaces_deeply3([Other | Rest], Result) ->
+    remove_whitespaces_deeply3(Rest, [Other | Result]);
+remove_whitespaces_deeply3([], Result) ->
+    lists:reverse(Result).
+
+%% --------------------------------------------------------------------
+%% Function to walk the tree.
+%% --------------------------------------------------------------------
+
+%% @spec (XML_Element, Path) -> XML_Subelement | Attr_Value | CData | Not_Found
+%%     XML_Element = xmlel() | xmlel_old()
+%%     Path = [pathcomponent()]
+%%     XML_Subelement = xmlel() | xmlel_old()
+%%     Attr_Value = string()
+%%     CData = binary()
+%%     Not_Found = nil() | binary() | undefined
+%% @throws {xml, path, ending_component_not_at_the_end, Path} |
+%%         {xml, path, invalid_component,               Path}
+%% @doc Follow the given path and return what's pointed by the last
+%% component of it.
+%%
+%% `Path' is a list of path components. If a component points to an
+%% {@link xmlel()} or {@link xmlel_old()}, the function will
+%% look for this element and will use it as a base for the next path
+%% component. If a component points to an attribute, the function will
+%% look for this attribute in the current element and return its value
+%% (see {@link get_attribute/2} for the possible return values).
+%% If a component asks for character data, the function will return
+%% character data for the current element (see {@link get_cdata/1}
+%% for possible return values). A path will not be followed further
+%% after an attribute or a character data component. If an XML element
+%% isn't found while walking through the path, an empty string is
+%% returned.
+
+-spec(get_path/2 ::
+      (xmlel(), xmlpath()) -> xmlel_any() | binary() | string() | undefined).
+
+get_path(XML_Element, [{element, Name} | Path]) ->
+    case get_element(XML_Element, Name) of
+        undefined      -> get_path_not_found(Path);
+        XML_Subelement -> get_path(XML_Subelement, Path)
+    end;
+get_path(XML_Element, [{element, NS, Name} | Path]) ->
+    case get_element(XML_Element, NS, Name) of
+        undefined      -> get_path_not_found(Path);
+        XML_Subelement -> get_path(XML_Subelement, Path)
+    end;
+get_path(XML_Element, [{attribute, Name, Default}]) ->
+    get_attribute(XML_Element, Name, Default);
+get_path(XML_Element, [{attribute, NS, Name, Default}]) ->
+    get_attribute(XML_Element, NS, Name, Default);
+get_path(XML_Element, [cdata]) ->
+    get_cdata(XML_Element);
+get_path(XML_Element, [cdata_as_list]) ->
+    get_cdata_as_list(XML_Element);
+get_path(XML_Element, []) ->
+    XML_Element;
+get_path(_XML_Element, [{attribute, _Name} | _Rest] = Path) ->
+    throw({xml, path, ending_component_not_at_the_end, Path});
+get_path(_XML_Element, [cdata | _Rest] = Path) ->
+    throw({xml, path, ending_component_not_at_the_end, Path});
+get_path(_XML_Element, [cdata_as_list | _Rest] = Path) ->
+    throw({xml, path, ending_component_not_at_the_end, Path});
+get_path(_XML_Element, Path) ->
+    throw({xml, path, invalid_component, Path}).
+
+get_path_not_found([{element, _Name} | Rest]) ->
+    get_path_not_found(Rest);
+get_path_not_found([{attribute, _Name}]) ->
+    "";
+get_path_not_found([{attribute, _NS, _Name}]) ->
+    "";
+get_path_not_found([cdata]) ->
+    <<>>;
+get_path_not_found([cdata_as_list]) ->
+    "";
+get_path_not_found([]) ->
+    undefined;
+get_path_not_found([{attribute, _Name} | _Rest] = Path) ->
+    throw({xml, path, ending_component_not_at_the_end, Path});
+get_path_not_found([cdata | _Rest] = Path) ->
+    throw({xml, path, ending_component_not_at_the_end, Path});
+get_path_not_found([cdata_as_list | _Rest] = Path) ->
+    throw({xml, path, ending_component_not_at_the_end, Path});
+get_path_not_found(Path) ->
+    throw({xml, path, invalid_component, Path}).
+
+%% --------------------------------------------------------------------
+%% Converters.
+%% --------------------------------------------------------------------
+
+%% @spec (XML_NS_Element) -> XML_Element
+%%     XML_NS_Element = xmlel() | xmlel_old() | xmlcdata()
+%%     XML_Element = xmlel_old() | xmlcdata()
+%% @doc Convert an {@link xmlel()} to an {@link xmlel_old()} tuple.
+%%
+%% Other tuples are ignored.
+
+-spec(xmlel_to_xmlelement/1 :: (xmlel()) -> xmlel_old()).
+
+xmlel_to_xmlelement(XML_Element) ->
+    xmlel_to_xmlelement(XML_Element, [], []).
+
+%% @spec (XML_NS_Element, Default_NS, Prefixed_NS) -> XML_Element
+%%     XML_NS_Element = xmlel() | xmlel_old() | xmlcdata()
+%%     Default_NS = [NS | Equivalent_NSs]
+%%     Prefixed_NS = [{NS, Prefix}]
+%%     NS = atom() | string()
+%%     Equivalent_NSs = [NS]
+%%     Prefix = string()
+%%     XML_Element = xmlel_old() | xmlcdata()
+%% @doc Convert an {@link xmlel()} to an {@link xmlel_old()} tuple.
+%%
+%% Other tuples are ignored.
+%%
+%% `Default_NS' and `Prefixed_NS' contain namespace declaration which
+%% occured above this fragment in the tree. The order in the first list
+%% is important: declarations are sorted from the most recent one to
+%% the oldest one.
+%%
+%% This may be useful in XMPP context where a majority of clients or
+%% servers expects a `stream' prefix for the `<stream>' tag and the
+%% default namespace declaration in this same element.
+%%
+%% `Default_NS' may be a list of equivalent namespaces. This is useful
+%% when stanzas go to and from streams with compatible but different
+%% namespaces. Here is an example with `jabber:client', `jabber:server'
+%% and `jabber:component:accept':
+%% ```
+%% exmpp_stanza:to_list(El,
+%%   [?NS_JABBER_CLIENT, ?NS_JABBER_SERVER, ?NS_COMPONENT_ACCEPT]).
+%% '''
+
+-spec(xmlel_to_xmlelement/3 ::
+      (xmlel(), xmldefaultnss(), xmlprefixednss()) -> xmlel_old()).
+
+xmlel_to_xmlelement(#xmlel{children = Children} = El,
+		    Default_NS, Prefixed_NS) ->
+    %% Unresolve namespaces.
+    {New_Name, New_Attrs, Default_NS1, Prefixed_NS1} = unresolve_xmlel_nss(El,
+									   Default_NS, Prefixed_NS),
+    %% Treat children.
+    New_Children = xmlels_to_xmlelements(Children, Default_NS1, Prefixed_NS1),
+    %% Now, create the final #xmlelement.
+    #xmlelement{name = New_Name, attrs = New_Attrs, children = New_Children};
+xmlel_to_xmlelement(#xmlendtag{} = Endtag,
+		    Default_NS, Prefixed_NS) ->
+    %% Unresolve namespaces.
+    New_Name = unresolve_endtag_nss(Endtag, Default_NS, Prefixed_NS),
+    %% Now, recreate the final #xmlendtag.
+    #xmlendtag{ns = undefined, name = New_Name};
+xmlel_to_xmlelement(XML_El, _Default_NS, _Prefixed_NS) ->
+    %% xmlel_old() or xmlcdata().
+    XML_El.
+
+unresolve_xmlel_nss(#xmlel{ns = NS, name = Name, attrs = Attrs,
+			   declared_ns = Declared_NS},
+		    Default_NS, Prefixed_NS) ->
+    %% First, we add namespace declarations to element attributes.
+    {Prefix, Attrs1, Default_NS1, Prefixed_NS1} =
+	forward_declare_ns(NS, lists:reverse(Declared_NS), Attrs,
+			   Default_NS, Prefixed_NS),
+    %% Then, we convert attributes ot the old format.
+    {New_Attrs, Prefixed_NS2} = xmlnsattributes_to_xmlattributes(Attrs1,
+								 Prefixed_NS1),
+    %% We can now proceed with the modification of the name.
+    Name_S = exmpp_known_elems:elem_as_list(Name),
+    New_Name = case Prefix of
+		   none -> Name_S;
+		   _    -> Prefix ++ ":" ++ Name_S
+	       end,
+    {New_Name, New_Attrs, Default_NS1, Prefixed_NS2}.
+
+unresolve_endtag_nss(#xmlendtag{ns = NS, name = Name},
+		     Default_NS, Prefixed_NS) ->
+    Name_S = exmpp_known_nss:ns_as_list(Name),
+    Use_Default_NS = use_default_ns(NS, Default_NS),
+    case Use_Default_NS of
+        true ->
+	    %% This end tag uses the default namespace.
+            Name_S;
+        false ->
+	    %% Search a prefix in already declared namespaces.
+            case search_in_prefixed_ns(NS, Prefixed_NS) of
+                undefined ->
+		    %% Too late to declare something; the
+		    %% namespace should have been provided
+		    %% by the caller.
+                    Name_S;
+                Prefix ->
+                    Prefix ++ ":" ++ Name_S
+            end
+    end.
+
+%% Function called to convert element attributes.
+xmlnsattributes_to_xmlattributes(Attrs, Prefixed_NS) ->
+    xmlnsattributes_to_xmlattributes2(Attrs, Prefixed_NS, []).
+
+xmlnsattributes_to_xmlattributes2([#xmlattr{ns = NS, name = Name,
+					    value = Value} | Rest],
+				  Prefixed_NS, Converted_Attrs) ->
+    Name_S = exmpp_known_attrs:attr_as_list(Name),
+    {New_Name, Converted_Attrs1, Prefixed_NS1} =
+	case NS of
+	    undefined ->
+		{Name_S,
+		 Converted_Attrs,
+		 Prefixed_NS
+		};
+	    _ ->
+		case search_in_prefixed_ns(NS, Prefixed_NS) of
+		    undefined ->
+			%% Never declared. A prefix must be generated.
+			Prefix = new_auto_prefix(Prefixed_NS),
+			NS_S = exmpp_known_nss:ns_as_list(NS),
+			NS_Decl = {"xmlns:" ++ Prefix, NS_S},
+			{Prefix ++ ":" ++ Name_S,
+			 [NS_Decl | Converted_Attrs],
+			 [{NS, Prefix} | Prefixed_NS]
+			};
+		    Prefix ->
+			%% Use an already declared prefix.
+			{Prefix ++ ":" ++ Name_S,
+			 Converted_Attrs,
+			 Prefixed_NS
+			}
+		end
+	end,
+    %% XXX The value is converted from binary() to list() because
+    %% the old format required it. But this function is also used by
+    %% document_to_iolist/1 & friends. In this context, the call to
+    %% binary_to_list/1 is a waste of time.
+    xmlnsattributes_to_xmlattributes2(Rest, Prefixed_NS1,
+				      [{New_Name, binary_to_list(Value)}
+				       | Converted_Attrs1]);
+xmlnsattributes_to_xmlattributes2([], Prefixed_NS, Converted_Attrs) ->
+    {lists:reverse(Converted_Attrs), Prefixed_NS}.
+
+%% Function called to convert element's children.
+xmlels_to_xmlelements(undefined, _Default_NS, _Prefixed_NS) ->
+    undefined;
+xmlels_to_xmlelements([], _Default_NS, _Prefixed_NS) ->
+    [];
+xmlels_to_xmlelements(XML_Elements, Default_NS, Prefixed_NS) ->
+    xmlels_to_xmlelements2(XML_Elements, [], Default_NS, Prefixed_NS).
+
+xmlels_to_xmlelements2([XML_NS_Element | Rest], XML_Elements,
+		       Default_NS, Prefixed_NS) ->
+    XML_Element = xmlel_to_xmlelement(XML_NS_Element,
+				      Default_NS, Prefixed_NS),
+    xmlels_to_xmlelements2(Rest, [XML_Element | XML_Elements],
+			   Default_NS, Prefixed_NS);
+xmlels_to_xmlelements2([], XML_Elements, _Default_NS, _Prefixed_NS) ->
+    lists:reverse(XML_Elements).
+
+%% Helpers.
+use_default_ns(NS, Default_NS) ->
+    case Default_NS of
+        [NS | _] ->
+            true;
+        [[X | _] = Default_NS1 | _] when is_atom(X); is_list(X) ->
+            lists:member(NS, Default_NS1);
+        _ ->
+            false
+    end.
+
+search_in_prefixed_ns(NS, Prefixed_NS) ->
+    case lists:keysearch(NS, 1, Prefixed_NS) of
+        {value, {_NS, Prefix}} ->
+            Prefix;
+        _ ->
+            case lists:keysearch(NS, 1, ?IMPLICIT_PREFIXED_NS) of
+                {value, {_NS, Prefix}} ->
+                    Prefix;
+                _ ->
+                    undefined
+            end
+    end.
+
+forward_declare_ns(Curr_NS, [{undefined = NS, none} | Rest],
+		   Attrs, [], Prefixed_NS) ->
+    New_Default_NS = [NS],
+    forward_declare_ns(Curr_NS, Rest,
+		       Attrs, New_Default_NS, Prefixed_NS);
+forward_declare_ns(undefined = Curr_NS, Declared_NS,
+		   Attrs, [], Prefixed_NS) ->
+    New_Default_NS = [Curr_NS],
+    forward_declare_ns(Curr_NS, Declared_NS,
+		       Attrs, New_Default_NS, Prefixed_NS);
+forward_declare_ns(Curr_NS, [{NS, none} | Rest],
+		   Attrs, Default_NS, Prefixed_NS) ->
+    %% Forward-declare a default namespace.
+    %% XXX This would benefit the addition of exmpp_known_*:*_as_binary/1.
+    NS_S = exmpp_known_nss:ns_as_list(NS),
+    NS_Decl = attribute("xmlns", NS_S),
+    New_Attrs = [NS_Decl | Attrs],
+    New_Default_NS = [NS | Default_NS],
+    forward_declare_ns(Curr_NS, Rest, New_Attrs, New_Default_NS, Prefixed_NS);
+forward_declare_ns(Curr_NS, [{NS, Prefix} = PNS | Rest],
+		   Attrs, Default_NS, Prefixed_NS) ->
+    case lists:member(PNS, ?IMPLICIT_PREFIXED_NS) of
+        true ->
+	    %% This is an implicitly declared namespace (with the same
+	    %% prefix). We do not re-declare it.
+            forward_declare_ns(Curr_NS, Rest, Attrs,
+			       Default_NS, Prefixed_NS);
+        _ ->
+	    %% Forward-declare a prefixed namespace.
+	    %% XXX This would benefit the addition of
+	    %% exmpp_known_*:*_as_binary/1.
+            NS_S = exmpp_known_nss:ns_as_list(NS),
+            NS_Decl = attribute("xmlns:" ++ Prefix, NS_S),
+            New_Attrs = [NS_Decl | Attrs],
+            Prefixed_NS1 = [PNS | Prefixed_NS],
+            forward_declare_ns(Curr_NS, Rest, New_Attrs,
+			       Default_NS, Prefixed_NS1)
+    end;
+forward_declare_ns(Curr_NS, [], Attrs, Default_NS, Prefixed_NS) ->
+    %% We finish with the current namespace of the element.
+    Use_Default_NS = use_default_ns(Curr_NS, Default_NS),
+    case Use_Default_NS of
+        true ->
+	    %% The element belongs to the current default namespace.
+	    %% There's nothing to do.
+            {none, Attrs, Default_NS, Prefixed_NS};
+        false ->
+	    %% We look for a prefixed namespace.
+            case search_in_prefixed_ns(Curr_NS, Prefixed_NS) of
+                undefined ->
+		    %% This element uses a new namespace: it'll become
+		    %% the new default one.
+		    %% XXX This would benefit the addition of
+		    %% exmpp_known_*:*_as_binary/1.
+                    Curr_NS_S = exmpp_known_nss:ns_as_list(Curr_NS),
+                    NS_Decl = attribute("xmlns", Curr_NS_S),
+                    New_Attrs = [NS_Decl | Attrs],
+                    Default_NS1 = [Curr_NS | Default_NS],
+                    {none, New_Attrs, Default_NS1, Prefixed_NS};
+                Prefix ->
+		    %% Found one: we return the corresponding prefix.
+                    {Prefix, Attrs, Default_NS, Prefixed_NS}
+            end
+    end.
+
+new_auto_prefix(Prefixed_NS) ->
+    new_auto_prefix2(Prefixed_NS, 1).
+
+new_auto_prefix2(Prefixed_NS, Seq) ->
+    Prefix = "ns" ++ integer_to_list(Seq),
+    case lists:keymember(Prefix, 2, Prefixed_NS) of
+        true  -> new_auto_prefix2(Prefixed_NS, Seq + 1);
+        false -> Prefix
+    end.
+
+%% @spec (XML_Element) -> XML_NS_Element
+%%     XML_Element = xmlel_old() | xmlcdata()
+%%     XML_NS_Element = xmlel() | xmlel_old() | xmlcdata()
+%% @doc Convert an {@link xmlel_old()} to an {@link xmlel()}
+%% tuple.
+%%
+%% Other tuples are ignored.
+
+-spec(xmlelement_to_xmlel/1 :: (xmlel_old()) -> xmlel()).
+
+xmlelement_to_xmlel(XML_Element) ->
+    xmlelement_to_xmlel(XML_Element, [], []).
+
+%% @spec (XML_Element, Default_NS, Prefixed_NS) -> XML_NS_Element
+%%     XML_Element = xmlel_old() | xmlcdata()
+%%     Default_NS = [NS]
+%%     Prefixed_NS = [{NS, Prefix}]
+%%     NS = atom() | string()
+%%     Prefix = string()
+%%     XML_NS_Element = xmlel() | xmlel_old() | xmlcdata()
+%% @doc Convert an {@link xmlel_old()} to an {@link xmlel()}
+%% tuple.
+%%
+%% Other tuples are ignored.
+%%
+%% See {@link xmlel_to_xmlelement/3} for a description of
+%% `Default_NS' and `Prefixed_NS'.
+
+-spec(xmlelement_to_xmlel/3 ::
+      (xmlel_old(), xmldefaultnss(), xmlprefixednss()) -> xmlel()).
+
+xmlelement_to_xmlel(XML_El, Default_NS, Prefixed_NS) ->
+    {New_XML_El, _, _} = xmlelement_to_xmlel_and_nss_tables(XML_El, Default_NS,
+							    Prefixed_NS),
+    New_XML_El.
+
+%% @spec (XML_Element, Default_NS, Prefixed_NS) -> {XML_NS_Element, New_Default_NS, New_Prefixed_NS}
+%%     XML_Element = xmlel_old() | xmlcdata()
+%%     Default_NS = [NS]
+%%     Prefixed_NS = [{NS, Prefix}]
+%%     NS = atom() | string()
+%%     Prefix = string()
+%%     XML_NS_Element = xmlel() | xmlel_old() | xmlcdata()
+%%     New_Default_NS = [NS]
+%%     New_Prefixed_NS = [{NS, Prefix}]
+%% @doc Convert an {@link xmlel_old()} to an {@link xmlel()}
+%% tuple.
+%%
+%% Other tuples are ignored.
+%%
+%% See {@link xmlel_to_xmlelement/3} for a description of
+%% `Default_NS' and `Prefixed_NS'.
+%%
+%% This function will returned updated namespaces tables
+%% `New_Default_NS' and `New_Prefixed_NS' which can be used for future
+%% calls.
+
+-spec(xmlelement_to_xmlel_and_nss_tables/3 ::
+      (xmlel_old(), xmldefaultnss(), xmlprefixednss()) ->
+	     {xmlel(), xmldefaultnss(), xmlprefixednss()}).
+
+xmlelement_to_xmlel_and_nss_tables(
+  #xmlelement{name = Name, attrs = Attrs, children = Children},
+  Default_NS, Prefixed_NS) ->
+    %% Udpate NS tables by looking at each attribute for NS declarations.
+    %% These later are removed at the same time.
+    {Declared_NS, Attrs1, Default_NS1, Prefixed_NS1} =
+	update_ns_from_xmlattributes(Attrs, Default_NS, Prefixed_NS),
+    %% Convert attributes and children to the new format.
+    New_Attrs = xmlattributes_to_xmlnsattributes(Attrs1, Prefixed_NS1),
+    New_Children = xmlelements_to_xmlels(Children,
+					 Default_NS1, Prefixed_NS1),
+    %% Check the element namespace and convert it to the new format.
+    Name_S = exmpp_known_elems:elem_as_list(Name),
+    XML_NS_Element =
+	case string:tokens(Name_S, ":") of
+	    [Prefix, Real_Name] ->
+		Real_Name_A = list_to_atom(Real_Name),
+		case search_prefix_in_prefixed_ns(Prefix, Prefixed_NS1) of
+		    undefined ->
+			%% Namespace never declared.
+			#xmlel{ns = undefined,
+			       declared_ns = Declared_NS,
+			       name = Real_Name_A,
+			       attrs = New_Attrs,
+			       children = New_Children
+			      };
+		    NS ->
+			#xmlel{ns = NS,
+			       declared_ns = Declared_NS,
+			       name = Real_Name_A,
+			       attrs = New_Attrs,
+			       children = New_Children
+			      }
+		end;
+	    [Real_Name] ->
+		Real_Name_A = list_to_atom(Real_Name),
+		case Default_NS1 of
+		    [NS | _] ->
+			%% Uses the current default namespace.
+			#xmlel{ns = NS,
+			       declared_ns = lists:delete({NS, none},
+							  Declared_NS),
+			       name = Real_Name_A,
+			       attrs = New_Attrs,
+			       children = New_Children
+			      };
+		    _ ->
+			%% No default namespace declared.
+			#xmlel{ns = undefined,
+			       declared_ns = Declared_NS,
+			       name = Real_Name_A,
+			       attrs = New_Attrs,
+			       children = New_Children
+			      }
+		end
+	end,
+    {XML_NS_Element, Default_NS1, Prefixed_NS1};
+xmlelement_to_xmlel_and_nss_tables(
+  #xmlendtag{name = Name}, Default_NS, Prefixed_NS) ->
+    Name_S = exmpp_known_elems:elem_as_list(Name),
+    XML_NS_Element =
+	case string:tokens(Name_S, ":") of
+	    [Prefix, Real_Name] ->
+		Real_Name_A = list_to_atom(Real_Name),
+		case search_prefix_in_prefixed_ns(Prefix, Prefixed_NS) of
+		    undefined ->
+			%% Namespace never declared.
+			#xmlendtag{ns = undefined,
+				   name = Real_Name_A
+				  };
+		    NS ->
+			#xmlendtag{ns = NS,
+				   name = Real_Name_A
+				  }
+		end;
+	    [Real_Name] ->
+		Real_Name_A = list_to_atom(Real_Name),
+		case Default_NS of
+		    [NS | _] ->
+			%% Uses the current default namespace.
+			#xmlendtag{ns = NS,
+				   name = Real_Name_A
+				  };
+		    _ ->
+			%% No default namespace declared.
+			#xmlendtag{ns = undefined,
+				   name = Real_Name_A
+				  }
+		end
+	end,
+    {XML_NS_Element, Default_NS, Prefixed_NS};
+xmlelement_to_xmlel_and_nss_tables(XML_El, Default_NS, Prefixed_NS) ->
+    %% xmlnslement() ot xmlcdata().
+    {XML_El, Default_NS, Prefixed_NS}.
+
+%% Function called to extract namespaces and their prefix (if any).
+update_ns_from_xmlattributes(Attrs, Default_NS, Prefixed_NS) ->
+    update_ns_from_xmlattributes2(Attrs, Default_NS, Prefixed_NS, [], []).
+
+update_ns_from_xmlattributes2([{Name, Value} = Attr | Rest],
+			      Default_NS, Prefixed_NS, Declared_NS,
+			      Purged_Attrs) ->
+    case string:tokens(Name, ":") of
+        ["xmlns"] ->
+	    %% Default NS declaration.
+            update_ns_from_xmlattributes2(Rest,
+					  [list_to_atom(Value) | Default_NS],
+					  Prefixed_NS,
+					  [{list_to_atom(Value), none}
+					   | Declared_NS],
+					  Purged_Attrs);
+        ["xmlns", Prefix] ->
+	    %% Prefixed NS declaration.
+            update_ns_from_xmlattributes2(Rest,
+					  Default_NS,
+					  [{list_to_atom(Value), Prefix}
+					   | Prefixed_NS],
+					  [{list_to_atom(Value), Prefix}
+					   | Declared_NS],
+					  Purged_Attrs);
+        _ ->
+	    %% Irrelevant attribute.
+            update_ns_from_xmlattributes2(Rest,
+					  Default_NS, Prefixed_NS, Declared_NS,
+					  [Attr | Purged_Attrs])
+    end;
+update_ns_from_xmlattributes2([], Default_NS, Prefixed_NS,
+			      Declared_NS, Purged_Attrs) ->
+    {Declared_NS, lists:reverse(Purged_Attrs), Default_NS, Prefixed_NS}.
+
+%% Function called to convert element's attributes.
+xmlattributes_to_xmlnsattributes(Attrs, Prefixed_NS) ->
+    xmlattributes_to_xmlnsattributes(Attrs, Prefixed_NS, []).
+
+xmlattributes_to_xmlnsattributes([{Name, Value} | Rest],
+				 Prefixed_NS, Converted_Attrs) ->
+    Name_S = exmpp_known_elems:elem_as_list(Name),
+    New_Attr = case string:tokens(Name_S, ":") of
+		   [Prefix, Real_Name] ->
+		       Real_Name_A = list_to_atom(Real_Name),
+		       case search_prefix_in_prefixed_ns(Prefix, Prefixed_NS) of
+			   undefined ->
+			       %% Namespace never declared.
+			       attribute(Real_Name_A, Value);
+			   NS ->
+			       attribute(NS, Real_Name_A, Value)
+		       end;
+		   [Real_Name] ->
+		       %% Not attached to any namespace.
+		       Real_Name_A = list_to_atom(Real_Name),
+		       attribute(Real_Name_A, Value)
+	       end,
+    xmlattributes_to_xmlnsattributes(Rest, Prefixed_NS,
+				     Converted_Attrs ++ [New_Attr]);
+xmlattributes_to_xmlnsattributes([], _Prefixed_NS, Converted_Attrs) ->
+    Converted_Attrs.
+
+%% Function called to convert element's children.
+xmlelements_to_xmlels(undefined, _Default_NS, _Prefixed_NS) ->
+    undefined;
+xmlelements_to_xmlels([], _Default_NS, _Prefixed_NS) ->
+    [];
+xmlelements_to_xmlels(XML_Elements, Default_NS, Prefixed_NS) ->
+    xmlelements_to_xmlels2(XML_Elements, [],
+			   Default_NS, Prefixed_NS).
+
+xmlelements_to_xmlels2([XML_Element | Rest], XML_NS_Elements,
+		       Default_NS, Prefixed_NS) ->
+    XML_NS_Element = xmlelement_to_xmlel(XML_Element,
+					 Default_NS, Prefixed_NS),
+    xmlelements_to_xmlels2(Rest, [XML_NS_Element | XML_NS_Elements],
+			   Default_NS, Prefixed_NS);
+xmlelements_to_xmlels2([], XML_NS_Elements, _Default_NS, _Prefixed_NS) ->
+    lists:reverse(XML_NS_Elements).
+
+%% Helpers.
+search_prefix_in_prefixed_ns(Prefix, Prefixed_NS) ->
+    case lists:keysearch(Prefix, 2, Prefixed_NS) of
+        {value, {NS, _Prefix}} ->
+            NS;
+        _ ->
+            case lists:keysearch(Prefix, 2, ?IMPLICIT_PREFIXED_NS) of
+                {value, {NS, _Prefix}} ->
+                    NS;
+                _ ->
+                    undefined
+            end
+    end.
+
+%% @spec (XML_Element, Default_NS, Prefixed_NS) -> XML_Text
+%%     XML_Element = xmlel() | xmlel_old() | xmlendtag() | xmlcdata() | list()
+%%     Default_NS = [NS | Equivalent_NSs]
+%%     Prefixed_NS = [{NS, Prefix}]
+%%     NS = atom()
+%%     Equivalent_NSs = [NS]
+%%     Prefix = string()
+%%     XML_Text = string()
+%% @doc Serialize an XML node to text.
+%%
+%% `Default_NS' and `Prefixed_NS' contain namespace declaration which
+%% occured above this node in the tree. The order in the first list is
+%% important: declarations are sorted from the most recent one to the
+%% oldest one.
+
+-spec(node_to_list/3 ::
+      (xmlel_any() | [xmlel_any()], xmldefaultnss(), xmlprefixednss()) -> string()).
+
+node_to_list(El, Default_NS, Prefixed_NS) ->
+    Binary = node_to_binary(El, Default_NS, Prefixed_NS),
+    binary_to_list(Binary).
+
+%% @spec (XML_Element) -> XML_Text
+%%     XML_Element = xmlel() | xmlel_old() | list()
+%%     XML_Text = string()
+%% @doc Serialize an XML document to text.
+
+-spec(document_to_list/1 :: (xmlel_any()) -> string()).
+
+document_to_list(El) ->
+    node_to_list(El, [], []).
+
+%% @spec (El, Default_NS, Prefixed_NS) -> XML_Text
+%%     XML_Element = xmlel() | xmlel_old() | xmlendtag() | xmlcdata() | list()
+%%     Default_NS = [NS | Equivalent_NSs]
+%%     Prefixed_NS = [{NS, Prefix}]
+%%     NS = atom()
+%%     Equivalent_NSs = [NS]
+%%     Prefix = string()
+%%     XML_Text = binary()
+%% @doc Serialize an XML node to text.
+%%
+%% Converting to binary is about 15% to 20% faster than converting to a
+%% list.
+
+-spec(node_to_binary/3 ::
+      (xmlel_any() | [xmlel_any()], xmldefaultnss(), xmlprefixednss()) -> binary()).
+
+node_to_binary(El, Default_NS, Prefixed_NS) ->
+    IO_List = node_to_iolist(El, Default_NS, Prefixed_NS),
+    iolist_to_binary(IO_List).
+
+%% @spec (XML_Element) -> XML_Text
+%%     XML_Element = xmlel() | xmlel_old() | list()
+%%     XML_Text = binary()
+%% @doc Serialize an XML document to text.
+%%
+%% Converting to binary is about 15% to 20% faster than converting to a
+%% list.
+
+-spec(document_to_binary/1 :: (xmlel_any()) -> binary()).
+
+document_to_binary(El) ->
+    node_to_binary(El, [], []).
+
+%% @spec (XML_Element, Default_NS, Prefixed_NS) -> XML_Text
+%%     XML_Element = xmlel() | xmlel_old() | xmlendtag() | xmlcdata() | list()
+%%     Default_NS = [NS | Equivalent_NSs]
+%%     Prefixed_NS = [{NS, Prefix}]
+%%     NS = atom()
+%%     Equivalent_NSs = [NS]
+%%     Prefix = string()
+%%     XML_Text = iolist()
+%% @doc Serialize an XML node to text.
+%%
+%% Converting to iolist is about 40% to 50% faster than converting to a
+%% list.
+%%
+%% TODO: transform directly to text without converting it to the old
+%%       xmlelement() first.
+
+-spec(node_to_iolist/3 ::
+      (xmlel_any() | [xmlel_any()], xmldefaultnss(), xmlprefixednss()) -> iolist()).
+
+node_to_iolist(El, Default_NS, Prefixed_NS) when is_list(El) ->
+    node_to_iolist2(El, Default_NS, Prefixed_NS, []);
+node_to_iolist(El, Default_NS, Prefixed_NS) ->
+    node_to_iolist2([El], Default_NS, Prefixed_NS, []).
+
+node_to_iolist2([El | Rest], Default_NS, Prefixed_NS, IO_List) ->
+    Sub_IO_List =
+	case El of
+	    #xmlel{children = Children} ->
+		{Name, Attrs, Default_NS1, Prefixed_NS1} =
+		    unresolve_xmlel_nss(El, Default_NS, Prefixed_NS),
+		element_to_iolist(Name, Attrs, Children,
+				  Default_NS1, Prefixed_NS1);
+	    #xmlelement{name = Name, attrs = Attrs, children = Children} ->
+		element_to_iolist(Name, Attrs, Children,
+				  Default_NS, Prefixed_NS);
+	    #xmlendtag{ns = undefined, name = Name} ->
+		endtag_to_iolist(Name);
+	    #xmlendtag{} ->
+		Name = unresolve_endtag_nss(El, Default_NS, Prefixed_NS),
+		endtag_to_iolist(Name);
+	    #xmlpi{target = Target, value = Value} ->
+		pi_to_iolist(Target, Value);
+	    #xmlcdata{cdata = CData} ->
+		?ESCAPE(CData)
+	end,
+    node_to_iolist2(Rest, Default_NS, Prefixed_NS, [Sub_IO_List | IO_List]);
+node_to_iolist2([], _Default_NS, _Prefixed_NS, IO_List) ->
+    lists:reverse(IO_List).
+
+element_to_iolist(Name, Attrs, Children, Default_NS, Prefixed_NS)
+  when is_atom(Name) ->
+    element_to_iolist(exmpp_known_elems:elem_as_list(Name), Attrs, Children,
+		      Default_NS, Prefixed_NS);
+element_to_iolist(Name, Attrs, undefined, _Default_NS, _Prefixed_NS) ->
+    %% Children may come later, we don't close the tag.
+    [$<, Name, attrs_to_iolist(Attrs), $>];
+element_to_iolist(Name, Attrs, [], _Default_NS, _Prefixed_NS) ->
+    [$<, Name, attrs_to_iolist(Attrs), $/, $>];
+element_to_iolist(Name, Attrs, Children, Default_NS, Prefixed_NS) ->
+    Content = node_to_iolist(Children, Default_NS, Prefixed_NS),
+    [$<, Name, attrs_to_iolist(Attrs), $>, Content, $<, $/, Name, $>].
+
+endtag_to_iolist(Name) when is_atom(Name) ->
+    endtag_to_iolist(exmpp_known_elems:elem_as_list(Name));
+endtag_to_iolist(Name) ->
+    [$<, $/, Name, $>].
+
+pi_to_iolist(Target, Value) when is_atom(Target) ->
+    pi_to_iolist(atom_to_list(Target), Value);
+pi_to_iolist(Target, Value) ->
+    [$<, $?, Target, $\s, Value, $?, $>].
+
+attrs_to_iolist(Attrs) ->
+    [attr_to_iolist(A) || A <- Attrs].
+
+attr_to_iolist({Name, Value}) ->
+    [$\s, Name, $=, $", escape_using_entities(Value), $"].
+
+%% @spec (XML_Element) -> XML_Text
+%%     XML_Element = xmlel() | xmlel_old() | list()
+%%     XML_Text = iolist()
+%% @doc Serialize an XML document to text.
+
+-spec(document_to_iolist/1 :: (xmlel_any()) -> iolist()).
+
+document_to_iolist(El) ->
+    node_to_iolist(El, [], []).
+
+%% @spec (XML_Element) -> New_XML_Element
+%%     XML_Element = xmlel() | xmlel_old()
+%%     New_XML_Element = xmlel() | xmlel_old()
+%% @doc Recursively remove text nodes containing only whitespaces.
+%%
+%% @see is_whitespace/1.
+
+-spec(deindent_document/1 :: (xmlel_any()) -> xmlel_any()).
+
+deindent_document(#xmlel{children = Children} = El) ->
+    New_Children = deindent_children(remove_whitespaces_from_list(Children)),
+    El#xmlel{children = New_Children};
+deindent_document(#xmlelement{children = Children} = El) ->
+    New_Children = deindent_children(remove_whitespaces_from_list(Children)),
+    El#xmlelement{children = New_Children}.
+
+deindent_children(undefined) ->
+    undefined;
+deindent_children(Children) ->
+    deindent_children2(Children, []).
+
+deindent_children2([], Result) ->
+    lists:reverse(Result);
+deindent_children2([#xmlcdata{cdata = CData} | Rest], Result) ->
+    New_Child = cdata(exmpp_utils:strip(CData)),
+    deindent_children2(Rest, [New_Child | Result]);
+deindent_children2([Child | Rest], Result)
+  when is_record(Child, xmlel); is_record(Child, xmlelement) ->
+    New_Child = deindent_document(Child),
+    deindent_children2(Rest, [New_Child | Result]).
+
+%% @spec (XML_Element, Indent) -> New_XML_Element
+%%     XML_Element = xmlel() | xmlel_old()
+%%     Indent = binary()
+%%     New_XML_Element = xmlel() | xmlel_old()
+%% @doc Add whitespaces text nodes to indent the document.
+%%
+%% Indentation of {@link xmlendtag()} isn't supported yet.
+
+-spec(indent_document/2 :: (xmlel_any(), binary()) -> xmlel_any()).
+
+indent_document(El, Indent) ->
+    indent_document(El, Indent, <<>>).
+
+%% @spec (XML_Element, Indent, Previous_Total) -> New_XML_Element
+%%     XML_Element = xmlel() | xmlel_old()
+%%     Indent = binary()
+%%     Previous_Total = binary()
+%%     New_XML_Element = xmlel() | xmlel_old()
+%% @doc Add whitespaces text nodes to indent the document.
+%%
+%% Indentation of {@link xmlendtag()} isn't supported yet.
+
+-spec(indent_document/3 :: (xmlel_any(), binary(), binary()) -> xmlel_any()).
+
+indent_document(El, Indent, Previous_Total) ->
+    %% First, we remove previous indentation.
+    New_El = deindent_document(El),
+    indent_document2(New_El, Indent, Previous_Total).
+
+indent_document2(#xmlel{children = Children} = El,
+		 Indent, Previous_Total) ->
+    New_Children = indent_children(Children, Indent, Previous_Total),
+    El#xmlel{children = New_Children};
+indent_document2(#xmlelement{children = Children} = El,
+		 Indent, Previous_Total) ->
+    New_Children = indent_children(Children, Indent, Previous_Total),
+    El#xmlelement{children = New_Children}.
+
+indent_children(undefined, _Indent, _Previous_Total) ->
+    undefined;
+indent_children(Children, Indent, Previous_Total) ->
+    New_Previous_Total = list_to_binary([Previous_Total, Indent]),
+    Before = cdata(list_to_binary([<<"\n">>, New_Previous_Total])),
+    End = cdata(list_to_binary([<<"\n">>, Previous_Total])),
+    indent_children2(Children, Indent, New_Previous_Total, Before, End, []).
+
+indent_children2([], _Indent, _Previous_Total, _Before, _End, []) ->
+    [];
+indent_children2([#xmlcdata{cdata = CData}], _Indent, _Previous_Total,
+		 _Before, _End, []) ->
+    [cdata(exmpp_utils:strip(CData))];
+indent_children2([], _Indent, _Previous_Total, _Before, End, Result) ->
+    lists:reverse([End | Result]);
+indent_children2([#xmlcdata{cdata = CData} | Rest], Indent, Previous_Total,
+		 Before, End, Result) ->
+    New_Child = cdata(exmpp_utils:strip(CData)),
+    New_Result = [New_Child, Before | Result],
+    indent_children2(Rest, Indent, Previous_Total, Before, End, New_Result);
+indent_children2([Child | Rest], Indent, Previous_Total, Before, End, Result)
+  when is_record(Child, xmlel); is_record(Child, xmlelement) ->
+    New_Child = indent_document2(Child, Indent, Previous_Total),
+    New_Result = [New_Child, Before | Result],
+    indent_children2(Rest, Indent, Previous_Total, Before, End, New_Result).
+
+%% @spec (XML_Elements) -> Cleaned_XML_Elements
+%%     XML_Elements = [xmlel() | xmlel_old() | xmlcdata() |
+%%         xmlendtag()]
+%%     Cleaned_XML_Elements = [xmlel() | xmlel_old() | xmlcdata()]
+%% @doc Remove any {@link xmlendtag()}
+%% from the list of XML elements.
+%%
+%% This is primarily designed to work on returned value of {@link
+%% parse/2} and {@link parse_final/2} when the `no_endtag' parser
+%% option (see {@link xmlparseroption()}) wasn't specified at {@link
+%% start_parser/1} time.
+
+-spec(clear_endtag_tuples/1 :: ([xmlnode() | xmlendtag()]) -> [xmlnode()]).
+
+clear_endtag_tuples(XML_Elements) ->
+    clear_endtag_tuples2(XML_Elements, []).
+
+clear_endtag_tuples2([#xmlendtag{} | Rest], Result) ->
+    clear_endtag_tuples2(Rest, Result);
+clear_endtag_tuples2([XML_Element | Rest], Result) ->
+    clear_endtag_tuples2(Rest, [XML_Element | Result]);
+clear_endtag_tuples2([], Result) ->
+    lists:reverse(Result).
+
+%% @spec (CData) -> Escaped_CData
+%%     CData = string() | binary()
+%%     Escaped_CData = string() | binary()
+%% @doc Replace sensible characters with entities.
+%%
+%% Processed characters are <tt>&amp;</tt>, <tt>&lt;</tt>,
+%% <tt>&gt;</tt>, <tt>&quot;</tt>, <tt>&apos;</tt>.
+
+-spec(escape_using_entities/1 :: (binary() | string()) -> binary() | string()).
+
+escape_using_entities(CData) when is_list(CData) ->
+    lists:flatten([case C of
+		       $& -> "&amp;";
+		       $< -> "&lt;";
+		       $> -> "&gt;";
+		       $" -> "&quot;";
+		       $' -> "&apos;";
+		       _  -> C
+		   end || C <- CData]);
+
+escape_using_entities(CData) when is_binary(CData) ->
+    escape_using_entities2(CData, []).
+
+escape_using_entities2(<<C:8, Rest/binary>>, New_CData) ->
+    New_C = case C of
+		$& -> <<"&amp;">>;
+		$< -> <<"&lt;">>;
+		$> -> <<"&gt;">>;
+		$" -> <<"&quot;">>; % "
+		$' -> <<"&apos;">>; % '
+		_  -> C
+	    end,
+    escape_using_entities2(Rest, [New_C | New_CData]);
+escape_using_entities2(<<>>, New_CData) ->
+    list_to_binary(lists:reverse(New_CData)).
+
+%% @spec (CData) -> Escaped_CData
+%%     CData = string() | binary()
+%%     Escaped_CData = string() | binary()
+%% @doc Escape text using CDATA sections.
+
+-spec(escape_using_cdata/1 :: (binary() | string()) -> binary() | string()).
+
+escape_using_cdata(CData) when is_list(CData) ->
+    escape_using_cdata_list(CData, false, []);
+escape_using_cdata(CData) when is_binary(CData) ->
+    case cdata_need_escape(CData) of
+        no ->
+            CData;
+        global ->
+            list_to_binary([<<"<![CDATA[">>, CData, <<"]]>">>]);
+        {split, End_Token_Positions} ->
+            Escaped = escape_using_cdata_binary(CData, End_Token_Positions),
+            list_to_binary(Escaped)
+    end.
+
+%% If a text node contains the characters '<' or '&', it must be enclosed
+%% inside CDATA sections. If such a text also contains CDATA end token
+%% ("]]>"), it must be split in multiple CDATA sections.
+%%
+%% See:
+%%   http://www.w3.org/TR/xml11/#syntax
+%%   http://en.wikipedia.org/wiki/CDATA#Uses_of_CDATA_sections
+%%
+%% For binary(), we do it in two steps (first, is it needed, then do it).
+%% This is because in most cases, the text node won't have CDATA end token.
+%% XXX Should we do the same for lists?
+
+escape_using_cdata_list([], false, Escaped) ->
+    lists:reverse(Escaped);
+escape_using_cdata_list([], true, Escaped) ->
+    "<![CDATA[" ++ lists:reverse(lists:flatten(Escaped)) ++ "]]>";
+escape_using_cdata_list([$], $], $> | Rest], _Must_Escape, Escaped) ->
+    escape_using_cdata_list(Rest, true, [">[ATADC[!<>]]]]" | Escaped]);
+escape_using_cdata_list([C | Rest], _Must_Escape, Escaped)
+  when C == $<; C == $& ->
+    escape_using_cdata_list(Rest, true, [C | Escaped]);
+escape_using_cdata_list([C | Rest], Must_Escape, Escaped) ->
+    escape_using_cdata_list(Rest, Must_Escape, [C | Escaped]).
+
+%% This function returns what kind of escape must be done:
+%%   . 'no'
+%%   . 'global' for text containing '<' and '&'
+%%   . {'split, End_Token_Pos} for text containing CDATA end token(s)
+
+cdata_need_escape(CData) ->
+    cdata_need_escape2(CData, 0, false, []).
+
+cdata_need_escape2(<<>>, _Current_Pos, false, _End_Token_Pos) ->
+    no;
+cdata_need_escape2(<<>>, _Current_Pos, true, []) ->
+    global;
+cdata_need_escape2(<<>>, _Current_Pos, true, End_Token_Pos) ->
+    {split, lists:reverse(End_Token_Pos)};
+cdata_need_escape2(<<$], $], $>, Rest/binary>>, Current_Pos, _Must_Escape,
+		   End_Token_Pos) ->
+    cdata_need_escape2(Rest, Current_Pos + 3, true,
+		       [Current_Pos + 1 | End_Token_Pos]);
+cdata_need_escape2(<<$<, Rest/binary>>, Current_Pos, _Must_Escape,
+		   End_Token_Pos) ->
+    cdata_need_escape2(Rest, Current_Pos + 1, true, End_Token_Pos);
+cdata_need_escape2(<<$&, Rest/binary>>, Current_Pos, _Must_Escape,
+		   End_Token_Pos) ->
+    cdata_need_escape2(Rest, Current_Pos + 1, true, End_Token_Pos);
+cdata_need_escape2(<<_:8, Rest/binary>>, Current_Pos, Must_Escape,
+		   End_Token_Pos) ->
+    cdata_need_escape2(Rest, Current_Pos + 1, Must_Escape, End_Token_Pos).
+
+%% This function use the End_Token_Pos list returned by
+%% cdata_need_escape/1 and split CDATA end tokens at those positions.
+
+escape_using_cdata_binary(CData, End_Token_Pos) ->
+    escape_using_cdata_binary2(CData, 0, End_Token_Pos, []).
+
+escape_using_cdata_binary2(Rest, _Current_Pos, [], Escaped) ->
+    lists:reverse([<<"]]>">>, Rest, <<"<![CDATA[">> | Escaped]);
+escape_using_cdata_binary2(CData, Current_Pos, [Pos | End_Token_Pos],
+			   Escaped) ->
+    Split = Pos - Current_Pos,
+    {CData1, CData2} = split_binary(CData, Split + 1),
+    escape_using_cdata_binary2(CData2, Pos + 1, End_Token_Pos,
+			       [<<"]]>">>, CData1, <<"<![CDATA[">> | Escaped]).
+
+%% @spec () -> escape_using_entities | escape_using_cdata
+%% @doc Tell what escaping function will be used internally.
+
+-spec(internal_escaping_function_name/0 ::
+      () -> escape_using_cdata | escape_using_entities).
+
+-ifdef(ESCAPE_USING_CDATA_SECTIONS).
+internal_escaping_function_name() ->
+    escape_using_cdata.
+-else.
+internal_escaping_function_name() ->
+    escape_using_entities.
+-endif.
+
+%% --------------------------------------------------------------------
+%% Utilities.
+%% --------------------------------------------------------------------
+
+%% Choose the most appropriate engine.
+get_engine_from_options(Options) ->
+    Engine_Name =
+	case proplists:get_value(engine, Options) of
+	    undefined ->
+		case is_engine_available(?DEFAULT_ENGINE) of
+		    true ->
+			?DEFAULT_ENGINE;
+		    false ->
+			case ets:first(?ENGINES_REGISTRY) of
+			    '$end_of_table' ->
+				throw({xml_parser, options,
+				       no_engine_registered,
+				       undefined});
+			    Name ->
+				Name
+			end
+		end;
+	    Name ->
+		case is_engine_available(Name) of
+		    true ->
+			Name;
+		    false ->
+			throw({xml_parser, options, engine_unavailable, Name})
+		end
+	end,
+    get_engine_driver(Engine_Name).
+
+%% Merge options to avoid duplicates and multiple initialization of the
+%% parser.
+merge_options(Options, [{Key, _} = Option | Rest]) ->
+    New_Options = lists:keystore(Key, 1, Options, Option),
+    merge_options(New_Options, Rest);
+merge_options(Options, [Option | Rest]) when is_atom(Option) ->
+    merge_options(Options, [{Option, true} | Rest]);
+merge_options(Options, []) ->
+    Options.
+
+%% Update parser options.
+handle_options(#xml_parser{options = Options, port = Port} = Parser,
+	       [{Key, _} = Option | Rest]) ->
+    case set_option(Port, Option) of
+        ok ->
+            New_Options = lists:keystore(Key, 1, Options, Option),
+            New_Parser = Parser#xml_parser{options = New_Options},
+            handle_options(New_Parser, Rest);
+        Error ->
+            Error
+    end;
+handle_options(_Parser, [Invalid_Option | _Rest]) ->
+    {error, invalid, Invalid_Option};
+handle_options(Parser, []) ->
+    Parser.
+
+set_option(_Port, {engine, Engine_Name}) when is_atom(Engine_Name) ->
+    ok;
+
+set_option(Port, {max_size, infinity}) ->
+    port_control(Port, ?COMMAND_SET_MAX_SIZE, term_to_binary(-1)),
+    ok;
+set_option(Port, {max_size, Max}) when is_integer(Max), Max >= 0 ->
+    port_control(Port, ?COMMAND_SET_MAX_SIZE, term_to_binary(Max)),
+    ok;
+
+set_option(Port, {root_depth, none}) ->
+    port_control(Port, ?COMMAND_SET_ROOT_DEPTH, term_to_binary(-1)),
+    ok;
+set_option(Port, {root_depth, Depth}) when is_integer(Depth), Depth >= 0 ->
+    port_control(Port, ?COMMAND_SET_ROOT_DEPTH, term_to_binary(Depth)),
+    ok;
+
+set_option(Port, {names_as_atom, As_Atom}) when is_boolean(As_Atom) ->
+    port_control(Port, ?COMMAND_SET_NAMES_AS_ATOM, term_to_binary(As_Atom)),
+    ok;
+
+set_option(Port, {check_nss, Check}) when is_atom(Check) ->
+    engine_set_things_check(Port, nss, Check);
+
+set_option(Port, {check_elems, Check}) when is_atom(Check) ->
+    engine_set_things_check(Port, names, Check);
+
+set_option(Port, {check_attrs, Check}) when is_atom(Check) ->
+    engine_set_things_check(Port, attrs, Check);
+
+set_option(Port, {emit_endtag, Endtag}) when is_boolean(Endtag) ->
+    port_control(Port, ?COMMAND_SET_EMIT_ENDTAG, term_to_binary(Endtag)),
+    ok;
+
+set_option(_Port, Invalid_Option) ->
+    {error, invalid, Invalid_Option}.
+
+%% --------------------------------------------------------------------
+%% Engine function wrappers.
+%% --------------------------------------------------------------------
+
+control(Port, Command, Data) ->
+    case port_control(Port, Command, Data) of
+        <<0, Result/binary>> ->
+            Result;
+        <<1, Error/binary>> ->
+            {error, binary_to_term(Error)};
+        Other ->
+	    %% The port driver must have a bug somewhere: this return
+	    %% value is illegal.
+            {_, Driver_Name} = erlang:port_info(Port, name),
+            Term = try
+		       binary_to_term(Other)
+		   catch
+		       _:_ ->
+			   Other
+		   end,
+            error_logger:error_msg(
+              "exmpp_xml: Unexpected return value from '~s':~n~p~n",
+              [Driver_Name, Term]),
+            {error, {unexpected, Term}}
+    end.
+
+engine_add_known(Port, Type, List_Name, New_Items) ->
+    Command = case Type of
+		  nss   -> ?COMMAND_ADD_KNOWN_NSS;
+		  names -> ?COMMAND_ADD_KNOWN_ELEMS;
+		  attrs -> ?COMMAND_ADD_KNOWN_ATTRS
+	      end,
+    control(Port, Command, term_to_binary({List_Name, New_Items})).
+
+engine_set_things_check(Port, Type, List_Name) ->
+    Command = case Type of
+		  nss   -> ?COMMAND_SET_CHECK_NSS;
+		  names -> ?COMMAND_SET_CHECK_ELEMS;
+		  attrs -> ?COMMAND_SET_CHECK_ATTRS
+	      end,
+    case control(Port, Command, term_to_binary(List_Name)) of
+        {error, Reason} -> {error, failure, Reason};
+        _               -> ok
+    end.
+
+engine_parse(Port, Data) ->
+    engine_parse2(Port, ?COMMAND_PARSE, Data).
+
+engine_parse_final(Port, Data) ->
+    engine_parse2(Port, ?COMMAND_PARSE_FINAL, Data).
+
+engine_parse2(Port, Command, Data) ->
+    case control(Port, Command, Data) of
+        {error, Error} ->
+            case Error of
+                {Reason, Details} ->
+                    throw({xml_parser, parsing, Reason, Details});
+                Reason ->
+                    throw({xml_parser, parsing, Reason, undefined})
+            end;
+        Result ->
+            binary_to_term(Result)
+    end.
+
+engine_port_revision(Port) ->
+    case control(Port, ?COMMAND_PORT_REVISION, <<>>) of
+        {error, Reason} ->
+            throw({xml_parser, port_revision, port_revision, Reason});
+        Revision ->
+            binary_to_term(Revision)
+    end.
+
+%% --------------------------------------------------------------------
+%% gen_server(3erl) callbacks.
+%% --------------------------------------------------------------------
+
+%% @hidden
+
+init([]) ->
+    process_flag(trap_exit, true),
+    ets:new(?ENGINES_REGISTRY, [named_table, {keypos, 2}]),
+    {ok, #state{
+       known_nss_lists = dict:new(),
+       known_elems_lists = dict:new(),
+       known_attrs_lists = dict:new()
+      }}.
+
+%% @hidden
+
+handle_call({register_engine,
+	     #xml_engine{driver_path = Driver_Path,
+			 driver = Driver_Name} = Engine},
+	    _From,
+	    #state{known_nss_lists = Known_NSs,
+		   known_elems_lists = Known_Names,
+		   known_attrs_lists = Known_Attrs} = State) ->
+    try
+	%% Load the driver now.
+        case Driver_Path of
+            undefined ->
+                exmpp_internals:load_driver(Driver_Name);
+            _ ->
+                exmpp_internals:load_driver(Driver_Name, [Driver_Path])
+        end,
+        try
+	    %% Start a port for management purpose.
+            Port = exmpp_internals:open_port(Driver_Name),
+	    %% Send him the known lists.
+            Fun1 = fun(List_Name, List, {P, Type, Acc}) ->
+			   Items = dict:fetch_keys(List),
+			   Ret = engine_add_known(P, Type, List_Name, Items),
+			   case Acc of
+			       {error, _Reason} -> {P, Type, Acc};
+			       _                -> {P, Type, Ret}
+			   end
+		   end,
+            case dict:fold(Fun1, {Port, nss, ok}, Known_NSs) of
+                {_Port1, {error, Reason1}} ->
+                    exmpp_internals:close_port(Port),
+                    throw(Reason1);
+                _ ->
+                    ok
+            end,
+            case dict:fold(Fun1, {Port, names, ok}, Known_Names) of
+                {_Port2, {error, Reason2}} ->
+                    exmpp_internals:close_port(Port),
+                    throw(Reason2);
+                _ ->
+                    ok
+            end,
+            case dict:fold(Fun1, {Port, attrs, ok}, Known_Attrs) of
+                {_Port3, {error, Reason3}} ->
+                    exmpp_internals:close_port(Port),
+                    throw(Reason3);
+                _ ->
+                    ok
+            end,
+	    %% Add engine to the global list.
+            Engine1 = Engine#xml_engine{port = Port},
+            try
+                ets:insert(?ENGINES_REGISTRY, Engine1)
+            catch
+                _:Exception2 ->
+                    exmpp_internals:close_port(Port),
+                    throw(Exception2)
+            end,
+            {reply, ok, State}
+        catch
+            _:Exception1 ->
+                exmpp_internals:unload_driver(Driver_Name),
+                {reply, {error, Exception1}, State}
+        end
+    catch
+        _:Exception ->
+            {reply, {error, Exception}, State}
+    end;
+
+handle_call({add_known, Type, List_Name, New_Items}, _From, State) ->
+    Lists = case Type of
+		nss   -> State#state.known_nss_lists;
+		names -> State#state.known_elems_lists;
+		attrs -> State#state.known_attrs_lists
+	    end,
+    %% Give the new items to all drivers.
+    Fun1 = fun(#xml_engine{port = Port}, Acc) ->
+		   Ret = engine_add_known(Port, Type, List_Name, New_Items),
+		   case Acc of
+		       {error, _Reason} -> Acc;
+		       _                -> Ret
+		   end
+	   end,
+    Result = ets:foldl(Fun1, ok, ?ENGINES_REGISTRY),
+    case Result of
+        {error, Reason} ->
+            {reply,
+	     {error,
+	      {xml_parser, add_known, Type, {List_Name, New_Items, Reason}}},
+	     State};
+        _ ->
+	    %% Add new items to the list.
+            List = case dict:is_key(List_Name, Lists) of
+		       true  -> dict:fetch(List_Name, Lists);
+		       false -> dict:new()
+		   end,
+            Fun2 = fun(Item, Acc) -> dict:store(Item, true, Acc) end,
+            New_List = lists:foldl(Fun2, List, New_Items),
+            New_Lists = dict:store(List_Name, New_List, Lists),
+	    %% Update the state.
+            New_State = case Type of
+			    nss   -> State#state{known_nss_lists = New_Lists};
+			    names -> State#state{known_elems_lists = New_Lists};
+			    attrs -> State#state{known_attrs_lists = New_Lists}
+			end,
+            {reply, ok, New_State}
+    end;
+
+handle_call(Request, From, State) ->
+    error_logger:info_msg("~p:handle_call/3:~n- Request: ~p~n- From: ~p~n"
+			  "- State: ~p~n", [?MODULE, Request, From, State]),
+    {reply, ok, State}.
+
+%% @hidden
+
+handle_cast(Request, State) ->
+    error_logger:info_msg("~p:handle_cast/2:~n- Request: ~p~n"
+			  "- State: ~p~n", [?MODULE, Request, State]),
+    {noreply, State}.
+
+%% @hidden
+
+handle_info(Info, State) ->
+    error_logger:info_msg("~p:handle_info/2:~n- Info: ~p~n"
+			  "- State: ~p~n", [?MODULE, Info, State]),
+    {noreply, State}.
+
+%% @hidden
+
+code_change(Old_Vsn, State, Extra) ->
+    error_logger:info_msg("~p:code_change/3:~n- Old_Vsn: ~p~n- Extra: ~p~n"
+			  "- State: ~p~n", [?MODULE, Old_Vsn, Extra, State]),
+    {ok, State}.
+
+%% @hidden
+
+terminate(_Reason, _State) ->
+    ok.
diff -r d551623afde5 deps/exmpp/src/core/exmpp_xmlstream.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/core/exmpp_xmlstream.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,431 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> sends events to a specified
+%% process or function based on elements and trees returned by the
+%% parser `exmpp_xml'.
+%%
+%% <p>
+%% It also provides a high-level function to parse an XML document
+%% without the overhead of parser initialization.
+%% </p>
+%%
+%% <p><strong>The API isn't stabilized yet</strong>.
+%% What's left to be done:</p>
+%% <ul>
+%% <li>rework API (function names with more sense especially)</li>
+%% </ul>
+
+-module(exmpp_xmlstream).
+
+-include("exmpp.hrl").
+
+-export([
+	 start/2,
+	 start/3,
+	 reset/1,
+	 get_parser/1,
+	 stop/1,
+	 parse/2,
+	 send_events/2,
+	 parse_element/1,
+	 parse_element/2,
+	 set_wrapper_tagnames/2 %% Used to unwrap BOSH enclosing body
+	]).
+
+-type(process()  :: pid() | atom()).
+-type(callback() ::
+      process()                      |
+      {gen_fsm, process()}           |
+      {process, process()}           |
+      {apply, atom(), atom(), any()} |
+      no_callback                    |
+      any()
+     ).
+
+-record(xml_stream, {
+	  callback             :: callback(),
+	  parser,
+	  xmlstreamstart = old :: new | old,
+	  opened = false       :: bool(),
+	  wrapper_tagnames = undefined :: undefined | [atom() | string()]
+	 }).
+-type(xmlstream() :: #xml_stream{}).
+
+-type(xmlstreamevent() ::
+      {xmlstreamstart, atom() | string(), [#xmlattr{} | xmlattr_old()]} |
+      #xmlstreamstart{} |
+      #xmlstreamelement{} |
+      #xmlstreamend{}
+     ).
+
+%% --------------------------------------------------------------------
+%% Stream parsing, chunk by chunk.
+%% --------------------------------------------------------------------
+
+%% @spec (Callback, Parser) -> Stream
+%%     Callback = callback()
+%%     Stream = xmlstream()
+%%     Parser = exmpp_xml:xmlparser()
+%% @doc Start a new stream handler.
+%%
+%% The XML parser is reset and options `{root_depth, 1}' and `emit_endtag'
+%% are set.
+%%
+%% The stream will use the old xmlstreamstart tuple.
+%%
+%% @see exmpp_xml:start_parser/1.
+%% @see exmpp_xml:reset_parser/2.
+
+-spec(start/2 ::
+      (callback(), exmpp_xml:xmlparser()) -> xmlstream()).
+
+start(Callback, Parser) ->
+    start(Callback, Parser, []).
+
+%% @spec (Callback, Parser, Stream_Options) -> Stream
+%%     Callback = callback()
+%%     Stream = xmlstream()
+%%     Parser = exmpp_xml:xmlparser()
+%%     Stream_Options = [Stream_Option]
+%%     Stream_Option = {xmlstreamstart, old | new}
+%% @doc Start a new stream handler.
+%%
+%% The XML parser is reset and options `{root_depth, 1}' and `emit_endtag'
+%% are set.
+%%
+%% The stream will use the old xmlstreamstart tuple by default.
+%%
+%% @see exmpp_xml:start_parser/1.
+%% @see exmpp_xml:reset_parser/2.
+
+-spec(start/3 ::
+      (callback(), exmpp_xml:xmlparser(), [{xmlstreamstart, new | old}]) ->
+	     xmlstream()).
+
+start(Callback, Parser, Stream_Options) ->
+    Callback2 = case Callback of
+		    Pid when is_pid(Pid) -> {process, Pid};
+		    _                    -> Callback
+		end,
+    New_Parser = exmpp_xml:reset_parser(Parser,
+					[{root_depth, 1}, emit_endtag]),
+    Stream_Start = case lists:keysearch(xmlstreamstart, 1, Stream_Options) of
+		       {value, {_, new}} -> new;
+		       {value, {_, old}} -> old;
+		       false             -> old
+		   end,
+    #xml_stream{
+		     callback = Callback2,
+		     parser = New_Parser,
+		     xmlstreamstart = Stream_Start
+		    }.
+
+%% @spec (Stream) -> New_Stream
+%%     Stream = xmlstream()
+%%     New_Stream = xmlstream()
+%% @doc Reset stream and the underlying XML parser.
+
+-spec(reset/1 :: (xmlstream()) -> xmlstream()).
+
+reset(#xml_stream{parser = Parser} = Stream) ->
+    New_Parser = exmpp_xml:reset_parser(Parser),
+    Stream#xml_stream{parser = New_Parser, opened = false}.
+
+%% @spec (Stream) -> Parser
+%%     Stream = xmlstream()
+%%     Parser = exmpp_xml:xmlparser()
+%% @doc Return the XML parser used.
+
+-spec(get_parser/1 :: (xmlstream()) -> exmpp_xml:xmlparser()).
+
+get_parser(#xml_stream{parser = Parser}) ->
+    Parser.
+
+%% @spec (Stream) -> ok | {error, Reason}
+%%     Stream = xmlstream()
+%% @doc Close a stream handler.
+%%
+%% This must be called when `Stream' (returned by {@link start/2} or
+%% {@link start/3} isn't necessary anymore.
+%%
+%% Currently this is a NOOP.
+%%
+%% The caller is responsible to terminate the parser.
+%%
+%% @see get_parser/1.
+
+-spec(stop/1 :: (xmlstream()) -> ok).
+
+stop(_Stream) ->
+    ok.
+
+%% @spec (Stream, Data) -> {ok, New_Stream} | {ok, New_Stream, Events} | {error, Reason}
+%%     Stream = xmlstream()
+%%     Data = string() | binary()
+%%     New_Stream = xmlstream()
+%%     Events = [xmlstreamevent()]
+%% @doc Parse a chunk of XML data and send events to the callback
+%% process or function, or return them to the caller.
+%%
+%% If `Data' doesn't contain one or more complete XML elements, this
+%% function may not send any event.
+%%
+%% Potential events are described by the {@link xmlstreamevent()} type.
+
+-spec(parse/2 ::
+      (xmlstream(), binary() | string()) ->
+	     {ok, xmlstream()} | {ok, xmlstream(), [xmlstreamevent()]} |
+		 {error, any()}).
+
+parse(#xml_stream{parser = Parser} = Stream, Data) ->
+    try exmpp_xml:parse(Parser, Data) of
+        continue ->
+            send_events(Stream, []);
+        XML_Elements ->
+            {ok, New_Stream, Events} = process_elements(Stream, XML_Elements),
+            send_events(New_Stream, Events)
+    catch
+        throw:{xml_parser, parsing, malformed_xml, Reason} ->
+            send_events(Stream, [{xmlstreamerror, Reason}]);
+	  throw:Exception ->
+            throw(Exception)
+    end.
+
+%% No wrapper tag defined:
+process_elements(#xml_stream{wrapper_tagnames=undefined} = Stream, XML_Elements) ->
+    process_elements2(Stream, XML_Elements, []);
+%% Wrapper tags defined:
+%% Remove level 1 wrapper tags.
+%% Known use case: Remove enclosing body for BOSH support
+process_elements(#xml_stream{wrapper_tagnames=TagNames} = Stream, XML_Elements)
+  when TagNames /= undefined ->
+    New_XML_Elements =
+	lists:map(
+	  fun(XML_Element) when is_record(XML_Element, xmlel) ->
+		  case lists:member(XML_Element#xmlel.name,
+				    TagNames) of
+		      true -> XML_Element#xmlel.children;
+		      false -> XML_Element
+		  end;
+	     (XML_Element) when is_record(XML_Element, xmlelement) ->
+		  case lists:member(XML_Element#xmlelement.name,
+				    TagNames) of
+		      true -> XML_Element#xmlelement.children;
+		      false -> XML_Element
+		  end
+	  end, XML_Elements),
+    process_elements2(Stream, lists:flatten(New_XML_Elements), []);
+%% All other cases (for example endtag)
+process_elements(Stream, XML_Elements) ->
+    process_elements2(Stream, XML_Elements, []).
+
+process_elements2(Stream, [XML_Element | Rest], Events) ->
+    case XML_Element of
+	%% With namespace support.
+        #xmlel{name = Name, attrs = Attrs}
+	when Stream#xml_stream.opened == false ->
+	    %% Stream is freshly opened.
+            New_Stream = Stream#xml_stream{opened = true},
+            New_Events = case Stream#xml_stream.xmlstreamstart of
+			     old -> [{xmlstreamstart, Name, Attrs} | Events];
+			     new -> [#xmlstreamstart{element = XML_Element} | Events]
+			 end,
+            process_elements2(New_Stream, Rest, New_Events);
+        #xmlel{} ->
+	    %% An "depth 1" element and its children.
+            New_Events = [#xmlstreamelement{element = XML_Element} |
+			  Events],
+            process_elements2(Stream, Rest, New_Events);
+
+	%% Without namespace support.
+        #xmlelement{name = Name, attrs = Attrs}
+	when Stream#xml_stream.opened == false ->
+	    %% Stream is freshly opened.
+            New_Stream = Stream#xml_stream{opened = true},
+            New_Events = case Stream#xml_stream.xmlstreamstart of
+			     old -> [{xmlstreamstart, Name, Attrs} | Events];
+			     new -> [#xmlstreamstart{element = XML_Element} | Events]
+			 end,
+            process_elements2(New_Stream, Rest, New_Events);
+        #xmlelement{} ->
+	    %% A "depth 1" element and its children.
+            New_Events = [#xmlstreamelement{element = XML_Element} |
+			  Events],
+            process_elements2(Stream, Rest, New_Events);
+
+	%% Common.
+        #xmlendtag{} ->
+	    %% Stream is closed.
+            New_Stream = Stream#xml_stream{opened = false},
+            New_Events = [#xmlstreamend{endtag = XML_Element} |
+			  Events],
+            process_elements2(New_Stream, Rest, New_Events);
+
+	%% Character data as <stream> child, ignore.
+	%% This is probably a keep-alive whitespace.
+        #xmlcdata{} ->
+            process_elements2(Stream, Rest, Events)
+    end;
+process_elements2(Stream, [], Events) ->
+    {ok, Stream, lists:reverse(Events)}.
+
+send_events(#xml_stream{callback = {gen_fsm, Pid}} = Stream,
+	    [Event | Rest]) ->
+    case catch gen_fsm:send_event(Pid, Event) of
+        {'EXIT', Reason} ->
+            {error, {'EXIT', Reason}};
+        ok ->
+            send_events(Stream, Rest)
+    end;
+send_events(#xml_stream{callback = {process, Pid}} = Stream,
+	    [Event | Rest]) ->
+    case catch Pid ! Event of
+        {'EXIT', Reason} ->
+            {error, {'EXIT', Reason}};
+        _ ->
+            send_events(Stream, Rest)
+    end;
+send_events(#xml_stream{callback = {apply, {M, F, Extra}}} = Stream,
+	    [Event | Rest]) ->
+    case catch M:F(Event, Extra) of
+        {error, Reason} ->
+            {error, Reason};
+        {'EXIT', Reason} ->
+            {error, {'EXIT', Reason}};
+        _ ->
+            send_events(Stream, Rest)
+    end;
+send_events(#xml_stream{callback = no_callback} = Stream, Events) ->
+    {ok, Stream, Events};
+send_events(Stream, [Event | Rest]) ->
+    error_logger:info_msg("~s:send_event/2: Event: ~p~n", [?MODULE, Event]),
+    send_events(Stream, Rest);
+send_events(Stream, []) ->
+    {ok, Stream}.
+
+%% --------------------------------------------------------------------
+%% Document parsing.
+%% --------------------------------------------------------------------
+
+%% @spec (Data) -> [XML_Element]
+%%     Data = string() | binary()
+%%     XML_Element = exmpp_xml:xmlel() | exmpp_xml:xmlel_old() | exmpp_xml:xmlcdata()
+%% @doc Parse the given data.
+%%
+%% The XML parser is created with default options.
+%%
+%% @see exmpp_xml:start_parser/0.
+%% @see exmpp_xml:parse_document/1.
+
+-spec(parse_element/1 ::
+      (binary() | string()) ->
+	     [xmlnode() | xmlendtag()]).
+
+parse_element(Data) ->
+    parse_element(Data, []).
+
+%% @spec (Data, Parser_Options) -> [XML_Element]
+%%     Data = string() | binary()
+%%     Parser_Options = [exmpp_xml:xmlparseroption()]
+%%     XML_Element = exmpp_xml:xmlel() | exmpp_xml:xmlel_old() | exmpp_xml:xmlcdata()
+%% @doc Parse the given data.
+%%
+%% The XML parser is created with given `Parser_Options' options.
+%%
+%% @see exmpp_xml:start_parser/1.
+%% @see exmpp_xml:parse_document/2.
+
+-spec(parse_element/2 ::
+      (binary() | string(), [exmpp_xml:xmlparseroption()]) ->
+	     [xmlnode() | xmlendtag()]).
+
+parse_element(Data, Parser_Options) ->
+    case exmpp_xml:parse_document(Data, Parser_Options) of
+        done ->
+            throw({xmlstream, parse_element, parse_error, done});
+        [] ->
+            throw({xmlstream, parse_element, parse_error, []});
+        XML_Element ->
+            XML_Element
+    end.
+
+%% @spec (Stream, TagNames) -> New_Stream
+%%     Stream = xmlstream()
+%%     TagNames =  [atom()|string()]
+%%     New_Stream = xmlstream()
+%% @doc Reset stream and the underlying XML parser.
+%% TODO: Support wrapper tag match on both namespace and name ?
+
+-spec(set_wrapper_tagnames/2 :: (xmlstream(), [atom()|string()]) -> xmlstream()).
+
+set_wrapper_tagnames(Stream, TagNames) when is_list(TagNames) ->
+    Stream#xml_stream{wrapper_tagnames = TagNames}.
+
+%% --------------------------------------------------------------------
+%% Documentation / type definitions.
+%% --------------------------------------------------------------------
+
+%% @type callback() = Gen_Fsm | Process | Function | No_Callback | Log
+%%     Gen_Fsm = {gen_fsm, Pid_or_Name}
+%%     Pid_or_Name = pid() | atom()
+%%     Process = {process, pid()} | pid()
+%%     Function = {apply, {Mod, Func, Extra}}
+%%         Mod = atom()
+%%         Func = atom()
+%%         Extra = term()
+%%     No_Callback = no_callback
+%%     Log = term().
+%% Represents the recipient of each event.
+%%
+%% In case of a `Gen_Fsm', the call will be:
+%% ```
+%% gen_fsm:send_event(Pid_or_Name, Event)
+%% '''
+%% See {@link gen_fsm} documentation for more informations.
+%%
+%% In case of a `Process', the event is sent using the Erlang `!' operator.
+%%
+%% In case of a `Function', the call will be:
+%% ```
+%% Mod:Func(Event, Extra)
+%% '''
+%% So this function must have an arity of 2.
+%%
+%% In case of `No_Callback', events are accumulated and returned to
+%% {@link parse/2} caller.
+%%
+%% For `Function', it must return `{error, Reason}' if an error occured
+%% or anything else if the event is accepted.
+%%
+%% If the callback() doesn't match any of these specifications
+%% (the `Log' case), the event will be logged with
+%% {@link error_logger:info_msg/2}.
+
+%% @type xmlstream().
+%% Handler for the opened stream, initialized with a call to {@link
+%% start/0} or {@link start/1}.
+
+%% @type xmlstreamevent() = Stream_Start | Stream_Element | Stream_End | Error
+%%     Stream_Start = {xmlstreamstart, XML_Element} | {xmlstreamstart, Name, Attrs}
+%%     Stream_Element = {xmlstreamelement, XML_Element}
+%%     Stream_End = {xmlstreamend, XML_End_Tag}
+%%       XML_Element = exmpp_xml:xmlel() | exmpp_xml:xmlel_old()
+%%       XML_End_Tag = exmpp_xml:xmlendtag()
+%%       Name = atom() | string()
+%%       Attrs = [exmpp_xml:xmlattr_old() | exmpp_xml:xmlattr()]
+%%     Stream_Error = {xmlstreamerror, Reason}.
+%% Records representing an event sent by the {@link parse/2} function.
diff -r d551623afde5 deps/exmpp/src/exmpp_known_attrs.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/exmpp_known_attrs.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,313 @@
+% # Generated by extract-known-from-specs r560 on 2008-08-01T09:50:15Z
+
+-module(exmpp_known_attrs).
+
+-export([attr_as_list/1]).
+
+attr_as_list('from') ->
+    "from";
+attr_as_list('id') ->
+    "id";
+attr_as_list('to') ->
+    "to";
+attr_as_list('version') ->
+    "version";
+attr_as_list('type') ->
+    "type";
+attr_as_list('mechanism') ->
+    "mechanism";
+attr_as_list('code') ->
+    "code";
+attr_as_list('name') ->
+    "name";
+attr_as_list('action') ->
+    "action";
+attr_as_list('order') ->
+    "order";
+attr_as_list('value') ->
+    "value";
+attr_as_list('ask') ->
+    "ask";
+attr_as_list('jid') ->
+    "jid";
+attr_as_list('subscription') ->
+    "subscription";
+attr_as_list('port') ->
+    "port";
+attr_as_list('label') ->
+    "label";
+attr_as_list('var') ->
+    "var";
+attr_as_list('category') ->
+    "category";
+attr_as_list('node') ->
+    "node";
+attr_as_list('seconds') ->
+    "seconds";
+attr_as_list('stored') ->
+    "stored";
+attr_as_list('delivered') ->
+    "delivered";
+attr_as_list('desc') ->
+    "desc";
+attr_as_list('uri') ->
+    "uri";
+attr_as_list('maxchars') ->
+    "maxchars";
+attr_as_list('maxstanzas') ->
+    "maxstanzas";
+attr_as_list('since') ->
+    "since";
+attr_as_list('affiliation') ->
+    "affiliation";
+attr_as_list('nick') ->
+    "nick";
+attr_as_list('role') ->
+    "role";
+attr_as_list('thread') ->
+    "thread";
+attr_as_list('sid') ->
+    "sid";
+attr_as_list('block-size') ->
+    "block-size";
+attr_as_list('seq') ->
+    "seq";
+attr_as_list('autojoin') ->
+    "autojoin";
+attr_as_list('url') ->
+    "url";
+attr_as_list('sessionid') ->
+    "sessionid";
+attr_as_list('status') ->
+    "status";
+attr_as_list('execute') ->
+    "execute";
+attr_as_list('index') ->
+    "index";
+attr_as_list('max_items') ->
+    "max_items";
+attr_as_list('subid') ->
+    "subid";
+attr_as_list('notify') ->
+    "notify";
+attr_as_list('feature') ->
+    "feature";
+attr_as_list('expiry') ->
+    "expiry";
+attr_as_list('mode') ->
+    "mode";
+attr_as_list('host') ->
+    "host";
+attr_as_list('zeroconf') ->
+    "zeroconf";
+attr_as_list('dstaddr') ->
+    "dstaddr";
+attr_as_list('method') ->
+    "method";
+attr_as_list('per-hop') ->
+    "per-hop";
+attr_as_list('condition') ->
+    "condition";
+attr_as_list('bytes') ->
+    "bytes";
+attr_as_list('height') ->
+    "height";
+attr_as_list('width') ->
+    "width";
+attr_as_list('stamp') ->
+    "stamp";
+attr_as_list('mime-type') ->
+    "mime-type";
+attr_as_list('profile') ->
+    "profile";
+attr_as_list('date') ->
+    "date";
+attr_as_list('hash') ->
+    "hash";
+attr_as_list('size') ->
+    "size";
+attr_as_list('length') ->
+    "length";
+attr_as_list('offset') ->
+    "offset";
+attr_as_list('ext') ->
+    "ext";
+attr_as_list('ver') ->
+    "ver";
+attr_as_list('datatype') ->
+    "datatype";
+attr_as_list('min') ->
+    "min";
+attr_as_list('max') ->
+    "max";
+attr_as_list('accept') ->
+    "accept";
+attr_as_list('ack') ->
+    "ack";
+attr_as_list('authid') ->
+    "authid";
+attr_as_list('charsets') ->
+    "charsets";
+attr_as_list('content') ->
+    "content";
+attr_as_list('hold') ->
+    "hold";
+attr_as_list('inactivity') ->
+    "inactivity";
+attr_as_list('key') ->
+    "key";
+attr_as_list('maxpause') ->
+    "maxpause";
+attr_as_list('newkey') ->
+    "newkey";
+attr_as_list('pause') ->
+    "pause";
+attr_as_list('polling') ->
+    "polling";
+attr_as_list('report') ->
+    "report";
+attr_as_list('requests') ->
+    "requests";
+attr_as_list('rid') ->
+    "rid";
+attr_as_list('route') ->
+    "route";
+attr_as_list('secure') ->
+    "secure";
+attr_as_list('stream') ->
+    "stream";
+attr_as_list('time') ->
+    "time";
+attr_as_list('wait') ->
+    "wait";
+attr_as_list('scheme') ->
+    "scheme";
+attr_as_list('save') ->
+    "save";
+attr_as_list('exactmatch') ->
+    "exactmatch";
+attr_as_list('start') ->
+    "start";
+attr_as_list('with') ->
+    "with";
+attr_as_list('subject') ->
+    "subject";
+attr_as_list('secs') ->
+    "secs";
+attr_as_list('utc') ->
+    "utc";
+attr_as_list('expire') ->
+    "expire";
+attr_as_list('otr') ->
+    "otr";
+attr_as_list('unset') ->
+    "unset";
+attr_as_list('end') ->
+    "end";
+attr_as_list('use') ->
+    "use";
+attr_as_list('open') ->
+    "open";
+attr_as_list('cdate') ->
+    "cdate";
+attr_as_list('mdate') ->
+    "mdate";
+attr_as_list('initiator') ->
+    "initiator";
+attr_as_list('responder') ->
+    "responder";
+attr_as_list('creator') ->
+    "creator";
+attr_as_list('senders') ->
+    "senders";
+attr_as_list('channels') ->
+    "channels";
+attr_as_list('clockrate') ->
+    "clockrate";
+attr_as_list('maxptime') ->
+    "maxptime";
+attr_as_list('ptime') ->
+    "ptime";
+attr_as_list('ns') ->
+    "ns";
+attr_as_list('num') ->
+    "num";
+attr_as_list('charset') ->
+    "charset";
+attr_as_list('source_lang') ->
+    "source_lang";
+attr_as_list('destination_lang') ->
+    "destination_lang";
+attr_as_list('dictionary') ->
+    "dictionary";
+attr_as_list('engine') ->
+    "engine";
+attr_as_list('reviewed') ->
+    "reviewed";
+attr_as_list('pivotable') ->
+    "pivotable";
+attr_as_list('pwd') ->
+    "pwd";
+attr_as_list('ufrag') ->
+    "ufrag";
+attr_as_list('component') ->
+    "component";
+attr_as_list('foundation') ->
+    "foundation";
+attr_as_list('generation') ->
+    "generation";
+attr_as_list('ip') ->
+    "ip";
+attr_as_list('network') ->
+    "network";
+attr_as_list('priority') ->
+    "priority";
+attr_as_list('protocol') ->
+    "protocol";
+attr_as_list('rel-addr') ->
+    "rel-addr";
+attr_as_list('rel-port') ->
+    "rel-port";
+attr_as_list('rem-addr') ->
+    "rem-addr";
+attr_as_list('rem-port') ->
+    "rem-port";
+attr_as_list('duration') ->
+    "duration";
+attr_as_list('volume') ->
+    "volume";
+attr_as_list('restart') ->
+    "restart";
+attr_as_list('tag') ->
+    "tag";
+attr_as_list('password') ->
+    "password";
+attr_as_list('transport') ->
+    "transport";
+attr_as_list('username') ->
+    "username";
+attr_as_list('alt') ->
+    "alt";
+attr_as_list('cid') ->
+    "cid";
+attr_as_list('consumer') ->
+    "consumer";
+attr_as_list('expires') ->
+    "expires";
+attr_as_list('service') ->
+    "service";
+attr_as_list('sequence') ->
+    "sequence";
+attr_as_list('authentication') ->
+    "authentication";
+attr_as_list('disclosure') ->
+    "disclosure";
+attr_as_list('logging') ->
+    "logging";
+attr_as_list('tls') ->
+    "tls";
+
+attr_as_list(Attr) when is_atom(Attr) ->
+    atom_to_list(Attr);
+attr_as_list(Attr) when is_list(Attr) ->
+    Attr.
diff -r d551623afde5 deps/exmpp/src/exmpp_known_elems.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/exmpp_known_elems.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,1281 @@
+% # Generated by extract-known-from-specs r560 on 2008-08-01T09:50:15Z
+
+-module(exmpp_known_elems).
+
+-export([elem_as_list/1]).
+
+elem_as_list('stream') ->
+    "stream";
+elem_as_list('features') ->
+    "features";
+elem_as_list('error') ->
+    "error";
+elem_as_list('result') ->
+    "result";
+elem_as_list('verify') ->
+    "verify";
+elem_as_list('bind') ->
+    "bind";
+elem_as_list('resource') ->
+    "resource";
+elem_as_list('jid') ->
+    "jid";
+elem_as_list('mechanisms') ->
+    "mechanisms";
+elem_as_list('mechanism') ->
+    "mechanism";
+elem_as_list('auth') ->
+    "auth";
+elem_as_list('challenge') ->
+    "challenge";
+elem_as_list('response') ->
+    "response";
+elem_as_list('abort') ->
+    "abort";
+elem_as_list('success') ->
+    "success";
+elem_as_list('failure') ->
+    "failure";
+elem_as_list('aborted') ->
+    "aborted";
+elem_as_list('incorrect-encoding') ->
+    "incorrect-encoding";
+elem_as_list('invalid-authzid') ->
+    "invalid-authzid";
+elem_as_list('invalid-mechanism') ->
+    "invalid-mechanism";
+elem_as_list('mechanism-too-weak') ->
+    "mechanism-too-weak";
+elem_as_list('not-authorized') ->
+    "not-authorized";
+elem_as_list('temporary-auth-failure') ->
+    "temporary-auth-failure";
+elem_as_list('bad-request') ->
+    "bad-request";
+elem_as_list('conflict') ->
+    "conflict";
+elem_as_list('feature-not-implemented') ->
+    "feature-not-implemented";
+elem_as_list('forbidden') ->
+    "forbidden";
+elem_as_list('gone') ->
+    "gone";
+elem_as_list('internal-server-error') ->
+    "internal-server-error";
+elem_as_list('item-not-found') ->
+    "item-not-found";
+elem_as_list('jid-malformed') ->
+    "jid-malformed";
+elem_as_list('not-acceptable') ->
+    "not-acceptable";
+elem_as_list('not-allowed') ->
+    "not-allowed";
+elem_as_list('payment-required') ->
+    "payment-required";
+elem_as_list('recipient-unavailable') ->
+    "recipient-unavailable";
+elem_as_list('redirect') ->
+    "redirect";
+elem_as_list('registration-required') ->
+    "registration-required";
+elem_as_list('remote-server-not-found') ->
+    "remote-server-not-found";
+elem_as_list('remote-server-timeout') ->
+    "remote-server-timeout";
+elem_as_list('resource-constraint') ->
+    "resource-constraint";
+elem_as_list('service-unavailable') ->
+    "service-unavailable";
+elem_as_list('subscription-required') ->
+    "subscription-required";
+elem_as_list('undefined-condition') ->
+    "undefined-condition";
+elem_as_list('unexpected-request') ->
+    "unexpected-request";
+elem_as_list('text') ->
+    "text";
+elem_as_list('bad-format') ->
+    "bad-format";
+elem_as_list('bad-namespace-prefix') ->
+    "bad-namespace-prefix";
+elem_as_list('connection-timeout') ->
+    "connection-timeout";
+elem_as_list('host-gone') ->
+    "host-gone";
+elem_as_list('host-unknown') ->
+    "host-unknown";
+elem_as_list('improper-addressing') ->
+    "improper-addressing";
+elem_as_list('invalid-from') ->
+    "invalid-from";
+elem_as_list('invalid-id') ->
+    "invalid-id";
+elem_as_list('invalid-namespace') ->
+    "invalid-namespace";
+elem_as_list('invalid-xml') ->
+    "invalid-xml";
+elem_as_list('policy-violation') ->
+    "policy-violation";
+elem_as_list('remote-connection-failed') ->
+    "remote-connection-failed";
+elem_as_list('restricted-xml') ->
+    "restricted-xml";
+elem_as_list('see-other-host') ->
+    "see-other-host";
+elem_as_list('system-shutdown') ->
+    "system-shutdown";
+elem_as_list('unsupported-encoding') ->
+    "unsupported-encoding";
+elem_as_list('unsupported-stanza-type') ->
+    "unsupported-stanza-type";
+elem_as_list('unsupported-version') ->
+    "unsupported-version";
+elem_as_list('xml-not-well-formed') ->
+    "xml-not-well-formed";
+elem_as_list('starttls') ->
+    "starttls";
+elem_as_list('proceed') ->
+    "proceed";
+elem_as_list('message') ->
+    "message";
+elem_as_list('body') ->
+    "body";
+elem_as_list('subject') ->
+    "subject";
+elem_as_list('thread') ->
+    "thread";
+elem_as_list('presence') ->
+    "presence";
+elem_as_list('show') ->
+    "show";
+elem_as_list('status') ->
+    "status";
+elem_as_list('priority') ->
+    "priority";
+elem_as_list('iq') ->
+    "iq";
+elem_as_list('query') ->
+    "query";
+elem_as_list('active') ->
+    "active";
+elem_as_list('default') ->
+    "default";
+elem_as_list('list') ->
+    "list";
+elem_as_list('item') ->
+    "item";
+elem_as_list('presence-in') ->
+    "presence-in";
+elem_as_list('presence-out') ->
+    "presence-out";
+elem_as_list('group') ->
+    "group";
+elem_as_list('session') ->
+    "session";
+elem_as_list('e2e') ->
+    "e2e";
+elem_as_list('decryption-failed') ->
+    "decryption-failed";
+elem_as_list('signature-unverified') ->
+    "signature-unverified";
+elem_as_list('bad-timestamp') ->
+    "bad-timestamp";
+elem_as_list('client') ->
+    "client";
+elem_as_list('close') ->
+    "close";
+elem_as_list('expire') ->
+    "expire";
+elem_as_list('oneshot') ->
+    "oneshot";
+elem_as_list('proxy') ->
+    "proxy";
+elem_as_list('server') ->
+    "server";
+elem_as_list('x') ->
+    "x";
+elem_as_list('instructions') ->
+    "instructions";
+elem_as_list('title') ->
+    "title";
+elem_as_list('field') ->
+    "field";
+elem_as_list('desc') ->
+    "desc";
+elem_as_list('required') ->
+    "required";
+elem_as_list('option') ->
+    "option";
+elem_as_list('value') ->
+    "value";
+elem_as_list('reported') ->
+    "reported";
+elem_as_list('methodCall') ->
+    "methodCall";
+elem_as_list('methodName') ->
+    "methodName";
+elem_as_list('params') ->
+    "params";
+elem_as_list('param') ->
+    "param";
+elem_as_list('methodResponse') ->
+    "methodResponse";
+elem_as_list('fault') ->
+    "fault";
+elem_as_list('struct') ->
+    "struct";
+elem_as_list('member') ->
+    "member";
+elem_as_list('i4') ->
+    "i4";
+elem_as_list('int') ->
+    "int";
+elem_as_list('string') ->
+    "string";
+elem_as_list('double') ->
+    "double";
+elem_as_list('Base64') ->
+    "Base64";
+elem_as_list('boolean') ->
+    "boolean";
+elem_as_list('dateTime.iso8601') ->
+    "dateTime.iso8601";
+elem_as_list('array') ->
+    "array";
+elem_as_list('name') ->
+    "name";
+elem_as_list('data') ->
+    "data";
+elem_as_list('ns') ->
+    "ns";
+elem_as_list('offline') ->
+    "offline";
+elem_as_list('feature') ->
+    "feature";
+elem_as_list('delivered') ->
+    "delivered";
+elem_as_list('displayed') ->
+    "displayed";
+elem_as_list('composing') ->
+    "composing";
+elem_as_list('id') ->
+    "id";
+elem_as_list('identity') ->
+    "identity";
+elem_as_list('addresses') ->
+    "addresses";
+elem_as_list('address') ->
+    "address";
+elem_as_list('password') ->
+    "password";
+elem_as_list('history') ->
+    "history";
+elem_as_list('actor') ->
+    "actor";
+elem_as_list('reason') ->
+    "reason";
+elem_as_list('destroy') ->
+    "destroy";
+elem_as_list('unique') ->
+    "unique";
+elem_as_list('decline') ->
+    "decline";
+elem_as_list('invite') ->
+    "invite";
+elem_as_list('continue') ->
+    "continue";
+elem_as_list('open') ->
+    "open";
+elem_as_list('storage') ->
+    "storage";
+elem_as_list('conference') ->
+    "conference";
+elem_as_list('nick') ->
+    "nick";
+elem_as_list('url') ->
+    "url";
+elem_as_list('command') ->
+    "command";
+elem_as_list('actions') ->
+    "actions";
+elem_as_list('prev') ->
+    "prev";
+elem_as_list('next') ->
+    "next";
+elem_as_list('complete') ->
+    "complete";
+elem_as_list('note') ->
+    "note";
+elem_as_list('bad-action') ->
+    "bad-action";
+elem_as_list('bad-locale') ->
+    "bad-locale";
+elem_as_list('bad-payload') ->
+    "bad-payload";
+elem_as_list('bad-sessionid') ->
+    "bad-sessionid";
+elem_as_list('malformed-action') ->
+    "malformed-action";
+elem_as_list('session-expired') ->
+    "session-expired";
+elem_as_list('xCard') ->
+    "xCard";
+elem_as_list('vCard') ->
+    "vCard";
+elem_as_list('VERSION') ->
+    "VERSION";
+elem_as_list('FN') ->
+    "FN";
+elem_as_list('N') ->
+    "N";
+elem_as_list('FAMILY') ->
+    "FAMILY";
+elem_as_list('GIVEN') ->
+    "GIVEN";
+elem_as_list('MIDDLE') ->
+    "MIDDLE";
+elem_as_list('PREFIX') ->
+    "PREFIX";
+elem_as_list('SUFFIX') ->
+    "SUFFIX";
+elem_as_list('NICKNAME') ->
+    "NICKNAME";
+elem_as_list('PHOTO') ->
+    "PHOTO";
+elem_as_list('BDAY') ->
+    "BDAY";
+elem_as_list('ADR') ->
+    "ADR";
+elem_as_list('POBOX') ->
+    "POBOX";
+elem_as_list('EXTADD') ->
+    "EXTADD";
+elem_as_list('STREET') ->
+    "STREET";
+elem_as_list('LOCALITY') ->
+    "LOCALITY";
+elem_as_list('REGION') ->
+    "REGION";
+elem_as_list('PCODE') ->
+    "PCODE";
+elem_as_list('CTRY') ->
+    "CTRY";
+elem_as_list('LABEL') ->
+    "LABEL";
+elem_as_list('LINE') ->
+    "LINE";
+elem_as_list('TEL') ->
+    "TEL";
+elem_as_list('NUMBER') ->
+    "NUMBER";
+elem_as_list('EMAIL') ->
+    "EMAIL";
+elem_as_list('USERID') ->
+    "USERID";
+elem_as_list('JABBERID') ->
+    "JABBERID";
+elem_as_list('MAILER') ->
+    "MAILER";
+elem_as_list('TZ') ->
+    "TZ";
+elem_as_list('GEO') ->
+    "GEO";
+elem_as_list('LAT') ->
+    "LAT";
+elem_as_list('LON') ->
+    "LON";
+elem_as_list('TITLE') ->
+    "TITLE";
+elem_as_list('ROLE') ->
+    "ROLE";
+elem_as_list('LOGO') ->
+    "LOGO";
+elem_as_list('AGENT') ->
+    "AGENT";
+elem_as_list('ORG') ->
+    "ORG";
+elem_as_list('ORGNAME') ->
+    "ORGNAME";
+elem_as_list('ORGUNIT') ->
+    "ORGUNIT";
+elem_as_list('CATEGORIES') ->
+    "CATEGORIES";
+elem_as_list('KEYWORD') ->
+    "KEYWORD";
+elem_as_list('NOTE') ->
+    "NOTE";
+elem_as_list('PRODID') ->
+    "PRODID";
+elem_as_list('REV') ->
+    "REV";
+elem_as_list('SORT-STRING') ->
+    "SORT-STRING";
+elem_as_list('SOUND') ->
+    "SOUND";
+elem_as_list('PHONETIC') ->
+    "PHONETIC";
+elem_as_list('UID') ->
+    "UID";
+elem_as_list('URL') ->
+    "URL";
+elem_as_list('DESC') ->
+    "DESC";
+elem_as_list('CLASS') ->
+    "CLASS";
+elem_as_list('PUBLIC') ->
+    "PUBLIC";
+elem_as_list('PRIVATE') ->
+    "PRIVATE";
+elem_as_list('CONFIDENTIAL') ->
+    "CONFIDENTIAL";
+elem_as_list('KEY') ->
+    "KEY";
+elem_as_list('CRED') ->
+    "CRED";
+elem_as_list('HOME') ->
+    "HOME";
+elem_as_list('WORK') ->
+    "WORK";
+elem_as_list('POSTAL') ->
+    "POSTAL";
+elem_as_list('PARCEL') ->
+    "PARCEL";
+elem_as_list('DOM') ->
+    "DOM";
+elem_as_list('INTL') ->
+    "INTL";
+elem_as_list('PREF') ->
+    "PREF";
+elem_as_list('VOICE') ->
+    "VOICE";
+elem_as_list('FAX') ->
+    "FAX";
+elem_as_list('PAGER') ->
+    "PAGER";
+elem_as_list('MSG') ->
+    "MSG";
+elem_as_list('CELL') ->
+    "CELL";
+elem_as_list('VIDEO') ->
+    "VIDEO";
+elem_as_list('BBS') ->
+    "BBS";
+elem_as_list('MODEM') ->
+    "MODEM";
+elem_as_list('ISDN') ->
+    "ISDN";
+elem_as_list('PCS') ->
+    "PCS";
+elem_as_list('INTERNET') ->
+    "INTERNET";
+elem_as_list('X400') ->
+    "X400";
+elem_as_list('TYPE') ->
+    "TYPE";
+elem_as_list('BINVAL') ->
+    "BINVAL";
+elem_as_list('EXTVAL') ->
+    "EXTVAL";
+elem_as_list('first') ->
+    "first";
+elem_as_list('last') ->
+    "last";
+elem_as_list('email') ->
+    "email";
+elem_as_list('set') ->
+    "set";
+elem_as_list('after') ->
+    "after";
+elem_as_list('before') ->
+    "before";
+elem_as_list('count') ->
+    "count";
+elem_as_list('index') ->
+    "index";
+elem_as_list('max') ->
+    "max";
+elem_as_list('pubsub') ->
+    "pubsub";
+elem_as_list('affiliations') ->
+    "affiliations";
+elem_as_list('affiliation') ->
+    "affiliation";
+elem_as_list('configure') ->
+    "configure";
+elem_as_list('create') ->
+    "create";
+elem_as_list('items') ->
+    "items";
+elem_as_list('options') ->
+    "options";
+elem_as_list('publish') ->
+    "publish";
+elem_as_list('retract') ->
+    "retract";
+elem_as_list('subscribe-options') ->
+    "subscribe-options";
+elem_as_list('subscribe') ->
+    "subscribe";
+elem_as_list('subscriptions') ->
+    "subscriptions";
+elem_as_list('subscription') ->
+    "subscription";
+elem_as_list('unsubscribe') ->
+    "unsubscribe";
+elem_as_list('closed-node') ->
+    "closed-node";
+elem_as_list('configuration-required') ->
+    "configuration-required";
+elem_as_list('invalid-jid') ->
+    "invalid-jid";
+elem_as_list('invalid-options') ->
+    "invalid-options";
+elem_as_list('invalid-payload') ->
+    "invalid-payload";
+elem_as_list('invalid-subid') ->
+    "invalid-subid";
+elem_as_list('item-forbidden') ->
+    "item-forbidden";
+elem_as_list('item-required') ->
+    "item-required";
+elem_as_list('jid-required') ->
+    "jid-required";
+elem_as_list('max-items-exceeded') ->
+    "max-items-exceeded";
+elem_as_list('max-nodes-exceeded') ->
+    "max-nodes-exceeded";
+elem_as_list('nodeid-required') ->
+    "nodeid-required";
+elem_as_list('not-in-roster-group') ->
+    "not-in-roster-group";
+elem_as_list('not-subscribed') ->
+    "not-subscribed";
+elem_as_list('payload-too-big') ->
+    "payload-too-big";
+elem_as_list('payload-required') ->
+    "payload-required";
+elem_as_list('pending-subscription') ->
+    "pending-subscription";
+elem_as_list('presence-subscription-required') ->
+    "presence-subscription-required";
+elem_as_list('subid-required') ->
+    "subid-required";
+elem_as_list('unsupported') ->
+    "unsupported";
+elem_as_list('unsupported-access-model') ->
+    "unsupported-access-model";
+elem_as_list('event') ->
+    "event";
+elem_as_list('collection') ->
+    "collection";
+elem_as_list('associate') ->
+    "associate";
+elem_as_list('disassociate') ->
+    "disassociate";
+elem_as_list('configuration') ->
+    "configuration";
+elem_as_list('delete') ->
+    "delete";
+elem_as_list('purge') ->
+    "purge";
+elem_as_list('activate') ->
+    "activate";
+elem_as_list('streamhost') ->
+    "streamhost";
+elem_as_list('udpsuccess') ->
+    "udpsuccess";
+elem_as_list('streamhost-used') ->
+    "streamhost-used";
+elem_as_list('confirm') ->
+    "confirm";
+elem_as_list('html') ->
+    "html";
+elem_as_list('DataEncodingUnknown') ->
+    "DataEncodingUnknown";
+elem_as_list('MustUnderstand') ->
+    "MustUnderstand";
+elem_as_list('Receiver') ->
+    "Receiver";
+elem_as_list('Sender') ->
+    "Sender";
+elem_as_list('VersionMismatch') ->
+    "VersionMismatch";
+elem_as_list('register') ->
+    "register";
+elem_as_list('registered') ->
+    "registered";
+elem_as_list('username') ->
+    "username";
+elem_as_list('city') ->
+    "city";
+elem_as_list('state') ->
+    "state";
+elem_as_list('zip') ->
+    "zip";
+elem_as_list('phone') ->
+    "phone";
+elem_as_list('date') ->
+    "date";
+elem_as_list('misc') ->
+    "misc";
+elem_as_list('key') ->
+    "key";
+elem_as_list('remove') ->
+    "remove";
+elem_as_list('digest') ->
+    "digest";
+elem_as_list('amp') ->
+    "amp";
+elem_as_list('invalid-rules') ->
+    "invalid-rules";
+elem_as_list('unsupported-actions') ->
+    "unsupported-actions";
+elem_as_list('unsupported-conditions') ->
+    "unsupported-conditions";
+elem_as_list('rule') ->
+    "rule";
+elem_as_list('failed-rules') ->
+    "failed-rules";
+elem_as_list('geoloc') ->
+    "geoloc";
+elem_as_list('alt') ->
+    "alt";
+elem_as_list('area') ->
+    "area";
+elem_as_list('bearing') ->
+    "bearing";
+elem_as_list('building') ->
+    "building";
+elem_as_list('country') ->
+    "country";
+elem_as_list('datum') ->
+    "datum";
+elem_as_list('description') ->
+    "description";
+elem_as_list('floor') ->
+    "floor";
+elem_as_list('lat') ->
+    "lat";
+elem_as_list('locality') ->
+    "locality";
+elem_as_list('lon') ->
+    "lon";
+elem_as_list('postalcode') ->
+    "postalcode";
+elem_as_list('region') ->
+    "region";
+elem_as_list('room') ->
+    "room";
+elem_as_list('speed') ->
+    "speed";
+elem_as_list('street') ->
+    "street";
+elem_as_list('timestamp') ->
+    "timestamp";
+elem_as_list('uri') ->
+    "uri";
+elem_as_list('roster') ->
+    "roster";
+elem_as_list('metadata') ->
+    "metadata";
+elem_as_list('stop') ->
+    "stop";
+elem_as_list('info') ->
+    "info";
+elem_as_list('pointer') ->
+    "pointer";
+elem_as_list('inactive') ->
+    "inactive";
+elem_as_list('paused') ->
+    "paused";
+elem_as_list('utc') ->
+    "utc";
+elem_as_list('tz') ->
+    "tz";
+elem_as_list('display') ->
+    "display";
+elem_as_list('version') ->
+    "version";
+elem_as_list('os') ->
+    "os";
+elem_as_list('si') ->
+    "si";
+elem_as_list('bad-profile') ->
+    "bad-profile";
+elem_as_list('no-valid-streams') ->
+    "no-valid-streams";
+elem_as_list('file') ->
+    "file";
+elem_as_list('range') ->
+    "range";
+elem_as_list('prompt') ->
+    "prompt";
+elem_as_list('mood') ->
+    "mood";
+elem_as_list('afraid') ->
+    "afraid";
+elem_as_list('amazed') ->
+    "amazed";
+elem_as_list('angry') ->
+    "angry";
+elem_as_list('annoyed') ->
+    "annoyed";
+elem_as_list('anxious') ->
+    "anxious";
+elem_as_list('aroused') ->
+    "aroused";
+elem_as_list('ashamed') ->
+    "ashamed";
+elem_as_list('bored') ->
+    "bored";
+elem_as_list('brave') ->
+    "brave";
+elem_as_list('calm') ->
+    "calm";
+elem_as_list('cold') ->
+    "cold";
+elem_as_list('confused') ->
+    "confused";
+elem_as_list('contented') ->
+    "contented";
+elem_as_list('cranky') ->
+    "cranky";
+elem_as_list('curious') ->
+    "curious";
+elem_as_list('depressed') ->
+    "depressed";
+elem_as_list('disappointed') ->
+    "disappointed";
+elem_as_list('disgusted') ->
+    "disgusted";
+elem_as_list('distracted') ->
+    "distracted";
+elem_as_list('embarrassed') ->
+    "embarrassed";
+elem_as_list('excited') ->
+    "excited";
+elem_as_list('flirtatious') ->
+    "flirtatious";
+elem_as_list('frustrated') ->
+    "frustrated";
+elem_as_list('grumpy') ->
+    "grumpy";
+elem_as_list('guilty') ->
+    "guilty";
+elem_as_list('happy') ->
+    "happy";
+elem_as_list('hot') ->
+    "hot";
+elem_as_list('humbled') ->
+    "humbled";
+elem_as_list('humiliated') ->
+    "humiliated";
+elem_as_list('hungry') ->
+    "hungry";
+elem_as_list('hurt') ->
+    "hurt";
+elem_as_list('impressed') ->
+    "impressed";
+elem_as_list('in_awe') ->
+    "in_awe";
+elem_as_list('in_love') ->
+    "in_love";
+elem_as_list('indignant') ->
+    "indignant";
+elem_as_list('interested') ->
+    "interested";
+elem_as_list('intoxicated') ->
+    "intoxicated";
+elem_as_list('invincible') ->
+    "invincible";
+elem_as_list('jealous') ->
+    "jealous";
+elem_as_list('lonely') ->
+    "lonely";
+elem_as_list('mean') ->
+    "mean";
+elem_as_list('moody') ->
+    "moody";
+elem_as_list('nervous') ->
+    "nervous";
+elem_as_list('neutral') ->
+    "neutral";
+elem_as_list('offended') ->
+    "offended";
+elem_as_list('playful') ->
+    "playful";
+elem_as_list('proud') ->
+    "proud";
+elem_as_list('relieved') ->
+    "relieved";
+elem_as_list('remorseful') ->
+    "remorseful";
+elem_as_list('restless') ->
+    "restless";
+elem_as_list('sad') ->
+    "sad";
+elem_as_list('sarcastic') ->
+    "sarcastic";
+elem_as_list('serious') ->
+    "serious";
+elem_as_list('shocked') ->
+    "shocked";
+elem_as_list('shy') ->
+    "shy";
+elem_as_list('sick') ->
+    "sick";
+elem_as_list('sleepy') ->
+    "sleepy";
+elem_as_list('stressed') ->
+    "stressed";
+elem_as_list('surprised') ->
+    "surprised";
+elem_as_list('thirsty') ->
+    "thirsty";
+elem_as_list('worried') ->
+    "worried";
+elem_as_list('activity') ->
+    "activity";
+elem_as_list('doing_chores') ->
+    "doing_chores";
+elem_as_list('drinking') ->
+    "drinking";
+elem_as_list('eating') ->
+    "eating";
+elem_as_list('exercising') ->
+    "exercising";
+elem_as_list('grooming') ->
+    "grooming";
+elem_as_list('having_appointment') ->
+    "having_appointment";
+elem_as_list('relaxing') ->
+    "relaxing";
+elem_as_list('talking') ->
+    "talking";
+elem_as_list('traveling') ->
+    "traveling";
+elem_as_list('working') ->
+    "working";
+elem_as_list('at_the_spa') ->
+    "at_the_spa";
+elem_as_list('brushing_teeth') ->
+    "brushing_teeth";
+elem_as_list('buying_groceries') ->
+    "buying_groceries";
+elem_as_list('cleaning') ->
+    "cleaning";
+elem_as_list('coding') ->
+    "coding";
+elem_as_list('commuting') ->
+    "commuting";
+elem_as_list('cooking') ->
+    "cooking";
+elem_as_list('cycling') ->
+    "cycling";
+elem_as_list('day_off') ->
+    "day_off";
+elem_as_list('doing_maintenance') ->
+    "doing_maintenance";
+elem_as_list('doing_the_dishes') ->
+    "doing_the_dishes";
+elem_as_list('doing_the_laundry') ->
+    "doing_the_laundry";
+elem_as_list('driving') ->
+    "driving";
+elem_as_list('gaming') ->
+    "gaming";
+elem_as_list('gardening') ->
+    "gardening";
+elem_as_list('getting_a_haircut') ->
+    "getting_a_haircut";
+elem_as_list('going_out') ->
+    "going_out";
+elem_as_list('hanging_out') ->
+    "hanging_out";
+elem_as_list('having_a_beer') ->
+    "having_a_beer";
+elem_as_list('having_a_snack') ->
+    "having_a_snack";
+elem_as_list('having_breakfast') ->
+    "having_breakfast";
+elem_as_list('having_coffee') ->
+    "having_coffee";
+elem_as_list('having_dinner') ->
+    "having_dinner";
+elem_as_list('having_lunch') ->
+    "having_lunch";
+elem_as_list('having_tea') ->
+    "having_tea";
+elem_as_list('hiking') ->
+    "hiking";
+elem_as_list('in_a_car') ->
+    "in_a_car";
+elem_as_list('in_a_meeting') ->
+    "in_a_meeting";
+elem_as_list('in_real_life') ->
+    "in_real_life";
+elem_as_list('jogging') ->
+    "jogging";
+elem_as_list('on_a_bus') ->
+    "on_a_bus";
+elem_as_list('on_a_plane') ->
+    "on_a_plane";
+elem_as_list('on_a_train') ->
+    "on_a_train";
+elem_as_list('on_a_trip') ->
+    "on_a_trip";
+elem_as_list('on_the_phone') ->
+    "on_the_phone";
+elem_as_list('on_vacation') ->
+    "on_vacation";
+elem_as_list('on_video_phone') ->
+    "on_video_phone";
+elem_as_list('other') ->
+    "other";
+elem_as_list('partying') ->
+    "partying";
+elem_as_list('playing_sports') ->
+    "playing_sports";
+elem_as_list('reading') ->
+    "reading";
+elem_as_list('rehearsing') ->
+    "rehearsing";
+elem_as_list('running') ->
+    "running";
+elem_as_list('running_an_errand') ->
+    "running_an_errand";
+elem_as_list('scheduled_holiday') ->
+    "scheduled_holiday";
+elem_as_list('shaving') ->
+    "shaving";
+elem_as_list('shopping') ->
+    "shopping";
+elem_as_list('skiing') ->
+    "skiing";
+elem_as_list('sleeping') ->
+    "sleeping";
+elem_as_list('socializing') ->
+    "socializing";
+elem_as_list('studying') ->
+    "studying";
+elem_as_list('sunbathing') ->
+    "sunbathing";
+elem_as_list('swimming') ->
+    "swimming";
+elem_as_list('taking_a_bath') ->
+    "taking_a_bath";
+elem_as_list('taking_a_shower') ->
+    "taking_a_shower";
+elem_as_list('walking') ->
+    "walking";
+elem_as_list('walking_the_dog') ->
+    "walking_the_dog";
+elem_as_list('watching_tv') ->
+    "watching_tv";
+elem_as_list('watching_a_movie') ->
+    "watching_a_movie";
+elem_as_list('working_out') ->
+    "working_out";
+elem_as_list('writing') ->
+    "writing";
+elem_as_list('handshake') ->
+    "handshake";
+elem_as_list('c') ->
+    "c";
+elem_as_list('tune') ->
+    "tune";
+elem_as_list('artist') ->
+    "artist";
+elem_as_list('length') ->
+    "length";
+elem_as_list('rating') ->
+    "rating";
+elem_as_list('source') ->
+    "source";
+elem_as_list('track') ->
+    "track";
+elem_as_list('validate') ->
+    "validate";
+elem_as_list('basic') ->
+    "basic";
+elem_as_list('regex') ->
+    "regex";
+elem_as_list('list-range') ->
+    "list-range";
+elem_as_list('waitlist') ->
+    "waitlist";
+elem_as_list('headers') ->
+    "headers";
+elem_as_list('header') ->
+    "header";
+elem_as_list('auto') ->
+    "auto";
+elem_as_list('changed') ->
+    "changed";
+elem_as_list('chat') ->
+    "chat";
+elem_as_list('from') ->
+    "from";
+elem_as_list('previous') ->
+    "previous";
+elem_as_list('to') ->
+    "to";
+elem_as_list('optional') ->
+    "optional";
+elem_as_list('method') ->
+    "method";
+elem_as_list('modified') ->
+    "modified";
+elem_as_list('pref') ->
+    "pref";
+elem_as_list('itemremove') ->
+    "itemremove";
+elem_as_list('removed') ->
+    "removed";
+elem_as_list('retrieve') ->
+    "retrieve";
+elem_as_list('save') ->
+    "save";
+elem_as_list('sipub') ->
+    "sipub";
+elem_as_list('start') ->
+    "start";
+elem_as_list('starting') ->
+    "starting";
+elem_as_list('compression') ->
+    "compression";
+elem_as_list('compress') ->
+    "compress";
+elem_as_list('compressed') ->
+    "compressed";
+elem_as_list('setup-failed') ->
+    "setup-failed";
+elem_as_list('processing-failed') ->
+    "processing-failed";
+elem_as_list('unsupported-method') ->
+    "unsupported-method";
+elem_as_list('page') ->
+    "page";
+elem_as_list('section') ->
+    "section";
+elem_as_list('fieldref') ->
+    "fieldref";
+elem_as_list('reportedref') ->
+    "reportedref";
+elem_as_list('photo') ->
+    "photo";
+elem_as_list('profile') ->
+    "profile";
+elem_as_list('abuse') ->
+    "abuse";
+elem_as_list('condition') ->
+    "condition";
+elem_as_list('gateway') ->
+    "gateway";
+elem_as_list('muc') ->
+    "muc";
+elem_as_list('service') ->
+    "service";
+elem_as_list('spam') ->
+    "spam";
+elem_as_list('stanza-too-big') ->
+    "stanza-too-big";
+elem_as_list('too-many-recipients') ->
+    "too-many-recipients";
+elem_as_list('too-many-stanzas') ->
+    "too-many-stanzas";
+elem_as_list('unacceptable-payload') ->
+    "unacceptable-payload";
+elem_as_list('unacceptable-text') ->
+    "unacceptable-text";
+elem_as_list('undefined-abuse') ->
+    "undefined-abuse";
+elem_as_list('stanzas') ->
+    "stanzas";
+elem_as_list('jingle') ->
+    "jingle";
+elem_as_list('alternative-session') ->
+    "alternative-session";
+elem_as_list('busy') ->
+    "busy";
+elem_as_list('connectivity-error') ->
+    "connectivity-error";
+elem_as_list('general-error') ->
+    "general-error";
+elem_as_list('invalid-credentials') ->
+    "invalid-credentials";
+elem_as_list('media-error') ->
+    "media-error";
+elem_as_list('no-error') ->
+    "no-error";
+elem_as_list('unsupported-applications') ->
+    "unsupported-applications";
+elem_as_list('unsupported-transports') ->
+    "unsupported-transports";
+elem_as_list('sid') ->
+    "sid";
+elem_as_list('out-of-order') ->
+    "out-of-order";
+elem_as_list('unknown-session') ->
+    "unknown-session";
+elem_as_list('unsupported-info') ->
+    "unsupported-info";
+elem_as_list('payload-type') ->
+    "payload-type";
+elem_as_list('crypto') ->
+    "crypto";
+elem_as_list('parameter') ->
+    "parameter";
+elem_as_list('hold') ->
+    "hold";
+elem_as_list('mute') ->
+    "mute";
+elem_as_list('ringing') ->
+    "ringing";
+elem_as_list('rap') ->
+    "rap";
+elem_as_list('primary') ->
+    "primary";
+elem_as_list('route') ->
+    "route";
+elem_as_list('translation') ->
+    "translation";
+elem_as_list('transport') ->
+    "transport";
+elem_as_list('candidate') ->
+    "candidate";
+elem_as_list('received') ->
+    "received";
+elem_as_list('trying') ->
+    "trying";
+elem_as_list('dtmf') ->
+    "dtmf";
+elem_as_list('request') ->
+    "request";
+elem_as_list('invisible') ->
+    "invisible";
+elem_as_list('visible') ->
+    "visible";
+elem_as_list('pubkeys') ->
+    "pubkeys";
+elem_as_list('fprint') ->
+    "fprint";
+elem_as_list('block') ->
+    "block";
+elem_as_list('unblock') ->
+    "unblock";
+elem_as_list('blocklist') ->
+    "blocklist";
+elem_as_list('blocked') ->
+    "blocked";
+elem_as_list('dialback') ->
+    "dialback";
+elem_as_list('unbind') ->
+    "unbind";
+elem_as_list('topic') ->
+    "topic";
+elem_as_list('keywords') ->
+    "keywords";
+elem_as_list('game') ->
+    "game";
+elem_as_list('character_name') ->
+    "character_name";
+elem_as_list('character_profile') ->
+    "character_profile";
+elem_as_list('level') ->
+    "level";
+elem_as_list('server_address') ->
+    "server_address";
+elem_as_list('server_name') ->
+    "server_name";
+elem_as_list('author') ->
+    "author";
+elem_as_list('cast') ->
+    "cast";
+elem_as_list('channel_name') ->
+    "channel_name";
+elem_as_list('duration') ->
+    "duration";
+elem_as_list('end_time') ->
+    "end_time";
+elem_as_list('episode') ->
+    "episode";
+elem_as_list('program_name') ->
+    "program_name";
+elem_as_list('program_type') ->
+    "program_type";
+elem_as_list('start_time') ->
+    "start_time";
+elem_as_list('subprogram_type') ->
+    "subprogram_type";
+elem_as_list('user_comment') ->
+    "user_comment";
+elem_as_list('user_rating') ->
+    "user_rating";
+elem_as_list('ack') ->
+    "ack";
+elem_as_list('enable') ->
+    "enable";
+elem_as_list('enabled') ->
+    "enabled";
+elem_as_list('r') ->
+    "r";
+elem_as_list('a') ->
+    "a";
+elem_as_list('ping') ->
+    "ping";
+elem_as_list('pong') ->
+    "pong";
+elem_as_list('time') ->
+    "time";
+elem_as_list('tzo') ->
+    "tzo";
+elem_as_list('delay') ->
+    "delay";
+elem_as_list('metacontacts') ->
+    "metacontacts";
+elem_as_list('meta') ->
+    "meta";
+elem_as_list('services') ->
+    "services";
+elem_as_list('media') ->
+    "media";
+elem_as_list('attention') ->
+    "attention";
+elem_as_list('hostname') ->
+    "hostname";
+elem_as_list('server-data') ->
+    "server-data";
+elem_as_list('host') ->
+    "host";
+elem_as_list('user') ->
+    "user";
+elem_as_list('offline-messages') ->
+    "offline-messages";
+elem_as_list('offer') ->
+    "offer";
+elem_as_list('token') ->
+    "token";
+elem_as_list('token-required') ->
+    "token-required";
+elem_as_list('roster-sequencing') ->
+    "roster-sequencing";
+elem_as_list('iodata') ->
+    "iodata";
+elem_as_list('in') ->
+    "in";
+elem_as_list('out') ->
+    "out";
+elem_as_list('elapsed') ->
+    "elapsed";
+elem_as_list('remaining') ->
+    "remaining";
+elem_as_list('percentage') ->
+    "percentage";
+elem_as_list('information') ->
+    "information";
+
+elem_as_list(Elem) when is_atom(Elem) ->
+    atom_to_list(Elem);
+elem_as_list(Elem) when is_list(Elem) ->
+    Elem.
diff -r d551623afde5 deps/exmpp/src/exmpp_known_nss.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/exmpp_known_nss.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,276 @@
+% # Generated by extract-known-from-specs r560 on 2008-08-01T09:50:15Z
+
+-module(exmpp_known_nss).
+
+-export([ns_as_list/1]).
+
+ns_as_list('http://etherx.jabber.org/streams') ->
+    "http://etherx.jabber.org/streams";
+ns_as_list('jabber:server:dialback') ->
+    "jabber:server:dialback";
+ns_as_list('urn:ietf:params:xml:ns:xmpp-bind') ->
+    "urn:ietf:params:xml:ns:xmpp-bind";
+ns_as_list('urn:ietf:params:xml:ns:xmpp-sasl') ->
+    "urn:ietf:params:xml:ns:xmpp-sasl";
+ns_as_list('urn:ietf:params:xml:ns:xmpp-stanzas') ->
+    "urn:ietf:params:xml:ns:xmpp-stanzas";
+ns_as_list('urn:ietf:params:xml:ns:xmpp-streams') ->
+    "urn:ietf:params:xml:ns:xmpp-streams";
+ns_as_list('urn:ietf:params:xml:ns:xmpp-tls') ->
+    "urn:ietf:params:xml:ns:xmpp-tls";
+ns_as_list('jabber:client') ->
+    "jabber:client";
+ns_as_list('jabber:iq:privacy') ->
+    "jabber:iq:privacy";
+ns_as_list('jabber:iq:roster') ->
+    "jabber:iq:roster";
+ns_as_list('jabber:server') ->
+    "jabber:server";
+ns_as_list('urn:ietf:params:xml:ns:xmpp-session') ->
+    "urn:ietf:params:xml:ns:xmpp-session";
+ns_as_list('urn:ietf:params:xml:ns:xmpp-e2e') ->
+    "urn:ietf:params:xml:ns:xmpp-e2e";
+ns_as_list('jabber:iq:pass') ->
+    "jabber:iq:pass";
+ns_as_list('jabber:x:data') ->
+    "jabber:x:data";
+ns_as_list('jabber:iq:rpc') ->
+    "jabber:iq:rpc";
+ns_as_list('jabber:iq:browse') ->
+    "jabber:iq:browse";
+ns_as_list('jabber:iq:last') ->
+    "jabber:iq:last";
+ns_as_list('http://jabber.org/protocol/offline') ->
+    "http://jabber.org/protocol/offline";
+ns_as_list('http://jabber.org/protocol/feature-neg') ->
+    "http://jabber.org/protocol/feature-neg";
+ns_as_list('jabber:x:event') ->
+    "jabber:x:event";
+ns_as_list('jabber:x:expire') ->
+    "jabber:x:expire";
+ns_as_list('jabber:x:encrypted') ->
+    "jabber:x:encrypted";
+ns_as_list('jabber:x:signed') ->
+    "jabber:x:signed";
+ns_as_list('http://jabber.org/protocol/disco#info') ->
+    "http://jabber.org/protocol/disco#info";
+ns_as_list('http://jabber.org/protocol/disco#items') ->
+    "http://jabber.org/protocol/disco#items";
+ns_as_list('http://jabber.org/protocol/address') ->
+    "http://jabber.org/protocol/address";
+ns_as_list('http://jabber.org/protocol/muc') ->
+    "http://jabber.org/protocol/muc";
+ns_as_list('http://jabber.org/protocol/muc#admin') ->
+    "http://jabber.org/protocol/muc#admin";
+ns_as_list('http://jabber.org/protocol/muc#owner') ->
+    "http://jabber.org/protocol/muc#owner";
+ns_as_list('http://jabber.org/protocol/muc#unique') ->
+    "http://jabber.org/protocol/muc#unique";
+ns_as_list('http://jabber.org/protocol/muc#user') ->
+    "http://jabber.org/protocol/muc#user";
+ns_as_list('http://jabber.org/protocol/ibb') ->
+    "http://jabber.org/protocol/ibb";
+ns_as_list('storage:bookmarks') ->
+    "storage:bookmarks";
+ns_as_list('jabber:iq:private') ->
+    "jabber:iq:private";
+ns_as_list('http://jabber.org/protocol/commands') ->
+    "http://jabber.org/protocol/commands";
+ns_as_list('vcard-temp') ->
+    "vcard-temp";
+ns_as_list('jabber:iq:search') ->
+    "jabber:iq:search";
+ns_as_list('http://jabber.org/protocol/rsm') ->
+    "http://jabber.org/protocol/rsm";
+ns_as_list('http://jabber.org/protocol/pubsub') ->
+    "http://jabber.org/protocol/pubsub";
+ns_as_list('http://jabber.org/protocol/pubsub#errors') ->
+    "http://jabber.org/protocol/pubsub#errors";
+ns_as_list('http://jabber.org/protocol/pubsub#event') ->
+    "http://jabber.org/protocol/pubsub#event";
+ns_as_list('http://jabber.org/protocol/pubsub#owner') ->
+    "http://jabber.org/protocol/pubsub#owner";
+ns_as_list('http://jabber.org/protocol/bytestreams') ->
+    "http://jabber.org/protocol/bytestreams";
+ns_as_list('jabber:iq:oob') ->
+    "jabber:iq:oob";
+ns_as_list('jabber:x:oob') ->
+    "jabber:x:oob";
+ns_as_list('http://jabber.org/protocol/http-auth') ->
+    "http://jabber.org/protocol/http-auth";
+ns_as_list('http://jabber.org/protocol/xhtml-im') ->
+    "http://jabber.org/protocol/xhtml-im";
+ns_as_list('http://www.w3.org/1999/xhtml') ->
+    "http://www.w3.org/1999/xhtml";
+ns_as_list('http://jabber.org/protocol/soap#fault') ->
+    "http://jabber.org/protocol/soap#fault";
+ns_as_list('http://jabber.org/features/iq-register') ->
+    "http://jabber.org/features/iq-register";
+ns_as_list('jabber:iq:register') ->
+    "jabber:iq:register";
+ns_as_list('http://jabber.org/features/iq-auth') ->
+    "http://jabber.org/features/iq-auth";
+ns_as_list('jabber:iq:auth') ->
+    "jabber:iq:auth";
+ns_as_list('http://jabber.org/features/amp') ->
+    "http://jabber.org/features/amp";
+ns_as_list('http://jabber.org/protocol/amp') ->
+    "http://jabber.org/protocol/amp";
+ns_as_list('http://jabber.org/protocol/amp#errors') ->
+    "http://jabber.org/protocol/amp#errors";
+ns_as_list('http://jabber.org/protocol/geoloc') ->
+    "http://jabber.org/protocol/geoloc";
+ns_as_list('roster:delimiter') ->
+    "roster:delimiter";
+ns_as_list('urn:xmpp:avatar:metadata') ->
+    "urn:xmpp:avatar:metadata";
+ns_as_list('http://jabber.org/protocol/chatstates') ->
+    "http://jabber.org/protocol/chatstates";
+ns_as_list('jabber:iq:time') ->
+    "jabber:iq:time";
+ns_as_list('jabber:x:delay') ->
+    "jabber:x:delay";
+ns_as_list('jabber:iq:version') ->
+    "jabber:iq:version";
+ns_as_list('jabber:x:roster') ->
+    "jabber:x:roster";
+ns_as_list('http://jabber.org/protocol/si') ->
+    "http://jabber.org/protocol/si";
+ns_as_list('http://jabber.org/protocol/si/profile/file-transfer') ->
+    "http://jabber.org/protocol/si/profile/file-transfer";
+ns_as_list('jabber:iq:gateway') ->
+    "jabber:iq:gateway";
+ns_as_list('http://jabber.org/protocol/mood') ->
+    "http://jabber.org/protocol/mood";
+ns_as_list('http://jabber.org/protocol/activity') ->
+    "http://jabber.org/protocol/activity";
+ns_as_list('jabber:component:accept') ->
+    "jabber:component:accept";
+ns_as_list('jabber:component:connect') ->
+    "jabber:component:connect";
+ns_as_list('http://jabber.org/protocol/caps') ->
+    "http://jabber.org/protocol/caps";
+ns_as_list('http://jabber.org/protocol/tune') ->
+    "http://jabber.org/protocol/tune";
+ns_as_list('http://jabber.org/protocol/xdata-validate') ->
+    "http://jabber.org/protocol/xdata-validate";
+ns_as_list('http://jabber.org/protocol/httpbind') ->
+    "http://jabber.org/protocol/httpbind";
+ns_as_list('http://jabber.org/protocol/waitinglist') ->
+    "http://jabber.org/protocol/waitinglist";
+ns_as_list('http://jabber.org/protocol/shim') ->
+    "http://jabber.org/protocol/shim";
+ns_as_list('urn:xmpp:archive') ->
+    "urn:xmpp:archive";
+ns_as_list('http://jabber.org/protocol/sipub') ->
+    "http://jabber.org/protocol/sipub";
+ns_as_list('http://jabber.org/features/compress') ->
+    "http://jabber.org/features/compress";
+ns_as_list('http://jabber.org/protocol/compress') ->
+    "http://jabber.org/protocol/compress";
+ns_as_list('http://jabber.org/protocol/xdata-layout') ->
+    "http://jabber.org/protocol/xdata-layout";
+ns_as_list('http://jabber.org/protocol/rosterx') ->
+    "http://jabber.org/protocol/rosterx";
+ns_as_list('storage:rosternotes') ->
+    "storage:rosternotes";
+ns_as_list('vcard-temp:x:update') ->
+    "vcard-temp:x:update";
+ns_as_list('urn:xmpp:tmp:profile') ->
+    "urn:xmpp:tmp:profile";
+ns_as_list('urn:xmpp:tmp:challenge') ->
+    "urn:xmpp:tmp:challenge";
+ns_as_list('urn:xmpp:tmp:abuse') ->
+    "urn:xmpp:tmp:abuse";
+ns_as_list('urn:xmpp:tmp:jingle') ->
+    "urn:xmpp:tmp:jingle";
+ns_as_list('urn:xmpp:tmp:jingle:errors') ->
+    "urn:xmpp:tmp:jingle:errors";
+ns_as_list('urn:xmpp:tmp:jingle:apps:rtp') ->
+    "urn:xmpp:tmp:jingle:apps:rtp";
+ns_as_list('urn:xmpp:tmp:jingle:apps:rtp:info') ->
+    "urn:xmpp:tmp:jingle:apps:rtp:info";
+ns_as_list('http://www.xmpp.org/extensions/xep-0168.html#ns') ->
+    "http://www.xmpp.org/extensions/xep-0168.html#ns";
+ns_as_list('http://www.xmpp.org/extensions/xep-0168.html#ns-route') ->
+    "http://www.xmpp.org/extensions/xep-0168.html#ns-route";
+ns_as_list('urn:xmpp:langtrans') ->
+    "urn:xmpp:langtrans";
+ns_as_list('urn:xmpp:langtrans#items') ->
+    "urn:xmpp:langtrans#items";
+ns_as_list('http://jabber.org/protocol/nick') ->
+    "http://jabber.org/protocol/nick";
+ns_as_list('urn:xmpp:tmp:jingle:transports:ice-udp') ->
+    "urn:xmpp:tmp:jingle:transports:ice-udp";
+ns_as_list('urn:xmpp:tmp:jingle:transports:raw-udp') ->
+    "urn:xmpp:tmp:jingle:transports:raw-udp";
+ns_as_list('urn:xmpp:tmp:jingle:transports:raw-udp:info') ->
+    "urn:xmpp:tmp:jingle:transports:raw-udp:info";
+ns_as_list('urn:xmpp:tmp:jingle:dtmf') ->
+    "urn:xmpp:tmp:jingle:dtmf";
+ns_as_list('urn:xmpp:receipts') ->
+    "urn:xmpp:receipts";
+ns_as_list('urn:xmpp:tmp:invisible') ->
+    "urn:xmpp:tmp:invisible";
+ns_as_list('urn:xmpp:tmp:pubkey') ->
+    "urn:xmpp:tmp:pubkey";
+ns_as_list('urn:xmpp:blocking') ->
+    "urn:xmpp:blocking";
+ns_as_list('urn:xmpp:blocking:errors') ->
+    "urn:xmpp:blocking:errors";
+ns_as_list('urn:xmpp:features:dialback') ->
+    "urn:xmpp:features:dialback";
+ns_as_list('http://www.xmpp.org/extensions/xep-0194.html#ns') ->
+    "http://www.xmpp.org/extensions/xep-0194.html#ns";
+ns_as_list('http://www.xmpp.org/extensions/xep-0195.html#ns') ->
+    "http://www.xmpp.org/extensions/xep-0195.html#ns";
+ns_as_list('http://www.xmpp.org/extensions/xep-0196.html#ns') ->
+    "http://www.xmpp.org/extensions/xep-0196.html#ns";
+ns_as_list('http://www.xmpp.org/extensions/xep-0197.html#ns') ->
+    "http://www.xmpp.org/extensions/xep-0197.html#ns";
+ns_as_list('http://www.xmpp.org/extensions/xep-0198.html#ns') ->
+    "http://www.xmpp.org/extensions/xep-0198.html#ns";
+ns_as_list('urn:xmpp:ping') ->
+    "urn:xmpp:ping";
+ns_as_list('urn:xmpp:time') ->
+    "urn:xmpp:time";
+ns_as_list('urn:xmpp:delay') ->
+    "urn:xmpp:delay";
+ns_as_list('urn:xmpp:xbosh') ->
+    "urn:xmpp:xbosh";
+ns_as_list('http://www.xmpp.org/extensions/xep-0208.html#ns') ->
+    "http://www.xmpp.org/extensions/xep-0208.html#ns";
+ns_as_list('storage:metacontacts') ->
+    "storage:metacontacts";
+ns_as_list('http://www.xmpp.org/extensions/xep-0215.html#ns') ->
+    "http://www.xmpp.org/extensions/xep-0215.html#ns";
+ns_as_list('urn:xmpp:tmp:media-element') ->
+    "urn:xmpp:tmp:media-element";
+ns_as_list('http://www.xmpp.org/extensions/xep-0224.html#ns') ->
+    "http://www.xmpp.org/extensions/xep-0224.html#ns";
+ns_as_list('urn:xmpp:tmp:component') ->
+    "urn:xmpp:tmp:component";
+ns_as_list('http://www.xmpp.org/extensions/xep-0227.html#ns') ->
+    "http://www.xmpp.org/extensions/xep-0227.html#ns";
+ns_as_list('urn:xmpp:tmp:data-element') ->
+    "urn:xmpp:tmp:data-element";
+ns_as_list('urn:xmpp:tmp:domain-based-name') ->
+    "urn:xmpp:tmp:domain-based-name";
+ns_as_list('urn:xmpp:tmp:jingle:apps:file-transfer') ->
+    "urn:xmpp:tmp:jingle:apps:file-transfer";
+ns_as_list('urn:xmpp:tmp:auth-token') ->
+    "urn:xmpp:tmp:auth-token";
+ns_as_list('urn:xmpp:tmp:roster-sequencing') ->
+    "urn:xmpp:tmp:roster-sequencing";
+ns_as_list('urn:xmpp:tmp:io-data') ->
+    "urn:xmpp:tmp:io-data";
+ns_as_list('urn:xmpp:tmp:jingle:apps:xmlstream') ->
+    "urn:xmpp:tmp:jingle:apps:xmlstream";
+
+ns_as_list(undefined) ->
+    "";
+
+ns_as_list(NS) when is_atom(NS) ->
+    atom_to_list(NS);
+ns_as_list(NS) when is_list(NS) ->
+    NS.
diff -r d551623afde5 deps/exmpp/src/network/exmpp_bosh.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/network/exmpp_bosh.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,494 @@
+%% Copyright ProcessOne 2006-2009. All Rights Reserved.          
+%%                                                               
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in  
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be  
+%% retrieved online at http://www.erlang.org/.                        
+%%                                                                    
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.                                                    
+
+%% @author Mickael Remond <mickael.remond@process-one.net>
+
+%% @doc
+%% The module <strong>{@module}</strong> manages XMPP over HTTP connection
+%% according to the BOSH protocol (XEP-0124: Bidirectional-streams Over   
+%% Synchronous HTTP)                                                      
+%%                                                                        
+%% <p>                                                                    
+%% This module is not intended to be used directly by client developers.  
+%% </p>                                                                   
+%%                                                                        
+%%                                                                        
+%% This module uses HTTP parsing functions based on the lhttpc library.
+%% http://bitbucket.org/etc/lhttpc/wiki/Home 
+%% http://bitbucket.org/etc/lhttpc/src/tip/LICENCE 
+-module(exmpp_bosh).
+
+%-include_lib("exmpp/include/exmpp.hrl").
+-include("exmpp.hrl").                   
+
+%% Behaviour exmpp_gen_transport ?
+-export([connect/3,  send/2, close/2, reset_parser/1]).
+
+-export([init/1, handle_call/3, handle_cast/2, handle_info/2, terminate/2, code_change/3]).
+
+
+-define(CONTENT_TYPE, "text/xml; charset=utf-8").
+-define(VERSION, "1.8").                         
+-define(WAIT, 120). %1 minute                    
+-define(HOLD, 1). %only 1 request pending        
+
+-define(CONNECT_TIMEOUT, 20 * 1000).
+
+-record(state, {
+        parsed_bosh_url, 
+           % {Host::string(), Port:integer(), Path::string(), Ssl::boolean()}
+        domain="",                                                   
+        sid = <<>>,                                                  
+        rid = 0,                                                     
+        auth_id = <<>>,                                              
+        client_pid,                                                  
+        stream_ref,                                                  
+        max_requests,                                                        
+        polling,  %% This attribute specifies the shortest allowable polling interval (in seconds)
+        queue, %% stanzas that have been queued because we reach the limit of requets or the polling
+        last_request_timestamp,                                                                     
+        new = true,                                                                                 
+        max_inactivity,                                                                             
+        open, % [{Rid, Socket}]                                                                     
+        free,  %[socket()] free keep-alive connections                                              
+        last_response,                                                                              
+        socket,                                                                                     
+        local_ip,  %ip to bind sockets to                                                           
+        local_port                                                                                  
+        }).                                                                                  
+
+reset_parser(Pid) ->
+    gen_server:call(Pid,reset_parser, infinity).
+
+connect(ClientPid, StreamRef, {URL, Domain, Options}) ->
+    {ok, Pid} = gen_server:start_link(?MODULE, [ClientPid, StreamRef, URL, Domain, Options], []),
+    {Pid, Pid}.                                                                                  
+
+send(Pid, Packet) ->
+    gen_server:cast(Pid, {send, Packet}).
+
+close(Pid, _) ->
+    catch gen_server:call(Pid, stop).
+
+%% don't do anything on init. We establish the connection when the stream start 
+%% is sent                                                                      
+init([ClientPid, StreamRef, URL, Domain, Options]) ->                           
+    {A,B,C} = now(),                                                            
+    random:seed(A,B,C),                                                         
+    Rid = 1000 + random:uniform(100000),                                        
+    ParsedUrl = parse_url(URL),                                                 
+    IP = proplists:get_value(local_ip, Options, undefined),                     
+    Port= proplists:get_value(local_port, Options, undefined),                  
+    State = #state{parsed_bosh_url = ParsedUrl,                                 
+            domain = Domain,                                                    
+            rid = Rid,                                                          
+            open = 0,                                                           
+            client_pid = ClientPid,                                             
+            queue = queue:new(),                                                
+            free = [],                                                          
+            local_ip = IP,                                                      
+            local_port = Port,                                                  
+            stream_ref = exmpp_xmlstream:set_wrapper_tagnames(StreamRef, [body])
+            },                                                                  
+     {ok, State}.                                                               
+
+%% reset the connection. We send here a fake stream response to the client to.
+%% TODO: check if it is not best to do this in do_send/2                      
+handle_call(reset_parser, _From, State) ->                                    
+    #state{stream_ref = Stream,                                               
+           sid = Sid,                                                         
+           rid = Rid,                                                         
+           auth_id = AuthID,                                                  
+           parsed_bosh_url = {Host, _Port, Path ,_},                          
+           domain = Domain} =  State,                                         
+    {NewState, Socket} = new_socket(State, once),                             
+    ok = make_raw_request(Socket, Host, Path, restart_stream_msg(Sid, Rid, Domain)),
+        StreamStart =                                                               
+                ["<?xml version='1.0'?><stream:stream xmlns='jabber:client'"        
+                " xmlns:stream='http://etherx.jabber.org/streams' version='1.0'"    
+                " from='" , Domain , "' id='" , AuthID , "'>"],                     
+    NewStreamRef = exmpp_xmlstream:reset(Stream),                                   
+    {ok, NewStreamRef2} = exmpp_xmlstream:parse(NewStreamRef, StreamStart),         
+    {reply, ok, NewState#state{new = false,                                         
+                            rid = Rid +1,                                           
+                            open = [{Socket, Rid}|State#state.open],                
+                            stream_ref = NewStreamRef2}, hibernate};                
+
+
+
+handle_call(stop, _From, State = #state{parsed_bosh_url = URL, sid = Sid, rid = Rid}) ->
+    {Host, _Port, Path ,_} = URL,                                                       
+    {NewState, Socket} = new_socket(State, false),                                      
+    ok = make_raw_request(Socket, Host, Path, close_stream_msg(Sid, Rid)),              
+    {stop, normal, ok, NewState};                                                       
+handle_call(_Call, _From, State) ->                                                     
+    {reply, ok, State}.                                                                 
+
+handle_cast({send, Packet}, State) ->
+    do_send(Packet, State);          
+handle_cast(_Cast, State) ->         
+    {noreply, State}.                
+%{http_response, NewVsn, StatusCode, Reason}
+handle_info({http, Socket, {http_response, Vsn, 200, <<"OK">>}}, State) ->
+        #state{stream_ref = Stream,                                       
+                open = Open,                                              
+                sid = Sid,                                                
+                queue = Queue,                                            
+                parsed_bosh_url = {Host, _, Path, _},                     
+                rid = Rid} = State,                                       
+        {ok, {{200, <<"OK">>}, _Hdrs, Resp}} = read_response(Socket, Vsn, {200, <<"OK">>}, [], <<>>),
+        {ok, NewStream} = exmpp_xmlstream:parse(Stream, Resp),                                       
+        %io:format("Got: ~s \n", [Resp]),                                                            
+        NewOpen = lists:keydelete(Socket, 1, Open),                                                  
+        NewState2  = if                                                                              
+                     NewOpen == [] andalso State#state.new =:= false ->                              
+                        %io:format("Making empty request\n"),                                        
+                        ok = make_empty_request(Socket,Sid, Rid, Queue, Host, Path),                 
+                        inet:setopts(Socket, [{packet, http_bin}, {active, once}]),                  
+                        State#state{open = [{Socket, Rid}], rid = Rid +1, queue = queue:new()};      
+                     true ->                                                                         
+                        %io:format("Closing the socket\n"),                                          
+                        NewState = return_socket(State, Socket),                                     
+                        NewState#state{open = NewOpen}                                               
+        end,                                                                                         
+        {noreply, NewState2#state{stream_ref = NewStream}, hibernate};                               
+
+handle_info({tcp_closed, Socket}, State = #state{open = Open, free = Free}) ->
+        case lists:keymember(Socket, 1, Open) of                              
+                true ->                                                       
+                        {stop, {error, tcp_closed}, State};                   
+                false ->                                                      
+
+                        {noreply, State#state{free = lists:delete(Socket,Free)}}
+        end;                                                                    
+
+handle_info(_Info, State) ->
+    error_logger:error_report([{unknown_info_in_bosh, _Info}]),
+    {stop, _Info, State}.                                      
+terminate(_Reason, #state{open = Open}) when is_list(Open) ->  
+    lists:map(fun({Socket, _}) -> gen_tcp:close(Socket) end, Open),
+    ok;                                                            
+terminate(_Reason, #state{}) ->                                    
+    ok.                                                            
+code_change(_Old, State, _Extra) ->                                
+    {ok, State}.                                                   
+
+
+make_empty_request(Socket, Sid, Rid, Queue, Host, Path) ->
+    StanzasText = [exmpp_xml:document_to_iolist(I) || I <- queue:to_list(Queue)],
+    Body = stanzas_msg(Sid, Rid, StanzasText),                                   
+    make_request(Socket, Host, Path, Body).                                      
+
+make_raw_request(Socket, Host, Path, Body) ->
+    make_request(Socket, Host, Path, Body).  
+
+make_request(Socket, Sid, Rid, Queue, Host, Path, Packet) when is_record(Packet, xmlel) ->
+    StanzasText = [exmpp_xml:document_to_iolist(I) || I <- queue:to_list(queue:in(Packet,Queue))],
+    Body = stanzas_msg(Sid, Rid, StanzasText),                                                    
+    make_request(Socket, Host, Path, Body).                                                       
+                                                                                                  
+make_request(Socket,Host, Path, Body) ->                                                          
+     Hdrs = [{"Content-Type", ?CONTENT_TYPE}, {"keep-alive", "true"}],                            
+     Request = format_request(Path, "POST", Hdrs, Host, Body),                                    
+     ok = gen_tcp:send(Socket, Request).                                                          
+     %io:format("Sent: ~s \n", [Body]).                                                           
+
+
+%% after stream restart, we must not sent this to the connection manager. The response is got in reset call
+do_send(#xmlel{ns=?NS_XMPP, name='stream'}, #state{new = false} = State) ->                                
+        {noreply, State};                                                                                  
+
+% we start the session with the connection manager here.
+do_send(#xmlel{ns=?NS_XMPP, name='stream'}, State) ->   
+    #state{ parsed_bosh_url = ParsedURL,                
+            domain = Domain,                            
+            stream_ref = StreamRef,                     
+            rid = Rid} = State,                         
+    {Host, _Port, Path, _Ssl} = ParsedURL,              
+    {NewState, Socket} = new_socket(State, false),      
+    ok = make_raw_request(Socket, Host, Path, create_session_msg(Rid, Domain, ?WAIT, ?HOLD)),
+    {ok, {{200, <<"OK">>}, _Hdrs, Resp}} = read_response(Socket, nil, nil, [], <<>>),        
+    NewState2 = return_socket(NewState, Socket), %%TODO: this can be improved.. don't close the socket and reuse it for latter
+
+    [#xmlel{name=body} = BodyEl] = exmpp_xml:parse_document(Resp),
+    SID = exmpp_xml:get_attribute_as_binary(BodyEl, sid, undefined),
+    AuthID = exmpp_xml:get_attribute_as_binary(BodyEl,authid,undefined),
+    Requests = list_to_integer(exmpp_xml:get_attribute_as_list(BodyEl,requests,undefined)),
+    Inactivity = list_to_integer(exmpp_xml:get_attribute_as_list(BodyEl,inactivity,undefined)) * 1000, %sec -> millisecond
+    Polling = list_to_integer(exmpp_xml:get_attribute_as_list(BodyEl,polling,undefined)) * 1000, %sec -> millisecond      
+    Events = [{xmlstreamelement, El} || El <- exmpp_xml:get_child_elements(BodyEl)],                                      
+
+    % first return a fake stream response, then anything found inside the <body/> element (possibly nothing)
+        StreamStart =                                                                                       
+                ["<?xml version='1.0'?><stream:stream xmlns='jabber:client'"                                
+                " xmlns:stream='http://etherx.jabber.org/streams' version='1.0'"                            
+                " from='" , Domain , "' id='" , AuthID , "'>"],                                             
+    {ok, NewStreamRef} = exmpp_xmlstream:parse(StreamRef, StreamStart),                                     
+    exmpp_xmlstream:send_events(StreamRef, Events),                                                         
+        {noreply, NewState2#state{stream_ref = NewStreamRef,                                                
+                          rid = Rid +1,                                                                     
+                          open = [],                                                                        
+                          sid = SID,                                                                        
+                          max_requests = Requests,                                                          
+                          max_inactivity = Inactivity, %%TODO: not used                                     
+                          polling = Polling,                                                                
+                          auth_id = AuthID}};                                                               
+
+do_send(Packet, State) ->
+   #state{open = Open,   
+          rid = Rid,     
+          sid = Sid,     
+          parsed_bosh_url = {Host, _Port, Path, _}, 
+          queue = Queue} = State,                   
+    Now = now(),                                    
+    Result = if                                     
+                Open == []  -> send;                
+                true ->                             
+                        Min = lists:min(lists:map(fun({_S,R}) -> R end, Open)),
+                        if                                                     
+                                (Rid -Min) =< 1 ->                            
+                                        send;                                  
+                                true ->                                        
+                                        queue                                  
+                        end                                                    
+            end,                                                               
+
+     case Result of
+         send ->   
+              {NewState, Socket} = new_socket(State, once),
+              ok = make_request(Socket, Sid, Rid, Queue, Host, Path, Packet), 
+              {noreply, NewState#state{last_request_timestamp=Now, rid = Rid +1, open = [{Socket, Rid}|Open]}, hibernate};
+         queue ->                                                                                                         
+                %io:format("Queuing request.    Open = ~p    Rid= ~p \n", [Open, Rid]),                                   
+                Queue = State#state.queue,                                                                                
+                NewQueue =  queue:in(Packet, Queue),                                                                      
+               {noreply, State#state{queue = NewQueue}}                                                                   
+    end.                                                                                                                  
+
+
+ %%TODO  a veces tiene que ser activo, otras veces pasivo. 
+new_socket(State = #state{free = [Socket | Rest]}, Active) ->
+        inet:setopts(Socket, [{active, Active}, {packet, http_bin}]),
+        {State#state{free = Rest}, Socket};                          
+new_socket(State = #state{parsed_bosh_url = {Host, Port, _, _}, local_ip = LocalIp, local_port = LocalPort}, Active) ->
+    Options = case LocalIp of                                                                                          
+                        undefined -> [{active, Active}, {packet, http_bin}];                                           
+                        _ ->  case LocalPort of                                                                        
+                                undefined -> [{active, Active}, {packet, http_bin},{ip, LocalIp}];                     
+                                _ -> [{active, Active}, {packet, http_bin},{ip, LocalIp}, {port, LocalPort()}]         
+                              end                                                                                      
+                end,                                                                                                   
+    {ok, Socket} = gen_tcp:connect(Host, Port,  Options, ?CONNECT_TIMEOUT),                                            
+    {State, Socket}.                                                                                                   
+
+return_socket(State, Socket) ->
+        inet:setopts(Socket, [{active, once}]), %receive data from it, we want to know if something happens
+        State#state{free = [Socket | State#state.free]}.                                                   
+
+%new_socket(Host, Port, Active)  ->
+%    {ok, Socket} = gen_tcp:connect(Host, Port, [{active, Active}, {packet, http_bin}], ?CONNECT_TIMEOUT),
+%    Socket.                                                                                              
+                                                                                                          
+
+create_session_msg(Rid, To, Wait, Hold) ->
+    [ "<body xmlns='http://jabber.org/protocol/httpbind'"
+       " content='text/xml; charset=utf-8'",             
+       " ver='1.8'"                                      
+       " to='", To, "'",                                 
+       " rid='", integer_to_list(Rid), "'"               
+       " xmlns:xmpp='urn:xmpp:xbosh'",                   
+       " xmpp:version='1.0'",                            
+       " wait='", integer_to_list(Wait), "'"             
+       " hold='", integer_to_list(Hold), "'/>"].         
+
+stanzas_msg(Sid, Rid, Text) ->
+    [ "<body xmlns='http://jabber.org/protocol/httpbind' "
+       " rid='", integer_to_list(Rid), "'"                
+       " sid='", Sid, "'>", Text, "</body>"].             
+
+restart_stream_msg(Sid, Rid, Domain) ->
+    [ "<body xmlns='http://jabber.org/protocol/httpbind' "
+       " rid='", integer_to_list(Rid), "'",               
+       " sid='", Sid, "'",                                
+       " xmpp:restart='true'",                            
+       " xmlns:xmpp='urn:xmpp:xbosh'",                    
+       " to='", Domain, "'",                              
+       "/>"].                                             
+
+close_stream_msg(Sid, Rid) ->
+    [ "<body xmlns='http://jabber.org/protocol/httpbind' "
+       " rid='", integer_to_list(Rid), "'",               
+       " sid='", Sid, "'",                                
+       " type='terminate'",                               
+       " xmlns:xmpp='urn:xmpp:xbosh'",                    
+       "/>"].                                             
+
+
+
+
+%receiver(Socket, BoshProcess) ->
+%        inet:setopts(Socket, [{packet, http_bin}, {active, false}]),
+%       {ok, Resp} = read_response(Socket, nil, nil, [], <<>>),      
+%       BoshProcess ! {http_response, Resp},                         
+%       receiver(Socket, BoshProcess).                               
+
+
+
+read_response(Socket, Vsn, Status, Hdrs, Body) ->
+    inet:setopts(Socket, [{packet, http_bin}, {active, false}]),
+    case gen_tcp:recv(Socket, 0) of                             
+        {ok, {http_response, NewVsn, StatusCode, Reason}} ->    
+            NewStatus = {StatusCode, Reason},                   
+            read_response(Socket, NewVsn, NewStatus, Hdrs, Body);
+        {ok, {http_header, _, Name, _, Value}} ->                
+            Header = {Name, Value},                              
+            read_response(Socket, Vsn, Status, [Header | Hdrs], Body);
+        {ok, http_eoh} ->                                             
+            inet:setopts(Socket, [{packet, raw}, binary]),            
+            {NewBody, NewHdrs} = read_body(Vsn, Hdrs, Socket),        
+            Response = {Status, NewHdrs, NewBody},                    
+            {ok, Response};                                           
+        {error, closed} ->                                            
+            erlang:error(closed);                                     
+        {error, Reason} ->                                            
+            erlang:error(Reason)                                      
+    end.                                                              
+
+read_body(_Vsn, Hdrs, Socket) ->
+    % Find out how to read the entity body from the request.
+    % * If we have a Content-Length, just use that and read the complete
+    %   entity.                                                         
+    % * If Transfer-Encoding is set to chunked, we should read one chunk at
+    %   the time                                                           
+    % * If neither of this is true, we need to read until the socket is    
+    %   closed (AFAIK, this was common in versions before 1.1).            
+    case proplists:get_value('Content-Length', Hdrs, undefined) of         
+        undefined ->                                                       
+                throw({no_content_length, Hdrs});                          
+        ContentLength ->                                                   
+            read_length(Hdrs, Socket, list_to_integer(binary_to_list(ContentLength)))
+    end.                                                                             
+
+read_length(Hdrs, Socket, Length) ->
+    case gen_tcp:recv(Socket, Length) of
+        {ok, Data} ->                   
+            {Data, Hdrs};               
+        {error, Reason} ->              
+            erlang:error(Reason)        
+    end.                                
+%% @spec (URL) -> {Host, Port, Path, Ssl}
+%%   URL = string()                      
+%%   Host = string()                     
+%%   Port = integer()                    
+%%   Path = string()                     
+%%   Ssl = bool()                        
+%% @doc                                  
+-spec parse_url(string()) -> {string(), integer(), string(), boolean()}.
+parse_url(URL) ->                                                       
+    % XXX This should be possible to do with the re module?             
+    {Scheme, HostPortPath} = split_scheme(URL),                         
+    {Host, PortPath} = split_host(HostPortPath, []),                    
+    {Port, Path} = split_port(Scheme, PortPath, []),                    
+    {string:to_lower(Host), Port, Path, Scheme =:= https}.              
+
+split_scheme("http://" ++ HostPortPath) ->
+    {http, HostPortPath};                 
+split_scheme("https://" ++ HostPortPath) ->
+    {https, HostPortPath}.                 
+
+split_host([$: | PortPath], Host) ->
+    {lists:reverse(Host), PortPath};
+split_host([$/ | _] = PortPath, Host) ->
+    {lists:reverse(Host), PortPath};    
+split_host([H | T], Host) ->            
+    split_host(T, [H | Host]);          
+split_host([], Host) ->                 
+    {lists:reverse(Host), []}.          
+
+split_port(http, [$/ | _] = Path, []) ->
+    {80, Path};                         
+split_port(https, [$/ | _] = Path, []) ->
+    {443, Path};                         
+split_port(http, [], []) ->              
+    {80, "/"};                           
+split_port(https, [], []) ->             
+    {443, "/"};                          
+split_port(_, [], Port) ->               
+    {list_to_integer(lists:reverse(Port)), "/"};
+split_port(_,[$/ | _] = Path, Port) ->          
+    {list_to_integer(lists:reverse(Port)), Path};
+split_port(Scheme, [P | T], Port) ->             
+    split_port(Scheme, T, [P | Port]).           
+
+%% @spec (Path, Method, Headers, Host, Body) -> Request
+%% Path = iolist()                                     
+%% Method = atom() | string()                          
+%% Headers = [{atom() | string(), string()}]           
+%% Host = string()                                     
+%% Body = iolist()                                     
+format_request(Path, Method, Hdrs, Host, Body) ->      
+    [                                                  
+        Method, " ", Path, " HTTP/1.1\r\n",            
+        format_hdrs(add_mandatory_hdrs(Method, Hdrs, Host, Body), []),
+        Body                                                          
+    ].                                                                
+
+%% @spec normalize_method(AtomOrString) -> Method
+%%   AtomOrString = atom() | string()            
+%%   Method = string()                           
+%% @doc                                          
+%% Turns the method in to a string suitable for inclusion in a HTTP request
+%% line.                                                                   
+%% @end                                                                    
+%-spec normalize_method(atom() | string()) -> string().                    
+%normalize_method(Method) when is_atom(Method) ->                          
+%    string:to_upper(atom_to_list(Method));                                
+%normalize_method(Method) ->                                               
+%    Method.                                                               
+
+format_hdrs([{Hdr, Value} | T], Acc) ->
+    NewAcc = [                         
+        Hdr, ":", Value, "\r\n" | Acc  
+    ],                                 
+    format_hdrs(T, NewAcc);            
+format_hdrs([], Acc) ->                
+    [Acc, "\r\n"].
+
+add_mandatory_hdrs(Method, Hdrs, Host, Body) ->
+    add_host(add_content_length(Method, Hdrs, Body), Host).
+
+add_content_length("POST", Hdrs, Body) ->
+    add_content_length(Hdrs, Body);
+add_content_length("PUT", Hdrs, Body) ->
+    add_content_length(Hdrs, Body);
+add_content_length(_, Hdrs, _) ->
+    Hdrs.
+
+add_content_length(Hdrs, Body) ->
+    case proplists:get_value("content-length", Hdrs, undefined) of
+        undefined ->
+            ContentLength = integer_to_list(iolist_size(Body)),
+            [{"Content-Length", ContentLength} | Hdrs];
+        _ -> % We have a content length
+            Hdrs
+    end.
+
+add_host(Hdrs, Host) ->
+    case proplists:get_value("host", Hdrs, undefined) of
+        undefined ->
+            [{"Host", Host } | Hdrs];
+        _ -> % We have a host
+            Hdrs
+    end.
+
+
diff -r d551623afde5 deps/exmpp/src/network/exmpp_component.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/network/exmpp_component.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,538 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Ery Lee<ery.lee@gmail.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> implements xep-0114 component.
+%%
+%% <p>
+%% This module is intended to be used directly by client developers.
+%% </p>
+%%
+
+-module(exmpp_component).
+-behaviour(gen_fsm).
+
+%% XMPP Component API:
+-export([start/0, start_link/0, start_debug/0, stop/1]).
+
+-export([auth/3, 
+     connect/3,
+     handshake/1,
+     send_packet/2,
+	 set_controlling_process/2]).
+
+%% gen_fsm callbacks
+-export([init/1,
+	 code_change/4,
+	 handle_info/3,
+	 handle_event/3,
+	 handle_sync_event/4,
+	 terminate/3]).
+
+%% States
+-export([setup/3, 
+	 wait_for_stream/2, wait_for_stream/3,
+	 stream_opened/2, stream_opened/3,
+	 stream_error/2, stream_error/3,
+	 stream_closed/2, stream_closed/3,
+	 wait_for_handshake_result/2,
+	 session_established/2, session_established/3
+	]).
+
+-include("exmpp.hrl").
+-include("exmpp_client.hrl").
+
+-record(state, {
+      domain,
+      auth_method,
+	  client_pid,
+	  connection = exmpp_tcp,
+	  connection_ref,
+	  stream_ref,
+      stream_id = false,
+	  stream_error,
+	  receiver_ref,
+	  from_pid           %% Use by gen_fsm to handle postponed replies
+	 }).
+
+%% This timeout should match the connect timeout
+-define(TIMEOUT, 5000).
+
+%%====================================================================
+%% API
+%%====================================================================
+%%--------------------------------------------------------------------
+%% Function: start_link() -> ok,Pid} | ignore | {error,Error}
+%% Description:Creates a gen_fsm process which calls Module:init/1 to
+%% initialize. To ensure a synchronized start-up procedure, this function
+%% does not return until Module:init/1 has returned.
+%%--------------------------------------------------------------------
+%% Start the Component (used to get a reference):
+start() ->
+    case gen_fsm:start(?MODULE, [self()], []) of
+	{ok, PID} -> PID;
+	{error, Reason} -> erlang:error({error, Reason})
+    end.
+%% Start the Component (used to get a reference):
+start_link() ->
+    case gen_fsm:start_link(?MODULE, [self()], []) of
+	{ok, PID} -> PID;
+	{error, Reason} -> erlang:error({error, Reason})
+    end.
+
+%% Start the Component in debug mode
+%% (trace events)
+start_debug() ->
+    case gen_fsm:start(?MODULE, [self()], [{debug,[trace]}]) of
+	{ok, PID} -> PID;
+	{error, Reason} -> erlang:error({error, Reason})
+    end.
+
+%% Close Component and disconnect
+stop(Component) ->
+    catch gen_fsm:sync_send_all_state_event(Component, stop),
+    ok.
+
+%% Set authentication mode to basic (password)
+auth(Component, Domain, Password)
+  when is_pid(Component),
+       is_list(Domain),
+       is_list(Password) ->
+    gen_fsm:sync_send_event(Component, {set_auth, Domain, Password}).
+
+%% Initiate standard TCP XMPP server connection
+%% If the domain is not passed we expect to find it in the authentication
+%% method. It should thus be set before.
+%% Returns StreamId (String)
+connect(Component, Server, Port)
+  when is_pid(Component),
+       is_list(Server),
+       is_integer(Port) ->
+    case gen_fsm:sync_send_event(Component, {connect_tcp, Server, Port},
+				 ?TIMEOUT) of
+	Error when is_tuple(Error) -> erlang:throw(Error);
+	StreamId -> StreamId
+    end.
+
+%% Handshake
+%% Returns ok
+handshake(Component) when is_pid(Component) ->
+    case gen_fsm:sync_send_event(Component, {handshake}) of
+	ok -> ok;
+	Error when is_tuple(Error) -> erlang:throw(Error)
+    end.
+
+%% Send any exmpp formatted packet
+send_packet(Component, Packet) when is_pid(Component) ->
+    case gen_fsm:sync_send_event(Component, {send_packet, Packet}) of
+	Error when is_tuple(Error) -> erlang:throw(Error);
+        Id -> Id
+    end.
+
+set_controlling_process(Component,Client) when is_pid(Component), is_pid(Client) ->
+    case gen_fsm:sync_send_all_state_event(Component, {set_controlling_process, Client}) of
+	Error when is_tuple(Error) -> erlang:throw(Error);
+        Id -> Id
+    end.
+
+%%====================================================================
+%% gen_fsm callbacks
+%%====================================================================
+init([Pid]) ->
+    inets:start(),
+    exmpp_stringprep:start(),
+    {A1,A2,A3} = now(),
+    random:seed(A1, A2, A3),
+    {ok, setup, #state{client_pid=Pid}}.
+
+handle_event(tcp_closed, _StateName, State) ->
+    {stop, tcp_closed, State};
+
+handle_event(_Event, StateName, State) ->
+    {next_state, StateName, State}.
+
+handle_sync_event(stop, _From, _StateName, State) ->
+    Reply = ok,
+    {stop, normal, Reply, State};
+handle_sync_event({set_controlling_process,Client}, _From, StateName, State) ->
+    Reply = ok,
+    {reply,Reply,StateName,State#state{client_pid=Client}};
+handle_sync_event(_Event, _From, StateName, State) ->
+    Reply = ok,
+    {reply, Reply, StateName, State}.
+
+handle_info(_Info, StateName, State) ->
+    {next_state, StateName, State}.
+
+
+terminate(Reason, _StateName, #state{connection_ref = undefined,
+				     stream_ref = undefined,
+				     from_pid=From}) ->
+    reply(Reason, From),
+    ok;
+terminate(Reason, _StateName, #state{connection_ref = undefined,
+				     stream_ref = StreamRef,
+				     from_pid=From}) ->
+    exmpp_xmlstream:stop(StreamRef),
+    exmpp_xml:stop_parser(exmpp_xmlstream:get_parser(StreamRef)),
+    reply(Reason, From),
+    ok;
+terminate(Reason, _StateName, #state{connection_ref = ConnRef,
+				     connection = Module,
+				     stream_ref = undefined,
+				     from_pid=From}) ->
+    Module:close(ConnRef),
+    reply(Reason, From),
+    ok;
+terminate(Reason, _StateName, #state{connection_ref = ConnRef,
+				     connection = Module,
+				     stream_ref = StreamRef,
+				     receiver_ref = ReceiverRef,
+				     from_pid=From}) ->
+    exmpp_xmlstream:stop(StreamRef),
+    exmpp_xml:stop_parser(exmpp_xmlstream:get_parser(StreamRef)),
+    Module:close(ConnRef, ReceiverRef),
+    reply(Reason, From),
+    ok.
+
+%% Send gen_fsm reply if needed
+reply(_Reply, undefined) ->
+    ok;
+reply(Reply, {P, _} = From) when is_pid(P) ->
+    gen_fsm:reply(From, Reply);
+reply(_, _) ->
+    ok.
+
+%%--------------------------------------------------------------------
+%% Function:
+%% code_change(OldVsn, StateName, State, Extra) -> {ok, StateName, NewState}
+%% Description: Convert process state when code is changed
+%%--------------------------------------------------------------------
+code_change(_OldVsn, StateName, State, _Extra) ->
+    {ok, StateName, State}.
+
+%%====================================================================
+%% States
+%%====================================================================
+%% ---------------------------
+%% Setup state: Configuration
+
+%% Define JID and authentication method
+setup({set_auth, Domain, Password}, _From, State) ->
+    {reply, ok, setup, State#state{auth_method ={Domain, Password}}};
+setup({connect_tcp, Host, Port}, From, State) ->
+    case State#state.auth_method of
+	undefined ->
+	    {reply, {connect_error,
+		     authentication_or_domain_undefined}, setup, State};
+	_Other ->
+	    connect(exmpp_tcp, {Host, Port}, From, State)
+    end.
+
+%% ---------------------------
+%% Stream negociation:
+
+%% Standard opening stream:
+-define(stream,
+	#xmlstreamstart{element=#xmlel{
+			  ns='http://etherx.jabber.org/streams',
+			  name=stream}}).
+%% Standard stream error:
+-define(streamerror,
+	#xmlstreamelement{element=#xmlel{
+			    ns='http://etherx.jabber.org/streams',
+			    name=error,
+			    children=[#xmlel{name=Reason} | _MoreReasons]}}).
+
+%% Special stream error: disconnected
+-define(streamdisconnected,
+        #xmlstreamelement{element=#xmlel{
+			    ns='http://etherx.jabber.org/streams',
+			    name=error,
+			    children=[#xmlcdata{cdata=  <<"Disconnected">> }]}}).
+
+%% Standard end of stream:
+-define(streamend,
+        #xmlstreamend{endtag=#xmlendtag{
+			ns='http://etherx.jabber.org/streams',
+			name=stream}}).
+
+%% We cannot receive API call in this state
+wait_for_stream(_Event, _From, State) ->
+    {reply, {error, busy_connecting_to_server}, wait_for_stream, State}.
+%% TODO: Check that we receive a client stream. Need change in the
+%% parsing library.
+wait_for_stream(Start = ?stream, State = #state{connection = _Module,
+						connection_ref = _ConnRef,
+						auth_method = _Auth,
+						from_pid = From}) ->
+    %% Get StreamID
+    StreamId = exmpp_xml:get_attribute_as_list(Start#xmlstreamstart.element, id, ""),
+    gen_fsm:reply(From, StreamId),
+    {next_state, stream_opened, State#state{from_pid=undefined,
+					    stream_id = StreamId}}.
+
+%% ---------------------------
+%% Between stream opening and Component opening
+
+%% Supported user commands at this stage:
+%% handshake and register
+stream_opened({handshake}, _From,State=#state{auth_method=undefined}) ->
+    {reply, {error, auth_method_undefined}, stream_opened, State};
+stream_opened({handshake}, From, State=#state{connection = Module,
+					  connection_ref = ConnRef,
+                      stream_id = StreamId, auth_method = {_Domain, Password}}) ->
+    %% Retrieve supported authentication methods:
+    %% TODO: Do different thing if we use basic or SASL auth
+    %% For now, we consider everything is legacy (basic)
+    Digest = exmpp_client_legacy_auth:hex(exmpp_client_legacy_auth:digest(StreamId, Password)),
+    Handshake = #xmlel{name=handshake, children= [?XMLCDATA(Digest)]},
+    Module:send(ConnRef, Handshake),
+    {next_state, wait_for_handshake_result, State#state{from_pid=From}};
+
+%% We can define update handshake informations after we are connected to
+%% the XMPP server:
+%% Define JID and authentication method
+stream_opened({set_auth, Domain, Password}, _From, State) ->
+    {reply, ok, stream_opened, State#state{auth_method= {Domain, Password}}};
+stream_opened({presence, _Status, _Show}, _From, State) ->
+    {reply, {error, not_session_established}, setup, State};
+%% We allow to send packet here to give control to the developer on all packet
+%% send to the server. The developer can implements his own login management
+%% code.
+%% If the packet is an iq set or get:
+%% We check that there is a valid id and return it to match the reply
+stream_opened({send_packet, Packet}, _From,
+	      State = #state{connection = Module,
+			     connection_ref = ConnRef}) ->
+    Id = send_packet(Packet, Module, ConnRef),
+    {reply, Id, stream_opened, State}.
+
+%% Process incoming
+%% Dispatch incoming messages
+stream_opened(#xmlstreamelement{element=#xmlel{name=message, attrs=Attrs}=MessageElement}, State = #state{connection = _Module, connection_ref = _ConnRef}) ->
+    process_message(State#state.client_pid, Attrs, MessageElement),
+    {next_state, stream_opened, State};
+%% Dispach IQs from server
+stream_opened(#xmlstreamelement{element=#xmlel{name=iq, attrs=Attrs}=IQElement}, State) ->
+    process_iq(State#state.client_pid, Attrs, IQElement),
+    {next_state, stream_opened, State};
+%% Handle stream error: We keep the process alive to be able
+%%                      return errors
+stream_opened(?streamerror, State) ->
+    {next_state, stream_error, State#state{stream_error=Reason}};
+%% Handle end of stream
+stream_opened(?streamend, State) ->
+    {next_state, stream_closed, State}.
+
+stream_error(_Signal, _From, State) ->
+    {reply, {stream_error, State#state.stream_error}, stream_error, State}.
+stream_error(?streamend, State) ->
+    {next_state, stream_closed, State};
+stream_error(_Signal, State) ->
+    {next_state, stream_error, State}.
+
+stream_closed(_Signal, _From, State = #state{stream_error = undefined}) ->
+    {reply, {stream_closed, undefined}, stream_closed, State};
+stream_closed(_Signal, _From, State) ->
+    {reply, {stream_error, State#state.stream_error}, stream_closed, State}.
+stream_closed(_Signal, State) ->
+    {next_state, stream_closed, State}.
+
+wait_for_handshake_result(#xmlstreamelement{element=#xmlel{name=handshake}} , State=#state{from_pid = From}) ->
+    case From of
+        undefined -> ok;
+        From -> gen_fsm:reply(From, ok)
+    end,
+	{next_state, session_established, State};
+
+%% Reason comes from streamerror macro
+wait_for_handshake_result(?streamerror, State) ->
+    {stop, {error, Reason}, State}.
+
+%% ---
+%% Send packets
+%% If the packet is an iq set or get:
+%% We check that there is a valid id and return it to match the reply
+session_established({send_packet, Packet}, _From,
+	  State = #state{connection = Module,
+			 connection_ref = ConnRef}) ->
+    Id = send_packet(Packet, Module, ConnRef),
+    {reply, Id, session_established, State}.
+
+%% ---
+%% Receive packets
+%% When logged in we dispatch the event we receive
+%% Dispatch incoming presence packets
+session_established(#xmlstreamelement{element=#xmlel{name=presence, attrs=Attrs}=PresenceElement},
+	  State = #state{connection = _Module, connection_ref = _ConnRef}) ->
+    process_presence(State#state.client_pid, Attrs, PresenceElement),
+    {next_state, session_established, State};
+%% Dispatch incoming messages
+session_established(#xmlstreamelement{element=#xmlel{name=message, attrs=Attrs}=MessageElement}, State = #state{connection = _Module, connection_ref = _ConnRef}) ->
+    process_message(State#state.client_pid, Attrs, MessageElement),
+    {next_state, session_established, State};
+%% Dispach IQs from server
+session_established(#xmlstreamelement{element=#xmlel{name=iq, attrs=Attrs}=IQElement}, State) ->
+    process_iq(State#state.client_pid, Attrs, IQElement),
+    {next_state, session_established, State};
+%% Process unexpected packet
+session_established(_Packet, State) ->
+    %% log it or do something better
+    io:format("!!!ALERT!!! Unknown packet:~p~p~n", [_Packet, State]),
+    {next_state, session_established, State}.
+
+%% TODO:
+%% Handle disconnections
+%% Connection replaced.
+
+%%--------------------------------------------------------------------
+%% Internal functions
+%%--------------------------------------------------------------------
+
+%% Connect to server
+connect(Module, Params, From, State=#state{auth_method = {Domain, _P}}) ->
+    connect(Module, Params, Domain, From, State).
+connect(Module, Params, Domain, From, #state{client_pid=_ClientPid} = State) ->
+    try start_parser() of
+	StreamRef ->
+	    try Module:connect(self(), StreamRef, Params) of
+		{ConnRef, ReceiverRef} ->
+		    %% basic (legacy) authent: we do not use version
+		    %% 1.0 in stream:
+		    ok = Module:send(ConnRef,
+				     exmpp_stream:opening(Domain,
+							  ?NS_COMPONENT_ACCEPT,
+							  {0,0})),
+		    %% TODO: Add timeout on wait_for_stream to return
+		    %% meaningfull error.
+		    {next_state, wait_for_stream,
+		     State#state{domain = Domain,
+				 connection = Module,
+				 connection_ref = ConnRef,
+				 stream_ref = StreamRef,
+				 receiver_ref = ReceiverRef,
+				 from_pid = From}}
+	    catch
+		Error ->
+		    exmpp_xmlstream:stop(StreamRef),
+		    %% We do not stop here, because the developer
+		    %% might want to start a connection using another
+		    %% transport
+		    {reply, Error, setup,
+		     State#state{stream_ref = undefined,
+				 from_pid = From}}
+	    end
+    catch
+	Error ->
+	    {reply, Error, setup, State}
+    end.
+
+%% Define parser options
+%% No compatibility mode: We use all the nice optimisation of exmpp:
+-define(PARSER_OPTIONS,
+	[
+	 {names_as_atom, true},
+	 {check_nss, xmpp},
+	 {check_elems, xmpp},
+	 {check_attrs, xmpp},
+	 {emit_endtag, false},
+	 {root_depth, 0},
+	 {max_size, infinity}]).
+
+%% Start parser and return stream reference
+start_parser() ->
+    exmpp_xmlstream:start({gen_fsm, self()},
+                          exmpp_xml:start_parser(?PARSER_OPTIONS),
+                          [{xmlstreamstart,new}]).
+
+%% Packet processing functions
+process_presence(ClientPid, Attrs, Packet) ->
+    Type = get_attribute_value(Attrs, type, "available"),
+    Who = exmpp_jid:to_lower(get_attribute_value(Attrs, from, "")),
+    Id = get_attribute_value(Attrs, id, ""),
+    ClientPid ! #received_packet{packet_type = presence,
+                                 type_attr = Type,
+                                 from = Who,
+                                 id = Id,
+                                 raw_packet = Packet}.
+
+process_message(ClientPid, Attrs, Packet) ->
+    Type = get_attribute_value(Attrs, type, "normal"),
+    Who = exmpp_jid:to_lower(get_attribute_value(Attrs, from, "")),
+    Id = get_attribute_value(Attrs, id, ""),
+    ClientPid ! #received_packet{packet_type = message,
+                                 type_attr = Type,
+                                 from = Who,
+                                 id = Id,
+                                 raw_packet = Packet}.
+
+process_iq(ClientPid, Attrs, Packet) ->
+    Type = get_attribute_value(Attrs, type, ""),
+    Who = exmpp_jid:to_lower(get_attribute_value(Attrs, from, "")),
+    Id = get_attribute_value(Attrs, id, ""),
+    NS = exmpp_iq:get_payload_ns_as_atom(Packet),
+    ClientPid ! #received_packet{packet_type = iq,
+                                 type_attr = Type,
+                                 from = Who,
+                                 id = Id,
+                                 queryns = NS,
+                                 raw_packet = Packet}.
+
+%% Add a packet ID is needed:
+%% Check that the attribute list has defined an ID.
+%% If no ID has been defined, add a packet id to the list of attributes
+%% This function uses {@link random:uniform/1}. It's up to the caller to
+%% seed the generator.
+check_id(Attrs) ->
+    case exmpp_xml:get_attribute_from_list_as_binary(Attrs, id, <<>>) of
+	<<>> ->
+	    Id = exmpp_utils:random_id("Component"),
+	    {exmpp_xml:set_attribute_in_list(Attrs, id, Id), Id};
+        Id -> {Attrs, Id}
+    end.
+
+%% Try getting a given atribute from a list of xmlattr records
+%% Return default value if attribute is not found
+get_attribute_value(Attrs, Attr, Default) ->
+    exmpp_xml:get_attribute_from_list_as_list(Attrs, Attr, Default).
+
+%% Internal operations
+%% send_packet: actually format and send the packet:
+send_packet(#xmlel{name=iq, attrs=Attrs}=IQElement, Module, ConnRef) ->
+    Type = exmpp_xml:get_attribute_from_list_as_binary(Attrs, type, undefined),
+    case Type of
+	<<"error">> ->
+	    {Attrs2, PacketId} = check_id(Attrs),
+	    Module:send(ConnRef, IQElement#xmlel{attrs=Attrs2}),
+	    PacketId;
+	<<"result">> ->
+	    {Attrs2, PacketId} = check_id(Attrs),
+	    Module:send(ConnRef, IQElement#xmlel{attrs=Attrs2}),
+	    PacketId;
+	<<"set">> ->
+	    {Attrs2, PacketId} = check_id(Attrs),
+	    Module:send(ConnRef, IQElement#xmlel{attrs=Attrs2}),
+	    PacketId;
+	<<"get">> ->
+	    {Attrs2, PacketId} = check_id(Attrs),
+	    Module:send(ConnRef, IQElement#xmlel{attrs=Attrs2}),
+	    PacketId
+    end;
+send_packet(#xmlel{attrs=Attrs}=Element, Module, ConnRef) ->
+    {Attrs2, Id} = check_id(Attrs),
+    Module:send(ConnRef, Element#xmlel{attrs=Attrs2}),
+    Id.
+
diff -r d551623afde5 deps/exmpp/src/network/exmpp_session.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/network/exmpp_session.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,977 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Mickael Remond <mickael.remond@process-one.net>
+
+%% @doc
+%% The module <strong>{@module}</strong> puts together the mechanism
+%% to connect to an XMPP server, using various authentication
+%% mechanisms and network layers.
+%%
+%% <p>
+%% This module is intended to be used directly by client developers.
+%% </p>
+%%
+%% TODO: Rewrite the following text into a comprehensive documentation.
+%%   explain priority matching of iq query reply. Illustration with echo_client.
+%%   Illustration with an Erlang/OTP example.
+%%
+%% TODO: - manage timeouts
+%%       - Callback should not be module, but anonymous or named
+%%       functions
+%%       - Do function callback need to have priority ?
+%%
+%% Currently thinking about a design purely based on sending back messages to
+%% the client process: Would allow selection of the order of packets (whic
+%% seems more powerful)
+%% Sending a packet is async and return the packet id
+%% If this is an IQ, the next reply can be a blocking receive on an IQ result
+%% with the same refid.
+%% It could be a generic receive, getting packets in order.
+%% TODO: Add unregister account ?
+
+%%
+%%
+%% Initial support for sasl authentication is up and running.
+%% For now, only PLAIN is supported.
+%% Example:
+%%    S = exmpp_session:start_link({1,0}),  %{1,0} is the stream version. You must supply {1,0} to be able to perform sasl authentication.
+%%    JID = exmpp_jid:make("user1", "localhost", "user1"),
+%%    exmpp_session:auth_basic_digest(S, JID, "user1"),   %% it is still called auth_basic_digest.. I must change that.
+%%    {ok, StreamID, Features} = exmpp_session:connect_TCP(S, "localhost", 5222),
+%%    io:format("StreamID ~p Features:  \n", [StreamID]),
+%%    ok = exmpp_session:login(S, "PLAIN"),   %specify "PLAIN" as sasl login method
+%%     ...
+%%
+
+-module(exmpp_session).
+-behaviour(gen_fsm).
+
+%% XMPP Session API:
+-export([start/0, start_link/0, start/1, start_link/1,start_debug/0, stop/1]).
+-export([auth_basic/3, auth_basic_digest/3,
+	 connect_SSL/3, connect_SSL/4,
+	 connect_TCP/3, connect_TCP/4,
+	 connect_BOSH/4,
+	 register_account/2, register_account/3,
+	 login/1, login/2,
+	 send_packet/2,
+	 set_controlling_process/2]).
+
+%% gen_fsm callbacks
+-export([init/1,
+	 code_change/4,
+	 handle_info/3,
+	 handle_event/3,
+	 handle_sync_event/4,
+	 terminate/3]).
+
+%% States
+-export([setup/3, wait_for_stream/2, wait_for_stream/3,
+	 stream_opened/2, stream_opened/3,
+	 wait_for_sasl_response/2,
+	 wait_for_stream_features/2,
+	 wait_for_bind_response/2,
+	 wait_for_session_response/2,
+	 stream_error/2, stream_error/3,
+	 stream_closed/2, stream_closed/3,
+	 wait_for_legacy_auth_method/2,
+	 wait_for_auth_result/2,
+	 wait_for_register_result/2,
+	 logged_in/2, logged_in/3
+	]).
+
+-include("exmpp.hrl").
+-include("exmpp_client.hrl").
+
+-record(state, {
+	  auth_method = undefined,
+      stream_version,
+      authenticated = false,
+	  domain,
+	  client_pid,
+	  connection = exmpp_tcp,
+	  connection_ref,
+	  stream_ref,
+	  stream_id = false, %% XMPP StreamID (Used for digest_auth)
+	  stream_error,
+	  receiver_ref,
+	  from_pid           %% Use by gen_fsm to handle postponed replies
+	 }).
+
+%% This timeout should match the connect timeout
+-define(TIMEOUT, 5000).
+
+%%====================================================================
+%% API
+%%====================================================================
+%%--------------------------------------------------------------------
+%% Function: start_link() -> ok,Pid} | ignore | {error,Error}
+%% Description:Creates a gen_fsm process which calls Module:init/1 to
+%% initialize. To ensure a synchronized start-up procedure, this function
+%% does not return until Module:init/1 has returned.
+%%--------------------------------------------------------------------
+%% Start the session (used to get a reference):
+start() ->
+    case gen_fsm:start(?MODULE, [self()], []) of
+	{ok, PID} -> PID;
+	{error, Reason} -> erlang:error({error, Reason})
+    end.
+%% Start the session (used to get a reference):
+start_link() ->
+    case gen_fsm:start_link(?MODULE, [self()], []) of
+	{ok, PID} -> PID;
+	{error, Reason} -> erlang:error({error, Reason})
+    end.
+start({1,0}) ->
+    case gen_fsm:start(?MODULE, [self(), {1,0}], []) of
+	{ok, PID} -> PID;
+	{error, Reason} -> erlang:error({error, Reason})
+    end.
+%% Start the session (used to get a reference):
+start_link({1,0}) ->
+    case gen_fsm:start_link(?MODULE, [self(), {1,0}], []) of
+	{ok, PID} -> PID;
+	{error, Reason} -> erlang:error({error, Reason})
+    end.
+
+%% Start the session in debug mode
+%% (trace events)
+start_debug() ->
+    case gen_fsm:start(?MODULE, [self()], [{debug,[trace]}]) of
+	{ok, PID} -> PID;
+	{error, Reason} -> erlang:error({error, Reason})
+    end.
+
+%% Close session and disconnect
+stop(Session) ->
+    catch gen_fsm:sync_send_all_state_event(Session, stop),
+    ok.
+
+%% Set authentication mode to basic (password)
+auth_basic(Session, JID, Password)
+  when is_pid(Session),
+       is_list(Password) ->
+    case exmpp_jid:is_jid(JID) of
+	false -> erlang:error({incorrect_jid,JID});
+	true ->
+	    Auth = {basic, password, JID, Password},
+	    gen_fsm:sync_send_event(Session, {set_auth, Auth})
+    end.
+
+%% Set authentication mode to basic (digest)
+auth_basic_digest(Session, JID, Password)
+  when is_pid(Session),
+       is_list(Password) ->
+    case exmpp_jid:is_jid(JID) of
+	false -> erlang:error({incorrect_jid,JID});
+	true ->
+	    Auth = {basic, digest, JID, Password},
+	    gen_fsm:sync_send_event(Session, {set_auth, Auth})
+    end.
+
+
+
+%% Initiate standard TCP XMPP server connection
+%% If the domain is not passed we expect to find it in the authentication
+%% method. It should thus be set before.
+%% Returns {ok,StreamId::String} | {ok, StreamId::string(), Features :: xmlel{}}
+connect_TCP(Session, Server, Port)
+  when is_pid(Session),
+       is_list(Server),
+       is_integer(Port) ->
+    case gen_fsm:sync_send_event(Session, {connect_tcp, Server, Port},
+				 ?TIMEOUT) of
+	{ok, StreamId} -> {ok, StreamId};
+    {ok, StreamId, Features} -> {ok, StreamId, Features};
+	Error when is_tuple(Error) -> erlang:throw(Error)
+    end.
+
+%% Initiate standard TCP XMPP server connection
+%% Returns {ok,StreamId::String} | {ok, StreamId::string(), Features :: xmlel{}}
+connect_TCP(Session, Server, Port, Domain)
+  when is_pid(Session),
+       is_list(Server),
+       is_integer(Port),
+       is_list(Domain) ->
+    case gen_fsm:sync_send_event(Session,
+				 {connect_tcp, Server, Port, Domain},
+				 ?TIMEOUT) of
+	{ok, StreamId} -> {ok, StreamId};
+    {ok, StreamId, Features} -> {ok, StreamId, Features};
+	Error when is_tuple(Error) -> erlang:throw(Error)
+    end.
+
+%% Initiate HTTP Bosh XMPP server connection
+%% If the domain is not passed we expect to find it in the authentication
+%% method. It should thus be set before.
+%% Returns {ok,StreamId::String} | {ok, StreamId::string(), Features :: xmlel{}}
+%%  Options = [option()]
+%%  Option() = {local_ip, IP} | {local_port, fun() -> integer()}  bind sockets to this local ip / port.
+
+connect_BOSH(Session, URL, Server, Options)
+  when is_pid(Session),
+       is_list(Server),
+       is_list(Options) ->
+    case gen_fsm:sync_send_event(Session, {connect_bosh, URL, Server, Options},
+                                 ?TIMEOUT) of
+	{ok, StreamId} -> {ok, StreamId};
+    {ok, StreamId, Features} -> {ok, StreamId, Features};
+	Error when is_tuple(Error) -> erlang:throw(Error)
+    end.
+
+%% Initiate SSL XMPP server connection
+%% If the domain is not passed we expect to find it in the authentication
+%% method. It should thus be set before.
+%% Returns {ok,StreamId::String} | {ok, StreamId::string(), Features :: xmlel{}}
+connect_SSL(Session, Server, Port)
+  when is_pid(Session),
+       is_list(Server),
+       is_integer(Port) ->
+    case gen_fsm:sync_send_event(Session, {connect_ssl, Server, Port},
+				 ?TIMEOUT) of
+	{ok, Streamid} -> {ok, Streamid};
+    {ok, Streamid, Features} -> {ok, Streamid, Features};
+	Error when is_tuple(Error) -> erlang:throw(Error)
+    end.
+
+%% Initiate SSL XMPP server connection
+%% Returns {ok,StreamId::String} | {ok, StreamId::string(), Features :: xmlel{}}
+connect_SSL(Session, Server, Port, Domain)
+  when is_pid(Session),
+       is_list(Server),
+       is_integer(Port),
+       is_list(Domain) ->
+    case gen_fsm:sync_send_event(Session,
+				 {connect_ssl, Server, Port, Domain},
+				 ?TIMEOUT) of
+	{ok, Streamid} -> {ok, Streamid};
+    {ok, Streamid, Features} -> {ok, Streamid, Features};
+	Error when is_tuple(Error) -> erlang:throw(Error)
+    end.
+
+%% Try to add the session user with inband registration
+%% In this case, we use the jid data provided with the auth method
+%% Returns ok
+register_account(Session, Password) ->
+    case gen_fsm:sync_send_event(Session, {register_account, Password}) of
+	ok -> ok;
+	Error when is_tuple(Error) -> erlang:throw(Error)
+    end.
+
+%% Try to add the session user with inband registration
+%% The domain is implicite and depends on the opened stream
+%% Returns ok
+register_account(Session, Username, Password) ->
+    case gen_fsm:sync_send_event(Session,
+				 {register_account, Username, Password}) of
+	ok -> ok;
+	Error when is_tuple(Error) -> erlang:throw(Error)
+    end.
+
+
+%% Login session user
+%% Returns {ok, JID}
+login(Session) when is_pid(Session) ->
+    case gen_fsm:sync_send_event(Session, {login}) of
+	{ok, JID} -> {ok, JID};
+	Error when is_tuple(Error) -> erlang:throw(Error)
+    end.
+login(Session, Mechanism) when is_pid(Session), is_list(Mechanism) ->
+    case gen_fsm:sync_send_event(Session, {login, sasl, Mechanism}) of
+	{ok, JID} -> {ok, JID};
+	Error when is_tuple(Error) -> erlang:throw(Error)
+    end.
+
+%% Send any exmpp formatted packet
+send_packet(Session, Packet) when is_pid(Session) ->
+    case gen_fsm:sync_send_event(Session, {send_packet, Packet}) of
+	Error when is_tuple(Error) -> erlang:throw(Error);
+        Id -> Id
+    end.
+
+set_controlling_process(Session,Client) when is_pid(Session), is_pid(Client) ->
+    case gen_fsm:sync_send_all_state_event(Session, {set_controlling_process,
+						     Client}) of
+	Error when is_tuple(Error) -> erlang:throw(Error);
+        Id -> Id
+    end.
+
+%%====================================================================
+%% gen_fsm callbacks
+%%====================================================================
+init([Pid]) ->
+    %% TODO: This shouldn't be needed, but see 
+    %%       https://support.process-one.net/browse/EXMPP-23
+    inets:start(),
+    exmpp_stringprep:start(),
+
+    {A1,A2,A3} = now(),
+    random:seed(A1, A2, A3),
+    {ok, setup, #state{client_pid=Pid, stream_version = {0,0}}}; %%if not specified, do not use version 1.0
+init([Pid, Version]) ->
+    inets:start(),
+    exmpp_stringprep:start(),
+
+    {A1,A2,A3} = now(),
+    random:seed(A1, A2, A3),
+    {ok, setup, #state{client_pid=Pid, stream_version = Version}}.
+
+handle_event(tcp_closed, _StateName, State) ->
+    {stop, tcp_closed, State};
+
+handle_event(_Event, StateName, State) ->
+    {next_state, StateName, State}.
+
+handle_sync_event(stop, _From, _StateName, State) ->
+    Reply = ok,
+    {stop, normal, Reply, State};
+handle_sync_event({set_controlling_process,Client}, _From, StateName, State) ->
+    Reply = ok,
+    {reply,Reply,StateName,State#state{client_pid=Client}};
+handle_sync_event(_Event, _From, StateName, State) ->
+    Reply = ok,
+    {reply, Reply, StateName, State}.
+
+handle_info(_Info, StateName, State) ->
+    {next_state, StateName, State}.
+
+
+terminate(Reason, _StateName, #state{connection_ref = undefined,
+				     stream_ref = undefined,
+				     from_pid=From}) ->
+    reply(Reason, From),
+    ok;
+terminate(Reason, _StateName, #state{connection_ref = undefined,
+				     stream_ref = StreamRef,
+				     from_pid=From}) ->
+    exmpp_xmlstream:stop(StreamRef),
+    exmpp_xml:stop_parser(exmpp_xmlstream:get_parser(StreamRef)),
+    reply(Reason, From),
+    ok;
+terminate(Reason, _StateName, #state{connection_ref = ConnRef,
+				     connection = Module,
+				     stream_ref = undefined,
+				     from_pid=From}) ->
+    Module:close(ConnRef),
+    reply(Reason, From),
+    ok;
+terminate(Reason, _StateName, #state{connection_ref = ConnRef,
+				     connection = Module,
+				     stream_ref = StreamRef,
+				     receiver_ref = ReceiverRef,
+				     from_pid=From}) ->
+    Module:close(ConnRef, ReceiverRef), %stop receiving data from socket
+    exmpp_xmlstream:stop(StreamRef),
+    exmpp_xml:stop_parser(exmpp_xmlstream:get_parser(StreamRef)),
+    reply(Reason, From),
+    ok.
+
+%% Send gen_fsm reply if needed
+reply(_Reply, undefined) ->
+    ok;
+reply(Reply, {P, _} = From) when is_pid(P) ->
+    gen_fsm:reply(From, Reply);
+reply(_, _) ->
+    ok.
+
+%%--------------------------------------------------------------------
+%% Function:
+%% code_change(OldVsn, StateName, State, Extra) -> {ok, StateName, NewState}
+%% Description: Convert process state when code is changed
+%%--------------------------------------------------------------------
+code_change(_OldVsn, StateName, State, _Extra) ->
+    {ok, StateName, State}.
+
+%%====================================================================
+%% States
+%%====================================================================
+%% ---------------------------
+%% Setup state: Configuration
+
+%% Define JID and authentication method
+setup({set_auth, Auth}, _From, State) when is_tuple(Auth) ->
+    {reply, ok, setup, State#state{auth_method=Auth}};
+setup({connect_tcp, Host, Port}, From, State) ->
+    case State#state.auth_method of
+	undefined ->
+	    {reply, {connect_error,
+		     authentication_or_domain_undefined}, setup, State};
+	_Other ->
+	    connect(exmpp_tcp, {Host, Port}, From, State)
+    end;
+setup({connect_tcp, Host, Port, Domain}, From, State) ->
+    connect(exmpp_tcp, {Host, Port}, Domain, From, State);
+setup({connect_bosh, URL, Host, Port}, From, State) ->
+    case State#state.auth_method of
+        undefined ->
+            {reply, {connect_error,
+                     authentication_or_domain_undefined}, setup, State};
+        _Other ->
+            connect(exmpp_bosh, {URL, Host, Port}, From, State)
+    end;
+setup({connect_ssl, Host, Port}, From, State) ->
+    connect(exmpp_ssl, {Host, Port}, From, State);
+setup({connect_ssl, Host, Port, Domain}, From, State) ->
+    connect(exmpp_ssl, {Host, Port}, Domain, From, State);
+setup({presence, _Status, _Show}, _From, State) ->
+    {reply, {error, not_connected}, setup, State};
+setup(_UnknownMessage, _From, State) ->
+    {reply, {error, unallowed_command}, setup, State}.
+
+%% ---------------------------
+%% Stream negociation:
+
+%% TODO: Defines should probably be refactored with the other parts of
+%% exmpp.
+
+%% Standard opening stream:
+-define(stream,
+	#xmlstreamstart{element=#xmlel{
+			  ns='http://etherx.jabber.org/streams',
+			  name=stream}}).
+%% Standard stream error:
+-define(streamerror,
+	#xmlstreamelement{element=#xmlel{
+			    ns='http://etherx.jabber.org/streams',
+			    name=error,
+			    children=[#xmlel{name=Reason} | _MoreReasons]}}).
+
+%% Special stream error: disconnected
+-define(streamdisconnected,
+        #xmlstreamelement{element=#xmlel{
+			    ns='http://etherx.jabber.org/streams',
+			    name=error,
+			    children=[#xmlcdata{cdata=  <<"Disconnected">> }]}}).
+
+%% Standard end of stream:
+-define(streamend,
+        #xmlstreamend{endtag=#xmlendtag{
+			ns='http://etherx.jabber.org/streams',
+			name=stream}}).
+
+%% Extract IQElement from IQ
+-define(iq,
+	#xmlstreamelement{
+	  element=#xmlel{name=iq, attrs=Attrs}=IQElement}).
+-define(iq_no_attrs,
+	#xmlstreamelement{
+	  element=#xmlel{name=iq}=IQElement}).
+
+%% Used to match a presence packet in stream.
+-define(presence,
+	#xmlstreamelement{
+	  element=#xmlel{name=presence, attrs=Attrs}=PresenceElement}).
+%% Used to match a message packet in stream
+-define(message,
+	#xmlstreamelement{
+	  element=#xmlel{name=message, attrs=Attrs}=MessageElement}).
+%% To match an XMLNSElement of type Iq:
+-define(iqattrs, #xmlel{name=iq, attrs=Attrs}=IQElement).
+%% To match either presence or message
+-define(elementattrs, #xmlel{attrs=Attrs}=Element).
+
+
+%% We cannot receive API call in this state
+wait_for_stream(_Event, _From, State) ->
+    {reply, {error, busy_connecting_to_server}, wait_for_stream, State}.
+%% TODO: Check that we receive a client stream. Need change in the
+%% parsing library.
+
+%% stream already authenticated by sasl
+wait_for_stream(?stream, State = #state{authenticated = true}) ->
+    {next_state, wait_for_stream_features, State};
+
+wait_for_stream(Start = ?stream, State = #state{connection = _Module,
+						connection_ref = _ConnRef,
+						auth_method = _Auth,
+						from_pid = From}) ->
+    %% Get StreamID
+    StreamId = exmpp_xml:get_attribute_as_list(Start#xmlstreamstart.element, id, ""),
+    
+    case exmpp_xml:get_attribute_as_list(Start#xmlstreamstart.element, version, "") of
+            "" ->
+                gen_fsm:reply(From, {ok,StreamId}),
+                {next_state, stream_opened, State#state{from_pid=undefined,
+					    stream_id = StreamId, stream_version = {0,0}}};
+            "1.0" ->
+                {next_state, wait_for_stream_features, State#state{stream_id =  StreamId}}
+    end.
+
+wait_for_stream_features(#xmlstreamelement{element=#xmlel{name='features'} = F}, State) ->
+    #state{connection = Module, 
+           connection_ref = ConnectionRef, 
+           from_pid = From, 
+           authenticated = Authenticated, 
+           stream_id = StreamId} = State,
+    case Authenticated of
+        true ->
+            Bind = exmpp_client_binding:bind(get_resource(State#state.auth_method)),
+            Module:send(ConnectionRef, Bind),
+            %%@pablo TODO:  send bind request
+            {next_state, wait_for_bind_response, State};
+        false ->
+            gen_fsm:reply(From, {ok, StreamId, F}),
+            {next_state, stream_opened, State#state{from_pid = undefined}}
+    end;
+
+wait_for_stream_features(X, State) ->
+    io:format("Unknown element waiting for stream features ~p \n", [X]),
+    {next_state, wait_for_stream_features, State}.
+   
+
+wait_for_bind_response(#xmlstreamelement{element = #xmlel{name ='iq'} = IQ}, State) ->
+    #state{connection = Module, connection_ref = ConnectionRef} = State,
+    case exmpp_iq:get_type(IQ) of
+        result -> 
+            JID = exmpp_client_binding:bounded_jid(IQ),  
+            NewAuthMethod = {basic, sasl_anonymous, JID, undefined}, %%TODO: is this neccesary? 
+            Module:send(ConnectionRef, exmpp_client_session:establish()),
+            {next_state, wait_for_session_response, State#state{auth_method=NewAuthMethod}};
+        _ ->
+            {stop, {bind, IQ}, State}
+    end.
+
+wait_for_session_response(#xmlstreamelement{element = #xmlel{name='iq'} = IQ}, State) ->
+    #state{from_pid = From} = State,
+    case exmpp_iq:get_type(IQ) of
+        result ->
+            gen_fsm:reply(From, {ok, get_jid(State#state.auth_method)}),  %%after successful login, bind and session
+            {next_state, stream_opened, State#state{from_pid = undefined}};
+        _ ->
+            {stop, {bind, IQ}, State}
+    end.
+        
+
+
+%% ---------------------------
+%% Between stream opening and session opening
+
+%% Supported user commands at this stage:
+%% login and register
+stream_opened({login}, _From,State=#state{auth_method=undefined}) ->
+    {reply, {error, auth_method_undefined}, stream_opened, State};
+stream_opened({login}, From, State=#state{connection = Module,
+					  connection_ref = ConnRef,
+					  auth_method=Auth}) ->
+    %% Retrieve supported authentication methods:
+    %% TODO: Do different thing if we use basic or SASL auth
+    %% For now, we consider everything is legacy (basic)
+    Domain = get_domain(Auth),
+    Username = get_username(Auth),
+    Module:send(ConnRef,
+ 		exmpp_client_legacy_auth:request_with_user(Domain, Username)),
+    {next_state, wait_for_legacy_auth_method, State#state{from_pid=From}};
+stream_opened({login, sasl, "PLAIN"}, From, State=#state{connection = Module,
+					  connection_ref = ConnRef,
+					  auth_method=Auth}) ->
+    Domain = get_domain(Auth),
+    Username = get_username(Auth),
+    Password = get_password(Auth),
+    InitialResp = iolist_to_binary([Domain, 0, Username, 0, Password]),
+    Module:send(ConnRef,
+ 		exmpp_client_sasl:selected_mechanism("PLAIN", InitialResp)),
+    {next_state, wait_for_sasl_response, State#state{from_pid=From}};
+stream_opened({login, sasl, "ANONYMOUS"}, From, State=#state{connection = Module,
+					  connection_ref = ConnRef
+					  }) ->
+    Module:send(ConnRef, exmpp_client_sasl:selected_mechanism("ANONYMOUS")),
+    {next_state, wait_for_sasl_response, State#state{from_pid=From}};
+
+stream_opened({register_account, Password}, From,
+	      State=#state{connection = Module,
+			   connection_ref = ConnRef,
+			   auth_method=Auth}) ->
+    Username = get_username(Auth),
+    register_account(ConnRef, Module, Username, Password),
+    {next_state, wait_for_register_result, State#state{from_pid=From}};
+stream_opened({register_account, Username, Password}, From,
+	      State=#state{connection = Module,
+			   connection_ref = ConnRef}) ->
+    register_account(ConnRef, Module, Username, Password),
+    {next_state, wait_for_register_result, State#state{from_pid=From}};
+
+%% We can define update login informations after we are connected to
+%% the XMPP server:
+%% Define JID and authentication method
+stream_opened({set_auth, Auth}, _From, State) when is_tuple(Auth) ->
+    {reply, ok, stream_opened, State#state{auth_method=Auth}};
+stream_opened({presence, _Status, _Show}, _From, State) ->
+    {reply, {error, not_logged_in}, setup, State};
+%% We allow to send packet here to give control to the developer on all packet
+%% send to the server. The developer can implements his own login management
+%% code.
+%% If the packet is an iq set or get:
+%% We check that there is a valid id and return it to match the reply
+stream_opened({send_packet, Packet}, _From,
+	      State = #state{connection = Module,
+			     connection_ref = ConnRef}) ->
+    Id = send_packet(Packet, Module, ConnRef),
+    {reply, Id, stream_opened, State}.
+
+%% Process incoming
+%% Dispatch incoming messages
+stream_opened(?message, State = #state{connection = _Module,
+				       connection_ref = _ConnRef}) ->
+    process_message(State#state.client_pid, Attrs, MessageElement),
+    {next_state, stream_opened, State};
+%% Dispach IQs from server
+stream_opened(?iq, State) ->
+    process_iq(State#state.client_pid, Attrs, IQElement),
+    {next_state, stream_opened, State};
+%% Handle stream error: We keep the process alive to be able
+%%                      return errors
+stream_opened(?streamerror, State) ->
+    {next_state, stream_error, State#state{stream_error=Reason}};
+%% Handle end of stream
+stream_opened(?streamend, State) ->
+    {next_state, stream_closed, State};
+
+%% any other element (features and starttls for 1.0 streams)
+stream_opened(#xmlstreamelement{element=Packet}, State) ->
+    State#state.client_pid ! #received_packet{raw_packet = Packet},
+    {next_state, stream_opened, State}.
+
+%% TODO: handle errors
+wait_for_sasl_response(#xmlstreamelement{element=#xmlel{name='success'}}, State) ->
+    #state{connection_ref = ConnRef, receiver_ref = ReceiverRef, connection = Module, auth_method = Auth} = State,
+    Domain = get_domain(Auth),
+    Module:reset_parser(ReceiverRef),
+    ok = Module:send(ConnRef, exmpp_stream:opening(Domain, ?NS_JABBER_CLIENT, {1,0})),
+    {next_state, wait_for_stream, State#state{authenticated = true}}.
+
+stream_error(_Signal, _From, State) ->
+    {reply, {stream_error, State#state.stream_error}, stream_error, State}.
+stream_error(?streamend, State) ->
+    {next_state, stream_closed, State};
+stream_error(_Signal, State) ->
+    {next_state, stream_error, State}.
+
+stream_closed(_Signal, _From, State = #state{stream_error = undefined}) ->
+    {reply, {stream_closed, undefined}, stream_closed, State};
+stream_closed(_Signal, _From, State) ->
+    {reply, {stream_error, State#state.stream_error}, stream_closed, State}.
+stream_closed(_Signal, State) ->
+    {next_state, stream_closed, State}.
+
+%% Reason comes from streamerror macro
+wait_for_legacy_auth_method(?iq_no_attrs, State = #state{connection = Module,
+							 connection_ref = ConnRef,
+							 auth_method = Auth,
+							 stream_id = StreamId}) ->
+    Username = get_username(Auth),
+    Password = get_password(Auth),
+    Resource = get_resource(Auth),
+    Method = get_method(Auth),
+    case check_auth_method(Method, IQElement) of
+	ok ->
+	    case do_auth(Method, ConnRef, Module, Username, Password, Resource,
+                         StreamId) of
+		ok ->
+		    {next_state, wait_for_auth_result, State};
+		Error ->
+		    {stop, Error, State}
+	    end;
+	{error, Reason} ->
+	    {stop, {error, Reason}, State}
+    end;
+wait_for_legacy_auth_method(?streamerror, State) ->
+    {stop, {error, Reason}, State}.
+
+%% TODO: We should be able to match on iq type directly on the first
+%% level record
+wait_for_auth_result(?iq_no_attrs, State = #state{from_pid=From, auth_method = Auth}) ->
+    case exmpp_xml:get_attribute_as_binary(IQElement, type, undefined) of
+ 	<<"result">> ->
+            gen_fsm:reply(From, {ok, get_jid(Auth)}),
+            {next_state, logged_in, State#state{from_pid=undefined}};
+	<<"error">> ->
+            Reason = exmpp_stanza:get_condition(IQElement),
+            gen_fsm:reply(From, {auth_error, Reason}),
+            {next_state, stream_opened, State#state{from_pid=undefined}}
+    end.
+
+%% Note: We do not get the field received from server to perform register
+%% TODO: The API should be flexible to adapt to server
+%% requirements. Check that a client can get the list of fields and
+%% override this simple method of registration.
+wait_for_register_result(?iq_no_attrs, State = #state{from_pid=From}) ->
+    case exmpp_xml:get_attribute_as_binary(IQElement, type, undefined) of
+ 	<<"result">> ->
+            gen_fsm:reply(From, ok),
+            {next_state, stream_opened, State#state{from_pid=undefined}};
+	<<"error">> ->
+            Reason = exmpp_stanza:get_condition(IQElement),
+            gen_fsm:reply(From, {register_error, Reason}),
+            {next_state, stream_opened, State#state{from_pid=undefined}}
+    end;
+wait_for_register_result(?streamerror, State) ->
+    {stop, {error, Reason}, State}.
+
+%% ---
+%% Send packets
+%% If the packet is an iq set or get:
+%% We check that there is a valid id and return it to match the reply
+logged_in({send_packet, Packet}, _From,
+	  State = #state{connection = Module,
+			 connection_ref = ConnRef}) ->
+    Id = send_packet(Packet, Module, ConnRef),
+    {reply, Id, logged_in, State}.
+
+%% ---
+%% Receive packets
+%% When logged in we dispatch the event we receive
+%% Dispatch incoming presence packets
+logged_in(?presence,
+	  State = #state{connection = _Module,
+			 connection_ref = _ConnRef}) ->
+    process_presence(State#state.client_pid, Attrs, PresenceElement),
+    {next_state, logged_in, State};
+%% Dispatch incoming messages
+logged_in(?message, State = #state{connection = _Module,
+				   connection_ref = _ConnRef}) ->
+    process_message(State#state.client_pid, Attrs, MessageElement),
+    {next_state, logged_in, State};
+%% Dispach IQs from server
+logged_in(?iq, State) ->
+    process_iq(State#state.client_pid, Attrs, IQElement),
+    {next_state, logged_in, State};
+logged_in(?streamerror, State) ->
+    process_stream_error(State#state.client_pid, Reason),
+    {next_state, stream_error, State#state{stream_error=Reason}};
+%% Process unexpected packet
+logged_in(_Packet, State) ->
+    %% log it or do something better
+    %%io:format("!!!ALERT!!! Unknown packet:~p~p~n", [_Packet, State]),
+    {next_state, logged_in, State}.
+
+%% TODO:
+%% Handle disconnections
+%% Connection replaced.
+
+%%--------------------------------------------------------------------
+%% Internal functions
+%%--------------------------------------------------------------------
+
+%% Connect to server
+connect(Module, Params, From, State) ->
+    Domain = get_domain(State#state.auth_method),
+    connect(Module, Params, Domain, From, State).
+connect(Module, Params, Domain, From, #state{client_pid=_ClientPid, stream_version = Version} = State) ->
+    try start_parser() of
+	StreamRef ->
+	    try Module:connect(self(), StreamRef, Params) of
+		{ConnRef, ReceiverRef} ->
+		    ok = Module:send(ConnRef,
+				     exmpp_stream:opening(Domain,
+							  ?NS_JABBER_CLIENT,
+							  Version)),
+		    %% TODO: Add timeout on wait_for_stream to return
+		    %% meaningfull error.
+		    {next_state, wait_for_stream,
+		     State#state{domain = Domain,
+				 connection = Module,
+				 connection_ref = ConnRef,
+				 stream_ref = StreamRef,
+				 receiver_ref = ReceiverRef,
+				 from_pid = From}}
+	    catch
+		Error ->
+		    exmpp_xmlstream:stop(StreamRef),
+		    %% We do not stop here, because the developer
+		    %% might want to start a connection using another
+		    %% transport
+		    {reply, Error, setup,
+		     State#state{stream_ref = undefined,
+				 from_pid = From}}
+	    end
+    catch
+	Error ->
+	    {reply, Error, setup, State}
+    end.
+
+%% Authentication
+%% digest auth will fail if we do not have streamid
+do_auth(password, ConnRef, Module, Username, Password, Resource, _StreamId) ->
+    Module:send(ConnRef,
+		exmpp_client_legacy_auth:password_plain(Username, Password,
+							Resource));
+do_auth(digest, ConnRef, Module, Username, Password, Resource, StreamId)
+  when is_list(StreamId) ->
+    Module:send(ConnRef,
+		exmpp_client_legacy_auth:password_digest(Username,
+							 Password,
+							 Resource,
+							 StreamId));
+%% In this case StreamId can be false
+do_auth(digest, _ConnRef, _Module, _Username, _Password, _Resource, StreamId)
+  when is_atom(StreamId) ->
+    {auth_error, no_streamid_for_digest_auth}.
+
+%% Extraction functions
+
+%% Extract domain from Auth Method
+get_domain({basic, _Method, JID, _Password}) when ?IS_JID(JID) ->
+    exmpp_jid:domain_as_list(JID).
+get_username({basic, _Method, JID, _Password}) when ?IS_JID(JID) ->
+    exmpp_jid:node_as_list(JID).
+get_resource({basic, _Method, JID, _Password}) when ?IS_JID(JID) ->
+    exmpp_jid:resource_as_list(JID).
+get_password({basic, _Method, _JID, Password}) when is_list(Password) ->
+    Password.
+get_method({basic, Method, _JID, _Password}) when is_atom(Method) ->
+    Method.
+get_jid({_, _Method, JID, _Password}) when ?IS_JID(JID) ->
+    JID.
+
+%% Parsing functions
+
+%% Define parser options
+%% No compatibility mode: We use all the nice optimisation of exmpp:
+-define(PARSER_OPTIONS,
+	[
+	 {names_as_atom, true},
+	 {check_nss, xmpp},
+	 {check_elems, xmpp},
+	 {check_attrs, xmpp},
+	 {emit_endtag, false},
+	 {root_depth, 0},
+	 {max_size, infinity}]).
+
+%% Start parser and return stream reference
+start_parser() ->
+    exmpp_xmlstream:start({gen_fsm, self()},
+                          exmpp_xml:start_parser(?PARSER_OPTIONS),
+                          [{xmlstreamstart,new}]).
+
+%% Authentication functions
+check_auth_method(Method, IQElement) ->
+    %% Check auth method if we have the IQ result
+    case exmpp_xml:get_attribute_as_binary(IQElement, type, undefined) of
+	<<"result">> ->
+	    check_auth_method2(Method, IQElement);
+	_ ->
+	    {error, not_auth_method_result}
+    end.
+check_auth_method2(Method, IQElement) ->
+    QueryElement = exmpp_xml:get_element(IQElement,
+					 'jabber:iq:auth',
+					 'query'),
+    case exmpp_xml:get_element(QueryElement,
+			       'jabber:iq:auth',
+			       Method) of
+	undefined ->
+	    {error, no_supported_auth_method};
+	_ ->
+	    ok
+    end.
+
+%% Packet processing functions
+process_presence(ClientPid, Attrs, Packet) ->
+    Type = get_attribute_value(Attrs, type, "available"),
+    Who = case get_attribute_value(Attrs, from, undefined) of
+                undefined -> undefined;
+                "" -> undefined;
+                Value -> exmpp_jid:to_lower(Value)
+          end,
+    Id = get_attribute_value(Attrs, id, ""),
+    ClientPid ! #received_packet{packet_type = presence,
+                                 type_attr = Type,
+                                 from = Who,
+                                 id = Id,
+                                 raw_packet = Packet}.
+
+process_message(ClientPid, Attrs, Packet) ->
+    Type = get_attribute_value(Attrs, type, "normal"),
+    Who = case get_attribute_value(Attrs, from, undefined) of
+                undefined -> undefined;
+                "" -> undefined;
+                Value -> exmpp_jid:to_lower(Value)
+          end,
+    Id = get_attribute_value(Attrs, id, ""),
+    ClientPid ! #received_packet{packet_type = message,
+                                 type_attr = Type,
+                                 from = Who,
+                                 id = Id,
+                                 raw_packet = Packet}.
+
+process_iq(ClientPid, Attrs, Packet) ->
+    Type = get_attribute_value(Attrs, type, ""),
+    Who = case get_attribute_value(Attrs, from, undefined) of
+                undefined -> undefined;
+                "" -> undefined;
+                Value -> exmpp_jid:to_lower(Value)
+          end,
+    Id = get_attribute_value(Attrs, id, ""),
+    NS = exmpp_iq:get_payload_ns_as_atom(Packet),
+    ClientPid ! #received_packet{packet_type = iq,
+                                 queryns = NS,
+                                 type_attr = Type,
+                                 from = Who,
+                                 id = Id,
+                                 raw_packet = Packet}.
+
+process_stream_error(ClientPid, Reason) ->
+    ClientPid ! {stream_error, Reason}.
+
+%% Add a packet ID is needed:
+%% Check that the attribute list has defined an ID.
+%% If no ID has been defined, add a packet id to the list of attributes
+%% This function uses {@link random:uniform/1}. It's up to the caller to
+%% seed the generator.
+check_id(Attrs) ->
+    case exmpp_xml:get_attribute_from_list_as_binary(Attrs, id, <<>>) of
+	<<>> ->
+	    Id = exmpp_utils:random_id("session"),
+	    {exmpp_xml:set_attribute_in_list(Attrs, id, Id), Id};
+        Id -> {Attrs, Id}
+    end.
+
+%% Try getting a given atribute from a list of xmlattr records
+%% Return default value if attribute is not found
+get_attribute_value(Attrs, Attr, Default) ->
+    exmpp_xml:get_attribute_from_list_as_list(Attrs, Attr, Default).
+
+%% Internal operations
+%% send_packet: actually format and send the packet:
+send_packet(?iqattrs, Module, ConnRef) ->
+    Type = exmpp_xml:get_attribute_from_list_as_binary(Attrs, type, undefined),
+    case Type of
+	<<"error">> ->
+	    {Attrs2, PacketId} = check_id(Attrs),
+	    Module:send(ConnRef, IQElement#xmlel{attrs=Attrs2}),
+	    PacketId;
+	<<"result">> ->
+	    {Attrs2, PacketId} = check_id(Attrs),
+	    Module:send(ConnRef, IQElement#xmlel{attrs=Attrs2}),
+	    PacketId;
+	<<"set">> ->
+	    {Attrs2, PacketId} = check_id(Attrs),
+	    Module:send(ConnRef, IQElement#xmlel{attrs=Attrs2}),
+	    PacketId;
+	<<"get">> ->
+	    {Attrs2, PacketId} = check_id(Attrs),
+	    Module:send(ConnRef, IQElement#xmlel{attrs=Attrs2}),
+	    PacketId
+    end;
+send_packet(?elementattrs, Module, ConnRef) ->
+    {Attrs2, Id} = check_id(Attrs),
+    Module:send(ConnRef, Element#xmlel{attrs=Attrs2}),
+    Id.
+
+register_account(ConnRef, Module, Username, Password) ->
+    Module:send(ConnRef,
+		exmpp_client_register:register_account([{username, Username},
+							{password, Password}])).
+
+
diff -r d551623afde5 deps/exmpp/src/network/exmpp_ssl.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/network/exmpp_ssl.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,113 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Will Glozer <will@glozer.net>
+
+%% @doc
+%% The module <strong>{@module}</strong> manages SSL socket
+%% connections to an XMPP server.
+%%
+%% <p>
+%% This module is intended to be used directly by client developers.
+%% </p>
+
+-module(exmpp_ssl).
+
+
+-export([connect/3, send/2, close/2, reset_parser/1]).
+
+
+%% -- client interface --
+
+
+%% Internal export
+-export([receiver/4]).
+
+reset_parser(ReceiverPid) when is_pid(ReceiverPid) ->
+    ReceiverPid ! reset_parser.
+
+%% Connect to XMPP server
+%% Returns:
+%% Ref or throw error
+%% Ref is a socket
+connect(ClientPid, StreamRef, {Host, Port}) ->
+    DefaultOptions = [{packet,0}, binary, {active, once}],
+    {SetOptsModule,Opts} =
+	case check_new_ssl() of
+	    true ->  {inet,[{reuseaddr,true}|DefaultOptions]};
+	    false -> {ssl,DefaultOptions}
+	end,
+    case ssl:connect(Host, Port, Opts, 30000) of
+	{ok, Socket} ->
+	    %% TODO: Hide receiver failures in API
+	    ReceiverPid = spawn_link(?MODULE, receiver,
+				     [ClientPid, Socket,SetOptsModule, StreamRef]),
+	    ssl:controlling_process(Socket, ReceiverPid),
+	    {Socket, ReceiverPid};
+	{error, Reason} ->
+	    erlang:throw({socket_error, Reason})
+    end.
+%% if we use active-once before spawning the receiver process,
+%% we can receive some data in the original process rather than
+%% in the receiver process. So {active.once} is is set explicitly
+%% in the receiver process. NOTE: in this case this wouldn't make
+%% a big difference, as the connecting client should send the
+%% stream header before receiving anything
+
+
+close(Socket, ReceiverPid) ->
+    ReceiverPid ! stop,
+    ssl:close(Socket).
+
+send(Socket, XMLPacket) ->
+    %% TODO: document_to_binary to reduce memory consumption
+    String = exmpp_xml:document_to_list(XMLPacket),
+    case ssl:send(Socket, String) of
+	ok -> ok;
+	_Other -> {error, send_failed}
+    end.
+
+%%--------------------------------------------------------------------
+%% Internal functions
+%%--------------------------------------------------------------------
+receiver(ClientPid, Socket,SetOptsModule, StreamRef) ->
+    receiver_loop(ClientPid, Socket,SetOptsModule, StreamRef).
+
+receiver_loop(ClientPid, Socket,SetOptsModule, StreamRef) ->
+    SetOptsModule:setopts(Socket, [{active, once}]),
+    receive
+	stop ->
+	    ok;
+	{ssl, Socket, Data} ->
+	    {ok, NewStreamRef} = exmpp_xmlstream:parse(StreamRef, Data),
+	    receiver_loop(ClientPid, Socket,SetOptsModule, NewStreamRef);
+	{ssl_closed, Socket} ->
+	    gen_fsm:send_all_state_event(ClientPid, tcp_closed);
+	{ssl_error,Socket,Reason} ->
+	    error_logger:warning_msg([ssl_error,{ssl_socket,Socket},Reason]),
+	    gen_fsm:send_all_state_event(ClientPid, tcp_closed);
+    reset_parser ->
+        receiver_loop(ClientPid, Socket, SetOptsModule, exmpp_xmlstream:reset(StreamRef))
+    end.
+
+
+%% In R12, inet:setopts/2 doesn't accept the new ssl sockets
+check_new_ssl() ->
+    case erlang:system_info(version) of
+        [$5,$.,Maj] when Maj < $6  ->
+            false;
+        [$5,$.,Maj, $.,_Min] when ( Maj < $6 ) ->
+            false;
+        _  ->
+            true
+    end.
diff -r d551623afde5 deps/exmpp/src/network/exmpp_tcp.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/network/exmpp_tcp.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,125 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Mickael Remond <mickael.remond@process-one.net>
+
+%% @doc
+%% The module <strong>{@module}</strong> manages simple TCP/IP socket
+%% connections to an XMPP server.
+%%
+%% <p>
+%% This module is intended to be used directly by client developers.
+%% </p>
+
+-module(exmpp_tcp).
+
+%% Behaviour exmpp_gen_transport ?
+-export([connect/3, send/2, close/2, reset_parser/1]).
+
+%% Internal export
+-export([receiver/3]).
+
+
+reset_parser(ReceiverPid) when is_pid(ReceiverPid) ->
+    ReceiverPid ! reset_parser.
+    
+
+%% Connect to XMPP server
+%% Returns:
+%% Ref or throw error
+connect(ClientPid, StreamRef, {Host, Port}) ->
+    case gen_tcp:connect(Host, Port, [{packet,0},
+				      binary,
+				      {active, false},
+				      {reuseaddr, true}], 30000) of
+	{ok, Socket} ->
+	    %% TODO: Hide receiver failures in API
+	    ReceiverPid = spawn_link(?MODULE, receiver,
+				     [ClientPid, Socket, StreamRef]),
+	    gen_tcp:controlling_process(Socket, ReceiverPid),
+	    activate(ReceiverPid),
+	    {Socket, ReceiverPid};
+	{error, Reason} ->
+	    erlang:throw({socket_error, Reason})
+    end.
+
+activate(ReceiverPid) ->
+    Ref=make_ref(),
+    ReceiverPid ! {activate,self(),Ref},
+    receive
+	{Ref, ok} ->
+	    ok
+    after 5000 ->
+	    ReceiverPid ! stop,
+	    erlang:throw({socket_error, cannot_activate_socket})
+    end.
+
+%% if we use active-once before spawning the receiver process,
+%% we can receive some data in the original process rather than
+%% in the receiver process. So {active,once} is is set explicitly
+%% in the receiver process. NOTE: in this case this wouldn't make
+%% a big difference, as the connecting client should send the
+%% stream header before receiving anything
+
+% we do a synchronous shutdown of the receiver process, 
+% because we want to make sure it isn't going be pushing
+% more data to the exmpp_xmlstream after closed. This
+% avoid the -useless- crash reports produced when the 
+% receiver process read data from socket before received
+% the stop message, but after the xmlstream was closed.
+% See shutdown order in exmpp_tcp:terminate/3.
+close(Socket, ReceiverPid) ->
+    Ref = erlang:make_ref(),
+    ReceiverPid ! {stop, self(), Ref},
+    receive
+        {ok, Ref} -> ok
+    after
+        1000 -> ok
+    end,
+    gen_tcp:close(Socket).
+
+send(Socket, XMLPacket) ->
+    %% TODO: document_to_binary to reduce memory consumption
+    String = exmpp_xml:document_to_list(XMLPacket),
+    case gen_tcp:send(Socket, String) of
+	ok -> ok;
+	{error, Reason} -> {error, Reason}
+    end.
+
+%%--------------------------------------------------------------------
+%% Internal functions
+%%--------------------------------------------------------------------
+receiver(ClientPid, Socket, StreamRef) ->
+    receiver_loop(ClientPid, Socket, StreamRef).
+
+receiver_loop(ClientPid, Socket, StreamRef) ->
+    receive
+	{activate, Pid, Ref} ->
+	    inet:setopts(Socket, [{active, once}]),
+	    Pid ! {Ref, ok},
+	    receiver_loop(ClientPid, Socket, StreamRef);
+	stop -> 
+        ok;
+	{stop, From, Ref} ->  %synchronous stop.
+        From ! {ok, Ref},
+	    ok;
+	{tcp, Socket, Data} ->
+	    inet:setopts(Socket, [{active, once}]),
+	    {ok, NewStreamRef} = exmpp_xmlstream:parse(StreamRef, Data),
+	    receiver_loop(ClientPid, Socket, NewStreamRef);
+	{tcp_closed, Socket} ->
+	    %% XXX why timeouts with timeout 10 seconds with quickchek tests ???
+	    gen_fsm:send_all_state_event(ClientPid, tcp_closed);
+    reset_parser ->
+        receiver_loop(ClientPid, Socket, exmpp_xmlstream:reset(StreamRef))
+    end.
diff -r d551623afde5 deps/exmpp/src/server/exmpp_server_binding.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/server/exmpp_server_binding.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,109 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> implements the receiving entity
+%% side of Resource Binding.
+
+-module(exmpp_server_binding).
+
+-include("exmpp.hrl").
+
+%% Feature annoucement.
+-export([
+	 feature/0
+	]).
+
+%% Resource binding.
+-export([
+	 wished_resource/1,
+	 bind/2,
+	 error/2
+	]).
+
+%% --------------------------------------------------------------------
+%% Feature announcement.
+%% --------------------------------------------------------------------
+
+%% @spec () -> Feature
+%%     Feature = exmpp_xml:xmlel()
+%% @doc Make a feature announcement child.
+%%
+%% The result should then be passed to {@link exmpp_stream:features/1}.
+
+feature() ->
+    #xmlel{ns = ?NS_BIND,
+	   name = 'bind'
+	  }.
+
+%% --------------------------------------------------------------------
+%% Resource binding.
+%% --------------------------------------------------------------------
+
+%% @spec (IQ) -> Resource | undefined
+%%     IQ = exmpp_xml:xmlel()
+%%     Resource = string()
+%% @throws {resource_binding, wished_resource, invalid_bind, IQ}
+%% @doc Return the resource the client wants or `undefined' if he
+%% doesn't ask for any.
+
+wished_resource(IQ) when ?IS_IQ(IQ) ->
+    case exmpp_iq:get_type(IQ) of
+        'set' ->
+            case exmpp_iq:get_request(IQ) of
+                #xmlel{ns = ?NS_BIND, name = 'bind'} = Bind ->
+                    case exmpp_xml:get_element(Bind, ?NS_BIND, 'resource') of
+                        #xmlel{} = Resource ->
+                            exmpp_xml:get_cdata_as_list(Resource);
+                        _ ->
+                            undefined
+                    end;
+                _ ->
+                    throw({resource_binding, wished_resource,
+			   invalid_bind, IQ})
+            end;
+        _ ->
+            throw({resource_binding, wished_resource, invalid_bind, IQ})
+    end;
+wished_resource(Stanza) ->
+    throw({resource_binding, wished_resource, invalid_bind, Stanza}).
+
+%% @spec (IQ, Jid) -> Reply
+%%     IQ = exmpp_xml:xmlel()
+%%     Jid = exmpp_jid:jid()
+%%     Reply = exmpp_xml:xmlel()
+%% @doc Prepare a reply to `IQ' to inform the client of its final JID.
+
+bind(IQ, Jid) when ?IS_IQ(IQ) ->
+    Jid_B = exmpp_jid:to_binary(Jid),
+    El = #xmlel{ns = ?NS_BIND,
+		name = 'jid'
+	       },
+    Children = [exmpp_xml:set_cdata(El, Jid_B)],
+    Bind = #xmlel{ns = ?NS_BIND,
+		  name = 'bind',
+		  children = Children
+		 },
+    exmpp_iq:result(IQ, Bind).
+
+%% @spec (IQ, Condition) -> Error_IQ
+%%     IQ = exmpp_xml:xmlel()
+%%     Condition = atom()
+%%     Error_IQ = exmpp_xml:xmlel()
+%% @doc Prepare an error reply to `IQ'.
+
+error(IQ, Condition) when ?IS_IQ(IQ) ->
+    Error = exmpp_stanza:error(IQ#xmlel.ns, Condition),
+    exmpp_iq:error(IQ, Error).
diff -r d551623afde5 deps/exmpp/src/server/exmpp_server_compression.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/server/exmpp_server_compression.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,142 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> implements the receiving entity
+%% side of Stream Compression (XEP-0138).
+%%
+%% @reference <a href="http://www.xmpp.org/extensions/xep-0138.html">XEP-0138: Stream Compression</a>
+%% @reference <a href="http://www.xmpp.org/extensions/xep-0229.html">XEP-0229: Stream Compression with LZW</a>
+
+-module(exmpp_server_compression).
+
+-include("exmpp.hrl").
+
+%% Feature announcement.
+-export([
+	 feature/1
+	]).
+
+%% Compression negotiation.
+-export([
+	 selected_method/1,
+	 compressed/0,
+	 failure/1
+	]).
+
+%% --------------------------------------------------------------------
+%% Feature announcement.
+%% --------------------------------------------------------------------
+
+%% @spec (Methods) -> Feature
+%%     Methods = [string()]
+%%     Feature = exmpp_xml:xmlel()
+%% @throws {stream_compression, feature_announcement, invalid_methods_list,
+%%           []} |
+%%         {stream_compression, feature_announcement, invalid_method, Method}
+%% @doc Make a feature annoucement child.
+%%
+%% The `Methods' list must contain at least one method.
+%%
+%% Examples of methods are:
+%% <ul>
+%% <li>`"zlib"' (support required)</li>
+%% <li>`"lzw"'</li>
+%% </ul>
+%%
+%% The result should then be passed to {@link exmpp_stream:features/1}.
+
+feature(Methods) ->
+    #xmlel{ns = ?NS_COMPRESS_FEAT,
+	   name = 'compression',
+	   children = methods_list(Methods)
+	  }.
+
+methods_list([]) ->
+    throw({stream_compression, feature_announcement,
+	   invalid_methods_list, []});
+methods_list(Methods) ->
+    methods_list2(Methods, []).
+
+methods_list2([Method | Rest], Children) ->
+    case io_lib:deep_char_list(Method) of
+        true ->
+            Child = #xmlel{ns = ?NS_COMPRESS_FEAT,
+			   name = 'method'
+			  },
+            methods_list2(Rest,
+			  Children ++ [exmpp_xml:set_cdata(Child, Method)]);
+        false ->
+            throw({stream_compression, feature_announcement,
+		   invalid_method, Method})
+    end;
+methods_list2([], Children) ->
+    Children.
+
+%% --------------------------------------------------------------------
+%% Compression negotiation.
+%% --------------------------------------------------------------------
+
+standard_conditions() ->
+    [
+     {'unsupported-method'},
+     {'setup-failed'}
+    ].
+
+%% @spec (El) -> Method
+%%     El = exmpp_xml:xmlel()
+%%     Method = string()
+%% @doc Extract the method chosen by the initiating entity.
+
+selected_method(#xmlel{ns = ?NS_COMPRESS, name = 'compress'} = El) ->
+    case exmpp_xml:get_element(El, ?NS_COMPRESS, 'method') of
+        undefined ->
+            undefined;
+        Sub_El ->
+            exmpp_xml:get_cdata(Sub_El)
+    end;
+selected_method(El) ->
+    throw({stream_compression, selected_method, unexpected_element, El}).
+
+%% @spec () -> Compressed
+%%     Compressed = exmpp_xml:xmlel()
+%% @doc Prepare a `<compressed/>' element.
+
+compressed() ->
+    #xmlel{
+	    ns = ?NS_COMPRESS,
+	    name = 'compressed'
+	   }.
+
+%% @spec (Condition) -> Failure
+%%     Condition = atom()
+%%     Failure = exmpp_xml:xmlel()
+%% @throws {stream_compression, failure, invalid_condition, Condition}
+%% @doc Prepare a `<failure/>' element.
+
+failure(Condition) ->
+    case lists:keysearch(Condition, 1, standard_conditions()) of
+        {value, _} ->
+            Condition_El = #xmlel{
+              ns = ?NS_COMPRESS,
+              name = Condition
+	     },
+            #xmlel{ns = ?NS_COMPRESS,
+		   name = failure,
+		   children = [Condition_El]
+		  };
+        _ ->
+            throw({stream_compression, failure, invalid_condition, Condition})
+    end.
diff -r d551623afde5 deps/exmpp/src/server/exmpp_server_legacy_auth.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/server/exmpp_server_legacy_auth.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,227 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> implements the receiving entity
+%% side of legacy authentication found in Jabber, before XMPP 1.0.
+%%
+%% @see exmpp_client_legacy_auth.
+%%
+%% @reference <a href="http://www.xmpp.org/extensions/xep-0078.html">XEP-0078: Non-SASL Authentication</a>
+
+-module(exmpp_server_legacy_auth).
+
+-include("exmpp.hrl").
+
+%% Creating stanza.
+-export([
+	 fields/1,
+	 fields/2,
+	 success/1,
+	 failure/2
+	]).
+
+%% Accessing informations.
+-export([
+	 want_fields/1,
+	 get_credentials/1
+	]).
+
+%% Tools.
+-export([
+	 unhex/1
+	]).
+
+%% --------------------------------------------------------------------
+%% Creating stanza.
+%% --------------------------------------------------------------------
+
+%% @spec (Request_IQ) -> Fields_IQ
+%%     Request_IQ = exmpp_xml:xmlel()
+%%     Fields_IQ = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for advertising fields.
+%%
+%% Both authentication methods are proposed.
+
+fields(Request_IQ) ->
+    fields(Request_IQ, both).
+
+%% @spec (Request_IQ, Auth) -> Fields_IQ
+%%     Request_IQ = exmpp_xml:xmlel()
+%%     Auth = plain | digest | both
+%%     Fields_IQ = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' for advertising fields.
+
+fields(Request_IQ, Auth) when ?IS_IQ(Request_IQ) ->
+    Path = [ {element, 'query' }, {element, 'username'}, cdata ],
+    Username_Children = case exmpp_xml:get_path(Request_IQ, Path) of
+                   <<>> -> [];
+                   Username -> [#xmlcdata{cdata = Username}]
+                end,
+    Username_El = #xmlel{ns = ?NS_LEGACY_AUTH, name = 'username',
+			 children = Username_Children},
+    Password_El = #xmlel{ns = ?NS_LEGACY_AUTH, name = 'password'},
+    Digest_El   = #xmlel{ns = ?NS_LEGACY_AUTH, name = 'digest'},
+    Resource_El = #xmlel{ns = ?NS_LEGACY_AUTH, name = 'resource'},
+    Children = case Auth of
+		   plain  -> [Username_El, Password_El, Resource_El];
+		   digest -> [Username_El, Digest_El, Resource_El];
+		   both   -> [Username_El, Password_El, Digest_El, Resource_El]
+	       end,
+    Query = #xmlel{
+      ns = ?NS_LEGACY_AUTH,
+      name = 'query',
+      children = Children
+     },
+    exmpp_iq:result(Request_IQ, Query).
+
+%% @spec (Password_IQ) -> Success_IQ
+%%     Password_IQ = exmpp_xml:xmlel()
+%%     Success_IQ = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' to notify a successfull authentication.
+
+success(Password_IQ) when ?IS_IQ(Password_IQ) ->
+    exmpp_iq:result(Password_IQ).
+
+%% @spec (Password_IQ, Condition) -> Failure_IQ
+%%     Password_IQ = exmpp_xml:xmlel()
+%%     Condition = not_authorized | conflict | not_acceptable
+%%     Failure_IQ = exmpp_xml:xmlel()
+%% @doc Make an `<iq>' to notify a successfull authentication.
+
+failure(Password_IQ, Condition) when ?IS_IQ(Password_IQ) ->
+    Code = case Condition of
+	       'not-authorized' -> "401";
+	       'conflict'       -> "409";
+	       'not-acceptable' -> "406"
+	   end,
+    Error = exmpp_xml:set_attribute(
+	      exmpp_stanza:error(Password_IQ#xmlel.ns, Condition),
+	      'code', Code),
+    exmpp_iq:error_without_original(Password_IQ, Error).
+
+%% --------------------------------------------------------------------
+%% Accessing informations.
+%% --------------------------------------------------------------------
+
+%% @spec (Request_IQ) -> bool()
+%%     Request_IQ = exmpp_xml:xmlel()
+%% @doc Tell if the initiating entity asks for the authentication fields.
+
+want_fields(Request_IQ) when ?IS_IQ(Request_IQ) ->
+    case exmpp_iq:get_type(Request_IQ) of
+        'get' ->
+            case exmpp_iq:get_request(Request_IQ) of
+                #xmlel{ns = ?NS_LEGACY_AUTH, name = 'query'} -> true;
+                _                                            -> false
+            end;
+        _ ->
+            false
+    end;
+want_fields(_Stanza) ->
+    false.
+
+%% @spec (Password_IQ) -> Credentials
+%%     Password_IQ = exmpp_xml:xmlel()
+%%     Credentials = {Username, Password, Resource}
+%%     Username = string()
+%%     Password = {plain, string()} | {digest, string()}
+%%     Resource = string()
+%% @doc Extract credentials from the `Password_IQ'.
+%%
+%% For digest, hexadecimal content is decoded.
+
+get_credentials(Password_IQ) when ?IS_IQ(Password_IQ) ->
+    Request = exmpp_iq:get_request(Password_IQ),
+    case Request of
+        #xmlel{ns = ?NS_LEGACY_AUTH, name = 'query', children = Children}
+	when length(Children) == 3 ->
+            get_credentials2(Children, {undefined, undefined, undefined});
+        _ ->
+            throw({legacy_auth, get_credentials, invalid_iq, Password_IQ})
+    end.
+
+get_credentials2(
+  [#xmlel{ns = ?NS_LEGACY_AUTH, name = 'username'} = Field | Rest],
+  {_Username, Password, Resource}) ->
+    Username = exmpp_xml:get_cdata_as_list(Field),
+    get_credentials2(Rest, {Username, Password, Resource});
+get_credentials2(
+  [#xmlel{ns = ?NS_LEGACY_AUTH, name = 'password'} = Field | Rest],
+  {Username, _Password, Resource}) ->
+    Password = exmpp_xml:get_cdata_as_list(Field),
+    get_credentials2(Rest, {Username, {plain, Password}, Resource});
+get_credentials2(
+  [#xmlel{ns = ?NS_LEGACY_AUTH, name = 'digest'} = Field | Rest],
+  {Username, _Password, Resource}) ->
+    Password = unhex(exmpp_xml:get_cdata_as_list(Field)),
+    get_credentials2(Rest, {Username, {digest, Password}, Resource});
+get_credentials2(
+  [#xmlel{ns = ?NS_LEGACY_AUTH, name = 'resource'} = Field | Rest],
+  {Username, Password, _Resource}) ->
+    Resource = exmpp_xml:get_cdata_as_list(Field),
+    get_credentials2(Rest, {Username, Password, Resource});
+get_credentials2([Field | _Rest], _Credentials) ->
+    throw({legacy_auth, get_credentials, invalid_field, Field});
+get_credentials2([], {undefined, _Password, _Resource}) ->
+    throw({legacy_auth, get_credentials, missing_field, 'username'});
+get_credentials2([], {_Username, undefined, _Resource}) ->
+    throw({legacy_auth, get_credentials, missing_field, 'password'});
+get_credentials2([], {_Username, _Password, undefined}) ->
+    throw({legacy_auth, get_credentials, missing_field, 'resource'});
+get_credentials2([], Credentials) ->
+    Credentials.
+
+%% --------------------------------------------------------------------
+%% Tools.
+%% --------------------------------------------------------------------
+
+%% @spec (Hex) -> Plain
+%%     Hex = string()
+%%     Plain = list()
+%% @doc Decode hexadecimal string.
+
+unhex("") ->
+    [];
+unhex(Digest) when length(Digest) rem 2 /= 0 ->
+    throw({legacy_auth, get_credentials, invalid_digest, Digest});
+unhex(Digest) ->
+    unhex2(Digest, []).
+
+unhex2([C1, C2 | Rest], Plain) ->
+    I1 = hexchar_to_int(C1),
+    I2 = hexchar_to_int(C2),
+    I = (I1 bsl 4) + I2,
+    unhex2(Rest, [I | Plain]);
+unhex2([], Plain) ->
+    lists:reverse(Plain).
+
+hexchar_to_int($0) ->  0;
+hexchar_to_int($1) ->  1;
+hexchar_to_int($2) ->  2;
+hexchar_to_int($3) ->  3;
+hexchar_to_int($4) ->  4;
+hexchar_to_int($5) ->  5;
+hexchar_to_int($6) ->  6;
+hexchar_to_int($7) ->  7;
+hexchar_to_int($8) ->  8;
+hexchar_to_int($9) ->  9;
+hexchar_to_int($a) -> 10;
+hexchar_to_int($b) -> 11;
+hexchar_to_int($c) -> 12;
+hexchar_to_int($d) -> 13;
+hexchar_to_int($e) -> 14;
+hexchar_to_int($f) -> 15;
+hexchar_to_int(C)  -> throw({legacy_auth, get_credentials, invalid_digest, C}).
diff -r d551623afde5 deps/exmpp/src/server/exmpp_server_privacy.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/server/exmpp_server_privacy.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,51 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> implements the receiving entity
+%% side of privacy lists management.
+
+-module(exmpp_server_privacy).
+
+-include("exmpp.hrl").
+
+%% Creating stanza.
+-export([
+	 list_push/2
+	]).
+
+%% --------------------------------------------------------------------
+%% Creating stanza.
+%% --------------------------------------------------------------------
+
+%% @spec (To, List_Name) -> Push_IQ
+%%     To = exmpp_jid:jid() | string()
+%%     List_Name = string()
+%%     Push_IQ = exmpp_xml:xmlel()
+%% @doc Create an `<iq/>' to notify `To' that the privacy list
+%% `List_Name' has been created or has changed.
+
+list_push(To, List_Name) ->
+    List0 = #xmlel{ns = ?NS_PRIVACY,
+		   name = 'list'
+		  },
+    List = exmpp_xml:set_attribute(List0, 'name', List_Name),
+    Query = #xmlel{ns = ?NS_PRIVACY,
+		   name = 'query',
+		   children = [List]
+		  },
+    IQ = exmpp_iq:set(?NS_JABBER_CLIENT, Query,
+		      exmpp_utils:random_id("push")),
+    exmpp_stanza:set_recipient(IQ, To).
diff -r d551623afde5 deps/exmpp/src/server/exmpp_server_sasl.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/server/exmpp_server_sasl.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,169 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> implements the receiving entity
+%% side of SASL authentication.
+%%
+%% <p>
+%% Note that it doesn't implement SASL, only feature negotiation at the
+%% XMPP level.
+%% </p>
+
+-module(exmpp_server_sasl).
+
+-include("exmpp.hrl").
+
+%% Feature announcement.
+-export([
+	 feature/1
+	]).
+
+%% SASL exchange.
+-export([
+	 challenge/1,
+	 success/0,
+	 failure/0,
+	 failure/1,
+	 next_step/1
+	]).
+
+%% --------------------------------------------------------------------
+%% Feature announcement.
+%% --------------------------------------------------------------------
+
+%% @spec (Mechanisms) -> Feature
+%%     Mechanisms = [binary() | string()]
+%%     Feature = exmpp_xml:xmlel()
+%% @throws {sasl, feature_announcement, invalid_mechanisms_list, []} |
+%%         {sasl, feature_announcement, invalid_mechanism, Mechanism}
+%% @doc Make a feature announcement child.
+%%
+%% The result should then be passed to {@link exmpp_stream:features/1}.
+
+feature(Mechanisms) ->
+    Children = mechanisms_list(Mechanisms),
+    #xmlel{ns = ?NS_SASL,
+	   name = 'mechanisms',
+	   children = Children
+	  }.
+
+mechanisms_list([]) ->
+    throw({sasl, feature_announcement, invalid_mechanisms_list, []});
+mechanisms_list(Mechanisms) ->
+    mechanisms_list2(Mechanisms, []).
+
+mechanisms_list2([Mechanism | Rest], Children) ->
+    case io_lib:deep_char_list(Mechanism) of
+        true ->
+            Child = #xmlel{ns = ?NS_SASL,
+			   name = 'mechanism'
+			  },
+            mechanisms_list2(Rest,
+			     [exmpp_xml:set_cdata(Child, Mechanism)
+			      | Children]);
+        false ->
+            throw({sasl, feature_announcement, invalid_mechanism, Mechanism})
+    end;
+mechanisms_list2([], Children) ->
+    lists:reverse(Children).
+
+%% --------------------------------------------------------------------
+%% SASL exchange.
+%% --------------------------------------------------------------------
+
+standard_conditions() ->
+    [
+     {'aborted'},
+     {'incorrect-encoding'},
+     {'invalid-authzid'},
+     {'invalid-mechanism'},
+     {'mechanism-too-weak'},
+     {'not-authorized'},
+     {'temporary-auth-failure'}
+    ].
+
+%% @spec (Challenge) -> Challenge_El
+%%     Challenge = string()
+%%     Challenge_El = exmpp_xml:xmlel()
+%% @doc Prepare a `<challenge/>' element with the given challenge.
+%%
+%% `Challenge' will be Base64-encoded by this function.
+
+challenge(Challenge) ->
+    El = #xmlel{ns = ?NS_SASL,
+		name = 'challenge'
+	       },
+    exmpp_xml:set_cdata(El, base64:encode_to_string(Challenge)).
+
+%% @spec () -> Success_El
+%%     Success_El = exmpp_xml:xmlel()
+%% @doc Prepare a `<success/>' element.
+
+success() ->
+    #xmlel{ns = ?NS_SASL,
+	   name = 'success'
+	  }.
+
+%% @spec () -> Failure
+%%     Failure = exmpp_xml:xmlel()
+%% @doc Prepare a `<failure/>' element.
+
+failure() ->
+    #xmlel{ns = ?NS_SASL,
+	   name = 'failure'
+	  }.
+
+%% @spec (Condition) -> Failure
+%%     Condition = atom()
+%%     Failure = exmpp_xml:xmlel()
+%% @doc Prepare a `<failure/>' element.
+
+failure(Condition) ->
+    case lists:keymember(Condition, 1, standard_conditions()) of
+        true  -> ok;
+        false -> throw({sasl, failure, invalid_condition, Condition})
+    end,
+    Condition_El = #xmlel{ns = ?NS_SASL,
+			  name = Condition
+			 },
+    exmpp_xml:append_child(failure(), Condition_El).
+
+%% @spec (El) -> Type
+%%     El = exmpp_xml:xmlel()
+%%     Type = Auth | Response | Abort
+%%     Auth = {auth, Mechanism, none | string()}
+%%     Mechanism = string()
+%%     Response = {response, string()}
+%%     Abort = abort
+%% @throws {sasl, next_step, unexpected_element, El}
+%% @doc Extract the response that the initiating entity sent.
+%%
+%% Any response data is Base64-decoded.
+
+next_step(#xmlel{ns = ?NS_SASL, name = 'auth'} = El) ->
+    Mechanism = exmpp_xml:get_attribute_as_list(El, 'mechanism', undefined),
+    case exmpp_utils:strip(exmpp_xml:get_cdata_as_list(El)) of
+        ""      -> {auth, Mechanism, none};
+        "="     -> {auth, Mechanism, ""};
+        Encoded -> {auth, Mechanism, base64:decode_to_string(Encoded)}
+    end;
+next_step(#xmlel{ns = ?NS_SASL, name = 'response'} = El) ->
+    Encoded = exmpp_xml:get_cdata_as_list(El),
+    {response, base64:decode_to_string(Encoded)};
+next_step(#xmlel{ns = ?NS_SASL, name = 'abort'}) ->
+    abort;
+next_step(El) ->
+    throw({sasl, next_step, unexpected_element, El}).
diff -r d551623afde5 deps/exmpp/src/server/exmpp_server_session.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/server/exmpp_server_session.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,89 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> implements the receiving entity
+%% side of the Session Establishment.
+
+-module(exmpp_server_session).
+
+-include("exmpp.hrl").
+
+%% Feature announcement.
+-export([
+	 feature/0
+	]).
+
+%% Session establishment.
+-export([
+	 want_establishment/1,
+	 establish/1,
+	 error/2
+	]).
+
+%% --------------------------------------------------------------------
+%% Feature announcement.
+%% --------------------------------------------------------------------
+
+%% @spec () -> Feature
+%%     Feature = exmpp_xml:xmlel()
+%% @doc Make a feature annoucement child.
+%%
+%% The result should then be passed to {@link exmpp_stream:features/1}.
+
+feature() ->
+    #xmlel{ns = ?NS_SESSION,
+	   name = 'session'
+	  }.
+
+%% --------------------------------------------------------------------
+%% Session establishment.
+%% --------------------------------------------------------------------
+
+%% @spec (IQ) -> bool()
+%%     IQ = exmpp_xml:xmlel()
+%% @doc Tell if the initiating entity wants to establish a session.
+
+want_establishment(IQ) when ?IS_IQ(IQ) ->
+    case exmpp_iq:get_type(IQ) of
+        'set' ->
+            case exmpp_iq:get_request(IQ) of
+                #xmlel{ns = ?NS_SESSION, name = 'session'} -> true;
+                _                                          -> false
+            end;
+        _ ->
+            false
+    end;
+want_establishment(_Stanza) ->
+    false.
+
+%% @spec (IQ) -> Result_IQ
+%%     IQ = exmpp_xml:xmlel()
+%%     Result_IQ = exmpp_xml:xmlel()
+%% @doc Prepare a result IQ to inform the initiating entity that the
+%% session is created.
+
+establish(IQ) when ?IS_IQ(IQ) ->
+    exmpp_iq:result(IQ).
+
+%% @spec (IQ, Condition) -> Error_IQ
+%%     IQ = exmpp_xml:xmlel()
+%%     Condition = atom()
+%%     Error_IQ = exmpp_xml:xmlel()
+%% @doc Prepare an error reply to `IQ'.
+
+error(IQ, Condition) when ?IS_IQ(IQ) ->
+    Error = exmpp_stanza:error(IQ#xmlel.ns, Condition),
+    exmpp_iq:error(IQ, Error).
diff -r d551623afde5 deps/exmpp/src/server/exmpp_server_tls.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/src/server/exmpp_server_tls.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,102 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+%% @author Jean-Sébastien Pédron <js.pedron@meetic-corp.com>
+
+%% @doc
+%% The module <strong>{@module}</strong> implements the receiving entity
+%% side of the TLS feature.
+%%
+%% <p>
+%% Note that it doesn't implement encryption, only feature negotiation
+%% at the XMPP level.
+%% </p>
+
+-module(exmpp_server_tls).
+
+-include("exmpp.hrl").
+
+%% Feature announcement.
+-export([
+	 feature/0,
+	 feature/1
+	]).
+
+%% TLS negotiation.
+-export([
+	 proceed/0,
+	 failure/0
+	]).
+
+%% --------------------------------------------------------------------
+%% Feature announcement.
+%% --------------------------------------------------------------------
+
+%% @spec () -> Feature
+%%     Feature = exmpp_xml:xmlel()
+%% @doc Make a feature announcement child.
+%%
+%% TLS is announced as not required.
+%%
+%% The result should then be passed to {@link exmpp_stream:features/1}.
+%%
+%% @see feature/1.
+
+feature() ->
+    feature(false).
+
+%% @spec (Is_Required) -> Feature
+%%     Is_Required = bool()
+%%     Feature = exmpp_xml:xmlel()
+%% @doc Make a feature announcement child.
+%%
+%% The result should then be passed to {@link exmpp_stream:features/1}.
+
+feature(Is_Required) ->
+    Feature = #xmlel{ns = ?NS_TLS,
+		     name = 'starttls'
+		    },
+    if
+        Is_Required ->
+            Required = #xmlel{
+              ns = ?NS_TLS,
+              name = 'required'
+	     },
+            exmpp_xml:append_child(Feature, Required);
+        true ->
+            Feature
+    end.
+
+%% --------------------------------------------------------------------
+%% TLS negotiation.
+%% --------------------------------------------------------------------
+
+%% @spec () -> Proceed
+%%     Proceed = exmpp_xml:xmlel()
+%% @doc Make an XML element to tell the initiating entity it can proceed
+%% with the TLS handshake.
+
+proceed() ->
+    #xmlel{ns = ?NS_TLS,
+	   name = 'proceed'
+	  }.
+
+%% @spec () -> Failure
+%%     Failure = exmpp_xml:xmlel()
+%% @doc Make an XML element to tell the initiating entity that the TLS
+%% handshake failed.
+
+failure() ->
+    #xmlel{ns = ?NS_TLS,
+	   name = 'failure'
+	  }.
diff -r d551623afde5 deps/exmpp/stamp-h1
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/stamp-h1	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,1 @@
+timestamp for config.h
diff -r d551623afde5 deps/exmpp/testsuite/Makefile
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/testsuite/Makefile	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,478 @@
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
+# testsuite/Makefile.  Generated from Makefile.in by configure.
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+
+srcdir = .
+top_srcdir = ..
+
+pkgdatadir = $(datadir)/exmpp
+pkglibdir = $(libdir)/exmpp
+pkgincludedir = $(includedir)/exmpp
+top_builddir = ..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = /usr/bin/install -c
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = i686-pc-linux-gnu
+host_triplet = i686-pc-linux-gnu
+target_triplet = i686-pc-linux-gnu
+subdir = testsuite
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
+	$(srcdir)/etest.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_compare_version.m4 \
+	$(top_srcdir)/m4/colored-echo.m4 $(top_srcdir)/m4/erlang.m4 \
+	$(top_srcdir)/m4/expat.m4 $(top_srcdir)/m4/openssl.m4 \
+	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/zlib.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES = etest
+SOURCES =
+DIST_SOURCES =
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run aclocal-1.9
+AMDEP_FALSE = #
+AMDEP_TRUE = 
+AMTAR = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run tar
+AR = ar
+AUTOCONF = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run autoconf
+AUTOHEADER = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run autoheader
+AUTOMAKE = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run automake-1.9
+AWK = mawk
+BUILD_COMPAT_FALSE = 
+BUILD_COMPAT_TRUE = #
+CC = gcc -std=gnu99
+CCDEPMODE = depmode=gcc3
+CFLAGS = -g -O2 -Wall -Werror
+COMPAT_MODULES = %
+COMPAT_MODULES_START =  % Compatibility modules disabled:
+CPP = gcc -std=gnu99 -E
+CPPFLAGS = 
+CXXCPP = 
+CYGPATH_W = echo
+DEFS = -DHAVE_CONFIG_H
+DEPDIR = .deps
+ECHO = echo
+ECHO_C = 
+ECHO_N = -n
+ECHO_T = 
+EGREP = /bin/grep -E
+EMKOPTS = debug_info, {d, debug}, report_warnings, {warn_format, 1}, warn_export_vars, warn_shadow_vars, warn_unused_import, {d, 'HAVE_EXPAT'}, {d, 'HAVE_LIBXML2'}, {d, 'HAVE_OPENSSL'}, {d, 'HAVE_ZLIB'}
+ENABLE_DOCUMENTATION_FALSE = 
+ENABLE_DOCUMENTATION_TRUE = #
+ENABLE_EXAMPLES_FALSE = 
+ENABLE_EXAMPLES_TRUE = #
+ENABLE_SMP_SUPPORT_FALSE = #
+ENABLE_SMP_SUPPORT_TRUE = 
+ENABLE_TESTSUITE_FALSE = #
+ENABLE_TESTSUITE_TRUE = 
+ERL = /usr/bin/erl
+ERLANG_ERTS_DIR = /usr/lib/erlang/erts-5.7.2
+ERLANG_ERTS_VER = 5.7.2
+ERLANG_INSTALL_LIB_DIR = /usr/lib/erlang/lib
+ERLANG_INSTALL_LIB_DIR_exmpp = ${ERLANG_INSTALL_LIB_DIR}/exmpp-${VERSION}
+ERLANG_LIB_DIR = /usr/lib/erlang/lib
+ERLANG_LIB_DIR_erl_interface = /usr/lib/erlang/lib/erl_interface-3.6.2
+ERLANG_LIB_DIR_eunit = 
+ERLANG_LIB_VER_erl_interface = 3.6.2
+ERLANG_LIB_VER_eunit = 
+ERLANG_RELEASE = R13B01
+ERLANG_ROOT_DIR = /usr/lib/erlang
+ERLC = /usr/bin/erlc
+ERLCFLAGS = 
+ERL_DRIVER_LDFLAGS = 
+ESCRIPT = /usr/bin/escript
+EXEEXT = 
+EXMPP_BUILD_ARCH = 
+EXMPP_DISTSUFFIX = -r903
+EXMPP_HOST_ARCH = 
+EXMPP_RELEASE_DATE = 
+EXMPP_SVNREV = 903
+EXPAT_CPPFLAGS = 
+EXPAT_LDFLAGS = 
+EXPAT_LIBS = -lexpat
+GREP = /bin/grep
+INSTALL_DATA = ${INSTALL} -m 644
+INSTALL_PROGRAM = ${INSTALL}
+INSTALL_SCRIPT = ${INSTALL}
+INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
+LDFLAGS = 
+LIBOBJS = 
+LIBS = 
+LIBTOOL = $(SHELL) $(top_builddir)/libtool
+LIBXML2_CFLAGS = -I/usr/include/libxml2  
+LIBXML2_LIBS = -lxml2  
+LN_S = ln -s
+LTLIBOBJS = 
+MAKEINFO = ${SHELL} /home/arjan/devel/zotonic/deps/exmpp/ac-aux/missing --run makeinfo
+OBJEXT = o
+OPENSSL_CPPFLAGS = 
+OPENSSL_LDFLAGS = 
+OPENSSL_LIBS = -lssl -lcrypto
+PACKAGE = exmpp
+PACKAGE_BUGREPORT = js.pedron@meetic-corp.com
+PACKAGE_NAME = exmpp
+PACKAGE_STRING = exmpp 0.9.2
+PACKAGE_TARNAME = exmpp
+PACKAGE_VERSION = 0.9.2
+PATH_SEPARATOR = :
+PKG_CONFIG = /usr/bin/pkg-config
+RANLIB = ranlib
+SED = /bin/sed
+SET_MAKE = 
+SHELL = /bin/bash
+STRIP = strip
+VERSION = 0.9.2
+WITH_EXPAT_FALSE = #
+WITH_EXPAT_TRUE = 
+WITH_LIBXML2_FALSE = #
+WITH_LIBXML2_TRUE = 
+WITH_OPENSSL_FALSE = #
+WITH_OPENSSL_TRUE = 
+WITH_ZLIB_FALSE = #
+WITH_ZLIB_TRUE = 
+ZLIB_CPPFLAGS = 
+ZLIB_LDFLAGS = 
+ZLIB_LIBS = -lz
+ac_ct_CC = gcc
+am__fastdepCC_FALSE = #
+am__fastdepCC_TRUE = 
+am__include = include
+am__leading_dot = .
+am__quote = 
+am__tar = ${AMTAR} chof - "$$tardir"
+am__untar = ${AMTAR} xf -
+bindir = ${exec_prefix}/bin
+build = i686-pc-linux-gnu
+build_alias = 
+build_cpu = i686
+build_os = linux-gnu
+build_vendor = pc
+datadir = ${datarootdir}
+datarootdir = ${prefix}/share
+docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
+dvidir = ${docdir}
+exec_prefix = ${prefix}
+exp_ERLANG_INSTALL_LIB_DIR_exmpp = /usr/lib/erlang/lib/exmpp-0.9.2
+host = i686-pc-linux-gnu
+host_alias = 
+host_cpu = i686
+host_os = linux-gnu
+host_vendor = pc
+htmldir = ${docdir}
+includedir = ${prefix}/include
+infodir = ${datarootdir}/info
+install_sh = /home/arjan/devel/zotonic/deps/exmpp/ac-aux/install-sh
+libdir = ${exec_prefix}/lib
+libexecdir = ${exec_prefix}/libexec
+localedir = ${datarootdir}/locale
+localstatedir = ${prefix}/var
+mandir = ${datarootdir}/man
+mkdir_p = mkdir -p --
+oldincludedir = /usr/include
+pdfdir = ${docdir}
+prefix = /usr/local
+program_transform_name = s,x,x,
+psdir = ${docdir}
+sbindir = ${exec_prefix}/sbin
+sharedstatedir = ${prefix}/com
+sysconfdir = ${prefix}/etc
+target = i686-pc-linux-gnu
+target_alias = 
+target_cpu = i686
+target_os = linux-gnu
+target_vendor = pc
+ETEST = $(builddir)/etest
+EUNIT_REPORTER = eunit_tty
+ERL_FILES = $(EUNIT_REPORTER).erl					\
+	    xml_parser.erl						\
+	    xml_attributes.erl						\
+	    jid.erl							\
+	    stanza.erl							\
+	    iq.erl
+
+HRL_FILES = $(top_srcdir)/include/exmpp_xml.hrl
+JUNIT_REPORTS = exmpp-junit-*.xml
+REAL_TESTS = xml_parser xml_attributes jid stanza iq
+TESTS = $(REAL_TESTS)
+EXTRA_DIST = $(ERL_FILES)
+CLEANFILES = $(EUNIT_REPORTER).beam $(TESTS) $(JUNIT_REPORTS) erl_crash.dump
+all: all-am
+
+.SUFFIXES:
+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  testsuite/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --foreign  testsuite/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure:  $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+etest: $(top_builddir)/config.status $(srcdir)/etest.in
+	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+distclean-libtool:
+	-rm -f libtool
+uninstall-info-am:
+tags: TAGS
+TAGS:
+
+ctags: CTAGS
+CTAGS:
+
+
+check-TESTS: $(TESTS)
+	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
+	srcdir=$(srcdir); export srcdir; \
+	list='$(TESTS)'; \
+	if test -n "$$list"; then \
+	  for tst in $$list; do \
+	    if test -f ./$$tst; then dir=./; \
+	    elif test -f $$tst; then dir=; \
+	    else dir="$(srcdir)/"; fi; \
+	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
+	      all=`expr $$all + 1`; \
+	      case " $(XFAIL_TESTS) " in \
+	      *" $$tst "*) \
+		xpass=`expr $$xpass + 1`; \
+		failed=`expr $$failed + 1`; \
+		echo "XPASS: $$tst"; \
+	      ;; \
+	      *) \
+		echo "PASS: $$tst"; \
+	      ;; \
+	      esac; \
+	    elif test $$? -ne 77; then \
+	      all=`expr $$all + 1`; \
+	      case " $(XFAIL_TESTS) " in \
+	      *" $$tst "*) \
+		xfail=`expr $$xfail + 1`; \
+		echo "XFAIL: $$tst"; \
+	      ;; \
+	      *) \
+		failed=`expr $$failed + 1`; \
+		echo "FAIL: $$tst"; \
+	      ;; \
+	      esac; \
+	    else \
+	      skip=`expr $$skip + 1`; \
+	      echo "SKIP: $$tst"; \
+	    fi; \
+	  done; \
+	  if test "$$failed" -eq 0; then \
+	    if test "$$xfail" -eq 0; then \
+	      banner="All $$all tests passed"; \
+	    else \
+	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
+	    fi; \
+	  else \
+	    if test "$$xpass" -eq 0; then \
+	      banner="$$failed of $$all tests failed"; \
+	    else \
+	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
+	    fi; \
+	  fi; \
+	  dashes="$$banner"; \
+	  skipped=""; \
+	  if test "$$skip" -ne 0; then \
+	    skipped="($$skip tests were not run)"; \
+	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
+	      dashes="$$skipped"; \
+	  fi; \
+	  report=""; \
+	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
+	    report="Please report to $(PACKAGE_BUGREPORT)"; \
+	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
+	      dashes="$$report"; \
+	  fi; \
+	  dashes=`echo "$$dashes" | sed s/./=/g`; \
+	  echo "$$dashes"; \
+	  echo "$$banner"; \
+	  test -z "$$skipped" || echo "$$skipped"; \
+	  test -z "$$report" || echo "$$report"; \
+	  echo "$$dashes"; \
+	  test "$$failed" -eq 0; \
+	else :; fi
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
+check: check-am
+all-am: Makefile
+installdirs:
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic clean-libtool mostlyclean-am
+
+distclean: distclean-am
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-libtool
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-generic mostlyclean-libtool
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+.PHONY: all all-am check check-TESTS check-am clean clean-generic \
+	clean-libtool distclean distclean-generic distclean-libtool \
+	distdir dvi dvi-am html html-am info info-am install \
+	install-am install-data install-data-am install-exec \
+	install-exec-am install-info install-info-am install-man \
+	install-strip installcheck installcheck-am installdirs \
+	maintainer-clean maintainer-clean-generic mostlyclean \
+	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
+	uninstall uninstall-am uninstall-info-am
+
+
+$(EUNIT_REPORTER).beam: $(srcdir)/$(EUNIT_REPORTER).erl $(HRL_FILES)
+	@(echo "Recompile: $(srcdir)/$(EUNIT_REPORTER)" &&		\
+	  $(ERLC) -Wall +debug_info +report +warn_export_vars		\
+	  +warn_shadow_vars +warn_unused_import				\
+	  -I $(top_srcdir)/include $(srcdir)/$(EUNIT_REPORTER).erl) || :
+
+$(TESTS): $(EUNIT_REPORTER).beam $(ETEST)
+	@(test ! -e $@ -o $(ETEST) -nt $@ && echo "Create: $@" &&	\
+	  cp $(ETEST) $@ && chmod 755 $@) || :
+
+check-junit: $(EUNIT_REPORTER).beam
+	-rm -f $(JUNIT_REPORTS)
+	$(ETEST) -junit $(TESTS)
+
+.PHONY: check-junit
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff -r d551623afde5 deps/exmpp/testsuite/Makefile.am
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/testsuite/Makefile.am	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,46 @@
+ETEST = $(builddir)/etest
+EUNIT_REPORTER = eunit_tty
+
+ERL_FILES = $(EUNIT_REPORTER).erl					\
+	    xml_parser.erl						\
+	    xml_attributes.erl						\
+	    jid.erl							\
+	    stanza.erl							\
+	    iq.erl
+
+HRL_FILES = $(top_srcdir)/include/exmpp_xml.hrl
+
+JUNIT_REPORTS = exmpp-junit-*.xml
+
+REAL_TESTS =
+
+if WITH_EXPAT
+endif
+
+REAL_TESTS += xml_parser						\
+	      xml_attributes						\
+	      jid							\
+	      stanza							\
+	      iq
+
+TESTS = $(REAL_TESTS)
+
+EXTRA_DIST = $(ERL_FILES)
+
+CLEANFILES = $(EUNIT_REPORTER).beam $(TESTS) $(JUNIT_REPORTS) erl_crash.dump
+
+$(EUNIT_REPORTER).beam: $(srcdir)/$(EUNIT_REPORTER).erl $(HRL_FILES)
+	@(echo "Recompile: $(srcdir)/$(EUNIT_REPORTER)" &&		\
+	  $(ERLC) -Wall +debug_info +report +warn_export_vars		\
+	  +warn_shadow_vars +warn_unused_import				\
+	  -I $(top_srcdir)/include $(srcdir)/$(EUNIT_REPORTER).erl) || :
+
+$(TESTS): $(EUNIT_REPORTER).beam $(ETEST)
+	@(test ! -e $@ -o $(ETEST) -nt $@ && echo "Create: $@" &&	\
+	  cp $(ETEST) $@ && chmod 755 $@) || :
+
+check-junit: $(EUNIT_REPORTER).beam
+	-rm -f $(JUNIT_REPORTS)
+	$(ETEST) -junit $(TESTS)
+
+.PHONY: check-junit
diff -r d551623afde5 deps/exmpp/testsuite/Makefile.in
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/testsuite/Makefile.in	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,478 @@
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = @build@
+host_triplet = @host@
+target_triplet = @target@
+subdir = testsuite
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
+	$(srcdir)/etest.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_compare_version.m4 \
+	$(top_srcdir)/m4/colored-echo.m4 $(top_srcdir)/m4/erlang.m4 \
+	$(top_srcdir)/m4/expat.m4 $(top_srcdir)/m4/openssl.m4 \
+	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/zlib.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES = etest
+SOURCES =
+DIST_SOURCES =
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BUILD_COMPAT_FALSE = @BUILD_COMPAT_FALSE@
+BUILD_COMPAT_TRUE = @BUILD_COMPAT_TRUE@
+CC = @CC@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+COMPAT_MODULES = @COMPAT_MODULES@
+COMPAT_MODULES_START = @COMPAT_MODULES_START@
+CPP = @CPP@
+CPPFLAGS = @CPPFLAGS@
+CXXCPP = @CXXCPP@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+ECHO = @ECHO@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EGREP = @EGREP@
+EMKOPTS = @EMKOPTS@
+ENABLE_DOCUMENTATION_FALSE = @ENABLE_DOCUMENTATION_FALSE@
+ENABLE_DOCUMENTATION_TRUE = @ENABLE_DOCUMENTATION_TRUE@
+ENABLE_EXAMPLES_FALSE = @ENABLE_EXAMPLES_FALSE@
+ENABLE_EXAMPLES_TRUE = @ENABLE_EXAMPLES_TRUE@
+ENABLE_SMP_SUPPORT_FALSE = @ENABLE_SMP_SUPPORT_FALSE@
+ENABLE_SMP_SUPPORT_TRUE = @ENABLE_SMP_SUPPORT_TRUE@
+ENABLE_TESTSUITE_FALSE = @ENABLE_TESTSUITE_FALSE@
+ENABLE_TESTSUITE_TRUE = @ENABLE_TESTSUITE_TRUE@
+ERL = @ERL@
+ERLANG_ERTS_DIR = @ERLANG_ERTS_DIR@
+ERLANG_ERTS_VER = @ERLANG_ERTS_VER@
+ERLANG_INSTALL_LIB_DIR = @ERLANG_INSTALL_LIB_DIR@
+ERLANG_INSTALL_LIB_DIR_exmpp = @ERLANG_INSTALL_LIB_DIR_exmpp@
+ERLANG_LIB_DIR = @ERLANG_LIB_DIR@
+ERLANG_LIB_DIR_erl_interface = @ERLANG_LIB_DIR_erl_interface@
+ERLANG_LIB_DIR_eunit = @ERLANG_LIB_DIR_eunit@
+ERLANG_LIB_VER_erl_interface = @ERLANG_LIB_VER_erl_interface@
+ERLANG_LIB_VER_eunit = @ERLANG_LIB_VER_eunit@
+ERLANG_RELEASE = @ERLANG_RELEASE@
+ERLANG_ROOT_DIR = @ERLANG_ROOT_DIR@
+ERLC = @ERLC@
+ERLCFLAGS = @ERLCFLAGS@
+ERL_DRIVER_LDFLAGS = @ERL_DRIVER_LDFLAGS@
+ESCRIPT = @ESCRIPT@
+EXEEXT = @EXEEXT@
+EXMPP_BUILD_ARCH = @EXMPP_BUILD_ARCH@
+EXMPP_DISTSUFFIX = @EXMPP_DISTSUFFIX@
+EXMPP_HOST_ARCH = @EXMPP_HOST_ARCH@
+EXMPP_RELEASE_DATE = @EXMPP_RELEASE_DATE@
+EXMPP_SVNREV = @EXMPP_SVNREV@
+EXPAT_CPPFLAGS = @EXPAT_CPPFLAGS@
+EXPAT_LDFLAGS = @EXPAT_LDFLAGS@
+EXPAT_LIBS = @EXPAT_LIBS@
+GREP = @GREP@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LIBTOOL = @LIBTOOL@
+LIBXML2_CFLAGS = @LIBXML2_CFLAGS@
+LIBXML2_LIBS = @LIBXML2_LIBS@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAKEINFO = @MAKEINFO@
+OBJEXT = @OBJEXT@
+OPENSSL_CPPFLAGS = @OPENSSL_CPPFLAGS@
+OPENSSL_LDFLAGS = @OPENSSL_LDFLAGS@
+OPENSSL_LIBS = @OPENSSL_LIBS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+PKG_CONFIG = @PKG_CONFIG@
+RANLIB = @RANLIB@
+SED = @SED@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+WITH_EXPAT_FALSE = @WITH_EXPAT_FALSE@
+WITH_EXPAT_TRUE = @WITH_EXPAT_TRUE@
+WITH_LIBXML2_FALSE = @WITH_LIBXML2_FALSE@
+WITH_LIBXML2_TRUE = @WITH_LIBXML2_TRUE@
+WITH_OPENSSL_FALSE = @WITH_OPENSSL_FALSE@
+WITH_OPENSSL_TRUE = @WITH_OPENSSL_TRUE@
+WITH_ZLIB_FALSE = @WITH_ZLIB_FALSE@
+WITH_ZLIB_TRUE = @WITH_ZLIB_TRUE@
+ZLIB_CPPFLAGS = @ZLIB_CPPFLAGS@
+ZLIB_LDFLAGS = @ZLIB_LDFLAGS@
+ZLIB_LIBS = @ZLIB_LIBS@
+ac_ct_CC = @ac_ct_CC@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+am__tar = @am__tar@
+am__untar = @am__untar@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+datarootdir = @datarootdir@
+docdir = @docdir@
+dvidir = @dvidir@
+exec_prefix = @exec_prefix@
+exp_ERLANG_INSTALL_LIB_DIR_exmpp = @exp_ERLANG_INSTALL_LIB_DIR_exmpp@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+htmldir = @htmldir@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localedir = @localedir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+pdfdir = @pdfdir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+psdir = @psdir@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target = @target@
+target_alias = @target_alias@
+target_cpu = @target_cpu@
+target_os = @target_os@
+target_vendor = @target_vendor@
+ETEST = $(builddir)/etest
+EUNIT_REPORTER = eunit_tty
+ERL_FILES = $(EUNIT_REPORTER).erl					\
+	    xml_parser.erl						\
+	    xml_attributes.erl						\
+	    jid.erl							\
+	    stanza.erl							\
+	    iq.erl
+
+HRL_FILES = $(top_srcdir)/include/exmpp_xml.hrl
+JUNIT_REPORTS = exmpp-junit-*.xml
+REAL_TESTS = xml_parser xml_attributes jid stanza iq
+TESTS = $(REAL_TESTS)
+EXTRA_DIST = $(ERL_FILES)
+CLEANFILES = $(EUNIT_REPORTER).beam $(TESTS) $(JUNIT_REPORTS) erl_crash.dump
+all: all-am
+
+.SUFFIXES:
+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  testsuite/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --foreign  testsuite/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure:  $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+etest: $(top_builddir)/config.status $(srcdir)/etest.in
+	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+distclean-libtool:
+	-rm -f libtool
+uninstall-info-am:
+tags: TAGS
+TAGS:
+
+ctags: CTAGS
+CTAGS:
+
+
+check-TESTS: $(TESTS)
+	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
+	srcdir=$(srcdir); export srcdir; \
+	list='$(TESTS)'; \
+	if test -n "$$list"; then \
+	  for tst in $$list; do \
+	    if test -f ./$$tst; then dir=./; \
+	    elif test -f $$tst; then dir=; \
+	    else dir="$(srcdir)/"; fi; \
+	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
+	      all=`expr $$all + 1`; \
+	      case " $(XFAIL_TESTS) " in \
+	      *" $$tst "*) \
+		xpass=`expr $$xpass + 1`; \
+		failed=`expr $$failed + 1`; \
+		echo "XPASS: $$tst"; \
+	      ;; \
+	      *) \
+		echo "PASS: $$tst"; \
+	      ;; \
+	      esac; \
+	    elif test $$? -ne 77; then \
+	      all=`expr $$all + 1`; \
+	      case " $(XFAIL_TESTS) " in \
+	      *" $$tst "*) \
+		xfail=`expr $$xfail + 1`; \
+		echo "XFAIL: $$tst"; \
+	      ;; \
+	      *) \
+		failed=`expr $$failed + 1`; \
+		echo "FAIL: $$tst"; \
+	      ;; \
+	      esac; \
+	    else \
+	      skip=`expr $$skip + 1`; \
+	      echo "SKIP: $$tst"; \
+	    fi; \
+	  done; \
+	  if test "$$failed" -eq 0; then \
+	    if test "$$xfail" -eq 0; then \
+	      banner="All $$all tests passed"; \
+	    else \
+	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
+	    fi; \
+	  else \
+	    if test "$$xpass" -eq 0; then \
+	      banner="$$failed of $$all tests failed"; \
+	    else \
+	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
+	    fi; \
+	  fi; \
+	  dashes="$$banner"; \
+	  skipped=""; \
+	  if test "$$skip" -ne 0; then \
+	    skipped="($$skip tests were not run)"; \
+	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
+	      dashes="$$skipped"; \
+	  fi; \
+	  report=""; \
+	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
+	    report="Please report to $(PACKAGE_BUGREPORT)"; \
+	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
+	      dashes="$$report"; \
+	  fi; \
+	  dashes=`echo "$$dashes" | sed s/./=/g`; \
+	  echo "$$dashes"; \
+	  echo "$$banner"; \
+	  test -z "$$skipped" || echo "$$skipped"; \
+	  test -z "$$report" || echo "$$report"; \
+	  echo "$$dashes"; \
+	  test "$$failed" -eq 0; \
+	else :; fi
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
+check: check-am
+all-am: Makefile
+installdirs:
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic clean-libtool mostlyclean-am
+
+distclean: distclean-am
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-libtool
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-generic mostlyclean-libtool
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+.PHONY: all all-am check check-TESTS check-am clean clean-generic \
+	clean-libtool distclean distclean-generic distclean-libtool \
+	distdir dvi dvi-am html html-am info info-am install \
+	install-am install-data install-data-am install-exec \
+	install-exec-am install-info install-info-am install-man \
+	install-strip installcheck installcheck-am installdirs \
+	maintainer-clean maintainer-clean-generic mostlyclean \
+	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
+	uninstall uninstall-am uninstall-info-am
+
+
+$(EUNIT_REPORTER).beam: $(srcdir)/$(EUNIT_REPORTER).erl $(HRL_FILES)
+	@(echo "Recompile: $(srcdir)/$(EUNIT_REPORTER)" &&		\
+	  $(ERLC) -Wall +debug_info +report +warn_export_vars		\
+	  +warn_shadow_vars +warn_unused_import				\
+	  -I $(top_srcdir)/include $(srcdir)/$(EUNIT_REPORTER).erl) || :
+
+$(TESTS): $(EUNIT_REPORTER).beam $(ETEST)
+	@(test ! -e $@ -o $(ETEST) -nt $@ && echo "Create: $@" &&	\
+	  cp $(ETEST) $@ && chmod 755 $@) || :
+
+check-junit: $(EUNIT_REPORTER).beam
+	-rm -f $(JUNIT_REPORTS)
+	$(ETEST) -junit $(TESTS)
+
+.PHONY: check-junit
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff -r d551623afde5 deps/exmpp/testsuite/etest
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/testsuite/etest	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,194 @@
+#!/usr/bin/escript
+
+%% @doc
+%% When this script is called without arguments, it'll run the EUnit
+%% test based on the script name. Our homebrew eunit_tty will not print
+%% anything but will indicate if the test was successful or not. The
+%% exit code is based on that.
+
+main([]) ->
+    case filename:basename(escript:script_name()) of
+        "etest" -> main(usage);
+        _       -> main([filename:join([".", escript:script_name()])])
+    end;
+
+%% @doc
+%% When called with "junit" as the first argument, following arguments
+%% are EUnit test names. They are all executed and a JUnit-compatible
+%% XML file is written by our eunit_tty. This always exits with 0.
+
+main(["-junit" | Tests]) ->
+    code:add_patha(filename:join(["..", "ebin"])),
+    Test_Set = make_junit_testset(Tests, [debug_info, {d, debug}, report_warnings, {warn_format, 1}, warn_export_vars, warn_shadow_vars, warn_unused_import, {d, 'HAVE_EXPAT'}, {d, 'HAVE_LIBXML2'}, {d, 'HAVE_OPENSSL'}, {d, 'HAVE_ZLIB'}]),
+    Ret = eunit:test(Test_Set, [{mode, junit}]),
+    stop(Ret);
+
+%% @doc
+%% A single argument is considered as the test name. See main([]).
+
+main([Test]) ->
+    code:add_patha(filename:join(["..", "ebin"])),
+    Ret = run_test(Test, [debug_info, {d, debug}, report_warnings, {warn_format, 1}, warn_export_vars, warn_shadow_vars, warn_unused_import, {d, 'HAVE_EXPAT'}, {d, 'HAVE_LIBXML2'}, {d, 'HAVE_OPENSSL'}, {d, 'HAVE_ZLIB'}]),
+    stop(Ret);
+
+%% @doc
+%% In all other cases, we print the usage.
+
+main(Bad_Args) ->
+    usage(filename:basename(escript:script_name())),
+    case Bad_Args of
+        usage -> stop(ok);
+        _     -> stop(error)
+    end.
+
+stop(ok) ->
+    halt(0);
+stop(skipped) ->
+    halt(77);
+stop(error) ->
+    halt(1);
+stop(Other) ->
+    io:format("Bad return value from eunit_tty: ~p~n", [Other]),
+    halt(1).
+
+% --------------------------------------------------------------------
+% Single test run.
+% --------------------------------------------------------------------
+
+%% @spec (Test, Compiler_Options) -> ok | skipped | error
+%%     Test = string()
+%%     Compiler_Options = list()
+%% @doc Compile and run a single EUnit test.
+
+run_test(Test, Compiler_Options) ->
+    case load_test(Test, Compiler_Options) of
+        {error, compile, Errors, Warnings} ->
+            print_compile_errors(Test, Errors, Warnings),
+            error;
+        {error, load, Module, Reason} ->
+            print_load_error(Test, Module, Reason),
+            error;
+        {ok, Module, []} ->
+            Module:test();
+        {ok, _Module, Warnings} ->
+            print_compile_errors(Test, [], Warnings),
+            error
+    end.
+
+%% @spec (Test, Compiler_Options) -> Success | Error
+%%     Test = string()
+%%     Compiler_Options = list()
+%%     Success = {ok, Module, Warnings}
+%%     Module = atom()
+%%     Error = {error, compile, Errors, Warnings} |
+%%             {error, load, Module, Reason}
+%%     Errors = list()
+%%     Warnings = list()
+%%     Reason = Term()
+%% @doc Compile and load the module from `Test'.
+%%
+%% Options `binary', `debug_info' and `return' are prepended to
+%% `Compiler_Options'.
+
+load_test(Test, Compiler_Options) ->
+    Default_Options = [
+      binary,
+      debug_info,
+      return,
+      {i, "../include"},
+      {i, "../include"}
+    ],
+    Compiler_Options1 = Compiler_Options --
+        [report, report_errors, report_warnings],
+    Options = Default_Options ++ Compiler_Options1,
+    case compile:file(Test, Options) of
+        {ok, Module, Binary, Warnings} ->
+            case code:load_binary(Module, Test, Binary) of
+                {module, Module} ->
+                    {ok, Module, Warnings};
+                {error, Reason} ->
+                    {error, load, Module, Reason}
+            end;
+        {error, Errors, Warnings} ->
+            {error, compile, Errors, Warnings}
+    end.
+
+% --------------------------------------------------------------------
+% JUnit mode.
+% --------------------------------------------------------------------
+
+make_junit_testset(Tests, Compiler_Options) ->
+    make_junit_testset2(Tests, Compiler_Options, []).
+
+make_junit_testset2([Test | Rest], Compiler_Options, Test_Set) ->
+    % We compile and load the test module now but the return value is
+    % handled by a generator.
+    Compile_Ret = load_test(filename:join([".", Test]),
+      Compiler_Options),
+    % The generator will either return the Module name or return a dummy
+    % test that always throw an exception to report the compile/load
+    % errors.
+    Generator = fun() ->
+        case Compile_Ret of
+            {ok, Module, []} ->
+                Module;
+            _ ->
+                {Test, fun() -> raise_error(Test, Compile_Ret) end}
+        end
+    end,
+    make_junit_testset2(Rest, Compiler_Options,
+      [{generator, Generator} | Test_Set]);
+make_junit_testset2([], _Compiler_Options, Test_Set) ->
+    lists:reverse(Test_Set).
+
+% --------------------------------------------------------------------
+% Error reporting.
+% --------------------------------------------------------------------
+
+print_compile_errors(Test, [{File, Error_Infos} | Rest], Warnings) ->
+    print_error_infos(File, Error_Infos),
+    print_compile_errors(Test, Rest, Warnings);
+print_compile_errors(Test, [], [{File, Warning_Infos} | Rest]) ->
+    print_warning_infos(File, Warning_Infos),
+    print_compile_errors(Test, [], Rest);
+print_compile_errors(_Test, [], []) ->
+    ok.
+
+print_error_infos(File, [{Line, IO_Module, Desc} | Rest]) ->
+    io:format("~s:~p: ~s~n",
+      [File, Line, IO_Module:format_error(Desc)]),
+    print_error_infos(File, Rest);
+print_error_infos(_File, []) ->
+    ok.
+
+print_warning_infos(File, [{Line, IO_Module, Desc} | Rest]) ->
+    io:format("~s:~p: Warning: ~s~n",
+      [File, Line, IO_Module:format_warning(Desc)]),
+    print_warning_infos(File, Rest);
+print_warning_infos(_File, []) ->
+    ok.
+
+print_load_error(Test, Module, Reason) ->
+    io:format("Can't load module ~s (~s): ~p~n",
+      [Module, Test ++ ".erl", Reason]).
+
+raise_error(Test, Error) ->
+    throw({load_error, Test, Error}).
+
+% --------------------------------------------------------------------
+% Usage.
+% --------------------------------------------------------------------
+
+version() ->
+    io:format("~s testsuite - ~s~n",
+      ["exmpp 0.9.2", "$Revision: 805 $"]).
+
+usage(Prog_Name) ->
+    version(),
+    io:format(
+      "~n"
+      "Usage: ~s <TESTNAME>~n"
+      "       ~s -junit [<TESTNAME>, ...]~n",
+      [Prog_Name, Prog_Name]).
+
+% vim:ft=erlang:
diff -r d551623afde5 deps/exmpp/testsuite/etest.in
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/testsuite/etest.in	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,194 @@
+#!@ESCRIPT@
+
+%% @doc
+%% When this script is called without arguments, it'll run the EUnit
+%% test based on the script name. Our homebrew eunit_tty will not print
+%% anything but will indicate if the test was successful or not. The
+%% exit code is based on that.
+
+main([]) ->
+    case filename:basename(escript:script_name()) of
+        "etest" -> main(usage);
+        _       -> main([filename:join(["@srcdir@", escript:script_name()])])
+    end;
+
+%% @doc
+%% When called with "junit" as the first argument, following arguments
+%% are EUnit test names. They are all executed and a JUnit-compatible
+%% XML file is written by our eunit_tty. This always exits with 0.
+
+main(["-junit" | Tests]) ->
+    code:add_patha(filename:join(["@top_builddir@", "ebin"])),
+    Test_Set = make_junit_testset(Tests, [@EMKOPTS@]),
+    Ret = eunit:test(Test_Set, [{mode, junit}]),
+    stop(Ret);
+
+%% @doc
+%% A single argument is considered as the test name. See main([]).
+
+main([Test]) ->
+    code:add_patha(filename:join(["@top_builddir@", "ebin"])),
+    Ret = run_test(Test, [@EMKOPTS@]),
+    stop(Ret);
+
+%% @doc
+%% In all other cases, we print the usage.
+
+main(Bad_Args) ->
+    usage(filename:basename(escript:script_name())),
+    case Bad_Args of
+        usage -> stop(ok);
+        _     -> stop(error)
+    end.
+
+stop(ok) ->
+    halt(0);
+stop(skipped) ->
+    halt(77);
+stop(error) ->
+    halt(1);
+stop(Other) ->
+    io:format("Bad return value from eunit_tty: ~p~n", [Other]),
+    halt(1).
+
+% --------------------------------------------------------------------
+% Single test run.
+% --------------------------------------------------------------------
+
+%% @spec (Test, Compiler_Options) -> ok | skipped | error
+%%     Test = string()
+%%     Compiler_Options = list()
+%% @doc Compile and run a single EUnit test.
+
+run_test(Test, Compiler_Options) ->
+    case load_test(Test, Compiler_Options) of
+        {error, compile, Errors, Warnings} ->
+            print_compile_errors(Test, Errors, Warnings),
+            error;
+        {error, load, Module, Reason} ->
+            print_load_error(Test, Module, Reason),
+            error;
+        {ok, Module, []} ->
+            Module:test();
+        {ok, _Module, Warnings} ->
+            print_compile_errors(Test, [], Warnings),
+            error
+    end.
+
+%% @spec (Test, Compiler_Options) -> Success | Error
+%%     Test = string()
+%%     Compiler_Options = list()
+%%     Success = {ok, Module, Warnings}
+%%     Module = atom()
+%%     Error = {error, compile, Errors, Warnings} |
+%%             {error, load, Module, Reason}
+%%     Errors = list()
+%%     Warnings = list()
+%%     Reason = Term()
+%% @doc Compile and load the module from `Test'.
+%%
+%% Options `binary', `debug_info' and `return' are prepended to
+%% `Compiler_Options'.
+
+load_test(Test, Compiler_Options) ->
+    Default_Options = [
+      binary,
+      debug_info,
+      return,
+      {i, "@top_srcdir@/include"},
+      {i, "@top_builddir@/include"}
+    ],
+    Compiler_Options1 = Compiler_Options --
+        [report, report_errors, report_warnings],
+    Options = Default_Options ++ Compiler_Options1,
+    case compile:file(Test, Options) of
+        {ok, Module, Binary, Warnings} ->
+            case code:load_binary(Module, Test, Binary) of
+                {module, Module} ->
+                    {ok, Module, Warnings};
+                {error, Reason} ->
+                    {error, load, Module, Reason}
+            end;
+        {error, Errors, Warnings} ->
+            {error, compile, Errors, Warnings}
+    end.
+
+% --------------------------------------------------------------------
+% JUnit mode.
+% --------------------------------------------------------------------
+
+make_junit_testset(Tests, Compiler_Options) ->
+    make_junit_testset2(Tests, Compiler_Options, []).
+
+make_junit_testset2([Test | Rest], Compiler_Options, Test_Set) ->
+    % We compile and load the test module now but the return value is
+    % handled by a generator.
+    Compile_Ret = load_test(filename:join(["@srcdir@", Test]),
+      Compiler_Options),
+    % The generator will either return the Module name or return a dummy
+    % test that always throw an exception to report the compile/load
+    % errors.
+    Generator = fun() ->
+        case Compile_Ret of
+            {ok, Module, []} ->
+                Module;
+            _ ->
+                {Test, fun() -> raise_error(Test, Compile_Ret) end}
+        end
+    end,
+    make_junit_testset2(Rest, Compiler_Options,
+      [{generator, Generator} | Test_Set]);
+make_junit_testset2([], _Compiler_Options, Test_Set) ->
+    lists:reverse(Test_Set).
+
+% --------------------------------------------------------------------
+% Error reporting.
+% --------------------------------------------------------------------
+
+print_compile_errors(Test, [{File, Error_Infos} | Rest], Warnings) ->
+    print_error_infos(File, Error_Infos),
+    print_compile_errors(Test, Rest, Warnings);
+print_compile_errors(Test, [], [{File, Warning_Infos} | Rest]) ->
+    print_warning_infos(File, Warning_Infos),
+    print_compile_errors(Test, [], Rest);
+print_compile_errors(_Test, [], []) ->
+    ok.
+
+print_error_infos(File, [{Line, IO_Module, Desc} | Rest]) ->
+    io:format("~s:~p: ~s~n",
+      [File, Line, IO_Module:format_error(Desc)]),
+    print_error_infos(File, Rest);
+print_error_infos(_File, []) ->
+    ok.
+
+print_warning_infos(File, [{Line, IO_Module, Desc} | Rest]) ->
+    io:format("~s:~p: Warning: ~s~n",
+      [File, Line, IO_Module:format_warning(Desc)]),
+    print_warning_infos(File, Rest);
+print_warning_infos(_File, []) ->
+    ok.
+
+print_load_error(Test, Module, Reason) ->
+    io:format("Can't load module ~s (~s): ~p~n",
+      [Module, Test ++ ".erl", Reason]).
+
+raise_error(Test, Error) ->
+    throw({load_error, Test, Error}).
+
+% --------------------------------------------------------------------
+% Usage.
+% --------------------------------------------------------------------
+
+version() ->
+    io:format("~s testsuite - ~s~n",
+      ["@PACKAGE_STRING@", "$Revision: 805 $"]).
+
+usage(Prog_Name) ->
+    version(),
+    io:format(
+      "~n"
+      "Usage: ~s <TESTNAME>~n"
+      "       ~s -junit [<TESTNAME>, ...]~n",
+      [Prog_Name, Prog_Name]).
+
+% vim:ft=erlang:
diff -r d551623afde5 deps/exmpp/testsuite/eunit_tty.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/testsuite/eunit_tty.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,436 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+-module(eunit_tty).
+
+-include("exmpp_xml.hrl").
+
+-export([
+  start/1,
+  start/2
+]).
+
+-record(state, {
+  mode,
+  succeed = 0,
+  fail = 0,
+  abort = 0,
+  skip = 0,
+  data,
+  parent_state
+}).
+
+% --------------------------------------------------------------------
+% Initialization.
+% --------------------------------------------------------------------
+
+%% @spec (List) -> Pid
+%%     List = eunit_data:testInfoList()
+%%     Pid = pid()
+%% @doc Start the reporter.
+
+start(List) ->
+    start(List, []).
+
+%% @spec (List, Options) -> Pid
+%%     List = eunit_data:testInfoList()
+%%     Options = [Option]
+%%     Option = {mode, junit}
+%%     Pid = pid()
+%% @doc Start the reporter.
+%%
+%% With option `junit', the reporter will write JUnit XML file(s).
+
+start(List, Options) ->
+    St = #state{mode = proplists:get_value(mode, Options, single)},
+    Id = [],
+    spawn(fun () -> init(Id, List, St) end).
+
+init(Id, List, St0) ->
+    receive
+	{start, Reference} ->
+	    St = group_begin(Id, "", List, St0),
+	    receive
+		{stop, Reference, Reply_To} ->
+		    Result = case St0#state.mode of
+                        single ->
+                            if
+                                St#state.fail == 0,
+                                St#state.abort == 0,
+                                St#state.succeed > 0 ->
+                                    ok;
+                                St#state.fail == 0,
+                                St#state.abort == 0,
+                                St#state.succeed == 0 ->
+                                    skipped;
+                                true ->
+                                    error
+                            end;
+                        junit ->
+                            ok;
+                        _ ->
+                            error
+                    end,
+		    Reply_To ! {result, Reference, Result},
+		    ok
+            end
+    end.
+
+% --------------------------------------------------------------------
+% Group handling.
+% --------------------------------------------------------------------
+
+group_begin(Id, Desc, Es, St) ->
+    St0 = save_parent_state(St),
+    St1 = print_group_start(St0, Id, Desc),
+    Final_St = case wait(Id, St1) of
+	{{progress, 'begin', group}, St2} ->
+	    group_end(Id, Desc, Es, tests(Es, St2));
+	{{cancel, Reason}, St2} ->
+            Size = eunit_data:list_size(Es),
+	    St3 = St2#state{skip = St2#state.skip + Size},
+            print_group_cancel(St3, Id, Desc, Reason)
+    end,
+    restore_parent_state(Final_St).
+
+group_end(Id, Desc, Es, St) ->
+    case wait(Id, St) of
+        {{progress, 'end', {Count, Time, Output}}, St1} ->
+            if
+                Id /= [] ->
+                    print_group_end(St1, Id, Desc, Count, Time, Output);
+                true ->
+                    print_build_errors(St1, Id, Desc, Count, Time, Output)
+            end;
+        {{cancel, undefined}, St1} ->
+            St1;  % "skipped" message is not interesting here.
+        {{cancel, Reason}, St1} ->
+            Size = eunit_data:list_size(Es),
+	    St2 = St1#state{abort = St1#state.abort + Size},
+            print_group_cancel(St2, Id, Desc, Reason)
+    end.
+
+% --------------------------------------------------------------------
+% Test handling.
+% --------------------------------------------------------------------
+
+test_begin(Id, Desc, {Module, Name}, St) ->
+    test_begin(Id, Desc, {Module, Name, 0}, St);
+test_begin(Id, Desc, {Module, Name, Line}, St) ->
+    Text = format_test_name(Module, Name, Line, Desc),
+    St1 = print_test_start(St, Id, Text),
+    case wait(Id, St1) of
+	{{progress, 'begin', test}, St2} ->
+            % Test in progress.
+	    test_end(Id, Text, St2);
+	{{cancel, Reason}, St2} ->
+            % Test skipped.
+            St3 = St2#state{skip = St2#state.skip + 1},
+            print_test_skip(St3, Id, Text, Reason)
+    end.
+
+test_end(Id, Text, St) ->
+    case wait(Id, St) of
+	{{progress, 'end', {Result, Time, Output}}, St1} ->
+            % Test done.
+            if
+                Result == ok ->
+                    St2 = St1#state{succeed = St1#state.succeed + 1},
+                    print_test_success(St2, Id, Text, Time, Output);
+                true ->
+                    St2 = St1#state{fail = St1#state.fail + 1},
+                    print_test_error(St2, Id, Text, Result, Time, Output)
+            end;
+	{{cancel, Reason}, St1} ->
+            % Test aborted.
+	    St2 = St1#state{abort = St1#state.abort + 1},
+            print_test_abort(St2, Id, Text, Reason)
+    end.
+
+% --------------------------------------------------------------------
+% Mode-dependent reporting functions.
+% --------------------------------------------------------------------
+
+print_group_start(#state{mode = junit} = St, _Id, _Desc) ->
+    St#state{data = []};
+print_group_start(St, _Id, _Desc) ->
+    St.
+
+print_group_end(#state{mode = junit, data = []} = St, _Id, _Desc,
+  _Count, _Time, _Output) ->
+    St;
+print_group_end(#state{mode = junit} = St, _Id, "", _Count, _Time, _Output) ->
+    Parent_St = St#state.parent_state,
+    Parent_St1 = Parent_St#state{
+      succeed = Parent_St#state.succeed + St#state.succeed,
+      fail = Parent_St#state.fail + St#state.fail,
+      abort = Parent_St#state.abort + St#state.abort,
+      skip = Parent_St#state.skip + St#state.skip,
+      data = lists:flatten([St#state.data, Parent_St#state.data])
+    },
+    St#state{parent_state = Parent_St1};
+print_group_end(#state{mode = junit} = St, Id, Desc, _Count, Time, _Output) ->
+    Attrs0 = exmpp_xml:set_attribute_in_list([], 'name', Desc),
+    Attrs1 = exmpp_xml:set_attribute_in_list(Attrs0, 'time',
+      io_lib:format("~.6f", [Time / 1000])),
+    Attrs2 = exmpp_xml:set_attribute_in_list(Attrs1, 'tests',
+      St#state.succeed + St#state.fail + St#state.abort + St#state.skip),
+    Attrs3 = exmpp_xml:set_attribute_in_list(Attrs2, 'errors',
+      St#state.fail),
+    Attrs4 = exmpp_xml:set_attribute_in_list(Attrs3, 'failures',
+      St#state.abort),
+    Attrs5 = exmpp_xml:set_attribute_in_list(Attrs4, 'skipped',
+      St#state.skip),
+    Testsuite = exmpp_xml:set_children(
+      #xmlel{name = 'testsuite', attrs = Attrs5},
+      lists:reverse(St#state.data)
+    ),
+    % Write XML file.
+    Filename = junit_report_filename(Id, Desc),
+    Content = exmpp_xml:document_to_list(
+      exmpp_xml:indent_document(Testsuite, <<"  ">>)),
+    file:write_file(Filename, Content),
+    St;
+print_group_end(St, _Id, _Desc, _Count, _Time, _Output) ->
+    St.
+
+print_group_cancel(St, [], _Desc, _Reason) ->
+    St;
+print_group_cancel(St, _Id, Desc, Reason) ->
+    io:format("~s:~n~p~n", [Desc, Reason]),
+    St.
+
+print_build_errors(#state{mode = junit, data = []} = St, _Id, _Desc,
+  _Count, _Time, _Output) ->
+    St;
+print_build_errors(#state{mode = junit} = St, _Id, Desc,
+  _Count, Time, _Output) ->
+    Attrs0 = exmpp_xml:set_attribute_in_list([], 'name', "Build errors"),
+    Attrs1 = exmpp_xml:set_attribute_in_list(Attrs0, 'time',
+      io_lib:format("~.6f", [Time / 1000])),
+    Attrs2 = exmpp_xml:set_attribute_in_list(Attrs1, 'tests',
+      St#state.succeed + St#state.fail + St#state.abort + St#state.skip),
+    Attrs3 = exmpp_xml:set_attribute_in_list(Attrs2, 'errors',
+      St#state.fail),
+    Attrs4 = exmpp_xml:set_attribute_in_list(Attrs3, 'failures',
+      St#state.abort),
+    Attrs5 = exmpp_xml:set_attribute_in_list(Attrs4, 'skipped',
+      St#state.skip),
+    Testsuite = exmpp_xml:set_children(
+      #xmlel{name = 'testsuite', attrs = Attrs5},
+      lists:reverse(St#state.data)
+    ),
+    % Write XML file.
+    Filename = junit_report_filename(build, Desc),
+    Content = exmpp_xml:document_to_list(
+      exmpp_xml:indent_document(Testsuite, <<"  ">>)),
+    file:write_file(Filename, Content),
+    St;
+print_build_errors(St, _Id, _Desc, _Count, _Time, _Output) ->
+    St.
+
+print_test_start(St, _Id, _Desc) ->
+    St.
+
+print_test_success(#state{mode = junit, data = XML} = St, _Id, Desc, Time,
+  _Output) ->
+    Attrs0 = exmpp_xml:set_attribute_in_list([], 'name', Desc),
+    Attrs1 = exmpp_xml:set_attribute_in_list(Attrs0, 'time',
+      io_lib:format("~.6f", [Time / 1000])),
+    Testcase = #xmlel{name = 'testcase', attrs = Attrs1},
+    New_XML = [Testcase | XML],
+    St#state{data = New_XML};
+print_test_success(St, _Id, _Desc, _Time, _Output) ->
+    St.
+
+print_test_skip(#state{mode = junit, data = XML} = St, _Id, Desc, Reason) ->
+    Attrs0 = exmpp_xml:set_attribute_in_list([], 'name', Desc),
+    Skipped = exmpp_xml:set_cdata(#xmlel{name = 'skipped'},
+      lists:flatten(io_lib:format("~p", [Reason]))),
+    Testcase = exmpp_xml:set_children(
+      #xmlel{name = 'testcase', attrs = Attrs0},
+      [Skipped]
+    ),
+    New_XML = [Testcase | XML],
+    St#state{data = New_XML};
+print_test_skip(St, _Id, Desc, Reason) ->
+    io:format("~n~s (skip):~n~s~n", [Desc, format_test_error(Reason)]),
+    St.
+
+print_test_error(#state{mode = junit, data = XML} = St, _Id, Desc,
+  Result, Time, _Output) ->
+    Attrs0 = exmpp_xml:set_attribute_in_list([], 'name', Desc),
+    Attrs1 = exmpp_xml:set_attribute_in_list(Attrs0, 'time',
+      io_lib:format("~.6f", [Time / 1000])),
+    Error = exmpp_xml:set_cdata(#xmlel{name = 'error'},
+      format_test_error(Result)),
+    Testcase = exmpp_xml:set_children(
+      #xmlel{name = 'testcase', attrs = Attrs1},
+      [Error]
+    ),
+    New_XML = [Testcase | XML],
+    St#state{data = New_XML};
+print_test_error(St, _Id, Desc, Result, _Time, _Output) ->
+    io:format("~n~s:~n~s~n", [Desc, format_test_error(Result)]),
+    St.
+
+print_test_abort(#state{mode = junit, data = XML} = St, _Id, Desc, Reason) ->
+    Attrs0 = exmpp_xml:set_attribute_in_list([], 'name', Desc),
+    Failure = exmpp_xml:set_cdata(#xmlel{name = 'failure'},
+      lists:flatten(io_lib:format("~p", [Reason]))),
+    Testcase = exmpp_xml:set_children(
+      #xmlel{name = 'testcase', attrs = Attrs0},
+      [Failure]
+    ),
+    New_XML = [Testcase | XML],
+    St#state{data = New_XML};
+print_test_abort(St, _Id, Desc, Reason) ->
+    io:format("~n~s (abort):~n~s~n", [Desc, format_test_error(Reason)]),
+    St.
+
+% --------------------------------------------------------------------
+% Internal functions.
+% --------------------------------------------------------------------
+
+wait(Id, St) ->
+    receive
+        {status, Id, Data} -> {Data, St}
+    end.
+
+tests([E | Es], St) ->
+    tests(Es, entry(E, St));
+tests([], St) ->
+    St.
+
+entry({item, Id, Desc, Test}, St) ->
+    test_begin(Id, Desc, Test, St);
+entry({group, Id, Desc, Es}, St) ->
+    group_begin(Id, Desc, Es, St).
+
+format_test_name(Module, Name, Line, "") ->
+    L = if
+        Line == 0 -> "";
+        true      -> io_lib:format("~b:", [Line])
+    end,
+    io_lib:format("~s:~s~s", [Module, L, Name]);
+format_test_name(erl_eval, expr, _, Desc) ->
+    Desc;
+format_test_name(Module, Name, Line, Desc) ->
+    M = format_test_name(Module, Name, Line, ""),
+    io_lib:format("~s (~s)", [M, Desc]).
+
+% Format test error.
+format_test_error({skipped, undefined}) ->
+    "skipped";
+format_test_error({skipped, timeout}) ->
+    "time out";
+format_test_error({skipped, {startup, Reason}}) ->
+    lists:flatten(io_lib:format("could not start test process:~n~P",
+        [Reason, 15]));
+format_test_error({skipped, {blame, _Sub_Id}}) ->
+    "cancelled because of subtask";
+format_test_error({skipped, {exit, Reason}}) ->
+    lists:flatten(io_lib:format("unexpected termination of test process:~n~P",
+        [Reason, 15]));
+format_test_error({skipped, {abort, Reason}}) ->
+    eunit_lib:format_error(Reason);
+format_test_error({error, {error, {Type, Props}, _}}) ->
+    Type_For_Human = case Type of
+        assertion_failed   -> "Test not true";
+        assertNot_failed   -> "Test not false";
+        assertMatch_failed -> "Value doesn't match";
+        assertThrow_failed -> "Exception doesn't match";
+        _                  -> atom_to_list(Type)
+    end,
+    Expression = proplists:get_value(expression, Props),
+    Expected = proplists:get_value(expected, Props),
+    Value = proplists:get_value(value, Props),
+    Unexpected_Exception = proplists:get_value(unexpected_exception, Props),
+    Output0 = io_lib:format(
+      "~s:~n"
+      "  Expression:~n"
+      "    ~s~n"
+      "  Expected:~n"
+      "    ~s~n",
+      [beautify_expr(Type_For_Human), beautify_expr(Expression),
+        beautify_expr(Expected)]),
+    Output1 = case Value of
+        undefined ->
+            Output0;
+        _ ->
+            Output0 ++ io_lib:format(
+              "  Value:~n"
+              "    ~s~n", [beautify_expr(Value)])
+    end,
+    Output2 = case Unexpected_Exception of
+        undefined ->
+            Output1;
+        _ ->
+            Output1 ++ io_lib:format(
+              "  Unexpected exception:~n"
+              "    ~s~n", [beautify_expr(Unexpected_Exception)])
+    end,
+    lists:flatten(Output2);
+format_test_error({error, Exception}) ->
+    eunit_lib:format_exception(Exception).
+
+%beautify_expr({Type, Exception, _Stacktrace})
+%  when Type == error; Type == throw ->
+%    atom_to_list(Type) ++ ":" ++ beautify_expr(Exception);
+beautify_expr(Expr) ->
+    Expr1 = case io_lib:deep_char_list(Expr) of
+        true  -> Expr;
+        false -> lists:flatten(io_lib:format("~p", [Expr]))
+    end,
+    Tokens = string:tokens(Expr1, ","),
+    Fun = fun(S) -> string:join(string:tokens(S, " "), "") end,
+    New_Tokens = lists:map(Fun, Tokens),
+    string:join(New_Tokens, ", ").
+
+save_parent_state(#state{mode = junit} = St) ->
+    #state{mode = St#state.mode, parent_state = St};
+save_parent_state(St) ->
+    St.
+
+restore_parent_state(#state{mode = junit, parent_state = St}) ->
+    St;
+restore_parent_state(St) ->
+    St.
+
+junit_report_filename(build, _Desc) ->
+    "exmpp-junit-build.xml";
+junit_report_filename(Id, "") when is_list(Id) ->
+    "exmpp-junit" ++ junit_report_filename2(Id, "") ++ ".xml";
+junit_report_filename(Id, Desc) when is_list(Id) ->
+    "exmpp-junit" ++ junit_report_filename2(Id, "") ++
+        escape_desc(Desc, "-", true) ++ ".xml".
+
+junit_report_filename2([I | Rest], Suffix) ->
+    junit_report_filename2(Rest, Suffix ++ "-" ++ integer_to_list(I));
+junit_report_filename2([], Suffix) ->
+    Suffix.
+
+escape_desc([C | Rest], Result, _Sep_Added) when
+  C >= $a, C =< $z;
+  C >= $A, C =< $Z;
+  C >= $0, C =< $9;
+  C == $_; C == $- ->
+    escape_desc(Rest, [C | Result], false);
+escape_desc([_C], Result, Sep_Added) ->
+    escape_desc([], Result, Sep_Added);
+escape_desc([_C | Rest], Result, false) ->
+    escape_desc(Rest, [$- | Result], true);
+escape_desc([_C | Rest], Result, true) ->
+    escape_desc(Rest, Result, true);
+escape_desc([], Result, _Sep_Added) ->
+    lists:reverse(Result).
diff -r d551623afde5 deps/exmpp/testsuite/iq.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/testsuite/iq.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,389 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+-module(iq).
+
+-include_lib("eunit/include/eunit.hrl").
+
+-include("exmpp.hrl").
+
+% --------------------------------------------------------------------
+% Data.
+% --------------------------------------------------------------------
+
+-define(PAYLOAD, #xmlel{ns = ?NS_ROSTER, name = 'query'}).
+-define(ERROR, #xmlel{ns = ?NS_JABBER_CLIENT, name = 'error', children = [
+      #xmlel{ns = ?NS_STANZA_ERRORS, name = 'bad-request'}
+    ]}).
+
+-define(IQ_1, #xmlel{
+    ns = ?NS_JABBER_CLIENT,
+    name = 'iq'
+  }).
+-define(IQ_2, #xmlel{
+    ns = ?NS_JABBER_CLIENT,
+    name = 'iq',
+    attrs = [
+      #xmlattr{name = 'from', value = <<"sender">>},
+      #xmlattr{name = 'to', value = <<"recipient">>},
+      #xmlattr{name = 'type', value = <<"get">>},
+      #xmlattr{name = 'id', value = <<"iq-2">>},
+      #xmlattr{ns = ?NS_XML, name = 'lang', value = <<"en">>}
+    ],
+    children = [
+      #xmlcdata{cdata = <<"\n  ">>},
+      ?PAYLOAD,
+      #xmlcdata{cdata = <<"\n">>}
+    ]
+  }).
+-define(IQ_3, #xmlel{
+    ns = ?NS_JABBER_CLIENT,
+    name = 'iq',
+    attrs = [
+      #xmlattr{name = 'from', value = <<"recipient">>},
+      #xmlattr{name = 'to', value = <<"sender">>},
+      #xmlattr{name = 'type', value = <<"result">>},
+      #xmlattr{name = 'id', value = <<"iq-2">>},
+      #xmlattr{ns = ?NS_XML, name = 'lang', value = <<"en">>}
+    ]
+  }).
+-define(IQ_4, #xmlel{
+    ns = ?NS_JABBER_CLIENT,
+    name = 'iq',
+    attrs = [
+      #xmlattr{name = 'from', value = <<"recipient">>},
+      #xmlattr{name = 'to', value = <<"sender">>},
+      #xmlattr{name = 'type', value = <<"result">>},
+      #xmlattr{name = 'id', value = <<"iq-2">>},
+      #xmlattr{ns = ?NS_XML, name = 'lang', value = <<"en">>}
+    ],
+    children = [?PAYLOAD]
+  }).
+-define(IQ_5, #xmlel{
+    ns = ?NS_JABBER_CLIENT,
+    name = 'iq',
+    attrs = [
+      #xmlattr{name = 'from', value = <<"recipient">>},
+      #xmlattr{name = 'to', value = <<"sender">>},
+      #xmlattr{name = 'type', value = <<"error">>},
+      #xmlattr{name = 'id', value = <<"iq-2">>},
+      #xmlattr{ns = ?NS_XML, name = 'lang', value = <<"en">>}
+    ],
+    children = [
+      ?ERROR
+    ]
+  }).
+-define(IQ_6, #xmlel{
+    ns = ?NS_JABBER_CLIENT,
+    name = 'iq',
+    attrs = [
+      #xmlattr{name = 'from', value = <<"recipient">>},
+      #xmlattr{name = 'to', value = <<"sender">>},
+      #xmlattr{name = 'type', value = <<"error">>},
+      #xmlattr{name = 'id', value = <<"iq-2">>},
+      #xmlattr{ns = ?NS_XML, name = 'lang', value = <<"en">>}
+    ],
+    children = [
+      #xmlcdata{cdata = <<"\n  ">>},
+      ?PAYLOAD,
+      #xmlcdata{cdata = <<"\n">>},
+      ?ERROR
+    ]
+  }).
+
+-define(IQ_REC_2, #iq{
+    kind = request,
+    type = 'get',
+    id = <<"iq-2">>,
+    ns = ?NS_ROSTER,
+    payload = ?PAYLOAD,
+    error = undefined,
+    lang = <<"en">>,
+    iq_ns = ?NS_JABBER_CLIENT
+  }).
+-define(IQ_REC_3, #iq{
+    kind = response,
+    type = 'result',
+    id = <<"iq-2">>,
+    lang = <<"en">>,
+    iq_ns = ?NS_JABBER_CLIENT
+  }).
+-define(IQ_REC_4, #iq{
+    kind = response,
+    type = 'result',
+    id = <<"iq-2">>,
+    lang = <<"en">>,
+    iq_ns = ?NS_JABBER_CLIENT,
+    ns = ?NS_ROSTER,
+    payload = ?PAYLOAD
+  }).
+-define(IQ_REC_5, #iq{
+    kind = response,
+    type = 'error',
+    id = <<"iq-2">>,
+    lang = <<"en">>,
+    iq_ns = ?NS_JABBER_CLIENT,
+    error = ?ERROR
+  }).
+-define(IQ_REC_6, #iq{
+    kind = response,
+    type = 'error',
+    id = <<"iq-2">>,
+    lang = <<"en">>,
+    iq_ns = ?NS_JABBER_CLIENT,
+    ns = ?NS_ROSTER,
+    payload = ?PAYLOAD,
+    error = ?ERROR
+  }).
+
+% --------------------------------------------------------------------
+% Testsuite.
+% --------------------------------------------------------------------
+
+is_iq_test_() ->
+    [
+      ?_assert(exmpp_iq:is_iq(?IQ_1)),
+      ?_assert(exmpp_iq:is_iq(?IQ_2)),
+      ?_assertNot(exmpp_iq:is_iq(?IQ_REC_2)),
+      ?_assertNot(exmpp_iq:is_iq(?PAYLOAD))
+    ].
+
+is_iq_record_test_() ->
+    [
+      ?_assertNot(exmpp_iq:is_iq_record(?IQ_1)),
+      ?_assertNot(exmpp_iq:is_iq_record(?IQ_2)),
+      ?_assert(exmpp_iq:is_iq_record(?IQ_REC_2)),
+      ?_assertNot(exmpp_iq:is_iq_record(?PAYLOAD))
+    ].
+
+iq_conversion_test_() ->
+    IQ_2 = exmpp_xml:remove_whitespaces(?IQ_2),
+    IQ_3 = exmpp_xml:remove_whitespaces(?IQ_3),
+    IQ_4 = exmpp_xml:remove_whitespaces(?IQ_4),
+    IQ_5 = exmpp_xml:remove_whitespaces(?IQ_5),
+    IQ_6 = exmpp_xml:remove_whitespaces(?IQ_6),
+    [
+      ?_assertMatch(
+        ?IQ_REC_2,
+        exmpp_iq:xmlel_to_iq(?IQ_2)),
+      ?_assertMatch(
+        IQ_2,
+        exmpp_iq:iq_to_xmlel(?IQ_REC_2, "sender", "recipient")),
+
+      ?_assertMatch(
+        ?IQ_REC_3,
+        exmpp_iq:xmlel_to_iq(?IQ_3)),
+      ?_assertMatch(
+        IQ_3,
+        exmpp_iq:iq_to_xmlel(?IQ_REC_3, "recipient", "sender")),
+      ?_assertMatch(
+        ?IQ_REC_4,
+        exmpp_iq:xmlel_to_iq(?IQ_4)),
+      ?_assertMatch(
+        IQ_4,
+        exmpp_iq:iq_to_xmlel(?IQ_REC_4, "recipient", "sender")),
+
+      ?_assertMatch(
+        ?IQ_REC_5,
+        exmpp_iq:xmlel_to_iq(?IQ_5)),
+      ?_assertMatch(
+        IQ_5,
+        exmpp_iq:iq_to_xmlel(?IQ_REC_5, "recipient", "sender")),
+      ?_assertMatch(
+        ?IQ_REC_6,
+        exmpp_iq:xmlel_to_iq(?IQ_6)),
+      ?_assertMatch(
+        IQ_6,
+        exmpp_iq:iq_to_xmlel(?IQ_REC_6, "recipient", "sender"))
+    ].
+
+type_test_() ->
+    [
+      ?_assertMatch(
+        'get',
+        exmpp_iq:get_type(?IQ_2)),
+      ?_assertMatch(
+        'get',
+        exmpp_iq:get_type(?IQ_REC_2)),
+      ?_assertMatch(
+        'set',
+        exmpp_iq:get_type(exmpp_stanza:set_type(?IQ_2, 'set'))),
+      ?_assertMatch(
+        'set',
+        exmpp_iq:get_type(exmpp_stanza:set_type(?IQ_REC_2, 'set')))
+    ].
+
+kind_test_() ->
+    [
+      ?_assertMatch(
+        request,
+        exmpp_iq:get_kind(?IQ_2)),
+      ?_assertMatch(
+        request,
+        exmpp_iq:get_kind(?IQ_REC_2)),
+      ?_assertMatch(
+        response,
+        exmpp_iq:get_kind(exmpp_stanza:set_type(?IQ_2, 'result'))),
+      ?_assertMatch(
+        response,
+        exmpp_iq:get_kind(exmpp_stanza:set_type(?IQ_REC_2, 'result')))
+    ].
+
+request_test_() ->
+    [
+      ?_assertThrow(
+        {iq, get_request, invalid_iq, ?IQ_1},
+        exmpp_iq:get_request(?IQ_1)),
+
+      ?_assertMatch(
+        ?PAYLOAD,
+        exmpp_iq:get_request(?IQ_2)),
+      ?_assertMatch(
+        ?PAYLOAD,
+        exmpp_iq:get_request(?IQ_REC_2)),
+
+      ?_assertThrow(
+        {iq, get_request, unexpected_iq, ?IQ_3},
+        exmpp_iq:get_request(?IQ_3)),
+      ?_assertThrow(
+        {iq, get_request, unexpected_iq, ?IQ_REC_3},
+        exmpp_iq:get_request(?IQ_REC_3)),
+      ?_assertThrow(
+        {iq, get_request, unexpected_iq, ?IQ_4},
+        exmpp_iq:get_request(?IQ_4)),
+      ?_assertThrow(
+        {iq, get_request, unexpected_iq, ?IQ_REC_4},
+        exmpp_iq:get_request(?IQ_REC_4)),
+
+      ?_assertMatch(
+        undefined,
+        exmpp_iq:get_request(?IQ_5)),
+      ?_assertMatch(
+        undefined,
+        exmpp_iq:get_request(?IQ_REC_5)),
+      ?_assertMatch(
+        ?PAYLOAD,
+        exmpp_iq:get_request(?IQ_6)),
+      ?_assertMatch(
+        ?PAYLOAD,
+        exmpp_iq:get_request(?IQ_REC_6))
+    ].
+
+result_test_() ->
+    [
+      ?_assertThrow(
+        {iq, get_result, invalid_iq, ?IQ_1},
+        exmpp_iq:get_result(?IQ_1)),
+
+      ?_assertThrow(
+        {iq, get_result, unexpected_iq, ?IQ_2},
+        exmpp_iq:get_result(?IQ_2)),
+      ?_assertThrow(
+        {iq, get_result, unexpected_iq, ?IQ_REC_2},
+        exmpp_iq:get_result(?IQ_REC_2)),
+
+      ?_assertMatch(
+        undefined,
+        exmpp_iq:get_result(?IQ_3)),
+      ?_assertMatch(
+        undefined,
+        exmpp_iq:get_result(?IQ_REC_3)),
+      ?_assertMatch(
+        ?PAYLOAD,
+        exmpp_iq:get_result(?IQ_4)),
+      ?_assertMatch(
+        ?PAYLOAD,
+        exmpp_iq:get_result(?IQ_REC_4)),
+
+      ?_assertThrow(
+        {iq, get_result, unexpected_iq, ?IQ_5},
+        exmpp_iq:get_result(?IQ_5)),
+      ?_assertThrow(
+        {iq, get_result, unexpected_iq, ?IQ_REC_5},
+        exmpp_iq:get_result(?IQ_REC_5)),
+      ?_assertThrow(
+        {iq, get_result, unexpected_iq, ?IQ_6},
+        exmpp_iq:get_result(?IQ_6)),
+      ?_assertThrow(
+        {iq, get_result, unexpected_iq, ?IQ_REC_6},
+        exmpp_iq:get_result(?IQ_REC_6))
+    ].
+
+payload_test_() ->
+    [
+      ?_assertThrow(
+        {iq, get_payload, invalid_iq, ?IQ_1},
+        exmpp_iq:get_payload(?IQ_1)),
+
+      ?_assertMatch(
+        ?PAYLOAD,
+        exmpp_iq:get_payload(?IQ_2)),
+      ?_assertMatch(
+        ?PAYLOAD,
+        exmpp_iq:get_payload(?IQ_REC_2)),
+
+      ?_assertMatch(
+        undefined,
+        exmpp_iq:get_payload(?IQ_3)),
+      ?_assertMatch(
+        undefined,
+        exmpp_iq:get_payload(?IQ_REC_3)),
+      ?_assertMatch(
+        ?PAYLOAD,
+        exmpp_iq:get_payload(?IQ_4)),
+      ?_assertMatch(
+        ?PAYLOAD,
+        exmpp_iq:get_payload(?IQ_REC_4)),
+
+      ?_assertMatch(
+        ?ERROR,
+        exmpp_iq:get_payload(?IQ_5)),
+      ?_assertMatch(
+        ?ERROR,
+        exmpp_iq:get_payload(?IQ_REC_5)),
+      ?_assertMatch(
+        ?ERROR,
+        exmpp_iq:get_payload(?IQ_6)),
+      ?_assertMatch(
+        ?ERROR,
+        exmpp_iq:get_payload(?IQ_REC_6))
+    ].
+
+response_test_() ->
+    [
+      ?_assertMatch(
+        ?IQ_3,
+        exmpp_iq:result(?IQ_2)),
+      ?_assertMatch(
+        ?IQ_REC_3,
+        exmpp_iq:result(?IQ_REC_2)),
+      ?_assertMatch(
+        ?IQ_4,
+        exmpp_iq:result(?IQ_2, ?PAYLOAD)),
+      ?_assertMatch(
+        ?IQ_REC_4,
+        exmpp_iq:result(?IQ_REC_2, ?PAYLOAD)),
+
+      ?_assertMatch(
+        ?IQ_5,
+        exmpp_iq:error_without_original(?IQ_2, ?ERROR)),
+      ?_assertMatch(
+        ?IQ_REC_5,
+        exmpp_iq:error_without_original(?IQ_REC_2, ?ERROR)),
+      ?_assertMatch(
+        ?IQ_6,
+        exmpp_iq:error(?IQ_2, ?ERROR)),
+      ?_assertMatch(
+        ?IQ_REC_6,
+        exmpp_iq:error(?IQ_REC_2, ?ERROR))
+    ].
diff -r d551623afde5 deps/exmpp/testsuite/jid.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/testsuite/jid.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,463 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+-module(jid).
+
+-include_lib("eunit/include/eunit.hrl").
+
+-include("exmpp.hrl").
+-include("internal/exmpp_xmpp.hrl").
+
+-define(SETUP, fun()  -> exmpp:start(), error_logger:tty(false) end).
+-define(CLEANUP, fun(_) -> application:stop(exmpp) end).
+
+-define(NODE, "n").
+-define(DOMAIN, "d").
+-define(RESOURCE, "r").
+
+-define(FJ1, #jid{
+    orig_jid = <<"John@example.org/Work">>,
+    prep_node = <<"john">>,
+    prep_domain = <<"example.org">>,
+    prep_resource = <<"Work">>
+  }).
+-define(FJ1_S, "John@example.org/Work").
+-define(FJ1_B, <<"John@example.org/Work">>).
+-define(FJ1_S_BAD1, "John" ++ [0] ++ "@example.org/Work").
+-define(FJ1_S_BAD2, "John@example.org" ++ [128] ++ "/Work").
+-define(FJ1_S_BAD3, "John@example.org/Work" ++ [0]).
+
+-define(FJ2, #jid{
+    orig_jid = <<"example2.org/Work">>,
+    prep_node = undefined,
+    prep_domain = <<"example2.org">>,
+    prep_resource = <<"Work">>
+  }).
+-define(FJ2_S, "example2.org/Work").
+-define(FJ2_B, <<"example2.org/Work">>).
+-define(FJ2_S_BAD1, "example2.org" ++ [128] ++ "/Work").
+-define(FJ2_S_BAD2, "example2.org/Work" ++ [0]).
+
+-define(BJ1, #jid{
+    orig_jid = <<"John@example.org">>,
+    prep_node = <<"john">>,
+    prep_domain = <<"example.org">>,
+    prep_resource = undefined
+  }).
+-define(BJ1_S, "John@example.org").
+-define(BJ1_B, <<"John@example.org">>).
+-define(BJ1_S_BAD1, "John" ++ [0] ++ "@example.org").
+-define(BJ1_S_BAD2, "John@example.org" ++ [128]).
+
+-define(BJ2, #jid{
+    orig_jid = <<"example2.org">>,
+    prep_node = undefined,
+    prep_domain = <<"example2.org">>,
+    prep_resource = undefined
+  }).
+-define(BJ2_S, "example2.org").
+-define(BJ2_B, <<"example2.org">>).
+-define(BJ2_S_BAD1, "example2.org" ++ [128]).
+
+-define(RES, "Work").
+-define(RES_BAD, "Work" ++ [0]).
+
+too_long_identifiers_test_() ->
+    Node_TL = string:chars($n, 1024),
+    Domain_TL = string:chars($d, 1024),
+    Resource_TL = string:chars($r, 1024),
+    JID_TL = Node_TL ++ [$@] ++ Domain_TL ++ [$/] ++ Resource_TL,
+    Node_TL_B = list_to_binary(Node_TL),
+    Domain_TL_B = list_to_binary(Domain_TL),
+    Resource_TL_B = list_to_binary(Resource_TL),
+    JID_TL_B = list_to_binary(JID_TL),
+    Tests = [
+      ?_assertThrow(
+        {jid, make, too_long, {domain, Domain_TL}},
+        exmpp_jid:make(?NODE, Domain_TL, ?RESOURCE)
+      ),
+      ?_assertThrow(
+        {jid, make, too_long, {node, Node_TL}},
+        exmpp_jid:make(Node_TL, ?DOMAIN, ?RESOURCE)
+      ),
+      ?_assertThrow(
+        {jid, make, too_long, {resource, Resource_TL}},
+        exmpp_jid:make(?NODE, ?DOMAIN, Resource_TL)
+      ),
+      ?_assertThrow(
+        {jid, parse, too_long, {jid, JID_TL}},
+        exmpp_jid:parse(JID_TL)
+      ),
+      ?_assertThrow(
+        {jid, make, too_long, {domain, Domain_TL_B}},
+        exmpp_jid:make(list_to_binary(?NODE),
+          Domain_TL_B, list_to_binary(?RESOURCE))
+      ),
+      ?_assertThrow(
+        {jid, make, too_long, {node, Node_TL_B}},
+        exmpp_jid:make(Node_TL_B,
+          list_to_binary(?DOMAIN), list_to_binary(?RESOURCE))
+      ),
+      ?_assertThrow(
+        {jid, make, too_long, {resource, Resource_TL_B}},
+        exmpp_jid:make(list_to_binary(?NODE),
+          list_to_binary(?DOMAIN), Resource_TL_B)
+      ),
+      ?_assertThrow(
+        {jid, parse, too_long, {jid, JID_TL_B}},
+        exmpp_jid:parse(JID_TL_B)
+      )
+    ],
+    {setup, ?SETUP, ?CLEANUP, Tests}.
+
+jid_creation_with_bad_syntax_test_() ->
+    Tests = [
+      ?_assertThrow(
+        {jid, parse, unexpected_end_of_string, {jid, ""}},
+        exmpp_jid:parse("")
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_node_separator, {jid, "@"}},
+        exmpp_jid:parse("@")
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_node_separator, {jid, "@Domain"}},
+        exmpp_jid:parse("@Domain")
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_node_separator, {jid, "@Domain@Domain"}},
+        exmpp_jid:parse("@Domain@Domain")
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_node_separator, {jid, "@Domain/Resource"}},
+        exmpp_jid:parse("@Domain/Resource")
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_end_of_string, {jid, "Node@"}},
+        exmpp_jid:parse("Node@")
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_node_separator, {jid, "Node@Domain@"}},
+        exmpp_jid:parse("Node@Domain@")
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_node_separator, {jid, "Node@@Domain"}},
+        exmpp_jid:parse("Node@@Domain")
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_end_of_string, {jid, "Domain/"}},
+        exmpp_jid:parse("Domain/")
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_end_of_string, {jid, "Node@Domain/"}},
+        exmpp_jid:parse("Node@Domain/")
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_node_separator, {jid, "@/"}},
+        exmpp_jid:parse("@/")
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_resource_separator, {jid, "Node@/"}},
+        exmpp_jid:parse("Node@/")
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_resource_separator, {jid, "Node@/Resource"}},
+        exmpp_jid:parse("Node@/Resource")
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_resource_separator, {jid, "/"}},
+        exmpp_jid:parse("/")
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_resource_separator, {jid, "/Resource"}},
+        exmpp_jid:parse("/Resource")
+      )
+    ],
+    TestsBinaryParsing =  [
+      ?_assertThrow(
+        {jid, parse, unexpected_end_of_string, {jid, <<>>}},
+        exmpp_jid:parse(<<>>)
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_node_separator, {jid, <<"@">>}},
+        exmpp_jid:parse(<<"@">>)
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_node_separator, {jid, <<"@Domain">>}},
+        exmpp_jid:parse(<<"@Domain">>)
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_node_separator, {jid, <<"@Domain@Domain">>}},
+        exmpp_jid:parse(<<"@Domain@Domain">>)
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_node_separator, {jid, <<"@Domain/Resource">>}},
+        exmpp_jid:parse(<<"@Domain/Resource">>)
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_end_of_string, {jid, <<"Node@">>}},
+        exmpp_jid:parse(<<"Node@">>)
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_node_separator, {jid, <<"Node@Domain@">>}},
+        exmpp_jid:parse(<<"Node@Domain@">>)
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_node_separator, {jid, <<"Node@@Domain">>}},
+        exmpp_jid:parse(<<"Node@@Domain">>)
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_end_of_string, {jid, <<"Domain/">>}},
+        exmpp_jid:parse(<<"Domain/">>)
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_end_of_string, {jid, <<"Node@Domain/">>}},
+        exmpp_jid:parse(<<"Node@Domain/">>)
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_node_separator, {jid, <<"@/">>}},
+        exmpp_jid:parse(<<"@/">>)
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_resource_separator, {jid, <<"Node@/">>}},
+        exmpp_jid:parse(<<"Node@/">>)
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_resource_separator,
+          {jid, <<"Node@/Resource">>}},
+        exmpp_jid:parse(<<"Node@/Resource">>)
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_resource_separator, {jid, <<"/">>}},
+        exmpp_jid:parse(<<"/">>)
+      ),
+      ?_assertThrow(
+        {jid, parse, unexpected_resource_separator, {jid, <<"/Resource">>}},
+        exmpp_jid:parse(<<"/Resource">>)
+      )
+    ],
+    {setup, ?SETUP, ?CLEANUP, Tests ++ TestsBinaryParsing}.
+
+jid_creation_with_bad_chars_test_() ->
+    Tests = [
+      ?_assertThrow(
+        {jid, make, invalid, _},
+        exmpp_jid:parse(?FJ1_S_BAD1)
+      ),
+      ?_assertThrow(
+        {jid, make, invalid, _},
+        exmpp_jid:parse(?FJ1_S_BAD2)
+      ),
+      ?_assertThrow(
+        {jid, make, invalid, _},
+        exmpp_jid:parse(?FJ1_S_BAD3)
+      ),
+      ?_assertThrow(
+        {jid, make, invalid, _},
+        exmpp_jid:parse(?FJ2_S_BAD1)
+      ),
+      ?_assertThrow(
+        {jid, make, invalid, _},
+        exmpp_jid:parse(?FJ2_S_BAD2)
+      ),
+      ?_assertThrow(
+        {jid, make, invalid, _},
+        exmpp_jid:parse(?BJ1_S_BAD1)
+      ),
+      ?_assertThrow(
+        {jid, make, invalid, _},
+        exmpp_jid:parse(?BJ1_S_BAD2)
+      ),
+      ?_assertThrow(
+        {jid, make, invalid, _},
+        exmpp_jid:parse(?BJ2_S_BAD1)
+      )
+    ],
+    TestsBinaryParsing = [
+      ?_assertThrow(
+        {jid, make, invalid, _},
+        exmpp_jid:parse(list_to_binary(?FJ1_S_BAD1))
+      ),
+      ?_assertThrow(
+        {jid, make, invalid, _},
+        exmpp_jid:parse(list_to_binary(?FJ1_S_BAD2))
+      ),
+      ?_assertThrow(
+        {jid, make, invalid, _},
+        exmpp_jid:parse(list_to_binary(?FJ1_S_BAD3))
+      ),
+      ?_assertThrow(
+        {jid, make, invalid, _},
+        exmpp_jid:parse(list_to_binary(?FJ2_S_BAD1))
+      ),
+      ?_assertThrow(
+        {jid, make, invalid, _},
+        exmpp_jid:parse(list_to_binary(?FJ2_S_BAD2))
+      ),
+      ?_assertThrow(
+        {jid, make, invalid, _},
+        exmpp_jid:parse(list_to_binary(?BJ1_S_BAD1))
+      ),
+      ?_assertThrow(
+        {jid, make, invalid, _},
+        exmpp_jid:parse(list_to_binary(?BJ1_S_BAD2))
+      ),
+      ?_assertThrow(
+        {jid, make, invalid, _},
+        exmpp_jid:parse(list_to_binary(?BJ2_S_BAD1))
+      )
+    ],
+    {setup, ?SETUP, ?CLEANUP, Tests ++ TestsBinaryParsing}.
+
+good_jid_creation_test_() ->
+    Tests = [
+      ?_assertMatch(?FJ1, exmpp_jid:parse(?FJ1_S)),
+      ?_assertMatch(?FJ2, exmpp_jid:parse(?FJ2_S)),
+      ?_assertMatch(?BJ1, exmpp_jid:parse(?BJ1_S)),
+      ?_assertMatch(?BJ2, exmpp_jid:parse(?BJ2_S))
+    ],
+    {setup, ?SETUP, ?CLEANUP, Tests}.
+
+jid_stringification_test_() ->
+    [
+      ?_assertMatch(?FJ1_S, exmpp_jid:to_list(?FJ1)),
+      ?_assertMatch(?FJ2_S, exmpp_jid:to_list(?FJ2)),
+      ?_assertMatch(?BJ1_S, exmpp_jid:to_list(?BJ1)),
+      ?_assertMatch(?BJ2_S, exmpp_jid:to_list(?BJ2)),
+      ?_assertMatch(?FJ1_B, exmpp_jid:to_binary(?FJ1)),
+      ?_assertMatch(?FJ2_B, exmpp_jid:to_binary(?FJ2)),
+      ?_assertMatch(?BJ1_B, exmpp_jid:to_binary(?BJ1)),
+      ?_assertMatch(?BJ2_B, exmpp_jid:to_binary(?BJ2))
+    ].
+
+jid_arg_stringification_test_() ->
+    [
+      ?_assertMatch("d", exmpp_jid:to_list(undefined, "d")),
+      ?_assertMatch("n@d", exmpp_jid:to_list("n", "d")),
+      ?_assertMatch("n@d/r", exmpp_jid:to_list("n", "d", "r")),
+      ?_assertMatch(<<"d">>, exmpp_jid:to_binary(undefined, "d")),
+      ?_assertMatch(<<"n@d">>, exmpp_jid:to_binary("n", "d")),
+      ?_assertMatch(<<"n@d/r">>, exmpp_jid:to_binary("n", "d", "r")),
+      ?_assertMatch(<<"d">>, exmpp_jid:to_binary(undefined, <<"d">>)),
+      ?_assertMatch(<<"n@d">>, exmpp_jid:to_binary(<<"n">>, <<"d">>)),
+      ?_assertMatch(<<"n@d/r">>, exmpp_jid:to_binary(<<"n">>, <<"d">>,
+          <<"r">>))
+    ].
+
+bare_jid_stringification_test_() ->
+    [
+      ?_assertMatch(?BJ1_S, exmpp_jid:bare_to_list(?FJ1)),
+      ?_assertMatch(?BJ2_S, exmpp_jid:bare_to_list(?FJ2)),
+      ?_assertMatch(?BJ1_S, exmpp_jid:bare_to_list(?BJ1)),
+      ?_assertMatch(?BJ2_S, exmpp_jid:bare_to_list(?BJ2)),
+      ?_assertMatch(?BJ1_B, exmpp_jid:bare_to_binary(?FJ1)),
+      ?_assertMatch(?BJ2_B, exmpp_jid:bare_to_binary(?FJ2)),
+      ?_assertMatch(?BJ1_B, exmpp_jid:bare_to_binary(?BJ1)),
+      ?_assertMatch(?BJ2_B, exmpp_jid:bare_to_binary(?BJ2))
+    ].
+
+jid_conversion_test_() ->
+    [
+      ?_assertMatch(?BJ1, exmpp_jid:bare(?FJ1)),
+      ?_assertMatch(?BJ1, exmpp_jid:bare(?BJ1)),
+      ?_assertMatch(?BJ2, exmpp_jid:bare(?FJ2)),
+      ?_assertMatch(?BJ2, exmpp_jid:bare(?BJ2))
+    ].
+
+bare_jid_conversion_test_() ->
+    Tests = [
+      ?_assertMatch(?FJ1, exmpp_jid:full(?FJ1, ?RES)),
+      ?_assertMatch(?FJ1, exmpp_jid:full(?BJ1, ?RES)),
+      ?_assertMatch(?FJ2, exmpp_jid:full(?FJ2, ?RES)),
+      ?_assertMatch(?FJ2, exmpp_jid:full(?BJ2, ?RES)),
+      ?_assertMatch(?FJ1, exmpp_jid:full(?FJ1, undefined)),
+      ?_assertMatch(?BJ1, exmpp_jid:full(?BJ1, undefined))
+    ],
+    {setup, ?SETUP, ?CLEANUP, Tests}.
+
+bare_jid_conversion_with_bad_resource_test_() ->
+    Resource_TL = string:chars($r, 1024),
+    Tests = [
+      ?_assertThrow(
+        {jid, convert, invalid, _},
+        exmpp_jid:full(?FJ1, ?RES_BAD)
+      ),
+      ?_assertThrow(
+        {jid, convert, too_long, _},
+        exmpp_jid:full(?FJ1, Resource_TL)
+      ),
+      ?_assertThrow(
+        {jid, convert, invalid, _},
+        exmpp_jid:full(?BJ1, ?RES_BAD)
+      ),
+      ?_assertThrow(
+        {jid, convert, too_long, _},
+        exmpp_jid:full(?BJ1, Resource_TL)
+      ),
+      ?_assertThrow(
+        {jid, convert, invalid, _},
+        exmpp_jid:full(?FJ2, ?RES_BAD)
+      ),
+      ?_assertThrow(
+        {jid, convert, too_long, _},
+        exmpp_jid:full(?FJ2, Resource_TL)
+      ),
+      ?_assertThrow(
+        {jid, convert, invalid, _},
+        exmpp_jid:full(?BJ2, ?RES_BAD)
+      ),
+      ?_assertThrow(
+        {jid, convert, too_long, _},
+        exmpp_jid:full(?BJ2, Resource_TL)
+      )
+    ],
+    {setup, ?SETUP, ?CLEANUP, Tests}.
+
+accessors_test_() ->
+    Tests = [
+      ?_assertMatch(?BJ2_S, exmpp_jid:domain_as_list(?FJ2)),
+      ?_assertMatch(?BJ2_S, exmpp_jid:prep_domain_as_list(?FJ2)),
+      ?_assertMatch(undefined, exmpp_jid:prep_node_as_list(?FJ2)),
+      ?_assertMatch(undefined, exmpp_jid:resource_as_list(?BJ1))
+    ],
+    {setup, ?SETUP, ?CLEANUP, Tests}.
+
+jid_comparison_test_() ->
+    [
+      ?_assert(exmpp_jid:compare(?FJ1, ?FJ1)),
+      ?_assertNot(exmpp_jid:compare(?FJ1, ?BJ1)),
+      ?_assert(exmpp_jid:compare(?FJ2, ?FJ2)),
+      ?_assertNot(exmpp_jid:compare(?FJ2, ?BJ2)),
+      ?_assertNot(exmpp_jid:compare(?FJ1, ?FJ2)),
+      ?_assertNot(exmpp_jid:compare(?BJ1, ?BJ2))
+    ].
+
+bare_jid_comparison_test_() ->
+    [
+      ?_assert(exmpp_jid:bare_compare(?FJ1, ?FJ1)),
+      ?_assert(exmpp_jid:bare_compare(?FJ1, ?BJ1)),
+      ?_assert(exmpp_jid:bare_compare(?FJ2, ?FJ2)),
+      ?_assert(exmpp_jid:bare_compare(?FJ2, ?BJ2)),
+      ?_assertNot(exmpp_jid:bare_compare(?FJ1, ?FJ2)),
+      ?_assertNot(exmpp_jid:bare_compare(?BJ1, ?BJ2))
+    ].
+
+domain_comparison_test_() ->
+    [
+      ?_assert(exmpp_jid:compare_domains(?FJ1, ?FJ1)),
+      ?_assert(exmpp_jid:compare_domains(?FJ1, ?BJ1)),
+      ?_assert(exmpp_jid:compare_domains(?FJ2, ?FJ2)),
+      ?_assert(exmpp_jid:compare_domains(?FJ2, ?BJ2)),
+      ?_assertNot(exmpp_jid:compare_domains(?FJ1, ?FJ2)),
+      ?_assertNot(exmpp_jid:compare_domains(?FJ1, ?BJ2))
+    ].
diff -r d551623afde5 deps/exmpp/testsuite/stanza.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/testsuite/stanza.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,154 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+-module(stanza).
+
+-include_lib("eunit/include/eunit.hrl").
+
+-include("exmpp.hrl").
+
+% --------------------------------------------------------------------
+% Data.
+% --------------------------------------------------------------------
+
+-define(MESSAGE_1, #xmlel{
+    ns = ?NS_JABBER_CLIENT,
+    name = 'message'
+  }).
+-define(MESSAGE_2, #xmlel{
+    ns = ?NS_JABBER_CLIENT,
+    name = 'message',
+    attrs = [
+      #xmlattr{name = 'from', value = <<"sender">>},
+      #xmlattr{name = 'to', value = <<"recipient">>},
+      #xmlattr{name = 'type', value = <<"chat">>},
+      #xmlattr{name = 'id', value = <<"message-2">>},
+      #xmlattr{ns = ?NS_XML, name = 'lang', value = <<"en">>}
+    ]
+  }).
+
+% --------------------------------------------------------------------
+% Testsuite.
+% --------------------------------------------------------------------
+
+sender_test_() ->
+    [
+      ?_assertMatch(
+        undefined,
+        exmpp_stanza:get_sender(?MESSAGE_1)),
+      ?_assertMatch(
+        <<"sender">>,
+        exmpp_stanza:get_sender(?MESSAGE_2)),
+      ?_assertMatch(
+        <<"new_sender">>,
+        exmpp_stanza:get_sender(
+          exmpp_stanza:set_sender(?MESSAGE_1, "new_sender"))),
+      ?_assertMatch(
+        <<"new_sender">>,
+        exmpp_stanza:get_sender(
+          exmpp_stanza:set_sender(?MESSAGE_2, "new_sender"))),
+      ?_assertMatch(
+        undefined,
+        exmpp_stanza:get_sender(
+          exmpp_stanza:remove_sender(?MESSAGE_1))),
+      ?_assertMatch(
+        undefined,
+        exmpp_stanza:get_sender(
+          exmpp_stanza:remove_sender(?MESSAGE_2)))
+    ].
+
+recipient_test_() ->
+    [
+      ?_assertMatch(
+        undefined,
+        exmpp_stanza:get_recipient(?MESSAGE_1)),
+      ?_assertMatch(
+        <<"recipient">>,
+        exmpp_stanza:get_recipient(?MESSAGE_2)),
+      ?_assertMatch(
+        <<"new_recipient">>,
+        exmpp_stanza:get_recipient(
+          exmpp_stanza:set_recipient(?MESSAGE_1, "new_recipient"))),
+      ?_assertMatch(
+        <<"new_recipient">>,
+        exmpp_stanza:get_recipient(
+          exmpp_stanza:set_recipient(?MESSAGE_2, "new_recipient"))),
+      ?_assertMatch(
+        undefined,
+        exmpp_stanza:get_recipient(
+          exmpp_stanza:remove_recipient(?MESSAGE_1))),
+      ?_assertMatch(
+        undefined,
+        exmpp_stanza:get_recipient(
+          exmpp_stanza:remove_recipient(?MESSAGE_2)))
+    ].
+
+jids_test_() ->
+    [
+      ?_assertMatch(
+        <<"new_sender">>,
+        exmpp_stanza:get_sender(exmpp_stanza:set_jids(?MESSAGE_1,
+            "new_sender", "new_recipient"))),
+      ?_assertMatch(
+        <<"new_recipient">>,
+        exmpp_stanza:get_recipient(exmpp_stanza:set_jids(?MESSAGE_1,
+            "new_sender", "new_recipient")))
+    ].
+
+id_test_() ->
+    [
+      ?_assertMatch(
+        undefined,
+        exmpp_stanza:get_id(?MESSAGE_1)),
+      ?_assertMatch(
+        <<"message-2">>,
+        exmpp_stanza:get_id(?MESSAGE_2)),
+      ?_assertMatch(
+        <<"new_message-1">>,
+        exmpp_stanza:get_id(exmpp_stanza:set_id(?MESSAGE_1, "new_message-1"))),
+      ?_assertMatch(
+        <<"new_message-2">>,
+        exmpp_stanza:get_id(exmpp_stanza:set_id(?MESSAGE_2, "new_message-2")))
+    ].
+
+type_test_() ->
+    [
+      ?_assertMatch(
+        undefined,
+        exmpp_stanza:get_type(?MESSAGE_1)),
+      ?_assertMatch(
+        <<"chat">>,
+        exmpp_stanza:get_type(?MESSAGE_2)),
+      ?_assertMatch(
+        <<"headline">>,
+        exmpp_stanza:get_type(exmpp_stanza:set_type(?MESSAGE_1, "headline"))),
+      ?_assertMatch(
+        <<"headline">>,
+        exmpp_stanza:get_type(exmpp_stanza:set_type(?MESSAGE_2, "headline")))
+    ].
+
+lang_test_() ->
+    [
+      ?_assertMatch(
+        undefined,
+        exmpp_stanza:get_lang(?MESSAGE_1)),
+      ?_assertMatch(
+        <<"en">>,
+        exmpp_stanza:get_lang(?MESSAGE_2)),
+      ?_assertMatch(
+        <<"fr">>,
+        exmpp_stanza:get_lang(exmpp_stanza:set_lang(?MESSAGE_1, "fr"))),
+      ?_assertMatch(
+        <<"fr">>,
+        exmpp_stanza:get_lang(exmpp_stanza:set_lang(?MESSAGE_2, "fr")))
+    ].
diff -r d551623afde5 deps/exmpp/testsuite/xml_attributes.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/testsuite/xml_attributes.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,489 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+-module(xml_attributes).
+
+-include_lib("eunit/include/eunit.hrl").
+
+-include("exmpp.hrl").
+
+% --------------------------------------------------------------------
+% Data.
+% --------------------------------------------------------------------
+
+-define(ATTRS1, []).
+
+-define(ATTRS2_1, [
+    {"version", "1.0"}
+  ]).
+-define(ATTRS2_2, [
+    {"version", "1.0"},
+    {"xml:lang", "fr"}
+  ]).
+
+-define(ATTRS3_1, [
+    {xmlattr, undefined, "version", <<"1.0">>}
+  ]).
+-define(ATTRS3_2, [
+    {xmlattr, undefined, "version", <<"1.0">>},
+    {xmlattr, ?NS_XML, "lang", <<"fr">>}
+  ]).
+
+-define(ATTRS4, [
+    bad_data
+  ]).
+
+-define(ELEMENT1, {xmlel,
+    undefined, [], "element",
+    ?ATTRS1,
+    []}
+).
+
+-define(ELEMENT2_1, {xmlelement,
+    "element",
+    ?ATTRS2_1,
+    []}
+).
+
+-define(ELEMENT2_2, {xmlelement,
+    "element",
+    ?ATTRS2_2,
+    []}
+).
+
+-define(ELEMENT3_1, {xmlel,
+    undefined, [], "element",
+    ?ATTRS3_1,
+    []}
+).
+
+-define(ELEMENT3_2, {xmlel,
+    undefined, [], "element",
+    ?ATTRS3_2,
+    []}
+).
+
+-define(ELEMENT4, {xmlel,
+    undefined, [], "bad_element",
+    ?ATTRS4,
+    []}
+).
+
+-define(ELEMENT5, {xmlelement,
+    "element",
+    [],
+    [
+      ?ELEMENT1
+    ]}
+).
+
+-define(ELEMENT6, {xmlel,
+    undefined, [], "element",
+    [],
+    [
+      {cdata, <<"Content 1">>}
+    ]}
+).
+
+-define(ELEMENT7, {xmlel,
+    undefined, [], "element",
+    [],
+    [
+      ?ELEMENT1,
+      {cdata, <<"Content 1">>},
+      ?ELEMENT1
+    ]}
+).
+
+% --------------------------------------------------------------------
+% Testsuite.
+% --------------------------------------------------------------------
+
+creation_test_() ->
+    [
+      ?_assertMatch(
+        {xmlattr, undefined, "name", <<>>},
+        exmpp_xml:attribute("name", <<>>)
+      ),
+      ?_assertMatch(
+        {xmlattr, "ns", "name", <<>>},
+        exmpp_xml:attribute("ns", "name", <<>>)
+      )
+    ].
+
+match_test_() ->
+    [
+      ?_assert(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute("name", <<>>), "name")),
+      ?_assert(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute('name', <<>>), 'name')),
+      ?_assert(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute("name", <<>>), 'name')),
+      ?_assert(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute('name', <<>>), "name")),
+
+      ?_assert(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute('ns', "name", <<>>), 'ns', "name")),
+      ?_assert(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute('ns', 'name', <<>>), 'ns', 'name')),
+      ?_assert(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute('ns', "name", <<>>), 'ns', 'name')),
+      ?_assert(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute('ns', 'name', <<>>), 'ns', "name")),
+
+      ?_assert(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute("ns", 'name', <<>>), "ns", 'name')),
+      ?_assert(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute('ns', 'name', <<>>), 'ns', 'name')),
+      ?_assert(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute("ns", 'name', <<>>), 'ns', 'name')),
+      ?_assert(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute('ns', 'name', <<>>), "ns", 'name')),
+
+      ?_assertNot(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute("name", <<>>), "other")),
+      ?_assertNot(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute('name', <<>>), 'other')),
+      ?_assertNot(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute("name", <<>>), 'other')),
+      ?_assertNot(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute('name', <<>>), "other")),
+
+      ?_assertNot(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute('ns', "name", <<>>), 'ns', "other")),
+      ?_assertNot(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute('ns', 'name', <<>>), 'ns', 'other')),
+      ?_assertNot(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute('ns', "name", <<>>), 'ns', 'other')),
+      ?_assertNot(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute('ns', 'name', <<>>), 'ns', "other")),
+
+      ?_assertNot(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute("ns", 'name', <<>>), "other", 'name')),
+      ?_assertNot(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute('ns', 'name', <<>>), 'other', 'name')),
+      ?_assertNot(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute("ns", 'name', <<>>), 'other', 'name')),
+      ?_assertNot(exmpp_xml:attribute_matches(
+          exmpp_xml:attribute('ns', 'name', <<>>), "other", 'name'))
+    ].
+
+get_attribute_node_from_list_test_() ->
+    [
+      ?_assertMatch(
+        undefined,
+        exmpp_xml:get_attribute_node_from_list(?ATTRS1, "xml:lang")),
+      ?_assertMatch(
+        undefined,
+        exmpp_xml:get_attribute_node_from_list(?ATTRS2_1, "xml:lang")),
+      ?_assertMatch(
+        {"xml:lang", "fr"},
+        exmpp_xml:get_attribute_node_from_list(?ATTRS2_2, "xml:lang")),
+      ?_assertMatch(
+        undefined,
+        exmpp_xml:get_attribute_node_from_list(?ATTRS3_1, "lang")),
+      ?_assertMatch(
+        {xmlattr, ?NS_XML, "lang", <<"fr">>},
+        exmpp_xml:get_attribute_node_from_list(?ATTRS3_2, "lang")),
+      ?_assertMatch(
+        undefined,
+        exmpp_xml:get_attribute_node_from_list(?ATTRS4, "lang")),
+
+      ?_assertMatch(
+        undefined,
+        exmpp_xml:get_attribute_node_from_list(?ATTRS1, ?NS_XML, "lang")),
+      ?_assertMatch(
+        undefined,
+        exmpp_xml:get_attribute_node_from_list(?ATTRS3_1, ?NS_XML, "lang")),
+      ?_assertMatch(
+        {xmlattr, ?NS_XML, "lang", <<"fr">>},
+        exmpp_xml:get_attribute_node_from_list(?ATTRS3_2, ?NS_XML, "lang")),
+      ?_assertMatch(
+        undefined,
+        exmpp_xml:get_attribute_node_from_list(?ATTRS4, ?NS_XML, "lang"))
+    ].
+
+get_attribute_node_test_() ->
+    [
+      ?_assertMatch(
+        undefined,
+        exmpp_xml:get_attribute_node(undefined, "xml:lang")),
+
+      ?_assertMatch(
+        undefined,
+        exmpp_xml:get_attribute_node(?ELEMENT1, "xml:lang")),
+      ?_assertMatch(
+        undefined,
+        exmpp_xml:get_attribute_node(?ELEMENT2_1, "xml:lang")),
+      ?_assertMatch(
+        {"xml:lang", "fr"},
+        exmpp_xml:get_attribute_node(?ELEMENT2_2, "xml:lang")),
+      ?_assertMatch(
+        undefined,
+        exmpp_xml:get_attribute_node(?ELEMENT3_1, "lang")),
+      ?_assertMatch(
+        {xmlattr, ?NS_XML, "lang", <<"fr">>},
+        exmpp_xml:get_attribute_node(?ELEMENT3_2, "lang")),
+      ?_assertMatch(
+        undefined,
+        exmpp_xml:get_attribute_node(?ELEMENT4, "lang")),
+
+      ?_assertMatch(
+        undefined,
+        exmpp_xml:get_attribute_node(undefined, ?NS_XML, "lang")),
+
+      ?_assertMatch(
+        undefined,
+        exmpp_xml:get_attribute_node(?ELEMENT1, ?NS_XML, "lang")),
+      ?_assertMatch(
+        undefined,
+        exmpp_xml:get_attribute_node(?ELEMENT3_1, ?NS_XML, "lang")),
+      ?_assertMatch(
+        {xmlattr, ?NS_XML, "lang", <<"fr">>},
+        exmpp_xml:get_attribute_node(?ELEMENT3_2, ?NS_XML, "lang")),
+      ?_assertMatch(
+        undefined,
+        exmpp_xml:get_attribute_node(?ELEMENT4, ?NS_XML, "lang"))
+    ].
+
+get_attribute_from_list_test_() ->
+    [
+      ?_assertMatch(
+        default_value,
+        exmpp_xml:get_attribute_from_list(?ATTRS1, "xml:lang",
+          default_value)),
+      ?_assertMatch(
+        default_value,
+        exmpp_xml:get_attribute_from_list(?ATTRS2_1, "xml:lang",
+          default_value)),
+      ?_assertMatch(
+        "fr",
+        exmpp_xml:get_attribute_from_list(?ATTRS2_2, "xml:lang",
+          default_value)),
+      ?_assertMatch(
+        default_value,
+        exmpp_xml:get_attribute_from_list(?ATTRS3_1, "lang",
+          default_value)),
+      ?_assertMatch(
+        <<"fr">>,
+        exmpp_xml:get_attribute_from_list(?ATTRS3_2, "lang",
+          default_value)),
+      ?_assertMatch(
+        default_value,
+        exmpp_xml:get_attribute_from_list(?ATTRS4, "lang",
+          default_value)),
+
+      ?_assertMatch(
+        default_value,
+        exmpp_xml:get_attribute_from_list(?ATTRS1, ?NS_XML, "lang",
+          default_value)),
+      ?_assertMatch(
+        default_value,
+        exmpp_xml:get_attribute_from_list(?ATTRS3_1, ?NS_XML, "lang",
+          default_value)),
+      ?_assertMatch(
+        <<"fr">>,
+        exmpp_xml:get_attribute_from_list(?ATTRS3_2, ?NS_XML, "lang",
+          default_value)),
+      ?_assertMatch(
+        default_value,
+        exmpp_xml:get_attribute_from_list(?ATTRS4, ?NS_XML, "lang",
+          default_value))
+    ].
+
+get_attribute_test_() ->
+    [
+      ?_assertMatch(
+        default_value,
+        exmpp_xml:get_attribute(undefined, "xml:lang", default_value)),
+
+      ?_assertMatch(
+        default_value,
+        exmpp_xml:get_attribute(?ELEMENT1, "xml:lang", default_value)),
+      ?_assertMatch(
+        default_value,
+        exmpp_xml:get_attribute(?ELEMENT2_1, "xml:lang", default_value)),
+      ?_assertMatch(
+        "fr",
+        exmpp_xml:get_attribute(?ELEMENT2_2, "xml:lang", default_value)),
+      ?_assertMatch(
+        default_value,
+        exmpp_xml:get_attribute(?ELEMENT3_1, "lang", default_value)),
+      ?_assertMatch(
+        <<"fr">>,
+        exmpp_xml:get_attribute(?ELEMENT3_2, "lang", default_value)),
+      ?_assertMatch(
+        default_value,
+        exmpp_xml:get_attribute(?ELEMENT4, "lang", default_value)),
+
+      ?_assertMatch(
+        default_value,
+        exmpp_xml:get_attribute(undefined, ?NS_XML, "lang", default_value)),
+
+      ?_assertMatch(
+        default_value,
+        exmpp_xml:get_attribute(?ELEMENT1, ?NS_XML, "lang", default_value)),
+      ?_assertMatch(
+        default_value,
+        exmpp_xml:get_attribute(?ELEMENT3_1, ?NS_XML, "lang", default_value)),
+      ?_assertMatch(
+        <<"fr">>,
+        exmpp_xml:get_attribute(?ELEMENT3_2, ?NS_XML, "lang", default_value)),
+      ?_assertMatch(
+        default_value,
+        exmpp_xml:get_attribute(?ELEMENT4, ?NS_XML, "lang", default_value))
+    ].
+
+has_attribute_in_list_test_() ->
+    [
+      ?_assertNot(exmpp_xml:has_attribute_in_list(?ATTRS1, "xml:lang")),
+      ?_assertNot(exmpp_xml:has_attribute_in_list(?ATTRS2_1, "xml:lang")),
+      ?_assert(exmpp_xml:has_attribute_in_list(?ATTRS2_2, "xml:lang")),
+      ?_assertNot(exmpp_xml:has_attribute_in_list(?ATTRS3_1, "lang")),
+      ?_assert(exmpp_xml:has_attribute_in_list(?ATTRS3_2, "lang")),
+      ?_assertNot(exmpp_xml:has_attribute_in_list(?ATTRS4, "lang")),
+
+      ?_assertNot(exmpp_xml:has_attribute_in_list(?ATTRS1, ?NS_XML, "lang")),
+      ?_assertNot(exmpp_xml:has_attribute_in_list(?ATTRS3_1, ?NS_XML, "lang")),
+      ?_assert(exmpp_xml:has_attribute_in_list(?ATTRS3_2, ?NS_XML, "lang")),
+      ?_assertNot(exmpp_xml:has_attribute_in_list(?ATTRS4, ?NS_XML, "lang"))
+    ].
+
+has_attribute_test_() ->
+    [
+      ?_assertNot(exmpp_xml:has_attribute(undefined, "xml:lang")),
+      ?_assertNot(exmpp_xml:has_attribute(?ELEMENT1, "xml:lang")),
+      ?_assertNot(exmpp_xml:has_attribute(?ELEMENT2_1, "xml:lang")),
+      ?_assert(exmpp_xml:has_attribute(?ELEMENT2_2, "xml:lang")),
+      ?_assertNot(exmpp_xml:has_attribute(?ELEMENT3_1, "lang")),
+      ?_assert(exmpp_xml:has_attribute(?ELEMENT3_2, "lang")),
+      ?_assertNot(exmpp_xml:has_attribute(?ELEMENT4, "lang")),
+
+      ?_assertNot(exmpp_xml:has_attribute(undefined, ?NS_XML, "lang")),
+      ?_assertNot(exmpp_xml:has_attribute(?ELEMENT1, ?NS_XML, "lang")),
+      ?_assertNot(exmpp_xml:has_attribute(?ELEMENT3_1, ?NS_XML, "lang")),
+      ?_assert(exmpp_xml:has_attribute(?ELEMENT3_2, ?NS_XML, "lang")),
+      ?_assertNot(exmpp_xml:has_attribute(?ELEMENT4, ?NS_XML, "lang"))
+    ].
+
+set_attribute_in_list_test_() ->
+    [
+      ?_assertMatch(
+        [
+          #xmlattr{name = "lang", value = <<"en">>}
+        ],
+        exmpp_xml:set_attribute_in_list(?ATTRS1, "lang", "en")),
+      ?_assertMatch(
+        [
+          {"version", "1.0"},
+          {"xml:lang","en"}
+        ],
+        exmpp_xml:set_attribute_in_list(?ATTRS2_1, "xml:lang", "en")),
+      ?_assertMatch(
+        [
+          {"version", "1.0"},
+          {"xml:lang","en"}
+        ],
+        exmpp_xml:set_attribute_in_list(?ATTRS2_2, "xml:lang", "en")),
+      ?_assertMatch(
+        [
+          #xmlattr{name = "version", value = <<"1.0">>},
+          #xmlattr{name = "lang", value = <<"en">>}
+        ],
+        exmpp_xml:set_attribute_in_list(?ATTRS3_1, "lang", "en")),
+      ?_assertMatch(
+        [
+          #xmlattr{name = "version", value = <<"1.0">>},
+          #xmlattr{ns = ?NS_XML, name = "lang", value = <<"en">>}
+        ],
+        exmpp_xml:set_attribute_in_list(?ATTRS3_2, "lang", "en")),
+      ?_assertMatch(
+        [
+          bad_data,
+          #xmlattr{name = "lang", value = <<"en">>}
+        ],
+        exmpp_xml:set_attribute_in_list(?ATTRS4, "lang", "en")),
+
+      ?_assertMatch(
+        [
+          #xmlattr{ns = ?NS_XML, name = "lang", value = <<"en">>}
+        ],
+        exmpp_xml:set_attribute_in_list(?ATTRS1, ?NS_XML, "lang", "en")),
+      ?_assertMatch(
+        [
+          #xmlattr{name = "version", value = <<"1.0">>},
+          #xmlattr{ns = ?NS_XML, name = "lang", value = <<"en">>}
+        ],
+        exmpp_xml:set_attribute_in_list(?ATTRS3_1, ?NS_XML, "lang", "en")),
+      ?_assertMatch(
+        [
+          #xmlattr{name = "version", value = <<"1.0">>},
+          #xmlattr{ns = ?NS_XML, name = "lang", value = <<"en">>}
+        ],
+        exmpp_xml:set_attribute_in_list(?ATTRS3_2, ?NS_XML, "lang", "en")),
+      ?_assertMatch(
+        [
+          #xmlattr{name = "version", value = <<"1.0">>},
+          #xmlattr{ns = ?NS_XML, name = "lang", value = <<"fr">>},
+          #xmlattr{ns = 'some_other_ns', name = "lang", value = <<"en">>}
+        ],
+        exmpp_xml:set_attribute_in_list(?ATTRS3_2,
+          'some_other_ns', "lang", "en")),
+      ?_assertMatch(
+        [
+          bad_data,
+          #xmlattr{ns = ?NS_XML, name = "lang", value = <<"en">>}
+        ],
+        exmpp_xml:set_attribute_in_list(?ATTRS4, ?NS_XML, "lang", "en"))
+    ].
+
+set_attribute_test_() ->
+    [
+      ?_assertMatch(
+        #xmlel{name = "element", attrs = [
+            #xmlattr{name = "lang", value = <<"en">>}
+          ]},
+        exmpp_xml:set_attribute(?ELEMENT1, "lang", "en")),
+      ?_assertMatch(
+        #xmlelement{name = "element", attrs = [
+            {"version", "1.0"},
+            {"xml:lang","en"}
+          ]},
+        exmpp_xml:set_attribute(?ELEMENT2_1, "xml:lang", "en")),
+      ?_assertMatch(
+        #xmlelement{name = "element", attrs = [
+            {"version", "1.0"},
+            {"xml:lang","en"}
+          ]},
+        exmpp_xml:set_attribute(?ELEMENT2_2, "xml:lang", "en")),
+      ?_assertMatch(
+        #xmlel{name = "element", attrs = [
+            #xmlattr{name = "version", value = <<"1.0">>},
+            #xmlattr{name = "lang", value = <<"en">>}
+          ]},
+        exmpp_xml:set_attribute(?ELEMENT3_1, "lang", "en")),
+      ?_assertMatch(
+        #xmlel{name = "element", attrs = [
+            #xmlattr{name = "version", value = <<"1.0">>},
+            #xmlattr{ns = ?NS_XML, name = "lang", value = <<"en">>}
+          ]},
+        exmpp_xml:set_attribute(?ELEMENT3_2, "lang", "en")),
+      ?_assertMatch(
+        #xmlel{name = "bad_element", attrs = [
+            bad_data,
+            #xmlattr{name = "lang", value = <<"en">>}
+          ]},
+        exmpp_xml:set_attribute(?ELEMENT4, "lang", "en"))
+    ].
+
+% TODO: Port the remaining tests.
diff -r d551623afde5 deps/exmpp/testsuite/xml_parser.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/deps/exmpp/testsuite/xml_parser.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,319 @@
+%% Copyright ProcessOne 2006-2010. All Rights Reserved.
+%%
+%% The contents of this file are subject to the Erlang Public License,
+%% Version 1.1, (the "License"); you may not use this file except in
+%% compliance with the License. You should have received a copy of the
+%% Erlang Public License along with this software. If not, it can be
+%% retrieved online at http://www.erlang.org/.
+%%
+%% Software distributed under the License is distributed on an "AS IS"
+%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
+%% the License for the specific language governing rights and limitations
+%% under the License.
+
+-module(xml_parser).
+
+-include_lib("eunit/include/eunit.hrl").
+
+-include("exmpp.hrl").
+
+-define(SETUP, fun()  -> exmpp:start(), error_logger:tty(false) end).
+-define(CLEANUP, fun(_) -> application:stop(exmpp) end).
+
+-define(SOURCE1, "<stream:stream xmlns:stream='ns_stream' xmlns='ns_default'><iq xml:lang='fr'>Content</iq></stream:stream>").
+
+-define(TREE1_NO_NS, [
+  {xmlelement, "stream:stream", [
+    {"xmlns:stream", "ns_stream"},
+    {"xmlns", "ns_default"}
+  ], [
+    {xmlelement, "iq", [
+      {"xml:lang", "fr"}
+    ], [
+      {xmlcdata, <<"Content">>}
+    ]}
+  ]}
+]).
+
+-define(TREE1_NO_NS_ATOM, [
+  {xmlelement, 'stream:stream', [
+    {'xmlns:stream', "ns_stream"},
+    {'xmlns', "ns_default"}
+  ], [
+    {xmlelement, 'iq', [
+      {'xml:lang', "fr"}
+    ], [
+      {xmlcdata, <<"Content">>}
+    ]}
+  ]}
+]).
+
+-define(TREE1_NS, [
+  {xmlel, "ns_stream", [{"ns_stream", "stream"}, {"ns_default", none}],
+    "stream", [], [
+    {xmlel, "ns_default", [], "iq", [
+      {xmlattr, ?NS_XML_s, "lang", <<"fr">>}
+    ], [
+      {xmlcdata, <<"Content">>}
+    ]}
+  ]}
+]).
+
+-define(TREE1_NS_ATOM, [
+  {xmlel, 'ns_stream', [{'ns_stream', "stream"}, {'ns_default', none}],
+    'stream', [], [
+    {xmlel, 'ns_default', [], 'iq', [
+      {xmlattr, ?NS_XML, 'lang', <<"fr">>}
+    ], [
+      {xmlcdata, <<"Content">>}
+    ]}
+  ]}
+]).
+
+-define(TREE1_ROOT_DEPTH, [
+  {xmlelement, "stream:stream", [
+    {"xmlns:stream", "ns_stream"},
+    {"xmlns", "ns_default"}
+  ], undefined},
+  {xmlelement, "iq", [
+    {"xml:lang", "fr"}
+  ], [
+    {xmlcdata, <<"Content">>}
+  ]}
+]).
+
+-define(TREE1_NS_ROOT_DEPTH, [
+  {xmlel, "ns_stream", [{"ns_stream", "stream"}, {"ns_default", none}],
+    "stream", [], undefined},
+  {xmlel, "ns_default", [], "iq", [
+    {xmlattr, ?NS_XML_s, "lang", <<"fr">>}
+  ], [
+    {xmlcdata, <<"Content">>}
+  ]}
+]).
+
+-define(TREE1_NS_END_EL, [
+  {xmlel, "ns_stream", [{"ns_stream", "stream"}, {"ns_default", none}],
+    "stream", [], undefined},
+  {xmlel, "ns_default", [], "iq", [
+    {xmlattr, ?NS_XML_s, "lang", <<"fr">>}
+  ], [
+    {xmlcdata, <<"Content">>}
+  ]},
+  {xmlendtag, "ns_stream", "stream"}
+]).
+
+-define(SOURCE2, "<element xmlns='unknown_ns' xmlns:stream='http://etherx.jabber.org/streams' xml:lang='fr' stream:version='1.0'/>").
+
+-define(TREE2_NS_CHECK, [
+  {xmlel, "unknown_ns",
+    [{"unknown_ns", none}, {'http://etherx.jabber.org/streams',"stream"}],
+    element, [
+    {xmlattr, ?NS_XML, lang, <<"fr">>},
+    {xmlattr, ?NS_XMPP, version, <<"1.0">>}
+  ], []}
+]).
+
+-define(SOURCE3, "<message><unknown/></message>").
+
+-define(TREE3_NS_CHECK, [
+  {xmlel, undefined, [], 'message', [], [
+      {xmlel, undefined, [], "unknown", [], []}
+  ]}
+]).
+
+-define(FRAGMENTS3, [
+  {xmlelement, "message", [], undefined},
+  {xmlelement, "unknown", [], undefined}
+]).
+
+-define(SOURCE4, "<stream version='1.0' foo='bar'/>").
+
+-define(TREE4_NS_CHECK, [
+  {xmlel, undefined, [], 'stream', [
+    {xmlattr, undefined, 'version', <<"1.0">>},
+    {xmlattr, undefined, "foo", <<"bar">>}
+  ], []}
+]).
+
+-define(CHUNK1, "").
+-define(CHUNK2, "<stream xml:lang='fr' version='1.0'>Content</strea").
+-define(CHUNK3, "m>").
+
+-define(CHUNK1_TREE, continue).
+-define(CHUNK2_TREE, continue).
+-define(CHUNK3_TREE, [
+    {xmlel, undefined, [], "stream", [
+    {xmlattr, ?NS_XML_s, "lang", <<"fr">>},
+    {xmlattr, undefined, "version", <<"1.0">>}
+  ], [
+    {xmlcdata, <<"Content">>}
+  ]}
+]).
+
+-define(BAD_SOURCE1, "<stream attr=>").
+-define(BAD_SOURCE2, "</stream>").
+
+start_stop_test_() ->
+    Tests = [
+      ?_assertMatch(ok, exmpp_xml:stop_parser(exmpp_xml:start_parser()))
+    ],
+    {setup, ?SETUP, ?CLEANUP, Tests}.
+
+unknown_options_test_() ->
+    Tests = [
+      ?_assertThrow(
+        {xml_parser, options, invalid, _Infos},
+        exmpp_xml:start_parser([bad_option])
+      ),
+      ?_assertThrow(
+        {xml_parser, options, invalid, _Infos},
+        exmpp_xml:parse_document("", [bad_option])
+      )
+    ],
+    {setup, ?SETUP, ?CLEANUP, Tests}.
+
+options_test_() ->
+    Tests = [
+      ?_assertMatch(
+        ?TREE1_NO_NS,
+        exmpp_xml:parse_document(?SOURCE1,
+          [{engine, expat_legacy}, {names_as_atom, false}])
+      ),
+      ?_assertMatch(
+        ?TREE1_NO_NS_ATOM,
+        exmpp_xml:parse_document(?SOURCE1,
+          [{engine, expat_legacy}])
+      ),
+      ?_assertMatch(
+        ?TREE1_NS,
+        exmpp_xml:parse_document(?SOURCE1,
+          [{names_as_atom, false}])
+      ),
+      ?_assertMatch(
+        ?TREE1_NS_ATOM,
+        exmpp_xml:parse_document(?SOURCE1,
+          [names_as_atom])
+      ),
+      ?_assertMatch(
+        ?TREE2_NS_CHECK,
+        exmpp_xml:parse_document(?SOURCE2,
+          [names_as_atom, {check_nss, xmpp}])
+      ),
+      ?_assertMatch(
+        ?TREE3_NS_CHECK,
+        exmpp_xml:parse_document(?SOURCE3,
+          [names_as_atom, {check_elems, xmpp}])
+      ),
+      ?_assertMatch(
+        ?TREE4_NS_CHECK,
+        exmpp_xml:parse_document(?SOURCE4,
+          [names_as_atom, {check_attrs, xmpp}])
+      ),
+      ?_assertMatch(
+        ?TREE1_NO_NS,
+        exmpp_xml:parse_document(?SOURCE1,
+          [{engine, expat_legacy}, {names_as_atom, false},
+            {max_size, length(?SOURCE1)}])
+      ),
+      ?_assertMatch(
+        ?TREE1_NO_NS,
+        exmpp_xml:parse_document(?SOURCE1,
+          [{engine, expat_legacy}, {names_as_atom, false},
+            {max_size, infinity}])
+      ),
+      ?_assertThrow(
+        {xml_parser, parsing, stanza_too_big, undefined},
+        exmpp_xml:parse_document(?SOURCE1,
+          [{max_size, length(?SOURCE1) - 1}])
+      ),
+      ?_assertMatch(
+        ?TREE1_ROOT_DEPTH,
+        exmpp_xml:parse_document(?SOURCE1,
+          [{engine, expat_legacy}, {names_as_atom, false}, {root_depth, 1}])
+      ),
+      ?_assertMatch(
+        ?TREE1_NS_ROOT_DEPTH,
+        exmpp_xml:parse_document(?SOURCE1,
+          [{names_as_atom, false},
+            {root_depth, 1}])
+      ),
+      ?_assertMatch(
+        ?TREE1_NS_END_EL,
+        exmpp_xml:parse_document(?SOURCE1,
+          [{names_as_atom, false},
+            {root_depth, 1}, emit_endtag])
+      )
+    ],
+    {setup, ?SETUP, ?CLEANUP, Tests}.
+
+chunk_by_chunk_test_() ->
+    Setup = fun() ->
+        exmpp:start(),
+        error_logger:tty(false),
+        exmpp_xml:start_parser([{names_as_atom, false}])
+    end,
+    Cleanup = fun(P) ->
+        exmpp_xml:stop_parser(P),
+        application:stop(exmpp)
+    end,
+    Inst = {with, [
+        fun(P) ->
+            ?assertMatch(?CHUNK1_TREE, exmpp_xml:parse(P, ?CHUNK1))
+        end,
+        fun(P) ->
+            ?assertMatch(?CHUNK2_TREE, exmpp_xml:parse(P, ?CHUNK2))
+        end,
+        fun(P) ->
+            ?assertMatch(?CHUNK3_TREE, exmpp_xml:parse(P, ?CHUNK3))
+        end
+    ]},
+    {setup, Setup, Cleanup, Inst}.
+
+bad_xml_test_() ->
+    Setup = fun() ->
+        exmpp:start(),
+        error_logger:tty(false),
+        exmpp_xml:start_parser()
+    end,
+    Cleanup = fun(P) ->
+        exmpp_xml:stop_parser(P),
+        application:stop(exmpp)
+    end,
+    Inst = {with, [
+        fun(P) ->
+            ?assertThrow(
+              {xml_parser, parsing, parsing_failed, _},
+              exmpp_xml:parse(P, ?BAD_SOURCE1)
+            )
+        end,
+        fun(P) ->
+            ?assertThrow(
+              {xml_parser, parsing, parsing_failed, _},
+              exmpp_xml:parse_final(P, ?BAD_SOURCE2)
+            )
+        end
+    ]},
+    {setup, Setup, Cleanup, Inst}.
+
+
+empty_uri_test_() ->
+    String = "<a xmlns='test'><b xmlns=''><c/></b></a>",
+    Expected = [{xmlel,test,[{test,none}],a,[],
+                    [{xmlel,undefined,[],b,[],
+                        [{xmlel,undefined,[],c,[],[]}]}]}],
+    Setup = fun() ->
+        exmpp:start(),
+        error_logger:tty(false),
+        exmpp_xml:start_parser()
+    end,
+    Cleanup = fun(P) ->
+        exmpp_xml:stop_parser(P),
+        application:stop(exmpp)
+    end,
+    Inst = {with, [
+        fun(P) ->
+            ?assertMatch(Expected, exmpp_xml:parse(P, String))
+        end
+    ]},
+    {setup, Setup, Cleanup, Inst}.
diff -r d551623afde5 modules/mod_pubsub/mod_pubsub.erl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/modules/mod_pubsub/mod_pubsub.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,255 @@
+%% @author Arjan Scherpenisse <arjan@scherpenisse.net>
+%% @copyright 2009 Arjan Scherpenisse
+%% @date 2010-01-31
+%% @doc Content sharing over XMPP.
+
+%% Copyright 2009 Arjan Scherpenisse
+%%
+%% Licensed under the Apache License, Version 2.0 (the "License");
+%% you may not use this file except in compliance with the License.
+%% You may obtain a copy of the License at
+%% 
+%%     http://www.apache.org/licenses/LICENSE-2.0
+%% 
+%% Unless required by applicable law or agreed to in writing, software
+%% distributed under the License is distributed on an "AS IS" BASIS,
+%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+%% See the License for the specific language governing permissions and
+%% limitations under the License.
+
+-module(mod_pubsub).
+-author("Arjan Scherpenisse <arjan@scherpenisse.net>").
+-behaviour(gen_server).
+
+-mod_title("Publish/subscribe").
+-mod_description("Provides implementation for content sharing over XMPP.").
+-mod_prio(1000).
+
+
+%% gen_server exports
+-export([init/1, handle_call/3, handle_cast/2, handle_info/2, terminate/2, code_change/3]).
+-export([start_link/1]).
+
+%% interface functions
+-export([
+]).
+
+-record(state, {context, session, jid}).
+
+-include_lib("zotonic.hrl").
+
+-include("exmpp.hrl"). 
+-include("exmpp_client.hrl").
+
+
+
+%%====================================================================
+%% API
+%%====================================================================
+%% @spec start_link(Args) -> {ok,Pid} | ignore | {error,Error}
+%% @doc Starts the server
+start_link(Args) when is_list(Args) ->
+    gen_server:start_link(?MODULE, Args, []).
+
+%%====================================================================
+%% gen_server callbacks
+%%====================================================================
+
+%% @spec init(Args) -> {ok, State} |
+%%                     {ok, State, Timeout} |
+%%                     ignore               |
+%%                     {stop, Reason}
+%% @doc Initiates the server.
+init(Args) ->
+    process_flag(trap_exit, true),
+    {context, Context} = proplists:lookup(context, Args),
+    zotonic:ensure_started(exmpp),
+    z_notifier:observe(rsc_update_done, self(), Context),
+    State = connect(#state{context=z_acl:sudo(z_context:new(Context))}),
+	{ok, State}.
+
+
+%% Description: Handling call messages
+%% @doc Trap unknown calls
+handle_call(Message, _From, State) ->
+    {stop, {unknown_call, Message}, State}.
+
+
+%% @doc Trap unknown casts
+handle_cast({{rsc_update_done, delete, Id, _, _}, _Ctx}, State) ->
+    %% Delete notification
+    ok = delete_notification(Id, State),
+    {noreply, State};
+
+handle_cast({{rsc_update_done, _, Id, _, _}, _Ctx}, State=#state{context=Context}) ->
+    case is_publishable(Id, Context) of
+        false ->
+            %% Check if has node
+            case get_pubsub_node(Id, Context) of
+                undefined ->
+                    {noreply, State};
+                _Node ->
+                    %% Unpublish
+                    ok = delete_notification(Id, State),
+                    {noreply, State}
+            end;
+        true ->
+            case get_pubsub_node(Id, Context) of
+                undefined ->
+                    ok = create_pubsub_node(Id, State),
+                    ok = publish(Id, State);
+                _ ->
+                    ok = publish(Id, State)
+            end,
+            {noreply, State}
+    end;
+
+handle_cast(Message, State) ->
+    {stop, {unknown_cast, Message}, State}.
+
+
+%% @doc Handling all non call/cast messages
+handle_info(_Info, State) ->
+    ?DEBUG(_Info),
+    {noreply, State}.
+
+%% @spec terminate(Reason, State) -> void()
+terminate(_Reason, #state{session=Session,context=Context}) ->
+    exmpp_session:stop(Session),
+    z_notifier:detach(rsc_update_done, self(), Context),
+    ?DEBUG("Stopping"),
+    ok.
+
+%% @spec code_change(OldVsn, State, Extra) -> {ok, NewState}
+code_change(_OldVsn, State, _Extra) ->
+    {ok, State}.
+
+
+%%====================================================================
+%% support functions
+%%====================================================================
+
+
+connect(State) ->
+    Session = exmpp_session:start(),
+
+    JID = exmpp_jid:parse(m_config:get_value(?MODULE, jid, State#state.context)),
+    Password = z_convert:to_list(m_config:get_value(?MODULE, password, State#state.context)),
+
+    ServerHost = z_convert:to_list(m_config:get_value(?MODULE, server_host, "localhost", State#state.context)),
+    ServerPort = z_convert:to_integer(m_config:get_value(?MODULE, server_port, "5222", State#state.context)),
+
+    exmpp_session:auth_basic_digest(Session, JID, Password),
+    %% Connect in standard TCP:
+    _StreamId = exmpp_session:connect_TCP(Session, ServerHost, ServerPort),
+    try
+        exmpp_session:login(Session),
+        exmpp_session:send_packet(Session, exmpp_presence:set_status(exmpp_presence:available(), "mod_pubsub ready.")),
+        State#state{session=Session, jid=JID}
+    catch
+        throw:{auth_error, 'not-authorized'} ->
+            z_session_manager:broadcast(#broadcast{type="error", message="Unauthorized. Will try again in 30 seconds.", title="Pubsub", stay=false}, State#state.context),
+            timer:sleep(30000),
+            connect(State)
+    end.
+
+
+%%
+%% Publish functions
+%%
+
+%% @doc Whether given rsc is publishable.
+is_publishable(Id, Context) ->
+    m_rsc:p(Id, is_authoritative, Context) andalso m_rsc:p(Id, is_published, Context).
+
+%% Return the pubsub node for this id.
+get_pubsub_node(Id, Context) ->
+    m_rsc:p(Id, pubsub_node, Context).
+
+%% @doc Set the pubsub node
+set_pubsub_node(Id, Node, Context) ->
+    m_rsc:update(Id, [{pubsub_node, Node}], Context).
+
+%% @doc Create the pubsub node for given id.
+create_pubsub_node(Id, #state{jid=JID,session=Session,context=Context}) ->
+    IQ = exmpp_client_pubsub:create_instant_node("pubsub.testsandbox"),
+    PacketId = binary_to_list(exmpp_session:send_packet(Session, exmpp_stanza:set_sender(IQ, JID))),
+    receive
+        #received_packet{id=PacketId, raw_packet=Raw} ->
+            case exmpp_iq:is_error(Raw) of
+                true -> 
+                    ?DEBUG(Raw),
+                    error;
+                _ ->
+                    %% Get the node name
+                    PubSubEl = exmpp_xml:get_element_by_ns(Raw, 'http://jabber.org/protocol/pubsub'),
+                    [Result] = exmpp_xml:get_elements(PubSubEl, 'create'),
+                    case exmpp_xml:get_attribute_as_list(Result, node, undefined) of
+                        undefined ->
+                            ?DEBUG(Raw),
+                            ?DEBUG("node not found in result!"),
+                            error;
+                        Node ->
+                            set_pubsub_node(Id, Node, Context),
+                            ok
+                    end
+            end
+    end.
+    
+
+publish(Id, #state{jid=JID,session=Session,context=Context}) ->
+    Atom = atom_convert:resource_to_atom(m_rsc_export:full(Id, Context)),
+    Entry = exmpp_xml:parse_document(Atom),
+    Node = get_pubsub_node(Id, Context),
+    ?DEBUG("PUBLISHING"),
+    ?LOG("~p - ~p~n", [Id, Node]),
+    IQ = exmpp_client_pubsub:publish("pubsub.testsandbox", Node, Entry),
+    PacketId = binary_to_list(exmpp_session:send_packet(Session, exmpp_stanza:set_sender(IQ, JID))),
+    receive
+        #received_packet{id=PacketId, raw_packet=Raw} ->
+            ?DEBUG(Raw),
+            case exmpp_iq:is_error(Raw) of
+                true -> error;
+                _ -> ok
+            end
+    end.
+
+
+delete_notification(Id, #state{jid=JID,session=Session,context=Context}) ->
+    ?DEBUG("DELETE NOTIFICATION"),
+    Node = get_pubsub_node(Id, Context),
+    IQ = exmpp_client_pubsub:delete_node("pubsub.testsandbox", Node),
+    PacketId = binary_to_list(exmpp_session:send_packet(Session, exmpp_stanza:set_sender(IQ, JID))),
+    receive
+        #received_packet{id=PacketId, raw_packet=Raw} ->
+            case exmpp_iq:is_error(Raw) of
+                true -> 
+                    ?DEBUG("Error delete"),
+                    ?DEBUG(Raw),
+                    error;
+                _ -> 
+                    set_pubsub_node(Id, undefined, Context),
+                    ?DEBUG("Delete OK"),
+                    ok
+            end
+    end.
+
+
+%%node_name(Id) ->
+%%    lists:flatten(io_lib:format("/home/testsandbox/zotonic/id-~p", [Id])).
+
+
+%% DEBUG: mod_pubsub:198  {xmlel,'jabber:client',[],iq,
+%%                         [{xmlattr,undefined,from,<<"pubsub.testsandbox">>},
+%%                          {xmlattr,undefined,to,
+%%                           <<"zotonic@testsandbox/PubSub">>},
+%%                          {xmlattr,undefined,id,<<"pubsub-396429316">>},
+%%                          {xmlattr,undefined,type,<<"result">>}],
+%%                         [{xmlel,'http://jabber.org/protocol/pubsub',
+%%                           [{'http://jabber.org/protocol/pubsub',none}],
+%%                           pubsub,[],
+%%                           [{xmlel,'http://jabber.org/protocol/pubsub',[],
+%%                             create,
+%%                             [{xmlattr,undefined,node,
+%%                               <<"/home/testsandbox/zotonic/286723704">>}],
+%%                             []}]}]}
diff -r d551623afde5 priv/sites/mediafonds
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/priv/sites/mediafonds	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,1 @@
+/home/arjan/devel/mediafonds/
\ No newline at end of file
diff -r d551623afde5 priv/sites/scherpenisse
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/priv/sites/scherpenisse	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,1 @@
+/home/arjan/devel/scherpenisse/
\ No newline at end of file
diff -r d551623afde5 src/zotonic.erl
--- a/src/zotonic.erl	Sun Jan 31 18:55:12 2010 +0100
+++ b/src/zotonic.erl	Sun Jan 31 23:15:26 2010 +0100
@@ -19,7 +19,7 @@
 
 -module(zotonic).
 -author('Marc Worrell <marc@worrell.nl>').
--export([start/0, start/1, stop/0, stop/1, update/0, update/1, run_tests/0]).
+-export([start/0, start/1, stop/0, stop/1, update/0, update/1, run_tests/0, ensure_started/1]).
 -revision("$Id$").
 
 ensure_started(App) ->
diff -r d551623afde5 start.bat
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/start.bat	Sun Jan 31 23:15:26 2010 +0100
@@ -0,0 +1,6 @@
+@echo off
+set erl="C:\Program Files\erl5.7.4\bin\erl.exe"
+set erlc="C:\Program Files\erl5.7.4\bin\erlc.exe"
+set ebin=ebin deps\mochiweb\ebin  deps\erlang-oauth\ebin deps\webmachine\ebin
+
+%erl% +P 10000000 -pa %ebin% -boot start_sasl -s zotonic
